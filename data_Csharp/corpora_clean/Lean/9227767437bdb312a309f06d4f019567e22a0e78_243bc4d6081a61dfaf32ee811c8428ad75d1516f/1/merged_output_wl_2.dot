digraph  {
n0 [cluster="QuantConnect.Configuration.Config.Initialize()", label="Entry QuantConnect.Configuration.Config.Initialize()", span="62-62"];
n1 [cluster="QuantConnect.Configuration.Config.Initialize()", label="var file = ''''", span="64-64"];
n2 [cluster="QuantConnect.Configuration.Config.Initialize()", label=_loaded, span="66-66"];
n3 [cluster="QuantConnect.Configuration.Config.Initialize()", label="return;", span="66-66"];
n4 [cluster="QuantConnect.Configuration.Config.Initialize()", label="File.Exists(_config)", span="69-69"];
n5 [cluster="QuantConnect.Configuration.Config.Initialize()", label="file = File.ReadAllText(_config)", span="71-71"];
n7 [cluster="QuantConnect.Configuration.Config.Initialize()", label="_loaded = true", span="75-75"];
n9 [cluster="System.IO.File.Exists(string)", label="Entry System.IO.File.Exists(string)", span="0-0"];
n6 [cluster="QuantConnect.Configuration.Config.Initialize()", label="_settings = JsonConvert.DeserializeObject<Dictionary<string, string>>(file)", span="72-72"];
n10 [cluster="System.IO.File.ReadAllText(string)", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
n11 [cluster="Unk.>", label="Entry Unk.>", span=""];
n8 [cluster="QuantConnect.Configuration.Config.Initialize()", label="Exit QuantConnect.Configuration.Config.Initialize()", span="62-62"];
n12 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="84-84"];
n13 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="var value = ''''", span="86-86"];
n16 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="_settings != null && _settings.ContainsKey(key)", span="91-91"];
n17 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="value = _settings[key]", span="93-93"];
n18 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="value = defaultValue", span="97-97"];
n19 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="Log.Trace(''Config.Get(): Configuration key not found. Key: '' + key + '' - Using default value: ''+ defaultValue)", span="98-98"];
n14 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="!_loaded", span="89-89"];
n15 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="Initialize()", span="89-89"];
n24 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n22 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="return value;", span="105-105"];
n20 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label=Exception, span="101-101"];
n25 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="130-130"];
n21 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="Log.Error(''Config.Get(): '' + err.Message)", span="103-103"];
n26 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
n23 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="Exit QuantConnect.Configuration.Config.Get(string, string)", span="84-84"];
n27 [cluster="QuantConnect.Configuration.Config.Set(string, string)", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="113-113"];
n28 [cluster="QuantConnect.Configuration.Config.Set(string, string)", label="_settings[key] = value", span="115-115"];
n29 [cluster="QuantConnect.Configuration.Config.Set(string, string)", label="Exit QuantConnect.Configuration.Config.Set(string, string)", span="113-113"];
n30 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="124-124"];
n31 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", label="return GetValue(key, defaultValue);", span="126-126"];
n32 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", label="Exit QuantConnect.Configuration.Config.GetBool(string, bool)", span="124-124"];
n33 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", label="Entry QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="159-159"];
n34 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="135-135"];
n35 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", label="return GetValue(key, defaultValue);", span="137-137"];
n36 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", label="Exit QuantConnect.Configuration.Config.GetInt(string, int)", span="135-135"];
n37 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", label="Entry QuantConnect.Configuration.Config.GetDouble(string, double)", span="146-146"];
n38 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", label="return GetValue(key, defaultValue);", span="148-148"];
n39 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", label="Exit QuantConnect.Configuration.Config.GetDouble(string, double)", span="146-146"];
n40 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", label="var value = Get(key)", span="162-162"];
n42 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", label="Log.Trace(''Config.GetValue(): '' + key + '' - Using default value: '' + defaultValue)", span="165-165"];
n43 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", label="return defaultValue;", span="166-166"];
n41 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", label="string.IsNullOrEmpty(value)", span="163-163"];
n46 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", label="return (T) Enum.Parse(type, value);", span="172-172"];
n47 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", label="return (T)Convert.ChangeType(value, type);", span="174-174"];
n44 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", label="var type = typeof (T)", span="169-169"];
n49 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n45 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", label="type.IsEnum", span="170-170"];
n48 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", label="Exit QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="159-159"];
n50 [cluster="System.Enum.Parse(System.Type, string)", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
n51 [cluster="System.Convert.ChangeType(object, System.Type)", label="Entry System.Convert.ChangeType(object, System.Type)", span="0-0"];
m1_24 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="DailyAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_30 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="DailyAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="124-124"];
m1_31 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="DailyAlgorithm.cs", label="return GetValue(key, defaultValue);", span="126-126"];
m1_32 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="DailyAlgorithm.cs", label="Exit QuantConnect.Configuration.Config.GetBool(string, bool)", span="124-124"];
m1_20 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="DailyAlgorithm.cs", label=Exception, span="101-101"];
m1_27 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="DailyAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="113-113"];
m1_28 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="DailyAlgorithm.cs", label="_settings[key] = value", span="115-115"];
m1_29 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="DailyAlgorithm.cs", label="Exit QuantConnect.Configuration.Config.Set(string, string)", span="113-113"];
m1_13 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="DailyAlgorithm.cs", label="var value = ''''", span="86-86"];
m1_14 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="DailyAlgorithm.cs", label="!_loaded", span="89-89"];
m1_15 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="DailyAlgorithm.cs", label="Initialize()", span="89-89"];
m1_34 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="DailyAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="135-135"];
m1_35 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="DailyAlgorithm.cs", label="return GetValue(key, defaultValue);", span="137-137"];
m1_36 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="DailyAlgorithm.cs", label="Exit QuantConnect.Configuration.Config.GetInt(string, int)", span="135-135"];
m1_26 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="DailyAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m1_11 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DailyAlgorithm.cs", label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="69-69"];
m1_33 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="DailyAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="159-159"];
m1_40 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="DailyAlgorithm.cs", label="var value = Get(key)", span="162-162"];
m1_42 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="DailyAlgorithm.cs", label="Log.Trace(''Config.GetValue(): '' + key + '' - Using default value: '' + defaultValue)", span="165-165"];
m1_43 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="DailyAlgorithm.cs", label="return defaultValue;", span="166-166"];
m1_41 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="DailyAlgorithm.cs", label="string.IsNullOrEmpty(value)", span="163-163"];
m1_46 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="DailyAlgorithm.cs", label="return (T) Enum.Parse(type, value);", span="172-172"];
m1_47 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="DailyAlgorithm.cs", label="return (T)Convert.ChangeType(value, type);", span="174-174"];
m1_44 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="DailyAlgorithm.cs", label="var type = typeof (T)", span="169-169"];
m1_45 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="DailyAlgorithm.cs", label="type.IsEnum", span="170-170"];
m1_48 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="DailyAlgorithm.cs", label="Exit QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="159-159"];
m1_50 [cluster="System.Enum.Parse(System.Type, string)", file="DailyAlgorithm.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m1_9 [cluster="System.IO.File.Exists(string)", file="DailyAlgorithm.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m1_10 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DailyAlgorithm.cs", label="return _securities.Select(security => new Signal(\r\n                security.Symbol,\r\n                _type,\r\n                _direction,\r\n                _percentChange,\r\n                _confidence,\r\n                _period\r\n            ));", span="71-78"];
m1_2 [cluster="QuantConnect.Configuration.Config.Initialize()", color=red, community=0, file="DailyAlgorithm.cs", label="0: _loaded", span="66-66"];
m1_4 [cluster="QuantConnect.Configuration.Config.Initialize()", color=green, community=0, file="DailyAlgorithm.cs", label="0: File.Exists(_config)", span="69-69"];
m1_3 [cluster="QuantConnect.Configuration.Config.Initialize()", color=red, community=0, file="DailyAlgorithm.cs", label="0: return;", span="66-66"];
m1_5 [cluster="QuantConnect.Configuration.Config.Initialize()", file="DailyAlgorithm.cs", label="file = File.ReadAllText(_config)", span="71-71"];
m1_6 [cluster="QuantConnect.Configuration.Config.Initialize()", file="DailyAlgorithm.cs", label="_settings = JsonConvert.DeserializeObject<Dictionary<string, string>>(file)", span="72-72"];
m1_7 [cluster="QuantConnect.Configuration.Config.Initialize()", file="DailyAlgorithm.cs", label="_loaded = true", span="75-75"];
m1_8 [cluster="QuantConnect.Configuration.Config.Initialize()", file="DailyAlgorithm.cs", label="Exit QuantConnect.Configuration.Config.Initialize()", span="62-62"];
m1_37 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="DailyAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.GetDouble(string, double)", span="146-146"];
m1_38 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="DailyAlgorithm.cs", label="return GetValue(key, defaultValue);", span="148-148"];
m1_39 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="DailyAlgorithm.cs", label="Exit QuantConnect.Configuration.Config.GetDouble(string, double)", span="146-146"];
m1_49 [cluster="string.IsNullOrEmpty(string)", file="DailyAlgorithm.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_25 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="DailyAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="130-130"];
m1_12 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="DailyAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="84-84"];
m1_51 [cluster="System.Convert.ChangeType(object, System.Type)", file="DailyAlgorithm.cs", label="Entry System.Convert.ChangeType(object, System.Type)", span="0-0"];
m1_16 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="DailyAlgorithm.cs", label="_settings != null && _settings.ContainsKey(key)", span="91-91"];
m1_17 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DailyAlgorithm.cs", label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="86-86"];
m1_18 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DailyAlgorithm.cs", label="NotifiedSecurityChanges.UpdateCollection(_securities, changes)", span="88-88"];
m1_19 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DailyAlgorithm.cs", label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="86-86"];
m1_22 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="DailyAlgorithm.cs", label="return value;", span="105-105"];
m1_21 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="DailyAlgorithm.cs", label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", span=""];
m1_23 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="DailyAlgorithm.cs", label="Exit QuantConnect.Configuration.Config.Get(string, string)", span="84-84"];
m1_0 [cluster="QuantConnect.Configuration.Config.Initialize()", file="DailyAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.Initialize()", span="62-62"];
m1_1 [cluster="QuantConnect.Configuration.Config.Initialize()", color=red, community=0, file="DailyAlgorithm.cs", label="0: var file = ''''", span="64-64"];
m3_0 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="35-35"];
m3_1 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="order.Type == OrderType.Limit", span="38-38"];
m3_4 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="decimal fee = security.Price * (order.Quantity < 0 ? (order.Quantity * -1) : order.Quantity) * divisor", span="46-46"];
m3_2 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return 0m;", span="40-40"];
m3_3 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="decimal divisor = 0.025m", span="44-44"];
m3_5 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return fee;", span="47-47"];
m3_6 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="35-35"];
m5_18 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m5_19 [cluster="System.IO.Path.GetExtension(string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.IO.Path.GetExtension(string)", span="0-0"];
m5_6 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.GetSolutionFolder(DTE2)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.VisualStudioPlugin.PathUtils.GetSolutionFolder(DTE2)", span="27-27"];
m5_7 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.GetSolutionFolder(DTE2)", file="InteractiveBrokersGatewayRunner.cs", label="return Path.GetDirectoryName(dte2.Solution.FullName);", span="29-29"];
m5_8 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.GetSolutionFolder(DTE2)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.VisualStudioPlugin.PathUtils.GetSolutionFolder(DTE2)", span="27-27"];
m5_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m5_0 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.PathUtils()", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.VisualStudioPlugin.PathUtils.PathUtils()", span="14-14"];
m5_1 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.PathUtils()", file="InteractiveBrokersGatewayRunner.cs", label="_extensionsDictionary[''.cs''] = Language.CSharp", span="16-16"];
m5_2 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.PathUtils()", file="InteractiveBrokersGatewayRunner.cs", label="_extensionsDictionary[''.java''] = Language.Java", span="17-17"];
m5_3 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.PathUtils()", file="InteractiveBrokersGatewayRunner.cs", label="_extensionsDictionary[''.vb''] = Language.VisualBasic", span="18-18"];
m5_4 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.PathUtils()", file="InteractiveBrokersGatewayRunner.cs", label="_extensionsDictionary[''.fs''] = Language.FSharp", span="19-19"];
m5_5 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.PathUtils()", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.VisualStudioPlugin.PathUtils.PathUtils()", span="14-14"];
m5_9 [cluster="Unk.GetDirectoryName", file="InteractiveBrokersGatewayRunner.cs", label="Entry Unk.GetDirectoryName", span=""];
m5_10 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.DetermineProjectLanguage(System.Collections.Generic.List<string>)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.VisualStudioPlugin.PathUtils.DetermineProjectLanguage(System.Collections.Generic.List<string>)", span="37-37"];
m5_11 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.DetermineProjectLanguage(System.Collections.Generic.List<string>)", file="InteractiveBrokersGatewayRunner.cs", label="var extensionsSet = new HashSet<string>()", span="39-39"];
m5_12 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.DetermineProjectLanguage(System.Collections.Generic.List<string>)", file="InteractiveBrokersGatewayRunner.cs", label=filePaths, span="40-40"];
m5_13 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.DetermineProjectLanguage(System.Collections.Generic.List<string>)", file="InteractiveBrokersGatewayRunner.cs", label="extensionsSet.Add(Path.GetExtension(filePath))", span="42-42"];
m5_14 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.DetermineProjectLanguage(System.Collections.Generic.List<string>)", file="InteractiveBrokersGatewayRunner.cs", label="extensionsSet.Count == 1 && _extensionsDictionary.ContainsKey(extensionsSet.First())", span="45-45"];
m5_15 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.DetermineProjectLanguage(System.Collections.Generic.List<string>)", file="InteractiveBrokersGatewayRunner.cs", label="return _extensionsDictionary[extensionsSet.First()];", span="47-47"];
m5_16 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.DetermineProjectLanguage(System.Collections.Generic.List<string>)", file="InteractiveBrokersGatewayRunner.cs", label="return null;", span="50-50"];
m5_17 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.DetermineProjectLanguage(System.Collections.Generic.List<string>)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.VisualStudioPlugin.PathUtils.DetermineProjectLanguage(System.Collections.Generic.List<string>)", span="37-37"];
m5_20 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m6_304 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="471-471"];
m6_241 [cluster="System.Type.GetMethods()", file="QCAlgorithm.Trading.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m6_297 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="254-254"];
m6_309 [cluster="System.Reflection.MethodBase.GetParameters()", file="QCAlgorithm.Trading.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m6_240 [cluster="object.GetType()", file="QCAlgorithm.Trading.cs", label="Entry object.GetType()", span="0-0"];
m6_266 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="80-80"];
m6_59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="247-247"];
m6_303 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="103-103"];
m6_432 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m6_9 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="QCAlgorithm.Trading.cs", label="QuantConnect.Configuration.Config.Set(''parameters'', JsonConvert.SerializeObject(intrinioCredentials))", span="46-46"];
m6_107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: algorithm.RunTimeError = err", span="377-377"];
m6_106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=Exception, span="375-375"];
m6_108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: _algorithm.Status = AlgorithmStatus.RuntimeError", span="378-378"];
m6_113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: algorithm.OnMarginCallWarning()", span="389-389"];
m6_112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: issueMarginCallWarning", span="385-385"];
m6_114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: Exception", span="391-391"];
m6_119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="nextMarginCallTime = time + marginCallFrequency", span="400-400"];
m6_115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: algorithm.RunTimeError = err", span="393-393"];
m6_116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: _algorithm.Status = AlgorithmStatus.RuntimeError", span="394-394"];
m6_98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var marginCallOrders = algorithm.Portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="357-357"];
m6_99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="marginCallOrders.Count != 0", span="358-358"];
m6_109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="379-379"];
m6_102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="executingMarginCall = true", span="366-366"];
m6_110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: Log.Error(string.Format(''AlgorithmManager.Run(): RuntimeError: {0}: '', locator) + err)", span="380-380"];
m6_111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: return;", span="381-381"];
m6_117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err)", span="395-395"];
m6_118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: return;", span="396-396"];
m6_10 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="QCAlgorithm.Trading.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.AlphaStatistics, parameters.Language)", span="49-49"];
m6_11 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="26-26"];
m6_12 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m6_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var basicTemplateFrameworkStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n                {''Total Insights Generated'', ''100''},\r\n                {''Total Insights Closed'', ''99''},\r\n                {''Total Insights Analysis Completed'', ''86''},\r\n                {''Long Insight Count'', ''100''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$167506.2210''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$26987.1134''},\r\n                {''Mean Population Estimated Insight Value'', ''$272.5971''},\r\n                {''Mean Population Direction'', ''48.8372%''},\r\n                {''Mean Population Magnitude'', ''48.8372%''},\r\n                {''Rolling Averaged Population Direction'', ''68.2411%''},\r\n                {''Rolling Averaged Population Magnitude'', ''68.2411%''},\r\n            }", span="100-134"];
m6_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''9.733%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.513''},\r\n                {''Net Profit'', ''0.119%''},\r\n                {''Sharpe Ratio'', ''1.954''},\r\n                {''Loss Rate'', ''25%''},\r\n                {''Win Rate'', ''75%''},\r\n                {''Profit-Loss Ratio'', ''1.02''},\r\n                {''Alpha'', ''-0.107''},\r\n                {''Beta'', ''15.186''},\r\n                {''Annual Standard Deviation'', ''0.031''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''1.6''},\r\n                {''Tracking Error'', ''0.031''},\r\n                {''Treynor Ratio'', ''0.004''},\r\n                {''Total Fees'', ''$34.00''},\r\n            }", span="159-180"];
m6_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.358''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.065''},\r\n                {''Beta'', ''-0.998''},\r\n                {''Annual Standard Deviation'', ''0.062''},\r\n                {''Annual Variance'', ''0.004''},\r\n                {''Information Ratio'', ''-1.679''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''0.085''},\r\n                {''Total Fees'', ''$21.00''},\r\n            }", span="182-203"];
m6_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.019''},\r\n                {''Beta'', ''-0.339''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-38.93''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.067''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="205-226"];
m6_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.973''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.68''},\r\n                {''Beta'', ''-29.799''},\r\n                {''Annual Standard Deviation'', ''0.318''},\r\n                {''Annual Variance'', ''0.101''},\r\n                {''Information Ratio'', ''-4.034''},\r\n                {''Tracking Error'', ''0.318''},\r\n                {''Treynor Ratio'', ''0.042''},\r\n                {''Total Fees'', ''$5.00''},\r\n            }", span="228-249"];
m6_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.365%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.2''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''73.725''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.183''},\r\n                {''Tracking Error'', ''0.84''},\r\n                {''Treynor Ratio'', ''0.014''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="251-272"];
m6_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.004''},\r\n                {''Beta'', ''82.594''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''6.4''},\r\n                {''Tracking Error'', ''0.141''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="274-295"];
m6_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''90''},\r\n                {''Average Win'', ''0.78%''},\r\n                {''Average Loss'', ''-0.40%''},\r\n                {''Compounding Annual Return'', ''18.626%''},\r\n                {''Drawdown'', ''4.700%''},\r\n                {''Expectancy'', ''1.071''},\r\n                {''Net Profit'', ''18.626%''},\r\n                {''Sharpe Ratio'', ''1.997''},\r\n                {''Loss Rate'', ''30%''},\r\n                {''Win Rate'', ''70%''},\r\n                {''Profit-Loss Ratio'', ''1.97''},\r\n                {''Alpha'', ''0.112''},\r\n                {''Beta'', ''2.998''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''1.768''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.057''},\r\n                {''Total Fees'', ''$240.17''},\r\n            }", span="297-318"];
m6_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''66''},\r\n                {''Average Win'', ''1.06%''},\r\n                {''Average Loss'', ''-0.50%''},\r\n                {''Compounding Annual Return'', ''18.581%''},\r\n                {''Drawdown'', ''7.100%''},\r\n                {''Expectancy'', ''0.815''},\r\n                {''Net Profit'', ''18.581%''},\r\n                {''Sharpe Ratio'', ''1.44''},\r\n                {''Loss Rate'', ''42%''},\r\n                {''Win Rate'', ''58%''},\r\n                {''Profit-Loss Ratio'', ''2.13''},\r\n                {''Alpha'', ''0.309''},\r\n                {''Beta'', ''-10.101''},\r\n                {''Annual Standard Deviation'', ''0.1''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''1.277''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.014''},\r\n                {''Total Fees'', ''$185.37''},\r\n            }", span="320-341"];
m6_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''78.067''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''10.897''},\r\n                {''Tracking Error'', ''0.078''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="343-364"];
m6_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''79.192''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.466''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="366-387"];
m6_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.267''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''0.032''},\r\n                {''Annual Standard Deviation'', ''0.027''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-1.014''},\r\n                {''Tracking Error'', ''0.027''},\r\n                {''Treynor Ratio'', ''-0.222''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="389-410"];
m6_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.299''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''0.111''},\r\n                {''Beta'', ''-3.721''},\r\n                {''Annual Standard Deviation'', ''0.124''},\r\n                {''Annual Variance'', ''0.015''},\r\n                {''Information Ratio'', ''0.137''},\r\n                {''Tracking Error'', ''0.124''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="435-456"];
m6_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="504-525"];
m6_42 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="619-640"];
m6_43 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="642-663"];
m6_47 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var basicTemplateIntrinioEconomicData = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''89''},\r\n                {''Average Win'', ''0.09%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''5.704%''},\r\n                {''Drawdown'', ''4.800%''},\r\n                {''Expectancy'', ''1.469''},\r\n                {''Net Profit'', ''24.865%''},\r\n                {''Sharpe Ratio'', ''1.143''},\r\n                {''Loss Rate'', ''70%''},\r\n                {''Win Rate'', ''30%''},\r\n                {''Profit-Loss Ratio'', ''7.23''},\r\n                {''Alpha'', ''0.065''},\r\n                {''Beta'', ''-0.522''},\r\n                {''Annual Standard Deviation'', ''0.048''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''0.74''},\r\n                {''Tracking Error'', ''0.048''},\r\n                {''Treynor Ratio'', ''-0.105''},\r\n                {''Total Fees'', ''$100.58''}\r\n            }", span="734-755"];
m6_50 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var cancelOpenOrdersRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''5.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-3.339%''},\r\n                {''Sharpe Ratio'', ''-11.206''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-8.422''},\r\n                {''Beta'', ''610.348''},\r\n                {''Annual Standard Deviation'', ''0.375''},\r\n                {''Annual Variance'', ''0.141''},\r\n                {''Information Ratio'', ''-11.243''},\r\n                {''Tracking Error'', ''0.375''},\r\n                {''Treynor Ratio'', ''-0.007''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="829-850"];
m6_55 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m6_56 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_58 [cluster="Unk.Select", file="QCAlgorithm.Trading.cs", label="Entry Unk.Select", span=""];
m6_60 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="1044-1044"];
m6_64 [cluster="Unk.SetName", file="QCAlgorithm.Trading.cs", label="Entry Unk.SetName", span=""];
m6_65 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="QCAlgorithm.Trading.cs", label="Algorithm = algorithm", span="1056-1056"];
m6_67 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="QCAlgorithm.Trading.cs", label="Language = language", span="1058-1058"];
m6_68 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="1054-1054"];
m6_71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", span="283-283"];
m6_73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", span="288-288"];
m6_77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="!algorithm.Securities.ContainsKey(security.Symbol)", span="299-299"];
m6_78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.Securities.Add(security)", span="302-302"];
m6_87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.TradeBuilder.SetMarketPrice(security.Symbol, security.Price)", span="327-327"];
m6_88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="realtime.SetTime(timeSlice.Time)", span="331-331"];
m6_89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="transactions.ProcessSynchronousEvents()", span="334-334"];
m6_90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="ProcessDelistedSymbols(algorithm, delistings)", span="337-337"];
m6_91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.Status == AlgorithmStatus.Stopped", span="340-340"];
m6_93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.RunTimeError != null", span="345-345"];
m6_95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="348-348"];
m6_101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.OnMarginCall(marginCallOrders)", span="364-364"];
m6_103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var executedTickets = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="369-369"];
m6_105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="372-372"];
m6_121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="406-406"];
m6_124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="416-416"];
m6_126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.RunTimeError = err", span="420-420"];
m6_131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Run(): {0}: Applying Dividend for {1}'', algorithm.Time, dividend.Symbol.ToString())", span="430-430"];
m6_132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.Portfolio.ApplyDividend(dividend)", span="431-431"];
m6_134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Run(): {0}: Applying Split for {1}'', algorithm.Time, split.Symbol.ToString())", span="439-439"];
m6_135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.Portfolio.ApplySplit(split)", span="440-440"];
m6_136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_liveMode || algorithm.Securities[split.Symbol].DataNormalizationMode == DataNormalizationMode.Raw", span="442-442"];
m6_137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var openOrders = transactions.GetOrderTickets(ticket => ticket.Status.IsOpen() && ticket.Symbol == split.Symbol)", span="445-445"];
m6_138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="446-446"];
m6_140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.RunTimeError = err", span="451-451"];
m6_153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.RunTimeError = err", span="483-483"];
m6_162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="methodInvoker(algorithm, dataPoint)", span="504-504"];
m6_164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.RunTimeError = err", span="510-510"];
m6_169 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="methodInvokers[typeof(Dividends)](algorithm, timeSlice.Slice.Dividends)", span="522-522"];
m6_171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="526-526"];
m6_173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="530-530"];
m6_175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.RunTimeError = err", span="535-535"];
m6_179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="HandleDelistedSymbols(algorithm, timeSlice.Slice.Delistings, delistings)", span="542-542"];
m6_184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="557-557"];
m6_186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="methodInvokers[typeof(QuoteBars)](algorithm, timeSlice.Slice.QuoteBars)", span="558-558"];
m6_188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="methodInvokers[typeof(OptionChains)](algorithm, timeSlice.Slice.OptionChains)", span="559-559"];
m6_190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="methodInvokers[typeof(Ticks)](algorithm, timeSlice.Slice.Ticks)", span="560-560"];
m6_192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.RunTimeError = err", span="564-564"];
m6_197 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.OnData(timeSlice.Slice)", span="575-575"];
m6_199 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.RunTimeError = err", span="580-580"];
m6_203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="transactions.ProcessSynchronousEvents()", span="588-588"];
m6_205 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.ProcessSynchronousEvents()", span="594-594"];
m6_208 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.OnEndOfAlgorithm()", span="604-604"];
m6_211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="609-609"];
m6_214 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.ProcessSynchronousEvents(forceProcess: true)", span="615-615"];
m6_217 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.Liquidate()", span="621-621"];
m6_218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.LogMessage(''Algorithm Liquidated'')", span="622-622"];
m6_219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="623-623"];
m6_222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.LogMessage(''Algorithm Stopped'')", span="630-630"];
m6_223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="631-631"];
m6_226 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="638-638"];
m6_227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.SendStatusUpdate(AlgorithmStatus.Deleted)", span="639-639"];
m6_228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.SendStatusUpdate(AlgorithmStatus.Completed)", span="643-643"];
m6_229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.SampleRange(algorithm.GetChartUpdates())", span="646-646"];
m6_230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="647-647"];
m6_231 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="SampleBenchmark(algorithm, results, backtestMode ? _previousTime.Date : _previousTime)", span="648-648"];
m6_233 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime, 0m)", span="653-653"];
m6_234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime,\r\n                    Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="657-658"];
m6_104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=executedTickets, span="370-370"];
m6_15 [cluster="Unk.Set", file="QCAlgorithm.Trading.cs", label="Entry Unk.Set", span=""];
m6_51 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var scheduledUniverseSelectionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''17''},\r\n                {''Average Win'', ''0.26%''},\r\n                {''Average Loss'', ''-0.11%''},\r\n                {''Compounding Annual Return'', ''26.961%''},\r\n                {''Drawdown'', ''0.700%''},\r\n                {''Expectancy'', ''1.895''},\r\n                {''Net Profit'', ''2.115%''},\r\n                {''Sharpe Ratio'', ''4.218''},\r\n                {''Loss Rate'', ''12%''},\r\n                {''Win Rate'', ''88%''},\r\n                {''Profit-Loss Ratio'', ''2.31''},\r\n                {''Alpha'', ''0.327''},\r\n                {''Beta'', ''-9.439''},\r\n                {''Annual Standard Deviation'', ''0.043''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''3.864''},\r\n                {''Tracking Error'', ''0.043''},\r\n                {''Treynor Ratio'', ''-0.019''},\r\n                {''Total Fees'', ''$0.00''},\r\n                {''Total Insights Generated'', ''54''},\r\n                {''Total Insights Closed'', ''48''},\r\n                {''Total Insights Analysis Completed'', ''46''},\r\n                {''Long Insight Count'', ''54''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$0''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$0''},\r\n                {''Mean Population Estimated Insight Value'', ''$0''},\r\n                {''Mean Population Direction'', ''43.4783%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''65.5952%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="852-886"];
m6_120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="time >= nextSettlementScanTime || (_liveMode && nextSettlementScanTime > DateTime.UtcNow)", span="404-404"];
m6_97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="bool issueMarginCallWarning", span="356-356"];
m6_100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var executingMarginCall = false", span="360-360"];
m6_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="136-157"];
m6_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="527-548"];
m6_44 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.02%''},\r\n                {''Compounding Annual Return'', ''254.082%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.018''},\r\n                {''Net Profit'', ''1.395%''},\r\n                {''Sharpe Ratio'', ''1.176''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.47''},\r\n                {''Alpha'', ''-1.18''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.813''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.244''},\r\n                {''Tracking Error'', ''0.178''},\r\n                {''Treynor Ratio'', ''0.765''},\r\n                {''Total Fees'', ''$2045.20''}\r\n            }", span="665-686"];
m6_45 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var basicTemplateCryptoAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.17%''},\r\n                {''Compounding Annual Return'', ''-99.993%''},\r\n                {''Drawdown'', ''3.800%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-2.577%''},\r\n                {''Sharpe Ratio'', ''-15.89''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-5.559''},\r\n                {''Beta'', ''333.506''},\r\n                {''Annual Standard Deviation'', ''0.205''},\r\n                {''Annual Variance'', ''0.042''},\r\n                {''Information Ratio'', ''-15.972''},\r\n                {''Tracking Error'', ''0.204''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$96.51''}\r\n            }", span="688-709"];
m6_46 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var indicatorSuiteAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''19.097%''},\r\n                {''Drawdown'', ''7.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''41.840%''},\r\n                {''Sharpe Ratio'', ''1.639''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.29''},\r\n                {''Beta'', ''-5.494''},\r\n                {''Annual Standard Deviation'', ''0.11''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''1.457''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''-0.033''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="711-732"];
m6_52 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var compositeAlphaModelFrameworkAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''288''},\r\n                {''Average Win'', ''0.07%''},\r\n                {''Average Loss'', ''-0.05%''},\r\n                {''Compounding Annual Return'', ''-95.659%''},\r\n                {''Drawdown'', ''4.100%''},\r\n                {''Expectancy'', ''-0.467''},\r\n                {''Net Profit'', ''-3.932%''},\r\n                {''Sharpe Ratio'', ''-23.357''},\r\n                {''Loss Rate'', ''79%''},\r\n                {''Win Rate'', ''21%''},\r\n                {''Profit-Loss Ratio'', ''1.51''},\r\n                {''Alpha'', ''-1.167''},\r\n                {''Beta'', ''-76.443''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''-23.448''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.026''},\r\n                {''Total Fees'', ''$1899.95''},\r\n                {''Total Insights Generated'', ''289''},\r\n                {''Total Insights Closed'', ''0''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''146''},\r\n                {''Short Insight Count'', ''143''},\r\n                {''Long/Short Ratio'', ''102.10%''},\r\n                {''Estimated Monthly Alpha Value'', ''$0''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$0''},\r\n                {''Mean Population Estimated Insight Value'', ''$0''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="888-922"];
m6_54 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CompositeAlphaModelFrameworkAlgorithm'', compositeAlphaModelFrameworkAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataSameResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataHigherResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateIntrinioEconomicData'', basicTemplateIntrinioEconomicData, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DuplicateSecurityWithBenchmarkRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''VolumeWeightedAveragePriceExecutionModelRegressionAlgorithm'', volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''StandardDeviationExecutionModelRegressionAlgorithm'', standardDeviationExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CancelOpenOrdersRegressionAlgorithm'', cancelOpenOrdersRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ScheduledUniverseSelectionModelRegressionAlgorithm'', scheduledUniverseSelectionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''PairsTradingAlphaModelFrameworkAlgorithm'', pairsTradingAlphaModelFrameworkAlgorithmStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CompositeAlphaModelFrameworkAlgorithm'', compositeAlphaModelFrameworkAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomIndicatorAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''VolumeWeightedAveragePriceExecutionModelRegressionAlgorithm'', volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''StandardDeviationExecutionModelRegressionAlgorithm'', standardDeviationExecutionModelRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ScheduledUniverseSelectionModelRegressionAlgorithm'', scheduledUniverseSelectionModelRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''PairsTradingAlphaModelFrameworkAlgorithm'', pairsTradingAlphaModelFrameworkAlgorithmStatistics, Language.Python)\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="960-1044"];
m6_94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="347-347"];
m6_96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="353-353"];
m6_127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="421-421"];
m6_141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="452-452"];
m6_154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="484-484"];
m6_165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="511-511"];
m6_176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="536-536"];
m6_193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="565-565"];
m6_200 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="581-581"];
m6_204 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_previousTime = time", span="591-591"];
m6_206 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_currentTimeStepTime = DateTime.MinValue", span="598-598"];
m6_210 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="608-608"];
m6_215 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="618-618"];
m6_220 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status == AlgorithmStatus.Stopped", span="627-627"];
m6_224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status == AlgorithmStatus.Deleted", span="635-635"];
m6_48 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''61''},\r\n                {''Average Win'', ''0.10%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''585.503%''},\r\n                {''Drawdown'', ''0.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.492%''},\r\n                {''Sharpe Ratio'', ''9.136''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''113.313''},\r\n                {''Annual Standard Deviation'', ''0.137''},\r\n                {''Annual Variance'', ''0.019''},\r\n                {''Information Ratio'', ''9.063''},\r\n                {''Tracking Error'', ''0.137''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$96.79''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$867862.6489''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$139822.3157''},\r\n                {''Mean Population Estimated Insight Value'', ''$46607.4386''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="757-791"];
m6_128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="422-422"];
m6_142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="453-453"];
m6_155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="485-485"];
m6_166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="512-512"];
m6_177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits/Delistings: '' + err)", span="537-537"];
m6_194 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="566-566"];
m6_201 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="582-582"];
m6_212 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="610-610"];
m6_39 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.239''},\r\n                {''Beta'', ''12.675''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-0.723''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''-0.001''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="550-571"];
m6_49 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var standardDeviationExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''63''},\r\n                {''Average Win'', ''0.06%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''793.499%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.840%''},\r\n                {''Sharpe Ratio'', ''10.781''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''128.815''},\r\n                {''Annual Standard Deviation'', ''0.132''},\r\n                {''Annual Variance'', ''0.017''},\r\n                {''Information Ratio'', ''10.71''},\r\n                {''Tracking Error'', ''0.132''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$76.61''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$867862.6489''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$139822.3157''},\r\n                {''Mean Population Estimated Insight Value'', ''$46607.4386''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="793-827"];
m6_129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="return;", span="423-423"];
m6_143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="return;", span="454-454"];
m6_156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="return;", span="486-486"];
m6_167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="return;", span="513-513"];
m6_178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="return;", span="538-538"];
m6_195 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="return;", span="567-567"];
m6_202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="return;", span="583-583"];
m6_213 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="return;", span="611-611"];
m6_14 [cluster="Unk.SerializeObject", file="QCAlgorithm.Trading.cs", label="Entry Unk.SerializeObject", span=""];
m6_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="77-98"];
m6_57 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="1054-1054"];
m6_61 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="1044-1044"];
m6_232 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="portfolioValue == 0m", span="651-651"];
m6_53 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var pairsTradingAlphaModelFrameworkAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''2.18%''},\r\n                {''Average Loss'', ''-1.38%''},\r\n                {''Compounding Annual Return'', ''75.646%''},\r\n                {''Drawdown'', ''0.600%''},\r\n                {''Expectancy'', ''0.290''},\r\n                {''Net Profit'', ''0.723%''},\r\n                {''Sharpe Ratio'', ''7.017''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''1.58''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''33.003''},\r\n                {''Annual Standard Deviation'', ''0.052''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0.052''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$70.58''},\r\n                {''Total Insights Generated'', ''4''},\r\n                {''Total Insights Closed'', ''4''},\r\n                {''Total Insights Analysis Completed'', ''4''},\r\n                {''Long Insight Count'', ''2''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$-1201.722''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$-193.6107''},\r\n                {''Mean Population Estimated Insight Value'', ''$-48.40268''},\r\n                {''Mean Population Direction'', ''50%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''3.8827%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="924-958"];
m6_66 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="QCAlgorithm.Trading.cs", label="Statistics = statistics", span="1057-1057"];
m6_183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="hasOnDataTradeBars && timeSlice.Slice.Bars.Count > 0", span="557-557"];
m6_185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="hasOnDataQuoteBars && timeSlice.Slice.QuoteBars.Count > 0", span="558-558"];
m6_187 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="hasOnDataOptionChains && timeSlice.Slice.OptionChains.Count > 0", span="559-559"];
m6_189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="hasOnDataTicks && timeSlice.Slice.Ticks.Count > 0", span="560-560"];
m6_168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="520-520"];
m6_170 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="524-524"];
m6_172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="528-528"];
m6_70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=hasOnDataSymbolChangedEvents, span="281-281"];
m6_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="481-502"];
m6_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'',''2''},\r\n                {''Average Win'',''0%''},\r\n                {''Average Loss'',''-0.02%''},\r\n                {''Compounding Annual Return'',''-1.242%''},\r\n                {''Drawdown'',''0.000%''},\r\n                {''Expectancy'',''-1''},\r\n                {''Net Profit'',''-0.017%''},\r\n                {''Sharpe Ratio'',''-7.099''},\r\n                {''Loss Rate'',''100%''},\r\n                {''Win Rate'',''0%''},\r\n                {''Profit-Loss Ratio'',''0''},\r\n                {''Alpha'',''-0.01''},\r\n                {''Beta'',''0''},\r\n                {''Annual Standard Deviation'',''0.001''},\r\n                {''Annual Variance'',''0''},\r\n                {''Information Ratio'',''7.126''},\r\n                {''Tracking Error'',''6.064''},\r\n                {''Treynor Ratio'',''174.306''},\r\n                {''Total Fees'',''$0.50''},\r\n            }", span="458-479"];
m6_41 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.461''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.706''},\r\n                {''Beta'', ''15.77''},\r\n                {''Annual Standard Deviation'', ''0.146''},\r\n                {''Annual Variance'', ''0.021''},\r\n                {''Information Ratio'', ''6.359''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''0.06''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="596-617"];
m6_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.23%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''5.663%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.227%''},\r\n                {''Sharpe Ratio'', ''3.26''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.069''},\r\n                {''Beta'', ''-1.255''},\r\n                {''Annual Standard Deviation'', ''0.015''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''2.07''},\r\n                {''Tracking Error'', ''0.015''},\r\n                {''Treynor Ratio'', ''-0.038''},\r\n                {''Total Fees'', ''$2.00''},\r\n            }", span="412-433"];
m6_40 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.358''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.93''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="573-594"];
m6_69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m6_72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.Slice.SymbolChangedEvents.Keys", span="285-285"];
m6_75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.SecurityChanges != SecurityChanges.None", span="295-295"];
m6_76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.SecurityChanges.AddedSecurities", span="297-297"];
m6_79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.CashBookUpdateData", span="308-308"];
m6_83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.SecuritiesUpdateData", span="318-318"];
m6_123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.SecurityChanges != SecurityChanges.None", span="412-412"];
m6_130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.Slice.Dividends.Values", span="428-428"];
m6_133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.Slice.Splits.Values", span="435-435"];
m6_144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.ConsolidatorUpdateData", span="461-461"];
m6_157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.CustomData", span="490-490"];
m6_180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.Slice.QuoteBars.Count > 0", span="550-550"];
m6_181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.Slice.QuoteBars.Where(x => x.Key.ID.SecurityType == SecurityType.Forex)", span="552-552"];
m6_182 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.Slice.Bars.Add(tradeBar.Value.Collapse())", span="554-554"];
m6_196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.Slice.HasData", span="572-572"];
m6_62 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="1044-1044"];
m6_63 [cluster="TestCaseData.cstr", file="QCAlgorithm.Trading.cs", label="Entry TestCaseData.cstr", span=""];
m6_74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="ticket.Cancel(''Open order cancelled on symbol changed event'')", span="290-290"];
m6_84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var security = update.Target", span="320-320"];
m6_85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="update.Data", span="321-321"];
m6_92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="342-342"];
m6_122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="nextSettlementScanTime = time + settlementScanFrequency", span="408-408"];
m6_125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=Exception, span="418-418"];
m6_139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=Exception, span="449-449"];
m6_152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=Exception, span="481-481"];
m6_159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="!methodInvokers.TryGetValue(update.DataType, out methodInvoker)", span="493-493"];
m6_160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="update.Data", span="500-500"];
m6_161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="update.DataType.IsInstanceOfType(dataPoint)", span="502-502"];
m6_163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=Exception, span="508-508"];
m6_174 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=Exception, span="533-533"];
m6_191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=Exception, span="562-562"];
m6_198 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=Exception, span="578-578"];
m6_207 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="601-601"];
m6_209 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=Exception, span="606-606"];
m6_216 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="620-620"];
m6_221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="629-629"];
m6_225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="637-637"];
m6_16 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", span="44-44"];
m6_150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var localTime = time.ConvertFromUtc(update.Target.ExchangeTimeZone)", span="476-476"];
m6_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="var emptyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''0''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0%''},\r\n                {''Drawdown'', ''0%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="54-75"];
m6_81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="update.Data", span="311-311"];
m6_80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var cash = update.Target", span="310-310"];
m6_146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=consolidators, span="464-464"];
m6_145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var consolidators = update.Target.Consolidators", span="463-463"];
m6_147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="update.Data", span="466-466"];
m6_148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="EndTimeIsInNativeResolution(update.Target, dataPoint.EndTime)", span="469-469"];
m6_158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="MethodInvoker methodInvoker", span="492-492"];
m6_86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="security.SetMarketPrice(data)", span="323-323"];
m6_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m6_151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="consolidator.Scan(localTime)", span="477-477"];
m6_82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="cash.Update(data)", span="313-313"];
m6_149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="consolidator.Update(dataPoint)", span="471-471"];
m6_235 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", span="135-135"];
m6_288 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
m6_427 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
m6_305 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="188-188"];
m6_416 [cluster="Unk.ToList", file="QCAlgorithm.Trading.cs", label="Entry Unk.ToList", span=""];
m6_525 [cluster="decimal.SmartRounding()", file="QCAlgorithm.Trading.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m6_302 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="220-220"];
m6_298 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="413-413"];
m6_273 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="393-393"];
m6_277 [cluster="string.Format(string, object)", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_285 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m6_419 [cluster="Unk.Any", file="QCAlgorithm.Trading.cs", label="Entry Unk.Any", span=""];
m6_515 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m6_286 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
m6_517 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m6_275 [cluster="string.Format(string, params object[])", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m6_429 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="375-375"];
m6_423 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_411 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="549-549"];
m6_316 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m6_425 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m6_422 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m6_428 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m6_265 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m6_242 [cluster="Unk.Where", file="QCAlgorithm.Trading.cs", label="Entry Unk.Where", span=""];
m6_280 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="369-369"];
m6_0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107"];
m6_1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.Trading.cs", label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return ''Algorithm took longer than 10 minutes on a single time loop.'';\r\n                }\r\n\r\n                return null;\r\n            }", span="109-117"];
m6_3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107"];
m6_7 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="return null;", span="116-116"];
m6_2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.Trading.cs", label="_liveMode = liveMode", span="118-118"];
m6_4 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="109-117"];
m6_5 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="CurrentTimeStepElapsed > _timeLoopMaximum", span="111-111"];
m6_6 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="return ''Algorithm took longer than 10 minutes on a single time loop.'';", span="113-113"];
m6_8 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="109-117"];
m6_532 [cluster="System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", span="494-494"];
m6_238 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_300 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="532-532"];
m6_283 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="596-596"];
m6_415 [cluster="Unk.Min", file="QCAlgorithm.Trading.cs", label="Entry Unk.Min", span=""];
m6_456 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="813-813"];
m6_311 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.DeclaringType == algorithm.GetType()", span="172-172"];
m6_306 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="171-171"];
m6_310 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="172-172"];
m6_312 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="172-172"];
m6_313 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="288-288"];
m6_317 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="445-445"];
m6_434 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="698-698"];
m6_438 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="707-707"];
m6_491 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Symbol == delisting.Symbol && x.Type == delisting.Type", span="908-908"];
m6_490 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="908-908"];
m6_308 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="171-171"];
m6_307 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="171-171"];
m6_314 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Status.IsOpen() && x.Symbol == symbol", span="288-288"];
m6_318 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="445-445"];
m6_320 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="552-552"];
m6_315 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="288-288"];
m6_319 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="445-445"];
m6_444 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="723-723"];
m6_447 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="725-725"];
m6_450 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="725-725"];
m6_453 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="726-726"];
m6_436 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="698-698"];
m6_435 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Value.Configuration.Resolution.ToTimeSpan()", span="698-698"];
m6_441 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="708-708"];
m6_440 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="707-707"];
m6_439 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="!x.IsInternalFeed", span="707-707"];
m6_492 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="908-908"];
m6_322 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="552-552"];
m6_321 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Key.ID.SecurityType == SecurityType.Forex", span="552-552"];
m6_446 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="723-723"];
m6_445 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.FillForwardResolution.HasValue", span="723-723"];
m6_449 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="725-725"];
m6_448 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.FillForwardResolution.HasValue", span="725-725"];
m6_452 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="725-725"];
m6_451 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.FillForwardResolution.Value", span="725-725"];
m6_455 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="726-726"];
m6_454 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.FillForwardResolution.HasValue", span="726-726"];
m6_443 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="708-708"];
m6_442 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Resolution", span="708-708"];
m6_457 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label=x, span="813-813"];
m6_458 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="813-813"];
m6_472 [cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38"];
m6_267 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
m6_430 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="543-543"];
m6_514 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m6_526 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="172-172"];
m6_278 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="398-398"];
m6_284 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="616-616"];
m6_248 [cluster="Unk.Add", file="QCAlgorithm.Trading.cs", label="Entry Unk.Add", span=""];
m6_260 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="448-448"];
m6_254 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="977-977"];
m6_521 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="987-987"];
m6_518 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Trading.cs", label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="982-982"];
m6_520 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Trading.cs", label="algorithm.RunTimeError = err", span="986-986"];
m6_522 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Trading.cs", label="Log.Error(err)", span="988-988"];
m6_519 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Trading.cs", label=Exception, span="984-984"];
m6_523 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="977-977"];
m6_259 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", span="59-59"];
m6_257 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="164-164"];
m6_264 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m6_256 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="156-156"];
m6_421 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
m6_426 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m6_287 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="995-995"];
m6_527 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="QCAlgorithm.Trading.cs", label="config.Increment == TimeSpan.Zero", span="997-997"];
m6_529 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="QCAlgorithm.Trading.cs", label="var roundedDataPointEndTime = dataPointEndTime.RoundDownInTimeZone(config.Increment, config.ExchangeTimeZone, config.DataTimeZone)", span="1002-1002"];
m6_530 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="QCAlgorithm.Trading.cs", label="return dataPointEndTime == roundedDataPointEndTime;", span="1003-1003"];
m6_528 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="QCAlgorithm.Trading.cs", label="return true;", span="999-999"];
m6_531 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="995-995"];
m6_295 [cluster="Unk.Collapse", file="QCAlgorithm.Trading.cs", label="Entry Unk.Collapse", span=""];
m6_296 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="363-363"];
m6_299 [cluster="System.Exception.Exception(string, System.Exception)", file="QCAlgorithm.Trading.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m6_301 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="121-121"];
m6_413 [cluster="Unk.Select", file="QCAlgorithm.Trading.cs", label="Entry Unk.Select", span=""];
m6_262 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
m6_289 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m6_433 [cluster="Unk.Subtract", file="QCAlgorithm.Trading.cs", label="Entry Unk.Subtract", span=""];
m6_291 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m6_271 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="928-928"];
m6_493 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="var i = delistings.Count - 1", span="930-930"];
m6_495 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="var security = algorithm.Securities[delistings[i].Symbol]", span="933-933"];
m6_497 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="var delistingTime = delistings[i].Time", span="937-937"];
m6_503 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="var underlying = algorithm.Securities[security.Symbol.Underlying]", span="948-948"];
m6_506 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option exercise on expiration'')", span="953-954"];
m6_507 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option assignment on expiration'')", span="958-959"];
m6_508 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="964-965"];
m6_509 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="algorithm.Transactions.ProcessRequest(request)", span="968-968"];
m6_510 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="delistings.RemoveAt(i)", span="970-970"];
m6_494 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="i >= 0", span="930-930"];
m6_511 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="i--", span="930-930"];
m6_496 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="security.Holdings.Quantity == 0", span="934-934"];
m6_498 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="var nextMarketOpen = security.Exchange.Hours.GetNextMarketOpen(delistingTime, false)", span="938-938"];
m6_499 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(nextMarketOpen, false)", span="939-939"];
m6_500 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="security.LocalTime < nextMarketClose", span="941-941"];
m6_502 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="security.Type == SecurityType.Option", span="946-946"];
m6_504 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="var option = (Option)security", span="949-949"];
m6_505 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="security.Holdings.Quantity > 0", span="951-951"];
m6_501 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="SubmitOrderRequest request", span="944-944"];
m6_512 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="928-928"];
m6_258 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", span="109-109"];
m6_293 [cluster="Unk.methodInvoker", file="QCAlgorithm.Trading.cs", label="Entry Unk.methodInvoker", span=""];
m6_263 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="264-264"];
m6_424 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
m6_281 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m6_513 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", span="205-205"];
m6_239 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="886-886"];
m6_473 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Trading.cs", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="888-888"];
m6_475 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Trading.cs", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="891-891"];
m6_477 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Trading.cs", label="return false;", span="894-894"];
m6_476 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Trading.cs", label="return true;", span="892-892"];
m6_474 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Trading.cs", label="newSplitMethodInfo != null", span="889-889"];
m6_478 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="886-886"];
m6_253 [cluster="QuantConnect.Lean.Engine.Server.ILeanManager.Update()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.Server.ILeanManager.Update()", span="46-46"];
m6_272 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="542-542"];
m6_246 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Trading.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m6_471 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
m6_261 [cluster="Unk.]", file="QCAlgorithm.Trading.cs", label="Entry Unk.]", span=""];
m6_247 [cluster="Unk.DelegateForCallMethod", file="QCAlgorithm.Trading.cs", label="Entry Unk.DelegateForCallMethod", span=""];
m6_431 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m6_250 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="678-678"];
m6_332 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="ProcessVolatilityHistoryRequirements(algorithm)", span="687-687"];
m6_375 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_previousTime = timeSlice.Time", span="770-770"];
m6_391 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="_previousTime = timeSlice.Time", span="803-803"];
m6_380 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="779-779"];
m6_407 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="845-845"];
m6_328 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="bool setStartTime = false", span="680-680"];
m6_371 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="yield break;", span="762-762"];
m6_381 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="yield return timeSlice;", span="781-781"];
m6_408 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="yield return timeSlice;", span="848-848"];
m6_329 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var timeZone = algorithm.TimeZone", span="681-681"];
m6_330 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var history = algorithm.HistoryProvider", span="682-682"];
m6_331 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.LiveMode", span="685-685"];
m6_334 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="692-692"];
m6_337 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="697-700"];
m6_340 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="707-707"];
m6_344 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="712-712"];
m6_359 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var security = algorithm.Securities[symbol]", span="748-748"];
m6_367 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="756-756"];
m6_370 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.RunTimeError = err", span="761-761"];
m6_376 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.Debug(''Algorithm warming up...'')", span="771-771"];
m6_383 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="!algorithm.LiveMode || historyRequests.Count == 0", span="788-788"];
m6_384 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.SetFinishedWarmingUp()", span="790-790"];
m6_386 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.Debug(''Algorithm finished warming up.'')", span="793-793"];
m6_388 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=feed, span="798-798"];
m6_392 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.LiveMode && algorithm.IsWarmingUp", span="805-805"];
m6_396 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="816-816"];
m6_401 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.SetFinishedWarmingUp()", span="835-835"];
m6_402 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="algorithm.Debug(''Algorithm finished warming up.'')", span="836-836"];
m6_394 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var hasHistoricalData = false", span="812-812"];
m6_333 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="DateTime? lastHistoryTimeUtc = null", span="691-691"];
m6_374 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="setStartTime = true", span="769-769"];
m6_390 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="setStartTime = true", span="802-802"];
m6_379 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="778-778"];
m6_406 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="844-844"];
m6_373 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="!setStartTime", span="767-767"];
m6_389 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="!setStartTime", span="800-800"];
m6_372 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice != null", span="765-765"];
m6_377 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="DateTime.UtcNow > nextStatusTime", span="773-773"];
m6_382 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="lastHistoryTimeUtc = timeSlice.Time", span="782-782"];
m6_404 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="DateTime.UtcNow > nextStatusTime", span="839-839"];
m6_403 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="837-837"];
m6_355 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="history.GetHistory(historyRequests, timeZone)", span="739-739"];
m6_335 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var start = DateTime.UtcNow.Ticks", span="695-695"];
m6_339 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="historyRequests.Count != 0", span="704-704"];
m6_342 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=historyRequests, span="709-709"];
m6_348 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="723-723"];
m6_349 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="725-725"];
m6_350 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="726-726"];
m6_352 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=historyRequests, span="732-732"];
m6_385 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="historyRequests.Count != 0", span="791-791"];
m6_336 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="696-696"];
m6_338 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="702-702"];
m6_341 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="708-708"];
m6_343 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Security security", span="711-711"];
m6_345 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="request.Resolution < minResolution", span="714-714"];
m6_358 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="slice.Keys", span="746-746"];
m6_360 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var data = slice[symbol]", span="749-749"];
m6_366 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="paired.Add(new DataFeedPacket(security, security.Subscriptions.First(), list))", span="754-754"];
m6_357 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var paired = new List<DataFeedPacket>()", span="745-745"];
m6_368 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=Exception, span="758-758"];
m6_369 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Error(err)", span="760-760"];
m6_387 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="794-794"];
m6_398 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label=hasHistoricalData, span="822-822"];
m6_395 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="813-813"];
m6_400 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="833-833"];
m6_393 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="lastHistoryTimeUtc.HasValue", span="809-809"];
m6_397 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="hasHistoricalData = true", span="818-818"];
m6_354 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="735-735"];
m6_353 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="734-734"];
m6_378 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="777-777"];
m6_405 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="843-843"];
m6_356 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="TimeSlice timeSlice", span="741-741"];
m6_347 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="717-717"];
m6_346 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="request.Resolution = minResolution", span="716-716"];
m6_351 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="request.FillForwardResolution = minResolution", span="728-728"];
m6_361 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var list = new List<BaseData>()", span="750-750"];
m6_362 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="var ticks = data as List<Tick>", span="751-751"];
m6_365 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="list.Add(data)", span="753-753"];
m6_364 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="list.AddRange(ticks)", span="752-752"];
m6_399 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="lastHistoryTimeUtc = null", span="828-828"];
m6_363 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="ticks != null", span="752-752"];
m6_409 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="678-678"];
m6_243 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.Trading.cs", label="Entry Unk.FirstOrDefault", span=""];
m6_282 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
m6_524 [cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29"];
m6_470 [cluster="QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="46-46"];
m6_255 [cluster="System.Math.Round(decimal, int)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m6_418 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m6_516 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129"];
m6_274 [cluster="QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="43-43"];
m6_410 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="852-852"];
m6_459 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.ProcessVolatilityHistoryRequirements(): Updating volatility models with historical data...'')", span="854-854"];
m6_460 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="algorithm.Securities.Values", span="856-856"];
m6_462 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="var historyReq = security.VolatilityModel.GetHistoryRequirements(security, algorithm.UtcTime)", span="860-860"];
m6_463 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="historyReq != null && algorithm.HistoryProvider != null", span="862-862"];
m6_464 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="var history = algorithm.HistoryProvider.GetHistory(historyReq, algorithm.TimeZone)", span="864-864"];
m6_461 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="security.VolatilityModel != VolatilityModel.Null", span="858-858"];
m6_465 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="history != null", span="865-865"];
m6_466 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label=history, span="867-867"];
m6_467 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="slice.Bars.ContainsKey(security.Symbol)", span="869-869"];
m6_468 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="security.VolatilityModel.Update(security, slice.Bars[security.Symbol])", span="870-870"];
m6_469 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="852-852"];
m6_323 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="665-665"];
m6_324 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Trading.cs", label=_lock, span="667-667"];
m6_326 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Trading.cs", label="_algorithm.Status = state", span="673-673"];
m6_325 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Trading.cs", label="state != AlgorithmStatus.Running", span="671-671"];
m6_327 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="665-665"];
m6_290 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
m6_251 [cluster="string.Format(string, object, object)", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_294 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="901-901"];
m6_479 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="newDelistings.Values", span="903-903"];
m6_481 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="!delistings.Any(x => x.Symbol == delisting.Symbol && x.Type == delisting.Type)", span="908-908"];
m6_482 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="delistings.Add(delisting)", span="910-910"];
m6_485 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="917-917"];
m6_483 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.Value)", span="911-911"];
m6_486 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label=cancelledOrders, span="918-918"];
m6_480 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="delisting.Type == DelistingType.Warning", span="906-906"];
m6_484 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.Value)", span="916-916"];
m6_487 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="920-920"];
m6_488 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="901-901"];
m6_437 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m6_269 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53"];
m6_245 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_252 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m6_237 [cluster="System.TimeSpan.FromMinutes(double)", file="QCAlgorithm.Trading.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m6_268 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="49-49"];
m6_276 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="387-387"];
m6_279 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="824-824"];
m6_417 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m6_270 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="75-75"];
m6_412 [cluster="System.DateTime.AddSeconds(double)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m6_420 [cluster="System.Math.Min(long, long)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m6_236 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_244 [cluster="System.Type.GetMethod(string, System.Type[])", file="QCAlgorithm.Trading.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m6_489 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m6_292 [cluster="System.Type.IsInstanceOfType(object)", file="QCAlgorithm.Trading.cs", label="Entry System.Type.IsInstanceOfType(object)", span="0-0"];
m6_414 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.Trading.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m6_533 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
m6_534 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m6_537 [file="QCAlgorithm.Trading.cs", label=delisting, span=""];
m6_535 [file="QCAlgorithm.Trading.cs", label=symbol, span=""];
m6_536 [file="QCAlgorithm.Trading.cs", label=split, span=""];
m7_0 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m7_1 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", color=green, community=0, file="RegressionTests.cs", label="0: AlgorithmRunner.RunLocalBacktest(''BasicTemplateAlgorithm'', new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''3.40%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''1646.962%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''3.404%''},\r\n                {''Sharpe Ratio'', ''4.501''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.005''},\r\n                {''Beta'', ''2.03''},\r\n                {''Annual Standard Deviation'', ''0.389''},\r\n                {''Annual Variance'', ''0.152''},\r\n                {''Information Ratio'', ''4.513''},\r\n                {''Tracking Error'', ''0.198''},\r\n                {''Treynor Ratio'', ''0.863''},\r\n                {''Total Fees'', ''$12.12''}\r\n            })", span="26-47"];
m7_2 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m7_4 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", span="30-30"];
m7_5 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", span="51-51"];
m7_6 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(''BasicTemplateFillForwardAlgorithm'', new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''34.56%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''521.383%''},\r\n                {''Drawdown'', ''18.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''34.562%''},\r\n                {''Sharpe Ratio'', ''2.599''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.899''},\r\n                {''Beta'', ''2.879''},\r\n                {''Annual Standard Deviation'', ''0.785''},\r\n                {''Annual Variance'', ''0.616''},\r\n                {''Information Ratio'', ''2.192''},\r\n                {''Tracking Error'', ''0.749''},\r\n                {''Treynor Ratio'', ''0.708''},\r\n                {''Total Fees'', ''$460.82''}\r\n            })", span="53-74"];
m7_7 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", span="51-51"];
m7_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_207 [cluster="QuantConnect.Securities.SecurityTransactionModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="388-388"];
m8_184 [cluster="QuantConnect.Securities.SecurityTransactionModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="325-325"];
m8_73 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", span="119-119"];
m8_74 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="var model = new SecurityTransactionModel()", span="121-121"];
m8_77 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="var security = new Security(config, 1)", span="124-124"];
m8_78 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 100m))", span="125-125"];
m8_84 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 102m))", span="134-134"];
m8_90 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101.66m))", span="143-143"];
m8_75 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="var order = new StopLimitOrder(Symbol, 100, 101.5m, 101.75m, DateTime.Now, type: SecurityType.Equity)", span="122-122"];
m8_79 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="var fill = model.StopLimitFill(security, order)", span="127-127"];
m8_85 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="fill = model.StopLimitFill(security, order)", span="136-136"];
m8_91 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="fill = model.StopLimitFill(security, order)", span="145-145"];
m8_76 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="123-123"];
m8_83 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="132-132"];
m8_89 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="141-141"];
m8_92 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="148-148"];
m8_93 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.LimitPrice, fill.FillPrice)", span="149-149"];
m8_95 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="151-151"];
m8_80 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="129-129"];
m8_81 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="130-130"];
m8_82 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="131-131"];
m8_86 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="138-138"];
m8_87 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="139-139"];
m8_88 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="140-140"];
m8_94 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="150-150"];
m8_96 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", span="119-119"];
m8_15 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="214-214"];
m8_50 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="55-55"];
m8_98 [cluster="QuantConnect.Securities.SecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="189-189"];
m8_99 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", span="155-155"];
m8_100 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="var model = new SecurityTransactionModel()", span="157-157"];
m8_103 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="var security = new Security(config, 1)", span="160-160"];
m8_104 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 102m))", span="161-161"];
m8_110 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101m))", span="170-170"];
m8_116 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101.66m))", span="179-179"];
m8_101 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="var order = new StopLimitOrder(Symbol, -100, 101.75m, 101.50m, DateTime.Now, type: SecurityType.Equity)", span="158-158"];
m8_105 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="var fill = model.StopLimitFill(security, order)", span="163-163"];
m8_111 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="fill = model.StopLimitFill(security, order)", span="172-172"];
m8_117 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="fill = model.StopLimitFill(security, order)", span="181-181"];
m8_102 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="159-159"];
m8_109 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="168-168"];
m8_115 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="177-177"];
m8_118 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="184-184"];
m8_119 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.LimitPrice, fill.FillPrice)", span="185-185"];
m8_121 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="187-187"];
m8_106 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="165-165"];
m8_107 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="166-166"];
m8_108 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="167-167"];
m8_112 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="174-174"];
m8_113 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="175-175"];
m8_114 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="176-176"];
m8_120 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="186-186"];
m8_122 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", span="155-155"];
m8_14 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", span="109-109"];
m8_97 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="65-65"];
m8_13 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="51-51"];
m8_186 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", span="275-275"];
m8_187 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", color=green, community=0, file="SecurityTransactionModelTests.cs", label="0: var reference = new DateTime(2015, 06, 05, 15, 0, 0)", span="277-277"];
m8_192 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="var time = reference", span="282-282"];
m8_188 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="var model = new SecurityTransactionModel()", span="278-278"];
m8_189 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="var order = new MarketOnCloseOrder(Symbol, SecurityType.Equity, 100, reference, 1m)", span="279-279"];
m8_196 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="time = reference.AddMinutes(59)", span="289-289"];
m8_200 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="time = reference.AddMinutes(60)", span="296-296"];
m8_191 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="var security = new Security(config, 1) { Exchange = new EquityExchange() }", span="281-281"];
m8_193 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1m, 2m, 0.5m, 1.33m, 100))", span="283-283"];
m8_194 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="var fill = model.MarketOnCloseFill(security, order)", span="285-285"];
m8_198 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="fill = model.MarketOnCloseFill(security, order)", span="292-292"];
m8_202 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="fill = model.MarketOnCloseFill(security, order)", span="299-299"];
m8_190 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="280-280"];
m8_203 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="300-300"];
m8_195 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="286-286"];
m8_197 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1.33m, 2.75m, 1.15m, 1.45m, 100))", span="290-290"];
m8_199 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="293-293"];
m8_201 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1.45m, 2.0m, 1.1m, 1.40m, 100))", span="297-297"];
m8_204 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(security.Close, fill.FillPrice)", span="301-301"];
m8_205 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", span="275-275"];
m8_16 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", span="52-52"];
m8_123 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", span="191-191"];
m8_124 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="var model = new SecurityTransactionModel()", span="193-193"];
m8_127 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="var security = new Security(config, 1)", span="196-196"];
m8_128 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101m))", span="197-197"];
m8_134 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 102.5m))", span="206-206"];
m8_125 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="var order = new StopMarketOrder(Symbol, 100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="194-194"];
m8_129 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="var fill = model.StopMarketFill(security, order)", span="199-199"];
m8_135 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="fill = model.StopMarketFill(security, order)", span="208-208"];
m8_126 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="195-195"];
m8_133 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="204-204"];
m8_136 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="211-211"];
m8_137 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(Math.Max(security.Price, order.StopPrice), fill.FillPrice)", span="212-212"];
m8_139 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="214-214"];
m8_130 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="201-201"];
m8_131 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="202-202"];
m8_132 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="203-203"];
m8_138 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="213-213"];
m8_140 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", span="191-191"];
m8_183 [cluster="QuantConnect.Securities.Equity.EquityExchange.EquityExchange()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.Equity.EquityExchange.EquityExchange()", span="23-23"];
m8_141 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="54-54"];
m8_19 [cluster="Unk.AreEqual", file="SecurityTransactionModelTests.cs", label="Entry Unk.AreEqual", span=""];
m8_161 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", span="245-245"];
m8_162 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", color=green, community=0, file="SecurityTransactionModelTests.cs", label="0: var reference = new DateTime(2015, 06, 05, 9, 0, 0)", span="247-247"];
m8_167 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="var time = reference", span="252-252"];
m8_163 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="var model = new SecurityTransactionModel()", span="248-248"];
m8_164 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="var order = new MarketOnOpenOrder(Symbol, SecurityType.Equity, 100, reference, 1m)", span="249-249"];
m8_171 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="time = reference.AddMinutes(29)", span="259-259"];
m8_175 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="time = reference.AddMinutes(30)", span="266-266"];
m8_166 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="var security = new Security(config, 1) {Exchange = new EquityExchange()}", span="251-251"];
m8_168 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1m, 2m, 0.5m, 1.33m, 100))", span="253-253"];
m8_169 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="var fill = model.MarketOnOpenFill(security, order)", span="255-255"];
m8_173 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="fill = model.MarketOnOpenFill(security, order)", span="262-262"];
m8_177 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="fill = model.MarketOnOpenFill(security, order)", span="269-269"];
m8_165 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="250-250"];
m8_178 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="270-270"];
m8_170 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="256-256"];
m8_172 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1.33m, 2.75m, 1.15m, 1.45m, 100))", span="260-260"];
m8_174 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="263-263"];
m8_176 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1.45m, 2.0m, 1.1m, 1.40m, 100))", span="267-267"];
m8_179 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(security.Open, fill.FillPrice)", span="271-271"];
m8_180 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", span="245-245"];
m8_17 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", span="403-403"];
m8_206 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", span="50-50"];
m8_18 [cluster="QuantConnect.Securities.SecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="61-61"];
m8_12 [cluster="QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", span="43-43"];
m8_51 [cluster="QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="263-263"];
m8_0 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", span="32-32"];
m8_1 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="var model = new SecurityTransactionModel()", span="34-34"];
m8_4 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="var security = new Security(config, 1)", span="37-37"];
m8_5 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101.123m))", span="39-39"];
m8_2 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="var order = new MarketOrder(Symbol, 100, DateTime.Now, type: SecurityType.Equity)", span="35-35"];
m8_6 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="var fill = model.MarketFill(security, order)", span="41-41"];
m8_3 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="36-36"];
m8_7 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="42-42"];
m8_10 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="45-45"];
m8_8 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(security.Price, fill.FillPrice)", span="43-43"];
m8_9 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="44-44"];
m8_11 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", span="32-32"];
m8_20 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", span="48-48"];
m8_21 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="var model = new SecurityTransactionModel()", span="50-50"];
m8_24 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="var security = new Security(config, 1)", span="53-53"];
m8_25 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101.123m))", span="55-55"];
m8_22 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="var order = new MarketOrder(Symbol, -100, DateTime.Now, type: SecurityType.Equity)", span="51-51"];
m8_26 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="var fill = model.MarketFill(security, order)", span="57-57"];
m8_23 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="52-52"];
m8_27 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="58-58"];
m8_30 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="61-61"];
m8_28 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(security.Price, fill.FillPrice)", span="59-59"];
m8_29 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="60-60"];
m8_31 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", span="48-48"];
m8_143 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", span="218-218"];
m8_144 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="var model = new SecurityTransactionModel()", span="220-220"];
m8_147 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="var security = new Security(config, 1)", span="223-223"];
m8_148 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 102m))", span="224-224"];
m8_154 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101m))", span="233-233"];
m8_145 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="var order = new StopMarketOrder(Symbol, -100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="221-221"];
m8_149 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="var fill = model.StopMarketFill(security, order)", span="226-226"];
m8_155 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="fill = model.StopMarketFill(security, order)", span="235-235"];
m8_146 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="222-222"];
m8_153 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="231-231"];
m8_156 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="238-238"];
m8_157 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(Math.Min(security.Price, order.StopPrice), fill.FillPrice)", span="239-239"];
m8_159 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="241-241"];
m8_150 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="228-228"];
m8_151 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="229-229"];
m8_152 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="230-230"];
m8_158 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="240-240"];
m8_160 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", span="218-218"];
m8_181 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="SecurityTransactionModelTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m8_142 [cluster="QuantConnect.Securities.SecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="113-113"];
m8_72 [cluster="System.Math.Max(decimal, decimal)", file="SecurityTransactionModelTests.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m8_185 [cluster="System.DateTime.AddMinutes(double)", file="SecurityTransactionModelTests.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m8_53 [cluster="System.Math.Min(decimal, decimal)", file="SecurityTransactionModelTests.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m8_32 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", span="65-65"];
m8_33 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="var model = new SecurityTransactionModel()", span="67-67"];
m8_36 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="var security = new Security(config, 1)", span="70-70"];
m8_43 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new TradeBar(DateTime.Now, Symbol, 102m, 103m, 101m, 102.3m, 100))", span="80-80"];
m8_37 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 102m))", span="71-71"];
m8_34 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="var order = new LimitOrder(Symbol, 100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="68-68"];
m8_38 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="var fill = model.LimitFill(security, order)", span="73-73"];
m8_44 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="fill = model.LimitFill(security, order)", span="82-82"];
m8_35 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="69-69"];
m8_42 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="78-78"];
m8_45 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="85-85"];
m8_46 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(Math.Min(order.LimitPrice, security.High), fill.FillPrice)", span="86-86"];
m8_48 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="88-88"];
m8_39 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="75-75"];
m8_40 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="76-76"];
m8_41 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="77-77"];
m8_47 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="87-87"];
m8_49 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", span="65-65"];
m8_182 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", span="49-49"];
m8_54 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", span="92-92"];
m8_55 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="var model = new SecurityTransactionModel()", span="94-94"];
m8_58 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="var security = new Security(config, 1)", span="97-97"];
m8_65 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new TradeBar(DateTime.Now, Symbol, 102m, 103m, 101m, 102.3m, 100))", span="107-107"];
m8_59 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101m))", span="98-98"];
m8_56 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="var order = new LimitOrder(Symbol, -100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="95-95"];
m8_60 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="var fill = model.LimitFill(security, order)", span="100-100"];
m8_66 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="fill = model.LimitFill(security, order)", span="109-109"];
m8_57 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="96-96"];
m8_64 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="105-105"];
m8_67 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="112-112"];
m8_68 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(Math.Max(order.LimitPrice, security.Low), fill.FillPrice)", span="113-113"];
m8_70 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="115-115"];
m8_61 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="102-102"];
m8_62 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="103-103"];
m8_63 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="104-104"];
m8_69 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="114-114"];
m8_71 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", span="92-92"];
m8_52 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="210-210"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n1  [color=darkorchid, key=3, label="Local variable string file", style=bold];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=0, style=solid];
n3 -> n8  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n7  [key=0, style=solid];
n4 -> n9  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n10  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n11  [key=2, style=dotted];
n8 -> n0  [color=blue, key=0, style=bold];
n12 -> n13  [key=0, style=solid];
n12 -> n16  [color=darkseagreen4, key=1, label=string, style=dashed];
n12 -> n17  [color=darkseagreen4, key=1, label=string, style=dashed];
n12 -> n18  [color=darkseagreen4, key=1, label=string, style=dashed];
n12 -> n19  [color=darkseagreen4, key=1, label=string, style=dashed];
n12 -> n33  [color=darkorchid, key=3, label="Parameter variable string key", style=bold];
n13 -> n14  [key=0, style=solid];
n13 -> n1  [color=darkorchid, key=3, label="Local variable string value", style=bold];
n13 -> n12  [color=darkorchid, key=3, label="Local variable string value", style=bold];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=0, style=solid];
n16 -> n24  [key=2, style=dotted];
n17 -> n20  [key=0, style=solid];
n17 -> n22  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n22  [color=darkseagreen4, key=1, label=value, style=dashed];
n19 -> n20  [key=0, style=solid];
n19 -> n22  [key=0, style=solid];
n19 -> n25  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n0  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n26  [key=2, style=dotted];
n23 -> n12  [color=blue, key=0, style=bold];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n29 -> n27  [color=blue, key=0, style=bold];
n30 -> n31  [key=0, style=solid];
n30 -> n33  [color=darkorchid, key=3, label="method methodReturn bool GetBool", style=bold];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [key=2, style=dotted];
n32 -> n30  [color=blue, key=0, style=bold];
n33 -> n40  [key=0, style=solid];
n33 -> n42  [color=darkseagreen4, key=1, label=string, style=dashed];
n33 -> n43  [color=darkseagreen4, key=1, label=T, style=dashed];
n33 -> n30  [color=darkorchid, key=3, label="Parameter variable T defaultValue", style=bold];
n33 -> n34  [color=darkorchid, key=3, label="Parameter variable T defaultValue", style=bold];
n33 -> n37  [color=darkorchid, key=3, label="Parameter variable T defaultValue", style=bold];
n33 -> n33  [color=darkorchid, key=3, label="method methodReturn T GetValue", style=bold];
n34 -> n35  [key=0, style=solid];
n34 -> n33  [color=darkorchid, key=3, label="method methodReturn int GetInt", style=bold];
n35 -> n36  [key=0, style=solid];
n35 -> n33  [key=2, style=dotted];
n36 -> n34  [color=blue, key=0, style=bold];
n37 -> n38  [key=0, style=solid];
n37 -> n33  [color=darkorchid, key=3, label="method methodReturn double GetDouble", style=bold];
n38 -> n39  [key=0, style=solid];
n38 -> n33  [key=2, style=dotted];
n39 -> n37  [color=blue, key=0, style=bold];
n40 -> n41  [key=0, style=solid];
n40 -> n12  [key=2, style=dotted];
n40 -> n46  [color=darkseagreen4, key=1, label=value, style=dashed];
n40 -> n47  [color=darkseagreen4, key=1, label=value, style=dashed];
n42 -> n43  [key=0, style=solid];
n42 -> n25  [key=2, style=dotted];
n43 -> n48  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n44  [key=0, style=solid];
n41 -> n49  [key=2, style=dotted];
n46 -> n48  [key=0, style=solid];
n46 -> n50  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n51  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n47  [color=darkseagreen4, key=1, label=type, style=dashed];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [key=0, style=solid];
n48 -> n33  [color=blue, key=0, style=bold];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=2, style=dotted];
m1_32 -> m1_30  [color=blue, key=0, style=bold];
m1_20 -> m1_2  [color=darkorchid, key=3, label="Field variable double? _percentChange", style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_27  [color=blue, key=0, style=bold];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=2, style=dotted];
m1_15 -> m1_13  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_0  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_33  [key=2, style=dotted];
m1_36 -> m1_34  [color=blue, key=0, style=bold];
m1_11 -> m1_9  [color=blue, key=0, style=bold];
m1_33 -> m1_40  [key=0, style=solid];
m1_33 -> m1_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_33 -> m1_43  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_12  [key=2, style=dotted];
m1_40 -> m1_46  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_40 -> m1_47  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_25  [key=2, style=dotted];
m1_43 -> m1_48  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_44  [key=0, style=solid];
m1_41 -> m1_49  [key=2, style=dotted];
m1_46 -> m1_48  [key=0, style=solid];
m1_46 -> m1_50  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_51  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [color=darkseagreen4, key=1, label=type, style=dashed];
m1_44 -> m1_47  [color=darkseagreen4, key=1, label=type, style=dashed];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [key=0, style=solid];
m1_48 -> m1_33  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=2, style=dotted];
m1_10 -> m1_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2 -> m1_4  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Signals.Direction", style=dashed];
m1_2 -> m1_3  [color=red, key=0, style=solid];
m1_2 -> m1_5  [color=darkseagreen4, key=1, label="double?", style=dashed];
m1_2 -> m1_6  [color=darkseagreen4, key=1, label="double?", style=dashed];
m1_2 -> m1_7  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m1_4 -> m1_5  [color=green, key=0, style=solid];
m1_4 -> m1_7  [key=0, style=solid];
m1_4 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_4  [color=green, key=0, style=solid];
m1_3 -> m1_8  [color=red, key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> n10  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_11  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_2  [color=blue, key=0, style=bold];
m1_8 -> m1_0  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_33  [key=2, style=dotted];
m1_39 -> m1_37  [color=blue, key=0, style=bold];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_12 -> m1_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_12 -> m1_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_12 -> m1_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=0, style=solid];
m1_16 -> m1_24  [key=2, style=dotted];
m1_17 -> m1_20  [key=0, style=solid];
m1_17 -> m1_22  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_22  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_18 -> m1_20  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_22  [key=0, style=solid];
m1_19 -> m1_25  [key=2, style=dotted];
m1_19 -> m1_17  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_26  [key=2, style=dotted];
m1_21 -> m1_4  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", style=dashed];
m1_21 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", style=dashed];
m1_21 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", style=dashed];
m1_21 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", style=dashed];
m1_21 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", style=dashed];
m1_21 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", style=dashed];
m1_21 -> m1_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", style=dashed];
m1_21 -> m1_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", style=dashed];
m1_23 -> m1_12  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=red, key=0, style=solid];
m1_1 -> m1_2  [color=red, key=0, style=solid];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_2 -> m3_6  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_0  [color=blue, key=0, style=bold];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [key=2, style=dotted];
m5_8 -> m5_6  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_0  [color=blue, key=0, style=bold];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m5_10 -> m5_16  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Language? DetermineProjectLanguage", style=bold];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_18  [key=2, style=dotted];
m5_11 -> m5_13  [color=darkseagreen4, key=1, label=extensionsSet, style=dashed];
m5_11 -> m5_14  [color=darkseagreen4, key=1, label=extensionsSet, style=dashed];
m5_11 -> m5_15  [color=darkseagreen4, key=1, label=extensionsSet, style=dashed];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=0, style=solid];
m5_13 -> m5_12  [key=0, style=solid];
m5_13 -> m5_19  [key=2, style=dotted];
m5_13 -> m5_20  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=0, style=solid];
m5_14 -> m5_21  [key=2, style=dotted];
m5_14 -> n24  [key=2, style=dotted];
m5_15 -> m5_17  [key=0, style=solid];
m5_15 -> m5_21  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_10  [color=blue, key=0, style=bold];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_255  [key=2, style=dotted];
m6_59 -> m6_257  [key=2, style=dotted];
m6_9 -> m6_107  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_113  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_115  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_12  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_13  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m6_9 -> m6_20  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m6_9 -> m6_22  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_23  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_24  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_25  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_26  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_27  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_28  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_29  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_30  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_31  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_311  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_32  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_34  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_37  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_43  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m6_9 -> m6_47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m6_9 -> m6_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Server.ILeanManager", style=dashed];
m6_9 -> m6_55  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_56  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_9 -> m6_59  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_60  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_9 -> m6_65  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m6_9 -> m6_68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_71  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m6_9 -> m6_77  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_78  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_87  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_88  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m6_9 -> m6_89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m6_9 -> m6_90  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_91  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_93  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_95  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_98  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_101  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_103  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_105  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_121  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_124  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_126  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_131  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_132  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_134  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_135  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_136  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_137  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m6_9 -> m6_138  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_140  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_153  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_162  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_164  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_169  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_171  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_173  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_175  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_179  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_184  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_186  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_188  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_190  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_192  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_197  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_199  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_203  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m6_9 -> m6_205  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_9 -> m6_208  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_211  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_214  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_9 -> m6_217  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_218  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_9 -> m6_219  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_9 -> m6_222  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_9 -> m6_223  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_9 -> m6_226  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m6_9 -> m6_227  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_9 -> m6_228  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_9 -> m6_229  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_230  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_231  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_9 -> m6_234  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_9 -> m6_14  [key=2, style=dotted];
m6_9 -> m6_15  [key=2, style=dotted];
m6_107 -> m6_108  [color=green, key=0, style=solid];
m6_106 -> m6_107  [color=green, key=0, style=solid];
m6_108 -> m6_109  [color=green, key=0, style=solid];
m6_113 -> m6_114  [color=green, key=0, style=solid];
m6_113 -> m6_119  [color=green, key=0, style=solid];
m6_113 -> m6_278  [color=green, key=2, style=dotted];
m6_112 -> m6_113  [color=green, key=0, style=solid];
m6_112 -> m6_119  [color=green, key=0, style=solid];
m6_114 -> m6_115  [color=green, key=0, style=solid];
m6_119 -> m6_120  [key=0, style=solid];
m6_115 -> m6_116  [color=green, key=0, style=solid];
m6_116 -> m6_117  [color=green, key=0, style=solid];
m6_98 -> m6_112  [color=green, key=1, label=issueMarginCallWarning, style=dashed];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_272  [key=2, style=dotted];
m6_98 -> m6_101  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m6_98 -> m6_103  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m6_99 -> m6_112  [color=green, key=0, style=solid];
m6_99 -> m6_100  [key=0, style=solid];
m6_109 -> m6_110  [color=green, key=0, style=solid];
m6_102 -> m6_109  [color=green, key=1, label=executingMarginCall, style=dashed];
m6_102 -> m6_103  [key=0, style=solid];
m6_110 -> m6_111  [color=green, key=0, style=solid];
m6_110 -> m6_277  [color=green, key=2, style=dotted];
m6_110 -> m6_252  [color=green, key=2, style=dotted];
m6_111 -> m6_235  [color=green, key=0, style=solid];
m6_117 -> m6_118  [color=green, key=0, style=solid];
m6_117 -> m6_252  [color=green, key=2, style=dotted];
m6_118 -> m6_235  [color=green, key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_16  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_0  [color=blue, key=0, style=bold];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_57  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m6_12 -> m6_59  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m6_12 -> m6_61  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m6_12 -> m6_232  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m6_12 -> m6_234  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_53  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m6_13 -> m6_66  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m6_13 -> m6_231  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m6_13 -> m6_233  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m6_13 -> m6_234  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_13  [key=2, style=dotted];
m6_20 -> m6_54  [color=darkseagreen4, key=1, label=basicTemplateFrameworkStatistics, style=dashed];
m6_20 -> m6_18  [color=darkorchid, key=3, label="method methodReturn decimal op_Implicit", style=bold];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_13  [key=2, style=dotted];
m6_22 -> m6_54  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m6_23 -> m6_239  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_183  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
m6_23 -> m6_13  [key=2, style=dotted];
m6_23 -> m6_54  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m6_24 -> m6_239  [key=2, style=dotted];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_185  [color=darkseagreen4, key=1, label=hasOnDataQuoteBars, style=dashed];
m6_24 -> m6_13  [key=2, style=dotted];
m6_24 -> m6_54  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m6_25 -> m6_239  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_187  [color=darkseagreen4, key=1, label=hasOnDataOptionChains, style=dashed];
m6_25 -> m6_13  [key=2, style=dotted];
m6_25 -> m6_54  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m6_26 -> m6_239  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_189  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
m6_26 -> m6_13  [key=2, style=dotted];
m6_26 -> m6_54  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m6_27 -> m6_239  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_168  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
m6_27 -> m6_13  [key=2, style=dotted];
m6_27 -> m6_54  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m6_28 -> m6_239  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_170  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
m6_28 -> m6_13  [key=2, style=dotted];
m6_28 -> m6_54  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m6_29 -> m6_239  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_172  [color=darkseagreen4, key=1, label=hasOnDataDelistings, style=dashed];
m6_29 -> m6_13  [key=2, style=dotted];
m6_29 -> m6_54  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m6_30 -> m6_239  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_70  [color=darkseagreen4, key=1, label=hasOnDataSymbolChangedEvents, style=dashed];
m6_30 -> m6_13  [key=2, style=dotted];
m6_30 -> m6_54  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_240  [key=2, style=dotted];
m6_31 -> m6_241  [key=2, style=dotted];
m6_31 -> m6_242  [key=2, style=dotted];
m6_31 -> m6_243  [key=2, style=dotted];
m6_31 -> m6_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_31 -> m6_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_31 -> m6_36  [color=darkseagreen4, key=1, label=hasOnDataSlice, style=dashed];
m6_31 -> m6_13  [key=2, style=dotted];
m6_31 -> m6_54  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_42  [key=0, style=solid];
m6_32 -> m6_34  [color=darkseagreen4, key=1, label=config, style=dashed];
m6_32 -> m6_35  [color=darkseagreen4, key=1, label=config, style=dashed];
m6_32 -> m6_37  [color=darkseagreen4, key=1, label=config, style=dashed];
m6_32 -> m6_41  [color=darkseagreen4, key=1, label=config, style=dashed];
m6_32 -> m6_13  [key=2, style=dotted];
m6_32 -> m6_54  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_240  [key=2, style=dotted];
m6_34 -> m6_244  [key=2, style=dotted];
m6_34 -> m6_36  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m6_34 -> m6_40  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m6_34 -> m6_41  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m6_34 -> m6_13  [key=2, style=dotted];
m6_34 -> m6_54  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_246  [key=2, style=dotted];
m6_37 -> m6_13  [key=2, style=dotted];
m6_37 -> m6_54  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> n25  [key=2, style=dotted];
m6_42 -> m6_13  [key=2, style=dotted];
m6_42 -> m6_54  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m6_43 -> m6_250  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_206  [key=0, style=solid];
m6_43 -> m6_46  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_48  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_51  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_52  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_69  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_71  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_72  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_75  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_76  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_79  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_83  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_88  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_95  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_123  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_124  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_130  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_133  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_144  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_157  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_168  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_169  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_170  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_171  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_172  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_173  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_179  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_180  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_181  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_182  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_183  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_184  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_185  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_186  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_187  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_188  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_189  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_190  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_196  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_197  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_43 -> m6_13  [key=2, style=dotted];
m6_43 -> m6_54  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m6_47 -> m6_47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_50  [key=0, style=solid];
m6_47 -> m6_13  [key=2, style=dotted];
m6_47 -> m6_54  [color=darkseagreen4, key=1, label=basicTemplateIntrinioEconomicData, style=dashed];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_253  [key=2, style=dotted];
m6_50 -> m6_13  [key=2, style=dotted];
m6_50 -> m6_54  [color=darkseagreen4, key=1, label=cancelOpenOrdersRegressionAlgorithmStatistics, style=dashed];
m6_55 -> m6_254  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_17  [color=blue, key=0, style=bold];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_255  [key=2, style=dotted];
m6_56 -> m6_256  [key=2, style=dotted];
m6_58 -> m6_60  [key=0, style=solid];
m6_58 -> m6_257  [key=2, style=dotted];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_232  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m6_60 -> m6_234  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m6_64 -> m6_206  [key=0, style=solid];
m6_64 -> m6_258  [key=2, style=dotted];
m6_65 -> m6_254  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_259  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_260  [key=2, style=dotted];
m6_68 -> m6_57  [color=blue, key=0, style=bold];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_261  [key=2, style=dotted];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_72  [key=0, style=solid];
m6_73 -> m6_262  [key=2, style=dotted];
m6_73 -> m6_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_76  [key=0, style=solid];
m6_77 -> m6_264  [key=2, style=dotted];
m6_78 -> m6_76  [key=0, style=solid];
m6_78 -> m6_265  [key=2, style=dotted];
m6_87 -> m6_83  [key=0, style=solid];
m6_87 -> m6_268  [key=2, style=dotted];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_269  [key=2, style=dotted];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_270  [key=2, style=dotted];
m6_90 -> m6_271  [key=2, style=dotted];
m6_90 -> m6_91  [key=0, style=solid];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_93  [key=0, style=solid];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_96  [key=0, style=solid];
m6_95 -> m6_206  [key=0, style=solid];
m6_95 -> m6_251  [key=2, style=dotted];
m6_95 -> n25  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_273  [key=2, style=dotted];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_274  [key=2, style=dotted];
m6_105 -> m6_104  [key=0, style=solid];
m6_105 -> m6_275  [key=2, style=dotted];
m6_105 -> m6_276  [key=2, style=dotted];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_279  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_130  [key=0, style=solid];
m6_124 -> m6_280  [key=2, style=dotted];
m6_126 -> m6_127  [key=0, style=solid];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_281  [key=2, style=dotted];
m6_131 -> m6_282  [key=2, style=dotted];
m6_132 -> m6_130  [key=0, style=solid];
m6_132 -> m6_283  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_281  [key=2, style=dotted];
m6_134 -> m6_282  [key=2, style=dotted];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_284  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_139  [key=0, style=solid];
m6_136 -> m6_133  [key=0, style=solid];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_262  [key=2, style=dotted];
m6_137 -> m6_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_133  [key=0, style=solid];
m6_138 -> m6_285  [key=2, style=dotted];
m6_138 -> m6_286  [key=2, style=dotted];
m6_140 -> m6_141  [key=0, style=solid];
m6_153 -> m6_154  [key=0, style=solid];
m6_162 -> m6_160  [key=0, style=solid];
m6_162 -> m6_293  [key=2, style=dotted];
m6_164 -> m6_165  [key=0, style=solid];
m6_169 -> m6_170  [key=0, style=solid];
m6_169 -> m6_261  [key=2, style=dotted];
m6_171 -> m6_172  [key=0, style=solid];
m6_171 -> m6_261  [key=2, style=dotted];
m6_173 -> m6_174  [key=0, style=solid];
m6_173 -> m6_179  [key=0, style=solid];
m6_173 -> m6_261  [key=2, style=dotted];
m6_175 -> m6_176  [key=0, style=solid];
m6_179 -> m6_294  [key=2, style=dotted];
m6_179 -> m6_180  [key=0, style=solid];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_261  [key=2, style=dotted];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_261  [key=2, style=dotted];
m6_188 -> m6_189  [key=0, style=solid];
m6_188 -> m6_261  [key=2, style=dotted];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_196  [key=0, style=solid];
m6_190 -> m6_261  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_203  [key=0, style=solid];
m6_197 -> m6_296  [key=2, style=dotted];
m6_199 -> m6_200  [key=0, style=solid];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> m6_270  [key=2, style=dotted];
m6_205 -> m6_43  [key=0, style=solid];
m6_205 -> m6_297  [key=2, style=dotted];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_214  [key=0, style=solid];
m6_208 -> m6_298  [key=2, style=dotted];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_299  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_297  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_300  [key=2, style=dotted];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_301  [key=2, style=dotted];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_302  [key=2, style=dotted];
m6_222 -> m6_223  [key=0, style=solid];
m6_222 -> m6_301  [key=2, style=dotted];
m6_223 -> m6_224  [key=0, style=solid];
m6_223 -> m6_302  [key=2, style=dotted];
m6_226 -> m6_227  [key=0, style=solid];
m6_226 -> m6_303  [key=2, style=dotted];
m6_227 -> m6_228  [key=0, style=solid];
m6_227 -> m6_302  [key=2, style=dotted];
m6_228 -> m6_229  [key=0, style=solid];
m6_228 -> m6_302  [key=2, style=dotted];
m6_229 -> m6_230  [key=0, style=solid];
m6_229 -> m6_304  [key=2, style=dotted];
m6_229 -> m6_305  [key=2, style=dotted];
m6_230 -> m6_231  [key=0, style=solid];
m6_230 -> m6_255  [key=2, style=dotted];
m6_230 -> m6_256  [key=2, style=dotted];
m6_231 -> m6_254  [key=2, style=dotted];
m6_231 -> m6_232  [key=0, style=solid];
m6_233 -> m6_235  [key=0, style=solid];
m6_233 -> m6_257  [key=2, style=dotted];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_255  [key=2, style=dotted];
m6_234 -> m6_257  [key=2, style=dotted];
m6_104 -> m6_106  [key=0, style=solid];
m6_104 -> m6_119  [key=0, style=solid];
m6_104 -> m6_105  [key=0, style=solid];
m6_15 -> m6_119  [color=darkseagreen4, key=1, label=marginCallFrequency, style=dashed];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_237  [key=2, style=dotted];
m6_51 -> m6_119  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_51 -> m6_65  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_51 -> m6_67  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_51 -> m6_68  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_54  [color=darkseagreen4, key=1, label=scheduledUniverseSelectionModelRegressionAlgorithmStatistics, style=dashed];
m6_51 -> m6_96  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_51 -> m6_120  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_51 -> m6_122  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_51 -> m6_150  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_51 -> m6_204  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_51 -> m6_13  [key=2, style=dotted];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_123  [key=0, style=solid];
m6_97 -> m6_98  [key=0, style=solid];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_100  [color=darkorchid, key=3, label="Local variable bool executingMarginCall", style=bold];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_13  [key=2, style=dotted];
m6_21 -> m6_54  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m6_21 -> m6_19  [color=darkorchid, key=3, label="Parameter variable T input", style=bold];
m6_21 -> m6_18  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorDataPoint consolidated", style=bold];
m6_21 -> m6_8  [color=darkorchid, key=3, label="Local variable QuantConnect.Indicators.IndicatorUpdatedHandler handler", style=bold];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_13  [key=2, style=dotted];
m6_38 -> m6_54  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_13  [key=2, style=dotted];
m6_44 -> m6_54  [color=darkseagreen4, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m6_45 -> m6_47  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_13  [key=2, style=dotted];
m6_45 -> m6_54  [color=darkseagreen4, key=1, label=basicTemplateCryptoAlgorithmStatistics, style=dashed];
m6_46 -> m6_252  [key=2, style=dotted];
m6_46 -> m6_206  [key=0, style=solid];
m6_46 -> m6_251  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_13  [key=2, style=dotted];
m6_46 -> m6_54  [color=darkseagreen4, key=1, label=indicatorSuiteAlgorithmStatistics, style=dashed];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_13  [key=2, style=dotted];
m6_52 -> m6_54  [color=darkseagreen4, key=1, label=compositeAlphaModelFrameworkAlgorithmStatistics, style=dashed];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_61  [key=0, style=solid];
m6_54 -> m6_56  [key=2, style=dotted];
m6_54 -> m6_57  [key=2, style=dotted];
m6_54 -> m6_58  [key=2, style=dotted];
m6_54 -> m6_59  [key=2, style=dotted];
m6_54 -> m6_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_94 -> m6_95  [key=0, style=solid];
m6_96 -> m6_120  [key=0, style=solid];
m6_96 -> m6_97  [key=0, style=solid];
m6_127 -> m6_128  [key=0, style=solid];
m6_141 -> m6_142  [key=0, style=solid];
m6_154 -> m6_155  [key=0, style=solid];
m6_165 -> m6_166  [key=0, style=solid];
m6_176 -> m6_177  [key=0, style=solid];
m6_193 -> m6_194  [key=0, style=solid];
m6_200 -> m6_201  [key=0, style=solid];
m6_204 -> m6_205  [key=0, style=solid];
m6_206 -> m6_207  [key=0, style=solid];
m6_210 -> m6_211  [key=0, style=solid];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_220  [key=0, style=solid];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_224  [key=0, style=solid];
m6_224 -> m6_228  [key=0, style=solid];
m6_224 -> m6_225  [key=0, style=solid];
m6_48 -> m6_252  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_13  [key=2, style=dotted];
m6_48 -> m6_54  [color=darkseagreen4, key=1, label=volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, style=dashed];
m6_128 -> m6_252  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_142 -> m6_252  [key=2, style=dotted];
m6_142 -> m6_143  [key=0, style=solid];
m6_155 -> m6_252  [key=2, style=dotted];
m6_155 -> m6_156  [key=0, style=solid];
m6_166 -> m6_252  [key=2, style=dotted];
m6_166 -> m6_167  [key=0, style=solid];
m6_177 -> m6_252  [key=2, style=dotted];
m6_177 -> m6_178  [key=0, style=solid];
m6_194 -> m6_252  [key=2, style=dotted];
m6_194 -> m6_195  [key=0, style=solid];
m6_201 -> m6_252  [key=2, style=dotted];
m6_201 -> m6_202  [key=0, style=solid];
m6_212 -> m6_252  [key=2, style=dotted];
m6_212 -> m6_213  [key=0, style=solid];
m6_39 -> m6_235  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_13  [key=2, style=dotted];
m6_39 -> m6_54  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m6_49 -> m6_235  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_13  [key=2, style=dotted];
m6_49 -> m6_54  [color=darkseagreen4, key=1, label=standardDeviationExecutionModelRegressionAlgorithmStatistics, style=dashed];
m6_129 -> m6_235  [key=0, style=solid];
m6_143 -> m6_235  [key=0, style=solid];
m6_156 -> m6_235  [key=0, style=solid];
m6_167 -> m6_235  [key=0, style=solid];
m6_178 -> m6_235  [key=0, style=solid];
m6_195 -> m6_235  [key=0, style=solid];
m6_202 -> m6_235  [key=0, style=solid];
m6_213 -> m6_235  [key=0, style=solid];
m6_14 -> m6_23  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_24  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_25  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_26  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_27  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_28  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_29  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_30  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_71  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_169  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_171  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_173  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_184  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_186  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_188  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_190  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_236  [key=2, style=dotted];
m6_14 -> m6_35  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_41  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_14 -> m6_159  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_90  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m6_19 -> m6_179  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m6_19 -> m6_238  [key=2, style=dotted];
m6_19 -> m6_13  [key=2, style=dotted];
m6_19 -> m6_54  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m6_19 -> m6_21  [color=darkorchid, key=3, label="Local variable decimal nextValue", style=bold];
m6_19 -> m6_18  [color=darkorchid, key=3, label="method methodReturn bool Update", style=bold];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_59  [key=0, style=solid];
m6_57 -> m6_65  [key=0, style=solid];
m6_57 -> m6_66  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m6_57 -> m6_67  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_66  [key=0, style=solid];
m6_61 -> m6_63  [key=2, style=dotted];
m6_61 -> m6_64  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_234  [key=0, style=solid];
m6_53 -> m6_65  [key=0, style=solid];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_13  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_68  [key=0, style=solid];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_185  [key=0, style=solid];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_187  [key=0, style=solid];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_189  [key=0, style=solid];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_191  [key=0, style=solid];
m6_189 -> m6_196  [key=0, style=solid];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_170  [key=0, style=solid];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_172  [key=0, style=solid];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_179  [key=0, style=solid];
m6_172 -> m6_174  [key=0, style=solid];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_72  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_40  [key=0, style=solid];
m6_36 -> m6_13  [key=2, style=dotted];
m6_36 -> m6_54  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m6_35 -> m6_32  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_245  [key=2, style=dotted];
m6_35 -> m6_13  [key=2, style=dotted];
m6_35 -> m6_54  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m6_41 -> m6_32  [key=0, style=solid];
m6_41 -> m6_247  [key=2, style=dotted];
m6_41 -> m6_248  [key=2, style=dotted];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_13  [key=2, style=dotted];
m6_41 -> m6_54  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m6_33 -> m6_32  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_13  [key=2, style=dotted];
m6_33 -> m6_54  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m6_40 -> m6_32  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_13  [key=2, style=dotted];
m6_40 -> m6_54  [color=darkseagreen4, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_75  [key=0, style=solid];
m6_69 -> m6_65  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m6_69 -> m6_66  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m6_69 -> m6_67  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_75  [key=0, style=solid];
m6_72 -> m6_314  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_79  [key=0, style=solid];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_78  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_76 -> m6_79  [key=0, style=solid];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_83  [key=0, style=solid];
m6_79 -> m6_81  [color=darkseagreen4, key=1, label=update, style=dashed];
m6_83 -> m6_88  [key=0, style=solid];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_85  [color=darkseagreen4, key=1, label=update, style=dashed];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_130  [key=0, style=solid];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_132  [color=darkseagreen4, key=1, label=dividend, style=dashed];
m6_130 -> m6_133  [key=0, style=solid];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_135  [color=darkseagreen4, key=1, label=split, style=dashed];
m6_133 -> m6_136  [color=darkseagreen4, key=1, label=split, style=dashed];
m6_133 -> m6_137  [color=darkseagreen4, key=1, label=split, style=dashed];
m6_133 -> m6_138  [color=darkseagreen4, key=1, label=split, style=dashed];
m6_133 -> m6_144  [key=0, style=solid];
m6_133 -> m6_318  [color=darkseagreen4, key=1, label=split, style=dashed];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_152  [key=0, style=solid];
m6_144 -> m6_157  [key=0, style=solid];
m6_144 -> m6_147  [color=darkseagreen4, key=1, label=update, style=dashed];
m6_144 -> m6_148  [color=darkseagreen4, key=1, label=update, style=dashed];
m6_144 -> m6_150  [color=darkseagreen4, key=1, label=update, style=dashed];
m6_157 -> m6_168  [key=0, style=solid];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_159  [color=darkseagreen4, key=1, label=update, style=dashed];
m6_157 -> m6_160  [color=darkseagreen4, key=1, label=update, style=dashed];
m6_157 -> m6_161  [color=darkseagreen4, key=1, label=update, style=dashed];
m6_180 -> m6_183  [key=0, style=solid];
m6_180 -> m6_181  [key=0, style=solid];
m6_181 -> m6_183  [key=0, style=solid];
m6_181 -> m6_242  [key=2, style=dotted];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_182 -> m6_181  [key=0, style=solid];
m6_182 -> m6_295  [key=2, style=dotted];
m6_182 -> m6_248  [key=2, style=dotted];
m6_196 -> m6_197  [key=0, style=solid];
m6_196 -> m6_203  [key=0, style=solid];
m6_196 -> m6_198  [key=0, style=solid];
m6_62 -> m6_64  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
m6_62 -> m6_62  [color=darkorchid, key=3, label="Local variable string logMessage", style=bold];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_60  [color=blue, key=0, style=bold];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> n25  [key=2, style=dotted];
m6_74 -> m6_73  [key=0, style=solid];
m6_74 -> m6_263  [key=2, style=dotted];
m6_84 -> m6_87  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_86  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_85 -> m6_87  [key=0, style=solid];
m6_85 -> m6_86  [key=0, style=solid];
m6_92 -> m6_206  [key=0, style=solid];
m6_92 -> n25  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_125 -> m6_126  [key=0, style=solid];
m6_139 -> m6_140  [key=0, style=solid];
m6_152 -> m6_153  [key=0, style=solid];
m6_159 -> m6_162  [color=darkseagreen4, key=1, label=methodInvoker, style=dashed];
m6_159 -> m6_157  [key=0, style=solid];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_291  [key=2, style=dotted];
m6_160 -> m6_162  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m6_160 -> m6_157  [key=0, style=solid];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_163  [key=0, style=solid];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_160  [key=0, style=solid];
m6_161 -> m6_292  [key=2, style=dotted];
m6_163 -> m6_164  [key=0, style=solid];
m6_174 -> m6_175  [key=0, style=solid];
m6_191 -> m6_192  [key=0, style=solid];
m6_198 -> m6_199  [key=0, style=solid];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> n25  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_216 -> m6_217  [key=0, style=solid];
m6_216 -> n25  [key=2, style=dotted];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> n25  [key=2, style=dotted];
m6_225 -> m6_226  [key=0, style=solid];
m6_225 -> n25  [key=2, style=dotted];
m6_16 -> m6_96  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
m6_16 -> m6_17  [key=0, style=solid];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_289  [key=2, style=dotted];
m6_18 -> m6_120  [color=darkseagreen4, key=1, label=nextSettlementScanTime, style=dashed];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_13  [key=2, style=dotted];
m6_18 -> m6_54  [color=darkseagreen4, key=1, label=emptyStatistics, style=dashed];
m6_18 -> m6_10  [color=darkorchid, key=3, label="Property variable string Name", style=bold];
m6_81 -> m6_79  [key=0, style=solid];
m6_81 -> m6_82  [key=0, style=solid];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_82  [color=darkseagreen4, key=1, label=cash, style=dashed];
m6_146 -> m6_144  [key=0, style=solid];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_149  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m6_146 -> m6_151  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m6_145 -> m6_146  [key=0, style=solid];
m6_147 -> m6_150  [key=0, style=solid];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_149  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m6_148 -> m6_287  [key=2, style=dotted];
m6_148 -> m6_147  [key=0, style=solid];
m6_148 -> m6_149  [key=0, style=solid];
m6_158 -> m6_159  [key=0, style=solid];
m6_86 -> m6_85  [key=0, style=solid];
m6_86 -> m6_267  [key=2, style=dotted];
m6_17 -> m6_122  [color=darkseagreen4, key=1, label=settlementScanFrequency, style=dashed];
m6_17 -> m6_237  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_151 -> m6_146  [key=0, style=solid];
m6_151 -> m6_290  [key=2, style=dotted];
m6_82 -> m6_81  [key=0, style=solid];
m6_82 -> m6_266  [key=2, style=dotted];
m6_149 -> m6_147  [key=0, style=solid];
m6_149 -> m6_288  [key=2, style=dotted];
m6_235 -> m6_9  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m6_0 -> m6_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m6_0 -> m6_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m6_0 -> m6_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_12  [key=2, style=dotted];
m6_1 -> m6_1  [color=darkorchid, key=3, label="method methodReturn string ", style=bold];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_7  [key=0, style=solid];
m6_3 -> m6_0  [color=blue, key=0, style=bold];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_10  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_12  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_12  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_12  [key=2, style=dotted];
m6_5 -> m6_7  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_12  [key=2, style=dotted];
m6_6 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_13  [key=2, style=dotted];
m6_8 -> m6_4  [color=blue, key=0, style=bold];
m6_456 -> m6_457  [key=0, style=solid];
m6_311 -> m6_312  [key=0, style=solid];
m6_311 -> m6_240  [key=2, style=dotted];
m6_306 -> m6_307  [key=0, style=solid];
m6_310 -> m6_311  [key=0, style=solid];
m6_312 -> m6_310  [color=blue, key=0, style=bold];
m6_313 -> m6_314  [key=0, style=solid];
m6_317 -> m6_318  [key=0, style=solid];
m6_434 -> m6_435  [key=0, style=solid];
m6_438 -> m6_439  [key=0, style=solid];
m6_491 -> m6_492  [key=0, style=solid];
m6_490 -> m6_491  [key=0, style=solid];
m6_308 -> m6_306  [color=blue, key=0, style=bold];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_309  [key=2, style=dotted];
m6_314 -> m6_315  [key=0, style=solid];
m6_314 -> m6_316  [key=2, style=dotted];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_316  [key=2, style=dotted];
m6_320 -> m6_321  [key=0, style=solid];
m6_315 -> m6_313  [color=blue, key=0, style=bold];
m6_319 -> m6_317  [color=blue, key=0, style=bold];
m6_444 -> m6_445  [key=0, style=solid];
m6_447 -> m6_448  [key=0, style=solid];
m6_450 -> m6_451  [key=0, style=solid];
m6_453 -> m6_454  [key=0, style=solid];
m6_436 -> m6_434  [color=blue, key=0, style=bold];
m6_435 -> m6_436  [key=0, style=solid];
m6_435 -> m6_435  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m6_435 -> m6_437  [key=2, style=dotted];
m6_441 -> m6_442  [key=0, style=solid];
m6_440 -> m6_438  [color=blue, key=0, style=bold];
m6_439 -> m6_440  [key=0, style=solid];
m6_492 -> m6_490  [color=blue, key=0, style=bold];
m6_322 -> m6_320  [color=blue, key=0, style=bold];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_321  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.QuoteBar>", style=dashed];
m6_446 -> m6_444  [color=blue, key=0, style=bold];
m6_445 -> m6_446  [key=0, style=solid];
m6_449 -> m6_447  [color=blue, key=0, style=bold];
m6_448 -> m6_449  [key=0, style=solid];
m6_452 -> m6_450  [color=blue, key=0, style=bold];
m6_451 -> m6_452  [key=0, style=solid];
m6_455 -> m6_453  [color=blue, key=0, style=bold];
m6_454 -> m6_455  [key=0, style=solid];
m6_443 -> m6_441  [color=blue, key=0, style=bold];
m6_442 -> m6_443  [key=0, style=solid];
m6_457 -> m6_458  [key=0, style=solid];
m6_458 -> m6_456  [color=blue, key=0, style=bold];
m6_254 -> m6_9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Lean.Engine.Results.IResultHandler results", style=bold];
m6_254 -> m6_518  [key=0, style=solid];
m6_254 -> m6_520  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_254 -> m6_51  [color=darkorchid, key=3, label="Parameter variable System.DateTime time", style=bold];
m6_521 -> m6_522  [key=0, style=solid];
m6_518 -> m6_523  [key=0, style=solid];
m6_518 -> m6_519  [key=0, style=solid];
m6_518 -> m6_524  [key=2, style=dotted];
m6_518 -> m6_525  [key=2, style=dotted];
m6_518 -> m6_526  [key=2, style=dotted];
m6_520 -> m6_521  [key=0, style=solid];
m6_522 -> m6_523  [key=0, style=solid];
m6_522 -> m6_428  [key=2, style=dotted];
m6_519 -> m6_520  [key=0, style=solid];
m6_523 -> m6_254  [color=blue, key=0, style=bold];
m6_287 -> m6_214  [color=darkorchid, key=3, label="method methodReturn bool EndTimeIsInNativeResolution", style=bold];
m6_287 -> m6_527  [key=0, style=solid];
m6_287 -> m6_529  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m6_287 -> m6_530  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_527 -> m6_528  [key=0, style=solid];
m6_527 -> m6_529  [key=0, style=solid];
m6_529 -> m6_530  [key=0, style=solid];
m6_529 -> m6_532  [key=2, style=dotted];
m6_530 -> m6_531  [key=0, style=solid];
m6_528 -> m6_531  [key=0, style=solid];
m6_531 -> m6_287  [color=blue, key=0, style=bold];
m6_271 -> m6_9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m6_271 -> m6_493  [key=0, style=solid];
m6_271 -> m6_495  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_271 -> m6_497  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m6_271 -> m6_503  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_271 -> m6_506  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_271 -> m6_507  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_271 -> m6_508  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_271 -> m6_509  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_271 -> m6_510  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m6_271 -> m6_19  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Delisting> delistings", style=bold];
m6_493 -> m6_494  [key=0, style=solid];
m6_493 -> m6_495  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_493 -> m6_497  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_493 -> m6_510  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_493 -> m6_511  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_495 -> m6_496  [key=0, style=solid];
m6_495 -> m6_498  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_495 -> m6_499  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_495 -> m6_500  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_495 -> m6_502  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_495 -> m6_503  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_495 -> m6_504  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_495 -> m6_505  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_495 -> m6_506  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_495 -> m6_507  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_495 -> m6_508  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_497 -> m6_498  [key=0, style=solid];
m6_503 -> m6_504  [key=0, style=solid];
m6_506 -> m6_509  [key=0, style=solid];
m6_506 -> m6_515  [key=2, style=dotted];
m6_507 -> m6_509  [key=0, style=solid];
m6_507 -> m6_515  [key=2, style=dotted];
m6_508 -> m6_509  [key=0, style=solid];
m6_508 -> m6_515  [key=2, style=dotted];
m6_509 -> m6_510  [key=0, style=solid];
m6_509 -> m6_516  [key=2, style=dotted];
m6_510 -> m6_511  [key=0, style=solid];
m6_510 -> m6_517  [key=2, style=dotted];
m6_494 -> m6_512  [key=0, style=solid];
m6_494 -> m6_495  [key=0, style=solid];
m6_511 -> m6_494  [key=0, style=solid];
m6_511 -> m6_511  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_496 -> m6_497  [key=0, style=solid];
m6_496 -> m6_494  [key=0, style=solid];
m6_498 -> m6_499  [key=0, style=solid];
m6_498 -> m6_513  [key=2, style=dotted];
m6_499 -> m6_500  [key=0, style=solid];
m6_499 -> m6_514  [key=2, style=dotted];
m6_500 -> m6_494  [key=0, style=solid];
m6_500 -> m6_501  [key=0, style=solid];
m6_502 -> m6_503  [key=0, style=solid];
m6_502 -> m6_508  [key=0, style=solid];
m6_504 -> m6_505  [key=0, style=solid];
m6_505 -> m6_506  [key=0, style=solid];
m6_505 -> m6_507  [key=0, style=solid];
m6_501 -> m6_502  [key=0, style=solid];
m6_512 -> m6_271  [color=blue, key=0, style=bold];
m6_239 -> m6_9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m6_239 -> m6_473  [key=0, style=solid];
m6_239 -> m6_475  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
m6_239 -> m6_14  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<System.Type, MethodInvoker> methodInvokers", style=bold];
m6_239 -> m6_214  [color=darkorchid, key=3, label="method methodReturn bool AddMethodInvoker", style=bold];
m6_239 -> m6_100  [color=darkorchid, key=3, label="method methodReturn bool AddMethodInvoker", style=bold];
m6_473 -> m6_474  [key=0, style=solid];
m6_473 -> m6_240  [key=2, style=dotted];
m6_473 -> m6_244  [key=2, style=dotted];
m6_473 -> m6_475  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
m6_475 -> m6_476  [key=0, style=solid];
m6_475 -> m6_247  [key=2, style=dotted];
m6_475 -> m6_248  [key=2, style=dotted];
m6_477 -> m6_478  [key=0, style=solid];
m6_476 -> m6_478  [key=0, style=solid];
m6_474 -> m6_475  [key=0, style=solid];
m6_474 -> m6_477  [key=0, style=solid];
m6_478 -> m6_239  [color=blue, key=0, style=bold];
m6_253 -> m6_51  [color=darkorchid, key=3, label="Field variable System.DateTime _previousTime", style=bold];
m6_250 -> m6_9  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
m6_250 -> m6_328  [key=0, style=solid];
m6_250 -> m6_371  [color=crimson, key=0, style=bold];
m6_250 -> m6_381  [color=crimson, key=0, style=bold];
m6_250 -> m6_408  [color=crimson, key=0, style=bold];
m6_250 -> m6_329  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_330  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_331  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_332  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_334  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_337  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_340  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_344  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_359  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_367  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_370  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_376  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_380  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_250 -> m6_383  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_384  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_386  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_388  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m6_250 -> m6_392  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_396  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_401  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_402  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_250 -> m6_407  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m6_332 -> m6_333  [key=0, style=solid];
m6_332 -> m6_410  [key=2, style=dotted];
m6_375 -> m6_376  [key=0, style=solid];
m6_391 -> m6_392  [key=0, style=solid];
m6_380 -> m6_277  [key=2, style=dotted];
m6_380 -> m6_381  [key=0, style=solid];
m6_380 -> m6_302  [key=2, style=dotted];
m6_407 -> m6_277  [key=2, style=dotted];
m6_407 -> m6_408  [key=0, style=solid];
m6_407 -> m6_302  [key=2, style=dotted];
m6_328 -> m6_100  [color=darkorchid, key=3, label="Local variable bool setStartTime", style=bold];
m6_328 -> m6_329  [key=0, style=solid];
m6_328 -> m6_373  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m6_328 -> m6_389  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m6_371 -> m6_372  [key=0, style=solid];
m6_381 -> m6_382  [key=0, style=solid];
m6_408 -> m6_388  [key=0, style=solid];
m6_329 -> m6_330  [key=0, style=solid];
m6_329 -> m6_355  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m6_329 -> m6_367  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_355  [color=darkseagreen4, key=1, label=history, style=dashed];
m6_331 -> m6_332  [key=0, style=solid];
m6_331 -> m6_333  [key=0, style=solid];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_411  [key=2, style=dotted];
m6_334 -> m6_285  [key=2, style=dotted];
m6_334 -> m6_339  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m6_334 -> m6_342  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m6_334 -> m6_348  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m6_334 -> m6_349  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m6_334 -> m6_350  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m6_334 -> m6_352  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m6_334 -> m6_355  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m6_334 -> m6_383  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m6_334 -> m6_385  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m6_337 -> m6_338  [key=0, style=solid];
m6_337 -> m6_413  [key=2, style=dotted];
m6_337 -> m6_414  [key=2, style=dotted];
m6_337 -> m6_415  [key=2, style=dotted];
m6_337 -> m6_434  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_242  [key=2, style=dotted];
m6_340 -> m6_416  [key=2, style=dotted];
m6_340 -> m6_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_344 -> m6_344  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_344 -> m6_345  [key=0, style=solid];
m6_344 -> m6_342  [key=0, style=solid];
m6_344 -> m6_417  [key=2, style=dotted];
m6_344 -> m6_418  [key=2, style=dotted];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_366  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_367 -> m6_375  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_367 -> m6_381  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_367 -> m6_368  [key=0, style=solid];
m6_367 -> m6_372  [key=0, style=solid];
m6_367 -> m6_426  [key=2, style=dotted];
m6_367 -> m6_427  [key=2, style=dotted];
m6_367 -> m6_379  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_367 -> m6_382  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_370 -> m6_371  [key=0, style=solid];
m6_376 -> m6_377  [key=0, style=solid];
m6_376 -> m6_429  [key=2, style=dotted];
m6_383 -> m6_384  [key=0, style=solid];
m6_383 -> m6_388  [key=0, style=solid];
m6_384 -> m6_385  [key=0, style=solid];
m6_384 -> m6_430  [key=2, style=dotted];
m6_386 -> m6_387  [key=0, style=solid];
m6_386 -> m6_429  [key=2, style=dotted];
m6_388 -> m6_391  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_388 -> m6_409  [key=0, style=solid];
m6_388 -> m6_408  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_388 -> m6_389  [key=0, style=solid];
m6_388 -> m6_395  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_388 -> m6_400  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_388 -> m6_406  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m6_392 -> m6_408  [key=0, style=solid];
m6_392 -> m6_393  [key=0, style=solid];
m6_396 -> m6_397  [key=0, style=solid];
m6_396 -> m6_395  [key=0, style=solid];
m6_396 -> m6_426  [key=2, style=dotted];
m6_401 -> m6_402  [key=0, style=solid];
m6_401 -> m6_430  [key=2, style=dotted];
m6_402 -> m6_403  [key=0, style=solid];
m6_402 -> m6_429  [key=2, style=dotted];
m6_394 -> m6_100  [color=darkorchid, key=3, label="Local variable bool hasHistoricalData", style=bold];
m6_394 -> m6_395  [key=0, style=solid];
m6_394 -> m6_398  [color=darkseagreen4, key=1, label=hasHistoricalData, style=dashed];
m6_333 -> m6_1  [color=darkorchid, key=3, label="Local variable System.DateTime? lastHistoryTimeUtc", style=bold];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_396  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m6_333 -> m6_393  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m6_374 -> m6_375  [key=0, style=solid];
m6_374 -> m6_389  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m6_390 -> m6_391  [key=0, style=solid];
m6_379 -> m6_380  [key=0, style=solid];
m6_406 -> m6_407  [key=0, style=solid];
m6_373 -> m6_374  [key=0, style=solid];
m6_373 -> m6_377  [key=0, style=solid];
m6_389 -> m6_392  [key=0, style=solid];
m6_389 -> m6_390  [key=0, style=solid];
m6_372 -> m6_373  [key=0, style=solid];
m6_372 -> m6_355  [key=0, style=solid];
m6_377 -> m6_381  [key=0, style=solid];
m6_377 -> m6_378  [key=0, style=solid];
m6_382 -> m6_396  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m6_382 -> m6_355  [key=0, style=solid];
m6_382 -> m6_393  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m6_404 -> m6_408  [key=0, style=solid];
m6_404 -> m6_405  [key=0, style=solid];
m6_403 -> m6_408  [key=0, style=solid];
m6_403 -> n25  [key=2, style=dotted];
m6_355 -> m6_367  [color=darkseagreen4, key=1, label=slice, style=dashed];
m6_355 -> m6_383  [key=0, style=solid];
m6_355 -> m6_356  [key=0, style=solid];
m6_355 -> m6_421  [key=2, style=dotted];
m6_355 -> m6_358  [color=darkseagreen4, key=1, label=slice, style=dashed];
m6_355 -> m6_360  [color=darkseagreen4, key=1, label=slice, style=dashed];
m6_335 -> m6_379  [color=darkseagreen4, key=1, label=start, style=dashed];
m6_335 -> m6_406  [color=darkseagreen4, key=1, label=start, style=dashed];
m6_335 -> m6_336  [key=0, style=solid];
m6_335 -> m6_353  [color=darkseagreen4, key=1, label=start, style=dashed];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_383  [key=0, style=solid];
m6_342 -> m6_344  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_348  [key=0, style=solid];
m6_342 -> m6_345  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_342 -> m6_346  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_342 -> m6_347  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_348 -> m6_349  [key=0, style=solid];
m6_348 -> m6_352  [key=0, style=solid];
m6_348 -> m6_419  [key=2, style=dotted];
m6_348 -> m6_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_349 -> m6_242  [key=2, style=dotted];
m6_349 -> m6_350  [key=0, style=solid];
m6_349 -> m6_415  [key=2, style=dotted];
m6_349 -> m6_447  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_349 -> m6_450  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_349 -> m6_351  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m6_350 -> m6_242  [key=2, style=dotted];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_352  [key=0, style=solid];
m6_350 -> m6_453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_352 -> m6_355  [key=0, style=solid];
m6_352 -> m6_353  [key=0, style=solid];
m6_352 -> m6_354  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_385 -> m6_386  [key=0, style=solid];
m6_385 -> m6_388  [key=0, style=solid];
m6_336 -> m6_337  [key=0, style=solid];
m6_336 -> m6_377  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m6_336 -> m6_404  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m6_336 -> m6_412  [key=2, style=dotted];
m6_338 -> m6_339  [key=0, style=solid];
m6_338 -> m6_338  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
m6_338 -> m6_400  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
m6_341 -> m6_342  [key=0, style=solid];
m6_341 -> m6_415  [key=2, style=dotted];
m6_341 -> m6_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_341 -> m6_345  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m6_341 -> m6_346  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m6_341 -> m6_347  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m6_343 -> m6_344  [key=0, style=solid];
m6_345 -> m6_342  [key=0, style=solid];
m6_345 -> m6_346  [key=0, style=solid];
m6_358 -> m6_359  [key=0, style=solid];
m6_358 -> m6_367  [key=0, style=solid];
m6_358 -> m6_360  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_360 -> m6_361  [key=0, style=solid];
m6_360 -> m6_362  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_360 -> m6_365  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_366 -> m6_358  [key=0, style=solid];
m6_366 -> m6_424  [key=2, style=dotted];
m6_366 -> m6_425  [key=2, style=dotted];
m6_366 -> m6_423  [key=2, style=dotted];
m6_357 -> m6_367  [color=darkseagreen4, key=1, label=paired, style=dashed];
m6_357 -> m6_358  [key=0, style=solid];
m6_357 -> m6_366  [color=darkseagreen4, key=1, label=paired, style=dashed];
m6_357 -> m6_238  [key=2, style=dotted];
m6_368 -> m6_369  [key=0, style=solid];
m6_369 -> m6_370  [key=0, style=solid];
m6_369 -> m6_428  [key=2, style=dotted];
m6_387 -> m6_388  [key=0, style=solid];
m6_387 -> n25  [key=2, style=dotted];
m6_398 -> m6_388  [key=0, style=solid];
m6_398 -> m6_399  [key=0, style=solid];
m6_395 -> m6_396  [key=0, style=solid];
m6_395 -> m6_398  [key=0, style=solid];
m6_395 -> m6_431  [key=2, style=dotted];
m6_395 -> m6_432  [key=2, style=dotted];
m6_395 -> m6_456  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_404  [key=0, style=solid];
m6_400 -> m6_433  [key=2, style=dotted];
m6_393 -> m6_394  [key=0, style=solid];
m6_393 -> m6_400  [key=0, style=solid];
m6_397 -> m6_398  [key=0, style=solid];
m6_354 -> n25  [key=2, style=dotted];
m6_354 -> m6_275  [key=2, style=dotted];
m6_354 -> m6_352  [key=0, style=solid];
m6_353 -> m6_379  [color=darkseagreen4, key=1, label=start, style=dashed];
m6_353 -> m6_406  [color=darkseagreen4, key=1, label=start, style=dashed];
m6_353 -> m6_354  [key=0, style=solid];
m6_353 -> m6_353  [color=darkseagreen4, key=1, label=start, style=dashed];
m6_353 -> m6_420  [key=2, style=dotted];
m6_378 -> m6_379  [key=0, style=solid];
m6_378 -> m6_404  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m6_378 -> m6_412  [key=2, style=dotted];
m6_405 -> m6_406  [key=0, style=solid];
m6_405 -> m6_412  [key=2, style=dotted];
m6_356 -> m6_357  [key=0, style=solid];
m6_347 -> m6_342  [key=0, style=solid];
m6_346 -> m6_347  [key=0, style=solid];
m6_351 -> m6_350  [key=0, style=solid];
m6_351 -> m6_351  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_361 -> m6_366  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_361 -> m6_238  [key=2, style=dotted];
m6_361 -> m6_362  [key=0, style=solid];
m6_361 -> m6_364  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_361 -> m6_365  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_362 -> m6_363  [key=0, style=solid];
m6_362 -> m6_364  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m6_365 -> m6_366  [key=0, style=solid];
m6_365 -> m6_423  [key=2, style=dotted];
m6_364 -> m6_366  [key=0, style=solid];
m6_364 -> m6_422  [key=2, style=dotted];
m6_399 -> m6_400  [key=0, style=solid];
m6_363 -> m6_365  [key=0, style=solid];
m6_363 -> m6_364  [key=0, style=solid];
m6_409 -> m6_250  [color=blue, key=0, style=bold];
m6_410 -> m6_250  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m6_410 -> m6_459  [key=0, style=solid];
m6_410 -> m6_460  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_410 -> m6_462  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_410 -> m6_463  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_410 -> m6_464  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_459 -> n25  [key=2, style=dotted];
m6_459 -> m6_460  [key=0, style=solid];
m6_460 -> m6_469  [key=0, style=solid];
m6_460 -> m6_461  [key=0, style=solid];
m6_460 -> m6_462  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_460 -> m6_467  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_460 -> m6_468  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_462 -> m6_463  [key=0, style=solid];
m6_462 -> m6_470  [key=2, style=dotted];
m6_462 -> m6_464  [color=darkseagreen4, key=1, label=historyReq, style=dashed];
m6_463 -> m6_460  [key=0, style=solid];
m6_463 -> m6_464  [key=0, style=solid];
m6_464 -> m6_465  [key=0, style=solid];
m6_464 -> m6_421  [key=2, style=dotted];
m6_464 -> m6_466  [color=darkseagreen4, key=1, label=history, style=dashed];
m6_461 -> m6_460  [key=0, style=solid];
m6_461 -> m6_462  [key=0, style=solid];
m6_465 -> m6_460  [key=0, style=solid];
m6_465 -> m6_466  [key=0, style=solid];
m6_466 -> m6_460  [key=0, style=solid];
m6_466 -> m6_467  [key=0, style=solid];
m6_466 -> m6_468  [color=darkseagreen4, key=1, label=slice, style=dashed];
m6_467 -> m6_466  [key=0, style=solid];
m6_467 -> m6_468  [key=0, style=solid];
m6_467 -> m6_471  [key=2, style=dotted];
m6_468 -> m6_466  [key=0, style=solid];
m6_468 -> m6_472  [key=2, style=dotted];
m6_469 -> m6_410  [color=blue, key=0, style=bold];
m6_323 -> m6_324  [key=0, style=solid];
m6_323 -> m6_326  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
m6_323 -> m6_325  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
m6_324 -> m6_325  [key=0, style=solid];
m6_326 -> m6_327  [key=0, style=solid];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_327  [key=0, style=solid];
m6_327 -> m6_323  [color=blue, key=0, style=bold];
m6_294 -> m6_9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m6_294 -> m6_479  [key=0, style=solid];
m6_294 -> m6_481  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m6_294 -> m6_482  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m6_294 -> m6_485  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_294 -> m6_19  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Delisting> delistings", style=bold];
m6_479 -> m6_488  [key=0, style=solid];
m6_479 -> m6_480  [key=0, style=solid];
m6_479 -> m6_481  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m6_479 -> m6_491  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m6_479 -> m6_482  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m6_479 -> m6_483  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m6_479 -> m6_484  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m6_479 -> m6_485  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m6_481 -> m6_479  [key=0, style=solid];
m6_481 -> m6_482  [key=0, style=solid];
m6_481 -> m6_419  [key=2, style=dotted];
m6_481 -> m6_490  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_482 -> m6_483  [key=0, style=solid];
m6_482 -> m6_423  [key=2, style=dotted];
m6_485 -> m6_486  [key=0, style=solid];
m6_485 -> m6_489  [key=2, style=dotted];
m6_483 -> m6_479  [key=0, style=solid];
m6_483 -> n25  [key=2, style=dotted];
m6_486 -> m6_479  [key=0, style=solid];
m6_486 -> m6_487  [key=0, style=solid];
m6_480 -> m6_481  [key=0, style=solid];
m6_480 -> m6_484  [key=0, style=solid];
m6_484 -> m6_485  [key=0, style=solid];
m6_484 -> n25  [key=2, style=dotted];
m6_487 -> n25  [key=2, style=dotted];
m6_487 -> m6_486  [key=0, style=solid];
m6_488 -> m6_294  [color=blue, key=0, style=bold];
m6_252 -> m6_268  [color=darkorchid, key=3, label="Property variable string AlgorithmId", style=bold];
m6_268 -> m6_268  [color=darkorchid, key=3, label="Field variable string _algorithmId", style=bold];
m6_533 -> m6_108  [color=green, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_116  [color=green, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_94  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_96  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_120  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_127  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_136  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_141  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_154  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_165  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_176  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_193  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_200  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_204  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_206  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_210  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_215  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_220  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_230  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_231  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_234  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_324  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_326  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_332  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_375  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_391  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_533 -> m6_521  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m6_534 -> m6_311  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m6_537 -> m6_491  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m6_535 -> m6_314  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_536 -> m6_318  [color=darkseagreen4, key=1, label=split, style=dashed];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_3  [color=green, key=2, style=dotted];
m7_1 -> m7_4  [color=green, key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_3  [key=2, style=dotted];
m7_6 -> m7_4  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_5  [color=blue, key=0, style=bold];
m8_73 -> m8_74  [key=0, style=solid];
m8_74 -> m8_12  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_79  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_74 -> m8_85  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_74 -> m8_91  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_77 -> m8_15  [key=2, style=dotted];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_79  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_77 -> m8_84  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_77 -> m8_85  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_77 -> m8_90  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_77 -> m8_91  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_78 -> m8_17  [key=2, style=dotted];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_16  [key=2, style=dotted];
m8_84 -> m8_17  [key=2, style=dotted];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_16  [key=2, style=dotted];
m8_90 -> m8_17  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_16  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_97  [key=2, style=dotted];
m8_75 -> m8_79  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_75 -> m8_83  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_75 -> m8_85  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_75 -> m8_89  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_75 -> m8_91  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_75 -> m8_92  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_75 -> m8_93  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_75 -> m8_95  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_98  [key=2, style=dotted];
m8_79 -> m8_81  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_79 -> m8_82  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_98  [key=2, style=dotted];
m8_85 -> m8_87  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_85 -> m8_88  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_98  [key=2, style=dotted];
m8_91 -> m8_93  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_91 -> m8_94  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_76 -> m8_14  [key=2, style=dotted];
m8_76 -> m8_77  [key=0, style=solid];
m8_83 -> m8_19  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_89 -> m8_19  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_92 -> m8_19  [key=2, style=dotted];
m8_92 -> m8_93  [key=0, style=solid];
m8_93 -> m8_19  [key=2, style=dotted];
m8_93 -> m8_94  [key=0, style=solid];
m8_95 -> m8_19  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_80 -> m8_19  [key=2, style=dotted];
m8_80 -> m8_81  [key=0, style=solid];
m8_81 -> m8_19  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid];
m8_82 -> m8_19  [key=2, style=dotted];
m8_82 -> m8_83  [key=0, style=solid];
m8_86 -> m8_19  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_87 -> m8_19  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_88 -> m8_19  [key=2, style=dotted];
m8_88 -> m8_89  [key=0, style=solid];
m8_94 -> m8_19  [key=2, style=dotted];
m8_94 -> m8_95  [key=0, style=solid];
m8_96 -> m8_73  [color=blue, key=0, style=bold];
m8_99 -> m8_100  [key=0, style=solid];
m8_100 -> m8_12  [key=2, style=dotted];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_105  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_100 -> m8_111  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_100 -> m8_117  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_103 -> m8_15  [key=2, style=dotted];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_105  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_103 -> m8_110  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_103 -> m8_111  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_103 -> m8_116  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_103 -> m8_117  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_104 -> m8_17  [key=2, style=dotted];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_16  [key=2, style=dotted];
m8_110 -> m8_17  [key=2, style=dotted];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_16  [key=2, style=dotted];
m8_116 -> m8_17  [key=2, style=dotted];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_16  [key=2, style=dotted];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_97  [key=2, style=dotted];
m8_101 -> m8_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_101 -> m8_109  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_101 -> m8_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_101 -> m8_115  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_101 -> m8_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_101 -> m8_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_101 -> m8_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_101 -> m8_121  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_98  [key=2, style=dotted];
m8_105 -> m8_107  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_105 -> m8_108  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_98  [key=2, style=dotted];
m8_111 -> m8_113  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_111 -> m8_114  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_98  [key=2, style=dotted];
m8_117 -> m8_119  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_117 -> m8_120  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_102 -> m8_14  [key=2, style=dotted];
m8_102 -> m8_103  [key=0, style=solid];
m8_109 -> m8_19  [key=2, style=dotted];
m8_109 -> m8_110  [key=0, style=solid];
m8_115 -> m8_19  [key=2, style=dotted];
m8_115 -> m8_116  [key=0, style=solid];
m8_118 -> m8_19  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_119 -> m8_19  [key=2, style=dotted];
m8_119 -> m8_120  [key=0, style=solid];
m8_121 -> m8_19  [key=2, style=dotted];
m8_121 -> m8_122  [key=0, style=solid];
m8_106 -> m8_19  [key=2, style=dotted];
m8_106 -> m8_107  [key=0, style=solid];
m8_107 -> m8_19  [key=2, style=dotted];
m8_107 -> m8_108  [key=0, style=solid];
m8_108 -> m8_19  [key=2, style=dotted];
m8_108 -> m8_109  [key=0, style=solid];
m8_112 -> m8_19  [key=2, style=dotted];
m8_112 -> m8_113  [key=0, style=solid];
m8_113 -> m8_19  [key=2, style=dotted];
m8_113 -> m8_114  [key=0, style=solid];
m8_114 -> m8_19  [key=2, style=dotted];
m8_114 -> m8_115  [key=0, style=solid];
m8_120 -> m8_19  [key=2, style=dotted];
m8_120 -> m8_121  [key=0, style=solid];
m8_122 -> m8_99  [color=blue, key=0, style=bold];
m8_186 -> m8_187  [color=green, key=0, style=solid];
m8_187 -> m8_188  [color=green, key=0, style=solid];
m8_187 -> m8_181  [color=green, key=2, style=dotted];
m8_187 -> m8_189  [color=green, key=1, label=reference, style=dashed];
m8_187 -> m8_192  [color=green, key=1, label=reference, style=dashed];
m8_187 -> m8_196  [color=green, key=1, label=reference, style=dashed];
m8_187 -> m8_200  [color=green, key=1, label=reference, style=dashed];
m8_192 -> m8_187  [color=green, key=3, label="Local variable System.DateTime time", style=bold];
m8_192 -> m8_193  [key=0, style=solid];
m8_188 -> m8_189  [key=0, style=solid];
m8_188 -> m8_12  [key=2, style=dotted];
m8_188 -> m8_194  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_188 -> m8_198  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_188 -> m8_202  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_189 -> m8_190  [key=0, style=solid];
m8_189 -> m8_206  [key=2, style=dotted];
m8_189 -> m8_194  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_189 -> m8_198  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_189 -> m8_202  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_189 -> m8_203  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_196 -> m8_197  [key=0, style=solid];
m8_196 -> m8_185  [key=2, style=dotted];
m8_200 -> m8_201  [key=0, style=solid];
m8_200 -> m8_185  [key=2, style=dotted];
m8_191 -> m8_192  [key=0, style=solid];
m8_191 -> m8_15  [key=2, style=dotted];
m8_191 -> m8_183  [key=2, style=dotted];
m8_191 -> m8_193  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_191 -> m8_194  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_191 -> m8_197  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_191 -> m8_198  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_191 -> m8_201  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_191 -> m8_202  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_191 -> m8_204  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_52  [key=2, style=dotted];
m8_193 -> m8_17  [key=2, style=dotted];
m8_194 -> m8_195  [key=0, style=solid];
m8_194 -> m8_207  [key=2, style=dotted];
m8_198 -> m8_199  [key=0, style=solid];
m8_198 -> m8_207  [key=2, style=dotted];
m8_202 -> m8_203  [key=0, style=solid];
m8_202 -> m8_207  [key=2, style=dotted];
m8_202 -> m8_204  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_190 -> m8_191  [key=0, style=solid];
m8_190 -> m8_14  [key=2, style=dotted];
m8_203 -> m8_204  [key=0, style=solid];
m8_203 -> m8_19  [key=2, style=dotted];
m8_195 -> m8_196  [key=0, style=solid];
m8_195 -> m8_19  [key=2, style=dotted];
m8_197 -> m8_198  [key=0, style=solid];
m8_197 -> m8_52  [key=2, style=dotted];
m8_197 -> m8_17  [key=2, style=dotted];
m8_199 -> m8_200  [key=0, style=solid];
m8_199 -> m8_19  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_52  [key=2, style=dotted];
m8_201 -> m8_17  [key=2, style=dotted];
m8_204 -> m8_205  [key=0, style=solid];
m8_204 -> m8_19  [key=2, style=dotted];
m8_205 -> m8_186  [color=blue, key=0, style=bold];
m8_123 -> m8_124  [key=0, style=solid];
m8_124 -> m8_12  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_129  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_124 -> m8_135  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_127 -> m8_15  [key=2, style=dotted];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_129  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_127 -> m8_134  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_127 -> m8_135  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_127 -> m8_137  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_128 -> m8_17  [key=2, style=dotted];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_16  [key=2, style=dotted];
m8_134 -> m8_17  [key=2, style=dotted];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_16  [key=2, style=dotted];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_141  [key=2, style=dotted];
m8_125 -> m8_129  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_125 -> m8_133  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_125 -> m8_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_125 -> m8_136  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_125 -> m8_137  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_125 -> m8_139  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_142  [key=2, style=dotted];
m8_129 -> m8_131  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_129 -> m8_132  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_142  [key=2, style=dotted];
m8_135 -> m8_137  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_135 -> m8_138  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_126 -> m8_14  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_133 -> m8_19  [key=2, style=dotted];
m8_133 -> m8_134  [key=0, style=solid];
m8_136 -> m8_19  [key=2, style=dotted];
m8_136 -> m8_137  [key=0, style=solid];
m8_137 -> m8_19  [key=2, style=dotted];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_72  [key=2, style=dotted];
m8_139 -> m8_19  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_130 -> m8_19  [key=2, style=dotted];
m8_130 -> m8_131  [key=0, style=solid];
m8_131 -> m8_19  [key=2, style=dotted];
m8_131 -> m8_132  [key=0, style=solid];
m8_132 -> m8_19  [key=2, style=dotted];
m8_132 -> m8_133  [key=0, style=solid];
m8_138 -> m8_19  [key=2, style=dotted];
m8_138 -> m8_139  [key=0, style=solid];
m8_140 -> m8_123  [color=blue, key=0, style=bold];
m8_161 -> m8_162  [color=green, key=0, style=solid];
m8_162 -> m8_163  [color=green, key=0, style=solid];
m8_162 -> m8_181  [color=green, key=2, style=dotted];
m8_162 -> m8_164  [color=green, key=1, label=reference, style=dashed];
m8_162 -> m8_167  [color=green, key=1, label=reference, style=dashed];
m8_162 -> m8_171  [color=green, key=1, label=reference, style=dashed];
m8_162 -> m8_175  [color=green, key=1, label=reference, style=dashed];
m8_167 -> m8_162  [color=green, key=3, label="Local variable System.DateTime time", style=bold];
m8_167 -> m8_168  [key=0, style=solid];
m8_163 -> m8_164  [key=0, style=solid];
m8_163 -> m8_12  [key=2, style=dotted];
m8_163 -> m8_169  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_163 -> m8_173  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_163 -> m8_177  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_164 -> m8_165  [key=0, style=solid];
m8_164 -> m8_182  [key=2, style=dotted];
m8_164 -> m8_169  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_164 -> m8_173  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_164 -> m8_177  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_164 -> m8_178  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_185  [key=2, style=dotted];
m8_175 -> m8_176  [key=0, style=solid];
m8_175 -> m8_185  [key=2, style=dotted];
m8_166 -> m8_167  [key=0, style=solid];
m8_166 -> m8_15  [key=2, style=dotted];
m8_166 -> m8_183  [key=2, style=dotted];
m8_166 -> m8_168  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_166 -> m8_169  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_166 -> m8_172  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_166 -> m8_173  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_166 -> m8_176  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_166 -> m8_177  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_166 -> m8_179  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_52  [key=2, style=dotted];
m8_168 -> m8_17  [key=2, style=dotted];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_184  [key=2, style=dotted];
m8_173 -> m8_174  [key=0, style=solid];
m8_173 -> m8_184  [key=2, style=dotted];
m8_177 -> m8_178  [key=0, style=solid];
m8_177 -> m8_184  [key=2, style=dotted];
m8_177 -> m8_179  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_165 -> m8_166  [key=0, style=solid];
m8_165 -> m8_14  [key=2, style=dotted];
m8_178 -> m8_179  [key=0, style=solid];
m8_178 -> m8_19  [key=2, style=dotted];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_19  [key=2, style=dotted];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_52  [key=2, style=dotted];
m8_172 -> m8_17  [key=2, style=dotted];
m8_174 -> m8_175  [key=0, style=solid];
m8_174 -> m8_19  [key=2, style=dotted];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_52  [key=2, style=dotted];
m8_176 -> m8_17  [key=2, style=dotted];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_19  [key=2, style=dotted];
m8_180 -> m8_161  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_12  [key=2, style=dotted];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_6  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_4 -> m8_15  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_6  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_4 -> m8_8  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_5 -> m8_17  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_16  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_13  [key=2, style=dotted];
m8_2 -> m8_6  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_2 -> m8_7  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_2 -> m8_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_18  [key=2, style=dotted];
m8_6 -> m8_8  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_6 -> m8_9  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_3 -> m8_14  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_7 -> m8_19  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_10 -> m8_19  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_8 -> m8_19  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_19  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_11 -> m8_0  [color=blue, key=0, style=bold];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_12  [key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_26  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_24 -> m8_15  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_26  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_24 -> m8_28  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_25 -> m8_17  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_16  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_13  [key=2, style=dotted];
m8_22 -> m8_26  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_22 -> m8_27  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_22 -> m8_30  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_18  [key=2, style=dotted];
m8_26 -> m8_28  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_26 -> m8_29  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_23 -> m8_14  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_27 -> m8_19  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_30 -> m8_19  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_28 -> m8_19  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_29 -> m8_19  [key=2, style=dotted];
m8_29 -> m8_30  [key=0, style=solid];
m8_31 -> m8_20  [color=blue, key=0, style=bold];
m8_143 -> m8_144  [key=0, style=solid];
m8_144 -> m8_12  [key=2, style=dotted];
m8_144 -> m8_145  [key=0, style=solid];
m8_144 -> m8_149  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_144 -> m8_155  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_147 -> m8_15  [key=2, style=dotted];
m8_147 -> m8_148  [key=0, style=solid];
m8_147 -> m8_149  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_147 -> m8_154  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_147 -> m8_155  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_147 -> m8_157  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_148 -> m8_17  [key=2, style=dotted];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_16  [key=2, style=dotted];
m8_154 -> m8_17  [key=2, style=dotted];
m8_154 -> m8_155  [key=0, style=solid];
m8_154 -> m8_16  [key=2, style=dotted];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_141  [key=2, style=dotted];
m8_145 -> m8_149  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_145 -> m8_153  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_145 -> m8_155  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_145 -> m8_156  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_145 -> m8_157  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_145 -> m8_159  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_149 -> m8_150  [key=0, style=solid];
m8_149 -> m8_142  [key=2, style=dotted];
m8_149 -> m8_151  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_149 -> m8_152  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_155 -> m8_156  [key=0, style=solid];
m8_155 -> m8_142  [key=2, style=dotted];
m8_155 -> m8_157  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_155 -> m8_158  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_146 -> m8_14  [key=2, style=dotted];
m8_146 -> m8_147  [key=0, style=solid];
m8_153 -> m8_19  [key=2, style=dotted];
m8_153 -> m8_154  [key=0, style=solid];
m8_156 -> m8_19  [key=2, style=dotted];
m8_156 -> m8_157  [key=0, style=solid];
m8_157 -> m8_19  [key=2, style=dotted];
m8_157 -> m8_158  [key=0, style=solid];
m8_157 -> m8_53  [key=2, style=dotted];
m8_159 -> m8_19  [key=2, style=dotted];
m8_159 -> m8_160  [key=0, style=solid];
m8_150 -> m8_19  [key=2, style=dotted];
m8_150 -> m8_151  [key=0, style=solid];
m8_151 -> m8_19  [key=2, style=dotted];
m8_151 -> m8_152  [key=0, style=solid];
m8_152 -> m8_19  [key=2, style=dotted];
m8_152 -> m8_153  [key=0, style=solid];
m8_158 -> m8_19  [key=2, style=dotted];
m8_158 -> m8_159  [key=0, style=solid];
m8_160 -> m8_143  [color=blue, key=0, style=bold];
m8_32 -> m8_33  [key=0, style=solid];
m8_33 -> m8_12  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_38  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_33 -> m8_44  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_36 -> m8_15  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_38  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_36 -> m8_43  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_36 -> m8_44  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_36 -> m8_46  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_43 -> m8_52  [key=2, style=dotted];
m8_43 -> m8_17  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_37 -> m8_17  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_16  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_50  [key=2, style=dotted];
m8_34 -> m8_38  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_34 -> m8_42  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_34 -> m8_44  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_34 -> m8_45  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_34 -> m8_46  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_34 -> m8_48  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_51  [key=2, style=dotted];
m8_38 -> m8_40  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_38 -> m8_41  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_51  [key=2, style=dotted];
m8_44 -> m8_46  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_44 -> m8_47  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_35 -> m8_14  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_42 -> m8_19  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_45 -> m8_19  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_46 -> m8_19  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_53  [key=2, style=dotted];
m8_48 -> m8_19  [key=2, style=dotted];
m8_48 -> m8_49  [key=0, style=solid];
m8_39 -> m8_19  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_40 -> m8_19  [key=2, style=dotted];
m8_40 -> m8_41  [key=0, style=solid];
m8_41 -> m8_19  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_47 -> m8_19  [key=2, style=dotted];
m8_47 -> m8_48  [key=0, style=solid];
m8_49 -> m8_32  [color=blue, key=0, style=bold];
m8_54 -> m8_55  [key=0, style=solid];
m8_55 -> m8_12  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_60  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_55 -> m8_66  [color=darkseagreen4, key=1, label=model, style=dashed];
m8_58 -> m8_15  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_60  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_58 -> m8_65  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_58 -> m8_66  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_58 -> m8_68  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_65 -> m8_52  [key=2, style=dotted];
m8_65 -> m8_17  [key=2, style=dotted];
m8_65 -> m8_66  [key=0, style=solid];
m8_59 -> m8_17  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_16  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_50  [key=2, style=dotted];
m8_56 -> m8_60  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_56 -> m8_64  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_56 -> m8_66  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_56 -> m8_67  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_56 -> m8_68  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_56 -> m8_70  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_51  [key=2, style=dotted];
m8_60 -> m8_62  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_60 -> m8_63  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_51  [key=2, style=dotted];
m8_66 -> m8_68  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_66 -> m8_69  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_57 -> m8_14  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_64 -> m8_19  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_67 -> m8_19  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_68 -> m8_19  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_72  [key=2, style=dotted];
m8_70 -> m8_19  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_61 -> m8_19  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_19  [key=2, style=dotted];
m8_62 -> m8_63  [key=0, style=solid];
m8_63 -> m8_19  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_69 -> m8_19  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_71 -> m8_54  [color=blue, key=0, style=bold];
}
