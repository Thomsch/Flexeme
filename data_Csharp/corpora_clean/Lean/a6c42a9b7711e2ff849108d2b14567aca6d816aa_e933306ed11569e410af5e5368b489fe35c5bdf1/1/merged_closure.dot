digraph  {
n4 [label="QuantConnect.Securities.Cfd.Cfd", span=""];
n0 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
n1 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", label="Holdings = new CfdHolding(this)", span="52-52"];
n2 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", label="Exit QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
n3 [cluster="QuantConnect.Securities.Cfd.CfdHolding.CfdHolding(QuantConnect.Securities.Cfd.Cfd)", label="Entry QuantConnect.Securities.Cfd.CfdHolding.CfdHolding(QuantConnect.Securities.Cfd.Cfd)", span="27-27"];
m0_0 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Equity.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m0_1 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", color=green, community=0, file="Equity.cs", label="Holdings = new EquityHolding(this)", prediction=0, span="58-58"];
m0_2 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Equity.cs", label="Exit QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m0_3 [cluster="QuantConnect.Securities.Equity.EquityHolding.EquityHolding(QuantConnect.Securities.Security)", file="Equity.cs", label="Entry QuantConnect.Securities.Equity.EquityHolding.EquityHolding(QuantConnect.Securities.Security)", span="27-27"];
m0_4 [file="Equity.cs", label="QuantConnect.Securities.Equity.Equity", span=""];
m1_57 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="237-237"];
m1_80 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="240-240"];
m1_81 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="_orders[order.Id] = order", span="242-242"];
m1_82 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="!_brokerage.CancelOrder(order)", span="244-244"];
m1_79 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Order queued", span="239-239"];
m1_84 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Log.Error(''BrokerageTransactionHandler.HandleCancelledOrder(): Unable to cancel order with ID '' + order.Id + ''.'')", span="252-252"];
m1_83 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="order.Status = OrderStatus.Invalid", span="247-247"];
m1_85 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="237-237"];
m1_103 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="277-277"];
m1_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="Forex.cs", label="_brokerage = brokerage", prediction=1, span="66-66"];
m1_51 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="Forex.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m1_100 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="Forex.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="318-318"];
m1_13 [cluster="lambda expression", file="Forex.cs", label="Entry lambda expression", span="67-70"];
m1_18 [cluster="lambda expression", color=green, community=0, file="Forex.cs", label="decimal delta = _algorithm.Portfolio.Cash - account.CashBalance", prediction=2, span="78-78"];
m1_19 [cluster="lambda expression", color=green, community=0, file="Forex.cs", label="Log.Trace(string.Format(''BrokerageTransactionHandler.AccountChanged(): Algo Cash: {0} Brokerage Cash: {1} Delta: {2}'', algorithm.Portfolio.Cash, account.CashBalance, delta))", prediction=3, span="79-79"];
m1_17 [cluster="lambda expression", file="Forex.cs", label="Entry lambda expression", span="73-80"];
m1_20 [cluster="lambda expression", file="Forex.cs", label="Exit lambda expression", span="73-80"];
m1_14 [cluster="lambda expression", color=green, community=0, file="Forex.cs", label="HandleOrderEvent(fill)", prediction=4, span="69-69"];
m1_15 [cluster="lambda expression", file="Forex.cs", label="Exit lambda expression", span="67-70"];
m1_53 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Forex.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="82-82"];
m1_23 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="109-109"];
m1_24 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="!_exitTriggered", span="111-111"];
m1_26 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="!_orderQueue.TryDequeue(out order)", span="116-116"];
m1_27 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="_algorithm.ProcessingOrder = false", span="118-118"];
m1_29 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="_algorithm.ProcessingOrder = true", span="123-123"];
m1_32 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="!_orders.TryAdd(order.Id, order)", span="131-131"];
m1_36 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="HandleNewOrder(order)", span="142-142"];
m1_38 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="HandleUpdatedOrder(order)", span="146-146"];
m1_40 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="HandleCancelledOrder(order)", span="150-150"];
m1_47 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="ProcessSynchronousEvents()", span="163-163"];
m1_49 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="IsActive = false", span="167-167"];
m1_48 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="166-166"];
m1_33 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Unable to add order to permanent storage. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="133-133"];
m1_28 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="Thread.Sleep(1)", span="119-119"];
m1_25 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="Order order", span="115-115"];
m1_30 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="order.Direction == OrderDirection.Hold", span="126-126"];
m1_31 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Encountered OrderDirection.Hold in OrderID: '' + order.Id)", span="128-128"];
m1_34 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="order.Status", span="139-139"];
m1_46 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Invalid order status found in order queue. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="159-159"];
m1_35 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="OrderStatus.New", span="141-141"];
m1_37 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="OrderStatus.Update", span="145-145"];
m1_39 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="OrderStatus.Canceled", span="149-149"];
m1_41 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="OrderStatus.None", span="154-154"];
m1_45 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="OrderStatus.Submitted", span="158-158"];
m1_42 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="OrderStatus.Invalid", span="155-155"];
m1_44 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="OrderStatus.Filled", span="157-157"];
m1_43 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="OrderStatus.PartiallyFilled", span="156-156"];
m1_50 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Forex.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="109-109"];
m1_60 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Forex.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="181-181"];
m1_61 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Forex.cs", label="_exitTriggered = true", span="183-183"];
m1_62 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Forex.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="181-181"];
m1_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Forex.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_56 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="215-215"];
m1_71 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="218-218"];
m1_72 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="_orders[order.Id] = order", span="220-220"];
m1_73 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="!_brokerage.UpdateOrder(order)", span="221-221"];
m1_70 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Order queued", span="217-217"];
m1_75 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Log.Error(''BrokerageTransactionHandler.HandleUpdatedOrder(): Unable to update order with ID '' + order.Id + ''.'')", span="229-229"];
m1_74 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="order.Status = OrderStatus.Invalid", span="224-224"];
m1_76 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="215-215"];
m1_54 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="Forex.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m1_58 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Forex.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="173-173"];
m1_59 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Forex.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="173-173"];
m1_69 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="67-67"];
m1_104 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="Forex.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255"];
m1_77 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Forex.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_55 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="190-190"];
m1_63 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="_orders.TryAdd(order.Id, order)", span="193-193"];
m1_64 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="_brokerage.PlaceOrder(order)", span="196-196"];
m1_67 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Log.Error(''BrokerageTransactionHandler.HandleNewOrder(): Unable to add new order, order not processed.'')", span="207-207"];
m1_65 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="order.Status = OrderStatus.Submitted", span="198-198"];
m1_66 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="order.Status = OrderStatus.Invalid", span="202-202"];
m1_68 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="190-190"];
m1_101 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="459-459"];
m1_52 [cluster="System.Threading.Thread.Sleep(int)", file="Forex.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_102 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="212-212"];
m1_21 [cluster="string.Format(string, object, object, object)", file="Forex.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m1_86 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="81-81"];
m1_22 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Forex.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="100-100"];
m1_16 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="256-256"];
m1_87 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="var order = _algorithm.Transactions.GetOrderById(fill.OrderId)", span="259-259"];
m1_93 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="_algorithm.Portfolio.ProcessFill(fill)", span="277-277"];
m1_96 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="_algorithm.OnOrderEvent(fill)", span="288-288"];
m1_98 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="292-292"];
m1_89 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvnt(): Unable to locate Order with id '' + fill.OrderId)", span="262-262"];
m1_91 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="order.Status = fill.Status", span="267-267"];
m1_92 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="275-275"];
m1_94 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="fill.Status != OrderStatus.None", span="281-281"];
m1_95 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="Engine.ResultHandler.OrderEvent(fill)", span="284-284"];
m1_88 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="order == null", span="260-260"];
m1_97 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label=Exception, span="290-290"];
m1_90 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="return;", span="263-263"];
m1_99 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Forex.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="256-256"];
m1_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Forex.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59"];
m1_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="Forex.cs", label="brokerage == null", prediction=4, span="61-61"];
m1_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="Forex.cs", label="throw new ArgumentNullException(''brokerage'');", prediction=6, span="63-63"];
m1_78 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Forex.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="74-74"];
m1_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="Forex.cs", label="QuantConnect.Securities.Equity.Equity", prediction=4, span=""];
m1_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="Forex.cs", label="_brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                //_algorithm.Portfolio.SetCash(account.CashBalance);\r\n\r\n                // how close are we?\r\n                decimal delta = _algorithm.Portfolio.Cash - account.CashBalance;\r\n                Log.Trace(string.Format(''BrokerageTransactionHandler.AccountChanged(): Algo Cash: {0} Brokerage Cash: {1} Delta: {2}'', algorithm.Portfolio.Cash, account.CashBalance, delta));\r\n            }", prediction=3, span="73-80"];
m1_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="Forex.cs", label="IsActive = true", prediction=9, span="82-82"];
m1_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="Forex.cs", label="_algorithm = algorithm", prediction=10, span="84-84"];
m1_8 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="Forex.cs", label="_orders = algorithm.Transactions.Orders", prediction=11, span="87-87"];
m1_9 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="Forex.cs", label="_orderEvents = algorithm.Transactions.OrderEvents", prediction=12, span="88-88"];
m1_10 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="Forex.cs", label="_orderQueue = algorithm.Transactions.OrderQueue", prediction=13, span="89-89"];
m1_11 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Forex.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59"];
m1_105 [file="Forex.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span=""];
m1_106 [file="Forex.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m2_44 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", file="Security.cs", label="Exit QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", span="390-390"];
m2_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1353-1353"];
m2_46 [cluster="Unk.FirstOrDefault", file="Security.cs", label="Entry Unk.FirstOrDefault", span=""];
m2_47 [cluster="Unk.Buy", file="Security.cs", label="Entry Unk.Buy", span=""];
m2_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m2_77 [cluster="QuantConnect.Securities.Security.ToString()", file="Security.cs", label="Entry QuantConnect.Securities.Security.ToString()", span="617-617"];
m2_78 [cluster="QuantConnect.Securities.Security.ToString()", file="Security.cs", label="return Symbol.ToString();", span="619-619"];
m2_79 [cluster="QuantConnect.Securities.Security.ToString()", file="Security.cs", label="Exit QuantConnect.Securities.Security.ToString()", span="617-617"];
m2_41 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="60-60"];
m2_16 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", file="Security.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", span="342-342"];
m2_49 [cluster="Unk.First", file="Security.cs", label="Entry Unk.First", span=""];
m2_66 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Security.cs", label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", span=""];
m2_56 [cluster="lambda expression", file="Security.cs", label="x.Right == OptionRight.Call && x.Strike == 650", span="71-71"];
m2_18 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", file="Security.cs", label="throw new ArgumentNullException(''symbolProperties'', ''Security requires a valid SymbolProperties instance.'');", span="360-360"];
m2_19 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", file="Security.cs", label="symbolProperties.QuoteCurrency != quoteCurrency.Symbol", span="363-363"];
m2_20 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", file="Security.cs", label="throw new ArgumentException(''symbolProperties.QuoteCurrency must match the quoteCurrency.Symbol'');", span="365-365"];
m2_52 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="Security.cs", label="Exchange.SetLocalDateTimeFrontier(localTimeKeeper.LocalTime)", span="568-568"];
m2_55 [cluster="QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", file="Security.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", span="86-86"];
m2_58 [cluster="lambda expression", file="Security.cs", label="Exit lambda expression", span="570-574"];
m2_53 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="Security.cs", label="_localTimeKeeper.TimeUpdated += (sender, args) =>\r\n            {\r\n                //Update the Exchange/Timer:\r\n                Exchange.SetLocalDateTimeFrontier(args.Time);\r\n            }", span="570-574"];
m2_54 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="Security.cs", label="Exit QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="565-565"];
m2_57 [cluster="lambda expression", file="Security.cs", label="Exchange.SetLocalDateTimeFrontier(args.Time)", span="573-573"];
m2_59 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="Security.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="581-581"];
m2_60 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="Security.cs", label="data == null", span="584-584"];
m2_68 [cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="Security.cs", label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="35-35"];
m2_80 [cluster="QuantConnect.Symbol.ToString()", file="Security.cs", label="Entry QuantConnect.Symbol.ToString()", span="208-208"];
m2_62 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Security.cs", label="Log(orderEvent.ToString())", span="112-112"];
m2_63 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Security.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="110-110"];
m2_64 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="Security.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="153-153"];
m2_61 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Security.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="110-110"];
m2_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1626-1626"];
m2_50 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="Security.cs", label="Entry QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="565-565"];
m2_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1339-1339"];
m2_67 [cluster="QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", file="Security.cs", label="Entry QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", span="353-353"];
m2_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m2_24 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", file="Security.cs", label="SymbolProperties = symbolProperties", span="371-371"];
m2_39 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="Time.Day == 9 && holdings != 7", span="98-98"];
m2_81 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", file="Security.cs", label="Entry QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", span="626-626"];
m2_82 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", color=green, community=0, file="Security.cs", label="subscription.Symbol != _symbol", prediction=14, span="628-628"];
m2_83 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", color=green, community=0, file="Security.cs", label="throw new ArgumentException(''Symbols must match.'', ''subscription.Symbol'');", prediction=15, span="628-628"];
m2_84 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", color=green, community=0, file="Security.cs", label="!subscription.ExchangeTimeZone.Equals(Exchange.TimeZone)", prediction=14, span="629-629"];
m2_85 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", color=green, community=0, file="Security.cs", label="throw new ArgumentException(''ExchangeTimeZones must match.'', ''subscription.ExchangeTimeZone'');", prediction=17, span="629-629"];
m2_86 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", color=green, community=0, file="Security.cs", label="SubscriptionsBag.Add(subscription)", prediction=14, span="630-630"];
m2_87 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", file="Security.cs", label="Exit QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", span="626-626"];
m2_22 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", file="Security.cs", label="SubscriptionsBag = new ConcurrentBag<SubscriptionDataConfig>()", span="369-369"];
m2_45 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="Security.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0"];
m2_51 [cluster="Unk.Format", file="Security.cs", label="Entry Unk.Format", span=""];
m2_40 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="throw new Exception(string.Format(''Expected position quantity of 7 but was {0}'', holdings));", span="100-100"];
m2_23 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", file="Security.cs", label="QuoteCurrency = quoteCurrency", span="370-370"];
m2_25 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="Security.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", prediction=14, span="60-60"];
m2_26 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="!Portfolio.Invested", span="62-62"];
m2_21 [cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="Security.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", span="98-98"];
m2_27 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="Time.Hour > 9 && Time.Minute > 0", span="64-64"];
m2_28 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="OptionChain chain", span="66-66"];
m2_29 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="67-67"];
m2_30 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="var contract =\r\n                            chain.OrderBy(x => x.Expiry)\r\n                            .Where(x => x.Right == OptionRight.Call && x.Strike == 650)\r\n                            .Skip(1)\r\n                            .FirstOrDefault()", span="69-73"];
m2_31 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="contract != null", span="75-75"];
m2_32 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="Buy(contract.Symbol, 1)", span="77-77"];
m2_33 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="Time.Day > 6 && Time.Hour > 14 && Time.Minute > 0", span="84-84"];
m2_34 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="Liquidate()", span="86-86"];
m2_35 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="Portfolio.Invested", span="90-90"];
m2_36 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="var holdings = Portfolio.Securities.Where(x => x.Value.Holdings.AbsoluteQuantity != 0).First().Value.Holdings.AbsoluteQuantity", span="92-92"];
m2_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="971-971"];
m2_37 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Security.cs", label="Time.Day == 6 && holdings != 1", span="94-94"];
m2_89 [cluster="Unk.Equals", file="Security.cs", label="Entry Unk.Equals", span=""];
m2_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m2_42 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", file="Security.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", span="390-390"];
m2_43 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter)", file="Security.cs", label="SubscriptionsBag.Add(config)", span="419-419"];
m2_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014"];
m2_69 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="Security.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="594-594"];
m2_70 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="Security.cs", label="MarginModel.SetLeverage(this, leverage)", span="596-596"];
m2_71 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="Security.cs", label="Exit QuantConnect.Securities.Security.SetLeverage(decimal)", span="594-594"];
m2_0 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Security.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", span="35-35"];
m2_1 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Security.cs", label="SetStartDate(2014, 06, 06)", span="38-38"];
m2_2 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Security.cs", label="SetEndDate(2014, 06, 09)", span="39-39"];
m2_3 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Security.cs", label="SetCash(1000000)", span="40-40"];
m2_4 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Security.cs", label="var equity = AddEquity(UnderlyingTicker)", span="42-42"];
m2_5 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Security.cs", label="var option = AddOption(UnderlyingTicker)", span="43-43"];
m2_6 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Security.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="45-45"];
m2_8 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Security.cs", label="SetBenchmark(equity.Symbol)", span="53-53"];
m2_7 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Security.cs", label="option.SetFilter(u => u.IncludeWeeklys()\r\n                       .Strikes(-2, +2)\r\n                       .Expiration(TimeSpan.Zero, TimeSpan.FromDays(365 * 2)))", span="48-50"];
m2_9 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Security.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", span="35-35"];
m2_15 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Security.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m2_88 [cluster="System.ArgumentException.ArgumentException(string, string)", file="Security.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m2_72 [cluster="QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="Security.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="39-39"];
m2_38 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="Security.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m2_73 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Security.cs", label="Entry QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="602-602"];
m2_74 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Security.cs", label=SubscriptionsBag, span="604-604"];
m2_75 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Security.cs", label="subscription.DataNormalizationMode = mode", span="606-606"];
m2_76 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Security.cs", label="Exit QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="602-602"];
m2_90 [file="Security.cs", label="QuantConnect.Securities.Security", span=""];
m3_55 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(300), () =>\r\n                {\r\n                    try\r\n                    {\r\n                        //Set the default brokerage model before initialize\r\n                        algorithm.SetBrokerageModel(_factory.BrokerageModel);\r\n\r\n                        //Margin calls are disabled by default in live mode\r\n                        algorithm.Portfolio.MarginCallModel = MarginCallModel.Null;\r\n\r\n                        //Set our parameters\r\n                        algorithm.SetParameters(job.Parameters);\r\n                        algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds());\r\n\r\n                        //Algorithm is live, not backtesting:\r\n                        algorithm.SetLiveMode(true);\r\n\r\n                        //Initialize the algorithm's starting date\r\n                        algorithm.SetDateTime(DateTime.UtcNow);\r\n\r\n                        //Set the source impl for the event scheduling\r\n                        algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n\r\n                        // set the option chain provider\r\n                        algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new LiveOptionChainProvider()));\r\n\r\n                        // set the future chain provider\r\n                        algorithm.SetFutureChainProvider(new CachingFutureChainProvider(new LiveFutureChainProvider()));\r\n\r\n                        // If we're going to receive market data from IB,\r\n                        // set the default subscription limit to 100,\r\n                        // algorithms can override this setting in the Initialize method\r\n                        if (brokerage is InteractiveBrokersBrokerage &&\r\n                            liveJob.DataQueueHandler.EndsWith(''InteractiveBrokersBrokerage''))\r\n                        {\r\n                            algorithm.Settings.DataSubscriptionLimit = 100;\r\n                        }\r\n\r\n                        //Initialise the algorithm, get the required data:\r\n                        algorithm.Initialize();\r\n\r\n                        //Finalize Initialization\r\n                        algorithm.PostInitialize();\r\n\r\n                        if (liveJob.Brokerage != ''PaperBrokerage'')\r\n                        {\r\n                            //Zero the CashBook - we'll populate directly from brokerage\r\n                            foreach (var kvp in algorithm.Portfolio.CashBook)\r\n                            {\r\n                                kvp.Value.SetAmount(0);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        AddInitializationError(err.ToString(), err);\r\n                    }\r\n                }, controls.RamAllocation)", span="171-228"];
m3_180 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="339-339"];
m3_128 [cluster="Lazy<Resolution>.cstr", file="SecurityManager.cs", label="Entry Lazy<Resolution>.cstr", span=""];
m3_126 [cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="71-71"];
m3_200 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="103-103"];
m3_18 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="91-91"];
m3_5 [cluster="System.Collections.Generic.List<T>.List()", file="SecurityManager.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_6 [cluster="System.TimeSpan.FromDays(double)", file="SecurityManager.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m3_7 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="85-85"];
m3_8 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SecurityManager.cs", label="string error", span="87-87"];
m3_9 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SecurityManager.cs", label="IAlgorithm algorithm", span="88-88"];
m3_118 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m3_166 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="358-358"];
m3_220 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="432-432"];
m3_221 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SecurityManager.cs", label="_factory != null", span="434-434"];
m3_222 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SecurityManager.cs", label="_factory.Dispose()", span="436-436"];
m3_223 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SecurityManager.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="432-432"];
m3_10 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SecurityManager.cs", label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromSeconds(15), names => names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name'')))", span="91-91"];
m3_117 [cluster="string.Substring(int)", file="SecurityManager.cs", label="Entry string.Substring(int)", span="0-0"];
m3_199 [cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="65-65"];
m3_165 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="366-366"];
m3_122 [cluster="string.Format(string, object)", file="SecurityManager.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_52 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="resultHandler.SendStatusUpdate(AlgorithmStatus.Initializing, ''Initializing algorithm...'')", span="166-166"];
m3_53 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="var controls = job.Controls", span="169-169"];
m3_54 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="var isolator = new Isolator()", span="170-170"];
m3_14 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SecurityManager.cs", label="return algorithm;", span="95-95"];
m3_59 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="resultHandler.SendStatusUpdate(AlgorithmStatus.LoggingIn, ''Logging into brokerage...'')", span="237-237"];
m3_61 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Connecting to brokerage...'')", span="241-241"];
m3_60 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="brokerage.Message += brokerageOnMessage", span="239-239"];
m3_62 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="brokerage.Connect()", span="245-245"];
m3_204 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="136-136"];
m3_32 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SecurityManager.cs", label="return brokerage;", span="120-120"];
m3_36 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="SecurityManager.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m3_19 [cluster="System.Exception.Exception(string)", file="SecurityManager.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m3_20 [cluster="lambda expression", file="SecurityManager.cs", label="Entry lambda expression", span="91-91"];
m3_40 [cluster="System.Type.MatchesTypeName(string)", file="SecurityManager.cs", label="Entry System.Type.MatchesTypeName(string)", span="655-655"];
m3_41 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="133-133"];
m3_42 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="var liveJob = job as LiveNodePacket", span="136-136"];
m3_43 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="liveJob == null", span="137-137"];
m3_45 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="return false;", span="140-140"];
m3_44 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="AddInitializationError(''BrokerageSetupHandler requires a LiveNodePacket'')", span="139-139"];
m3_46 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="algorithm.Name = liveJob.GetAlgorithmName()", span="143-143"];
m3_103 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0, file="SecurityManager.cs", label=Exception, prediction=20, span="352-352"];
m3_219 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SecurityManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_174 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="645-645"];
m3_171 [cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="SecurityManager.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65"];
m3_16 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Add(security.Symbol, security)", span="83-83"];
m3_179 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="333-333"];
m3_121 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="SecurityManager.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m3_15 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SecurityManager.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="85-85"];
m3_17 [cluster="System.TimeSpan.FromSeconds(double)", file="SecurityManager.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m3_63 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label=Exception, span="247-247"];
m3_106 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0, file="SecurityManager.cs", label="return false;", prediction=21, span="356-356"];
m3_104 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0, file="SecurityManager.cs", label="Log.Error(err)", prediction=22, span="354-354"];
m3_105 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0, file="SecurityManager.cs", label="AddInitializationError(''Error getting account holdings from brokerage: '' + err.Message, err)", prediction=22, span="355-355"];
m3_108 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="StartingDate = DateTime.Now", span="361-361"];
m3_109 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label=Exception, span="363-363"];
m3_110 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0, file="SecurityManager.cs", label="AddInitializationError(err.ToString(), err)", prediction=22, span="365-365"];
m3_111 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="return Errors.Count == 0;", span="375-375"];
m3_112 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="133-133"];
m3_114 [cluster="QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", file="SecurityManager.cs", label="Entry QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", span="150-150"];
m3_107 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0, file="SecurityManager.cs", label="StartingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", prediction=22, span="360-360"];
m3_113 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string, System.Exception)", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string, System.Exception)", span="423-423"];
m3_115 [cluster="string.IsNullOrWhiteSpace(string)", file="SecurityManager.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m3_187 [cluster="Unk.Min", file="SecurityManager.cs", label="Entry Unk.Min", span=""];
m3_206 [cluster="lambda expression", file="SecurityManager.cs", label=order, span="395-395"];
m3_146 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.SetBrokerageModel(_factory.BrokerageModel)", span="176-176"];
m3_147 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.Portfolio.MarginCallModel = MarginCallModel.Null", span="179-179"];
m3_148 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.SetParameters(job.Parameters)", span="182-182"];
m3_149 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="183-183"];
m3_150 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.SetLiveMode(true)", span="186-186"];
m3_151 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.SetDateTime(DateTime.UtcNow)", span="189-189"];
m3_152 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="192-192"];
m3_153 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new LiveOptionChainProvider()))", span="195-195"];
m3_154 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.SetFutureChainProvider(new CachingFutureChainProvider(new LiveFutureChainProvider()))", span="198-198"];
m3_155 [cluster="lambda expression", file="SecurityManager.cs", label="brokerage is InteractiveBrokersBrokerage &&\r\n                            liveJob.DataQueueHandler.EndsWith(''InteractiveBrokersBrokerage'')", span="203-204"];
m3_156 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.Settings.DataSubscriptionLimit = 100", span="206-206"];
m3_157 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.Initialize()", span="210-210"];
m3_158 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.PostInitialize()", span="213-213"];
m3_160 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.Portfolio.CashBook", span="218-218"];
m3_183 [cluster="lambda expression", file="SecurityManager.cs", label="algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min()", span="301-301"];
m3_142 [cluster="lambda expression", file="SecurityManager.cs", label="AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message))", span="158-158"];
m3_163 [cluster="lambda expression", file="SecurityManager.cs", label="AddInitializationError(err.ToString(), err)", span="226-226"];
m3_205 [cluster="lambda expression", file="SecurityManager.cs", label="Entry lambda expression", span="395-395"];
m3_207 [cluster="lambda expression", file="SecurityManager.cs", label="Exit lambda expression", span="395-395"];
m3_159 [cluster="lambda expression", file="SecurityManager.cs", label="liveJob.Brokerage != ''PaperBrokerage''", span="215-215"];
m3_145 [cluster="lambda expression", file="SecurityManager.cs", label="Entry lambda expression", span="171-228"];
m3_161 [cluster="lambda expression", file="SecurityManager.cs", label="kvp.Value.SetAmount(0)", span="220-220"];
m3_162 [cluster="lambda expression", file="SecurityManager.cs", label=Exception, span="224-224"];
m3_164 [cluster="lambda expression", file="SecurityManager.cs", label="Exit lambda expression", span="171-228"];
m3_182 [cluster="lambda expression", file="SecurityManager.cs", label="Entry lambda expression", span="301-301"];
m3_184 [cluster="lambda expression", file="SecurityManager.cs", label="Exit lambda expression", span="301-301"];
m3_188 [cluster="lambda expression", file="SecurityManager.cs", label="Entry lambda expression", span="301-301"];
m3_37 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="162-162"];
m3_141 [cluster="lambda expression", file="SecurityManager.cs", label="args.Type == BrokerageMessageType.Error", span="156-156"];
m3_140 [cluster="lambda expression", file="SecurityManager.cs", label="Entry lambda expression", span="154-160"];
m3_143 [cluster="lambda expression", file="SecurityManager.cs", label="Exit lambda expression", span="154-160"];
m3_190 [cluster="lambda expression", file="SecurityManager.cs", label="Exit lambda expression", span="301-301"];
m3_189 [cluster="lambda expression", file="SecurityManager.cs", label="x.Value.Resolution", span="301-301"];
m3_38 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="return Remove(pair.Key);", span="164-164"];
m3_39 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="162-162"];
m3_21 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Clear()", span="100-100"];
m3_22 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityManager.cs", label="_securityManager.Clear()", span="102-102"];
m3_94 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="!algorithm.Portfolio.ContainsKey(holding.Symbol)", span="317-317"];
m3_138 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="540-540"];
m3_96 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="holding.Type == SecurityType.Option", span="321-321"];
m3_119 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="SecurityManager.cs", label="QuantConnect.Securities.SecurityManager", span=""];
m3_129 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SecurityManager.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m3_170 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="493-493"];
m3_216 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string, System.Exception)", file="SecurityManager.cs", label="Errors.Add(new AlgorithmSetupException(''During the algorithm initialization, the following exception has occurred: '' + message, inner))", span="425-425"];
m3_217 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string, System.Exception)", file="SecurityManager.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string, System.Exception)", span="423-423"];
m3_29 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SecurityManager.cs", label="_factory = Composer.Instance.Single<IBrokerageFactory>(brokerageFactory => brokerageFactory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="114-114"];
m3_30 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SecurityManager.cs", label="factory = _factory", span="115-115"];
m3_31 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SecurityManager.cs", label="var brokerage = _factory.CreateBrokerage(liveJob, uninitializedAlgorithm)", span="118-118"];
m3_101 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0, file="SecurityManager.cs", label="algorithm.Portfolio[holding.Symbol].SetHoldings(holding.AveragePrice, holding.Quantity)", prediction=26, span="338-338"];
m3_120 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103"];
m3_172 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m3_28 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SecurityManager.cs", label="throw new ArgumentException(''BrokerageSetupHandler.CreateBrokerage requires a live node packet'');", span="110-110"];
m3_24 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m3_116 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="153-153"];
m3_64 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="Log.Error(err)", span="249-249"];
m3_65 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="AddInitializationError(string.Format(''Error connecting to brokerage: {0}. '' +\r\n                        ''This may be caused by incorrect login credentials or an unsupported account type.'', err.Message), err)", span="250-251"];
m3_66 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="return false;", span="252-252"];
m3_67 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="!brokerage.IsConnected", span="255-255"];
m3_68 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="AddInitializationError(''Unable to connect to brokerage.'')", span="258-258"];
m3_88 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="var minResolution = new Lazy<Resolution>(() => algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min())", span="301-301"];
m3_89 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label=holdings, span="302-302"];
m3_90 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Has existing holding: '' + holding)", span="304-304"];
m3_69 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="return false;", span="259-259"];
m3_70 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching cash balance from brokerage...'')", span="262-262"];
m3_71 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="var cashBalance = brokerage.GetCashBalance()", span="266-266"];
m3_73 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Setting '' + cash.Symbol + '' cash to '' + cash.Amount)", span="269-269"];
m3_81 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label=Exception, span="285-285"];
m3_86 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="var holdings = brokerage.GetAccountHoldings()", span="296-296"];
m3_91 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="!supportedSecurityTypes.Contains(holding.Type)", span="307-307"];
m3_92 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SecurityManager.cs", label="Log.Error(''BrokerageSetupHandler.Setup(): Unsupported security type: '' + holding.Type + ''-'' + holding.Symbol.Value)", span="309-309"];
m3_185 [cluster="Unk.Select", file="SecurityManager.cs", label="Entry Unk.Select", span=""];
m3_23 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Clear()", span="100-100"];
m3_173 [cluster="QuantConnect.Lean.Engine.DataFeeds.LiveOptionChainProvider.LiveOptionChainProvider()", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.LiveOptionChainProvider.LiveOptionChainProvider()", span="27-27"];
m3_35 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", span="133-133"];
m3_167 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="404-404"];
m3_208 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SecurityManager.cs", label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="406-406"];
m3_212 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SecurityManager.cs", label="return dataFeeds;", span="414-414"];
m3_209 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SecurityManager.cs", label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="408-408"];
m3_210 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SecurityManager.cs", label="dataFeedsConfigString != string.Empty", span="409-409"];
m3_211 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SecurityManager.cs", label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="411-411"];
m3_213 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SecurityManager.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="404-404"];
m3_131 [cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="SecurityManager.cs", label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m3_134 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="544-544"];
m3_136 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", span="392-392"];
m3_127 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SecurityManager.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m3_100 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0, file="SecurityManager.cs", label="algorithm.AddSecurity(holding.Type, holding.Symbol.Value, minResolution.Value, null, true, 1.0m, false)", prediction=26, span="334-334"];
m3_98 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="62-62"];
m3_97 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.CashBook.ContainsKey(string)", span="211-211"];
m3_99 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m3_102 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security)", color=green, community=0, file="SecurityManager.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security)", prediction=26, span="27-27"];
m3_93 [cluster="QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", file="SecurityManager.cs", label="Entry QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", span="36-36"];
m3_95 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m3_48 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m3_50 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m3_57 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityManager.cs", label="return _securityManager.GetEnumerator();", span="230-230"];
m3_58 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="228-228"];
m3_49 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityManager.cs", label="return _securityManager.TryGetValue(symbol, out security);", span="201-201"];
m3_47 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m3_51 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_56 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="228-228"];
m3_124 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="485-485"];
m3_201 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="326-326"];
m3_168 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="639-639"];
m3_224 [cluster="System.IDisposable.Dispose()", file="SecurityManager.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m3_0 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m3_1 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="_timeKeeper = timeKeeper", span="57-57"];
m3_2 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="_securityManager = new ConcurrentDictionary<Symbol, Security>()", span="58-58"];
m3_3 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m3_4 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m3_34 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityManager.cs", label="((IDictionary<Symbol, Security>)_securityManager).CopyTo(array, number)", span="135-135"];
m3_203 [cluster="QuantConnect.Orders.Order.ToOrderTicket(QuantConnect.Securities.SecurityTransactionManager)", file="SecurityManager.cs", label="Entry QuantConnect.Orders.Order.ToOrderTicket(QuantConnect.Securities.SecurityTransactionManager)", span="941-941"];
m3_12 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SecurityManager.cs", label="!complete", span="93-93"];
m3_25 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="105-105"];
m3_26 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SecurityManager.cs", label="var liveJob = algorithmNodePacket as LiveNodePacket", span="107-107"];
m3_27 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SecurityManager.cs", label="liveJob == null", span="108-108"];
m3_33 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", span="133-133"];
m3_139 [cluster="System.Exception.ToString()", file="SecurityManager.cs", label="Entry System.Exception.ToString()", span="0-0"];
m3_11 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="SecurityManager.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m3_13 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", file="SecurityManager.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", span="0-0"];
m3_144 [cluster="string.Format(string, object, object)", file="SecurityManager.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m3_137 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="SecurityManager.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m3_175 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingFutureChainProvider.CachingFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingFutureChainProvider.CachingFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="35-35"];
m3_133 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="554-554"];
m3_176 [cluster="QuantConnect.Lean.Engine.DataFeeds.LiveFutureChainProvider.LiveFutureChainProvider()", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.LiveFutureChainProvider.LiveFutureChainProvider()", span="27-27"];
m3_125 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", span="385-385"];
m3_191 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="SecurityManager.cs", label="var openOrders = brokerage.GetOpenOrders()", prediction=29, span="388-388"];
m3_192 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="SecurityManager.cs", label=openOrders, prediction=30, span="389-389"];
m3_197 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs", label="transactionHandler.OrderTickets.AddOrUpdate(order.Id, order.ToOrderTicket(algorithm.Transactions))", span="396-396"];
m3_193 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Has open order: '' + order.Symbol.Value + '' - '' + order.Quantity)", span="392-392"];
m3_194 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs", label="resultHandler.DebugMessage($''BrokerageSetupHandler.Setup(): Open order detected.  Creating order tickets for open order {order.Symbol.Value} with quantity {order.Quantity}. Beware that this order ticket may not accurately reflect the quantity of the order if the open order is partially filled.'')", span="393-393"];
m3_195 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs", label="order.Id = algorithm.Transactions.GetIncrementOrderId()", span="394-394"];
m3_196 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs", label="transactionHandler.Orders.AddOrUpdate(order.Id, order, (i, o) => order)", span="395-395"];
m3_198 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", span="385-385"];
m3_169 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="589-589"];
m3_177 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="651-651"];
m3_130 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SecurityManager.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m3_135 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="534-534"];
m3_215 [cluster="Unk.>", file="SecurityManager.cs", label="Entry Unk.>", span=""];
m3_178 [cluster="string.EndsWith(string)", file="SecurityManager.cs", label="Entry string.EndsWith(string)", span="0-0"];
m3_181 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="128-128"];
m3_132 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="130-130"];
m3_214 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SecurityManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_218 [cluster="QuantConnect.Lean.Engine.Setup.AlgorithmSetupException.AlgorithmSetupException(string, System.Exception)", file="SecurityManager.cs", label="Entry QuantConnect.Lean.Engine.Setup.AlgorithmSetupException.AlgorithmSetupException(string, System.Exception)", span="38-38"];
m3_202 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m3_186 [cluster="Unk.DefaultIfEmpty", file="SecurityManager.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m3_123 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="SecurityManager.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77"];
m3_225 [file="SecurityManager.cs", label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", span=""];
m3_232 [file="SecurityManager.cs", label=order, span=""];
m3_227 [file="SecurityManager.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m3_228 [file="SecurityManager.cs", label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
m3_229 [file="SecurityManager.cs", label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span=""];
m3_230 [file="SecurityManager.cs", label="QuantConnect.Interfaces.IBrokerage", span=""];
m3_231 [file="SecurityManager.cs", label=liveJob, span=""];
m3_226 [file="SecurityManager.cs", label=liveJob, span=""];
m1_57 -> m1_80  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_57 -> m1_82  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_57 -> m1_84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_80 -> m1_80  [color=darkseagreen4, key=1, label=queued, style=dashed];
m1_17 -> m1_19  [color=green, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m1_26 -> m1_30  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_31  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_33  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_34  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_36  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_38  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_40  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_46  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_56 -> m1_71  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_56 -> m1_73  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_56 -> m1_75  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_71 -> m1_71  [color=darkseagreen4, key=1, label=queued, style=dashed];
m1_55 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_16 -> m1_89  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_92  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_93  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_94  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_95  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_96  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_19  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_4 -> m1_14  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_4 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Equity.Equity", style=dashed];
m1_5 -> m1_19  [color=green, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m1_105 -> m1_4  [color=green, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_14  [color=green, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_82  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_93  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_96  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_105 -> m1_98  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_106 -> m1_19  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_16 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m2_16 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_16 -> m2_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchange", style=dashed];
m2_16 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Interfaces.ISecurityDataFilter", style=dashed];
m2_16 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityPortfolioModel", style=dashed];
m2_16 -> m2_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityMarginModel", style=dashed];
m2_16 -> m2_31  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Fills.IFillModel", style=dashed];
m2_16 -> m2_32  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Fees.IFeeModel", style=dashed];
m2_16 -> m2_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Slippage.ISlippageModel", style=dashed];
m2_16 -> m2_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISettlementModel", style=dashed];
m2_16 -> m2_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IVolatilityModel", style=dashed];
m2_16 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m2_66 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_66 -> m2_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m2_53 -> m2_57  [color=darkseagreen4, key=1, label="QuantConnect.TimeUpdatedEventArgs", style=dashed];
m2_59 -> m2_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m2_59 -> m2_62  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m2_59 -> m2_64  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m2_50 -> m2_52  [color=darkseagreen4, key=1, label="QuantConnect.LocalTimeKeeper", style=dashed];
m2_81 -> m2_84  [color=green, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m2_81 -> m2_86  [color=green, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m2_25 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_30 -> m2_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_30 -> m2_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_30 -> m2_32  [color=darkseagreen4, key=1, label=contract, style=dashed];
m2_36 -> m2_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_36 -> m2_38  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m2_36 -> m2_39  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m2_36 -> m2_40  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m2_4 -> m2_6  [color=darkseagreen4, key=1, label=equity, style=dashed];
m2_4 -> m2_8  [color=darkseagreen4, key=1, label=equity, style=dashed];
m2_5 -> m2_7  [color=darkseagreen4, key=1, label=option, style=dashed];
m2_7 -> m2_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_90 -> m2_25  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_82  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_84  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_86  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_33  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_43  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_47  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_51  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_52  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_57  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_62  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_64  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_70  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_74  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_90 -> m2_78  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m3_55 -> m3_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_5 -> m3_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m3_5 -> m3_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m3_10 -> m3_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m3_14 -> m3_61  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m3_59 -> m3_61  [color=darkseagreen4, key=1, label=handler, style=dashed];
m3_19 -> m3_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m3_41 -> m3_100  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_101  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_102  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m3_41 -> m3_146  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_148  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_149  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_150  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_151  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_152  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_153  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_154  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_155  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m3_41 -> m3_157  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_158  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m3_41 -> m3_62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m3_41 -> m3_67  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m3_41 -> m3_183  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_94  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_97  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_41 -> m3_99  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_42 -> m3_155  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m3_42 -> m3_159  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m3_106 -> m3_114  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m3_104 -> m3_109  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_104 -> m3_110  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolPropertiesDatabase", style=dashed];
m3_104 -> m3_111  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m3_104 -> m3_112  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_104 -> m3_114  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m3_105 -> m3_114  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m3_110 -> m3_114  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m3_111 -> m3_114  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_107 -> m3_110  [color=darkseagreen4, key=1, label=defaultQuoteCurrency, style=dashed];
m3_183 -> m3_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_161 -> m3_161  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m3_140 -> m3_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m3_189 -> m3_189  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m3_38 -> m3_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m3_119 -> m3_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_43  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_57  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_119 -> m3_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_29 -> m3_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_30 -> m3_33  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerageFactory", style=dashed];
m3_64 -> m3_66  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_64 -> m3_67  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_64 -> m3_68  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_64 -> m3_89  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_64 -> m3_90  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_68 -> m3_70  [color=darkseagreen4, key=1, label=config, style=dashed];
m3_88 -> m3_100  [color=green, key=1, label=minResolution, style=dashed];
m3_88 -> m3_97  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m3_88 -> m3_99  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m3_89 -> m3_100  [color=green, key=1, label=holding, style=dashed];
m3_89 -> m3_101  [color=green, key=1, label=holding, style=dashed];
m3_89 -> m3_102  [color=green, key=1, label=holding, style=dashed];
m3_89 -> m3_92  [color=darkseagreen4, key=1, label=holding, style=dashed];
m3_89 -> m3_93  [color=darkseagreen4, key=1, label=holding, style=dashed];
m3_89 -> m3_94  [color=darkseagreen4, key=1, label=holding, style=dashed];
m3_89 -> m3_95  [color=darkseagreen4, key=1, label=holding, style=dashed];
m3_89 -> m3_96  [color=darkseagreen4, key=1, label=holding, style=dashed];
m3_89 -> m3_97  [color=darkseagreen4, key=1, label=holding, style=dashed];
m3_89 -> m3_98  [color=darkseagreen4, key=1, label=holding, style=dashed];
m3_89 -> m3_99  [color=darkseagreen4, key=1, label=holding, style=dashed];
m3_86 -> m3_89  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m3_208 -> m3_210  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
m3_209 -> m3_212  [color=darkseagreen4, key=1, label=dataFeeds, style=dashed];
m3_50 -> m3_141  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m3_50 -> m3_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m3_26 -> m3_38  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m3_11 -> m3_13  [color=darkseagreen4, key=1, label=error, style=dashed];
m3_11 -> m3_14  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_125 -> m3_194  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m3_125 -> m3_196  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m3_125 -> m3_197  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_192 -> m3_194  [color=green, key=1, label=order, style=dashed];
m3_192 -> m3_196  [color=green, key=1, label=order, style=dashed];
m3_192 -> m3_206  [color=green, key=1, label=order, style=dashed];
m3_192 -> m3_197  [color=green, key=1, label=order, style=dashed];
m3_196 -> m3_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_225 -> m3_105  [color=green, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_110  [color=green, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_142  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_146  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_163  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_93  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_111  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_221  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_225 -> m3_222  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m3_232 -> m3_206  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_227 -> m3_146  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_227 -> m3_148  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_227 -> m3_149  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_227 -> m3_150  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_227 -> m3_151  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_227 -> m3_152  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_227 -> m3_153  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_227 -> m3_154  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_227 -> m3_157  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_227 -> m3_158  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_227 -> m3_160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_227 -> m3_183  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m3_228 -> m3_148  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m3_229 -> m3_152  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m3_230 -> m3_155  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m3_231 -> m3_155  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m3_231 -> m3_159  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m3_226 -> m3_38  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
}
