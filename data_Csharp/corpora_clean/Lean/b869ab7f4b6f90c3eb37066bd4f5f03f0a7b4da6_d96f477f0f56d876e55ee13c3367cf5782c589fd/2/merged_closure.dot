digraph  {
n52 [label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", span=""];
n0 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="44-44"];
n1 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", label="_dataCacheProvider = dataCacheProvider", span="46-46"];
n2 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", label="_date = date", span="47-47"];
n3 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", label="_config = config", span="48-48"];
n4 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", label="_isLiveMode = isLiveMode", span="49-49"];
n5 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", label="_factory = (BaseData)ObjectActivator.GetActivator(config.Type).Invoke(new object[] { config.Type })", span="50-50"];
n6 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="44-44"];
n7 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="50-50"];
n8 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n9 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="70-70"];
n10 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="SubscriptionDataSourceReader.CheckRemoteFileCache()", span="72-72"];
n13 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="source.TransportMedium", span="78-78"];
n15 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="reader = new RestSubscriptionStreamReader(source.Source)", span="82-82"];
n17 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="reader = new LocalFileSubscriptionStreamReader(_dataCacheProvider, source.Source)", span="85-85"];
n19 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="reader = new RemoteFileSubscriptionStreamReader(_dataCacheProvider, source.Source, Globals.Cache)", span="88-88"];
n11 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="IStreamReader reader = null", span="74-74"];
n31 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.CheckRemoteFileCache()", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.CheckRemoteFileCache()", span="58-58"];
n32 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", label="Entry QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", span="46-46"];
n14 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="SubscriptionTransportMedium.Rest", span="81-81"];
n16 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="SubscriptionTransportMedium.LocalFile", span="84-84"];
n18 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="SubscriptionTransportMedium.RemoteFile", span="87-87"];
n20 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="var raw = ''''", span="92-92"];
n35 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="37-37"];
n33 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string)", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string)", span="35-35"];
n34 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="41-41"];
n36 [cluster="QuantConnect.Interfaces.IStreamReader.ReadLine()", label="Entry QuantConnect.Interfaces.IStreamReader.ReadLine()", span="38-38"];
n37 [cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144"];
n38 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n39 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="136-136"];
n40 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", span="125-125"];
n30 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="70-70"];
n41 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", label="var handler = ReaderError", span="127-127"];
n43 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", label="handler(this, new ReaderErrorEventArgs(line, exception))", span="128-128"];
n42 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", label="handler != null", span="128-128"];
n44 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", span="125-125"];
n45 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", label="Entry QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", span="45-45"];
n46 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
n47 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", label="var handler = InvalidSource", span="138-138"];
n49 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", label="handler(this, new InvalidSourceEventArgs(source, exception))", span="139-139"];
n48 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", label="handler != null", span="139-139"];
n50 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="136-136"];
n51 [cluster="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", label="Entry QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="46-46"];
d11 [cluster="QuantConnect.Tests.Symbols.CreateEquitySymbol(string)", color=green, community=0, label="return Symbol.Create(symbol, SecurityType.Equity, Market.USA);", prediction=0, span="92-92"];
d10 [cluster="QuantConnect.Tests.Symbols.CreateEquitySymbol(string)", label="Entry QuantConnect.Tests.Symbols.CreateEquitySymbol(string)", span="90-90"];
d12 [cluster="QuantConnect.Tests.Symbols.CreateEquitySymbol(string)", label="Exit QuantConnect.Tests.Symbols.CreateEquitySymbol(string)", span="90-90"];
d9 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
d18 [cluster="QuantConnect.Tests.Symbols.CreateCfdSymbol(string, string)", color=green, community=0, label="return Symbol.Create(symbol, SecurityType.Cfd, market);", prediction=1, span="101-101"];
d17 [cluster="QuantConnect.Tests.Symbols.CreateCfdSymbol(string, string)", label="Entry QuantConnect.Tests.Symbols.CreateCfdSymbol(string, string)", span="99-99"];
d19 [cluster="QuantConnect.Tests.Symbols.CreateCfdSymbol(string, string)", label="Exit QuantConnect.Tests.Symbols.CreateCfdSymbol(string, string)", span="99-99"];
d21 [cluster="QuantConnect.Tests.Symbols.CreateOptionSymbol(string, QuantConnect.OptionRight, decimal, System.DateTime)", color=green, community=0, label="return Symbol.CreateOption(symbol, Market.USA, OptionStyle.American, right, strike, expiry);", prediction=2, span="106-106"];
d20 [cluster="QuantConnect.Tests.Symbols.CreateOptionSymbol(string, QuantConnect.OptionRight, decimal, System.DateTime)", label="Entry QuantConnect.Tests.Symbols.CreateOptionSymbol(string, QuantConnect.OptionRight, decimal, System.DateTime)", span="104-104"];
d22 [cluster="QuantConnect.Tests.Symbols.CreateOptionSymbol(string, QuantConnect.OptionRight, decimal, System.DateTime)", label="Exit QuantConnect.Tests.Symbols.CreateOptionSymbol(string, QuantConnect.OptionRight, decimal, System.DateTime)", span="104-104"];
d23 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", span="99-99"];
d7 [cluster="QuantConnect.Tests.Symbols.CreateForexSymbol(string)", label="return Symbol.Create(symbol, SecurityType.Forex, Market.FXCM);", span="87-87"];
d25 [cluster="QuantConnect.Tests.Symbols.CreateCryptoSymbol(string)", label="return Symbol.Create(symbol, SecurityType.Crypto, Market.GDAX);", span="111-111"];
d6 [cluster="QuantConnect.Tests.Symbols.CreateForexSymbol(string)", label="Entry QuantConnect.Tests.Symbols.CreateForexSymbol(string)", span="85-85"];
d8 [cluster="QuantConnect.Tests.Symbols.CreateForexSymbol(string)", label="Exit QuantConnect.Tests.Symbols.CreateForexSymbol(string)", span="85-85"];
d24 [cluster="QuantConnect.Tests.Symbols.CreateCryptoSymbol(string)", label="Entry QuantConnect.Tests.Symbols.CreateCryptoSymbol(string)", span="109-109"];
d26 [cluster="QuantConnect.Tests.Symbols.CreateCryptoSymbol(string)", label="Exit QuantConnect.Tests.Symbols.CreateCryptoSymbol(string)", span="109-109"];
m0_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", span="79-79"];
m0_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="RequestId = requestId", span="81-81"];
m0_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="Date = date", span="82-82"];
m0_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="Open = open", span="83-83"];
m0_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="High = high", span="84-84"];
m0_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="Low = low", span="85-85"];
m0_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="Close = close", span="86-86"];
m0_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="Volume = volume", span="87-87"];
m0_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="Count = count", span="88-88"];
m0_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="Wap = wap", span="89-89"];
m0_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="HasGaps = hasGaps", span="90-90"];
m0_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", file="DailyFx.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs.HistoricalDataEventArgs(int, string, double, double, double, double, int, int, double, bool)", span="79-79"];
m0_12 [file="DailyFx.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", span=""];
m4_39 [cluster="System.Collections.IEnumerator.Reset()", file="FrontierAwareEnumerator.cs", label="Entry System.Collections.IEnumerator.Reset()", span="0-0"];
m4_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Reset()", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Reset()", span="126-126"];
m4_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Reset()", file="FrontierAwareEnumerator.cs", label="_enumerator.Reset()", span="128-128"];
m4_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Reset()", file="FrontierAwareEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Reset()", span="126-126"];
m4_34 [cluster="QuantConnect.TimeZoneOffsetProvider.GetOffsetTicks(System.DateTime)", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.TimeZoneOffsetProvider.GetOffsetTicks(System.DateTime)", span="84-84"];
m4_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.FrontierAwareEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, QuantConnect.TimeZoneOffsetProvider)", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.FrontierAwareEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, QuantConnect.TimeZoneOffsetProvider)", span="45-45"];
m4_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.FrontierAwareEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, QuantConnect.TimeZoneOffsetProvider)", file="FrontierAwareEnumerator.cs", label="_enumerator = enumerator", span="47-47"];
m4_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.FrontierAwareEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, QuantConnect.TimeZoneOffsetProvider)", file="FrontierAwareEnumerator.cs", label="_timeProvider = timeProvider", span="48-48"];
m4_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.FrontierAwareEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, QuantConnect.TimeZoneOffsetProvider)", file="FrontierAwareEnumerator.cs", label="_offsetProvider = offsetProvider", span="49-49"];
m4_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.FrontierAwareEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, QuantConnect.TimeZoneOffsetProvider)", file="FrontierAwareEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.FrontierAwareEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, QuantConnect.TimeZoneOffsetProvider)", span="45-45"];
m4_35 [cluster="System.Collections.IEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m4_43 [cluster="System.IDisposable.Dispose()", file="FrontierAwareEnumerator.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m4_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", span="59-59"];
m4_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", color=green, community=0, file="FrontierAwareEnumerator.cs", label="_lastEmittedValue != null && \r\n                    _lastEmittedValue.DataType == MarketDataType.Base && \r\n                    _lastEmittedValue.EndTime == underlyingCurrent.EndTime &&\r\n                    _lastEmittedValue.Value == underlyingCurrent.Value", prediction=3, span="97-100"];
m4_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="underlyingCurrent != null && underlyingCurrent.EndTime <= localFrontier", span="94-94"];
m4_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="underlyingCurrent = _enumerator.Current", span="92-92"];
m4_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_current = null", span="102-102"];
m4_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_needsMoveNext = true", span="106-106"];
m4_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="var underlyingCurrent = _enumerator.Current", span="61-61"];
m4_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="var frontier = _timeProvider.GetUtcNow()", span="62-62"];
m4_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="var localFrontier = new DateTime(frontier.Ticks + _offsetProvider.GetOffsetTicks(frontier))", span="63-63"];
m4_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="!_needsMoveNext && underlyingCurrent != null", span="66-66"];
m4_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_current = underlyingCurrent", span="71-71"];
m4_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_needsMoveNext = true", span="72-72"];
m4_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_lastEmittedValue = _current", span="73-73"];
m4_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_current = null", span="78-78"];
m4_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_needsMoveNext = false", span="79-79"];
m4_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_needsMoveNext && !_enumerator.MoveNext()", span="85-85"];
m4_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_needsMoveNext = true", span="87-87"];
m4_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_current = null", span="88-88"];
m4_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_current = underlyingCurrent", span="107-107"];
m4_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_lastEmittedValue = _current", span="108-108"];
m4_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_current = null", span="113-113"];
m4_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_needsMoveNext = underlyingCurrent == null", span="114-114"];
m4_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="return true;", span="119-119"];
m4_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="underlyingCurrent.EndTime <= localFrontier", span="68-68"];
m4_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="return true;", span="81-81"];
m4_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="return false;", span="89-89"];
m4_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", span="59-59"];
m4_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Dispose()", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Dispose()", span="158-158"];
m4_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Dispose()", file="FrontierAwareEnumerator.cs", label="_enumerator.Dispose()", span="160-160"];
m4_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Dispose()", file="FrontierAwareEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Dispose()", span="158-158"];
m4_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", span="30-30"];
m4_33 [cluster="System.DateTime.DateTime(long)", file="FrontierAwareEnumerator.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m4_44 [file="FrontierAwareEnumerator.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", span=""];
m5_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", file="FxcmBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", span="72-72"];
m5_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", file="FxcmBrokerage.cs", label="TickerId = tickerId", span="74-74"];
m5_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", file="FxcmBrokerage.cs", label="TickType = tickType", span="75-75"];
m5_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", file="FxcmBrokerage.cs", label="BasisPoints = basisPoints", span="76-76"];
m5_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", file="FxcmBrokerage.cs", label="FormattedBasisPoints = formattedBasisPoints", span="77-77"];
m5_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", file="FxcmBrokerage.cs", label="ImpliedFuture = impliedFuture", span="78-78"];
m5_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", file="FxcmBrokerage.cs", label="HoldDays = holdDays", span="79-79"];
m5_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", file="FxcmBrokerage.cs", label="FutureExpiry = futureExpiry", span="80-80"];
m5_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", file="FxcmBrokerage.cs", label="DividendImpact = dividendImpact", span="81-81"];
m5_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", file="FxcmBrokerage.cs", label="DividendsToExpiry = dividendsToExpiry", span="82-82"];
m5_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", file="FxcmBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs.TickEfpEventArgs(int, int, double, string, double, int, string, double, double)", span="72-72"];
m5_11 [file="FxcmBrokerage.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEfpEventArgs", span=""];
m6_151 [cluster="QuantConnect.Holding.Holding()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m6_55 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Exit lambda expression", span="148-148"];
m6_81 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Entry lambda expression", span="180-180"];
m6_82 [cluster="lambda expression", file="GDAXBrokerage.cs", label="int.Parse(obs[x])", span="180-180"];
m6_83 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Exit lambda expression", span="180-180"];
m6_103 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="return lines.Skip(2).Take(lines.Length - 4).ToArray();", span="232-232"];
m6_106 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetFxcmIDFromSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeDownloader.GetFxcmIDFromSymbol(QuantConnect.Symbol)", span="241-241"];
m6_111 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m6_84 [cluster="int.Parse(string)", file="GDAXBrokerage.cs", label="Entry int.Parse(string)", span="0-0"];
m6_85 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Entry lambda expression", span="189-189"];
m6_86 [cluster="lambda expression", file="GDAXBrokerage.cs", label="o.Time.Date >= startUtc.Date && o.Time.Date <= endUtc.Date", span="189-189"];
m6_87 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Exit lambda expression", span="189-189"];
m6_104 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="Exit QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="204-204"];
m6_88 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var startDate = string.Empty", span="206-206"];
m6_89 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var endDate = endUtc.AddDays(2).ToString(''yyyyMMdd'') + ''2100''", span="207-207"];
m6_90 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var symbolId = GetFxcmIDFromSymbol(symbol)", span="208-208"];
m6_91 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var interval = GetIntervalFromResolution(resolution)", span="209-209"];
m6_92 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label=resolution, span="210-210"];
m6_93 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="Resolution.Minute", span="212-212"];
m6_94 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="Resolution.Hour", span="213-213"];
m6_95 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="startDate = startUtc.ToString(''yyyyMMdd'') + ''0000''", span="214-214"];
m6_97 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="startDate = startUtc.AddDays(1).ToString(''yyyyMMdd'') + ''2100''", span="218-218"];
m6_98 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var request = string.Format(''{0}&ver={1}&sid={2}&interval={3}&offerID={4}&timeFrom={5}&timeTo={6}'',\r\n                _baseUrl, _ver, _sid, interval, symbolId, startDate, endDate)", span="222-223"];
m6_99 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="string[] lines", span="225-225"];
m6_101 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var data = client.DownloadString(request)", span="228-228"];
m6_102 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="lines = data.Split('\n')", span="229-229"];
m6_100 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.RequestData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var client = new WebClient()", span="226-226"];
m6_105 [cluster="System.DateTime.ToString(string)", file="GDAXBrokerage.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m6_107 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", span="264-264"];
m6_108 [cluster="string.Format(string, params object[])", file="GDAXBrokerage.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m6_110 [cluster="System.Net.WebClient.DownloadString(string)", file="GDAXBrokerage.cs", label="Entry System.Net.WebClient.DownloadString(string)", span="0-0"];
m6_109 [cluster="System.Net.WebClient.WebClient()", file="GDAXBrokerage.cs", label="Entry System.Net.WebClient.WebClient()", span="0-0"];
m6_112 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m6_80 [cluster="QuantConnect.Brokerages.IWebSocket.Close()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="51-51"];
m6_41 [cluster="Unk.ToList", file="GDAXBrokerage.cs", label="Entry Unk.ToList", span=""];
m6_36 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="GDAXBrokerage.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="30-30"];
m6_117 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetFxcmIDFromSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.cs", label="throw new ArgumentException(''Volume data is not available for the selected symbol.'', ''symbol'');", span="250-250"];
m6_50 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Entry lambda expression", span="142-142"];
m6_40 [cluster="Unk.Select", file="GDAXBrokerage.cs", label="Entry Unk.Select", span=""];
m6_120 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m6_147 [cluster="Unk.Substring", file="GDAXBrokerage.cs", label="Entry Unk.Substring", span=""];
m6_129 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label="interval = ''D1''", span="278-278"];
m6_130 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution,\r\n                        ''tick or second resolution are not supported for Forex Volume.'');", span="282-283"];
m6_131 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label="return interval;", span="285-285"];
m6_143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="list.Add(new Holding\r\n                    {\r\n                        Symbol = ConvertProductId(item.ProductId),\r\n                        Quantity = item.Side == ''sell'' ? -item.FilledSize : item.FilledSize,\r\n                        Type = SecurityType.Crypto,\r\n                        CurrencySymbol = item.ProductId.Substring(0, 3).ToUpper(),\r\n                        ConversionRate = conversionRate,\r\n                        MarketPrice = item.Price,\r\n                        //todo: check this\r\n                        AveragePrice = item.FilledSize > 0 ? item.ExecutedValue / item.FilledSize : 0\r\n                    })", span="257-267"];
m6_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="return list;", span="271-271"];
m6_132 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label="Exit QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", span="264-264"];
m6_133 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="GDAXBrokerage.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m6_134 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="QuantConnect.ToolBox.FxcmVolumeDownloader", span=""];
m6_135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label=duplicate, span=""];
m6_136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label=obs, span=""];
m6_137 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="System.DateTime", span=""];
m6_138 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="System.DateTime", span=""];
m6_141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="var tick = this.GetTick(ConvertProductId(item.ProductId))", span="253-253"];
m6_139 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="var tick = this.GetTick(Symbol.Create(baseSymbol, SecurityType.Crypto, Market.GDAX))", span="248-248"];
m6_140 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="conversionRate = tick.Price", span="249-249"];
m6_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="conversionRate = tick.Price", span="254-254"];
m6_145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="231-231"];
m6_122 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label="string interval", span="266-266"];
m6_75 [cluster="lambda expression", file="GDAXBrokerage.cs", label=a, span="147-147"];
m6_45 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Exit lambda expression", span="140-140"];
m6_48 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Exit lambda expression", span="141-141"];
m6_153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="278-278"];
m6_154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="var list = new List<Securities.Cash>()", span="280-280"];
m6_155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="var req = new RestRequest(''/accounts'', Method.GET)", span="282-282"];
m6_161 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="list.Add(new Securities.Cash(item.Currency, item.Balance, 1))", span="292-292"];
m6_164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, rate))", span="297-297"];
m6_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, tick.Price))", span="303-303"];
m6_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="return list;", span="307-307"];
m6_156 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="GetAuthenticationToken(req)", span="283-283"];
m6_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="var response = RestClient.Execute(req)", span="284-284"];
m6_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="JsonConvert.DeserializeObject<Messages.Account[]>(response.Content)", span="286-286"];
m6_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="item.Balance > 0", span="288-288"];
m6_160 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="item.Currency == ''USD''", span="290-290"];
m6_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="new[] {''GBP'', ''EUR'' }.Contains(item.Currency)", span="294-294"];
m6_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="var rate = GetConversionRate(item.Currency)", span="296-296"];
m6_165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="var tick = GetTick(Symbol.Create(item.Currency + ''USD'', SecurityType.Crypto, Market.GDAX))", span="301-301"];
m6_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="278-278"];
m6_76 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Exit lambda expression", span="147-147"];
m6_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m6_42 [cluster="System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", span="0-0"];
m6_127 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label="interval = ''H1''", span="274-274"];
m6_62 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var stringDate = obs[0].Substring(startIndex: 3)", span="175-175"];
m6_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return success.All(a => a);", span="147-147"];
m6_35 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="49-49"];
m6_38 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m6_73 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="GDAXBrokerage.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m6_119 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetFxcmIDFromSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.cs", label="Exit QuantConnect.ToolBox.FxcmVolumeDownloader.GetFxcmIDFromSymbol(QuantConnect.Symbol)", span="241-241"];
m6_39 [cluster="System.Enum.ToString()", file="GDAXBrokerage.cs", label="Entry System.Enum.ToString()", span="0-0"];
m6_121 [cluster="System.ArgumentException.ArgumentException(string, string)", file="GDAXBrokerage.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m6_53 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Entry lambda expression", span="148-148"];
m6_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.size = Math.Abs(order.Quantity)", span="55-55"];
m6_11 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="GDAXBrokerage.cs", label="GetAuthenticationToken(req)", prediction=4, span="68-68"];
m6_9 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.overdraft_enabled = true", span="63-63"];
m6_12 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var response = RestClient.Execute(req)", span="69-69"];
m6_13 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="response.StatusCode == System.Net.HttpStatusCode.OK && response.Content != null", span="71-71"];
m6_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="GDAXBrokerage.cs", label="order.Type != OrderType.Market", prediction=5, span="93-93"];
m6_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.side = order.Direction.ToString().ToLower()", span="56-56"];
m6_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="CachedOrderIDs.TryAdd(order.Id, order)", span="90-90"];
m6_24 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="95-95"];
m6_7 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.product_id = ConvertSymbol(order.Symbol)", span="59-59"];
m6_8 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="_algorithm.BrokerageModel.AccountType == AccountType.Margin", span="61-61"];
m6_6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.price = order is LimitOrder ? ((LimitOrder)order).LimitPrice : order is StopMarketOrder ? ((StopMarketOrder)order).StopPrice : 0", span="58-58"];
m6_18 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="string brokerId = raw.id", span="82-82"];
m6_19 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="CachedOrderIDs.ContainsKey(order.Id)", span="83-83"];
m6_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="85-85"];
m6_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="order.BrokerId.Add(brokerId)", span="89-89"];
m6_10 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="req.AddJsonBody(payload)", span="66-66"];
m6_14 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="dynamic raw = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="73-73"];
m6_17 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return false;", span="79-79"];
m6_15 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="raw == null || raw.id == null", span="75-75"];
m6_5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.type = ConvertOrderType(order.Type)", span="57-57"];
m6_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted })", span="98-98"];
m6_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Orders.Order outOrder = null", span="103-103"];
m6_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="CachedOrderIDs.TryRemove(order.Id, out outOrder)", span="104-104"];
m6_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="order.Type == OrderType.Market", span="100-100"];
m6_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, (decimal)raw.fill_fees, ''GDAX Order Event'') { Status = OrderStatus.Filled })", span="102-102"];
m6_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return true;", span="108-108"];
m6_72 [cluster="string.Substring(int)", file="GDAXBrokerage.cs", label="Entry string.Substring(int)", span="0-0"];
m6_114 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetFxcmIDFromSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.cs", label="int symbolId", span="243-243"];
m6_74 [cluster="Unk.Sum", file="GDAXBrokerage.cs", label="Entry Unk.Sum", span=""];
m6_125 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label="interval = ''M1''", span="270-270"];
m6_124 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label="Resolution.Minute", span="269-269"];
m6_126 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label="Resolution.Hour", span="273-273"];
m6_43 [cluster="Unk.AddJsonBody", file="GDAXBrokerage.cs", label="Entry Unk.AddJsonBody", span=""];
m6_46 [cluster="Unk.>", file="GDAXBrokerage.cs", label="Entry Unk.>", span=""];
m6_44 [cluster="Unk.GetAuthenticationToken", file="GDAXBrokerage.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m6_47 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m6_52 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
m6_51 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
m6_54 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="GDAXBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m6_77 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="153-153"];
m6_78 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs", label="WebSocket.Close()", span="155-155"];
m6_79 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="153-153"];
m6_37 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="GDAXBrokerage.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m6_172 [cluster="Unk.Create", file="GDAXBrokerage.cs", label="Entry Unk.Create", span=""];
m6_63 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="obsTime = DateTime.ParseExact(stringDate, ''yyyyMMddHHmm'',\r\n                    DateTimeFormatInfo.InvariantInfo)", span="176-177"];
m6_65 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var transactions = _transactionsIdx.Select(x => int.Parse(obs[x])).Sum()", span="180-180"];
m6_69 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="Exit QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="164-164"];
m6_66 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="requestedData.Add(new FxcmVolume\r\n                {\r\n                    Symbol = symbol,\r\n                    Time = obsTime,\r\n                    Value = volume,\r\n                    Transactions = transactions\r\n                })", span="181-187"];
m6_67 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="obsTime.Date <= endUtc.Date && idx < lines.Length - 1", span="188-188"];
m6_68 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="return requestedData.Where(o => o.Time.Date >= startUtc.Date && o.Time.Date <= endUtc.Date);", span="189-189"];
m6_71 [cluster="string.Split(params char[])", file="GDAXBrokerage.cs", label="Entry string.Split(params char[])", span="0-0"];
m6_113 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m6_171 [cluster="Unk.GetConversionRate", file="GDAXBrokerage.cs", label="Entry Unk.GetConversionRate", span=""];
m6_146 [cluster="Unk.EndsWith", file="GDAXBrokerage.cs", label="Entry Unk.EndsWith", span=""];
m6_56 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var idx = 0", span="166-166"];
m6_169 [cluster="Securities.Cash.cstr", file="GDAXBrokerage.cs", label="Entry Securities.Cash.cstr", span=""];
m6_116 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetFxcmIDFromSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.cs", label=ArgumentException, span="248-248"];
m6_58 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var requestedData = new List<BaseData>()", span="168-168"];
m6_180 [cluster="System.Collections.Generic.List<T>.Clear()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m6_152 [cluster="Unk.ToUpper", file="GDAXBrokerage.cs", label="Entry Unk.ToUpper", span=""];
m6_115 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m6_118 [cluster="Unk.ConvertProductId", file="GDAXBrokerage.cs", label="Entry Unk.ConvertProductId", span=""];
m6_150 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="209-209"];
m6_59 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var lines = RequestData(symbol, resolution, startUtc, endUtc)", span="169-169"];
m6_60 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var line = lines[idx++]", span="173-173"];
m6_61 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="var obs = line.Split(';')", span="174-174"];
m6_0 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.FxcmVolumeDownloader(string)", file="GDAXBrokerage.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeDownloader.FxcmVolumeDownloader(string)", span="86-86"];
m6_1 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.FxcmVolumeDownloader(string)", file="GDAXBrokerage.cs", label="_dataDirectory = dataDirectory", span="88-88"];
m6_32 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", file="GDAXBrokerage.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", span="17-17"];
m6_2 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.FxcmVolumeDownloader(string)", file="GDAXBrokerage.cs", label="Exit QuantConnect.ToolBox.FxcmVolumeDownloader.FxcmVolumeDownloader(string)", span="86-86"];
m6_34 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GDAXBrokerage.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="164-164"];
m6_128 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label="Resolution.Daily", span="277-277"];
m6_181 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="330-330"];
m6_182 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var totalFee = 0m", span="332-332"];
m6_183 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="order.BrokerId", span="334-334"];
m6_188 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="totalFee += (decimal)fill.fill_fees", span="341-341"];
m6_189 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return totalFee;", span="344-344"];
m6_184 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="336-336"];
m6_185 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="GetAuthenticationToken(req)", span="337-337"];
m6_186 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var response = RestClient.Execute(req)", span="338-338"];
m6_187 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="339-339"];
m6_190 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="330-330"];
m6_123 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.GetIntervalFromResolution(QuantConnect.Resolution)", file="GDAXBrokerage.cs", label=resolution, span="267-267"];
m6_173 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="314-314"];
m6_174 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label=Ticks, span="316-316"];
m6_175 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="var copy = Ticks.ToArray()", span="318-318"];
m6_176 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="Ticks.Clear()", span="319-319"];
m6_177 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="return copy;", span="320-320"];
m6_178 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="314-314"];
m6_148 [cluster="Unk.ToLower", file="GDAXBrokerage.cs", label="Entry Unk.ToLower", span=""];
m6_57 [cluster="decimal.ToString()", file="GDAXBrokerage.cs", label="Entry decimal.ToString()", span="0-0"];
m6_170 [cluster="Unk.Contains", file="GDAXBrokerage.cs", label="Entry Unk.Contains", span=""];
m6_179 [cluster="System.Collections.Generic.List<T>.ToArray()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m6_191 [file="GDAXBrokerage.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m6_192 [file="GDAXBrokerage.cs", label=item, span=""];
m7_44 [cluster="string.Format(string, params object[])", file="GDAXBrokerage.Messaging.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m7_41 [cluster="QuantConnect.Orders.Order.ToString()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="195-195"];
m7_42 [cluster="QuantConnect.Orders.Order.ToString()", file="GDAXBrokerage.Messaging.cs", label="return string.Format(''{0} order for {1} unit{3} of {2}'', Type, Quantity, Symbol, Quantity == 1 ? '''' : ''s'');", span="197-197"];
m7_43 [cluster="QuantConnect.Orders.Order.ToString()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Orders.Order.ToString()", span="195-195"];
m7_15 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", span="148-148"];
m7_16 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="Time = time", span="150-150"];
m7_17 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="Price = price", span="151-151"];
m7_18 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="Type = order", span="152-152"];
m7_19 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="Quantity = quantity", span="153-153"];
m7_20 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="Symbol = symbol", span="154-154"];
m7_21 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="Status = OrderStatus.None", span="155-155"];
m7_22 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="Tag = tag", span="156-156"];
m7_23 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="SecurityType = type", span="157-157"];
m7_24 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="Duration = OrderDuration.GTC", span="158-158"];
m7_25 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="BrokerId = new List<long>()", span="159-159"];
m7_26 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="ContingentId = 0", span="160-160"];
m7_27 [cluster="QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Orders.Order.Order(string, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string, QuantConnect.SecurityType)", span="148-148"];
m7_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", span="63-63"];
m7_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="RequestId = reqId", prediction=6, span="66-66"];
m7_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="GDAXBrokerage.Messaging.cs", label="Exchange = exchange", span="67-67"];
m7_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="GDAXBrokerage.Messaging.cs", label="UnderlyingConId = underlyingConId", span="68-68"];
m7_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="GDAXBrokerage.Messaging.cs", label="TradingClass = tradingClass", span="69-69"];
m7_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="GDAXBrokerage.Messaging.cs", label="Multiplier = multiplier", span="70-70"];
m7_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="GDAXBrokerage.Messaging.cs", label="Expirations = expirations", span="71-71"];
m7_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="GDAXBrokerage.Messaging.cs", label="Strikes = strikes", span="72-72"];
m7_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", span="63-63"];
m7_9 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Messaging.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs", span=""];
m7_10 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Messaging.cs", label="BrokerId = new List<long>()", span="134-134"];
m7_11 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Messaging.cs", label="ContingentId = 0", span="135-135"];
m7_12 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Orders.Order.Order(QuantConnect.Orders.OrderType)", span="123-123"];
m7_14 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_28 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", span="173-173"];
m7_39 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="ContingentId = 0", prediction=7, span="185-185"];
m7_38 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="BrokerId = new List<long>()", span="184-184"];
m7_29 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="Time = time", span="175-175"];
m7_30 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="Price = price", span="176-176"];
m7_31 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="Type = order", span="177-177"];
m7_32 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="Quantity = quantity", span="178-178"];
m7_33 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="Symbol = symbol", span="179-179"];
m7_34 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="Status = OrderStatus.None", span="180-180"];
m7_35 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="Tag = tag", span="181-181"];
m7_36 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="SecurityType = type", span="182-182"];
m7_37 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="Duration = OrderDuration.GTC", span="183-183"];
m7_40 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", span="173-173"];
m7_13 [cluster="System.DateTime.DateTime()", file="GDAXBrokerage.Messaging.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m7_45 [file="GDAXBrokerage.Messaging.cs", label="QuantConnect.Orders.Order", span=""];
m8_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133"];
m8_51 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.Utility.cs", label="return symbol.Value.Substring(0, 3).ToLower() + ''-'' + symbol.Value.Substring(3, 3).ToLower();", span="135-135"];
m8_52 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133"];
m8_35 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="104-104"];
m8_40 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", color=green, community=0, file="GDAXBrokerage.Utility.cs", label="throw new Exception(''GDAXBrokerage.ConvertOrderType: Unsupported order type:'' + orderType.ToString());", prediction=8, span="115-115"];
m8_38 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Utility.cs", label="orderType == Orders.OrderType.StopMarket", span="110-110"];
m8_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Utility.cs", label="orderType == Orders.OrderType.Limit || orderType == Orders.OrderType.Market", span="106-106"];
m8_37 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Utility.cs", label="return orderType.ToString().ToLower();", span="108-108"];
m8_39 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Utility.cs", label="return ''stop'';", span="112-112"];
m8_41 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="104-104"];
m8_42 [cluster="System.Enum.ToString()", file="GDAXBrokerage.Utility.cs", label="Entry System.Enum.ToString()", span="0-0"];
m8_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs.TickPriceEventArgs(int, int, double, int)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs.TickPriceEventArgs(int, int, double, int)", span="35-35"];
m8_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs.TickPriceEventArgs(int, int, double, int)", file="GDAXBrokerage.Utility.cs", label="Price = price", span="38-38"];
m8_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs.TickPriceEventArgs(int, int, double, int)", file="GDAXBrokerage.Utility.cs", label="CanAutoExecute = canAutoExecute", span="39-39"];
m8_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs.TickPriceEventArgs(int, int, double, int)", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs.TickPriceEventArgs(int, int, double, int)", span="35-35"];
m8_43 [cluster="string.ToLower()", file="GDAXBrokerage.Utility.cs", label="Entry string.ToLower()", span="0-0"];
m8_53 [cluster="string.Substring(int, int)", file="GDAXBrokerage.Utility.cs", label="Entry string.Substring(int, int)", span="0-0"];
m8_4 [file="GDAXBrokerage.Utility.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", span=""];
m9_9 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="78-78"];
m9_10 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="message = _message", span="80-80"];
m9_11 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return false;", span="81-81"];
m9_12 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="78-78"];
m9_2 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="55-55"];
m9_3 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="return 3m;", span="57-57"];
m9_4 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="55-55"];
m9_8 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="26-26"];
m9_5 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="65-65"];
m9_6 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="return new GDAXFeeModel();", span="67-67"];
m9_7 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="65-65"];
m9_20 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="87-87"];
m9_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="GDAXBrokerageModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m9_0 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44"];
m9_1 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44"];
m9_13 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="91-91"];
m9_14 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="order.BrokerId != null && order.BrokerId.Any()", span="93-93"];
m9_17 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return base.CanSubmitOrder(security, order, out message);", span="99-99"];
m9_15 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="message = _message", span="95-95"];
m9_16 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return false;", span="96-96"];
m9_18 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="91-91"];
m9_21 [file="GDAXBrokerageModel.cs", label="QuantConnect.Brokerages.GDAXBrokerageModel", span=""];
m10_42 [cluster="Unk.Where", file="GoogleDataDownloader.cs", label="Entry Unk.Where", span=""];
m10_46 [cluster="Unk.Average", file="GoogleDataDownloader.cs", label="Entry Unk.Average", span=""];
m10_100 [cluster="System.IO.InvalidDataException.InvalidDataException(string)", file="GoogleDataDownloader.cs", label="Entry System.IO.InvalidDataException.InvalidDataException(string)", span="0-0"];
m10_34 [cluster="System.Net.WebClient.WebClient()", file="GoogleDataDownloader.cs", label="Entry System.Net.WebClient.WebClient()", span="0-0"];
m10_32 [cluster="int.ToString()", file="GoogleDataDownloader.cs", label="Entry int.ToString()", span="0-0"];
m10_40 [cluster="System.Collections.Generic.List<T>.List()", file="GoogleDataDownloader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m10_36 [cluster="string.Split(params char[])", file="GoogleDataDownloader.cs", label="Entry string.Split(params char[])", span="0-0"];
m10_45 [cluster="Unk.Min", file="GoogleDataDownloader.cs", label="Entry Unk.Min", span=""];
m10_64 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="Entry lambda expression", span="104-104"];
m10_52 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="Entry lambda expression", span="97-97"];
m10_55 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="Entry lambda expression", span="101-101"];
m10_58 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="Entry lambda expression", span="102-102"];
m10_61 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="Entry lambda expression", span="103-103"];
m10_53 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="val == null", span="97-97"];
m10_54 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="Exit lambda expression", span="97-97"];
m10_56 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="val != null", span="101-101"];
m10_57 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="Exit lambda expression", span="101-101"];
m10_59 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="val != null", span="102-102"];
m10_60 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="Exit lambda expression", span="102-102"];
m10_62 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="val != null", span="103-103"];
m10_63 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="Exit lambda expression", span="103-103"];
m10_65 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="val != null", span="104-104"];
m10_66 [cluster="lambda expression", file="GoogleDataDownloader.cs", label="Exit lambda expression", span="104-104"];
m10_48 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m10_0 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="51-51"];
m10_1 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var startdate = ((ConvertMonths)startUtc.Month).ToString()\r\n                + @''+'' + startUtc.Day.ToString()\r\n                + @''%2C+'' + startUtc.Year.ToString()", span="53-55"];
m10_28 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="yield return new TradeBar(time, symbol, (Decimal)ohlc[0], (Decimal)ohlc[1], (Decimal)ohlc[2], (Decimal)ohlc[3], volume, resolution.ToTimeSpan());", span="113-113"];
m10_2 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var enddate = ((ConvertMonths)endUtc.Month).ToString()\r\n                + @''+'' + endUtc.Day.ToString()\r\n                + @''%2C+'' + endUtc.Year.ToString()", span="56-58"];
m10_3 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var url = string.Format(UrlPrototypeDaily, symbol.Value, startdate, enddate)", span="61-61"];
m10_4 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="string[] lines", span="64-64"];
m10_6 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var data = client.DownloadString(url)", span="67-67"];
m10_5 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var client = new WebClient()", span="65-65"];
m10_7 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="lines = data.Split('\n')", span="68-68"];
m10_8 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var currentLine = 1", span="72-72"];
m10_9 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="currentLine < lines.Length - 1", span="74-74"];
m10_10 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var columns = lines[currentLine].Split(',')", span="77-77"];
m10_29 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="currentLine++", span="115-115"];
m10_11 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var DMY = columns[0].Split('-')", span="80-80"];
m10_16 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="List<Decimal?> ohlc = new List<Decimal?>()\r\n                {\r\n                    columns[1] != ''-'' ? (Decimal?)columns[1].ToDecimal() : null,\r\n                    columns[2] != ''-'' ? (Decimal?)columns[2].ToDecimal() : null,\r\n                    columns[3] != ''-'' ? (Decimal?)columns[3].ToDecimal() : null,\r\n                    columns[4] != ''-'' ? (Decimal?)columns[4].ToDecimal() : null\r\n                }", span="89-95"];
m10_26 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="Log.Error(string.Format(''Corrupt bar on {0}: {1},{2},{3},{4}. Saved as {5},{6},{7},{8}.'',\r\n                        columns[0], columns[1], columns[2], columns[3], columns[4],\r\n                        ohlc[0], ohlc[1], ohlc[2], ohlc[3]))", span="106-108"];
m10_27 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="long volume = columns[5].ToInt64()", span="111-111"];
m10_12 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var day = DMY[0].ToInt32()", span="83-83"];
m10_13 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var month = (int)Enum.Parse(typeof(ConvertMonths), DMY[1])", span="84-84"];
m10_14 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var year = (DMY[2].ToInt32() > 70) ? 1900 + DMY[2].ToInt32() : 2000 + DMY[2].ToInt32()", span="85-85"];
m10_15 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var time = new DateTime(year, month, day, 0, 0, 0)", span="86-86"];
m10_17 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="ohlc.Where(val => val == null).Count() > 0", span="97-97"];
m10_18 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="ohlc[1] == null", span="101-101"];
m10_19 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="ohlc[1] = ohlc.Where(val => val != null).Max()", span="101-101"];
m10_20 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="ohlc[2] == null", span="102-102"];
m10_21 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="ohlc[2] = ohlc.Where(val => val != null).Min()", span="102-102"];
m10_22 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="ohlc[0] == null", span="103-103"];
m10_23 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="ohlc[0] = ohlc.Where(val => val != null).Average()", span="103-103"];
m10_24 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="ohlc[3] == null", span="104-104"];
m10_25 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="ohlc[3] = ohlc.Where(val => val != null).Average()", span="104-104"];
m10_30 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="Exit QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetDaily(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="51-51"];
m10_44 [cluster="Unk.Max", file="GoogleDataDownloader.cs", label="Entry Unk.Max", span=""];
m10_37 [cluster="string.ToInt32()", file="GoogleDataDownloader.cs", label="Entry string.ToInt32()", span="297-297"];
m10_105 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="GoogleDataDownloader.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m10_123 [cluster="System.ArgumentException.ArgumentException(string)", file="GoogleDataDownloader.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m10_43 [cluster="Unk.Count", file="GoogleDataDownloader.cs", label="Entry Unk.Count", span=""];
m10_38 [cluster="System.Enum.Parse(System.Type, string)", file="GoogleDataDownloader.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m10_31 [cluster="System.Enum.ToString()", file="GoogleDataDownloader.cs", label="Entry System.Enum.ToString()", span="0-0"];
m10_101 [cluster="System.DateTime.AddSeconds(double)", file="GoogleDataDownloader.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m10_39 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="GoogleDataDownloader.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m10_41 [cluster="string.ToDecimal()", file="GoogleDataDownloader.cs", label="Entry string.ToDecimal()", span="248-248"];
m10_47 [cluster="string.Format(string, params object[])", file="GoogleDataDownloader.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m10_33 [cluster="string.Format(string, object, object, object)", file="GoogleDataDownloader.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m10_97 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.ToUnixTime(System.DateTime)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.ToUnixTime(System.DateTime)", span="191-191"];
m10_102 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.ToUnixTime(System.DateTime)", file="GoogleDataDownloader.cs", label="var epoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)", span="193-193"];
m10_103 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.ToUnixTime(System.DateTime)", file="GoogleDataDownloader.cs", label="return (long)(utcDateTime - epoch).TotalSeconds;", span="194-194"];
m10_104 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.ToUnixTime(System.DateTime)", file="GoogleDataDownloader.cs", label="Exit QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.ToUnixTime(System.DateTime)", span="191-191"];
m10_98 [cluster="string.Remove(int, int)", file="GoogleDataDownloader.cs", label="Entry string.Remove(int, int)", span="0-0"];
m10_35 [cluster="System.Net.WebClient.DownloadString(string)", file="GoogleDataDownloader.cs", label="Entry System.Net.WebClient.DownloadString(string)", span="0-0"];
m10_67 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="126-126"];
m10_68 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var numberOfDays = (int)(endUtc - startUtc).TotalDays", span="128-128"];
m10_95 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="yield return new TradeBar(time, symbol, open, high, low, close, volume, resolution.ToTimeSpan());", span="180-180"];
m10_69 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var resolutionSeconds = (int)resolution.ToTimeSpan().TotalSeconds", span="129-129"];
m10_70 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var endUnixTime = ToUnixTime(endUtc)", span="130-130"];
m10_71 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var url = string.Format(UrlPrototypeMinuteOrHour, symbol.Value, resolutionSeconds, numberOfDays, endUnixTime)", span="133-133"];
m10_88 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var time = startTime.AddSeconds(resolutionSeconds * (titleRow ? 0 : str[0].ToInt64()))", span="169-169"];
m10_72 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="string[] lines", span="136-136"];
m10_74 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var data = client.DownloadString(url)", span="139-139"];
m10_73 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var client = new WebClient()", span="137-137"];
m10_75 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="lines = data.Split('\n')", span="140-140"];
m10_76 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var currentLine = 7", span="144-144"];
m10_77 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="currentLine < lines.Length - 1", span="146-146"];
m10_79 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var columns = lines[currentLine].Split(',')", span="152-152"];
m10_81 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="currentLine < lines.Length - 1", span="155-155"];
m10_82 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var str = lines[currentLine].Split(',')", span="157-157"];
m10_94 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="currentLine++", span="178-178"];
m10_78 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var firstPass = true", span="148-148"];
m10_86 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="titleRow && !firstPass", span="163-163"];
m10_80 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var startTime = FromUnixTime(columns[0].Remove(0, 1).ToInt64())", span="153-153"];
m10_83 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="str.Length < 6", span="158-158"];
m10_84 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="throw new InvalidDataException(''Short record: '' + str);", span="159-159"];
m10_85 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var titleRow = str[0][0] == 'a'", span="162-162"];
m10_89 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var open = str[4].ToDecimal()", span="172-172"];
m10_90 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var high = str[2].ToDecimal()", span="173-173"];
m10_91 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var low = str[3].ToDecimal()", span="174-174"];
m10_92 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var close = str[1].ToDecimal()", span="175-175"];
m10_93 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="var volume = str[5].ToInt64()", span="176-176"];
m10_87 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="firstPass = false", span="166-166"];
m10_96 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="Exit QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.GetMinuteOrHour(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="126-126"];
m10_99 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.FromUnixTime(long)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.FromUnixTime(long)", span="203-203"];
m10_106 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.FromUnixTime(long)", file="GoogleDataDownloader.cs", label="var epoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)", span="205-205"];
m10_107 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.FromUnixTime(long)", file="GoogleDataDownloader.cs", label="return epoch.AddSeconds(unixTime);", span="206-206"];
m10_108 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.FromUnixTime(long)", file="GoogleDataDownloader.cs", label="Exit QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.FromUnixTime(long)", span="203-203"];
m10_109 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="217-217"];
m10_110 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="symbol.ID.SecurityType != SecurityType.Equity", span="219-219"];
m10_111 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="throw new NotSupportedException(''SecurityType not available: '' + symbol.ID.SecurityType);", span="220-220"];
m10_112 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="endUtc < startUtc", span="222-222"];
m10_114 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label=resolution, span="225-225"];
m10_117 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="return GetMinuteOrHour(symbol, resolution, startUtc, endUtc);", span="229-229"];
m10_119 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="return GetDaily(symbol, resolution, startUtc, endUtc);", span="232-232"];
m10_120 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="throw new NotSupportedException(''Resolution not available: '' + resolution);", span="235-235"];
m10_113 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="throw new ArgumentException(''The end date must be greater or equal than the start date.'');", span="223-223"];
m10_115 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="Resolution.Minute", span="227-227"];
m10_118 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="Resolution.Daily", span="231-231"];
m10_116 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="Resolution.Hour", span="228-228"];
m10_121 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="GoogleDataDownloader.cs", label="Exit QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="217-217"];
m10_51 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m10_122 [cluster="System.NotSupportedException.NotSupportedException(string)", file="GoogleDataDownloader.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m10_49 [cluster="string.ToInt64()", file="GoogleDataDownloader.cs", label="Entry string.ToInt64()", span="313-313"];
m10_50 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m10_124 [file="GoogleDataDownloader.cs", label="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader", span=""];
m14_87 [cluster="Unk.GetEntry", file="QCAlgorithm.History.cs", label="Entry Unk.GetEntry", span=""];
m14_136 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m14_75 [cluster="Unk.Where", file="QCAlgorithm.History.cs", label="Entry Unk.Where", span=""];
m14_128 [cluster="decimal.RoundToSignificantDigits(int)", file="QCAlgorithm.History.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
m14_92 [cluster="Unk.Trace", file="QCAlgorithm.History.cs", label="Entry Unk.Trace", span=""];
m14_81 [cluster="Unk.Concat", file="QCAlgorithm.History.cs", label="Entry Unk.Concat", span=""];
m14_19 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="104-104"];
m14_20 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="QCAlgorithm.History.cs", label=_locker, span="106-106"];
m14_21 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="QCAlgorithm.History.cs", label="Amount += amount", span="108-108"];
m14_22 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="QCAlgorithm.History.cs", label="return Amount;", span="109-109"];
m14_23 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Securities.Cash.AddAmount(decimal)", span="104-104"];
m14_11 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="86-86"];
m14_12 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.History.cs", label=_isBaseCurrency, span="88-88"];
m14_14 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.History.cs", label="var rate = data.Value", span="90-90"];
m14_13 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.History.cs", label="return;", span="88-88"];
m14_15 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.History.cs", label=_invertRealTimePrice, span="91-91"];
m14_16 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.History.cs", label="rate = 1/rate", span="93-93"];
m14_17 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.History.cs", label="ConversionRate = rate", span="95-95"];
m14_18 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="86-86"];
m14_85 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="235-235"];
m14_123 [cluster="QuantConnect.Securities.Cash.ToString()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Cash.ToString()", span="228-228"];
m14_124 [cluster="QuantConnect.Securities.Cash.ToString()", file="QCAlgorithm.History.cs", label="var rate = ConversionRate", span="231-231"];
m14_125 [cluster="QuantConnect.Securities.Cash.ToString()", file="QCAlgorithm.History.cs", label="rate = rate < 1000 ? rate.RoundToSignificantDigits(5) : Math.Round(rate, 2)", span="232-232"];
m14_126 [cluster="QuantConnect.Securities.Cash.ToString()", file="QCAlgorithm.History.cs", label="return $''{Symbol}: {CurrencySymbol}{Amount,15:0.00} @ {rate,10:0.00####} = ${Math.Round(ValueInAccountCurrency, 2)}'';", span="233-233"];
m14_127 [cluster="QuantConnect.Securities.Cash.ToString()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Securities.Cash.ToString()", span="228-228"];
m14_83 [cluster="Unk.Min", file="QCAlgorithm.History.cs", label="Entry Unk.Min", span=""];
m14_120 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="181-181"];
m14_111 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="CreateSymbol(marketMap, fx, markets, SecurityType.Forex)", span="177-177"];
m14_115 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)", span="178-178"];
m14_118 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)", span="179-179"];
m14_94 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="149-150"];
m14_97 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="167-167"];
m14_100 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="167-167"];
m14_103 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="167-167"];
m14_106 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="167-167"];
m14_110 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="177-177"];
m14_114 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="178-178"];
m14_117 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="179-179"];
m14_95 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto", span="149-150"];
m14_96 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="149-150"];
m14_98 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Key", span="167-167"];
m14_99 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="167-167"];
m14_101 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.SecurityType", span="167-167"];
m14_102 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="167-167"];
m14_104 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Key", span="167-167"];
m14_105 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="167-167"];
m14_107 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="y.First().ID.Market", span="167-167"];
m14_108 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="167-167"];
m14_112 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="177-177"];
m14_116 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="178-178"];
m14_119 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="179-179"];
m14_121 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Resolution", span="181-181"];
m14_122 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="181-181"];
m14_10 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="302-302"];
m14_91 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m14_79 [cluster="Unk.ContainsKey", file="QCAlgorithm.History.cs", label="Entry Unk.ContainsKey", span=""];
m14_88 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m14_84 [cluster="Unk.GetSymbolProperties", file="QCAlgorithm.History.cs", label="Entry Unk.GetSymbolProperties", span=""];
m14_90 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m14_130 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="236-236"];
m14_131 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="string market", span="238-238"];
m14_132 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="!markets.TryGetValue(securityType, out market)", span="239-239"];
m14_133 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="market = marketMap[securityType]", span="241-241"];
m14_134 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="return QuantConnect.Symbol.Create(crypto, securityType, market);", span="244-244"];
m14_135 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="236-236"];
m14_8 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.History.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m14_24 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="117-117"];
m14_25 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="QCAlgorithm.History.cs", label=_locker, span="119-119"];
m14_26 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="QCAlgorithm.History.cs", label="Amount = amount", span="121-121"];
m14_27 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Securities.Cash.SetAmount(decimal)", span="117-117"];
m14_80 [cluster="Unk.Add", file="QCAlgorithm.History.cs", label="Entry Unk.Add", span=""];
m14_9 [cluster="string.ToUpper()", file="QCAlgorithm.History.cs", label="Entry string.ToUpper()", span="0-0"];
m14_89 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m14_129 [cluster="System.Math.Round(decimal, int)", file="QCAlgorithm.History.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m14_86 [cluster="Exception.cstr", file="QCAlgorithm.History.cs", label="Entry Exception.cstr", span=""];
m14_77 [cluster="Unk.GroupBy", file="QCAlgorithm.History.cs", label="Entry Unk.GroupBy", span=""];
m14_113 [cluster="Unk.CreateSymbol", file="QCAlgorithm.History.cs", label="Entry Unk.CreateSymbol", span=""];
m14_0 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m14_1 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.History.cs", label="symbol == null || symbol.Length != 3", span="72-72"];
m14_3 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.History.cs", label="Amount = amount", span="76-76"];
m14_4 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.History.cs", label="ConversionRate = conversionRate", span="77-77"];
m14_5 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.History.cs", label="Symbol = symbol.ToUpper()", span="78-78"];
m14_2 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''Cash symbols must be exactly 3 characters.'');", span="74-74"];
m14_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.History.cs", label="CurrencySymbol = Currencies.GetCurrencySymbol(Symbol)", span="79-79"];
m14_7 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m14_93 [cluster="string.Format(string, object, object)", file="QCAlgorithm.History.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m14_109 [cluster="Unk.First", file="QCAlgorithm.History.cs", label="Entry Unk.First", span=""];
m14_61 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="196-196"];
m14_28 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="136-136"];
m14_29 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="Symbol == CashBook.AccountCurrency", span="138-138"];
m14_36 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="subscriptions.Subscriptions.Where(config => config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto)", span="149-150"];
m14_44 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="var markets = securities.Select(x => x.Key).GroupBy(x => x.SecurityType).ToDictionary(x => x.Key, y => y.First().ID.Market)", span="167-167"];
m14_49 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="var potentials = Currencies.CurrencyPairs.Select(fx => CreateSymbol(marketMap, fx, markets, SecurityType.Forex))\r\n                .Concat(Currencies.CfdCurrencyPairs.Select(cfd => CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)))\r\n                .Concat(Currencies.CryptoCurrencyPairs.Select(crypto => CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)))", span="177-179"];
m14_50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="var minimumResolution = subscriptions.Subscriptions.Select(x => x.Resolution).DefaultIfEmpty(Resolution.Minute).Min()", span="181-181"];
m14_56 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, securityType, Symbol)", span="189-189"];
m14_58 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="!cashBook.TryGetValue(symbolProperties.QuoteCurrency, out quoteCash)", span="191-191"];
m14_60 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="195-195"];
m14_62 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="var config = subscriptions.Add(objectType, TickType.Quote, symbol, minimumResolution, marketHoursDbEntry.DataTimeZone, exchangeHours.TimeZone, false, true, false, true)", span="198-198"];
m14_70 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="securities.Add(config.Symbol, security)", span="214-214"];
m14_30 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="SecuritySymbol = QuantConnect.Symbol.Empty", span="140-140"];
m14_34 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="string normal = Symbol + CashBook.AccountCurrency", span="147-147"];
m14_31 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="_isBaseCurrency = true", span="141-141"];
m14_32 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="ConversionRate = 1.0m", span="142-142"];
m14_33 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="return null;", span="143-143"];
m14_35 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="string invert = CashBook.AccountCurrency + Symbol", span="148-148"];
m14_37 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="config.Symbol.Value == normal", span="152-152"];
m14_53 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="symbol.Value == normal || symbol.Value == invert", span="185-185"];
m14_40 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="config.Symbol.Value == invert", span="157-157"];
m14_54 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="_invertRealTimePrice = symbol.Value == invert", span="187-187"];
m14_38 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="SecuritySymbol = config.Symbol", span="154-154"];
m14_41 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="SecuritySymbol = config.Symbol", span="159-159"];
m14_39 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="return null;", span="155-155"];
m14_42 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="_invertRealTimePrice = true", span="160-160"];
m14_43 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="return null;", span="161-161"];
m14_45 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="markets.ContainsKey(SecurityType.Cfd) && !markets.ContainsKey(SecurityType.Forex)", span="168-168"];
m14_46 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="markets.Add(SecurityType.Forex, markets[SecurityType.Cfd])", span="170-170"];
m14_47 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="markets.ContainsKey(SecurityType.Forex) && !markets.ContainsKey(SecurityType.Cfd)", span="172-172"];
m14_48 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="markets.Add(SecurityType.Cfd, markets[SecurityType.Forex])", span="174-174"];
m14_52 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label=potentials, span="183-183"];
m14_51 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (QuoteBar)", span="182-182"];
m14_73 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", span="221-221"];
m14_55 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="188-188"];
m14_59 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="throw new Exception(''Unable to resolve quote cash: '' + symbolProperties.QuoteCurrency + ''. This is required to add conversion feed: '' + symbol.Value);", span="193-193"];
m14_71 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol.Value + '' for cash '' + Symbol + '' currency feed'')", span="215-215"];
m14_65 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Cfd", span="202-202"];
m14_67 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Crypto", span="206-206"];
m14_57 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="Cash quoteCash", span="190-190"];
m14_66 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="security = new Cfd.Cfd(exchangeHours, quoteCash, config, symbolProperties)", span="204-204"];
m14_68 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="security = new Crypto.Crypto(exchangeHours, quoteCash, config, symbolProperties)", span="208-208"];
m14_69 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="security = new Forex.Forex(exchangeHours, quoteCash, config, symbolProperties)", span="212-212"];
m14_63 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="SecuritySymbol = config.Symbol", span="199-199"];
m14_64 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="Security security", span="201-201"];
m14_72 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="return security;", span="216-216"];
m14_74 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="136-136"];
m14_76 [cluster="Unk.Select", file="QCAlgorithm.History.cs", label="Entry Unk.Select", span=""];
m14_78 [cluster="Unk.ToDictionary", file="QCAlgorithm.History.cs", label="Entry Unk.ToDictionary", span=""];
m14_82 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.History.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m14_138 [file="QCAlgorithm.History.cs", label="QuantConnect.Securities.Cash", span=""];
m14_139 [file="QCAlgorithm.History.cs", label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", span=""];
m14_140 [file="QCAlgorithm.History.cs", label=markets, span=""];
m15_23 [cluster="System.Collections.IEnumerator.Reset()", file="RateLimitEnumerator.cs", label="Entry System.Collections.IEnumerator.Reset()", span="0-0"];
m15_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", span="57-57"];
m15_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="var currentTime = _timeProvider.GetUtcNow().RoundDown(_minimumTimeBetweenCalls)", span="61-61"];
m15_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="var timeBetweenCalls = currentTime - _lastCallTime", span="62-62"];
m15_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="_lastCallTime = currentTime", span="75-75"];
m15_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="timeBetweenCalls >= _minimumTimeBetweenCalls", span="65-65"];
m15_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="!_enumerator.MoveNext()", span="67-67"];
m15_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="return false;", span="71-71"];
m15_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="_current = _enumerator.Current", span="76-76"];
m15_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="return true;", span="84-84"];
m15_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.MoveNext()", span="57-57"];
m15_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.Reset()", file="RateLimitEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.Reset()", span="91-91"];
m15_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.Reset()", file="RateLimitEnumerator.cs", label="_enumerator.Reset()", span="93-93"];
m15_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.Reset()", file="RateLimitEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.Reset()", span="91-91"];
m15_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.Dispose()", file="RateLimitEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.Dispose()", span="123-123"];
m15_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.Dispose()", file="RateLimitEnumerator.cs", label="_enumerator.Dispose()", span="125-125"];
m15_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.Dispose()", file="RateLimitEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.Dispose()", span="123-123"];
m15_19 [cluster="System.Collections.IEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m15_27 [cluster="System.IDisposable.Dispose()", file="RateLimitEnumerator.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m15_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", file="RateLimitEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", span="30-30"];
m15_18 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="RateLimitEnumerator.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m15_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.RateLimitEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", file="RateLimitEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.RateLimitEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", span="43-43"];
m15_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.RateLimitEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", file="RateLimitEnumerator.cs", label="_enumerator = enumerator", span="45-45"];
m15_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.RateLimitEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", file="RateLimitEnumerator.cs", label="_timeProvider = timeProvider", span="46-46"];
m15_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.RateLimitEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", file="RateLimitEnumerator.cs", label="_minimumTimeBetweenCalls = minimumTimeBetweenCalls", span="47-47"];
m15_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.RateLimitEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", file="RateLimitEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator.RateLimitEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", span="43-43"];
m15_28 [file="RateLimitEnumerator.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator", span=""];
m17_19 [cluster="System.Collections.IEnumerator.Reset()", file="RefreshEnumerator.cs", label="Entry System.Collections.IEnumerator.Reset()", span="0-0"];
m17_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", span="49-49"];
m17_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="_enumerator == null", span="51-51"];
m17_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="_enumerator = _enumeratorFactory.Invoke()", span="53-53"];
m17_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="var moveNext = _enumerator.MoveNext()", span="56-56"];
m17_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label=moveNext, span="57-57"];
m17_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="_current = _enumerator.Current", span="59-59"];
m17_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="_enumerator = null", span="63-63"];
m17_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", color=green, community=0, file="RefreshEnumerator.cs", label="_current = default(T)", prediction=9, span="64-64"];
m17_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="return true;", span="67-67"];
m17_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", span="49-49"];
m17_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="RefreshEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", span="37-37"];
m17_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="RefreshEnumerator.cs", label="_enumeratorFactory = enumeratorFactory", span="39-39"];
m17_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="RefreshEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", span="37-37"];
m17_14 [cluster="System.Collections.IEnumerator.MoveNext()", file="RefreshEnumerator.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m17_24 [cluster="System.IDisposable.Dispose()", file="RefreshEnumerator.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m17_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="RefreshEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", span="109-109"];
m17_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="RefreshEnumerator.cs", label="_enumerator != null", span="111-111"];
m17_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="RefreshEnumerator.cs", label="_enumerator.Dispose()", span="113-113"];
m17_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="RefreshEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", span="109-109"];
m17_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="RefreshEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", span="74-74"];
m17_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="RefreshEnumerator.cs", label="_enumerator != null", span="76-76"];
m17_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="RefreshEnumerator.cs", label="_enumerator.Reset()", span="78-78"];
m17_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="RefreshEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", span="74-74"];
m17_13 [cluster="System.Func<TResult>.Invoke()", file="RefreshEnumerator.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m17_25 [file="RefreshEnumerator.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", span=""];
m18_31 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.DisposeCallsUnderlyingDispose()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.DisposeCallsUnderlyingDispose()", span="55-55"];
m18_32 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.DisposeCallsUnderlyingDispose()", color=green, community=0, file="RefreshEnumeratorTests.cs", label="var fakeEnumerator = new Mock<IEnumerator<int?>>()", prediction=10, span="57-57"];
m18_33 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.DisposeCallsUnderlyingDispose()", color=green, community=0, file="RefreshEnumeratorTests.cs", label="fakeEnumerator.Setup(e => e.MoveNext()).Returns(true)", prediction=11, span="58-58"];
m18_34 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.DisposeCallsUnderlyingDispose()", color=green, community=0, file="RefreshEnumeratorTests.cs", label="fakeEnumerator.Setup(e => e.Dispose()).Verifiable()", prediction=10, span="59-59"];
m18_35 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.DisposeCallsUnderlyingDispose()", color=green, community=0, file="RefreshEnumeratorTests.cs", label="var refresher = new RefreshEnumerator<int?>(() => fakeEnumerator.Object)", prediction=13, span="60-60"];
m18_38 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.DisposeCallsUnderlyingDispose()", color=green, community=1, file="RefreshEnumeratorTests.cs", label="fakeEnumerator.Verify(enumerator => enumerator.Dispose(), Times.Once)", prediction=10, span="64-64"];
m18_36 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.DisposeCallsUnderlyingDispose()", color=green, community=0, file="RefreshEnumeratorTests.cs", label="refresher.MoveNext()", prediction=15, span="61-61"];
m18_37 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.DisposeCallsUnderlyingDispose()", color=green, community=0, file="RefreshEnumeratorTests.cs", label="refresher.Dispose()", prediction=13, span="62-62"];
m18_39 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.DisposeCallsUnderlyingDispose()", file="RefreshEnumeratorTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.DisposeCallsUnderlyingDispose()", span="55-55"];
m18_15 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.MoveNextReturnsTrueWhenUnderlyingEnumeratorReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.MoveNextReturnsTrueWhenUnderlyingEnumeratorReturnsFalse()", span="40-40"];
m18_16 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.MoveNextReturnsTrueWhenUnderlyingEnumeratorReturnsFalse()", file="RefreshEnumeratorTests.cs", label="var refresher = new RefreshEnumerator<int?>(() => new List<int?>().GetEnumerator())", span="42-42"];
m18_17 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.MoveNextReturnsTrueWhenUnderlyingEnumeratorReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.IsTrue(refresher.MoveNext())", span="43-43"];
m18_18 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.MoveNextReturnsTrueWhenUnderlyingEnumeratorReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.MoveNextReturnsTrueWhenUnderlyingEnumeratorReturnsFalse()", span="40-40"];
m18_60 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.ResetCallsUnderlyingReset()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.ResetCallsUnderlyingReset()", span="68-68"];
m18_61 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.ResetCallsUnderlyingReset()", file="RefreshEnumeratorTests.cs", label="var fakeEnumerator = new Mock<IEnumerator<int?>>()", span="70-70"];
m18_62 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.ResetCallsUnderlyingReset()", file="RefreshEnumeratorTests.cs", label="fakeEnumerator.Setup(e => e.MoveNext()).Returns(true)", span="71-71"];
m18_63 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.ResetCallsUnderlyingReset()", file="RefreshEnumeratorTests.cs", label="fakeEnumerator.Setup(e => e.Reset()).Verifiable()", span="72-72"];
m18_64 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.ResetCallsUnderlyingReset()", file="RefreshEnumeratorTests.cs", label="var refresher = new RefreshEnumerator<int?>(() => fakeEnumerator.Object)", span="73-73"];
m18_67 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.ResetCallsUnderlyingReset()", file="RefreshEnumeratorTests.cs", label="fakeEnumerator.Verify(enumerator => enumerator.Reset(), Times.Once)", span="77-77"];
m18_65 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.ResetCallsUnderlyingReset()", file="RefreshEnumeratorTests.cs", label="refresher.MoveNext()", span="74-74"];
m18_66 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.ResetCallsUnderlyingReset()", file="RefreshEnumeratorTests.cs", label="refresher.Reset()", span="75-75"];
m18_68 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.ResetCallsUnderlyingReset()", file="RefreshEnumeratorTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.ResetCallsUnderlyingReset()", span="68-68"];
m18_43 [cluster="Unk.Verifiable", file="RefreshEnumeratorTests.cs", label="Entry Unk.Verifiable", span=""];
m18_83 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", span="81-81"];
m18_84 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="var refreshCount = 0", span="83-83"];
m18_85 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="var list = new List<int?> {1, 2}", span="84-84"];
m18_86 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="var refresher = new RefreshEnumerator<int?>(() =>\r\n            {\r\n                refreshCount++;\r\n                return list.GetEnumerator();\r\n            })", span="85-89"];
m18_87 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.IsTrue(refresher.MoveNext())", span="91-91"];
m18_89 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.AreEqual(1, refresher.Current)", span="93-93"];
m18_90 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.IsTrue(refresher.MoveNext())", span="95-95"];
m18_92 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.AreEqual(2, refresher.Current)", span="97-97"];
m18_93 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.IsTrue(refresher.MoveNext())", span="99-99"];
m18_95 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.AreEqual(default(int?), refresher.Current)", span="101-101"];
m18_96 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.IsTrue(refresher.MoveNext())", span="103-103"];
m18_98 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.AreEqual(1, refresher.Current)", span="105-105"];
m18_99 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.IsTrue(refresher.MoveNext())", span="107-107"];
m18_101 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.AreEqual(2, refresher.Current)", span="109-109"];
m18_88 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.AreEqual(1, refreshCount)", span="92-92"];
m18_91 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.AreEqual(1, refreshCount)", span="96-96"];
m18_94 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.AreEqual(1, refreshCount)", span="100-100"];
m18_97 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.AreEqual(2, refreshCount)", span="104-104"];
m18_100 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.AreEqual(2, refreshCount)", span="108-108"];
m18_102 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesAfterMoveNextReturnsFalse()", span="81-81"];
m18_45 [cluster="Unk.Verify", file="RefreshEnumeratorTests.cs", label="Entry Unk.Verify", span=""];
m18_13 [cluster="System.Collections.Generic.List<T>.List()", file="RefreshEnumeratorTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m18_103 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="85-89"];
m18_9 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="29-33"];
m18_10 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="refreshed = true", span="31-31"];
m18_11 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="return new List<int?>().GetEnumerator();", span="32-32"];
m18_12 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="29-33"];
m18_19 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="42-42"];
m18_20 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="new List<int?>().GetEnumerator()", span="42-42"];
m18_21 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="42-42"];
m18_28 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="49-49"];
m18_29 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="new List<int?>().GetEnumerator()", span="49-49"];
m18_30 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="49-49"];
m18_55 [cluster="lambda expression", color=green, community=0, file="RefreshEnumeratorTests.cs", label="fakeEnumerator.Object", prediction=10, span="60-60"];
m18_46 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="58-58"];
m18_50 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="59-59"];
m18_57 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="64-64"];
m18_47 [cluster="lambda expression", color=green, community=0, file="RefreshEnumeratorTests.cs", label="e.MoveNext()", prediction=18, span="58-58"];
m18_48 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="58-58"];
m18_51 [cluster="lambda expression", color=green, community=0, file="RefreshEnumeratorTests.cs", label="e.Dispose()", prediction=19, span="59-59"];
m18_52 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="59-59"];
m18_54 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="60-60"];
m18_56 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="60-60"];
m18_58 [cluster="lambda expression", color=green, community=1, file="RefreshEnumeratorTests.cs", label="enumerator.Dispose()", prediction=20, span="64-64"];
m18_59 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="64-64"];
m18_78 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="fakeEnumerator.Object", span="73-73"];
m18_70 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="71-71"];
m18_73 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="72-72"];
m18_80 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="77-77"];
m18_71 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="e.MoveNext()", span="71-71"];
m18_72 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="71-71"];
m18_74 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="e.Reset()", span="72-72"];
m18_75 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="72-72"];
m18_77 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Entry lambda expression", span="73-73"];
m18_79 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="73-73"];
m18_81 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="enumerator.Reset()", span="77-77"];
m18_82 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="77-77"];
m18_105 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="return list.GetEnumerator();", span="88-88"];
m18_104 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="refreshCount++", span="87-87"];
m18_106 [cluster="lambda expression", file="RefreshEnumeratorTests.cs", label="Exit lambda expression", span="85-89"];
m18_76 [cluster="Unk.Reset", file="RefreshEnumeratorTests.cs", label="Entry Unk.Reset", span=""];
m18_41 [cluster="Unk.Setup", file="RefreshEnumeratorTests.cs", label="Entry Unk.Setup", span=""];
m18_22 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.CurrentIsDefault_T_WhenUnderlyingEnumeratorReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.CurrentIsDefault_T_WhenUnderlyingEnumeratorReturnsFalse()", span="47-47"];
m18_23 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.CurrentIsDefault_T_WhenUnderlyingEnumeratorReturnsFalse()", file="RefreshEnumeratorTests.cs", label="var refresher = new RefreshEnumerator<int?>(() => new List<int?>().GetEnumerator())", span="49-49"];
m18_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.CurrentIsDefault_T_WhenUnderlyingEnumeratorReturnsFalse()", file="RefreshEnumeratorTests.cs", label="refresher.MoveNext()", span="50-50"];
m18_25 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.CurrentIsDefault_T_WhenUnderlyingEnumeratorReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Assert.AreEqual(default(int?), refresher.Current)", span="51-51"];
m18_26 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.CurrentIsDefault_T_WhenUnderlyingEnumeratorReturnsFalse()", file="RefreshEnumeratorTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.CurrentIsDefault_T_WhenUnderlyingEnumeratorReturnsFalse()", span="47-47"];
m18_14 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="RefreshEnumeratorTests.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m18_8 [cluster="Unk.IsTrue", file="RefreshEnumeratorTests.cs", label="Entry Unk.IsTrue", span=""];
m18_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesEnumeratorOnFirstMoveNext()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesEnumeratorOnFirstMoveNext()", span="26-26"];
m18_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesEnumeratorOnFirstMoveNext()", file="RefreshEnumeratorTests.cs", label="var refreshed = false", span="28-28"];
m18_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesEnumeratorOnFirstMoveNext()", file="RefreshEnumeratorTests.cs", label="var refresher = new RefreshEnumerator<int?>(() =>\r\n            {\r\n                refreshed = true;\r\n                return new List<int?>().GetEnumerator();\r\n            })", span="29-33"];
m18_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesEnumeratorOnFirstMoveNext()", file="RefreshEnumeratorTests.cs", label="refresher.MoveNext()", span="35-35"];
m18_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesEnumeratorOnFirstMoveNext()", file="RefreshEnumeratorTests.cs", label="Assert.IsTrue(refreshed)", span="36-36"];
m18_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesEnumeratorOnFirstMoveNext()", file="RefreshEnumeratorTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.RefreshEnumeratorTests.RefreshesEnumeratorOnFirstMoveNext()", span="26-26"];
m18_42 [cluster="Unk.Returns", file="RefreshEnumeratorTests.cs", label="Entry Unk.Returns", span=""];
m18_27 [cluster="Unk.AreEqual", file="RefreshEnumeratorTests.cs", label="Entry Unk.AreEqual", span=""];
m18_53 [cluster="Unk.Dispose", file="RefreshEnumeratorTests.cs", label="Entry Unk.Dispose", span=""];
m18_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", span="74-74"];
m18_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", span="49-49"];
m18_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", span="37-37"];
m18_40 [cluster="Mock<IEnumerator<int?>>.cstr", file="RefreshEnumeratorTests.cs", label="Entry Mock<IEnumerator<int?>>.cstr", span=""];
m18_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", span="109-109"];
m18_49 [cluster="Unk.MoveNext", file="RefreshEnumeratorTests.cs", label="Entry Unk.MoveNext", span=""];
m18_107 [file="RefreshEnumeratorTests.cs", label=fakeEnumerator, span=""];
m18_108 [file="RefreshEnumeratorTests.cs", label=fakeEnumerator, span=""];
m18_109 [file="RefreshEnumeratorTests.cs", label=refreshCount, span=""];
m18_110 [file="RefreshEnumeratorTests.cs", label=list, span=""];
m19_2 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", span="49-49"];
m19_3 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", file="RegressionTests.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", span="49-49"];
m19_0 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="RegressionTests.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="35-35"];
m19_1 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="RegressionTests.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="35-35"];
m20_14 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Time.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m20_4 [cluster="System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime, System.TimeZoneInfo)", file="Time.cs", label="Entry System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime, System.TimeZoneInfo)", span="0-0"];
m20_30 [cluster="System.Math.Max(long, long)", file="Time.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m20_73 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="279-279"];
m20_74 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="var day = from.Date", span="281-281"];
m20_77 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="yield return day;", span="285-285"];
m20_75 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="day.Date <= thru.Date", span="281-281"];
m20_76 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="exchange.IsDateOpen(day)", span="283-283"];
m20_78 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="day = day.AddDays(1)", span="281-281"];
m20_79 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="279-279"];
m20_95 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", file="Time.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", span="141-141"];
m20_32 [cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="Entry QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", span="181-181"];
m20_33 [cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="return TimeSpan.FromTicks(Math.Min(one.Ticks, two.Ticks));", span="183-183"];
m20_34 [cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="Exit QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", span="181-181"];
m20_0 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="Time.cs", label="Entry QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", span="89-89"];
m20_1 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="Time.cs", label="utcDateTime = TimeZoneInfo.ConvertTimeToUtc(dateTime, timeZone)", span="91-91"];
m20_2 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="Time.cs", label="this.timeZone = timeZone", span="92-92"];
m20_3 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="Time.cs", label="Exit QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", span="89-89"];
m20_27 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="Entry QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="174-174"];
m20_28 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="return TimeSpan.FromTicks(Math.Max(one.Ticks, two.Ticks));", span="176-176"];
m20_29 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="Exit QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="174-174"];
m20_52 [cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="Time.cs", label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m20_53 [cluster="string.Substring(int, int)", file="Time.cs", label="Entry string.Substring(int, int)", span="0-0"];
m20_5 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m20_6 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="DateTime time", span="129-129"];
m20_7 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="time = EpochTime.AddSeconds(unixTimeStamp)", span="133-133"];
m20_9 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="Log.Error(err, ''UnixTimeStamp: '' + unixTimeStamp)", span="137-137"];
m20_8 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label=Exception, span="135-135"];
m20_11 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="return time;", span="140-140"];
m20_10 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="time = DateTime.Now", span="138-138"];
m20_12 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="Exit QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m20_36 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="Entry QuantConnect.Time.ParseDate(string)", span="191-191"];
m20_37 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime date", span="196-196"];
m20_38 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.SixCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="197-197"];
m20_40 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.EightCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="201-201"];
m20_42 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime.TryParseExact(dateToParse.Substring(0, 19), DateFormat.JsonFormat, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="205-205"];
m20_44 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.US, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="209-209"];
m20_46 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime.TryParse(dateToParse, out date)", span="213-213"];
m20_39 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return date;", span="199-199"];
m20_41 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return date;", span="203-203"];
m20_43 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return date;", span="207-207"];
m20_45 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return date;", span="211-211"];
m20_47 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return date;", span="215-215"];
m20_48 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label=Exception, span="218-218"];
m20_50 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return DateTime.Now;", span="223-223"];
m20_49 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="Log.Error(err)", span="220-220"];
m20_51 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="Exit QuantConnect.Time.ParseDate(string)", span="191-191"];
m20_24 [cluster="QuantConnect.Time.TimeStamp()", file="Time.cs", label="Entry QuantConnect.Time.TimeStamp()", span="166-166"];
m20_25 [cluster="QuantConnect.Time.TimeStamp()", file="Time.cs", label="return DateTimeToUnixTimeStamp(DateTime.UtcNow);", span="168-168"];
m20_26 [cluster="QuantConnect.Time.TimeStamp()", file="Time.cs", label="Exit QuantConnect.Time.TimeStamp()", span="166-166"];
m20_62 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="247-247"];
m20_63 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="var day = from.Date", span="249-249"];
m20_66 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="yield return day;", span="253-253"];
m20_64 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="day.Date <= thru.Date", span="249-249"];
m20_65 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="TradableDate(securities, day)", span="251-251"];
m20_67 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="day = day.AddDays(1)", span="249-249"];
m20_68 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="247-247"];
m20_23 [cluster="System.DateTime.ToString(string)", file="Time.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m20_104 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="360-360"];
m20_105 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="var count = 0", span="362-362"];
m20_106 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Log.Trace(''Time.TradeableDates(): Security Count: '' + securities.Count)", span="363-363"];
m20_109 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="count++", span="370-370"];
m20_112 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="return count;", span="378-378"];
m20_111 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Log.Error(err)", span="376-376"];
m20_113 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="360-360"];
m20_128 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="Time.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m20_103 [cluster="QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", file="Time.cs", label="Entry QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", span="115-115"];
m20_22 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="Time.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m20_94 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="Time.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m20_31 [cluster="System.TimeSpan.FromTicks(long)", file="Time.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m20_13 [cluster="System.DateTime.AddSeconds(double)", file="Time.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m20_80 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsDateOpen(System.DateTime)", file="Time.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsDateOpen(System.DateTime)", span="177-177"];
m20_35 [cluster="System.Math.Min(long, long)", file="Time.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m20_55 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="233-233"];
m20_56 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="var day = from.Date", span="235-235"];
m20_58 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="yield return day;", span="236-236"];
m20_57 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="day.Date <= thru.Date", span="235-235"];
m20_59 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="day = day.AddDays(1)", span="235-235"];
m20_60 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="233-233"];
m20_54 [cluster="System.DateTime.TryParse(string, out System.DateTime)", file="Time.cs", label="Entry System.DateTime.TryParse(string, out System.DateTime)", span="0-0"];
m20_15 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="148-148"];
m20_16 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="double timestamp = 0", span="150-150"];
m20_17 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="timestamp = (time - new DateTime(1970, 1, 1, 0, 0, 0, 0)).TotalSeconds", span="153-153"];
m20_19 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="Log.Error(err, time.ToString(''o''))", span="157-157"];
m20_20 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="return timestamp;", span="159-159"];
m20_21 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="148-148"];
m20_127 [cluster="System.ArgumentException.ArgumentException(string, string)", file="Time.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m20_69 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", span="336-336"];
m20_96 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label=securities, span="340-340"];
m20_97 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="security.Exchange.IsOpenDuringBar(day.Date, day.Date.AddDays(1), security.IsExtendedMarketHours)", span="342-342"];
m20_99 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label=Exception, span="345-345"];
m20_101 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="return false;", span="349-349"];
m20_98 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="return true;", span="342-342"];
m20_100 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="Log.Error(err)", span="347-347"];
m20_102 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", span="336-336"];
m20_70 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="266-266"];
m20_71 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="Time.cs", label="return EachTradeableDay(security.Exchange.Hours, from, thru);", span="268-268"];
m20_72 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="266-266"];
m20_114 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Time.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m20_115 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="390-390"];
m20_116 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="barSize <= TimeSpan.Zero", span="392-392"];
m20_118 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="var current = end.RoundDown(barSize)", span="397-397"];
m20_120 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="i < barCount", span="398-398"];
m20_122 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="current = current - barSize", span="401-401"];
m20_123 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="exchange.IsOpen(current, previous, extendedMarketHours)", span="402-402"];
m20_117 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="throw new ArgumentException(''barSize must be greater than TimeSpan.Zero'', ''barSize'');", span="394-394"];
m20_119 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="int i = 0", span="398-398"];
m20_121 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="var previous = current", span="400-400"];
m20_125 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="return current;", span="407-407"];
m20_124 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="i++", span="404-404"];
m20_126 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="Exit QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="390-390"];
m20_61 [cluster="System.DateTime.AddDays(double)", file="Time.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m20_81 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="Entry QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", span="303-303"];
m20_82 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="var currentExchangeTime = from", span="305-305"];
m20_91 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="yield return currentInTimeZone.Date;", span="323-323"];
m20_83 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="thru = thru.Date.AddDays(1)", span="306-306"];
m20_85 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="var currentInTimeZone = currentExchangeTime.ConvertTo(exchange.TimeZone, timeZone)", span="310-310"];
m20_87 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone) > thru", span="314-314"];
m20_88 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="currentInTimeZoneEod = thru.ConvertTo(exchange.TimeZone, timeZone)", span="316-316"];
m20_89 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="var currentExchangeTimeEod = currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone)", span="320-320"];
m20_90 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="exchange.IsOpen(currentExchangeTime, currentExchangeTimeEod, includeExtendedMarketHours)", span="321-321"];
m20_92 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="currentExchangeTime = currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone)", span="326-326"];
m20_84 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="currentExchangeTime < thru", span="307-307"];
m20_86 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="var currentInTimeZoneEod = currentInTimeZone.Date.AddDays(1)", span="311-311"];
m20_93 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="Exit QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", span="303-303"];
m20_129 [file="Time.cs", label="out QuantConnect.Time.DateTimeWithZone", span=""];
n52 -> n43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
n52 -> n49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
n9 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
n39 -> n49  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
n40 -> n43  [color=darkseagreen4, key=1, label=string, style=dashed];
n41 -> n43  [color=darkseagreen4, key=1, label=handler, style=dashed];
n47 -> n49  [color=darkseagreen4, key=1, label=handler, style=dashed];
m4_21 -> m4_23  [color=green, key=1, label=underlyingCurrent, style=dashed];
m4_6 -> m4_9  [color=darkseagreen4, key=1, label=underlyingCurrent, style=dashed];
m4_6 -> m4_10  [color=darkseagreen4, key=1, label=underlyingCurrent, style=dashed];
m4_8 -> m4_22  [color=darkseagreen4, key=1, label=localFrontier, style=dashed];
m4_8 -> m4_10  [color=darkseagreen4, key=1, label=localFrontier, style=dashed];
m4_44 -> m4_23  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m4_44 -> m4_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m4_44 -> m4_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m4_44 -> m4_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m4_44 -> m4_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m6_82 -> m6_103  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_82 -> m6_106  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_82 -> m6_111  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_83 -> m6_85  [color=darkseagreen4, key=1, label=req, style=dashed];
m6_106 -> m6_108  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_106 -> m6_110  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_106 -> m6_115  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m6_85 -> m6_87  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_88 -> m6_92  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_88 -> m6_93  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_88 -> m6_94  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_88 -> m6_99  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_89 -> m6_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m6_89 -> m6_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m6_91 -> m6_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m6_91 -> m6_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m6_93 -> m6_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m6_93 -> m6_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m6_95 -> m6_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m6_95 -> m6_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m6_107 -> m6_123  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_107 -> m6_130  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_108 -> m6_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_108 -> m6_110  [color=darkseagreen4, key=1, label=cached, style=dashed];
m6_130 -> m6_144  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_131 -> m6_133  [color=darkseagreen4, key=1, label=req, style=dashed];
m6_133 -> m6_135  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_134 -> m6_20  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.FxcmVolumeDownloader", style=dashed];
m6_135 -> m6_137  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_135 -> m6_138  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_135 -> m6_54  [color=darkseagreen4, key=1, label=duplicate, style=dashed];
m6_136 -> m6_78  [color=darkseagreen4, key=1, label=obs, style=dashed];
m6_136 -> m6_82  [color=darkseagreen4, key=1, label=obs, style=dashed];
m6_137 -> m6_86  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_138 -> m6_86  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_154 -> m6_161  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_154 -> m6_164  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_154 -> m6_166  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_154 -> m6_167  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_158 -> m6_160  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_158 -> m6_161  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_158 -> m6_162  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_158 -> m6_164  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_158 -> m6_166  [color=darkseagreen4, key=1, label=item, style=dashed];
m6_70 -> m6_92  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_70 -> m6_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3 -> m6_11  [color=green, key=1, label="QuantConnect.Resolution", style=dashed];
m6_3 -> m6_8  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_3 -> m6_19  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_3 -> m6_20  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m6_3 -> m6_21  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_3 -> m6_24  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_12 -> m6_17  [color=darkseagreen4, key=1, label=requestDayInterval, style=dashed];
m6_13 -> m6_15  [color=darkseagreen4, key=1, label=counter, style=dashed];
m6_13 -> m6_21  [color=darkseagreen4, key=1, label=counter, style=dashed];
m6_4 -> m6_23  [color=green, key=1, label=data, style=dashed];
m6_4 -> m6_20  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_4 -> m6_22  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_4 -> m6_29  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_7 -> m6_17  [color=darkseagreen4, key=1, label=intermediateStartDate, style=dashed];
m6_7 -> m6_20  [color=darkseagreen4, key=1, label=intermediateStartDate, style=dashed];
m6_8 -> m6_24  [color=darkseagreen4, key=1, label=intermediateEndDate, style=dashed];
m6_8 -> m6_20  [color=darkseagreen4, key=1, label=intermediateEndDate, style=dashed];
m6_6 -> m6_22  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_6 -> m6_29  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_18 -> m6_21  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m6_19 -> m6_24  [color=darkseagreen4, key=1, label=intermediateEndDate, style=dashed];
m6_10 -> m6_17  [color=darkseagreen4, key=1, label=requestDayInterval, style=dashed];
m6_17 -> m6_24  [color=darkseagreen4, key=1, label=intermediateEndDate, style=dashed];
m6_17 -> m6_20  [color=darkseagreen4, key=1, label=intermediateEndDate, style=dashed];
m6_15 -> m6_21  [color=darkseagreen4, key=1, label=counter, style=dashed];
m6_15 -> m6_15  [color=darkseagreen4, key=1, label=counter, style=dashed];
m6_5 -> m6_17  [color=darkseagreen4, key=1, label=requestDayInterval, style=dashed];
m6_25 -> m6_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_25 -> m6_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_25 -> m6_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_28 -> m6_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_27 -> m6_54  [color=darkseagreen4, key=1, label=duplicate, style=dashed];
m6_63 -> m6_67  [color=darkseagreen4, key=1, label=obsTime, style=dashed];
m6_65 -> m6_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_66 -> m6_68  [color=darkseagreen4, key=1, label=req, style=dashed];
m6_68 -> m6_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_58 -> m6_68  [color=darkseagreen4, key=1, label=requestedData, style=dashed];
m6_59 -> m6_67  [color=darkseagreen4, key=1, label=lines, style=dashed];
m6_60 -> m6_67  [color=darkseagreen4, key=1, label=idx, style=dashed];
m6_61 -> m6_78  [color=darkseagreen4, key=1, label=obs, style=dashed];
m6_61 -> m6_82  [color=darkseagreen4, key=1, label=obs, style=dashed];
m6_0 -> m6_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_0 -> m6_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_0 -> m6_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_0 -> m6_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_0 -> m6_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_0 -> m6_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_0 -> m6_26  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_0 -> m6_29  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_0 -> m6_32  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_1 -> m6_10  [color=darkseagreen4, key=1, label=req, style=dashed];
m6_1 -> m6_11  [color=darkseagreen4, key=1, label=req, style=dashed];
m6_2 -> m6_10  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_34 -> m6_57  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_34 -> m6_67  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_34 -> m6_68  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_34 -> m6_86  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_181 -> m6_183  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_182 -> m6_189  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m6_188 -> m6_189  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m6_175 -> m6_177  [color=darkseagreen4, key=1, label=copy, style=dashed];
m6_191 -> m6_8  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_19  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_20  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_67  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_68  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_78  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_84  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_85  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_99  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_108  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_110  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_132  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_133  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_156  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_174  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_176  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m6_191 -> m6_185  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m7_45 -> m7_8  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m7_45 -> m7_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m7_45 -> m7_42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_35 -> m8_40  [color=green, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m8_35 -> m8_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m8_35 -> m8_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m9_10 -> m9_12  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m9_13 -> m9_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_21 -> m9_17  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAXBrokerageModel", style=dashed];
m10_7 -> m10_9  [color=darkseagreen4, key=1, label=lines, style=dashed];
m10_8 -> m10_29  [color=darkseagreen4, key=1, label=currentLine, style=dashed];
m10_10 -> m10_26  [color=darkseagreen4, key=1, label=columns, style=dashed];
m10_29 -> m10_29  [color=darkseagreen4, key=1, label=currentLine, style=dashed];
m10_16 -> m10_18  [color=darkseagreen4, key=1, label=ohlc, style=dashed];
m10_16 -> m10_20  [color=darkseagreen4, key=1, label=ohlc, style=dashed];
m10_16 -> m10_22  [color=darkseagreen4, key=1, label=ohlc, style=dashed];
m10_16 -> m10_24  [color=darkseagreen4, key=1, label=ohlc, style=dashed];
m10_16 -> m10_26  [color=darkseagreen4, key=1, label=ohlc, style=dashed];
m10_16 -> m10_28  [color=darkseagreen4, key=1, label=ohlc, style=dashed];
m10_15 -> m10_28  [color=darkseagreen4, key=1, label=time, style=dashed];
m10_17 -> m10_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_19 -> m10_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_21 -> m10_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_23 -> m10_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_25 -> m10_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_97 -> m10_103  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_88 -> m10_95  [color=darkseagreen4, key=1, label=time, style=dashed];
m10_75 -> m10_77  [color=darkseagreen4, key=1, label=lines, style=dashed];
m10_75 -> m10_81  [color=darkseagreen4, key=1, label=lines, style=dashed];
m10_76 -> m10_81  [color=darkseagreen4, key=1, label=currentLine, style=dashed];
m10_76 -> m10_94  [color=darkseagreen4, key=1, label=currentLine, style=dashed];
m10_82 -> m10_84  [color=darkseagreen4, key=1, label=str, style=dashed];
m10_94 -> m10_94  [color=darkseagreen4, key=1, label=currentLine, style=dashed];
m10_78 -> m10_86  [color=darkseagreen4, key=1, label=firstPass, style=dashed];
m10_89 -> m10_95  [color=darkseagreen4, key=1, label=open, style=dashed];
m10_90 -> m10_95  [color=darkseagreen4, key=1, label=high, style=dashed];
m10_91 -> m10_95  [color=darkseagreen4, key=1, label=low, style=dashed];
m10_92 -> m10_95  [color=darkseagreen4, key=1, label=close, style=dashed];
m10_93 -> m10_95  [color=darkseagreen4, key=1, label=volume, style=dashed];
m10_99 -> m10_107  [color=darkseagreen4, key=1, label=long, style=dashed];
m10_109 -> m10_111  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_109 -> m10_112  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_109 -> m10_114  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m10_109 -> m10_117  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_109 -> m10_119  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_109 -> m10_120  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m10_124 -> m10_117  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader", style=dashed];
m10_124 -> m10_119  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.GoogleDownloader.GoogleDataDownloader", style=dashed];
m14_98 -> m14_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m14_130 -> m14_132  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>", style=dashed];
m14_130 -> m14_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_28 -> m14_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m14_28 -> m14_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m14_28 -> m14_115  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m14_28 -> m14_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m14_28 -> m14_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m14_28 -> m14_70  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m14_36 -> m14_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_36 -> m14_40  [color=darkseagreen4, key=1, label=config, style=dashed];
m14_44 -> m14_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_44 -> m14_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_44 -> m14_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_44 -> m14_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_44 -> m14_46  [color=darkseagreen4, key=1, label=markets, style=dashed];
m14_44 -> m14_47  [color=darkseagreen4, key=1, label=markets, style=dashed];
m14_44 -> m14_48  [color=darkseagreen4, key=1, label=markets, style=dashed];
m14_44 -> m14_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m14_44 -> m14_115  [color=darkseagreen4, key=1, label=markets, style=dashed];
m14_44 -> m14_118  [color=darkseagreen4, key=1, label=markets, style=dashed];
m14_49 -> m14_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_49 -> m14_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_49 -> m14_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_49 -> m14_52  [color=darkseagreen4, key=1, label=potentials, style=dashed];
m14_50 -> m14_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_56 -> m14_58  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m14_56 -> m14_59  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m14_62 -> m14_70  [color=darkseagreen4, key=1, label=config, style=dashed];
m14_34 -> m14_37  [color=darkseagreen4, key=1, label=normal, style=dashed];
m14_34 -> m14_53  [color=darkseagreen4, key=1, label=normal, style=dashed];
m14_35 -> m14_40  [color=darkseagreen4, key=1, label=invert, style=dashed];
m14_35 -> m14_53  [color=darkseagreen4, key=1, label=invert, style=dashed];
m14_52 -> m14_59  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m14_52 -> m14_71  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m14_55 -> m14_65  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m14_55 -> m14_67  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m14_66 -> m14_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m14_68 -> m14_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m14_69 -> m14_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m14_138 -> m14_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m14_138 -> m14_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m14_138 -> m14_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m14_138 -> m14_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m14_138 -> m14_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m14_138 -> m14_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m14_138 -> m14_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m14_138 -> m14_115  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m14_138 -> m14_118  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m14_138 -> m14_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m14_138 -> m14_73  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m14_139 -> m14_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m14_139 -> m14_115  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m14_139 -> m14_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m14_140 -> m14_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m14_140 -> m14_115  [color=darkseagreen4, key=1, label=markets, style=dashed];
m14_140 -> m14_118  [color=darkseagreen4, key=1, label=markets, style=dashed];
m15_28 -> m15_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator", style=dashed];
m15_28 -> m15_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator", style=dashed];
m15_28 -> m15_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator", style=dashed];
m15_28 -> m15_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator", style=dashed];
m17_25 -> m17_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m17_25 -> m17_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m17_25 -> m17_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m17_25 -> m17_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m17_25 -> m17_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m18_32 -> m18_34  [color=green, key=1, label=fakeEnumerator, style=dashed];
m18_32 -> m18_55  [color=green, key=1, label=fakeEnumerator, style=dashed];
m18_32 -> m18_38  [color=green, key=1, label=fakeEnumerator, style=dashed];
m18_33 -> m18_46  [color=green, key=1, label="lambda expression", style=dashed];
m18_34 -> m18_50  [color=green, key=1, label="lambda expression", style=dashed];
m18_35 -> m18_37  [color=green, key=1, label=refresher, style=dashed];
m18_38 -> m18_57  [color=green, key=1, label="lambda expression", style=dashed];
m18_61 -> m18_63  [color=darkseagreen4, key=1, label=fakeEnumerator, style=dashed];
m18_61 -> m18_78  [color=darkseagreen4, key=1, label=fakeEnumerator, style=dashed];
m18_61 -> m18_67  [color=darkseagreen4, key=1, label=fakeEnumerator, style=dashed];
m18_61 -> m18_55  [color=green, key=1, label=fakeEnumerator, style=dashed];
m18_62 -> m18_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_63 -> m18_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_64 -> m18_66  [color=darkseagreen4, key=1, label=refresher, style=dashed];
m18_67 -> m18_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_85 -> m18_105  [color=darkseagreen4, key=1, label=list, style=dashed];
m18_86 -> m18_104  [color=darkseagreen4, key=1, label=refreshCount, style=dashed];
m18_86 -> m18_89  [color=darkseagreen4, key=1, label=refresher, style=dashed];
m18_86 -> m18_90  [color=darkseagreen4, key=1, label=refresher, style=dashed];
m18_86 -> m18_92  [color=darkseagreen4, key=1, label=refresher, style=dashed];
m18_86 -> m18_93  [color=darkseagreen4, key=1, label=refresher, style=dashed];
m18_86 -> m18_95  [color=darkseagreen4, key=1, label=refresher, style=dashed];
m18_86 -> m18_96  [color=darkseagreen4, key=1, label=refresher, style=dashed];
m18_86 -> m18_98  [color=darkseagreen4, key=1, label=refresher, style=dashed];
m18_86 -> m18_99  [color=darkseagreen4, key=1, label=refresher, style=dashed];
m18_86 -> m18_101  [color=darkseagreen4, key=1, label=refresher, style=dashed];
m18_10 -> m18_4  [color=darkseagreen4, key=1, label=refreshed, style=dashed];
m18_10 -> m18_12  [color=darkseagreen4, key=1, label=refreshed, style=dashed];
m18_104 -> m18_104  [color=darkseagreen4, key=1, label=refreshCount, style=dashed];
m18_104 -> m18_88  [color=darkseagreen4, key=1, label=refreshCount, style=dashed];
m18_104 -> m18_91  [color=darkseagreen4, key=1, label=refreshCount, style=dashed];
m18_104 -> m18_94  [color=darkseagreen4, key=1, label=refreshCount, style=dashed];
m18_104 -> m18_97  [color=darkseagreen4, key=1, label=refreshCount, style=dashed];
m18_104 -> m18_100  [color=darkseagreen4, key=1, label=refreshCount, style=dashed];
m18_104 -> m18_106  [color=darkseagreen4, key=1, label=refreshCount, style=dashed];
m18_23 -> m18_25  [color=darkseagreen4, key=1, label=refresher, style=dashed];
m18_107 -> m18_55  [color=green, key=1, label=fakeEnumerator, style=dashed];
m18_108 -> m18_78  [color=darkseagreen4, key=1, label=fakeEnumerator, style=dashed];
m18_108 -> m18_55  [color=green, key=1, label=fakeEnumerator, style=dashed];
m18_109 -> m18_104  [color=darkseagreen4, key=1, label=refreshCount, style=dashed];
m18_110 -> m18_105  [color=darkseagreen4, key=1, label=list, style=dashed];
m20_73 -> m20_75  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m20_73 -> m20_76  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m20_74 -> m20_76  [color=darkseagreen4, key=1, label=day, style=dashed];
m20_74 -> m20_77  [color=darkseagreen4, key=1, label=day, style=dashed];
m20_33 -> m20_33  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m20_1 -> m20_129  [color=darkseagreen4, key=1, label="QuantConnect.Time.DateTimeWithZone", style=dashed];
m20_2 -> m20_129  [color=darkseagreen4, key=1, label="QuantConnect.Time.DateTimeWithZone", style=dashed];
m20_28 -> m20_28  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m20_5 -> m20_9  [color=darkseagreen4, key=1, label=double, style=dashed];
m20_36 -> m20_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_36 -> m20_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_36 -> m20_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_36 -> m20_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_36 -> m20_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_62 -> m20_64  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m20_62 -> m20_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>", style=dashed];
m20_63 -> m20_65  [color=darkseagreen4, key=1, label=day, style=dashed];
m20_63 -> m20_66  [color=darkseagreen4, key=1, label=day, style=dashed];
m20_104 -> m20_106  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>", style=dashed];
m20_105 -> m20_109  [color=darkseagreen4, key=1, label=count, style=dashed];
m20_105 -> m20_112  [color=darkseagreen4, key=1, label=count, style=dashed];
m20_109 -> m20_109  [color=darkseagreen4, key=1, label=count, style=dashed];
m20_109 -> m20_112  [color=darkseagreen4, key=1, label=count, style=dashed];
m20_55 -> m20_57  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m20_56 -> m20_58  [color=darkseagreen4, key=1, label=day, style=dashed];
m20_15 -> m20_19  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m20_69 -> m20_97  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m20_115 -> m20_120  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_115 -> m20_123  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m20_118 -> m20_125  [color=darkseagreen4, key=1, label=current, style=dashed];
m20_122 -> m20_125  [color=darkseagreen4, key=1, label=current, style=dashed];
m20_119 -> m20_124  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_121 -> m20_123  [color=darkseagreen4, key=1, label=previous, style=dashed];
m20_124 -> m20_124  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_81 -> m20_87  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m20_81 -> m20_90  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m20_82 -> m20_84  [color=darkseagreen4, key=1, label=currentExchangeTime, style=dashed];
m20_82 -> m20_90  [color=darkseagreen4, key=1, label=currentExchangeTime, style=dashed];
m20_83 -> m20_87  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m20_85 -> m20_91  [color=darkseagreen4, key=1, label=currentInTimeZone, style=dashed];
}
