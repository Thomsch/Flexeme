digraph  {
m0_7 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m0_128 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="283-283"];
m0_129 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, date, resolution, tickType));", span="285-285"];
m0_130 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="283-283"];
m0_110 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="640-640"];
m0_295 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="SubscriptionDataReader.cs", label="return ToCsv(bar.Open, bar.High, bar.Low, bar.Close);", span="647-647"];
m0_294 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="SubscriptionDataReader.cs", label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="644-644"];
m0_293 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="SubscriptionDataReader.cs", label="bar == null", span="642-642"];
m0_296 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="640-640"];
m0_108 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.Scale(decimal)", span="600-600"];
m0_277 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="SubscriptionDataReader.cs", label="return (long)(value*10000);", span="602-602"];
m0_278 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.Scale(decimal)", span="600-600"];
m0_9 [cluster="QuantConnect.Securities.Forex.ForexTransactionModel.ForexTransactionModel()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.ForexTransactionModel()", span="51-51"];
m0_8 [cluster="QuantConnect.Securities.Forex.ForexExchange.ForexExchange()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Forex.ForexExchange.ForexExchange()", span="44-44"];
m0_70 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="167-167"];
m0_10 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="QuantConnect.Securities.Forex.Forex", span=""];
m0_23 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(longTime, Scale(bigBar.Open), Scale(bigBar.High), Scale(bigBar.Low), Scale(bigBar.Close), bigBar.Volume);", span="72-72"];
m0_37 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(longTime,\r\n                                ToNonScaledCsv(bigBar.Bid), bigBar.LastBidSize,\r\n                                ToNonScaledCsv(bigBar.Ask), bigBar.LastAskSize);", span="94-96"];
m0_63 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(longTime,\r\n                                    ToScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="150-152"];
m0_66 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(longTime, ToScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="157-157"];
m0_96 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(longTime,\r\n                                    ToNonScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="220-222"];
m0_99 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(longTime, ToNonScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="227-227"];
m0_15 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds, Scale(tick.LastPrice), tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'' : ''0'');", span="62-62"];
m0_19 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds, Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close), bar.Volume);", span="67-67"];
m0_43 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tick.LastPrice), tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'' : ''0'');", span="107-108"];
m0_45 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tick.BidPrice), tick.BidSize, Scale(tick.AskPrice), tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="112-113"];
m0_55 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tradeBar.Open), Scale(tradeBar.High), Scale(tradeBar.Low), Scale(tradeBar.Close), tradeBar.Volume);", span="134-135"];
m0_12 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label=resolution, span="58-58"];
m0_14 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var tick = (Tick) data", span="61-61"];
m0_18 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var bar = (TradeBar) data", span="66-66"];
m0_22 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var bigBar = (TradeBar) data", span="71-71"];
m0_26 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label=resolution, span="78-78"];
m0_28 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var tick = (Tick) data", span="81-81"];
m0_32 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var bar = (QuoteBar) data", span="86-86"];
m0_36 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var bigBar = (QuoteBar) data", span="93-93"];
m0_39 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label=resolution, span="101-101"];
m0_41 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var tick = (Tick)data", span="104-104"];
m0_50 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var quoteBar = data as QuoteBar", span="124-124"];
m0_53 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var tradeBar = data as TradeBar", span="131-131"];
m0_56 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var openInterest = data as OpenInterest", span="137-137"];
m0_61 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var bigQuoteBar = data as QuoteBar", span="147-147"];
m0_64 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var bigTradeBar = data as TradeBar", span="154-154"];
m0_67 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var bigOpenInterest = data as OpenInterest", span="159-159"];
m0_72 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label=resolution, span="171-171"];
m0_74 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var tick = (Tick)data", span="174-174"];
m0_83 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var quoteBar = data as QuoteBar", span="194-194"];
m0_86 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var tradeBar = data as TradeBar", span="201-201"];
m0_89 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var openInterest = data as OpenInterest", span="207-207"];
m0_94 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var bigQuoteBar = data as QuoteBar", span="217-217"];
m0_97 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var bigTradeBar = data as TradeBar", span="224-224"];
m0_100 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var bigOpenInterest = data as OpenInterest", span="229-229"];
m0_103 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="237-237"];
m0_104 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="throw new NotImplementedException(''LeanData.GenerateLine has not yet been implemented for security type: '' + securityType + '' at resolution: '' + resolution);", span="242-242"];
m0_29 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds, tick.BidPrice, tick.AskPrice);", span="82-82"];
m0_33 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds,\r\n                                ToNonScaledCsv(bar.Bid), bar.LastBidSize,\r\n                                ToNonScaledCsv(bar.Ask), bar.LastAskSize);", span="87-89"];
m0_47 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds, tick.Value);", span="117-117"];
m0_52 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds,\r\n                                    ToScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="127-129"];
m0_58 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds, openInterest.Value);", span="140-140"];
m0_69 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds, bigOpenInterest.Value);", span="162-162"];
m0_76 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds,\r\n                                             tick.LastPrice, tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'': ''0'');", span="177-178"];
m0_78 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds,\r\n                                             tick.BidPrice, tick.BidSize, tick.AskPrice, tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="182-183"];
m0_80 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds, tick.Value);", span="187-187"];
m0_85 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds,\r\n                                    ToNonScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="197-199"];
m0_88 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds,\r\n                                             tradeBar.Open, tradeBar.High, tradeBar.Low, tradeBar.Close, tradeBar.Volume);", span="204-205"];
m0_91 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds, openInterest.Value);", span="210-210"];
m0_102 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return ToCsv(milliseconds, bigOpenInterest.Value);", span="232-232"];
m0_11 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="SecurityType.Equity", span="57-57"];
m0_24 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="SecurityType.Forex", span="76-76"];
m0_38 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="SecurityType.Option", span="100-100"];
m0_71 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="SecurityType.Future", span="170-170"];
m0_62 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="bigQuoteBar != null", span="148-148"];
m0_65 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="bigTradeBar != null", span="155-155"];
m0_95 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="bigQuoteBar != null", span="218-218"];
m0_98 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="bigTradeBar != null", span="225-225"];
m0_42 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="tick.TickType == TickType.Trade", span="105-105"];
m0_44 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="tick.TickType == TickType.Quote", span="110-110"];
m0_54 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="tradeBar != null", span="132-132"];
m0_13 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Tick", span="60-60"];
m0_16 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Minute", span="64-64"];
m0_20 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Hour", span="69-69"];
m0_17 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Second", span="65-65"];
m0_21 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Daily", span="70-70"];
m0_25 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="SecurityType.Cfd", span="77-77"];
m0_27 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Tick", span="80-80"];
m0_30 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Second", span="84-84"];
m0_34 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Hour", span="91-91"];
m0_31 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Minute", span="85-85"];
m0_35 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Daily", span="92-92"];
m0_40 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Tick", span="103-103"];
m0_48 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Second", span="121-121"];
m0_59 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Hour", span="144-144"];
m0_46 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="tick.TickType == TickType.OpenInterest", span="115-115"];
m0_49 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Minute", span="122-122"];
m0_51 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="quoteBar != null", span="125-125"];
m0_57 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="openInterest != null", span="138-138"];
m0_60 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Daily", span="145-145"];
m0_68 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="bigOpenInterest != null", span="160-160"];
m0_73 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Tick", span="173-173"];
m0_81 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Second", span="191-191"];
m0_92 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Hour", span="214-214"];
m0_75 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="tick.TickType == TickType.Trade", span="175-175"];
m0_77 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="tick.TickType == TickType.Quote", span="180-180"];
m0_79 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="tick.TickType == TickType.OpenInterest", span="185-185"];
m0_82 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Minute", span="192-192"];
m0_84 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="quoteBar != null", span="195-195"];
m0_87 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="tradeBar != null", span="202-202"];
m0_90 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="openInterest != null", span="208-208"];
m0_93 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Resolution.Daily", span="215-215"];
m0_101 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="bigOpenInterest != null", span="230-230"];
m0_105 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m0_111 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="626-626"];
m0_291 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="SubscriptionDataReader.cs", label="return ToCsv(Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close));", span="633-633"];
m0_289 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="SubscriptionDataReader.cs", label="bar == null", span="628-628"];
m0_290 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="SubscriptionDataReader.cs", label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="630-630"];
m0_292 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="626-626"];
m0_339 [cluster="string.GetExtension()", file="SubscriptionDataReader.cs", label="Entry string.GetExtension()", span="404-404"];
m0_350 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m0_336 [cluster="System.Enum.GetNames(System.Type)", file="SubscriptionDataReader.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m0_114 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="251-251"];
m0_115 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="5: resolution == Resolution.Tick", span="253-253"];
m0_116 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="7: return typeof(Tick);", span="253-253"];
m0_117 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="7: tickType == TickType.OpenInterest", span="254-254"];
m0_118 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="7: return typeof(OpenInterest);", span="254-254"];
m0_119 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="5: tickType == TickType.Quote", span="255-255"];
m0_120 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="7: return typeof(QuoteBar);", span="255-255"];
m0_121 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="7: return typeof(TradeBar);", span="256-256"];
m0_122 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="251-251"];
m0_109 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.ToCsv(params object[])", span="608-608"];
m0_285 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SubscriptionDataReader.cs", label="return string.Join('','', args);", span="620-620"];
m0_280 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SubscriptionDataReader.cs", label="i < args.Length", span="611-611"];
m0_279 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SubscriptionDataReader.cs", label="var i = 0", span="611-611"];
m0_281 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SubscriptionDataReader.cs", label="var value = args[i]", span="613-613"];
m0_283 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SubscriptionDataReader.cs", label="args[i] = ((decimal) value).Normalize().ToString(CultureInfo.InvariantCulture)", span="616-616"];
m0_284 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SubscriptionDataReader.cs", label="i++", span="611-611"];
m0_282 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SubscriptionDataReader.cs", label="value is decimal", span="614-614"];
m0_286 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.ToCsv(params object[])", span="608-608"];
m0_269 [cluster="string.Split(params char[])", file="SubscriptionDataReader.cs", label="Entry string.Split(params char[])", span="0-0"];
m0_113 [cluster="System.NotImplementedException.NotImplementedException(string)", file="SubscriptionDataReader.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m0_287 [cluster="decimal.Normalize()", file="SubscriptionDataReader.cs", label="Entry decimal.Normalize()", span="233-233"];
m0_166 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="466-466"];
m0_209 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="var tickTypeString = tickType.ToLower()", span="468-468"];
m0_222 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Format(''{0}_{1}_{2}.zip'', \r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickTypeString,\r\n                            symbol.ID.OptionStyle.ToLower()\r\n                            );", span="493-497"];
m0_223 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Format(''{0}_{1}_{2}.zip'', \r\n                        formattedDate, \r\n                        tickTypeString,\r\n                        symbol.ID.OptionStyle.ToLower()\r\n                        );", span="500-504"];
m0_218 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Format(''{0}.zip'', \r\n                            symbol.Value.ToLower()\r\n                            );", span="480-482"];
m0_226 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickTypeString);", span="509-511"];
m0_229 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="throw new ArgumentOutOfRangeException();", span="520-520"];
m0_210 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="469-469"];
m0_211 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="470-470"];
m0_212 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="symbol.ID.SecurityType", span="472-472"];
m0_219 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Format(''{0}_{1}.zip'', \r\n                        formattedDate, \r\n                        tickTypeString\r\n                        );", span="485-488"];
m0_227 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString);", span="514-516"];
m0_221 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label=isHourOrDaily, span="491-491"];
m0_217 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label=isHourOrDaily, span="478-478"];
m0_225 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label=isHourOrDaily, span="507-507"];
m0_228 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="SecurityType.Commodity", span="518-518"];
m0_213 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="SecurityType.Base", span="474-474"];
m0_220 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="SecurityType.Option", span="490-490"];
m0_224 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="SecurityType.Future", span="506-506"];
m0_216 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="SecurityType.Cfd", span="477-477"];
m0_214 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="SecurityType.Equity", span="475-475"];
m0_215 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="SecurityType.Forex", span="476-476"];
m0_230 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="466-466"];
m0_354 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="708-708"];
m0_358 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="securityTypes.Contains(x.ToLower())", span="717-717"];
m0_352 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x.ToLower()", span="700-700"];
m0_357 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="717-717"];
m0_359 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="717-717"];
m0_351 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="700-700"];
m0_353 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="700-700"];
m0_355 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x == fileName.First()", span="708-708"];
m0_356 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="708-708"];
m0_112 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="SubscriptionDataReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m0_347 [cluster="string.Substring(int, int)", file="SubscriptionDataReader.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_274 [cluster="QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", span="29-29"];
m0_163 [cluster="System.IO.Path.Combine(params string[])", file="SubscriptionDataReader.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m0_311 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="693-693"];
m0_316 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var securityTypes = Enum.GetNames(typeof(SecurityType)).Select(x => x.ToLower()).ToList()", span="700-700"];
m0_315 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var pathSeparators = new[] { '/', '\\'}", span="699-699"];
m0_317 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="fileName = fileName.Replace(fileName.GetExtension(), '''')", span="705-705"];
m0_321 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var startIndex = info.FindIndex(x => securityTypes.Contains(x.ToLower()))", span="717-717"];
m0_314 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="date = default(DateTime)", span="697-697"];
m0_318 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="fileName.First() == '.' || pathSeparators.Any(x => x == fileName.First())", span="708-708"];
m0_320 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var info = fileName.Split(pathSeparators, StringSplitOptions.RemoveEmptyEntries).ToList()", span="714-714"];
m0_319 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="fileName = fileName.Remove(0, 1)", span="710-710"];
m0_332 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Log.Error(''LeanData.TryParsePath(): Error encountered while parsing the path {0}. Error: {1}'', fileName, ex.GetBaseException())", span="740-740"];
m0_322 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var market = info[startIndex + 1]", span="720-720"];
m0_323 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var ticker = info[startIndex + 3]", span="721-721"];
m0_324 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="resolution = (Resolution)Enum.Parse(typeof(Resolution), info[startIndex + 2], true)", span="722-722"];
m0_325 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="var securityType = (SecurityType)Enum.Parse(typeof(SecurityType), info[startIndex], true)", span="723-723"];
m0_329 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="date = DateTime.ParseExact(info[startIndex + 4].Substring(0, 8), DateFormat.EightCharacter, null)", span="733-733"];
m0_313 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="resolution = Resolution.Daily", span="696-696"];
m0_312 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="symbol = null", span="695-695"];
m0_331 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label=Exception, span="738-738"];
m0_333 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return false;", span="741-741"];
m0_330 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="symbol = Symbol.Create(ticker, securityType, market)", span="736-736"];
m0_328 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="resolution < Resolution.Hour", span="731-731"];
m0_326 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="securityType == SecurityType.Option || securityType == SecurityType.Future", span="725-725"];
m0_334 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return true;", span="744-744"];
m0_327 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="throw new ArgumentException(''LeanData.TryParsePath(): Options and futures are not supported by this method.'');", span="727-727"];
m0_335 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="693-693"];
m0_107 [cluster="System.DateTime.ToString(string)", file="SubscriptionDataReader.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m0_208 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="440-440"];
m0_207 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'', date.ToString(DateFormat.EightCharacter), symbol, resolution.ToLower(), dataType.ToLower());", span="460-460"];
m0_202 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="symbol = symbol.ToLower()", span="447-447"];
m0_199 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="440-440"];
m0_205 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="455-455"];
m0_206 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="dataType = TickType.Quote", span="457-457"];
m0_200 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="securityType != SecurityType.Base && securityType != SecurityType.Equity && securityType != SecurityType.Forex && securityType != SecurityType.Cfd", span="442-442"];
m0_203 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="449-449"];
m0_204 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return symbol + ''.csv'';", span="451-451"];
m0_201 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="throw new NotImplementedException(''This method only implements base, equity, forex and cfd security type.'');", span="444-444"];
m0_338 [cluster="Unk.ToList", file="SubscriptionDataReader.cs", label="Entry Unk.ToList", span=""];
m0_156 [cluster="System.Enum.ToLower()", file="SubscriptionDataReader.cs", label="Entry System.Enum.ToLower()", span="821-821"];
m0_348 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m0_6 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="SubscriptionDataReader.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="540-540"];
m0_157 [cluster="string.ToLower()", file="SubscriptionDataReader.cs", label="Entry string.ToLower()", span="0-0"];
m0_133 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="291-291"];
m0_134 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="5: return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, securityType, market, date, resolution));", span="293-293"];
m0_135 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="291-291"];
m0_5 [cluster="QuantConnect.Securities.Forex.Forex.Forex(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Forex.Forex.Forex(string, QuantConnect.Resolution, bool, decimal, bool, bool)", span="45-45"];
m0_346 [cluster="System.ArgumentException.ArgumentException(string)", file="SubscriptionDataReader.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m0_272 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="SubscriptionDataReader.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m0_349 [cluster="System.Exception.GetBaseException()", file="SubscriptionDataReader.cs", label="Entry System.Exception.GetBaseException()", span="0-0"];
m0_288 [cluster="decimal.ToString(System.IFormatProvider)", file="SubscriptionDataReader.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m0_172 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="527-527"];
m0_237 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="SubscriptionDataReader.cs", label="var suffix = string.Format(''_{0}.zip'', tickType.Value.ToLower())", span="536-536"];
m0_234 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="SubscriptionDataReader.cs", label="return symbol.ToLower() + ''.zip'';", span="531-531"];
m0_235 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="SubscriptionDataReader.cs", label="var zipFileName = date.ToString(DateFormat.EightCharacter)", span="534-534"];
m0_236 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="SubscriptionDataReader.cs", label="tickType = tickType ?? (securityType == SecurityType.Forex || securityType == SecurityType.Cfd ? TickType.Quote : TickType.Trade)", span="535-535"];
m0_238 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="SubscriptionDataReader.cs", label="return zipFileName + suffix;", span="537-537"];
m0_233 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="SubscriptionDataReader.cs", label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="529-529"];
m0_239 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="527-527"];
m0_195 [cluster="string.Format(string, object)", file="SubscriptionDataReader.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_271 [cluster="decimal.Parse(string)", file="SubscriptionDataReader.cs", label="Entry decimal.Parse(string)", span="0-0"];
m0_268 [cluster="string.Replace(string, string)", file="SubscriptionDataReader.cs", label="Entry string.Replace(string, string)", span="0-0"];
m0_344 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m0_276 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="143-143"];
m0_267 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="561-561"];
m0_266 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="throw new NotImplementedException(''ReadSymbolFromZipEntry is not implemented for '' + symbol.ID.SecurityType + '' '' + resolution);", span="593-593"];
m0_247 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var parts = zipEntryName.Replace(''.csv'', string.Empty).Split('_')", span="564-564"];
m0_245 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="561-561"];
m0_248 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="symbol.ID.SecurityType", span="565-565"];
m0_246 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var isHourlyOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="563-563"];
m0_251 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[2], true)", span="570-570"];
m0_252 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[3], true)", span="571-571"];
m0_253 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var strike = decimal.Parse(parts[4]) / 10000m", span="572-572"];
m0_254 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var expiry = DateTime.ParseExact(parts[5], DateFormat.EightCharacter, null)", span="573-573"];
m0_256 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[4], true)", span="578-578"];
m0_257 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[5], true)", span="579-579"];
m0_258 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var strike = decimal.Parse(parts[6]) / 10000m", span="580-580"];
m0_259 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var expiry = DateTime.ParseExact(parts[7], DateFormat.EightCharacter, null)", span="581-581"];
m0_262 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var expiryYearMonth = DateTime.ParseExact(parts[4], DateFormat.YearMonth, null)", span="587-587"];
m0_263 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var futureExpiryFunc = FuturesExpiryFunctions.FuturesExpiryFunction(parts[1])", span="588-588"];
m0_265 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="return Symbol.CreateFuture(parts[1], Market.USA, futureExpiry);", span="590-590"];
m0_255 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="return Symbol.CreateOption(symbol.Underlying, Market.USA, style, right, strike, expiry);", span="574-574"];
m0_260 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="return Symbol.CreateOption(symbol.Underlying, Market.USA, style, right, strike, expiry);", span="582-582"];
m0_249 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="SecurityType.Option", span="567-567"];
m0_261 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="SecurityType.Future", span="586-586"];
m0_250 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label=isHourlyOrDaily, span="568-568"];
m0_264 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="SubscriptionDataReader.cs", label="var futureExpiry = futureExpiryFunc(expiryYearMonth)", span="589-589"];
m0_198 [cluster="string.Join(string, params string[])", file="SubscriptionDataReader.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m0_341 [cluster="Unk.Any", file="SubscriptionDataReader.cs", label="Entry Unk.Any", span=""];
m0_132 [cluster="System.IO.Path.Combine(string, string)", file="SubscriptionDataReader.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m0_123 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="267-267"];
m0_124 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", color=green, community=0, file="SubscriptionDataReader.cs", label="6: baseDataType == typeof(TradeBar) ||\r\n                baseDataType == typeof(QuoteBar) ||\r\n                baseDataType == typeof(OpenInterest)", span="269-271"];
m0_125 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="SubscriptionDataReader.cs", label="return true;", span="273-273"];
m0_126 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", color=green, community=0, file="SubscriptionDataReader.cs", label="2: return false;", span="276-276"];
m0_127 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="267-267"];
m0_160 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="330-330"];
m0_161 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", color=green, community=0, file="SubscriptionDataReader.cs", label="7: return Path.Combine(Globals.DataFolder,\r\n                                        ''equity'',\r\n                                        symbol.ID.Market,\r\n                                        ''factor_files'',\r\n                                        symbol.Value.ToLower() + ''.csv'');", span="332-336"];
m0_162 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="330-330"];
m0_343 [cluster="string.Split(char[], System.StringSplitOptions)", file="SubscriptionDataReader.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m0_136 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="350-350"];
m0_167 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: var directory = Path.Combine(securityType.ToLower(), market.ToLower(), resolution.ToLower())", span="352-352"];
m0_168 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="resolution != Resolution.Daily && resolution != Resolution.Hour", span="353-353"];
m0_169 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="directory = Path.Combine(directory, symbol.ToLower())", span="355-355"];
m0_170 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="return Path.Combine(directory, GenerateZipFileName(symbol, securityType, date, resolution));", span="358-358"];
m0_171 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="350-350"];
m0_196 [cluster="string.Format(string, params object[])", file="SubscriptionDataReader.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m0_232 [cluster="string.Format(string, object, object, object)", file="SubscriptionDataReader.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m0_0 [cluster="QuantConnect.Securities.Forex.Forex.Forex(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(string, QuantConnect.Resolution, bool, decimal, bool, bool)", span="45-45"];
m0_3 [cluster="QuantConnect.Securities.Forex.Forex.Forex(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="SubscriptionDataReader.cs", label="Exchange = new ForexExchange()", span="51-51"];
m0_1 [cluster="QuantConnect.Securities.Forex.Forex.Forex(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="SubscriptionDataReader.cs", label="Cache = new ForexCache()", span="49-49"];
m0_2 [cluster="QuantConnect.Securities.Forex.Forex.Forex(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="SubscriptionDataReader.cs", label="Holdings = new ForexHolding(symbol, leverage, this.Model)", span="50-50"];
m0_4 [cluster="QuantConnect.Securities.Forex.Forex.Forex(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="SubscriptionDataReader.cs", label="Model = new ForexTransactionModel()", span="52-52"];
m0_159 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="SubscriptionDataReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m0_342 [cluster="string.Remove(int, int)", file="SubscriptionDataReader.cs", label="Entry string.Remove(int, int)", span="0-0"];
m0_275 [cluster="System.Func<T, TResult>.Invoke(T)", file="SubscriptionDataReader.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_131 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="342-342"];
m0_164 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="4: return Path.Combine(GenerateRelativeZipFileDirectory(symbol, resolution), GenerateZipFileName(symbol, date, resolution, tickType));", span="344-344"];
m0_165 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="342-342"];
m0_231 [cluster="string.Format(string, object, object)", file="SubscriptionDataReader.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_194 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="364-364"];
m0_174 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="5: var formattedDate = date.ToString(DateFormat.EightCharacter)", span="366-366"];
m0_173 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="364-364"];
m0_175 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="5: var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="367-367"];
m0_183 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'', \r\n                        formattedDate, \r\n                        symbol.Value.ToLower(), \r\n                        resolution.ToLower(), \r\n                        tickType.ToLower()\r\n                        );", span="382-387"];
m0_187 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.Underlying.Value.ToLower(), // underlying\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.OptionStyle.ToLower(),\r\n                        symbol.ID.OptionRight.ToLower(),\r\n                        Scale(symbol.ID.StrikePrice),\r\n                        symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                        ) + ''.csv'';", span="402-411"];
m0_191 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.ID.Symbol.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                        ) + ''.csv'';", span="423-429"];
m0_176 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="5: symbol.ID.SecurityType", span="369-369"];
m0_181 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label=isHourOrDaily, span="375-375"];
m0_185 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label=isHourOrDaily, span="390-390"];
m0_189 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label=isHourOrDaily, span="414-414"];
m0_177 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="5: SecurityType.Base", span="371-371"];
m0_184 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="SecurityType.Option", span="389-389"];
m0_188 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="SecurityType.Future", span="413-413"];
m0_192 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="SecurityType.Commodity", span="431-431"];
m0_182 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="5: return string.Format(''{0}.csv'', \r\n                            symbol.Value.ToLower()\r\n                            );", span="377-379"];
m0_178 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="5: SecurityType.Equity", span="372-372"];
m0_179 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="5: SecurityType.Forex", span="373-373"];
m0_180 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="SubscriptionDataReader.cs", label="5: SecurityType.Cfd", span="374-374"];
m0_186 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Join(''_'',\r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickType.ToLower(),\r\n                            symbol.ID.OptionStyle.ToLower(),\r\n                            symbol.ID.OptionRight.ToLower(),\r\n                            Scale(symbol.ID.StrikePrice),\r\n                            symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                            ) + ''.csv'';", span="392-399"];
m0_190 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return string.Join(''_'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickType.ToLower(),\r\n                            symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                            ) + ''.csv'';", span="416-420"];
m0_193 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="throw new ArgumentOutOfRangeException();", span="433-433"];
m0_137 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="299-299"];
m0_138 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="301-301"];
m0_139 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: var securityType = symbol.ID.SecurityType.ToLower()", span="302-302"];
m0_148 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: return !isHourOrDaily ? Path.Combine(directory, symbol.Value.ToLower()) : directory;", span="312-312"];
m0_150 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: return !isHourOrDaily ? Path.Combine(directory, symbol.Underlying.Value.ToLower()) : directory;", span="316-316"];
m0_152 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: return !isHourOrDaily ? Path.Combine(directory, symbol.ID.Symbol.ToLower()) : directory;", span="319-319"];
m0_140 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: var market = symbol.ID.Market.ToLower()", span="303-303"];
m0_142 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: var directory = Path.Combine(securityType, market, res)", span="305-305"];
m0_141 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: var res = resolution.ToLower()", span="304-304"];
m0_143 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: symbol.ID.SecurityType", span="306-306"];
m0_144 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: SecurityType.Base", span="308-308"];
m0_149 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: SecurityType.Option", span="314-314"];
m0_151 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: SecurityType.Future", span="318-318"];
m0_153 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="6: SecurityType.Commodity", span="321-321"];
m0_147 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: SecurityType.Cfd", span="311-311"];
m0_145 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: SecurityType.Equity", span="309-309"];
m0_154 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: throw new ArgumentOutOfRangeException();", span="323-323"];
m0_146 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionDataReader.cs", label="3: SecurityType.Forex", span="310-310"];
m0_155 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="299-299"];
m0_360 [cluster="Unk.Contains", file="SubscriptionDataReader.cs", label="Entry Unk.Contains", span=""];
m0_345 [cluster="System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", span="0-0"];
m0_270 [cluster="System.Enum.Parse(System.Type, string, bool)", file="SubscriptionDataReader.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m0_340 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_106 [cluster="double.ToString(System.IFormatProvider)", file="SubscriptionDataReader.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m0_273 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="115-115"];
m0_337 [cluster="Unk.Select", file="SubscriptionDataReader.cs", label="Entry Unk.Select", span=""];
m0_197 [cluster="string.Join(string, params object[])", file="SubscriptionDataReader.cs", label="Entry string.Join(string, params object[])", span="0-0"];
m0_158 [cluster="System.IO.Path.Combine(string, string, string)", file="SubscriptionDataReader.cs", label="Entry System.IO.Path.Combine(string, string, string)", span="0-0"];
m0_362 [file="SubscriptionDataReader.cs", label=securityTypes, span=""];
m0_361 [file="SubscriptionDataReader.cs", label=string, span=""];
m0_7 -> m0_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_10  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m0_7 -> m0_12  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m0_7 -> m0_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_26  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m0_7 -> m0_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_39  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m0_7 -> m0_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_61  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_64  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_67  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_70  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m0_7 -> m0_72  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m0_7 -> m0_74  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_83  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_89  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_94  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_97  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_100  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_7 -> m0_103  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m0_7 -> m0_104  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m0_128 -> m0_129  [key=0, style=solid];
m0_129 -> m0_132  [key=2, style=dotted];
m0_129 -> m0_131  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_130 -> m0_128  [color=blue, key=0, style=bold];
m0_110 -> m0_293  [key=0, style=solid];
m0_110 -> m0_295  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m0_295 -> m0_109  [key=2, style=dotted];
m0_295 -> m0_296  [key=0, style=solid];
m0_294 -> m0_109  [key=2, style=dotted];
m0_294 -> m0_296  [key=0, style=solid];
m0_293 -> m0_295  [key=0, style=solid];
m0_293 -> m0_294  [key=0, style=solid];
m0_296 -> m0_110  [color=blue, key=0, style=bold];
m0_108 -> m0_277  [key=0, style=solid];
m0_277 -> m0_278  [key=0, style=solid];
m0_278 -> m0_108  [color=blue, key=0, style=bold];
m0_9 -> m0_107  [key=2, style=dotted];
m0_9 -> m0_9  [color=darkorchid, key=3, label="Field variable decimal _lastTradeProfit", style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_23  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m0_9 -> m0_37  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m0_9 -> m0_63  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m0_9 -> m0_66  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m0_9 -> m0_96  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m0_9 -> m0_99  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_106  [key=2, style=dotted];
m0_8 -> m0_15  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_19  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_29  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_33  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_43  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_45  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_47  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_52  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_55  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_58  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_69  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_76  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_78  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_80  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_85  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_88  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_91  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_8 -> m0_102  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m0_70 -> m0_9  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_70 -> m0_105  [key=0, style=solid];
m0_70 -> m0_112  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_24  [key=0, style=solid];
m0_10 -> m0_38  [key=0, style=solid];
m0_10 -> m0_71  [key=0, style=solid];
m0_10 -> m0_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m0_10 -> m0_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m0_10 -> m0_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m0_10 -> m0_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m0_23 -> m0_108  [key=2, style=dotted];
m0_23 -> m0_105  [key=0, style=solid];
m0_23 -> m0_109  [key=2, style=dotted];
m0_37 -> m0_105  [key=0, style=solid];
m0_37 -> m0_110  [key=2, style=dotted];
m0_37 -> m0_109  [key=2, style=dotted];
m0_63 -> m0_105  [key=0, style=solid];
m0_63 -> m0_111  [key=2, style=dotted];
m0_63 -> m0_109  [key=2, style=dotted];
m0_66 -> m0_105  [key=0, style=solid];
m0_66 -> m0_111  [key=2, style=dotted];
m0_66 -> m0_109  [key=2, style=dotted];
m0_96 -> m0_105  [key=0, style=solid];
m0_96 -> m0_110  [key=2, style=dotted];
m0_96 -> m0_109  [key=2, style=dotted];
m0_99 -> m0_105  [key=0, style=solid];
m0_99 -> m0_110  [key=2, style=dotted];
m0_99 -> m0_109  [key=2, style=dotted];
m0_15 -> m0_108  [key=2, style=dotted];
m0_15 -> m0_105  [key=0, style=solid];
m0_15 -> m0_109  [key=2, style=dotted];
m0_19 -> m0_108  [key=2, style=dotted];
m0_19 -> m0_105  [key=0, style=solid];
m0_19 -> m0_109  [key=2, style=dotted];
m0_43 -> m0_108  [key=2, style=dotted];
m0_43 -> m0_105  [key=0, style=solid];
m0_43 -> m0_109  [key=2, style=dotted];
m0_45 -> m0_108  [key=2, style=dotted];
m0_45 -> m0_105  [key=0, style=solid];
m0_45 -> m0_109  [key=2, style=dotted];
m0_55 -> m0_108  [key=2, style=dotted];
m0_55 -> m0_105  [key=0, style=solid];
m0_55 -> m0_109  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_16  [key=0, style=solid];
m0_12 -> m0_20  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_30  [key=0, style=solid];
m0_26 -> m0_34  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_39 -> m0_70  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_48  [key=0, style=solid];
m0_39 -> m0_59  [key=0, style=solid];
m0_41 -> m0_43  [color=darkseagreen4, key=1, label=tick, style=dashed];
m0_41 -> m0_45  [color=darkseagreen4, key=1, label=tick, style=dashed];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_44  [color=darkseagreen4, key=1, label=tick, style=dashed];
m0_41 -> m0_46  [color=darkseagreen4, key=1, label=tick, style=dashed];
m0_41 -> m0_47  [color=darkseagreen4, key=1, label=tick, style=dashed];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m0_53 -> m0_55  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m0_53 -> m0_54  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_58  [color=darkseagreen4, key=1, label=openInterest, style=dashed];
m0_61 -> m0_63  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m0_61 -> m0_62  [key=0, style=solid];
m0_64 -> m0_66  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m0_64 -> m0_65  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_69  [color=darkseagreen4, key=1, label=bigOpenInterest, style=dashed];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_81  [key=0, style=solid];
m0_72 -> m0_92  [key=0, style=solid];
m0_72 -> m0_103  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [color=darkseagreen4, key=1, label=tick, style=dashed];
m0_74 -> m0_77  [color=darkseagreen4, key=1, label=tick, style=dashed];
m0_74 -> m0_78  [color=darkseagreen4, key=1, label=tick, style=dashed];
m0_74 -> m0_79  [color=darkseagreen4, key=1, label=tick, style=dashed];
m0_74 -> m0_80  [color=darkseagreen4, key=1, label=tick, style=dashed];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_85  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_88  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_91  [color=darkseagreen4, key=1, label=openInterest, style=dashed];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m0_94 -> m0_95  [key=0, style=solid];
m0_97 -> m0_99  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m0_97 -> m0_98  [key=0, style=solid];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [color=darkseagreen4, key=1, label=bigOpenInterest, style=dashed];
m0_103 -> m0_105  [key=0, style=solid];
m0_103 -> m0_112  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_113  [key=2, style=dotted];
m0_29 -> m0_105  [key=0, style=solid];
m0_29 -> m0_109  [key=2, style=dotted];
m0_33 -> m0_105  [key=0, style=solid];
m0_33 -> m0_110  [key=2, style=dotted];
m0_33 -> m0_109  [key=2, style=dotted];
m0_47 -> m0_105  [key=0, style=solid];
m0_47 -> m0_109  [key=2, style=dotted];
m0_52 -> m0_105  [key=0, style=solid];
m0_52 -> m0_111  [key=2, style=dotted];
m0_52 -> m0_109  [key=2, style=dotted];
m0_58 -> m0_105  [key=0, style=solid];
m0_58 -> m0_109  [key=2, style=dotted];
m0_69 -> m0_105  [key=0, style=solid];
m0_69 -> m0_109  [key=2, style=dotted];
m0_76 -> m0_105  [key=0, style=solid];
m0_76 -> m0_109  [key=2, style=dotted];
m0_78 -> m0_105  [key=0, style=solid];
m0_78 -> m0_109  [key=2, style=dotted];
m0_80 -> m0_105  [key=0, style=solid];
m0_80 -> m0_109  [key=2, style=dotted];
m0_85 -> m0_105  [key=0, style=solid];
m0_85 -> m0_110  [key=2, style=dotted];
m0_85 -> m0_109  [key=2, style=dotted];
m0_88 -> m0_105  [key=0, style=solid];
m0_88 -> m0_109  [key=2, style=dotted];
m0_91 -> m0_105  [key=0, style=solid];
m0_91 -> m0_109  [key=2, style=dotted];
m0_102 -> m0_105  [key=0, style=solid];
m0_102 -> m0_109  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_64  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_67  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_97  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_100  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_56  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_46 -> m0_104  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_51 -> m0_53  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_57 -> m0_104  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_68 -> m0_104  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=0, style=solid];
m0_79 -> m0_104  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_84 -> m0_86  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_87 -> m0_89  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_90 -> m0_104  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_101 -> m0_104  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_105 -> m0_7  [color=blue, key=0, style=bold];
m0_111 -> m0_291  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m0_111 -> m0_289  [key=0, style=solid];
m0_291 -> m0_108  [key=2, style=dotted];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_109  [key=2, style=dotted];
m0_289 -> m0_291  [key=0, style=solid];
m0_289 -> m0_290  [key=0, style=solid];
m0_290 -> m0_109  [key=2, style=dotted];
m0_290 -> m0_292  [key=0, style=solid];
m0_292 -> m0_111  [color=blue, key=0, style=bold];
m0_114 -> m0_115  [color=green, key=0, style=solid];
m0_114 -> m0_117  [color=green, key=1, label="QuantConnect.TickType", style=dashed];
m0_114 -> m0_119  [color=green, key=1, label="QuantConnect.TickType", style=dashed];
m0_115 -> m0_116  [color=green, key=0, style=solid];
m0_115 -> m0_117  [color=green, key=0, style=solid];
m0_116 -> m0_122  [color=green, key=0, style=solid];
m0_117 -> m0_118  [color=green, key=0, style=solid];
m0_117 -> m0_119  [color=green, key=0, style=solid];
m0_118 -> m0_122  [color=green, key=0, style=solid];
m0_119 -> m0_120  [color=green, key=0, style=solid];
m0_119 -> m0_121  [color=green, key=0, style=solid];
m0_120 -> m0_122  [color=green, key=0, style=solid];
m0_121 -> m0_122  [color=green, key=0, style=solid];
m0_122 -> m0_114  [color=blue, key=0, style=bold];
m0_109 -> m0_285  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m0_109 -> m0_279  [key=0, style=solid];
m0_109 -> m0_280  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m0_109 -> m0_281  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m0_109 -> m0_283  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m0_285 -> m0_197  [key=2, style=dotted];
m0_285 -> m0_286  [key=0, style=solid];
m0_280 -> m0_285  [key=0, style=solid];
m0_280 -> m0_281  [key=0, style=solid];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_281  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_279 -> m0_283  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_279 -> m0_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_283  [color=darkseagreen4, key=1, label=value, style=dashed];
m0_283 -> m0_284  [key=0, style=solid];
m0_283 -> m0_287  [key=2, style=dotted];
m0_283 -> m0_288  [key=2, style=dotted];
m0_284 -> m0_280  [key=0, style=solid];
m0_284 -> m0_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_284  [key=0, style=solid];
m0_286 -> m0_109  [color=blue, key=0, style=bold];
m0_166 -> m0_209  [key=0, style=solid];
m0_166 -> m0_210  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_166 -> m0_211  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m0_166 -> m0_212  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_166 -> m0_218  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_166 -> m0_222  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_166 -> m0_223  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_166 -> m0_226  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_209 -> m0_156  [key=2, style=dotted];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_219  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m0_209 -> m0_222  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m0_209 -> m0_223  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m0_209 -> m0_226  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m0_209 -> m0_227  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m0_222 -> m0_156  [key=2, style=dotted];
m0_222 -> m0_157  [key=2, style=dotted];
m0_222 -> m0_222  [color=darkorchid, key=3, label="Local variable bool closedPosition", style=bold];
m0_222 -> m0_230  [key=0, style=solid];
m0_222 -> m0_232  [key=2, style=dotted];
m0_223 -> m0_156  [key=2, style=dotted];
m0_223 -> m0_230  [key=0, style=solid];
m0_223 -> m0_232  [key=2, style=dotted];
m0_218 -> m0_157  [key=2, style=dotted];
m0_218 -> m0_195  [key=2, style=dotted];
m0_218 -> m0_230  [key=0, style=solid];
m0_226 -> m0_157  [key=2, style=dotted];
m0_226 -> m0_230  [key=0, style=solid];
m0_226 -> m0_231  [key=2, style=dotted];
m0_229 -> m0_159  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_210 -> m0_107  [key=2, style=dotted];
m0_210 -> m0_223  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_219  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m0_210 -> m0_227  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_217  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m0_211 -> m0_221  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m0_211 -> m0_225  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_220  [key=0, style=solid];
m0_212 -> m0_224  [key=0, style=solid];
m0_212 -> m0_228  [key=0, style=solid];
m0_219 -> m0_230  [key=0, style=solid];
m0_219 -> m0_231  [key=2, style=dotted];
m0_227 -> m0_230  [key=0, style=solid];
m0_227 -> m0_231  [key=2, style=dotted];
m0_221 -> m0_222  [key=0, style=solid];
m0_221 -> m0_223  [key=0, style=solid];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_219  [key=0, style=solid];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_227  [key=0, style=solid];
m0_228 -> m0_229  [key=0, style=solid];
m0_213 -> m0_214  [key=0, style=solid];
m0_220 -> m0_221  [key=0, style=solid];
m0_224 -> m0_225  [key=0, style=solid];
m0_216 -> m0_217  [key=0, style=solid];
m0_214 -> m0_215  [key=0, style=solid];
m0_215 -> m0_216  [key=0, style=solid];
m0_230 -> m0_166  [color=blue, key=0, style=bold];
m0_354 -> m0_355  [key=0, style=solid];
m0_358 -> m0_157  [key=2, style=dotted];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_360  [key=2, style=dotted];
m0_352 -> m0_157  [key=2, style=dotted];
m0_352 -> m0_353  [key=0, style=solid];
m0_357 -> m0_358  [key=0, style=solid];
m0_359 -> m0_357  [color=blue, key=0, style=bold];
m0_351 -> m0_352  [key=0, style=solid];
m0_353 -> m0_351  [color=blue, key=0, style=bold];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_340  [key=2, style=dotted];
m0_356 -> m0_354  [color=blue, key=0, style=bold];
m0_311 -> m0_317  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_311 -> m0_312  [key=0, style=solid];
m0_316 -> m0_358  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_336  [key=2, style=dotted];
m0_316 -> m0_337  [key=2, style=dotted];
m0_316 -> m0_338  [key=2, style=dotted];
m0_316 -> m0_351  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_316 -> m0_321  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_318  [color=darkseagreen4, key=1, label=pathSeparators, style=dashed];
m0_315 -> m0_320  [color=darkseagreen4, key=1, label=pathSeparators, style=dashed];
m0_317 -> m0_317  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_339  [key=2, style=dotted];
m0_317 -> m0_268  [key=2, style=dotted];
m0_317 -> m0_355  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_317 -> m0_319  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_317 -> m0_320  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_317 -> m0_332  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_321 -> m0_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_345  [key=2, style=dotted];
m0_321 -> m0_323  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m0_321 -> m0_324  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m0_321 -> m0_325  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m0_321 -> m0_329  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_335  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_320  [key=0, style=solid];
m0_318 -> m0_340  [key=2, style=dotted];
m0_318 -> m0_341  [key=2, style=dotted];
m0_318 -> m0_354  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_343  [key=2, style=dotted];
m0_320 -> m0_344  [key=2, style=dotted];
m0_320 -> m0_322  [color=darkseagreen4, key=1, label=info, style=dashed];
m0_320 -> m0_323  [color=darkseagreen4, key=1, label=info, style=dashed];
m0_320 -> m0_324  [color=darkseagreen4, key=1, label=info, style=dashed];
m0_320 -> m0_325  [color=darkseagreen4, key=1, label=info, style=dashed];
m0_320 -> m0_329  [color=darkseagreen4, key=1, label=info, style=dashed];
m0_319 -> m0_318  [key=0, style=solid];
m0_319 -> m0_320  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_319 -> m0_319  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_319 -> m0_342  [key=2, style=dotted];
m0_319 -> m0_332  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_349  [key=2, style=dotted];
m0_332 -> m0_350  [key=2, style=dotted];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_330  [color=darkseagreen4, key=1, label=market, style=dashed];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_330  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_270  [key=2, style=dotted];
m0_324 -> m0_328  [color=darkseagreen4, key=1, label="out QuantConnect.Resolution", style=dashed];
m0_324 -> m0_335  [color=darkseagreen4, key=1, label="out QuantConnect.Resolution", style=dashed];
m0_325 -> m0_326  [key=0, style=solid];
m0_325 -> m0_270  [key=2, style=dotted];
m0_325 -> m0_330  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_347  [key=2, style=dotted];
m0_329 -> m0_272  [key=2, style=dotted];
m0_329 -> m0_335  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m0_313 -> m0_314  [key=0, style=solid];
m0_312 -> m0_313  [key=0, style=solid];
m0_331 -> m0_332  [key=0, style=solid];
m0_333 -> m0_335  [key=0, style=solid];
m0_330 -> m0_335  [color=darkseagreen4, key=1, label="out QuantConnect.Symbol", style=dashed];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_334  [key=0, style=solid];
m0_330 -> m0_348  [key=2, style=dotted];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_330  [key=0, style=solid];
m0_326 -> m0_328  [key=0, style=solid];
m0_326 -> m0_327  [key=0, style=solid];
m0_334 -> m0_335  [key=0, style=solid];
m0_327 -> m0_334  [key=0, style=solid];
m0_327 -> m0_346  [key=2, style=dotted];
m0_335 -> m0_311  [color=blue, key=0, style=bold];
m0_208 -> m0_199  [color=blue, key=0, style=bold];
m0_207 -> m0_156  [key=2, style=dotted];
m0_207 -> m0_107  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_196  [key=2, style=dotted];
m0_202 -> m0_157  [key=2, style=dotted];
m0_202 -> m0_207  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_202 -> m0_202  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_204  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_199 -> m0_207  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_199 -> m0_202  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_203  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m0_199 -> m0_205  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m0_205 -> m0_207  [key=0, style=solid];
m0_205 -> m0_206  [key=0, style=solid];
m0_206 -> m0_207  [key=0, style=solid];
m0_200 -> m0_202  [key=0, style=solid];
m0_200 -> m0_201  [key=0, style=solid];
m0_203 -> m0_205  [key=0, style=solid];
m0_203 -> m0_204  [key=0, style=solid];
m0_204 -> m0_208  [key=0, style=solid];
m0_201 -> m0_208  [key=0, style=solid];
m0_201 -> m0_113  [key=2, style=dotted];
m0_133 -> m0_134  [color=green, key=0, style=solid];
m0_134 -> m0_135  [color=green, key=0, style=solid];
m0_134 -> m0_136  [color=green, key=2, style=dotted];
m0_134 -> m0_132  [color=green, key=2, style=dotted];
m0_135 -> m0_133  [color=blue, key=0, style=bold];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_172 -> m0_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_172 -> m0_233  [key=0, style=solid];
m0_172 -> m0_235  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_172 -> m0_236  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m0_237 -> m0_156  [key=2, style=dotted];
m0_237 -> m0_195  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_234 -> m0_157  [key=2, style=dotted];
m0_234 -> m0_239  [key=0, style=solid];
m0_235 -> m0_107  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_238  [color=darkseagreen4, key=1, label=zipFileName, style=dashed];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_236  [color=darkseagreen4, key=1, label="QuantConnect.TickType?", style=dashed];
m0_238 -> m0_239  [key=0, style=solid];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_235  [key=0, style=solid];
m0_239 -> m0_172  [color=blue, key=0, style=bold];
m0_267 -> m0_245  [color=blue, key=0, style=bold];
m0_266 -> m0_113  [key=2, style=dotted];
m0_266 -> m0_267  [key=0, style=solid];
m0_247 -> m0_268  [key=2, style=dotted];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_269  [key=2, style=dotted];
m0_247 -> m0_251  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_247 -> m0_252  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_247 -> m0_253  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_247 -> m0_254  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_247 -> m0_256  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_247 -> m0_257  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_247 -> m0_258  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_247 -> m0_259  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_247 -> m0_262  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_247 -> m0_263  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_247 -> m0_265  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_245 -> m0_266  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_245 -> m0_247  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_248  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_245 -> m0_255  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_245 -> m0_260  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_248 -> m0_266  [key=0, style=solid];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_261  [key=0, style=solid];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_250  [color=darkseagreen4, key=1, label=isHourlyOrDaily, style=dashed];
m0_251 -> m0_270  [key=2, style=dotted];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_255  [color=darkseagreen4, key=1, label=style, style=dashed];
m0_252 -> m0_270  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_255  [color=darkseagreen4, key=1, label=right, style=dashed];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_271  [key=2, style=dotted];
m0_253 -> m0_255  [color=darkseagreen4, key=1, label=strike, style=dashed];
m0_254 -> m0_272  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_256 -> m0_270  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_260  [color=darkseagreen4, key=1, label=style, style=dashed];
m0_257 -> m0_270  [key=2, style=dotted];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_260  [color=darkseagreen4, key=1, label=right, style=dashed];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_271  [key=2, style=dotted];
m0_258 -> m0_260  [color=darkseagreen4, key=1, label=strike, style=dashed];
m0_259 -> m0_272  [key=2, style=dotted];
m0_259 -> m0_260  [key=0, style=solid];
m0_262 -> m0_272  [key=2, style=dotted];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_264  [color=darkseagreen4, key=1, label=expiryYearMonth, style=dashed];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_274  [key=2, style=dotted];
m0_265 -> m0_267  [key=0, style=solid];
m0_265 -> m0_276  [key=2, style=dotted];
m0_255 -> m0_267  [key=0, style=solid];
m0_255 -> m0_273  [key=2, style=dotted];
m0_260 -> m0_267  [key=0, style=solid];
m0_260 -> m0_273  [key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_261 -> m0_262  [key=0, style=solid];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_256  [key=0, style=solid];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_275  [key=2, style=dotted];
m0_123 -> m0_124  [color=green, key=0, style=solid];
m0_124 -> m0_125  [color=green, key=0, style=solid];
m0_124 -> m0_126  [color=green, key=0, style=solid];
m0_125 -> m0_127  [key=0, style=solid];
m0_126 -> m0_127  [color=green, key=0, style=solid];
m0_127 -> m0_123  [color=blue, key=0, style=bold];
m0_160 -> m0_161  [color=green, key=0, style=solid];
m0_161 -> m0_162  [color=green, key=0, style=solid];
m0_161 -> m0_157  [color=green, key=2, style=dotted];
m0_161 -> m0_163  [color=green, key=2, style=dotted];
m0_162 -> m0_160  [color=blue, key=0, style=bold];
m0_136 -> m0_167  [color=green, key=0, style=solid];
m0_136 -> m0_168  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m0_136 -> m0_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_136 -> m0_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_167 -> m0_168  [color=green, key=0, style=solid];
m0_167 -> m0_156  [color=green, key=2, style=dotted];
m0_167 -> m0_157  [color=green, key=2, style=dotted];
m0_167 -> m0_158  [color=green, key=2, style=dotted];
m0_167 -> m0_169  [color=green, key=1, label=directory, style=dashed];
m0_167 -> m0_170  [color=green, key=1, label=directory, style=dashed];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_170  [key=0, style=solid];
m0_169 -> m0_132  [key=2, style=dotted];
m0_169 -> m0_157  [key=2, style=dotted];
m0_169 -> m0_169  [color=darkseagreen4, key=1, label=directory, style=dashed];
m0_169 -> m0_170  [key=0, style=solid];
m0_170 -> m0_132  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_172  [key=2, style=dotted];
m0_171 -> m0_136  [color=blue, key=0, style=bold];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_3 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_15  [color=darkorchid, key=3, label="Field variable QuantConnect.Securities.SecurityTransactionManager Transactions", style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_1 -> m0_3  [color=darkseagreen4, key=1, label=clone, style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_1 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_2  [color=darkorchid, key=3, label="Field variable string _algorithmId", style=bold];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_9  [key=2, style=dotted];
m0_131 -> m0_164  [color=green, key=0, style=solid];
m0_164 -> m0_165  [color=green, key=0, style=solid];
m0_164 -> m0_137  [color=green, key=2, style=dotted];
m0_164 -> m0_166  [color=green, key=2, style=dotted];
m0_164 -> m0_132  [color=green, key=2, style=dotted];
m0_165 -> m0_131  [color=blue, key=0, style=bold];
m0_194 -> m0_173  [color=blue, key=0, style=bold];
m0_174 -> m0_175  [color=green, key=0, style=solid];
m0_174 -> m0_107  [color=green, key=2, style=dotted];
m0_174 -> m0_183  [color=green, key=1, label=formattedDate, style=dashed];
m0_174 -> m0_187  [color=green, key=1, label=formattedDate, style=dashed];
m0_174 -> m0_191  [color=green, key=1, label=formattedDate, style=dashed];
m0_173 -> m0_174  [color=green, key=0, style=solid];
m0_173 -> m0_175  [color=green, key=1, label="QuantConnect.Resolution", style=dashed];
m0_173 -> m0_176  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m0_173 -> m0_182  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m0_173 -> m0_183  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_173 -> m0_186  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_173 -> m0_187  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_173 -> m0_190  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_173 -> m0_191  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_175 -> m0_176  [color=green, key=0, style=solid];
m0_175 -> m0_181  [color=green, key=1, label=isHourOrDaily, style=dashed];
m0_175 -> m0_185  [color=green, key=1, label=isHourOrDaily, style=dashed];
m0_175 -> m0_189  [color=green, key=1, label=isHourOrDaily, style=dashed];
m0_183 -> m0_156  [key=2, style=dotted];
m0_183 -> m0_157  [key=2, style=dotted];
m0_183 -> m0_194  [key=0, style=solid];
m0_183 -> m0_196  [key=2, style=dotted];
m0_187 -> m0_156  [key=2, style=dotted];
m0_187 -> m0_157  [key=2, style=dotted];
m0_187 -> m0_107  [key=2, style=dotted];
m0_187 -> m0_194  [key=0, style=solid];
m0_187 -> m0_108  [key=2, style=dotted];
m0_187 -> m0_197  [key=2, style=dotted];
m0_191 -> m0_156  [key=2, style=dotted];
m0_191 -> m0_157  [key=2, style=dotted];
m0_191 -> m0_107  [key=2, style=dotted];
m0_191 -> m0_194  [key=0, style=solid];
m0_191 -> m0_198  [key=2, style=dotted];
m0_176 -> m0_177  [color=green, key=0, style=solid];
m0_176 -> m0_184  [color=green, key=0, style=solid];
m0_176 -> m0_188  [color=green, key=0, style=solid];
m0_176 -> m0_192  [color=green, key=0, style=solid];
m0_181 -> m0_182  [color=green, key=0, style=solid];
m0_181 -> m0_183  [key=0, style=solid];
m0_185 -> m0_187  [key=0, style=solid];
m0_185 -> m0_186  [key=0, style=solid];
m0_189 -> m0_191  [key=0, style=solid];
m0_189 -> m0_190  [key=0, style=solid];
m0_177 -> m0_178  [color=green, key=0, style=solid];
m0_184 -> m0_185  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_192 -> m0_193  [key=0, style=solid];
m0_182 -> m0_194  [color=green, key=0, style=solid];
m0_182 -> m0_157  [color=green, key=2, style=dotted];
m0_182 -> m0_195  [color=green, key=2, style=dotted];
m0_178 -> m0_179  [color=green, key=0, style=solid];
m0_179 -> m0_180  [color=green, key=0, style=solid];
m0_180 -> m0_181  [color=green, key=0, style=solid];
m0_186 -> m0_156  [key=2, style=dotted];
m0_186 -> m0_157  [key=2, style=dotted];
m0_186 -> m0_107  [key=2, style=dotted];
m0_186 -> m0_194  [key=0, style=solid];
m0_186 -> m0_108  [key=2, style=dotted];
m0_186 -> m0_197  [key=2, style=dotted];
m0_190 -> m0_156  [key=2, style=dotted];
m0_190 -> m0_157  [key=2, style=dotted];
m0_190 -> m0_107  [key=2, style=dotted];
m0_190 -> m0_194  [key=0, style=solid];
m0_190 -> m0_198  [key=2, style=dotted];
m0_193 -> m0_159  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_137 -> m0_138  [color=green, key=0, style=solid];
m0_137 -> m0_139  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m0_137 -> m0_140  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m0_137 -> m0_141  [color=green, key=1, label="QuantConnect.Resolution", style=dashed];
m0_137 -> m0_143  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m0_137 -> m0_148  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m0_137 -> m0_150  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m0_137 -> m0_152  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m0_138 -> m0_139  [color=green, key=0, style=solid];
m0_138 -> m0_148  [color=green, key=1, label=isHourOrDaily, style=dashed];
m0_138 -> m0_150  [color=green, key=1, label=isHourOrDaily, style=dashed];
m0_138 -> m0_152  [color=green, key=1, label=isHourOrDaily, style=dashed];
m0_139 -> m0_140  [color=green, key=0, style=solid];
m0_139 -> m0_156  [color=green, key=2, style=dotted];
m0_139 -> m0_142  [color=green, key=1, label=securityType, style=dashed];
m0_148 -> m0_155  [color=green, key=0, style=solid];
m0_148 -> m0_157  [color=green, key=2, style=dotted];
m0_148 -> m0_132  [color=green, key=2, style=dotted];
m0_150 -> m0_155  [color=green, key=0, style=solid];
m0_150 -> m0_157  [color=green, key=2, style=dotted];
m0_150 -> m0_132  [color=green, key=2, style=dotted];
m0_152 -> m0_155  [color=green, key=0, style=solid];
m0_152 -> m0_157  [color=green, key=2, style=dotted];
m0_152 -> m0_132  [color=green, key=2, style=dotted];
m0_140 -> m0_141  [color=green, key=0, style=solid];
m0_140 -> m0_157  [color=green, key=2, style=dotted];
m0_140 -> m0_142  [color=green, key=1, label=market, style=dashed];
m0_142 -> m0_143  [color=green, key=0, style=solid];
m0_142 -> m0_148  [color=green, key=1, label=directory, style=dashed];
m0_142 -> m0_150  [color=green, key=1, label=directory, style=dashed];
m0_142 -> m0_152  [color=green, key=1, label=directory, style=dashed];
m0_142 -> m0_158  [color=green, key=2, style=dotted];
m0_141 -> m0_142  [color=green, key=0, style=solid];
m0_141 -> m0_156  [color=green, key=2, style=dotted];
m0_143 -> m0_144  [color=green, key=0, style=solid];
m0_143 -> m0_149  [color=green, key=0, style=solid];
m0_143 -> m0_151  [color=green, key=0, style=solid];
m0_143 -> m0_153  [color=green, key=0, style=solid];
m0_144 -> m0_145  [color=green, key=0, style=solid];
m0_149 -> m0_150  [color=green, key=0, style=solid];
m0_151 -> m0_152  [color=green, key=0, style=solid];
m0_153 -> m0_154  [color=green, key=0, style=solid];
m0_147 -> m0_148  [color=green, key=0, style=solid];
m0_145 -> m0_146  [color=green, key=0, style=solid];
m0_154 -> m0_155  [color=green, key=0, style=solid];
m0_154 -> m0_159  [color=green, key=2, style=dotted];
m0_146 -> m0_147  [color=green, key=0, style=solid];
m0_155 -> m0_137  [color=blue, key=0, style=bold];
m0_362 -> m0_358  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m0_361 -> m0_355  [color=darkseagreen4, key=1, label=string, style=dashed];
}
