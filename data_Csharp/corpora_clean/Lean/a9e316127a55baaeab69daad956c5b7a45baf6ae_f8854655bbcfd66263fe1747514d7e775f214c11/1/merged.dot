digraph  {
m1_35 [label="Entry System.Linq.IOrderedEnumerable<TSource>.ThenByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Linq.IOrderedEnumerable<TSource>.ThenByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="SendForBacktestingcs.cs"];
m1_45 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="SendForBacktestingcs.cs"];
m1_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1467-1467", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SendForBacktestingcs.cs"];
m1_22 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", span="61-61", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs"];
m1_23 [label="!Portfolio.Invested && IsMarketOpen(OptionSymbol)", span="63-63", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs"];
m1_25 [label="slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="66-66", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs"];
m1_24 [label="OptionChain chain", span="65-65", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs"];
m1_26 [label="var atmContract = chain\r\n                        .OrderByDescending(x => x.Expiry)\r\n                        .ThenBy(x => Math.Abs(chain.Underlying.Price - x.Strike))\r\n                        .ThenByDescending(x => x.Right)\r\n                        .FirstOrDefault()", span="69-73", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs"];
m1_27 [label="atmContract != null", span="75-75", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs"];
m1_28 [label="MarketOrder(atmContract.Symbol, 1)", span="78-78", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs"];
m1_29 [label="MarketOnCloseOrder(atmContract.Symbol, -1)", span="79-79", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs"];
m1_30 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", span="61-61", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs"];
m1_14 [label="Entry QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="348-348", cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="SendForBacktestingcs.cs"];
m1_37 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SendForBacktestingcs.cs"];
m1_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="SendForBacktestingcs.cs"];
m1_34 [label="Entry System.Linq.IOrderedEnumerable<TSource>.ThenBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Linq.IOrderedEnumerable<TSource>.ThenBy<TSource, TKey>(System.Func<TSource, TKey>)", file="SendForBacktestingcs.cs"];
m1_46 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="SendForBacktestingcs.cs"];
m1_16 [label="Entry lambda expression", span="50-51", cluster="lambda expression", file="SendForBacktestingcs.cs"];
m1_17 [label="u.Strikes(-2, +2)\r\n                                   .Expiration(TimeSpan.Zero, TimeSpan.FromDays(180))", span="50-51", cluster="lambda expression", color=red, community=0, file="SendForBacktestingcs.cs"];
m1_18 [label="Exit lambda expression", span="50-51", cluster="lambda expression", file="SendForBacktestingcs.cs"];
m1_43 [label="Math.Abs(chain.Underlying.Price - x.Strike)", span="71-71", cluster="lambda expression", file="SendForBacktestingcs.cs"];
m1_39 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="SendForBacktestingcs.cs"];
m1_42 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="SendForBacktestingcs.cs"];
m1_40 [label="x.Expiry", span="70-70", cluster="lambda expression", file="SendForBacktestingcs.cs"];
m1_41 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="SendForBacktestingcs.cs"];
m1_44 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="SendForBacktestingcs.cs"];
m1_47 [label="x.Right", span="72-72", cluster="lambda expression", file="SendForBacktestingcs.cs"];
m1_48 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="SendForBacktestingcs.cs"];
m1_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1453-1453", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SendForBacktestingcs.cs"];
m1_31 [label="Entry QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1023-1023", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="SendForBacktestingcs.cs"];
m1_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1172-1172", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SendForBacktestingcs.cs"];
m1_21 [label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="303-303", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="SendForBacktestingcs.cs"];
m1_36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="SendForBacktestingcs.cs"];
m1_19 [label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="197-197", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="SendForBacktestingcs.cs"];
m1_20 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="SendForBacktestingcs.cs"];
m1_53 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1837-1837", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="SendForBacktestingcs.cs"];
m1_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1197-1197", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SendForBacktestingcs.cs"];
m1_32 [label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189", cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="SendForBacktestingcs.cs"];
m1_49 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="90-90", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SendForBacktestingcs.cs"];
m1_50 [label="Log(orderEvent.ToString())", span="92-92", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SendForBacktestingcs.cs"];
m1_51 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="90-90", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SendForBacktestingcs.cs"];
m1_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1121-1121", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SendForBacktestingcs.cs"];
m1_0 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", span="40-40", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs"];
m1_1 [label="SetStartDate(2015, 12, 24)", span="42-42", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs"];
m1_2 [label="SetEndDate(2015, 12, 24)", span="43-43", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs"];
m1_3 [label="SetCash(100000)", span="44-44", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs"];
m1_4 [label="var equity = AddEquity(UnderlyingTicker)", span="46-46", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs"];
m1_5 [label="var option = AddOption(UnderlyingTicker)", span="47-47", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs"];
m1_7 [label="SetBenchmark(equity.Symbol)", span="54-54", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", color=red, community=0, file="SendForBacktestingcs.cs"];
m1_6 [label="option.SetFilter(u => u.Strikes(-2, +2)\r\n                                   .Expiration(TimeSpan.Zero, TimeSpan.FromDays(180)))", span="50-51", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", color=red, community=0, file="SendForBacktestingcs.cs"];
m1_8 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", span="40-40", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs"];
m1_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="1078-1078", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="SendForBacktestingcs.cs"];
m1_38 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SendForBacktestingcs.cs"];
m1_52 [label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="169-169", cluster="QuantConnect.Orders.OrderEvent.ToString()", file="SendForBacktestingcs.cs"];
m1_54 [label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm", span="", file="SendForBacktestingcs.cs"];
m1_55 [label=chain, span="", file="SendForBacktestingcs.cs"];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_30  [key=0, style=solid];
m1_23 -> m1_31  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_30  [key=0, style=solid];
m1_25 -> m1_32  [key=2, style=dotted];
m1_25 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=chain];
m1_24 -> m1_25  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_33  [key=2, style=dotted];
m1_26 -> m1_34  [key=2, style=dotted];
m1_26 -> m1_35  [key=2, style=dotted];
m1_26 -> m1_36  [key=2, style=dotted];
m1_26 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_26 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_26 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_26 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=atmContract];
m1_26 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=atmContract];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_30  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_37  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_38  [key=2, style=dotted];
m1_30 -> m1_22  [key=0, style=bold, color=blue];
m1_46 -> m1_47  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid, color=red];
m1_17 -> m1_18  [key=0, style=solid, color=red];
m1_17 -> m1_19  [key=2, style=dotted, color=red];
m1_17 -> m1_20  [key=2, style=dotted, color=red];
m1_17 -> m1_21  [key=2, style=dotted, color=red];
m1_18 -> m1_16  [key=0, style=bold, color=blue];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_41 -> m1_39  [key=0, style=bold, color=blue];
m1_44 -> m1_42  [key=0, style=bold, color=blue];
m1_47 -> m1_48  [key=0, style=solid];
m1_48 -> m1_46  [key=0, style=bold, color=blue];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [key=2, style=dotted];
m1_50 -> m1_53  [key=2, style=dotted];
m1_51 -> m1_49  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_9  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_10  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_11  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_12  [key=2, style=dotted];
m1_4 -> m1_7  [key=1, style=dashed, color=red, label=equity];
m1_5 -> m1_6  [key=0, style=solid, color=red];
m1_5 -> m1_13  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid, color=red];
m1_7 -> m1_15  [key=2, style=dotted, color=red];
m1_6 -> m1_7  [key=0, style=solid, color=red];
m1_6 -> m1_14  [key=2, style=dotted, color=red];
m1_6 -> m1_16  [key=1, style=dashed, color=red, label="lambda expression"];
m1_8 -> m1_0  [key=0, style=bold, color=blue];
m1_54 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m1_54 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m1_54 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m1_54 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m1_54 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m1_54 -> m1_7  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m1_54 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m1_54 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m1_54 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m1_54 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m1_54 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m1_55 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=chain];
}
