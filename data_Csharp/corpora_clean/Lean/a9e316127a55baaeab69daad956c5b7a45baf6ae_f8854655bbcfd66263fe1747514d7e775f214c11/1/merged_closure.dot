digraph  {
m1_35 [cluster="System.Linq.IOrderedEnumerable<TSource>.ThenByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="SendForBacktestingcs.cs", label="Entry System.Linq.IOrderedEnumerable<TSource>.ThenByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_45 [cluster="System.Math.Abs(decimal)", file="SendForBacktestingcs.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m1_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1467-1467"];
m1_22 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", span="61-61"];
m1_23 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs", label="!Portfolio.Invested && IsMarketOpen(OptionSymbol)", span="63-63"];
m1_25 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs", label="slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="66-66"];
m1_24 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs", label="OptionChain chain", span="65-65"];
m1_26 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs", label="var atmContract = chain\r\n                        .OrderByDescending(x => x.Expiry)\r\n                        .ThenBy(x => Math.Abs(chain.Underlying.Price - x.Strike))\r\n                        .ThenByDescending(x => x.Right)\r\n                        .FirstOrDefault()", span="69-73"];
m1_27 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs", label="atmContract != null", span="75-75"];
m1_28 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs", label="MarketOrder(atmContract.Symbol, 1)", span="78-78"];
m1_29 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs", label="MarketOnCloseOrder(atmContract.Symbol, -1)", span="79-79"];
m1_30 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="SendForBacktestingcs.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", span="61-61"];
m1_14 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="348-348"];
m1_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m1_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="SendForBacktestingcs.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_34 [cluster="System.Linq.IOrderedEnumerable<TSource>.ThenBy<TSource, TKey>(System.Func<TSource, TKey>)", file="SendForBacktestingcs.cs", label="Entry System.Linq.IOrderedEnumerable<TSource>.ThenBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_46 [cluster="lambda expression", file="SendForBacktestingcs.cs", label="Entry lambda expression", span="72-72"];
m1_16 [cluster="lambda expression", file="SendForBacktestingcs.cs", label="Entry lambda expression", span="50-51"];
m1_18 [cluster="lambda expression", file="SendForBacktestingcs.cs", label="Exit lambda expression", span="50-51"];
m1_43 [cluster="lambda expression", file="SendForBacktestingcs.cs", label="Math.Abs(chain.Underlying.Price - x.Strike)", span="71-71"];
m1_39 [cluster="lambda expression", file="SendForBacktestingcs.cs", label="Entry lambda expression", span="70-70"];
m1_42 [cluster="lambda expression", file="SendForBacktestingcs.cs", label="Entry lambda expression", span="71-71"];
m1_40 [cluster="lambda expression", file="SendForBacktestingcs.cs", label="x.Expiry", span="70-70"];
m1_41 [cluster="lambda expression", file="SendForBacktestingcs.cs", label="Exit lambda expression", span="70-70"];
m1_44 [cluster="lambda expression", file="SendForBacktestingcs.cs", label="Exit lambda expression", span="71-71"];
m1_47 [cluster="lambda expression", file="SendForBacktestingcs.cs", label="x.Right", span="72-72"];
m1_48 [cluster="lambda expression", file="SendForBacktestingcs.cs", label="Exit lambda expression", span="72-72"];
m1_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1453-1453"];
m1_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1023-1023"];
m1_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1172-1172"];
m1_21 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="303-303"];
m1_36 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="SendForBacktestingcs.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m1_19 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="197-197"];
m1_20 [cluster="System.TimeSpan.FromDays(double)", file="SendForBacktestingcs.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m1_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1837-1837"];
m1_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1197-1197"];
m1_32 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m1_49 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="90-90"];
m1_50 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SendForBacktestingcs.cs", label="Log(orderEvent.ToString())", span="92-92"];
m1_51 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SendForBacktestingcs.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="90-90"];
m1_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1121-1121"];
m1_0 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", span="40-40"];
m1_1 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs", label="SetStartDate(2015, 12, 24)", span="42-42"];
m1_2 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs", label="SetEndDate(2015, 12, 24)", span="43-43"];
m1_3 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs", label="SetCash(100000)", span="44-44"];
m1_4 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs", label="var equity = AddEquity(UnderlyingTicker)", span="46-46"];
m1_5 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs", label="var option = AddOption(UnderlyingTicker)", span="47-47"];
m1_8 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="SendForBacktestingcs.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", span="40-40"];
m1_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="1078-1078"];
m1_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m1_52 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="SendForBacktestingcs.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="169-169"];
m1_54 [file="SendForBacktestingcs.cs", label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm", span=""];
m1_55 [file="SendForBacktestingcs.cs", label=chain, span=""];
m1_22 -> m1_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m1_25 -> m1_43  [color=darkseagreen4, key=1, label=chain, style=dashed];
m1_26 -> m1_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_26 -> m1_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_26 -> m1_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_26 -> m1_28  [color=darkseagreen4, key=1, label=atmContract, style=dashed];
m1_26 -> m1_29  [color=darkseagreen4, key=1, label=atmContract, style=dashed];
m1_54 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm", style=dashed];
m1_54 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm", style=dashed];
m1_54 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm", style=dashed];
m1_54 -> m1_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm", style=dashed];
m1_54 -> m1_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm", style=dashed];
m1_54 -> m1_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm", style=dashed];
m1_54 -> m1_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm", style=dashed];
m1_54 -> m1_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm", style=dashed];
m1_55 -> m1_43  [color=darkseagreen4, key=1, label=chain, style=dashed];
}
