digraph  {
n0 [label="Entry QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n1 [label="var isLong = security.Holdings.IsLong", span="36-36", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n2 [label="var isShort = security.Holdings.IsShort", span="37-37", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n4 [label="var quantityHoldings = (decimal)security.Holdings.Quantity", span="40-40", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n5 [label="var absoluteHoldingsQuantity = security.Holdings.AbsoluteQuantity", span="41-41", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n6 [label="var averageHoldingsPrice = security.Holdings.AveragePrice", span="42-42", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n8 [label="security.Holdings.AddNewSale(fill.FillPrice * Convert.ToDecimal(fill.AbsoluteFillQuantity))", span="49-49", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n9 [label="var feeThisOrder = fill.OrderFee", span="52-52", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n10 [label="security.Holdings.AddNewFee(feeThisOrder)", span="53-53", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n11 [label="portfolio.CashBook[CashBook.AccountCurrency].AddAmount(-feeThisOrder)", span="54-54", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n12 [label="isLong && fill.Direction == OrderDirection.Sell", span="58-58", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n13 [label="quantityHoldings >= fill.AbsoluteFillQuantity", span="61-61", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n14 [label="lastTradeProfit = (fill.FillPrice - averageHoldingsPrice) * fill.AbsoluteFillQuantity", span="64-64", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n15 [label="lastTradeProfit = (fill.FillPrice - averageHoldingsPrice) * quantityHoldings", span="69-69", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n17 [label="isShort && fill.Direction == OrderDirection.Buy", span="73-73", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n18 [label="absoluteHoldingsQuantity >= fill.FillQuantity", span="76-76", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n19 [label="lastTradeProfit = (averageHoldingsPrice - fill.FillPrice) * fill.AbsoluteFillQuantity", span="79-79", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n20 [label="lastTradeProfit = (averageHoldingsPrice - fill.FillPrice) * absoluteHoldingsQuantity", span="84-84", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n23 [label="security.Holdings.AddNewProfit(lastTradeProfit)", span="93-93", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n24 [label="security.Holdings.SetLastTradeProfit(lastTradeProfit)", span="94-94", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n25 [label="portfolio.AddTransactionRecord(security.LocalTime.ConvertToUtc(security.Exchange.TimeZone), lastTradeProfit - 2 * feeThisOrder)", span="95-95", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n26 [label="var amount = fill.FillPrice * Convert.ToDecimal(fill.FillQuantity)", span="99-99", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n27 [label="security.SettlementModel.ApplyFunds(portfolio, security, fill.UtcTime, CashBook.AccountCurrency, -amount)", span="100-100", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n29 [label="averageHoldingsPrice = fill.FillPrice", span="107-107", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n30 [label="quantityHoldings = fill.FillQuantity", span="108-108", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n32 [label="fill.Direction", span="113-113", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n34 [label="averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (fill.FillQuantity * fill.FillPrice)) / (quantityHoldings + (decimal)fill.FillQuantity)", span="117-117", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n35 [label="quantityHoldings += fill.FillQuantity", span="119-119", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n37 [label="quantityHoldings += fill.FillQuantity", span="124-124", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n39 [label="averageHoldingsPrice = fill.FillPrice", span="128-128", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n43 [label="fill.Direction", span="140-140", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n45 [label="quantityHoldings += fill.FillQuantity", span="144-144", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n47 [label="averageHoldingsPrice = fill.FillPrice", span="148-148", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n51 [label="averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (Convert.ToDecimal(fill.FillQuantity) * fill.FillPrice)) / (quantityHoldings + (decimal)fill.FillQuantity)", span="160-160", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n52 [label="quantityHoldings += fill.FillQuantity", span="161-161", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n55 [label="security.Holdings.SetHoldings(averageHoldingsPrice, Convert.ToInt32(quantityHoldings))", span="172-172", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n31 [label=isLong, span="110-110", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n3 [label="var closedPosition = false", span="38-38", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n42 [label=isShort, span="137-137", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n22 [label=closedPosition, span="90-90", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n28 [label="quantityHoldings == 0", span="104-104", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n7 [label="var lastTradeProfit = 0m", span="44-44", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n57 [label="Entry System.Convert.ToDecimal(int)", span="0-0", cluster="System.Convert.ToDecimal(int)"];
n58 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="326-326", cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)"];
n59 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", span="308-308", cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)"];
n60 [label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="100-100", cluster="QuantConnect.Securities.Cash.AddAmount(decimal)"];
n16 [label="closedPosition = true", span="71-71", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n21 [label="closedPosition = true", span="86-86", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n61 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", span="317-317", cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)"];
n62 [label="Entry QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", span="335-335", cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)"];
n63 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="449-449", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)"];
n64 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="665-665", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)"];
n65 [label="Entry QuantConnect.Securities.ISettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", span="32-32", cluster="QuantConnect.Securities.ISettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)"];
n33 [label="OrderDirection.Buy", span="115-115", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n36 [label="OrderDirection.Sell", span="123-123", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n38 [label="quantityHoldings < 0", span="125-125", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n40 [label="quantityHoldings == 0", span="130-130", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n41 [label="averageHoldingsPrice = 0", span="132-132", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n53 [label=Exception, span="166-166", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n44 [label="OrderDirection.Buy", span="142-142", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n50 [label="OrderDirection.Sell", span="156-156", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n46 [label="quantityHoldings > 0", span="145-145", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n48 [label="quantityHoldings == 0", span="150-150", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n49 [label="averageHoldingsPrice = 0", span="152-152", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n54 [label="Log.Error(err)", span="168-168", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n66 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)"];
n56 [label="Exit QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n67 [label="Entry System.Convert.ToInt32(decimal)", span="0-0", cluster="System.Convert.ToInt32(decimal)"];
n68 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="343-343", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)"];
m0_69 [label="var entry = zipStream.GetNextEntry()", span="186-186", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_64 [label="Entry QuantConnect.Compression.UnzipData(byte[])", span="171-171", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_65 [label="var data = new Dictionary<string, string>()", span="174-174", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_66 [label="var ms = new MemoryStream(zipData)", span="178-178", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_73 [label="data.Add(entry.Name, buffer.GetString())", span="195-195", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_76 [label="return data;", span="210-210", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_67 [label="var zipStream = new ZipInputStream(ms)", span="181-181", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_68 [label=true, span="183-183", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_72 [label="zipStream.Read(buffer, 0, (int)entry.Size)", span="192-192", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_74 [label=Exception, span="206-206", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_70 [label="entry != null", span="188-188", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_71 [label="var buffer = new byte[entry.Size]", span="191-191", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_75 [label="Log.Error(err)", span="208-208", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_77 [label="Exit QuantConnect.Compression.UnzipData(byte[])", span="171-171", cluster="QuantConnect.Compression.UnzipData(byte[])", file="GDAXBrokerageModel.cs"];
m0_16 [label="Log.Error(err)", span="82-82", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="GDAXBrokerageModel.cs"];
m0_262 [label="Exit QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="557-557", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="GDAXBrokerageModel.cs"];
m0_258 [label="Entry QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="557-557", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="GDAXBrokerageModel.cs"];
m0_259 [label="var entryReader = new StreamReader(entry.OpenReader())", span="559-559", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="GDAXBrokerageModel.cs"];
m0_261 [label="yield return entryReader.ReadLine();", span="563-563", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="GDAXBrokerageModel.cs"];
m0_260 [label="!entryReader.EndOfStream", span="561-561", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="GDAXBrokerageModel.cs"];
m0_210 [label="Entry ZipFile.cstr", span="", cluster="ZipFile.cstr", file="GDAXBrokerageModel.cs"];
m0_128 [label="stream.PutNextEntry(entry)", span="295-295", cluster="QuantConnect.Compression.Zip(string, string, string)", file="GDAXBrokerageModel.cs"];
m0_125 [label="Entry QuantConnect.Compression.Zip(string, string, string)", span="290-290", cluster="QuantConnect.Compression.Zip(string, string, string)", file="GDAXBrokerageModel.cs"];
m0_126 [label="var stream = new ZipOutputStream(File.Create(zipPath))", span="292-292", cluster="QuantConnect.Compression.Zip(string, string, string)", file="GDAXBrokerageModel.cs"];
m0_127 [label="var entry = new ZipEntry(zipEntry)", span="294-294", cluster="QuantConnect.Compression.Zip(string, string, string)", file="GDAXBrokerageModel.cs"];
m0_130 [label="var dataReader = new MemoryStream(Encoding.Default.GetBytes(data))", span="297-297", cluster="QuantConnect.Compression.Zip(string, string, string)", file="GDAXBrokerageModel.cs"];
m0_133 [label="stream.Write(buffer, 0, sourceBytes)", span="303-303", cluster="QuantConnect.Compression.Zip(string, string, string)", file="GDAXBrokerageModel.cs"];
m0_129 [label="var buffer = new byte[4096]", span="296-296", cluster="QuantConnect.Compression.Zip(string, string, string)", file="GDAXBrokerageModel.cs"];
m0_132 [label="sourceBytes = dataReader.Read(buffer, 0, buffer.Length)", span="302-302", cluster="QuantConnect.Compression.Zip(string, string, string)", file="GDAXBrokerageModel.cs"];
m0_131 [label="int sourceBytes", span="299-299", cluster="QuantConnect.Compression.Zip(string, string, string)", file="GDAXBrokerageModel.cs"];
m0_134 [label="sourceBytes > 0", span="305-305", cluster="QuantConnect.Compression.Zip(string, string, string)", file="GDAXBrokerageModel.cs"];
m0_135 [label="Exit QuantConnect.Compression.Zip(string, string, string)", span="290-290", cluster="QuantConnect.Compression.Zip(string, string, string)", file="GDAXBrokerageModel.cs"];
m0_300 [label="Entry string.LastIndexOf(char)", span="0-0", cluster="string.LastIndexOf(char)", file="GDAXBrokerageModel.cs"];
m0_118 [label="Entry System.IO.File.OpenRead(string)", span="0-0", cluster="System.IO.File.OpenRead(string)", file="GDAXBrokerageModel.cs"];
m0_25 [label="return allow;", span="102-102", cluster="QuantConnect.Notifications.NotificationManager.Email(string, string, string, string)", file="GDAXBrokerageModel.cs"];
m0_27 [label="Entry QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", span="124-124", cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="GDAXBrokerageModel.cs"];
m0_62 [label="Entry StreamWriter.cstr", span="", cluster="StreamWriter.cstr", file="GDAXBrokerageModel.cs"];
m0_231 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="GDAXBrokerageModel.cs"];
m0_48 [label="return success;", span="133-133", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="GDAXBrokerageModel.cs"];
m0_277 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_244 [label="return ReadLinesImpl(filename, firstEntryOnly: true).Single().Value;", span="531-531", cluster="QuantConnect.Compression.ReadLines(string)", file="GDAXBrokerageModel.cs"];
m0_240 [label="Entry QuantConnect.Compression.ReadLines(string)", span="521-521", cluster="QuantConnect.Compression.ReadLines(string)", file="GDAXBrokerageModel.cs"];
m0_241 [label="!File.Exists(filename)", span="523-523", cluster="QuantConnect.Compression.ReadLines(string)", file="GDAXBrokerageModel.cs"];
m0_242 [label="Log.Error(''Compression.ReadFirstZipEntry(): File does not exist: '' + filename)", span="525-525", cluster="QuantConnect.Compression.ReadLines(string)", file="GDAXBrokerageModel.cs"];
m0_243 [label="return Enumerable.Empty<string>();", span="526-526", cluster="QuantConnect.Compression.ReadLines(string)", file="GDAXBrokerageModel.cs"];
m0_245 [label=Exception, span="533-533", cluster="QuantConnect.Compression.ReadLines(string)", file="GDAXBrokerageModel.cs"];
m0_246 [label="Log.Error(err)", span="535-535", cluster="QuantConnect.Compression.ReadLines(string)", file="GDAXBrokerageModel.cs"];
m0_247 [label="return Enumerable.Empty<string>();", span="537-537", cluster="QuantConnect.Compression.ReadLines(string)", file="GDAXBrokerageModel.cs"];
m0_248 [label="Exit QuantConnect.Compression.ReadLines(string)", span="521-521", cluster="QuantConnect.Compression.ReadLines(string)", file="GDAXBrokerageModel.cs"];
m0_339 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="GDAXBrokerageModel.cs"];
m0_23 [label="var email = new NotificationEmail(address, subject, message, data)", span="98-98", cluster="QuantConnect.Notifications.NotificationManager.Email(string, string, string, string)", file="GDAXBrokerageModel.cs"];
m0_306 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="GDAXBrokerageModel.cs"];
m0_88 [label="stream.PutNextEntry(entry)", span="225-225", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="GDAXBrokerageModel.cs"];
m0_84 [label="Entry QuantConnect.Compression.ZipBytes(byte[], string)", span="219-219", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="GDAXBrokerageModel.cs"];
m0_85 [label="var memoryStream = new MemoryStream()", span="221-221", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="GDAXBrokerageModel.cs"];
m0_87 [label="var entry = new ZipEntry(zipEntryName)", span="224-224", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="GDAXBrokerageModel.cs"];
m0_90 [label="StreamUtils.Copy(new MemoryStream(bytes), stream, buffer)", span="227-227", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="GDAXBrokerageModel.cs"];
m0_86 [label="var stream = new ZipOutputStream(memoryStream)", span="222-222", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="GDAXBrokerageModel.cs"];
m0_91 [label="return memoryStream.GetBuffer();", span="228-228", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="GDAXBrokerageModel.cs"];
m0_89 [label="var buffer = new byte[16*1024]", span="226-226", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="GDAXBrokerageModel.cs"];
m0_92 [label="Exit QuantConnect.Compression.ZipBytes(byte[], string)", span="219-219", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="GDAXBrokerageModel.cs"];
m0_216 [label="Entry System.IO.StreamReader.Close()", span="0-0", cluster="System.IO.StreamReader.Close()", file="GDAXBrokerageModel.cs"];
m0_314 [label="Entry Unk.CreateInputTarArchive", span="", cluster="Unk.CreateInputTarArchive", file="GDAXBrokerageModel.cs"];
m0_355 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="GDAXBrokerageModel.cs"];
m0_6 [label="var file = Encoding.Default.GetBytes(filenamesAndData[filename])", span="60-60", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="GDAXBrokerageModel.cs"];
m0_29 [label="Entry Unk.Close", span="", cluster="Unk.Close", file="GDAXBrokerageModel.cs"];
m0_30 [label="!_liveMode", span="112-112", cluster="QuantConnect.Notifications.NotificationManager.Sms(string, string)", file="GDAXBrokerageModel.cs"];
m0_32 [label="var success = true", span="96-96", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="GDAXBrokerageModel.cs"];
m0_35 [label=filenamesAndData, span="104-104", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="GDAXBrokerageModel.cs"];
m0_31 [label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", span="94-94", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="GDAXBrokerageModel.cs"];
m0_33 [label="var buffer = new byte[4096]", span="97-97", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="GDAXBrokerageModel.cs"];
m0_36 [label="var entry = new ZipEntry(file.Key)", span="107-107", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="GDAXBrokerageModel.cs"];
m0_34 [label="var stream = new ZipOutputStream(File.Create(zipPath))", span="102-102", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="GDAXBrokerageModel.cs"];
m0_37 [label="stream.PutNextEntry(entry)", span="109-109", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="GDAXBrokerageModel.cs"];
m0_299 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerageModel.cs"];
m0_18 [label="return success;", span="85-85", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="GDAXBrokerageModel.cs"];
m0_19 [label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", span="45-45", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="GDAXBrokerageModel.cs"];
m0_21 [label="Entry System.IO.File.Create(string)", span="0-0", cluster="System.IO.File.Create(string)", file="GDAXBrokerageModel.cs"];
m0_24 [label="Entry Unk.PutNextEntry", span="", cluster="Unk.PutNextEntry", file="GDAXBrokerageModel.cs"];
m0_20 [label="Entry ZipOutputStream.cstr", span="", cluster="ZipOutputStream.cstr", file="GDAXBrokerageModel.cs"];
m0_22 [label="Entry ZipEntry.cstr", span="", cluster="ZipEntry.cstr", file="GDAXBrokerageModel.cs"];
m0_26 [label="Entry System.IO.MemoryStream.Read(byte[], int, int)", span="0-0", cluster="System.IO.MemoryStream.Read(byte[], int, int)", file="GDAXBrokerageModel.cs"];
m0_316 [label="Entry System.IO.Stream.Close()", span="0-0", cluster="System.IO.Stream.Close()", file="GDAXBrokerageModel.cs"];
m0_146 [label="Entry Unk.CreateFromDirectory", span="", cluster="Unk.CreateFromDirectory", file="GDAXBrokerageModel.cs"];
m0_218 [label="Entry lambda expression", span="442-442", cluster="lambda expression", file="GDAXBrokerageModel.cs"];
m0_219 [label="zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0", span="442-442", cluster="lambda expression", file="GDAXBrokerageModel.cs"];
m0_220 [label="Exit lambda expression", span="442-442", cluster="lambda expression", file="GDAXBrokerageModel.cs"];
m0_5 [label="Exit QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="56-56", cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="GDAXBrokerageModel.cs"];
m0_0 [label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="56-56", cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="GDAXBrokerageModel.cs"];
m0_1 [label="_liveMode = liveMode", span="58-58", cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="GDAXBrokerageModel.cs"];
m0_3 [label="_count = 0", span="60-60", cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="GDAXBrokerageModel.cs"];
m0_4 [label="_resetTime = DateTime.Now", span="61-61", cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="GDAXBrokerageModel.cs"];
m0_2 [label="Messages = new ConcurrentQueue<Notification>()", span="59-59", cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="GDAXBrokerageModel.cs"];
m0_10 [label="_resetTime = DateTime.Now.RoundUp(TimeSpan.FromHours(1))", span="73-73", cluster="QuantConnect.Notifications.NotificationManager.Allow()", file="GDAXBrokerageModel.cs"];
m0_11 [label="_count < _rateLimit", span="76-76", cluster="QuantConnect.Notifications.NotificationManager.Allow()", file="GDAXBrokerageModel.cs"];
m0_7 [label="Entry QuantConnect.Notifications.NotificationManager.Allow()", span="68-68", cluster="QuantConnect.Notifications.NotificationManager.Allow()", file="GDAXBrokerageModel.cs"];
m0_13 [label="return true;", span="79-79", cluster="QuantConnect.Notifications.NotificationManager.Allow()", file="GDAXBrokerageModel.cs"];
m0_14 [label="return false;", span="81-81", cluster="QuantConnect.Notifications.NotificationManager.Allow()", file="GDAXBrokerageModel.cs"];
m0_8 [label="DateTime.Now > _resetTime", span="70-70", cluster="QuantConnect.Notifications.NotificationManager.Allow()", file="GDAXBrokerageModel.cs"];
m0_9 [label="_count = 0", span="72-72", cluster="QuantConnect.Notifications.NotificationManager.Allow()", file="GDAXBrokerageModel.cs"];
m0_12 [label="_count++", span="78-78", cluster="QuantConnect.Notifications.NotificationManager.Allow()", file="GDAXBrokerageModel.cs"];
m0_15 [label="Exit QuantConnect.Notifications.NotificationManager.Allow()", span="68-68", cluster="QuantConnect.Notifications.NotificationManager.Allow()", file="GDAXBrokerageModel.cs"];
m0_17 [label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="300-300", cluster="System.DateTime.RoundUp(System.TimeSpan)", file="GDAXBrokerageModel.cs"];
m0_171 [label="Entry System.IO.DirectoryInfo.Create()", span="0-0", cluster="System.IO.DirectoryInfo.Create()", file="GDAXBrokerageModel.cs"];
m0_338 [label="Entry KeyValuePair<string, byte[]>.cstr", span="", cluster="KeyValuePair<string, byte[]>.cstr", file="GDAXBrokerageModel.cs"];
m0_82 [label="Entry byte[].GetString()", span="84-84", cluster="byte[].GetString()", file="GDAXBrokerageModel.cs"];
m0_95 [label="Entry System.IO.MemoryStream.GetBuffer()", span="0-0", cluster="System.IO.MemoryStream.GetBuffer()", file="GDAXBrokerageModel.cs"];
m0_83 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="GDAXBrokerageModel.cs"];
m0_120 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="GDAXBrokerageModel.cs"];
m0_79 [label="Entry ZipInputStream.cstr", span="", cluster="ZipInputStream.cstr", file="GDAXBrokerageModel.cs"];
m0_215 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="GDAXBrokerageModel.cs"];
m0_81 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="GDAXBrokerageModel.cs"];
m0_170 [label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0", cluster="System.IO.FileInfo.FileInfo(string)", file="GDAXBrokerageModel.cs"];
m0_186 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="GDAXBrokerageModel.cs"];
m0_147 [label="Entry QuantConnect.Compression.Unzip(string, string, bool)", span="338-338", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_148 [label="!File.Exists(zip)", span="340-340", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_150 [label="!overwrite", span="344-344", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_151 [label="System.IO.Compression.ZipFile.ExtractToDirectory(zip, directory)", span="346-346", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_152 [label="var archive = new ZipArchive(File.OpenRead(zip))", span="350-350", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_155 [label="var filepath = Path.Combine(directory, file.FullName)", span="356-356", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_149 [label="return false;", span="340-340", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_153 [label="archive.Entries", span="352-352", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_154 [label="file.Name == ''''", span="355-355", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_162 [label="return true;", span="368-368", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_161 [label="file.ExtractToFile(outputFile.FullName, true)", span="363-363", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_156 [label="OS.IsLinux", span="357-357", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_157 [label="filepath = filepath.Replace(@''\'', ''/'')", span="357-357", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_158 [label="var outputFile = new FileInfo(filepath)", span="358-358", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_159 [label="!outputFile.Directory.Exists", span="359-359", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_160 [label="outputFile.Directory.Create()", span="361-361", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_163 [label=Exception, span="370-370", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_164 [label="Log.Error(err)", span="372-372", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_165 [label="return false;", span="373-373", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_166 [label="Exit QuantConnect.Compression.Unzip(string, string, bool)", span="338-338", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_124 [label="Entry System.IO.Path.GetFileName(string)", span="0-0", cluster="System.IO.Path.GetFileName(string)", file="GDAXBrokerageModel.cs"];
m0_221 [label="Entry Unk.Compare", span="", cluster="Unk.Compare", file="GDAXBrokerageModel.cs"];
m0_80 [label="Entry Unk.GetNextEntry", span="", cluster="Unk.GetNextEntry", file="GDAXBrokerageModel.cs"];
m0_249 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="GDAXBrokerageModel.cs"];
m0_263 [label="Entry System.IO.StreamReader.ReadLine()", span="0-0", cluster="System.IO.StreamReader.ReadLine()", file="GDAXBrokerageModel.cs"];
m0_40 [label="!_liveMode", span="129-129", cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="GDAXBrokerageModel.cs"];
m0_41 [label="return false;", span="129-129", cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="GDAXBrokerageModel.cs"];
m0_43 [label=allow, span="131-131", cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="GDAXBrokerageModel.cs"];
m0_44 [label="var web = new NotificationWeb(address, data)", span="133-133", cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="GDAXBrokerageModel.cs", color=green, community=0];
m0_38 [label="Entry QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", span="84-84", cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="GDAXBrokerageModel.cs"];
m0_39 [label="Entry QuantConnect.Notifications.NotificationManager.Web(string, object)", span="127-127", cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="GDAXBrokerageModel.cs"];
m0_42 [label="var allow = Allow()", span="130-130", cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="GDAXBrokerageModel.cs"];
m0_45 [label="Messages.Enqueue(web)", span="134-134", cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="GDAXBrokerageModel.cs", color=green, community=0];
m0_46 [label="return allow;", span="136-136", cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="GDAXBrokerageModel.cs", color=green, community=0];
m0_47 [label="Exit QuantConnect.Notifications.NotificationManager.Web(string, object)", span="127-127", cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="GDAXBrokerageModel.cs"];
m0_49 [label="QuantConnect.Notifications.NotificationManager", span="", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="GDAXBrokerageModel.cs"];
m0_317 [label="Entry QuantConnect.Compression.UnTarGzFiles(string, string)", span="680-680", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_318 [label="var inStream = File.OpenRead(source)", span="682-682", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_321 [label="tarArchive.ExtractContents(destination)", span="685-685", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_319 [label="var gzipStream = new GZipInputStream(inStream)", span="683-683", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_324 [label="inStream.Close()", span="688-688", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_320 [label="var tarArchive = TarArchive.CreateInputTarArchive(gzipStream)", span="684-684", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_323 [label="gzipStream.Close()", span="687-687", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_322 [label="tarArchive.Close()", span="686-686", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_325 [label="Exit QuantConnect.Compression.UnTarGzFiles(string, string)", span="680-680", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_307 [label="Entry QuantConnect.Compression.UnTarFiles(string, string)", span="666-666", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_308 [label="var inStream = File.OpenRead(source)", span="668-668", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_310 [label="tarArchive.ExtractContents(destination)", span="670-670", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_309 [label="var tarArchive = TarArchive.CreateInputTarArchive(inStream)", span="669-669", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_312 [label="inStream.Close()", span="672-672", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_311 [label="tarArchive.Close()", span="671-671", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_313 [label="Exit QuantConnect.Compression.UnTarFiles(string, string)", span="666-666", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="GDAXBrokerageModel.cs"];
m0_213 [label="Entry StreamReader.cstr", span="", cluster="StreamReader.cstr", file="GDAXBrokerageModel.cs"];
m0_212 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="GDAXBrokerageModel.cs"];
m0_179 [label="var entry = new ZipEntry(Path.GetFileName(file))", span="395-395", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_173 [label="Entry QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="380-380", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_174 [label="var zipStream = new ZipOutputStream(File.Create(destination))", span="384-384", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_176 [label=files, span="387-387", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_175 [label="var buffer = new byte[4096]", span="386-386", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_180 [label="zipStream.PutNextEntry(entry)", span="396-396", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_182 [label="StreamUtils.Copy(fstream, zipStream, buffer)", span="399-399", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_177 [label="!File.Exists(file)", span="389-389", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_183 [label=Exception, span="404-404", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_178 [label="Log.Trace(''ZipFiles(): File does not exist: '' + file)", span="391-391", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_181 [label="var fstream = File.OpenRead(file)", span="397-397", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_184 [label="Log.Error(err)", span="406-406", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_185 [label="Exit QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="380-380", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_315 [label="Entry Unk.ExtractContents", span="", cluster="Unk.ExtractContents", file="GDAXBrokerageModel.cs"];
m0_211 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="GDAXBrokerageModel.cs"];
m0_356 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="GDAXBrokerageModel.cs"];
m0_326 [label="Entry GZipInputStream.cstr", span="", cluster="GZipInputStream.cstr", file="GDAXBrokerageModel.cs"];
m0_302 [label="Entry ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", span="", cluster="ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", file="GDAXBrokerageModel.cs"];
m0_268 [label="var entry = zipStream.GetNextEntry()", span="583-583", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_264 [label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="571-571", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_265 [label="StreamReader reader = null", span="573-573", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_267 [label="var zipStream = new ZipInputStream(zipstream)", span="580-580", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_266 [label="MemoryStream file", span="577-577", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_270 [label="zipStream.Read(buffer, 0, (int)entry.Size)", span="585-585", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_269 [label="var buffer = new byte[entry.Size]", span="584-584", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_271 [label="file = new MemoryStream(buffer)", span="588-588", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_272 [label="reader = new StreamReader(file)", span="592-592", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_273 [label=Exception, span="594-594", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_275 [label="return reader;", span="599-599", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_274 [label="Log.Error(err)", span="596-596", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_276 [label="Exit QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="571-571", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_251 [label=firstEntryOnly, span="544-544", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="GDAXBrokerageModel.cs"];
m0_232 [label="Entry QuantConnect.Compression.ReadLinesImpl(string, bool)", span="540-540", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="GDAXBrokerageModel.cs"];
m0_250 [label="var zip = ZipFile.Read(filename)", span="542-542", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="GDAXBrokerageModel.cs"];
m0_253 [label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="547-547", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="GDAXBrokerageModel.cs"];
m0_254 [label="yield break;", span="548-548", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="GDAXBrokerageModel.cs"];
m0_256 [label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="552-552", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="GDAXBrokerageModel.cs"];
m0_252 [label="var entry = zip[0]", span="546-546", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="GDAXBrokerageModel.cs"];
m0_255 [label=zip, span="550-550", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="GDAXBrokerageModel.cs"];
m0_257 [label="Exit QuantConnect.Compression.ReadLinesImpl(string, bool)", span="540-540", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="GDAXBrokerageModel.cs"];
m0_305 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="GDAXBrokerageModel.cs"];
m0_333 [label="tar.CopyEntryContents(output)", span="708-708", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="GDAXBrokerageModel.cs"];
m0_327 [label="Entry QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="697-697", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="GDAXBrokerageModel.cs"];
m0_328 [label="var tar = new TarInputStream(isTarGz ? (Stream)new GZipInputStream(stream) : stream)", span="699-699", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="GDAXBrokerageModel.cs"];
m0_334 [label="yield return new KeyValuePair<string, byte[]>(entry.Name, output.ToArray());", span="709-709", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="GDAXBrokerageModel.cs"];
m0_329 [label="TarEntry entry", span="701-701", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="GDAXBrokerageModel.cs"];
m0_330 [label="(entry = tar.GetNextEntry()) != null", span="702-702", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="GDAXBrokerageModel.cs"];
m0_331 [label="entry.IsDirectory", span="704-704", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="GDAXBrokerageModel.cs"];
m0_332 [label="var output = new MemoryStream()", span="706-706", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="GDAXBrokerageModel.cs"];
m0_335 [label="Exit QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="697-697", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="GDAXBrokerageModel.cs"];
m0_239 [label="Entry Unk.ReadZipEntry", span="", cluster="Unk.ReadZipEntry", file="GDAXBrokerageModel.cs"];
m0_214 [label="Entry Unk.OpenReader", span="", cluster="Unk.OpenReader", file="GDAXBrokerageModel.cs"];
m0_304 [label="Entry Unk.GetInputStream", span="", cluster="Unk.GetInputStream", file="GDAXBrokerageModel.cs"];
m0_289 [label="var entryFileName = Path.GetFileName(zipEntry.Name)", span="630-630", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_278 [label="Entry QuantConnect.Compression.UnzipToFolder(string)", span="607-607", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_279 [label="var files = new List<string>()", span="610-610", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_280 [label="var slash = zipFile.LastIndexOf(Path.DirectorySeparatorChar)", span="611-611", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_283 [label="outFolder = zipFile.Substring(0, slash)", span="615-615", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_285 [label="var fs = File.OpenRead(zipFile)", span="621-621", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_294 [label="files.Add(fullZipToPath)", span="640-640", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_297 [label="return files;", span="658-658", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_281 [label="var outFolder = ''''", span="612-612", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_282 [label="slash > 0", span="613-613", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_293 [label="var fullZipToPath = Path.Combine(outFolder, entryFileName)", span="637-637", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_284 [label="ICSharpCode.SharpZipLib.Zip.ZipFile zf = null", span="617-617", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_286 [label="zf = new ICSharpCode.SharpZipLib.Zip.ZipFile(fs)", span="622-622", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_287 [label=zf, span="624-624", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_292 [label="var zipStream = zf.GetInputStream(zipEntry)", span="634-634", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_288 [label="!zipEntry.IsFile", span="627-627", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_290 [label="entryFileName == null", span="631-631", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_291 [label="var buffer = new byte[4096]", span="633-633", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_296 [label="StreamUtils.Copy(zipStream, streamWriter, buffer)", span="646-646", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_295 [label="var streamWriter = File.Create(fullZipToPath)", span="644-644", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_298 [label="Exit QuantConnect.Compression.UnzipToFolder(string)", span="607-607", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="GDAXBrokerageModel.cs"];
m0_303 [label="Entry Unk.GetFileName", span="", cluster="Unk.GetFileName", file="GDAXBrokerageModel.cs"];
m0_197 [label="throw new ArgumentException(''Unable to locate zip entry with name: '' + zipEntryName);", span="445-445", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_190 [label="Entry QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="430-430", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_191 [label="StreamReader reader = null", span="432-432", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_193 [label="File.Exists(filename)", span="437-437", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_194 [label="zip = new ZipFile(filename)", span="441-441", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_195 [label="var entry = zip.FirstOrDefault(x => zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0)", span="442-442", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_205 [label="Log.Error(''Data.UnZip(2): File doesn't exist: '' + filename)", span="459-459", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_207 [label="Log.Error(err, ''File: '' + filename)", span="464-464", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_192 [label="zip = null", span="433-433", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_208 [label="return reader;", span="466-466", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_201 [label="zip != null", span="453-453", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_202 [label="zip.Dispose()", span="453-453", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_196 [label="entry == null", span="443-443", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_198 [label="reader = new StreamReader(entry.OpenReader())", span="448-448", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_199 [label=Exception, span="450-450", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_206 [label=Exception, span="462-462", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_203 [label="reader != null", span="454-454", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_204 [label="reader.Close()", span="454-454", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_200 [label="Log.Error(err, ''Inner try/catch'')", span="452-452", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_209 [label="Exit QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="430-430", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_93 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="GDAXBrokerageModel.cs"];
m0_28 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="GDAXBrokerageModel.cs"];
m0_136 [label="Entry QuantConnect.Compression.ZipDirectory(string, string, bool)", span="317-317", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_137 [label="File.Exists(destination)", span="321-321", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_138 [label="File.Delete(destination)", span="321-321", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_139 [label="System.IO.Compression.ZipFile.CreateFromDirectory(directory, destination, CompressionLevel.Fastest, includeRootInZip)", span="322-322", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_140 [label="return true;", span="323-323", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_141 [label=Exception, span="325-325", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_142 [label="Log.Error(err)", span="327-327", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_143 [label="return false;", span="328-328", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_144 [label="Exit QuantConnect.Compression.ZipDirectory(string, string, bool)", span="317-317", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_238 [label="Entry KeyValuePair<string, IEnumerable<string>>.cstr", span="", cluster="KeyValuePair<string, IEnumerable<string>>.cstr", file="GDAXBrokerageModel.cs"];
m0_236 [label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="511-511", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_233 [label="Entry QuantConnect.Compression.Unzip(System.IO.Stream)", span="505-505", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_234 [label="var zip = ZipFile.Read(stream)", span="507-507", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_235 [label=zip, span="509-509", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_237 [label="Exit QuantConnect.Compression.Unzip(System.IO.Stream)", span="505-505", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="GDAXBrokerageModel.cs"];
m0_121 [label="Entry QuantConnect.Compression.Zip(string, bool)", span="285-285", cluster="QuantConnect.Compression.Zip(string, bool)", file="GDAXBrokerageModel.cs"];
m0_122 [label="return Zip(textPath, Path.GetFileName(textPath), deleteOriginal);", span="287-287", cluster="QuantConnect.Compression.Zip(string, bool)", file="GDAXBrokerageModel.cs"];
m0_123 [label="Exit QuantConnect.Compression.Zip(string, bool)", span="285-285", cluster="QuantConnect.Compression.Zip(string, bool)", file="GDAXBrokerageModel.cs"];
m0_169 [label="Entry Unk.Combine", span="", cluster="Unk.Combine", file="GDAXBrokerageModel.cs"];
m0_301 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="GDAXBrokerageModel.cs"];
m0_217 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="GDAXBrokerageModel.cs"];
m0_94 [label="Entry Unk.Copy", span="", cluster="Unk.Copy", file="GDAXBrokerageModel.cs"];
m0_187 [label="Entry QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="417-417", cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_188 [label="return Unzip(filename, null, out zip);", span="419-419", cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_189 [label="Exit QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="417-417", cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="GDAXBrokerageModel.cs"];
m0_337 [label="Entry Unk.CopyEntryContents", span="", cluster="Unk.CopyEntryContents", file="GDAXBrokerageModel.cs"];
m0_222 [label="Entry QuantConnect.Compression.Unzip(string)", span="480-480", cluster="QuantConnect.Compression.Unzip(string)", file="GDAXBrokerageModel.cs"];
m0_223 [label="!File.Exists(filename)", span="482-482", cluster="QuantConnect.Compression.Unzip(string)", file="GDAXBrokerageModel.cs"];
m0_224 [label="Log.Error(''Compression.Unzip(): File does not exist: '' + filename)", span="484-484", cluster="QuantConnect.Compression.Unzip(string)", file="GDAXBrokerageModel.cs"];
m0_226 [label="return ReadLinesImpl(filename);", span="490-490", cluster="QuantConnect.Compression.Unzip(string)", file="GDAXBrokerageModel.cs"];
m0_225 [label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="485-485", cluster="QuantConnect.Compression.Unzip(string)", file="GDAXBrokerageModel.cs"];
m0_227 [label=Exception, span="492-492", cluster="QuantConnect.Compression.Unzip(string)", file="GDAXBrokerageModel.cs"];
m0_228 [label="Log.Error(err)", span="494-494", cluster="QuantConnect.Compression.Unzip(string)", file="GDAXBrokerageModel.cs"];
m0_229 [label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="496-496", cluster="QuantConnect.Compression.Unzip(string)", file="GDAXBrokerageModel.cs"];
m0_230 [label="Exit QuantConnect.Compression.Unzip(string)", span="480-480", cluster="QuantConnect.Compression.Unzip(string)", file="GDAXBrokerageModel.cs"];
m0_54 [label="stream.PutNextEntry(entry)", span="151-151", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_50 [label="Entry QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="143-143", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_51 [label="var stream = new ZipOutputStream(File.Create(zipPath))", span="147-147", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_53 [label="var entry = new ZipEntry(zipEntry)", span="150-150", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_55 [label=lines, span="152-152", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_52 [label="var writer = new StreamWriter(stream)", span="148-148", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_56 [label="writer.WriteLine(line)", span="154-154", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_57 [label="return true;", span="157-157", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_58 [label=Exception, span="159-159", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_59 [label="Log.Error(err)", span="161-161", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_60 [label="return false;", span="162-162", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_61 [label="Exit QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="143-143", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs"];
m0_336 [label="Entry TarInputStream.cstr", span="", cluster="TarInputStream.cstr", file="GDAXBrokerageModel.cs"];
m0_117 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="GDAXBrokerageModel.cs"];
m0_145 [label="Entry System.IO.File.Exists(string)", span="0-0", cluster="System.IO.File.Exists(string)", file="GDAXBrokerageModel.cs"];
m0_63 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)", file="GDAXBrokerageModel.cs"];
m0_103 [label="stream.PutNextEntry(entry)", span="253-253", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_96 [label="Entry QuantConnect.Compression.Zip(string, string, bool)", span="239-239", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_97 [label="var zipPath = ''''", span="241-241", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_99 [label="zipPath = textPath.Replace(''.csv'', ''.zip'')", span="246-246", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_102 [label="var entry = new ZipEntry(zipEntryName)", span="252-252", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_104 [label="var fs = File.OpenRead(textPath)", span="255-255", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_111 [label=deleteOriginal, span="270-270", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_112 [label="File.Delete(textPath)", span="270-270", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_98 [label="var buffer = new byte[4096]", span="245-245", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_106 [label="sourceBytes = fs.Read(buffer, 0, buffer.Length)", span="260-260", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_107 [label="stream.Write(buffer, 0, sourceBytes)", span="261-261", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_100 [label="zipPath = zipPath.Replace(''.txt'', ''.zip'')", span="247-247", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_101 [label="var stream = new ZipOutputStream(File.Create(zipPath))", span="249-249", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_115 [label="return zipPath;", span="276-276", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_109 [label="stream.Finish()", span="266-266", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_110 [label="stream.Close()", span="267-267", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_105 [label="int sourceBytes", span="257-257", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_108 [label="sourceBytes > 0", span="263-263", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_113 [label=Exception, span="272-272", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_114 [label="Log.Error(err)", span="274-274", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_116 [label="Exit QuantConnect.Compression.Zip(string, string, bool)", span="239-239", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="GDAXBrokerageModel.cs"];
m0_349 [label="tarEntry.IsDirectory", span="738-738", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_340 [label="Entry QuantConnect.Compression.UnTar(string)", span="720-720", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_341 [label="var gzip = (source.Substring(Math.Max(0, source.Length - 6)) == ''tar.gz'')", span="723-723", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_352 [label="yield return new KeyValuePair<string, byte[]>(tarEntry.Name, stream.ToArray());", span="743-743", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_342 [label="var file = File.OpenRead(source)", span="725-725", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_344 [label=gzip, span="729-729", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_343 [label="var tarIn = new TarInputStream(file)", span="727-727", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_345 [label="var gzipStream = new GZipInputStream(file)", span="731-731", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_348 [label="(tarEntry = tarIn.GetNextEntry()) != null", span="736-736", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_351 [label="tarIn.CopyEntryContents(stream)", span="742-742", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_353 [label="tarIn.Close()", span="746-746", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_347 [label="TarEntry tarEntry", span="735-735", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_346 [label="tarIn = new TarInputStream(gzipStream)", span="732-732", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_350 [label="var stream = new MemoryStream()", span="740-740", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_354 [label="Exit QuantConnect.Compression.UnTar(string)", span="720-720", cluster="QuantConnect.Compression.UnTar(string)", file="GDAXBrokerageModel.cs"];
m0_78 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="GDAXBrokerageModel.cs"];
m0_119 [label="Entry System.IO.FileStream.Read(byte[], int, int)", span="0-0", cluster="System.IO.FileStream.Read(byte[], int, int)", file="GDAXBrokerageModel.cs"];
m0_172 [label="Entry Unk.ExtractToFile", span="", cluster="Unk.ExtractToFile", file="GDAXBrokerageModel.cs"];
m0_167 [label="Entry Unk.ExtractToDirectory", span="", cluster="Unk.ExtractToDirectory", file="GDAXBrokerageModel.cs"];
m0_168 [label="Entry ZipArchive.cstr", span="", cluster="ZipArchive.cstr", file="GDAXBrokerageModel.cs"];
m0_357 [label=string, span="", file="GDAXBrokerageModel.cs"];
m2_61 [label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.ImmediateFillModel()", span="26-26", cluster="QuantConnect.Orders.Fills.ImmediateFillModel.ImmediateFillModel()", file="ImmediateFillModelTests.cs"];
m2_63 [label="Entry QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", span="89-89", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_64 [label="var noon = new DateTime(2014, 6, 24, 12, 0, 0)", span="91-91", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_65 [label="var timeKeeper = new TimeKeeper(noon.ConvertToUtc(TimeZones.NewYork), new[] { TimeZones.NewYork })", span="92-92", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_70 [label="security.SetMarketPrice(new IndicatorDataPoint(Symbols.SPY, noon, 101.123m))", span="98-98", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_66 [label="var symbol = Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)", span="93-93", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_69 [label="security.SetLocalTimeKeeper(timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork))", span="97-97", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_67 [label="var config = new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, false)", span="95-95", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_71 [label="security.Cache.AddData(new TradeBar(DateTime.MinValue, symbol, 1.0m, 1.0m, 1.0m, 1.0m, 1.0m))", span="102-102", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_74 [label="var order = new MarketOrder(symbol, 1000, DateTime.Now)", span="106-106", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_68 [label="var security = new Security(SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours(), config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="96-96", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_72 [label="security.Cache.AddData(new Tick(config, ''42525000,1000000,100,A,@,0'', DateTime.MinValue))", span="103-103", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_75 [label="var fill = fillModel.MarketFill(security, order)", span="107-107", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_73 [label="var fillModel = new ImmediateFillModel()", span="105-105", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_76 [label="Assert.AreEqual(fill.FillPrice, 1.0m)", span="110-110", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_77 [label="Exit QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", span="89-89", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelDoesNotUseTicksWhenThereIsNoTickSubscription()", file="ImmediateFillModelTests.cs"];
m2_59 [label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="94-94", cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="ImmediateFillModelTests.cs"];
m2_26 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="ImmediateFillModelTests.cs"];
m2_35 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="ImmediateFillModelTests.cs"];
m2_60 [label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="215-215", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="ImmediateFillModelTests.cs"];
m2_22 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="ImmediateFillModelTests.cs"];
m2_27 [label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="ImmediateFillModelTests.cs"];
m2_30 [label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93", cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="ImmediateFillModelTests.cs"];
m2_31 [label="Entry QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="595-595", cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="ImmediateFillModelTests.cs"];
m2_33 [label="Entry QuantConnect.Brokerages.FxcmBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="165-165", cluster="QuantConnect.Brokerages.FxcmBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="ImmediateFillModelTests.cs"];
m2_23 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="ImmediateFillModelTests.cs"];
m2_0 [label="Entry QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", span="34-34", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_1 [label="var symbol = Symbol.Create(''EURUSD'', SecurityType.Forex, ''fxcm'')", span="36-36", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_16 [label="var quantity = direction == OrderDirection.Buy ? 1 : -1", span="56-56", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_19 [label="var expected = direction == OrderDirection.Buy ? askPrice : bidPrice", span="60-60", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_2 [label="var exchangeHours = SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork)", span="37-37", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_5 [label="var config = new SubscriptionDataConfig(typeof(Tick), symbol, Resolution.Tick, TimeZones.NewYork, TimeZones.NewYork, true, true, false)", span="40-40", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_15 [label="security.SetMarketPrice(new Tick(DateTime.Now, symbol, bidPrice, askPrice))", span="54-54", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_17 [label="var order = new MarketOrder(symbol, quantity, DateTime.Now)", span="57-57", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_3 [label="var quoteCash = new Cash(''USD'', 1000, 1)", span="38-38", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_6 [label="var security = new Forex(exchangeHours, quoteCash, config, symbolProperties)", span="41-41", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_4 [label="var symbolProperties = SymbolProperties.GetDefault(''USD'')", span="39-39", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_7 [label="var reference = DateTime.Now", span="43-43", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_10 [label="security.SetLocalTimeKeeper(timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork))", span="46-46", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_12 [label="var fillModel = brokerageModel.GetFillModel(security)", span="49-49", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_18 [label="var fill = fillModel.MarketFill(security, order)", span="58-58", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_8 [label="var referenceUtc = reference.ConvertToUtc(TimeZones.NewYork)", span="44-44", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_9 [label="var timeKeeper = new TimeKeeper(referenceUtc)", span="45-45", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_11 [label="var brokerageModel = new FxcmBrokerageModel()", span="48-48", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_13 [label="decimal bidPrice = 1.13739m", span="51-51", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_14 [label="decimal askPrice = 1.13746m", span="52-52", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_20 [label="Assert.AreEqual(expected, fill.FillPrice)", span="61-61", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_21 [label="Exit QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", span="34-34", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.MarketOrderFillsAtBidAsk(QuantConnect.Orders.OrderDirection)", file="ImmediateFillModelTests.cs"];
m2_38 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ImmediateFillModelTests.cs"];
m2_57 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="ImmediateFillModelTests.cs"];
m2_32 [label="Entry QuantConnect.Brokerages.FxcmBrokerageModel.FxcmBrokerageModel(QuantConnect.AccountType)", span="55-55", cluster="QuantConnect.Brokerages.FxcmBrokerageModel.FxcmBrokerageModel(QuantConnect.AccountType)", file="ImmediateFillModelTests.cs"];
m2_36 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="ImmediateFillModelTests.cs"];
m2_29 [label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46", cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="ImmediateFillModelTests.cs"];
m2_39 [label="Entry QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", span="65-65", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_40 [label="var noon = new DateTime(2014, 6, 24, 12, 0, 0)", span="67-67", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_41 [label="var timeKeeper = new TimeKeeper(noon.ConvertToUtc(TimeZones.NewYork), new[] { TimeZones.NewYork })", span="68-68", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_46 [label="security.SetMarketPrice(new IndicatorDataPoint(Symbols.SPY, noon, 101.123m))", span="73-73", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_42 [label="var symbol = Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)", span="69-69", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_45 [label="security.SetLocalTimeKeeper(timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork))", span="72-72", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_43 [label="var config = new SubscriptionDataConfig(typeof(Tick), Symbols.SPY, Resolution.Tick, TimeZones.NewYork, TimeZones.NewYork, true, true, false)", span="70-70", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_47 [label="security.Cache.AddData(new TradeBar(DateTime.MinValue, symbol, 1.0m, 1.0m, 1.0m, 1.0m, 1.0m))", span="77-77", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_50 [label="var order = new MarketOrder(symbol, 1000, DateTime.Now)", span="81-81", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_44 [label="var security = new Security(SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours(), config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="71-71", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_48 [label="security.Cache.AddData(new Tick(config, ''42525000,1000000,100,A,@,0'', DateTime.MinValue))", span="78-78", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_51 [label="var fill = fillModel.MarketFill(security, order)", span="82-82", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_49 [label="var fillModel = new ImmediateFillModel()", span="80-80", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_52 [label="Assert.AreEqual(fill.FillPrice, 100m)", span="85-85", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_53 [label="Exit QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", span="65-65", cluster="QuantConnect.Tests.Common.Orders.Fills.ImmediateFillModelTests.ImmediateFillModelUsesPriceForTicksWhenBidAskSpreadsAreNotAvailable()", file="ImmediateFillModelTests.cs"];
m2_55 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="317-317", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="ImmediateFillModelTests.cs"];
m2_56 [label="Entry QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="258-258", cluster="QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", file="ImmediateFillModelTests.cs"];
m2_37 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="30-30", cluster="QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModelTests.cs"];
m2_54 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="ImmediateFillModelTests.cs"];
m2_34 [label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="ImmediateFillModelTests.cs"];
m2_25 [label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84", cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="ImmediateFillModelTests.cs"];
m2_62 [label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="36-36", cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModelTests.cs"];
m2_24 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="65-65", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="ImmediateFillModelTests.cs"];
m2_58 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158", cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="ImmediateFillModelTests.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n0 -> n6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n0 -> n8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n0 -> n9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n0 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
n0 -> n12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n0 -> n24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n0 -> n25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
n0 -> n26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
n0 -> n29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n0 -> n55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n1 -> n2  [key=0, style=solid];
n1 -> n12  [key=1, style=dashed, color=darkseagreen4, label=isLong];
n1 -> n31  [key=1, style=dashed, color=darkseagreen4, label=isLong];
n2 -> n3  [key=0, style=solid];
n2 -> n17  [key=1, style=dashed, color=darkseagreen4, label=isShort];
n2 -> n42  [key=1, style=dashed, color=darkseagreen4, label=isShort];
n4 -> n5  [key=0, style=solid];
n4 -> n13  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n4 -> n15  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n4 -> n28  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n4 -> n34  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n4 -> n35  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n4 -> n45  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n4 -> n55  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n5 -> n6  [key=0, style=solid];
n5 -> n18  [key=1, style=dashed, color=darkseagreen4, label=absoluteHoldingsQuantity];
n5 -> n20  [key=1, style=dashed, color=darkseagreen4, label=absoluteHoldingsQuantity];
n6 -> n7  [key=0, style=solid];
n6 -> n14  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n6 -> n15  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n6 -> n19  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n6 -> n20  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n6 -> n34  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n6 -> n51  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n6 -> n55  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n8 -> n9  [key=0, style=solid];
n8 -> n57  [key=2, style=dotted];
n8 -> n58  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=1, style=dashed, color=darkseagreen4, label=feeThisOrder];
n9 -> n25  [key=1, style=dashed, color=darkseagreen4, label=feeThisOrder];
n10 -> n11  [key=0, style=solid];
n10 -> n59  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n60  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n17  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n14 -> n16  [key=0, style=solid];
n14 -> n23  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n14 -> n24  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n14 -> n25  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n15 -> n16  [key=0, style=solid];
n15 -> n23  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n15 -> n24  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n15 -> n25  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n17 -> n18  [key=0, style=solid];
n17 -> n22  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=0, style=solid];
n19 -> n21  [key=0, style=solid];
n19 -> n23  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n19 -> n24  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n19 -> n25  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n20 -> n21  [key=0, style=solid];
n20 -> n23  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n20 -> n24  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n20 -> n25  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n23 -> n24  [key=0, style=solid];
n23 -> n61  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n62  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n63  [key=2, style=dotted];
n25 -> n64  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n57  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n65  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n55  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n30 -> n53  [key=0, style=solid];
n30 -> n55  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n36  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n34  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n34 -> n55  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n35 -> n53  [key=0, style=solid];
n35 -> n55  [key=0, style=solid];
n35 -> n35  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n35 -> n37  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n37 -> n38  [key=0, style=solid];
n37 -> n37  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n37 -> n40  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n37 -> n55  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n39 -> n53  [key=0, style=solid];
n39 -> n55  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n43 -> n50  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n45  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n45 -> n48  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n45 -> n51  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n45 -> n52  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n47 -> n53  [key=0, style=solid];
n47 -> n55  [key=0, style=solid];
n47 -> n51  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n51 -> n52  [key=0, style=solid];
n51 -> n57  [key=2, style=dotted];
n51 -> n51  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n51 -> n55  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n52 -> n53  [key=0, style=solid];
n52 -> n55  [key=0, style=solid];
n52 -> n52  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
n55 -> n56  [key=0, style=solid];
n55 -> n67  [key=2, style=dotted];
n55 -> n68  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n42  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n22  [key=1, style=dashed, color=darkseagreen4, label=closedPosition];
n42 -> n43  [key=0, style=solid];
n42 -> n53  [key=0, style=solid];
n42 -> n55  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n26  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n31  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n23  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n7 -> n24  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n7 -> n25  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
n16 -> n22  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n53  [key=0, style=solid];
n40 -> n55  [key=0, style=solid];
n41 -> n53  [key=0, style=solid];
n41 -> n55  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n53  [key=0, style=solid];
n48 -> n55  [key=0, style=solid];
n49 -> n53  [key=0, style=solid];
n49 -> n55  [key=0, style=solid];
n49 -> n51  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
n54 -> n55  [key=0, style=solid];
n54 -> n66  [key=2, style=dotted];
n56 -> n0  [key=0, style=bold, color=blue];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_80  [key=2, style=dotted];
m0_69 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label=entry];
m0_69 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label=entry];
m0_69 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=entry];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_78  [key=2, style=dotted];
m0_65 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=data];
m0_65 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=data];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_25  [key=2, style=dotted];
m0_73 -> m0_68  [key=0, style=solid];
m0_73 -> m0_82  [key=2, style=dotted];
m0_73 -> m0_83  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_79  [key=2, style=dotted];
m0_67 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m0_67 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_74  [key=0, style=solid];
m0_68 -> m0_76  [key=0, style=solid];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_81  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_74  [key=0, style=solid];
m0_70 -> m0_76  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> n66  [key=2, style=dotted];
m0_77 -> m0_64  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> n66  [key=2, style=dotted];
m0_262 -> m0_258  [key=0, style=bold, color=blue];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_261  [key=0, style=bold, color=crimson];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_213  [key=2, style=dotted];
m0_259 -> m0_214  [key=2, style=dotted];
m0_259 -> m0_261  [key=1, style=dashed, color=darkseagreen4, label=entryReader];
m0_261 -> m0_260  [key=0, style=solid];
m0_261 -> m0_263  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_262  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_24  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_125 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_20  [key=2, style=dotted];
m0_126 -> m0_21  [key=2, style=dotted];
m0_126 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_126 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_22  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_25  [key=2, style=dotted];
m0_130 -> m0_23  [key=2, style=dotted];
m0_130 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=dataReader];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_27  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_129 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_26  [key=2, style=dotted];
m0_132 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=sourceBytes];
m0_131 -> m0_132  [key=0, style=solid];
m0_134 -> m0_131  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_135 -> m0_125  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_244 -> m0_248  [key=0, style=solid];
m0_244 -> m0_232  [key=2, style=dotted];
m0_244 -> m0_249  [key=2, style=dotted];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_240 -> m0_244  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_244  [key=0, style=solid];
m0_241 -> m0_145  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_217  [key=2, style=dotted];
m0_243 -> m0_248  [key=0, style=solid];
m0_243 -> m0_231  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> n66  [key=2, style=dotted];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_231  [key=2, style=dotted];
m0_248 -> m0_240  [key=0, style=bold, color=blue];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_27  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_24  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_84 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_93  [key=2, style=dotted];
m0_85 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=memoryStream];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_22  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_25  [key=2, style=dotted];
m0_90 -> m0_94  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_20  [key=2, style=dotted];
m0_86 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_86 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_95  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_92 -> m0_84  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_23  [key=2, style=dotted];
m0_6 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=file];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=0, style=solid];
m0_32 -> m0_7  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=allow];
m0_35 -> m0_28  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_43  [key=0, style=solid];
m0_31 -> m0_37  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_31 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>"];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_36  [key=0, style=solid];
m0_33 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_33 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_22  [key=2, style=dotted];
m0_36 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=file];
m0_36 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=file];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_38  [key=2, style=dotted];
m0_34 -> m0_20  [key=2, style=dotted];
m0_34 -> m0_21  [key=2, style=dotted];
m0_34 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_34 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_34 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_34 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_37 -> m0_29  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_24  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=0, style=solid];
m0_19 -> m0_0  [key=0, style=bold, color=blue];
m0_21 -> m0_7  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=allow];
m0_24 -> m0_28  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_20 -> m0_26  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_25  [key=0, style=solid];
m0_26 -> m0_18  [key=0, style=bold, color=blue];
m0_218 -> m0_219  [key=0, style=solid];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_221  [key=2, style=dotted];
m0_220 -> m0_218  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_22  [key=2, style=dotted];
m0_5 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=entry];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m0_0 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m0_1 -> m0_2  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_20  [key=2, style=dotted];
m0_3 -> m0_21  [key=2, style=dotted];
m0_3 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_3 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_3 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_3 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [key=0, style=solid];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=filename];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_2 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_2 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_4  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal GetLeverage"];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_26  [key=2, style=dotted];
m0_10 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=sourceBytes];
m0_10 -> m0_16  [key=2, style=dotted];
m0_10 -> m0_17  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_27  [key=2, style=dotted];
m0_11 -> m0_14  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_24  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_28  [key=2, style=dotted];
m0_13 -> m0_15  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_18  [key=0, style=solid];
m0_14 -> m0_29  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_25  [key=2, style=dotted];
m0_8 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=ms];
m0_8 -> m0_11  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_12 -> m0_9  [key=0, style=solid];
m0_12 -> m0_4  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_7  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_147 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_147 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_147 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_150  [key=0, style=solid];
m0_148 -> m0_145  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_152  [key=0, style=solid];
m0_151 -> m0_162  [key=0, style=solid];
m0_151 -> m0_167  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_168  [key=2, style=dotted];
m0_152 -> m0_118  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_169  [key=2, style=dotted];
m0_155 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=filepath];
m0_155 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=filepath];
m0_149 -> m0_166  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_162  [key=0, style=solid];
m0_153 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label=file];
m0_153 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=file];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_153  [key=0, style=solid];
m0_162 -> m0_166  [key=0, style=solid];
m0_161 -> m0_153  [key=0, style=solid];
m0_161 -> m0_172  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_158  [key=0, style=solid];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_117  [key=2, style=dotted];
m0_157 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=filepath];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_170  [key=2, style=dotted];
m0_158 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m0_158 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_161  [key=0, style=solid];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_171  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> n66  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_166 -> m0_147  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_26  [key=2, style=dotted];
m0_40 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=sourceBytes];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_27  [key=2, style=dotted];
m0_41 -> m0_47  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid, color=green];
m0_43 -> m0_28  [key=2, style=dotted];
m0_43 -> m0_46  [key=0, style=solid, color=green];
m0_44 -> m0_45  [key=0, style=solid, color=green];
m0_44 -> m0_48  [key=0, style=solid];
m0_44 -> m0_29  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_25  [key=2, style=dotted];
m0_38 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=file];
m0_38 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=ms];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_44  [key=1, style=dashed, color=green, label=string];
m0_42 -> m0_39  [key=0, style=solid];
m0_42 -> m0_35  [key=0, style=solid];
m0_42 -> m0_46  [key=1, style=dashed, color=green, label=allow];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_7  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid, color=green];
m0_45 -> m0_28  [key=2, style=dotted, color=green];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_46 -> n66  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_39  [key=0, style=bold, color=blue];
m0_49 -> m0_31  [key=0, style=bold, color=blue];
m0_49 -> m0_45  [key=1, style=dashed, color=green, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_49 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationManager"];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_118  [key=2, style=dotted];
m0_318 -> m0_324  [key=1, style=dashed, color=darkseagreen4, label=inStream];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_315  [key=2, style=dotted];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_326  [key=2, style=dotted];
m0_319 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label=gzipStream];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_316  [key=2, style=dotted];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_314  [key=2, style=dotted];
m0_320 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label=tarArchive];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_29  [key=2, style=dotted];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_29  [key=2, style=dotted];
m0_325 -> m0_317  [key=0, style=bold, color=blue];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_118  [key=2, style=dotted];
m0_308 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label=inStream];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_315  [key=2, style=dotted];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_314  [key=2, style=dotted];
m0_309 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label=tarArchive];
m0_312 -> m0_313  [key=0, style=solid];
m0_312 -> m0_316  [key=2, style=dotted];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_29  [key=2, style=dotted];
m0_313 -> m0_307  [key=0, style=bold, color=blue];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_22  [key=2, style=dotted];
m0_179 -> m0_124  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_20  [key=2, style=dotted];
m0_174 -> m0_21  [key=2, style=dotted];
m0_174 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m0_174 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_183  [key=0, style=solid];
m0_176 -> m0_185  [key=0, style=solid];
m0_176 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=file];
m0_176 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label=file];
m0_176 -> m0_181  [key=1, style=dashed, color=darkseagreen4, label=file];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_24  [key=2, style=dotted];
m0_182 -> m0_176  [key=0, style=solid];
m0_182 -> m0_94  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_179  [key=0, style=solid];
m0_177 -> m0_145  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_178 -> m0_176  [key=0, style=solid];
m0_178 -> m0_186  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_118  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> n66  [key=2, style=dotted];
m0_185 -> m0_173  [key=0, style=bold, color=blue];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_80  [key=2, style=dotted];
m0_268 -> m0_270  [key=1, style=dashed, color=darkseagreen4, label=entry];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m0_265 -> m0_266  [key=0, style=solid];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_79  [key=2, style=dotted];
m0_267 -> m0_270  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m0_266 -> m0_267  [key=0, style=solid];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_81  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_271  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_25  [key=2, style=dotted];
m0_272 -> m0_273  [key=0, style=solid];
m0_272 -> m0_275  [key=0, style=solid];
m0_272 -> m0_277  [key=2, style=dotted];
m0_273 -> m0_274  [key=0, style=solid];
m0_275 -> m0_276  [key=0, style=solid];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> n66  [key=2, style=dotted];
m0_276 -> m0_264  [key=0, style=bold, color=blue];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_255  [key=0, style=solid];
m0_232 -> m0_250  [key=0, style=solid];
m0_232 -> m0_253  [key=0, style=bold, color=crimson];
m0_232 -> m0_254  [key=0, style=bold, color=crimson];
m0_232 -> m0_256  [key=0, style=bold, color=crimson];
m0_232 -> m0_251  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_81  [key=2, style=dotted];
m0_250 -> m0_252  [key=1, style=dashed, color=darkseagreen4, label=zip];
m0_250 -> m0_255  [key=1, style=dashed, color=darkseagreen4, label=zip];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_238  [key=2, style=dotted];
m0_253 -> m0_239  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_256 -> m0_255  [key=0, style=solid];
m0_256 -> m0_238  [key=2, style=dotted];
m0_256 -> m0_239  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_257  [key=0, style=solid];
m0_257 -> m0_232  [key=0, style=bold, color=blue];
m0_333 -> m0_334  [key=0, style=solid];
m0_333 -> m0_337  [key=2, style=dotted];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_334  [key=0, style=bold, color=crimson];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_336  [key=2, style=dotted];
m0_328 -> m0_326  [key=2, style=dotted];
m0_328 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label=tar];
m0_328 -> m0_333  [key=1, style=dashed, color=darkseagreen4, label=tar];
m0_334 -> m0_330  [key=0, style=solid];
m0_334 -> m0_338  [key=2, style=dotted];
m0_334 -> m0_339  [key=2, style=dotted];
m0_329 -> m0_330  [key=0, style=solid];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_335  [key=0, style=solid];
m0_330 -> m0_80  [key=2, style=dotted];
m0_330 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=entry];
m0_331 -> m0_332  [key=0, style=solid];
m0_331 -> m0_330  [key=0, style=solid];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_93  [key=2, style=dotted];
m0_332 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=output];
m0_335 -> m0_327  [key=0, style=bold, color=blue];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_303  [key=2, style=dotted];
m0_289 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label=entryFileName];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_280  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_278 -> m0_283  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_278 -> m0_285  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_299  [key=2, style=dotted];
m0_279 -> m0_294  [key=1, style=dashed, color=darkseagreen4, label=files];
m0_279 -> m0_297  [key=1, style=dashed, color=darkseagreen4, label=files];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_300  [key=2, style=dotted];
m0_280 -> m0_282  [key=1, style=dashed, color=darkseagreen4, label=slash];
m0_280 -> m0_283  [key=1, style=dashed, color=darkseagreen4, label=slash];
m0_283 -> m0_284  [key=0, style=solid];
m0_283 -> m0_301  [key=2, style=dotted];
m0_283 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label=outFolder];
m0_285 -> m0_286  [key=0, style=solid];
m0_285 -> m0_118  [key=2, style=dotted];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_306  [key=2, style=dotted];
m0_297 -> m0_298  [key=0, style=solid];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label=outFolder];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_284  [key=0, style=solid];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_305  [key=2, style=dotted];
m0_293 -> m0_295  [key=1, style=dashed, color=darkseagreen4, label=fullZipToPath];
m0_284 -> m0_285  [key=0, style=solid];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_302  [key=2, style=dotted];
m0_286 -> m0_292  [key=1, style=dashed, color=darkseagreen4, label=zf];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_297  [key=0, style=solid];
m0_287 -> m0_289  [key=1, style=dashed, color=darkseagreen4, label=zipEntry];
m0_287 -> m0_292  [key=1, style=dashed, color=darkseagreen4, label=zipEntry];
m0_292 -> m0_293  [key=0, style=solid];
m0_292 -> m0_304  [key=2, style=dotted];
m0_292 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_287  [key=0, style=solid];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_287  [key=0, style=solid];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_296 -> m0_287  [key=0, style=solid];
m0_296 -> m0_94  [key=2, style=dotted];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_21  [key=2, style=dotted];
m0_298 -> m0_278  [key=0, style=bold, color=blue];
m0_197 -> m0_206  [key=0, style=solid];
m0_197 -> m0_208  [key=0, style=solid];
m0_197 -> m0_212  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_190 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_190 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_190 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_190 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_190 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_190 -> m0_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_205  [key=0, style=solid];
m0_193 -> m0_145  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_210  [key=2, style=dotted];
m0_194 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m0_194 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m0_194 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_211  [key=2, style=dotted];
m0_195 -> m0_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_195 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=entry];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_208  [key=0, style=solid];
m0_205 -> m0_217  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> n66  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m0_208 -> m0_209  [key=0, style=solid];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_203  [key=0, style=solid];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_215  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_198  [key=0, style=solid];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_206  [key=0, style=solid];
m0_198 -> m0_208  [key=0, style=solid];
m0_198 -> m0_213  [key=2, style=dotted];
m0_198 -> m0_214  [key=2, style=dotted];
m0_198 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_198 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_199 -> m0_200  [key=0, style=solid];
m0_206 -> m0_207  [key=0, style=solid];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_206  [key=0, style=solid];
m0_203 -> m0_208  [key=0, style=solid];
m0_204 -> m0_206  [key=0, style=solid];
m0_204 -> m0_208  [key=0, style=solid];
m0_204 -> m0_216  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> n66  [key=2, style=dotted];
m0_209 -> m0_190  [key=0, style=bold, color=blue];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_136 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_139  [key=0, style=solid];
m0_137 -> m0_145  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_120  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_146  [key=2, style=dotted];
m0_140 -> m0_144  [key=0, style=solid];
m0_141 -> m0_142  [key=0, style=solid];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> n66  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_144 -> m0_136  [key=0, style=bold, color=blue];
m0_236 -> m0_235  [key=0, style=solid];
m0_236 -> m0_238  [key=2, style=dotted];
m0_236 -> m0_239  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_236  [key=0, style=bold, color=crimson];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_81  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_237  [key=0, style=solid];
m0_237 -> m0_233  [key=0, style=bold, color=blue];
m0_121 -> m0_122  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_124  [key=2, style=dotted];
m0_122 -> m0_96  [key=2, style=dotted];
m0_123 -> m0_121  [key=0, style=bold, color=blue];
m0_187 -> m0_188  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_190  [key=2, style=dotted];
m0_189 -> m0_187  [key=0, style=bold, color=blue];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_224  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_222 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_226  [key=0, style=solid];
m0_223 -> m0_145  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_217  [key=2, style=dotted];
m0_226 -> m0_230  [key=0, style=solid];
m0_226 -> m0_232  [key=2, style=dotted];
m0_225 -> m0_230  [key=0, style=solid];
m0_225 -> m0_231  [key=2, style=dotted];
m0_227 -> m0_228  [key=0, style=solid];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> n66  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_231  [key=2, style=dotted];
m0_230 -> m0_222  [key=0, style=bold, color=blue];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_24  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_50 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_20  [key=2, style=dotted];
m0_51 -> m0_21  [key=2, style=dotted];
m0_51 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_22  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_57  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_62  [key=2, style=dotted];
m0_52 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_56 -> m0_55  [key=0, style=solid];
m0_56 -> m0_63  [key=2, style=dotted];
m0_57 -> m0_61  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> n66  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_61 -> m0_50  [key=0, style=bold, color=blue];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_24  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_96 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_96 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_96 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_96 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_97 -> m0_98  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_117  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_22  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_118  [key=2, style=dotted];
m0_104 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label=fs];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_113  [key=0, style=solid];
m0_111 -> m0_115  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_115  [key=0, style=solid];
m0_112 -> m0_120  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_98 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_119  [key=2, style=dotted];
m0_106 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=sourceBytes];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_27  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_117  [key=2, style=dotted];
m0_100 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=zipPath];
m0_100 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=zipPath];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_20  [key=2, style=dotted];
m0_101 -> m0_21  [key=2, style=dotted];
m0_101 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_101 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_101 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_101 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_115 -> m0_116  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_28  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_29  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_108 -> m0_105  [key=0, style=solid];
m0_108 -> m0_109  [key=0, style=solid];
m0_113 -> m0_114  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> n66  [key=2, style=dotted];
m0_116 -> m0_96  [key=0, style=bold, color=blue];
m0_349 -> m0_350  [key=0, style=solid];
m0_349 -> m0_348  [key=0, style=solid];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_352  [key=0, style=bold, color=crimson];
m0_340 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_355  [key=2, style=dotted];
m0_341 -> m0_356  [key=2, style=dotted];
m0_341 -> m0_344  [key=1, style=dashed, color=darkseagreen4, label=gzip];
m0_352 -> m0_348  [key=0, style=solid];
m0_352 -> m0_338  [key=2, style=dotted];
m0_352 -> m0_339  [key=2, style=dotted];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_118  [key=2, style=dotted];
m0_342 -> m0_345  [key=1, style=dashed, color=darkseagreen4, label=file];
m0_344 -> m0_345  [key=0, style=solid];
m0_344 -> m0_347  [key=0, style=solid];
m0_343 -> m0_344  [key=0, style=solid];
m0_343 -> m0_336  [key=2, style=dotted];
m0_343 -> m0_348  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m0_343 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m0_343 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m0_345 -> m0_346  [key=0, style=solid];
m0_345 -> m0_326  [key=2, style=dotted];
m0_348 -> m0_349  [key=0, style=solid];
m0_348 -> m0_353  [key=0, style=solid];
m0_348 -> m0_80  [key=2, style=dotted];
m0_348 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label=tarEntry];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_337  [key=2, style=dotted];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_29  [key=2, style=dotted];
m0_347 -> m0_348  [key=0, style=solid];
m0_346 -> m0_347  [key=0, style=solid];
m0_346 -> m0_336  [key=2, style=dotted];
m0_346 -> m0_348  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m0_346 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m0_346 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m0_350 -> m0_351  [key=0, style=solid];
m0_350 -> m0_93  [key=2, style=dotted];
m0_350 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_354 -> m0_340  [key=0, style=bold, color=blue];
m0_357 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_54  [key=2, style=dotted];
m2_64 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=noon];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_29  [key=2, style=dotted];
m2_65 -> n63  [key=2, style=dotted];
m2_65 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=timeKeeper];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_57  [key=2, style=dotted];
m2_70 -> m2_35  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_22  [key=2, style=dotted];
m2_66 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_66 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_30  [key=2, style=dotted];
m2_69 -> m2_31  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_26  [key=2, style=dotted];
m2_67 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label=config];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_58  [key=2, style=dotted];
m2_71 -> m2_59  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_36  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_55  [key=2, style=dotted];
m2_68 -> m2_56  [key=2, style=dotted];
m2_68 -> m2_24  [key=2, style=dotted];
m2_68 -> m2_25  [key=2, style=dotted];
m2_68 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_68 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_68 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_68 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_60  [key=2, style=dotted];
m2_72 -> m2_59  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_62  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_61  [key=2, style=dotted];
m2_73 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=fillModel];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_38  [key=2, style=dotted];
m2_77 -> m2_63  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderDirection"];
m2_0 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderDirection"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_22  [key=2, style=dotted];
m2_1 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_1 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_1 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_16 -> m2_17  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_23  [key=2, style=dotted];
m2_2 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_26  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_34  [key=2, style=dotted];
m2_15 -> m2_35  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_36  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_24  [key=2, style=dotted];
m2_3 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=quoteCash];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_27  [key=2, style=dotted];
m2_6 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_6 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_6 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_6 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_25  [key=2, style=dotted];
m2_4 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=symbolProperties];
m2_7 -> m2_8  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_30  [key=2, style=dotted];
m2_10 -> m2_31  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_33  [key=2, style=dotted];
m2_12 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=fillModel];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_37  [key=2, style=dotted];
m2_18 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=fill];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> n63  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_29  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_32  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=bidPrice];
m2_13 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=bidPrice];
m2_13 -> m2_13  [key=3, color=darkorchid, style=bold, label="Local variable decimal bidPrice"];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=askPrice];
m2_14 -> m2_14  [key=3, color=darkorchid, style=bold, label="Local variable decimal askPrice"];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_38  [key=2, style=dotted];
m2_21 -> m2_0  [key=0, style=bold, color=blue];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_54  [key=2, style=dotted];
m2_40 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label=noon];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_29  [key=2, style=dotted];
m2_41 -> n63  [key=2, style=dotted];
m2_41 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=timeKeeper];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_57  [key=2, style=dotted];
m2_46 -> m2_35  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_22  [key=2, style=dotted];
m2_42 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_42 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_30  [key=2, style=dotted];
m2_45 -> m2_31  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_26  [key=2, style=dotted];
m2_43 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label=config];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_58  [key=2, style=dotted];
m2_47 -> m2_59  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_36  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_55  [key=2, style=dotted];
m2_44 -> m2_56  [key=2, style=dotted];
m2_44 -> m2_24  [key=2, style=dotted];
m2_44 -> m2_25  [key=2, style=dotted];
m2_44 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_44 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_44 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_44 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_60  [key=2, style=dotted];
m2_48 -> m2_59  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_62  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_61  [key=2, style=dotted];
m2_49 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label=fillModel];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_38  [key=2, style=dotted];
m2_53 -> m2_39  [key=0, style=bold, color=blue];
}
