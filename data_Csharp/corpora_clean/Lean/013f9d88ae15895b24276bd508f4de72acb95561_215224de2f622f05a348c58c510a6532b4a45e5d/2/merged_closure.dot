digraph  {
m0_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="411-411"];
m0_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="AccelerationBandsTests.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="413-413"];
m0_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="411-411"];
m0_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1366-1366"];
m0_413 [cluster="Unk.Split", file="AccelerationBandsTests.cs", label="Entry Unk.Split", span=""];
m0_274 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="AccelerationBandsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m0_175 [cluster="Unk.PlotIndicator", file="AccelerationBandsTests.cs", label="Entry Unk.PlotIndicator", span=""];
m0_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="412-412"];
m0_155 [cluster="Unk.ToArray", file="AccelerationBandsTests.cs", label="Entry Unk.ToArray", span=""];
m0_114 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m0_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="509-509"];
m0_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="var name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="511-511"];
m0_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="512-512"];
m0_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="513-513"];
m0_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="RegisterIndicator(symbol, filteredIdentity, ResolveConsolidator(symbol, resolution), pyselector)", span="515-515"];
m0_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="514-514"];
m0_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="return filteredIdentity;", span="516-516"];
m0_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="509-509"];
m0_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="459-459"];
m0_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="AccelerationBandsTests.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="461-461"];
m0_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="459-459"];
m0_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="279-279"];
m0_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution)", span="281-281"];
m0_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="279-279"];
m0_412 [cluster="Unk.Repr", file="AccelerationBandsTests.cs", label="Entry Unk.Repr", span=""];
m0_29 [cluster="Unk.AddUniverse", file="AccelerationBandsTests.cs", label="Entry Unk.AddUniverse", span=""];
m0_3 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m0_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m0_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", span="604-604"];
m0_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="606-606"];
m0_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType);\r\n                if (config == null) return null;\r\n                \r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="609-619"];
m0_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="symbols == null", span="607-607"];
m0_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return null;", span="607-607"];
m0_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return _converter.GetDataFrame(History(requests.Where(x => x != null)).Memoize());", span="621-621"];
m0_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", span="604-604"];
m0_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="443-443"];
m0_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="AccelerationBandsTests.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="445-445"];
m0_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="443-443"];
m0_415 [cluster="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", file="AccelerationBandsTests.cs", label="Entry System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", span="0-0"];
m0_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="633-633"];
m0_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return History(type, tickers, Time - span, Time, resolution);", span="635-635"];
m0_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="633-633"];
m0_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m0_33 [cluster="System.Func<T, TResult>.Invoke(T)", file="AccelerationBandsTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_404 [cluster="System.Collections.Generic.List<T>.Add(T)", file="AccelerationBandsTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59"];
m0_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="559-559"];
m0_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="561-561"];
m0_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return _converter.GetDataFrame(History(symbols, start, end, resolution));", span="564-564"];
m0_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="symbols == null", span="562-562"];
m0_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return null;", span="562-562"];
m0_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="559-559"];
m0_414 [cluster="Unk.Replace", file="AccelerationBandsTests.cs", label="Entry Unk.Replace", span=""];
m0_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1444-1444"];
m0_154 [cluster="Unk.Where", file="AccelerationBandsTests.cs", label="Entry Unk.Where", span=""];
m0_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="317-317"];
m0_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AccelerationBandsTests.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="319-319"];
m0_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="317-317"];
m0_402 [cluster="System.Collections.Generic.List<T>.List()", file="AccelerationBandsTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_72 [cluster="Unk.selector", file="AccelerationBandsTests.cs", label="Entry Unk.selector", span=""];
m0_385 [cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", span="31-31"];
m0_403 [cluster="string.IsNullOrWhiteSpace(string)", file="AccelerationBandsTests.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m0_339 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="656-656"];
m0_31 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="coarse(c).Select(x => (Symbol)x)", span="106-106"];
m0_30 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="106-106"];
m0_32 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="106-106"];
m0_35 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="106-106"];
m0_36 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="(Symbol)x", span="106-106"];
m0_37 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="106-106"];
m0_44 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="coarse(c).Select(x => (Symbol)x)", span="119-119"];
m0_50 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="fine(f).Select(x => (Symbol)x)", span="119-119"];
m0_43 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="119-119"];
m0_49 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="119-119"];
m0_45 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="119-119"];
m0_46 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="119-119"];
m0_47 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="(Symbol)x", span="119-119"];
m0_48 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="119-119"];
m0_51 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="119-119"];
m0_52 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="119-119"];
m0_53 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="(Symbol)x", span="119-119"];
m0_54 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="119-119"];
m0_60 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="selector(d).Select(x => (string)x)", span="132-132"];
m0_59 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="132-132"];
m0_61 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="132-132"];
m0_62 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="132-132"];
m0_63 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="(string)x", span="132-132"];
m0_64 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="132-132"];
m0_70 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="selector(d).Select(x => (string)x)", span="144-144"];
m0_69 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="144-144"];
m0_71 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="144-144"];
m0_73 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="144-144"];
m0_74 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="(string)x", span="144-144"];
m0_75 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="144-144"];
m0_81 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="selector(d).Select(x => (string)x)", span="159-159"];
m0_80 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="159-159"];
m0_82 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="159-159"];
m0_83 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="159-159"];
m0_84 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="(string)x", span="159-159"];
m0_85 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="159-159"];
m0_118 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))", span="268-269"];
m0_121 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market)", span="269-269"];
m0_117 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="268-269"];
m0_119 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="268-269"];
m0_120 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="269-269"];
m0_122 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="269-269"];
m0_157 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="385-385"];
m0_158 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x != null", span="385-385"];
m0_159 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="385-385"];
m0_163 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="399-399"];
m0_164 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x != null", span="399-399"];
m0_165 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="399-399"];
m0_169 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="413-413"];
m0_170 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x != null", span="413-413"];
m0_171 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="413-413"];
m0_176 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="421-421"];
m0_177 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x != null", span="421-421"];
m0_178 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="421-421"];
m0_182 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="429-429"];
m0_183 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x != null", span="429-429"];
m0_184 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="429-429"];
m0_188 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="437-437"];
m0_189 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x != null", span="437-437"];
m0_190 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="437-437"];
m0_194 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="445-445"];
m0_195 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x != null", span="445-445"];
m0_196 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="445-445"];
m0_200 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="453-453"];
m0_201 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x != null", span="453-453"];
m0_202 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="453-453"];
m0_206 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="461-461"];
m0_207 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x != null", span="461-461"];
m0_208 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="461-461"];
m0_269 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType)", span="584-585"];
m0_281 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="s.Type.BaseType == CreateType(type).BaseType", span="585-585"];
m0_272 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="return CreateHistoryRequest(security, config, start, end, resolution);", span="588-588"];
m0_267 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="581-589"];
m0_283 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="591-591"];
m0_268 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="var security = Securities[x]", span="583-583"];
m0_270 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="config == null", span="586-586"];
m0_277 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="584-584"];
m0_280 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="585-585"];
m0_271 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="return null;", span="586-586"];
m0_273 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="581-589"];
m0_278 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="s.Resolution", span="584-584"];
m0_279 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="584-584"];
m0_282 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="585-585"];
m0_284 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x != null", span="591-591"];
m0_285 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="591-591"];
m0_295 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType)", span="612-613"];
m0_310 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="s.Type.BaseType == CreateType(type).BaseType", span="613-613"];
m0_298 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Resolution? res = resolution ?? security.Resolution", span="616-616"];
m0_299 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="617-617"];
m0_300 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="618-618"];
m0_293 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="609-619"];
m0_312 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="621-621"];
m0_294 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="var security = Securities[x]", span="611-611"];
m0_296 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="config == null", span="614-614"];
m0_306 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="612-612"];
m0_309 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="613-613"];
m0_297 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="return null;", span="614-614"];
m0_301 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="609-619"];
m0_307 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="s.Resolution", span="612-612"];
m0_308 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="612-612"];
m0_311 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="613-613"];
m0_313 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x != null", span="621-621"];
m0_314 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="621-621"];
m0_337 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="s.Type.BaseType == requestedType.BaseType", span="653-653"];
m0_333 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="652-652"];
m0_336 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Entry lambda expression", span="653-653"];
m0_334 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="s.Resolution", span="652-652"];
m0_335 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="652-652"];
m0_338 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="653-653"];
m0_340 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="x.Type.Name", span="656-656"];
m0_341 [cluster="lambda expression", file="AccelerationBandsTests.cs", label="Exit lambda expression", span="656-656"];
m0_264 [cluster="Unk.History", file="AccelerationBandsTests.cs", label="Entry Unk.History", span=""];
m0_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="199-199"];
m0_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, universeSettings, selector)", span="201-201"];
m0_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="199-199"];
m0_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="141-141"];
m0_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="AccelerationBandsTests.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="143-143"];
m0_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(name, d => selector(d).Select(x => (string)x))", span="144-144"];
m0_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="141-141"];
m0_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="721-721"];
m0_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="AccelerationBandsTests.cs", label="SetBrokerageModel(new BrokerageModelPythonWrapper(model))", span="723-723"];
m0_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="721-721"];
m0_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="369-369"];
m0_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AccelerationBandsTests.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, consolidator, selector)", span="371-371"];
m0_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="369-369"];
m0_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="343-343"];
m0_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AccelerationBandsTests.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="345-345"];
m0_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="343-343"];
m0_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54"];
m0_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="AccelerationBandsTests.cs", label="AddData(type, symbol, resolution, TimeZones.NewYork, false, 1m)", span="56-56"];
m0_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54"];
m0_22 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442"];
m0_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="647-647"];
m0_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var security = Securities[symbol]", span="649-649"];
m0_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var requestedType = CreateType(type)", span="651-651"];
m0_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="657-657"];
m0_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var request = CreateHistoryRequest(security, config, start, end, resolution)", span="660-660"];
m0_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                .FirstOrDefault(s => s.Type.BaseType == requestedType.BaseType)", span="652-653"];
m0_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="656-656"];
m0_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="config == null", span="654-654"];
m0_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return _converter.GetDataFrame(History(request).Memoize());", span="661-661"];
m0_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="647-647"];
m0_329 [cluster="ArgumentException.cstr", file="AccelerationBandsTests.cs", label="Entry ArgumentException.cstr", span=""];
m0_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="451-451"];
m0_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="AccelerationBandsTests.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="453-453"];
m0_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="451-451"];
m0_28 [cluster="QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", span="74-74"];
m0_266 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="104-104"];
m0_417 [cluster="Unk.HasAttr", file="AccelerationBandsTests.cs", label="Entry Unk.HasAttr", span=""];
m0_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="304-304"];
m0_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AccelerationBandsTests.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="306-306"];
m0_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="304-304"];
m0_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="356-356"];
m0_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AccelerationBandsTests.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, consolidator, selector)", span="358-358"];
m0_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="356-356"];
m0_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m0_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1265-1265"];
m0_303 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="AccelerationBandsTests.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m0_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m0_232 [cluster="string.Format(string, object, object, object)", file="AccelerationBandsTests.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m0_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m0_363 [cluster="Unk.AsManagedObject", file="AccelerationBandsTests.cs", label="Entry Unk.AsManagedObject", span=""];
m0_156 [cluster="Unk.Plot", file="AccelerationBandsTests.cs", label="Entry Unk.Plot", span=""];
m0_34 [cluster="Unk.Select", file="AccelerationBandsTests.cs", label="Entry Unk.Select", span=""];
m0_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m0_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="754-754"];
m0_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="Py.GIL()", span="756-756"];
m0_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="!PyList.IsListType(pyObject)", span="759-759"];
m0_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="tmp.Append(pyObject)", span="762-762"];
m0_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label=pyObject, span="767-767"];
m0_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="var tmp = new PyList()", span="761-761"];
m0_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="var symbols = new List<Symbol>()", span="766-766"];
m0_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="pyObject = tmp", span="763-763"];
m0_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="symbols.Add(symbol)", span="776-776"];
m0_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="return symbols.Count == 0 ? null : symbols;", span="778-778"];
m0_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="var symbol = (Symbol)item.AsManagedObject(typeof(Symbol))", span="769-769"];
m0_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="string.IsNullOrWhiteSpace(symbol.Value)", span="771-771"];
m0_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="754-754"];
m0_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="AccelerationBandsTests.cs", label="var security = SecurityManager.CreateSecurity(dataType, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="92-93"];
m0_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="83-83"];
m0_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="AccelerationBandsTests.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="85-85"];
m0_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="AccelerationBandsTests.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="88-88"];
m0_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="AccelerationBandsTests.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="89-89"];
m0_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="AccelerationBandsTests.cs", label="AddToUserDefinedUniverse(security)", span="95-95"];
m0_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="83-83"];
m0_115 [cluster="FuncUniverse.cstr", file="AccelerationBandsTests.cs", label="Entry FuncUniverse.cstr", span=""];
m0_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="527-527"];
m0_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="529-529"];
m0_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return _converter.GetDataFrame(History(symbols, periods, resolution));", span="532-532"];
m0_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="symbols == null", span="530-530"];
m0_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return null;", span="530-530"];
m0_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="527-527"];
m0_332 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="AccelerationBandsTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218"];
m0_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="103-103"];
m0_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="AccelerationBandsTests.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="105-105"];
m0_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x))", span="106-106"];
m0_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="103-103"];
m0_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="419-419"];
m0_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="AccelerationBandsTests.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="421-421"];
m0_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="419-419"];
m0_330 [cluster="QuantConnect.Symbol.ToString()", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m0_381 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", span="32-32"];
m0_400 [cluster="PyList.cstr", file="AccelerationBandsTests.cs", label="Entry PyList.cstr", span=""];
m0_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1338-1338"];
m0_419 [cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="AccelerationBandsTests.cs", label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0"];
m0_349 [cluster="System.ArgumentException.ArgumentException(string)", file="AccelerationBandsTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m0_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m0_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1219-1219"];
m0_223 [cluster="QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", span="35-35"];
m0_275 [cluster="Unk.FirstOrDefault", file="AccelerationBandsTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m0_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="129-129"];
m0_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="AccelerationBandsTests.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="131-131"];
m0_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(name, resolution, d => selector(d).Select(x => (string)x))", span="132-132"];
m0_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="129-129"];
m0_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="262-262"];
m0_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="258-258"];
m0_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(market, name, securityType)", span="260-260"];
m0_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="263-263"];
m0_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="var config = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, true, isFilteredSubscription: false)", span="264-264"];
m0_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="var selector = PythonUtil.ToFunc<IEnumerable<IBaseData>, object[]>(pySelector)", span="266-266"];
m0_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(new FuncUniverse(config, universeSettings, SecurityInitializer, d => selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))))", span="268-269"];
m0_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="261-261"];
m0_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="258-258"];
m0_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="184-184"];
m0_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="186-186"];
m0_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="184-184"];
m0_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="291-291"];
m0_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution)", span="293-293"];
m0_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="291-291"];
m0_401 [cluster="Unk.Append", file="AccelerationBandsTests.cs", label="Entry Unk.Append", span=""];
m0_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m0_399 [cluster="Unk.IsListType", file="AccelerationBandsTests.cs", label="Entry Unk.IsListType", span=""];
m0_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1380-1380"];
m0_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="787-787"];
m0_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="AccelerationBandsTests.cs", label="Py.GIL()", span="789-789"];
m0_406 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="AccelerationBandsTests.cs", label="var an = new AssemblyName(type.Repr().Split('.')[1].Replace(''\'>'', ''''))", span="791-791"];
m0_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="AccelerationBandsTests.cs", label="return moduleBuilder.DefineType(an.Name,\r\n                        TypeAttributes.Public |\r\n                        TypeAttributes.Class |\r\n                        TypeAttributes.AutoClass |\r\n                        TypeAttributes.AnsiClass |\r\n                        TypeAttributes.BeforeFieldInit |\r\n                        TypeAttributes.AutoLayout,\r\n                        // If the type has IsAuthCodeSet member, it is a PythonQuandl\r\n                        type.HasAttr(''IsAuthCodeSet'') ? typeof(PythonQuandl) : typeof(PythonData))\r\n                    .CreateType();", span="794-803"];
m0_407 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="AccelerationBandsTests.cs", label="var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.Run)", span="792-792"];
m0_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="AccelerationBandsTests.cs", label="var moduleBuilder = assemblyBuilder.DefineDynamicModule(''MainModule'')", span="793-793"];
m0_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="787-787"];
m0_242 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m0_19 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m0_21 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m0_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="702-702"];
m0_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="AccelerationBandsTests.cs", label="Py.GIL()", span="704-704"];
m0_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="AccelerationBandsTests.cs", label="var pyBenchmark = PythonUtil.ToFunc<DateTime, decimal>(benchmark)", span="706-706"];
m0_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="AccelerationBandsTests.cs", label="SetBenchmark((Symbol)benchmark.AsManagedObject(typeof(Symbol)))", span="712-712"];
m0_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="AccelerationBandsTests.cs", label="pyBenchmark != null", span="707-707"];
m0_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="AccelerationBandsTests.cs", label="SetBenchmark(pyBenchmark)", span="709-709"];
m0_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="AccelerationBandsTests.cs", label="return;", span="710-710"];
m0_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="702-702"];
m0_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m0_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="543-543"];
m0_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="545-545"];
m0_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return _converter.GetDataFrame(History(symbols, span, resolution));", span="548-548"];
m0_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="symbols == null", span="546-546"];
m0_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return null;", span="546-546"];
m0_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="543-543"];
m0_20 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m0_304 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m0_368 [cluster="QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", span="38-38"];
m0_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="730-730"];
m0_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="AccelerationBandsTests.cs", label="var securityInitializer1 = PythonUtil.ToAction<Security>(securityInitializer)", span="732-732"];
m0_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="AccelerationBandsTests.cs", label="var securityInitializer2 = PythonUtil.ToAction<Security, bool>(securityInitializer)", span="739-739"];
m0_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="AccelerationBandsTests.cs", label="SetSecurityInitializer(new SecurityInitializerPythonWrapper(securityInitializer))", span="746-746"];
m0_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="AccelerationBandsTests.cs", label="securityInitializer1 != null", span="733-733"];
m0_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="AccelerationBandsTests.cs", label="SetSecurityInitializer(securityInitializer1)", span="735-735"];
m0_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="AccelerationBandsTests.cs", label="return;", span="736-736"];
m0_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="AccelerationBandsTests.cs", label="securityInitializer2 != null", span="740-740"];
m0_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="AccelerationBandsTests.cs", label="SetSecurityInitializer(securityInitializer2)", span="742-742"];
m0_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="AccelerationBandsTests.cs", label="return;", span="743-743"];
m0_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="730-730"];
m0_416 [cluster="System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", file="AccelerationBandsTests.cs", label="Entry System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", span="0-0"];
m0_383 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", span="53-53"];
m0_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="427-427"];
m0_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="AccelerationBandsTests.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="429-429"];
m0_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="427-427"];
m0_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="435-435"];
m0_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="AccelerationBandsTests.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="437-437"];
m0_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="435-435"];
m0_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="330-330"];
m0_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AccelerationBandsTests.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="332-332"];
m0_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="330-330"];
m0_18 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m0_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="213-213"];
m0_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, universeSettings, selector)", span="215-215"];
m0_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="213-213"];
m0_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="115-115"];
m0_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="AccelerationBandsTests.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="117-117"];
m0_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="AccelerationBandsTests.cs", label="var fine = PythonUtil.ToFunc<IEnumerable<FineFundamental>, object[]>(pyfine)", span="118-118"];
m0_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x), f => fine(f).Select(x => (Symbol)x))", span="119-119"];
m0_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="115-115"];
m0_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="397-397"];
m0_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1352-1352"];
m0_305 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="AccelerationBandsTests.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m0_113 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m0_411 [cluster="AssemblyName.cstr", file="AccelerationBandsTests.cs", label="Entry AssemblyName.cstr", span=""];
m0_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="489-489"];
m0_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="var name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="491-491"];
m0_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="492-492"];
m0_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="493-493"];
m0_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="RegisterIndicator(symbol, filteredIdentity, resolution, pyselector)", span="495-495"];
m0_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="494-494"];
m0_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="return filteredIdentity;", span="496-496"];
m0_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="489-489"];
m0_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="674-674"];
m0_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="resolution == Resolution.Tick", span="676-676"];
m0_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="678-678"];
m0_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var end = Time.RoundDown((resolution ?? Securities[symbol].Resolution).ToTimeSpan())", span="679-679"];
m0_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return History(type, symbol, start, end, resolution);", span="680-680"];
m0_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="676-676"];
m0_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="674-674"];
m0_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="397-397"];
m0_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="AccelerationBandsTests.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="399-399"];
m0_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="397-397"];
m0_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="692-692"];
m0_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return History(type, symbol, Time - span, Time, resolution);", span="694-694"];
m0_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="692-692"];
m0_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m0_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="156-156"];
m0_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="158-158"];
m0_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(securityType, name, resolution, market, universeSettings, d => selector(d).Select(x => (string)x))", span="159-159"];
m0_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="156-156"];
m0_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41"];
m0_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41"];
m0_418 [cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", file="AccelerationBandsTests.cs", label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", span="0-0"];
m0_361 [cluster="Unk.GIL", file="AccelerationBandsTests.cs", label="Entry Unk.GIL", span=""];
m0_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="243-243"];
m0_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, universeSettings, selector)", span="245-245"];
m0_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="243-243"];
m0_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="228-228"];
m0_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, UniverseSettings, selector)", span="230-230"];
m0_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="228-228"];
m0_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="170-170"];
m0_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="AccelerationBandsTests.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="172-172"];
m0_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="170-170"];
m0_265 [cluster="Unk.Memoize", file="AccelerationBandsTests.cs", label="Entry Unk.Memoize", span=""];
m0_276 [cluster="Unk.CreateHistoryRequest", file="AccelerationBandsTests.cs", label="Entry Unk.CreateHistoryRequest", span=""];
m0_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m0_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="AccelerationBandsTests.cs", label="AddData(CreateType(type), symbol, resolution, timeZone, fillDataForward, leverage)", span="71-71"];
m0_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m0_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="473-473"];
m0_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="var resolution = GetSubscription(symbol).Resolution", span="475-475"];
m0_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="return FilteredIdentity(symbol, resolution, selector, filter, fieldName);", span="476-476"];
m0_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="473-473"];
m0_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="383-383"];
m0_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="AccelerationBandsTests.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="385-385"];
m0_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="383-383"];
m0_328 [cluster="Unk.DefaultIfEmpty", file="AccelerationBandsTests.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m0_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="576-576"];
m0_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="578-578"];
m0_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType);\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(security, config, start, end, resolution);\r\n            })", span="581-589"];
m0_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="symbols == null", span="579-579"];
m0_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return null;", span="579-579"];
m0_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="return _converter.GetDataFrame(History(requests.Where(x => x != null)).Memoize());", span="591-591"];
m0_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="576-576"];
m0_420 [file="AccelerationBandsTests.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m0_421 [file="AccelerationBandsTests.cs", label=coarse, span=""];
m0_422 [file="AccelerationBandsTests.cs", label=coarse, span=""];
m0_423 [file="AccelerationBandsTests.cs", label=fine, span=""];
m0_424 [file="AccelerationBandsTests.cs", label=selector, span=""];
m0_425 [file="AccelerationBandsTests.cs", label=selector, span=""];
m0_426 [file="AccelerationBandsTests.cs", label=selector, span=""];
m0_427 [file="AccelerationBandsTests.cs", label="QuantConnect.SecurityType", span=""];
m0_428 [file="AccelerationBandsTests.cs", label=string, span=""];
m0_429 [file="AccelerationBandsTests.cs", label=selector, span=""];
m0_430 [file="AccelerationBandsTests.cs", label=PyObject, span=""];
m0_431 [file="AccelerationBandsTests.cs", label="System.DateTime", span=""];
m0_432 [file="AccelerationBandsTests.cs", label="System.DateTime", span=""];
m0_433 [file="AccelerationBandsTests.cs", label="QuantConnect.Resolution?", span=""];
m0_434 [file="AccelerationBandsTests.cs", label=PyObject, span=""];
m0_435 [file="AccelerationBandsTests.cs", label="QuantConnect.Resolution?", span=""];
m0_436 [file="AccelerationBandsTests.cs", label=int, span=""];
m0_437 [file="AccelerationBandsTests.cs", label=requestedType, span=""];
m1_124 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m1_177 [cluster="QuantConnect.Lean.Engine.DataFeeds.LiveOptionChainProvider.LiveOptionChainProvider()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.LiveOptionChainProvider.LiveOptionChainProvider()", span="27-27"];
m1_35 [cluster="QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", span="60-60"];
m1_138 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="494-494"];
m1_171 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="380-380"];
m1_194 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="382-382"];
m1_195 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="384-384"];
m1_196 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="dataFeedsConfigString != string.Empty", span="385-385"];
m1_197 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="387-387"];
m1_198 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="return dataFeeds;", span="390-390"];
m1_199 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="380-380"];
m1_136 [cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="BrokerageSetupHandler.cs", label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m1_139 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="484-484"];
m1_5 [cluster="System.Collections.Generic.List<T>.List()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_141 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", span="392-392"];
m1_173 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="529-529"];
m1_144 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="308-308"];
m1_133 [cluster="Lazy<Resolution>.cstr", file="BrokerageSetupHandler.cs", label="Entry Lazy<Resolution>.cstr", span=""];
m1_118 [cluster="string.IsNullOrWhiteSpace(string)", file="BrokerageSetupHandler.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m1_190 [cluster="Unk.Min", file="BrokerageSetupHandler.cs", label="Entry Unk.Min", span=""];
m1_191 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="297-297"];
m1_21 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name''))", span="91-91"];
m1_20 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="91-91"];
m1_22 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="91-91"];
m1_38 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="brokerageFactory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="114-114"];
m1_37 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="114-114"];
m1_39 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="114-114"];
m1_152 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetBrokerageModel(_factory.BrokerageModel)", span="174-174"];
m1_153 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Portfolio.MarginCallModel = MarginCallModel.Null", span="177-177"];
m1_154 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetParameters(job.Parameters)", span="180-180"];
m1_155 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="181-181"];
m1_156 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetLiveMode(true)", span="184-184"];
m1_157 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetDateTime(DateTime.UtcNow)", span="187-187"];
m1_158 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="190-190"];
m1_159 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new LiveOptionChainProvider()))", span="193-193"];
m1_160 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="brokerage is InteractiveBrokersBrokerage &&\r\n                            liveJob.DataQueueHandler.EndsWith(''InteractiveBrokersBrokerage'')", span="198-199"];
m1_161 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Settings.DataSubscriptionLimit = 100", span="201-201"];
m1_162 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Initialize()", span="205-205"];
m1_164 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Portfolio.CashBook", span="209-209"];
m1_186 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min()", span="297-297"];
m1_163 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="liveJob.Brokerage != ''PaperBrokerage''", span="206-206"];
m1_147 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="args.Type == BrokerageMessageType.Error", span="154-154"];
m1_148 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message))", span="156-156"];
m1_151 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="169-219"];
m1_182 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="281-281"];
m1_146 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="152-158"];
m1_149 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="152-158"];
m1_166 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label=Exception, span="215-215"];
m1_168 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="169-219"];
m1_165 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="kvp.Value.SetAmount(0)", span="211-211"];
m1_167 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="AddInitializationError(err.ToString())", span="217-217"];
m1_184 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="281-281"];
m1_185 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="297-297"];
m1_187 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="297-297"];
m1_192 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.Value.Resolution", span="297-297"];
m1_193 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="297-297"];
m1_131 [cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="71-71"];
m1_135 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m1_18 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="349-349"];
m1_132 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m1_41 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="133-133"];
m1_42 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var liveJob = job as LiveNodePacket", span="136-136"];
m1_51 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="resultHandler.SendStatusUpdate(AlgorithmStatus.Initializing, ''Initializing algorithm...'')", span="164-164"];
m1_52 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var controls = job.Controls", span="167-167"];
m1_54 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(300), () =>\r\n                {\r\n                    try\r\n                    {\r\n                        //Set the default brokerage model before initialize\r\n                        algorithm.SetBrokerageModel(_factory.BrokerageModel);\r\n\r\n                        //Margin calls are disabled by default in live mode\r\n                        algorithm.Portfolio.MarginCallModel = MarginCallModel.Null;\r\n\r\n                        //Set our parameters\r\n                        algorithm.SetParameters(job.Parameters);\r\n                        algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds());\r\n\r\n                        //Algorithm is live, not backtesting:\r\n                        algorithm.SetLiveMode(true);\r\n\r\n                        //Initialize the algorithm's starting date\r\n                        algorithm.SetDateTime(DateTime.UtcNow);\r\n\r\n                        //Set the source impl for the event scheduling\r\n                        algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n\r\n                        // set the option chain provider\r\n                        algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new LiveOptionChainProvider()));\r\n\r\n                        // If we're going to receive market data from IB, \r\n                        // set the default subscription limit to 100,\r\n                        // algorithms can override this setting in the Initialize method\r\n                        if (brokerage is InteractiveBrokersBrokerage &&\r\n                            liveJob.DataQueueHandler.EndsWith(''InteractiveBrokersBrokerage''))\r\n                        {\r\n                            algorithm.Settings.DataSubscriptionLimit = 100;\r\n                        }\r\n\r\n                        //Initialise the algorithm, get the required data:\r\n                        algorithm.Initialize();\r\n                        if (liveJob.Brokerage != ''PaperBrokerage'')\r\n                        {\r\n                            //Zero the CashBook - we'll populate directly from brokerage\r\n                            foreach (var kvp in algorithm.Portfolio.CashBook)\r\n                            {\r\n                                kvp.Value.SetAmount(0);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        AddInitializationError(err.ToString());\r\n                    }\r\n                }, controls.RamAllocation)", span="169-219"];
m1_58 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="resultHandler.SendStatusUpdate(AlgorithmStatus.LoggingIn, ''Logging into brokerage...'')", span="228-228"];
m1_59 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="brokerage.Message += brokerageOnMessage", span="230-230"];
m1_61 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="brokerage.Connect()", span="236-236"];
m1_66 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!brokerage.IsConnected", span="246-246"];
m1_70 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var cashBalance = brokerage.GetCashBalance()", span="257-257"];
m1_73 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.Portfolio.SetCash(cash.Symbol, cash.Amount, cash.ConversionRate)", span="261-261"];
m1_89 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var holdings = brokerage.GetAccountHoldings()", span="295-295"];
m1_91 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var minResolution = new Lazy<Resolution>(() => algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min())", span="297-297"];
m1_97 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!algorithm.Portfolio.ContainsKey(holding.Symbol)", span="313-313"];
m1_100 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.AddOptionContract(holding.Symbol, minResolution.Value, true, 1.0m)", span="320-320"];
m1_102 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.AddFutureContract(holding.Symbol, minResolution.Value, true, 1.0m)", span="325-325"];
m1_103 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.AddSecurity(holding.Type, holding.Symbol.Value, minResolution.Value, null, true, 1.0m, false)", span="330-330"];
m1_104 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.Portfolio[holding.Symbol].SetHoldings(holding.AveragePrice, holding.Quantity)", span="334-334"];
m1_105 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.Securities[holding.Symbol].SetMarketPrice(new TradeBar\r\n                        {\r\n                            Time = DateTime.Now,\r\n                            Open = holding.MarketPrice,\r\n                            High = holding.MarketPrice,\r\n                            Low = holding.MarketPrice,\r\n                            Close = holding.MarketPrice,\r\n                            Volume = 0,\r\n                            Symbol = holding.Symbol,\r\n                            DataType = MarketDataType.TradeBar\r\n                        })", span="335-345"];
m1_110 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.PostInitialize()", span="355-355"];
m1_111 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="StartingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="358-358"];
m1_43 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="liveJob == null", span="137-137"];
m1_46 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="string.IsNullOrWhiteSpace(liveJob.Brokerage)", span="144-144"];
m1_44 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''BrokerageSetupHandler requires a LiveNodePacket'')", span="139-139"];
m1_45 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="140-140"];
m1_47 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''A brokerage must be specified'')", span="146-146"];
m1_49 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="EventHandler<BrokerageMessageEvent> brokerageOnMessage = (sender, args) =>\r\n            {\r\n                if (args.Type == BrokerageMessageType.Error)\r\n                {\r\n                    AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message));\r\n                }\r\n            }", span="152-158"];
m1_48 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="147-147"];
m1_50 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Initializing algorithm...'')", span="162-162"];
m1_53 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var isolator = new Isolator()", span="168-168"];
m1_55 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!initializeComplete", span="221-221"];
m1_56 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Initialization timed out.'')", span="223-223"];
m1_57 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="224-224"];
m1_60 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Connecting to brokerage...'')", span="232-232"];
m1_62 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="238-238"];
m1_63 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="240-240"];
m1_64 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(string.Format(''Error connecting to brokerage: {0}. '' +\r\n                        ''This may be caused by incorrect login credentials or an unsupported account type.'', err.Message))", span="241-242"];
m1_65 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="243-243"];
m1_67 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Unable to connect to brokerage.'')", span="249-249"];
m1_69 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching cash balance from brokerage...'')", span="253-253"];
m1_68 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="250-250"];
m1_71 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=cashBalance, span="258-258"];
m1_72 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Setting '' + cash.Symbol + '' cash to '' + cash.Amount)", span="260-260"];
m1_74 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="264-264"];
m1_78 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching open orders from brokerage...'')", span="271-271"];
m1_75 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="266-266"];
m1_76 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Error getting cash balance from brokerage: '' + err.Message)", span="267-267"];
m1_77 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="268-268"];
m1_84 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="284-284"];
m1_88 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching holdings from brokerage...'')", span="291-291"];
m1_85 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="286-286"];
m1_86 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Error getting open orders from brokerage: '' + err.Message)", span="287-287"];
m1_87 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="288-288"];
m1_90 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var supportedSecurityTypes = new HashSet<SecurityType> { SecurityType.Equity, SecurityType.Forex, SecurityType.Cfd, SecurityType.Option, SecurityType.Future }", span="296-296"];
m1_92 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=holdings, span="298-298"];
m1_94 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!supportedSecurityTypes.Contains(holding.Type)", span="303-303"];
m1_96 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Found unsupported security type in existing brokerage holdings: '' + holding.Type + ''. '' +\r\n                                ''QuantConnect currently supports the following security types: '' + string.Join('','', supportedSecurityTypes))", span="306-307"];
m1_93 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Has existing holding: '' + holding)", span="300-300"];
m1_106 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="348-348"];
m1_95 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(''BrokerageSetupHandler.Setup(): Unsupported security type: '' + holding.Type + ''-'' + holding.Symbol.Value)", span="305-305"];
m1_98 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Adding unrequested security: '' + holding.Symbol.Value)", span="315-315"];
m1_99 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="holding.Type == SecurityType.Option", span="317-317"];
m1_101 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="holding.Type == SecurityType.Future", span="322-322"];
m1_107 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="350-350"];
m1_108 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Error getting account holdings from brokerage: '' + err.Message)", span="351-351"];
m1_109 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="352-352"];
m1_112 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="StartingDate = DateTime.Now", span="359-359"];
m1_113 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="361-361"];
m1_115 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return Errors.Count == 0;", span="373-373"];
m1_114 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(err.ToString())", span="363-363"];
m1_116 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="133-133"];
m1_143 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="610-610"];
m1_189 [cluster="Unk.DefaultIfEmpty", file="BrokerageSetupHandler.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m1_127 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m1_121 [cluster="QuantConnect.Isolator.Isolator()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m1_129 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="365-365"];
m1_140 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="474-474"];
m1_19 [cluster="System.Exception.Exception(string)", file="BrokerageSetupHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_172 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="579-579"];
m1_170 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="322-322"];
m1_205 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="407-407"];
m1_206 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="BrokerageSetupHandler.cs", label="_factory != null", span="409-409"];
m1_207 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="BrokerageSetupHandler.cs", label="_factory.Dispose()", span="411-411"];
m1_208 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="407-407"];
m1_209 [cluster="System.IDisposable.Dispose()", file="BrokerageSetupHandler.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m1_122 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145"];
m1_0 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="72-72"];
m1_1 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="BrokerageSetupHandler.cs", label="Errors = new List<string>()", span="74-74"];
m1_2 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="BrokerageSetupHandler.cs", label="MaximumRuntime = TimeSpan.FromDays(10*365)", span="75-75"];
m1_3 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="BrokerageSetupHandler.cs", label="MaxOrders = int.MaxValue", span="76-76"];
m1_4 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="72-72"];
m1_201 [cluster="Unk.>", file="BrokerageSetupHandler.cs", label="Entry Unk.>", span=""];
m1_34 [cluster="System.ArgumentException.ArgumentException(string)", file="BrokerageSetupHandler.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_134 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m1_120 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219"];
m1_179 [cluster="string.EndsWith(string)", file="BrokerageSetupHandler.cs", label="Entry string.EndsWith(string)", span="0-0"];
m1_181 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m1_128 [cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="65-65"];
m1_137 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="129-129"];
m1_6 [cluster="System.TimeSpan.FromDays(double)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m1_125 [cluster="string.Format(string, object)", file="BrokerageSetupHandler.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_169 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="330-330"];
m1_174 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="439-439"];
m1_117 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="398-398"];
m1_202 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="BrokerageSetupHandler.cs", label="Errors.Add(''Failed to initialize algorithm: '' + message)", span="400-400"];
m1_203 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="398-398"];
m1_25 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="105-105"];
m1_26 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="var liveJob = algorithmNodePacket as LiveNodePacket", span="107-107"];
m1_31 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="var brokerage = _factory.CreateBrokerage(liveJob, uninitializedAlgorithm)", span="118-118"];
m1_27 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="liveJob == null", span="108-108"];
m1_29 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="_factory = Composer.Instance.Single<IBrokerageFactory>(brokerageFactory => brokerageFactory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="114-114"];
m1_28 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="throw new ArgumentException(''BrokerageSetupHandler.CreateBrokerage requires a live node packet'');", span="110-110"];
m1_30 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="factory = _factory", span="115-115"];
m1_32 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="return brokerage;", span="120-120"];
m1_33 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="105-105"];
m1_145 [cluster="System.Exception.ToString()", file="BrokerageSetupHandler.cs", label="Entry System.Exception.ToString()", span="0-0"];
m1_123 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103"];
m1_36 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="55-55"];
m1_200 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_176 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m1_7 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="85-85"];
m1_8 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="string error", span="87-87"];
m1_10 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromSeconds(15), names => names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name'')))", span="91-91"];
m1_11 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="92-92"];
m1_9 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="IAlgorithm algorithm", span="88-88"];
m1_12 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="!complete", span="93-93"];
m1_13 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="throw new Exception(error + '' Try re-building algorithm and remove duplicate QCAlgorithm base classes.'');", span="93-93"];
m1_14 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="return algorithm;", span="95-95"];
m1_15 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="85-85"];
m1_40 [cluster="System.Type.MatchesTypeName(string)", file="BrokerageSetupHandler.cs", label="Entry System.Type.MatchesTypeName(string)", span="613-613"];
m1_17 [cluster="System.TimeSpan.FromSeconds(double)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m1_204 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_178 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="585-585"];
m1_130 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m1_16 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="82-82"];
m1_150 [cluster="string.Format(string, object, object)", file="BrokerageSetupHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_175 [cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65"];
m1_24 [cluster="System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", span="827-827"];
m1_119 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m1_142 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m1_188 [cluster="Unk.Select", file="BrokerageSetupHandler.cs", label="Entry Unk.Select", span=""];
m1_23 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m1_180 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="302-302"];
m1_126 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77"];
m1_210 [file="BrokerageSetupHandler.cs", label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", span=""];
m1_211 [file="BrokerageSetupHandler.cs", label=liveJob, span=""];
m1_212 [file="BrokerageSetupHandler.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m1_213 [file="BrokerageSetupHandler.cs", label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
m1_214 [file="BrokerageSetupHandler.cs", label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span=""];
m1_215 [file="BrokerageSetupHandler.cs", label="QuantConnect.Interfaces.IBrokerage", span=""];
m1_216 [file="BrokerageSetupHandler.cs", label=liveJob, span=""];
m1_217 [file="BrokerageSetupHandler.cs", label=order, span=""];
m4_135 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="Extensions.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="69-69"];
m4_140 [cluster="QuantConnect.Interfaces.IMessagingHandler.Initialize()", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Initialize()", span="35-35"];
m4_258 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", span="172-172"];
m4_177 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Extensions.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m4_155 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="95-95"];
m4_138 [cluster="Unk.Error", file="Extensions.cs", label="Entry Unk.Error", span=""];
m4_176 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Extensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_161 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="172-172"];
m4_183 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="63-63"];
m4_150 [cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="77-77"];
m4_137 [cluster="System.DateTime.ToShortTimeString()", file="Extensions.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m4_156 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Extensions.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m4_159 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="412-412"];
m4_139 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="34-34"];
m4_165 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="104-104"];
m4_199 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="120-120"];
m4_193 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="324-342"];
m4_194 [cluster="lambda expression", file="Extensions.cs", label="AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler)", span="332-332"];
m4_195 [cluster="lambda expression", file="Extensions.cs", label=Exception, span="334-334"];
m4_197 [cluster="lambda expression", file="Extensions.cs", label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="340-340"];
m4_196 [cluster="lambda expression", file="Extensions.cs", label="Log.Error(''Engine.Run(): Error in Algo Manager: '' + err.Message + '' ST >> '' + err.StackTrace)", span="337-337"];
m4_198 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="324-342"];
m4_192 [cluster="System.Console.Read()", file="Extensions.cs", label="Entry System.Console.Read()", span="0-0"];
m4_146 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Extensions.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m4_152 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="576-576"];
m4_244 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="var rh = default(IResultHandler)", span="578-578"];
m4_245 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="job.ResultEndpoint", span="580-580"];
m4_248 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="rh = new ConsoleResultHandler(job)", span="585-585"];
m4_251 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="rh = new BacktestingResultHandler((BacktestNodePacket)job)", span="591-591"];
m4_254 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="rh = new LiveTradingResultHandler((LiveNodePacket)job)", span="597-597"];
m4_246 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="ResultHandlerEndpoint.Console", span="583-583"];
m4_249 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="ResultHandlerEndpoint.Backtesting", span="589-589"];
m4_252 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="ResultHandlerEndpoint.LiveTrading", span="595-595"];
m4_247 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Console Output.'')", span="584-584"];
m4_250 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Backtesting API Result Endpoint.'')", span="590-590"];
m4_253 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Live Trading API Result Endpoint.'')", span="596-596"];
m4_255 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="return rh;", span="600-600"];
m4_256 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="576-576"];
m4_168 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="95-95"];
m4_182 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="185-185"];
m4_242 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="61-61"];
m4_160 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="323-323"];
m4_164 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="523-523"];
m4_221 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="var rth = default(IRealTimeHandler)", span="525-525"];
m4_222 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="job.RealTimeEndpoint", span="526-526"];
m4_225 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="rth = new BacktestingRealTimeHandler(algorithm, job)", span="531-531"];
m4_228 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="rth = new LiveTradingRealTimeHandler(algorithm, feed, results)", span="537-537"];
m4_223 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="RealTimeEndpoint.Backtesting", span="529-529"];
m4_226 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="RealTimeEndpoint.LiveTrading", span="535-535"];
m4_224 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected Backtesting RealTimeEvent Handler'')", span="530-530"];
m4_227 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected LiveTrading RealTimeEvent Handler'')", span="536-536"];
m4_229 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="return rth;", span="540-540"];
m4_230 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="523-523"];
m4_162 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="487-487"];
m4_200 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="var df = default(IDataFeed)", span="489-489"];
m4_201 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="job.DataEndpoint", span="490-490"];
m4_203 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="df = new BacktestingDataFeed(algorithm, (BacktestNodePacket)job)", span="495-495"];
m4_206 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="df = new DatabaseDataFeed(algorithm, (BacktestNodePacket)job)", span="500-500"];
m4_209 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="df = new FileSystemDataFeed(algorithm, (BacktestNodePacket)job)", span="506-506"];
m4_213 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="df = new PaperTradingDataFeed(algorithm, ds, (LiveNodePacket)job)", span="513-513"];
m4_202 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="DataFeedEndpoint.Backtesting", span="494-494"];
m4_205 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="DataFeedEndpoint.Database", span="499-499"];
m4_208 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="DataFeedEndpoint.FileSystem", span="505-505"];
m4_211 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="DataFeedEndpoint.LiveTrading", span="511-511"];
m4_204 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Backtesting Datafeed'')", span="496-496"];
m4_207 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Database Datafeed'')", span="501-501"];
m4_210 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected FileSystem Datafeed'')", span="507-507"];
m4_212 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="var ds = Composer.Instance.GetExportedValueByTypeName<IDataQueueHandler>(Config.Get(''data-queue-handler'', ''LiveDataQueue''))", span="512-512"];
m4_214 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected LiveTrading Datafeed'')", span="514-514"];
m4_215 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="return df;", span="517-517"];
m4_216 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="487-487"];
m4_243 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m4_259 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", span="158-158"];
m4_171 [cluster="System.Exception.Exception(string)", file="Extensions.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m4_154 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", span="86-86"];
m4_190 [cluster="System.IDisposable.Dispose()", file="Extensions.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m4_217 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="50-50"];
m4_169 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Extensions.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="83-83"];
m4_149 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", span="41-41"];
m4_142 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Extensions.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m4_143 [cluster="System.Threading.Thread.Start()", file="Extensions.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m4_163 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="552-552"];
m4_233 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="ITransactionHandler th", span="554-554"];
m4_234 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="job.TransactionEndpoint", span="555-555"];
m4_236 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="th = new BrokerageTransactionHandler(algorithm, brokerage)", span="558-558"];
m4_238 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="th = new BacktestingTransactionHandler(algorithm, brokerage as BacktestingBrokerage)", span="564-564"];
m4_235 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="TransactionHandlerEndpoint.Brokerage", span="557-557"];
m4_237 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Log.Trace(''Engine.GetTransactionHandler(): Selected Brokerage Transaction Models.'')", span="559-559"];
m4_239 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Log.Trace(''Engine.GetTransactionHandler(): Selected Backtesting Transaction Models.'')", span="565-565"];
m4_240 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="return th;", span="568-568"];
m4_241 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="552-552"];
m4_148 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="59-59"];
m4_178 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", file="Extensions.cs", label="Entry QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", span="124-124"];
m4_275 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="68-68"];
m4_257 [cluster="QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="132-132"];
m4_189 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="98-98"];
m4_218 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.DatabaseDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.DatabaseDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="155-155"];
m4_231 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="104-104"];
m4_172 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="123-123"];
m4_274 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="115-115"];
m4_188 [cluster="System.Threading.Thread.Abort()", file="Extensions.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m4_151 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="609-609"];
m4_260 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="var sh = default(ISetupHandler)", span="611-611"];
m4_261 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label=setupMethod, span="613-613"];
m4_262 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="SetupHandlerEndpoint.Console", span="616-616"];
m4_265 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="SetupHandlerEndpoint.Backtesting", span="621-621"];
m4_268 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="SetupHandlerEndpoint.Brokerage", span="625-625"];
m4_263 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="sh = new ConsoleSetupHandler()", span="617-617"];
m4_264 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Console Algorithm Setup Handler.'')", span="618-618"];
m4_266 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="sh = new BacktestingSetupHandler()", span="622-622"];
m4_267 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Backtesting Algorithm Setup Handler.'')", span="623-623"];
m4_269 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="sh = new BrokerageSetupHandler()", span="626-626"];
m4_270 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Brokerage Algorithm Setup Handler.'')", span="627-627"];
m4_271 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="return sh;", span="630-630"];
m4_272 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="609-609"];
m4_179 [cluster="double.ToString(string)", file="Extensions.cs", label="Entry double.ToString(string)", span="0-0"];
m4_220 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", span="40-40"];
m4_187 [cluster="System.Threading.Thread.Sleep(int)", file="Extensions.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m4_141 [cluster="QuantConnect.Interfaces.IJobQueueHandler.Initialize()", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.Initialize()", span="34-34"];
m4_144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="530-530"];
m4_186 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="Extensions.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m4_145 [cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="40-40"];
m4_184 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="110-110"];
m4_0 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Engine.Main(string[])", span="172-172"];
m4_1 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var algorithmPath = ''''", span="175-175"];
m4_2 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="string mode = ''RELEASE''", span="176-176"];
m4_3 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="AlgorithmNodePacket job = null", span="177-177"];
m4_8 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Trace(''Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v'' + Constants.Version + '' Mode: '' + mode)", span="188-188"];
m4_4 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var algorithm = default(IAlgorithm)", span="178-178"];
m4_5 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var startTime = DateTime.Now", span="179-179"];
m4_6 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.LogHandler = Composer.Instance.GetExportedValueByTypeName<ILogHandler>(Config.Get(''log-handler'', ''CompositeLogHandler''))", span="180-180"];
m4_7 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Thread.CurrentThread.Name = ''Algorithm Analysis Thread''", span="187-187"];
m4_9 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Trace(''Engine.Main(): Started '' + DateTime.Now.ToShortTimeString())", span="189-189"];
m4_10 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Trace(''Engine.Main(): Memory '' + OS.ApplicationMemoryUsed + ''Mb-App  '' + +OS.TotalPhysicalMemoryUsed + ''Mb-Used  '' + OS.TotalPhysicalMemory + ''Mb-Total'')", span="190-190"];
m4_11 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Api = Composer.Instance.GetExportedValueByTypeName<IApi>(Config.Get(''api-handler''))", span="196-196"];
m4_12 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Notify = Composer.Instance.GetExportedValueByTypeName<IMessagingHandler>(Config.Get(''messaging-handler''))", span="197-197"];
m4_13 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="JobQueue = Composer.Instance.GetExportedValueByTypeName<IJobQueueHandler>(Config.Get(''job-queue-handler''))", span="198-198"];
m4_14 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label=CompositionException, span="200-200"];
m4_16 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Api.Initialize()", span="205-205"];
m4_15 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="201-201"];
m4_17 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Notify.Initialize()", span="206-206"];
m4_18 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="JobQueue.Initialize()", span="207-207"];
m4_19 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var statusPingThread = new Thread(StateCheck.Ping.Run)", span="210-210"];
m4_20 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="statusPingThread.Start()", span="211-211"];
m4_129 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="statusPingThread != null && statusPingThread.IsAlive", span="471-471"];
m4_130 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="statusPingThread.Abort()", span="471-471"];
m4_21 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="AlgorithmManager.ResetManager()", span="218-218"];
m4_22 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var initializeComplete = false", span="221-221"];
m4_23 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Thread threadFeed = null", span="222-222"];
m4_24 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Thread threadTransactions = null", span="223-223"];
m4_115 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadFeed != null && threadFeed.IsAlive", span="437-437"];
m4_116 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadFeed.Abort()", span="437-437"];
m4_25 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Thread threadResults = null", span="224-224"];
m4_117 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadTransactions != null && threadTransactions.IsAlive", span="438-438"];
m4_118 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadTransactions.Abort()", span="438-438"];
m4_26 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Thread threadRealTime = null", span="225-225"];
m4_27 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="job = JobQueue.NextJob(out algorithmPath)", span="230-230"];
m4_28 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="job.Version != Constants.Version || (LiveMode && job.Redelivered)", span="234-234"];
m4_29 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Error(''Engine.Run(): Job Version: '' + job.Version + ''  Deployed Version: '' + Constants.Version)", span="236-236"];
m4_30 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="JobQueue.AcknowledgeJob(job)", span="240-240"];
m4_31 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, _collapseMessage)", span="241-241"];
m4_32 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Notify.SetChannel(job.Channel)", span="242-242"];
m4_33 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Notify.RuntimeError(job.AlgorithmId, _collapseMessage)", span="243-243"];
m4_35 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="job == null", span="246-246"];
m4_36 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Notify.SetChannel(job.Channel)", span="250-250"];
m4_37 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="SetupHandler = GetSetupHandler(job.SetupEndpoint)", span="253-253"];
m4_38 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler = GetResultHandler(job)", span="256-256"];
m4_41 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="algorithm = SetupHandler.CreateAlgorithmInstance(algorithmPath)", span="263-263"];
m4_42 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="initializeComplete = SetupHandler.Setup(algorithm, out _brokerage, job)", span="266-266"];
m4_48 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError)", span="276-276"];
m4_52 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="283-283"];
m4_55 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="293-293"];
m4_59 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="DataFeed            = GetDataFeedHandler(algorithm, job)", span="299-299"];
m4_60 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="TransactionHandler  = GetTransactionHandler(algorithm, _brokerage, ResultHandler, job)", span="300-300"];
m4_61 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="RealTimeHandler     = GetRealTimeHandler(algorithm, _brokerage, DataFeed, ResultHandler, job)", span="301-301"];
m4_63 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Running)", span="307-307"];
m4_70 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Constants.Version))", span="319-319"];
m4_71 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var complete = Isolator.ExecuteWithTimeLimit(SetupHandler.MaximumRuntime, () =>\r\n                            {\r\n                                try\r\n                                {\r\n                                    //Run Algorithm Job:\r\n                                    // -> Using this Data Feed, \r\n                                    // -> Send Orders to this TransactionHandler, \r\n                                    // -> Send Results to ResultHandler.\r\n                                    AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler);\r\n                                }\r\n                                catch (Exception err)\r\n                                {\r\n                                    //Debugging at this level is difficult, stack trace needed.\r\n                                    Log.Error(''Engine.Run(): Error in Algo Manager: '' + err.Message + '' ST >> '' + err.StackTrace);\r\n                                }\r\n\r\n                                Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n\r\n                            }, MaximumRamAllocation)", span="324-342"];
m4_86 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err.StackTrace)", span="367-367"];
m4_103 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler.DebugMessage(string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                                job.AlgorithmId, totalSeconds.ToString(''F2''), ((AlgorithmManager.DataPoints / (double)1000) / totalSeconds).ToString(''F0''), AlgorithmManager.DataPoints.ToString(''N0'')))", span="412-413"];
m4_104 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statistics, banner)", span="415-415"];
m4_34 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="job = null", span="244-244"];
m4_39 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadResults = new Thread(ResultHandler.Run, 0) {Name = ''Result Thread''}", span="257-257"];
m4_40 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadResults.Start()", span="258-258"];
m4_119 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadResults != null && threadResults.IsAlive", span="439-439"];
m4_120 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadResults.Abort()", span="439-439"];
m4_43 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || SetupHandler.Errors.Count > 0", span="269-269"];
m4_45 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="273-273"];
m4_56 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="algorithm.SetLiveMode(LiveMode)", span="294-294"];
m4_57 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="algorithm.SetLocked()", span="295-295"];
m4_58 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler.SetAlgorithm(algorithm)", span="298-298"];
m4_75 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="algorithm.RunTimeError != null", span="351-351"];
m4_76 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="throw algorithm.RunTimeError;", span="353-353"];
m4_88 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var orders = new Dictionary<int, Order>(algorithm.Transactions.Orders)", span="380-380"];
m4_98 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var profitLoss =\r\n                                        new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="399-400"];
m4_53 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label=initializeComplete, span="287-287"];
m4_44 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="initializeComplete = false", span="271-271"];
m4_49 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label=Exception, span="279-279"];
m4_46 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="errorMessage += String.Join('','', SetupHandler.Errors)", span="274-274"];
m4_47 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler.RuntimeError(errorMessage)", span="275-275"];
m4_50 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="281-281"];
m4_51 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler.RuntimeError(runtimeMessage, err.StackTrace)", span="282-282"];
m4_54 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="startTime = DateTime.Now", span="290-290"];
m4_110 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler.Exit()", span="429-429"];
m4_102 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="411-411"];
m4_62 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="SetupHandler.SetupErrorHandler(ResultHandler, _brokerage)", span="304-304"];
m4_64 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadFeed = new Thread(DataFeed.Run, 0) {Name = ''DataFeed Thread''}", span="310-310"];
m4_65 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadTransactions = new Thread(TransactionHandler.Run, 0) {Name = ''Transaction Thread''}", span="311-311"];
m4_67 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadFeed.Start()", span="315-315"];
m4_66 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadRealTime = new Thread(RealTimeHandler.Run, 0) {Name = ''RealTime Thread''}", span="312-312"];
m4_68 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadTransactions.Start()", span="316-316"];
m4_69 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="threadRealTime.Start()", span="317-317"];
m4_72 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="!complete", span="344-344"];
m4_73 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Error(''Engine.Main(): Failed to complete in time: '' + SetupHandler.MaximumRuntime.ToString(''F''))", span="346-346"];
m4_74 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="throw new Exception(''Failed to complete algorithm within '' + SetupHandler.MaximumRuntime.ToString(''F'') + '' seconds. Please make it run faster.'');", span="347-347"];
m4_77 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label=Exception, span="356-356"];
m4_87 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var charts = new Dictionary<string, Chart>(ResultHandler.Charts)", span="379-379"];
m4_78 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Error(''Engine.Run(): Breaking out of parent try-catch: '' + err.Message + '' '' + err.StackTrace)", span="359-359"];
m4_79 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="DataFeed != null", span="360-360"];
m4_80 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="DataFeed.Exit()", span="360-360"];
m4_81 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler != null", span="361-361"];
m4_82 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var message = ''Runtime Error: '' + err.Message", span="363-363"];
m4_83 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="364-364"];
m4_84 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler.LogMessage(message)", span="365-365"];
m4_85 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="ResultHandler.RuntimeError(message, err.StackTrace)", span="366-366"];
m4_95 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="charts.ContainsKey(strategyEquityKey) &&\r\n                                    charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                    charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey)", span="393-395"];
m4_96 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="397-397"];
m4_97 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="398-398"];
m4_89 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var holdings = new Dictionary<string, Holding>()", span="381-381"];
m4_90 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var statistics = new Dictionary<string, string>()", span="382-382"];
m4_91 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var banner = new Dictionary<string, string>()", span="383-383"];
m4_92 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="string strategyEquityKey = ''Strategy Equity''", span="388-388"];
m4_93 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="string equityKey = ''Equity''", span="389-389"];
m4_94 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="string dailyPerformanceKey = ''Daily Performance''", span="390-390"];
m4_100 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label=Exception, span="405-405"];
m4_99 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="statistics = Statistics.Statistics.Generate(equity, profitLoss, performance,\r\n                                        SetupHandler.StartingPortfolioValue, 252)", span="401-402"];
m4_101 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Error(''Algorithm.Node.Engine(): Error generating statistics packet: '' + err.Message)", span="407-407"];
m4_105 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label=Exception, span="417-417"];
m4_107 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="TransactionHandler.Exit()", span="423-423"];
m4_106 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Error(''Engine.Main(): Error sending analysis result: '' + err.Message + ''  ST >> '' + err.StackTrace)", span="419-419"];
m4_108 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="DataFeed.Exit()", span="424-424"];
m4_109 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="RealTimeHandler.Exit()", span="425-425"];
m4_111 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="var ts = Stopwatch.StartNew()", span="432-432"];
m4_112 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="(ResultHandler.IsActive || (TransactionHandler != null && TransactionHandler.IsActive) || (DataFeed != null && DataFeed.IsActive)) && ts.ElapsedMilliseconds < 30 * 1000", span="433-433"];
m4_113 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Thread.Sleep(100)", span="435-435"];
m4_114 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Trace(''Waiting for threads to exit...'')", span="435-435"];
m4_121 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="_brokerage.Disconnect()", span="440-440"];
m4_122 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="SetupHandler.Dispose()", span="441-441"];
m4_123 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="442-442"];
m4_124 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label=Exception, span="444-444"];
m4_126 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="!IsLocal", span="462-462"];
m4_125 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.Error(''Engine.Main(): Error running algorithm: '' + err.Message + '' >> '' + err.StackTrace)", span="446-446"];
m4_127 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="StateCheck.Ping.Exit()", span="465-465"];
m4_128 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Console.Read()", span="468-468"];
m4_131 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.LogHandler != null", span="473-473"];
m4_132 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Log.LogHandler.Dispose()", span="475-475"];
m4_133 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.Engine.Main(string[])", span="172-172"];
m4_232 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="106-106"];
m4_153 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="Extensions.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0"];
m4_175 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Extensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_158 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="318-318"];
m4_166 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="193-193"];
m4_181 [cluster="string.Format(string, params object[])", file="Extensions.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m4_273 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="62-62"];
m4_219 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="133-133"];
m4_167 [cluster="string.Format(string, object, object)", file="Extensions.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_174 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Extensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m4_180 [cluster="long.ToString(string)", file="Extensions.cs", label="Entry long.ToString(string)", span="0-0"];
m4_136 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Extensions.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m4_173 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="107-107"];
m4_191 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="83-83"];
m4_170 [cluster="System.TimeSpan.ToString(string)", file="Extensions.cs", label="Entry System.TimeSpan.ToString(string)", span="0-0"];
m4_134 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Extensions.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="89-89"];
m4_185 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="218-218"];
m4_157 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="121-121"];
m4_147 [cluster="QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Extensions.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="46-46"];
m4_276 [file="Extensions.cs", label=job, span=""];
m4_277 [file="Extensions.cs", label=algorithm, span=""];
m5_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="411-411"];
m5_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="ITransactionHandler.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="413-413"];
m5_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="411-411"];
m5_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1366-1366"];
m5_317 [cluster="Unk.Split", file="ITransactionHandler.cs", label="Entry Unk.Split", span=""];
m5_175 [cluster="Unk.PlotIndicator", file="ITransactionHandler.cs", label="Entry Unk.PlotIndicator", span=""];
m5_155 [cluster="Unk.ToArray", file="ITransactionHandler.cs", label="Entry Unk.ToArray", span=""];
m5_114 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="ITransactionHandler.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m5_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="509-509"];
m5_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="RegisterIndicator(symbol, filteredIdentity, ResolveConsolidator(symbol, resolution), pyselector)", span="515-515"];
m5_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="512-512"];
m5_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="514-514"];
m5_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="return filteredIdentity;", span="516-516"];
m5_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="var name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="511-511"];
m5_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="513-513"];
m5_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="509-509"];
m5_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="459-459"];
m5_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="ITransactionHandler.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="461-461"];
m5_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="459-459"];
m5_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="279-279"];
m5_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution)", span="281-281"];
m5_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="279-279"];
m5_316 [cluster="Unk.Repr", file="ITransactionHandler.cs", label="Entry Unk.Repr", span=""];
m5_29 [cluster="Unk.AddUniverse", file="ITransactionHandler.cs", label="Entry Unk.AddUniverse", span=""];
m5_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", file="ITransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", span="57-57"];
m5_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m5_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="443-443"];
m5_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="ITransactionHandler.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="445-445"];
m5_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="443-443"];
m5_319 [cluster="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", file="ITransactionHandler.cs", label="Entry System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", span="0-0"];
m5_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m5_33 [cluster="System.Func<T, TResult>.Invoke(T)", file="ITransactionHandler.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m5_308 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ITransactionHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59"];
m5_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="559-559"];
m5_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="561-561"];
m5_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="return _converter.GetDataFrame(History(symbols, start, end, resolution));", span="564-564"];
m5_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="symbols == null", span="562-562"];
m5_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="return null;", span="562-562"];
m5_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="559-559"];
m5_318 [cluster="Unk.Replace", file="ITransactionHandler.cs", label="Entry Unk.Replace", span=""];
m5_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1444-1444"];
m5_154 [cluster="Unk.Where", file="ITransactionHandler.cs", label="Entry Unk.Where", span=""];
m5_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="317-317"];
m5_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="ITransactionHandler.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="319-319"];
m5_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="317-317"];
m5_306 [cluster="System.Collections.Generic.List<T>.List()", file="ITransactionHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_72 [cluster="Unk.selector", file="ITransactionHandler.cs", label="Entry Unk.selector", span=""];
m5_289 [cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", span="31-31"];
m5_307 [cluster="string.IsNullOrWhiteSpace(string)", file="ITransactionHandler.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m5_83 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="159-159"];
m5_30 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="106-106"];
m5_43 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="119-119"];
m5_49 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="119-119"];
m5_59 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="132-132"];
m5_69 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="144-144"];
m5_80 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="159-159"];
m5_118 [cluster="lambda expression", file="ITransactionHandler.cs", label="selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))", span="268-269"];
m5_157 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="385-385"];
m5_163 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="399-399"];
m5_169 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="413-413"];
m5_176 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="421-421"];
m5_182 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="429-429"];
m5_188 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="437-437"];
m5_194 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="445-445"];
m5_200 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="453-453"];
m5_206 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="461-461"];
m5_121 [cluster="lambda expression", file="ITransactionHandler.cs", label="x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market)", span="269-269"];
m5_31 [cluster="lambda expression", file="ITransactionHandler.cs", label="coarse(c).Select(x => (Symbol)x)", span="106-106"];
m5_32 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="106-106"];
m5_44 [cluster="lambda expression", file="ITransactionHandler.cs", label="coarse(c).Select(x => (Symbol)x)", span="119-119"];
m5_50 [cluster="lambda expression", file="ITransactionHandler.cs", label="fine(f).Select(x => (Symbol)x)", span="119-119"];
m5_45 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="119-119"];
m5_51 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="119-119"];
m5_60 [cluster="lambda expression", file="ITransactionHandler.cs", label="selector(d).Select(x => (string)x)", span="132-132"];
m5_61 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="132-132"];
m5_70 [cluster="lambda expression", file="ITransactionHandler.cs", label="selector(d).Select(x => (string)x)", span="144-144"];
m5_71 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="144-144"];
m5_81 [cluster="lambda expression", file="ITransactionHandler.cs", label="selector(d).Select(x => (string)x)", span="159-159"];
m5_82 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="159-159"];
m5_117 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="268-269"];
m5_119 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="268-269"];
m5_120 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="269-269"];
m5_159 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="385-385"];
m5_158 [cluster="lambda expression", file="ITransactionHandler.cs", label="x != null", span="385-385"];
m5_165 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="399-399"];
m5_164 [cluster="lambda expression", file="ITransactionHandler.cs", label="x != null", span="399-399"];
m5_171 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="413-413"];
m5_170 [cluster="lambda expression", file="ITransactionHandler.cs", label="x != null", span="413-413"];
m5_178 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="421-421"];
m5_177 [cluster="lambda expression", file="ITransactionHandler.cs", label="x != null", span="421-421"];
m5_184 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="429-429"];
m5_183 [cluster="lambda expression", file="ITransactionHandler.cs", label="x != null", span="429-429"];
m5_190 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="437-437"];
m5_189 [cluster="lambda expression", file="ITransactionHandler.cs", label="x != null", span="437-437"];
m5_196 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="445-445"];
m5_195 [cluster="lambda expression", file="ITransactionHandler.cs", label="x != null", span="445-445"];
m5_202 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="453-453"];
m5_201 [cluster="lambda expression", file="ITransactionHandler.cs", label="x != null", span="453-453"];
m5_208 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="461-461"];
m5_207 [cluster="lambda expression", file="ITransactionHandler.cs", label="x != null", span="461-461"];
m5_122 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="269-269"];
m5_35 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="106-106"];
m5_46 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="119-119"];
m5_52 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="119-119"];
m5_62 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="132-132"];
m5_73 [cluster="lambda expression", file="ITransactionHandler.cs", label="Entry lambda expression", span="144-144"];
m5_37 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="106-106"];
m5_36 [cluster="lambda expression", file="ITransactionHandler.cs", label="(Symbol)x", span="106-106"];
m5_48 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="119-119"];
m5_47 [cluster="lambda expression", file="ITransactionHandler.cs", label="(Symbol)x", span="119-119"];
m5_54 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="119-119"];
m5_53 [cluster="lambda expression", file="ITransactionHandler.cs", label="(Symbol)x", span="119-119"];
m5_64 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="132-132"];
m5_63 [cluster="lambda expression", file="ITransactionHandler.cs", label="(string)x", span="132-132"];
m5_75 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="144-144"];
m5_74 [cluster="lambda expression", file="ITransactionHandler.cs", label="(string)x", span="144-144"];
m5_84 [cluster="lambda expression", file="ITransactionHandler.cs", label="(string)x", span="159-159"];
m5_85 [cluster="lambda expression", file="ITransactionHandler.cs", label="Exit lambda expression", span="159-159"];
m5_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="199-199"];
m5_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, universeSettings, selector)", span="201-201"];
m5_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="199-199"];
m5_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="141-141"];
m5_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="ITransactionHandler.cs", label="AddUniverse(name, d => selector(d).Select(x => (string)x))", span="144-144"];
m5_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="ITransactionHandler.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="143-143"];
m5_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="141-141"];
m5_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="591-591"];
m5_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="ITransactionHandler.cs", label="SetBrokerageModel(new BrokerageModelPythonWrapper(model))", span="593-593"];
m5_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="591-591"];
m5_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="369-369"];
m5_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="ITransactionHandler.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, consolidator, selector)", span="371-371"];
m5_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="369-369"];
m5_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="343-343"];
m5_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="ITransactionHandler.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="345-345"];
m5_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="343-343"];
m5_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="ITransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="62-62"];
m5_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", color=green, community=0, file="ITransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", prediction=0, span="62-62"];
m5_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="ITransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="67-67"];
m5_22 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="ITransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442"];
m5_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="451-451"];
m5_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="ITransactionHandler.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="453-453"];
m5_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="451-451"];
m5_28 [cluster="QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", span="74-74"];
m5_321 [cluster="Unk.HasAttr", file="ITransactionHandler.cs", label="Entry Unk.HasAttr", span=""];
m5_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="304-304"];
m5_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="ITransactionHandler.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="306-306"];
m5_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="304-304"];
m5_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="356-356"];
m5_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="ITransactionHandler.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, consolidator, selector)", span="358-358"];
m5_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="356-356"];
m5_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m5_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1265-1265"];
m5_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m5_232 [cluster="string.Format(string, object, object, object)", file="ITransactionHandler.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m5_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m5_267 [cluster="Unk.AsManagedObject", file="ITransactionHandler.cs", label="Entry Unk.AsManagedObject", span=""];
m5_156 [cluster="Unk.Plot", file="ITransactionHandler.cs", label="Entry Unk.Plot", span=""];
m5_34 [cluster="Unk.Select", file="ITransactionHandler.cs", label="Entry Unk.Select", span=""];
m5_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m5_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="624-624"];
m5_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="Py.GIL()", span="626-626"];
m5_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="!PyList.IsListType(pyObject)", span="629-629"];
m5_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="tmp.Append(pyObject)", span="632-632"];
m5_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label=pyObject, span="637-637"];
m5_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="var tmp = new PyList()", span="631-631"];
m5_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="var symbol = (Symbol)item.AsManagedObject(typeof(Symbol))", span="639-639"];
m5_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="return symbols.Count == 0 ? null : symbols;", span="648-648"];
m5_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="var symbols = new List<Symbol>()", span="636-636"];
m5_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="pyObject = tmp", span="633-633"];
m5_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="symbols.Add(symbol)", span="646-646"];
m5_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="string.IsNullOrWhiteSpace(symbol.Value)", span="641-641"];
m5_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="624-624"];
m5_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="83-83"];
m5_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ITransactionHandler.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="85-85"];
m5_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ITransactionHandler.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="89-89"];
m5_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ITransactionHandler.cs", label="var security = SecurityManager.CreateSecurity(dataType, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="92-93"];
m5_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ITransactionHandler.cs", label="AddToUserDefinedUniverse(security)", span="95-95"];
m5_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ITransactionHandler.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="88-88"];
m5_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="83-83"];
m5_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="527-527"];
m5_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="529-529"];
m5_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="return _converter.GetDataFrame(History(symbols, periods, resolution));", span="532-532"];
m5_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="symbols == null", span="530-530"];
m5_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="return null;", span="530-530"];
m5_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="527-527"];
m5_115 [cluster="FuncUniverse.cstr", file="ITransactionHandler.cs", label="Entry FuncUniverse.cstr", span=""];
m5_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="103-103"];
m5_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="ITransactionHandler.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x))", span="106-106"];
m5_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="ITransactionHandler.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="105-105"];
m5_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="103-103"];
m5_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="419-419"];
m5_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="ITransactionHandler.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="421-421"];
m5_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="419-419"];
m5_285 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", span="32-32"];
m5_304 [cluster="PyList.cstr", file="ITransactionHandler.cs", label="Entry PyList.cstr", span=""];
m5_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1338-1338"];
m5_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41"];
m5_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="ITransactionHandler.cs", label="_converter = new PandasConverter()", span="43-43"];
m5_323 [cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="ITransactionHandler.cs", label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0"];
m5_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m5_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1219-1219"];
m5_223 [cluster="QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", span="35-35"];
m5_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="129-129"];
m5_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="ITransactionHandler.cs", label="AddUniverse(name, resolution, d => selector(d).Select(x => (string)x))", span="132-132"];
m5_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="ITransactionHandler.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="131-131"];
m5_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="129-129"];
m5_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="262-262"];
m5_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(market, name, securityType)", span="260-260"];
m5_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="AddUniverse(new FuncUniverse(config, universeSettings, SecurityInitializer, d => selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))))", span="268-269"];
m5_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="258-258"];
m5_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="261-261"];
m5_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="var config = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, true, isFilteredSubscription: false)", span="264-264"];
m5_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="var selector = PythonUtil.ToFunc<IEnumerable<IBaseData>, object[]>(pySelector)", span="266-266"];
m5_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="263-263"];
m5_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="258-258"];
m5_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="184-184"];
m5_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="ITransactionHandler.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="186-186"];
m5_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="184-184"];
m5_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="291-291"];
m5_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution)", span="293-293"];
m5_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="291-291"];
m5_305 [cluster="Unk.Append", file="ITransactionHandler.cs", label="Entry Unk.Append", span=""];
m5_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m5_303 [cluster="Unk.IsListType", file="ITransactionHandler.cs", label="Entry Unk.IsListType", span=""];
m5_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1380-1380"];
m5_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="657-657"];
m5_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="ITransactionHandler.cs", label="Py.GIL()", span="659-659"];
m5_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="ITransactionHandler.cs", label="var an = new AssemblyName(type.Repr().Split('.')[1].Replace(''\'>'', ''''))", span="661-661"];
m5_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="ITransactionHandler.cs", label="return moduleBuilder.DefineType(an.Name,\r\n                        TypeAttributes.Public |\r\n                        TypeAttributes.Class |\r\n                        TypeAttributes.AutoClass |\r\n                        TypeAttributes.AnsiClass |\r\n                        TypeAttributes.BeforeFieldInit |\r\n                        TypeAttributes.AutoLayout,\r\n                        // If the type has IsAuthCodeSet member, it is a PythonQuandl\r\n                        type.HasAttr(''IsAuthCodeSet'') ? typeof(PythonQuandl) : typeof(PythonData))\r\n                    .CreateType();", span="664-673"];
m5_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="ITransactionHandler.cs", label="var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.Run)", span="662-662"];
m5_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="ITransactionHandler.cs", label="var moduleBuilder = assemblyBuilder.DefineDynamicModule(''MainModule'')", span="663-663"];
m5_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="657-657"];
m5_242 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m5_19 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="ITransactionHandler.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m5_21 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="ITransactionHandler.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m5_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="572-572"];
m5_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="ITransactionHandler.cs", label="SetBenchmark(pyBenchmark)", span="579-579"];
m5_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="ITransactionHandler.cs", label="SetBenchmark((Symbol)benchmark.AsManagedObject(typeof(Symbol)))", span="582-582"];
m5_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="ITransactionHandler.cs", label="var pyBenchmark = PythonUtil.ToFunc<DateTime, decimal>(benchmark)", span="576-576"];
m5_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="ITransactionHandler.cs", label="pyBenchmark != null", span="577-577"];
m5_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="ITransactionHandler.cs", label="return;", span="580-580"];
m5_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="ITransactionHandler.cs", label="Py.GIL()", span="574-574"];
m5_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="572-572"];
m5_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m5_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="543-543"];
m5_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="545-545"];
m5_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="return _converter.GetDataFrame(History(symbols, span, resolution));", span="548-548"];
m5_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="symbols == null", span="546-546"];
m5_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="return null;", span="546-546"];
m5_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="543-543"];
m5_272 [cluster="QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", span="38-38"];
m5_20 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="ITransactionHandler.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m5_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="600-600"];
m5_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="ITransactionHandler.cs", label="SetSecurityInitializer(securityInitializer1)", span="605-605"];
m5_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="ITransactionHandler.cs", label="SetSecurityInitializer(securityInitializer2)", span="612-612"];
m5_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="ITransactionHandler.cs", label="SetSecurityInitializer(new SecurityInitializerPythonWrapper(securityInitializer))", span="616-616"];
m5_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="ITransactionHandler.cs", label="var securityInitializer1 = PythonUtil.ToAction<Security>(securityInitializer)", span="602-602"];
m5_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="ITransactionHandler.cs", label="securityInitializer1 != null", span="603-603"];
m5_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="ITransactionHandler.cs", label="return;", span="606-606"];
m5_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="ITransactionHandler.cs", label="var securityInitializer2 = PythonUtil.ToAction<Security, bool>(securityInitializer)", span="609-609"];
m5_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="ITransactionHandler.cs", label="securityInitializer2 != null", span="610-610"];
m5_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="ITransactionHandler.cs", label="return;", span="613-613"];
m5_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="600-600"];
m5_320 [cluster="System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", file="ITransactionHandler.cs", label="Entry System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", span="0-0"];
m5_287 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", span="53-53"];
m5_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41"];
m5_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="427-427"];
m5_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="ITransactionHandler.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="429-429"];
m5_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="427-427"];
m5_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="435-435"];
m5_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="ITransactionHandler.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="437-437"];
m5_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="435-435"];
m5_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="330-330"];
m5_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="ITransactionHandler.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="332-332"];
m5_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="330-330"];
m5_18 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="ITransactionHandler.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m5_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="213-213"];
m5_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, universeSettings, selector)", span="215-215"];
m5_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="213-213"];
m5_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="115-115"];
m5_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="ITransactionHandler.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x), f => fine(f).Select(x => (Symbol)x))", span="119-119"];
m5_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="ITransactionHandler.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="117-117"];
m5_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="ITransactionHandler.cs", label="var fine = PythonUtil.ToFunc<IEnumerable<FineFundamental>, object[]>(pyfine)", span="118-118"];
m5_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="115-115"];
m5_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1352-1352"];
m5_315 [cluster="AssemblyName.cstr", file="ITransactionHandler.cs", label="Entry AssemblyName.cstr", span=""];
m5_113 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="ITransactionHandler.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m5_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="489-489"];
m5_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="var name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="491-491"];
m5_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="RegisterIndicator(symbol, filteredIdentity, resolution, pyselector)", span="495-495"];
m5_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="492-492"];
m5_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="494-494"];
m5_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="return filteredIdentity;", span="496-496"];
m5_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="493-493"];
m5_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="489-489"];
m5_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="397-397"];
m5_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="ITransactionHandler.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="399-399"];
m5_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="397-397"];
m5_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m5_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m5_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="156-156"];
m5_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="AddUniverse(securityType, name, resolution, market, universeSettings, d => selector(d).Select(x => (string)x))", span="159-159"];
m5_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="158-158"];
m5_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="156-156"];
m5_322 [cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", file="ITransactionHandler.cs", label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", span="0-0"];
m5_265 [cluster="Unk.GIL", file="ITransactionHandler.cs", label="Entry Unk.GIL", span=""];
m5_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="243-243"];
m5_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, universeSettings, selector)", span="245-245"];
m5_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="243-243"];
m5_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="228-228"];
m5_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="ITransactionHandler.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, UniverseSettings, selector)", span="230-230"];
m5_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="228-228"];
m5_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="170-170"];
m5_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="ITransactionHandler.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="172-172"];
m5_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="170-170"];
m5_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ITransactionHandler.cs", label="AddData(CreateType(type), symbol, resolution, timeZone, fillDataForward, leverage)", span="71-71"];
m5_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m5_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="473-473"];
m5_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="var resolution = GetSubscription(symbol).Resolution", span="475-475"];
m5_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="return FilteredIdentity(symbol, resolution, selector, filter, fieldName);", span="476-476"];
m5_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="473-473"];
m5_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="ITransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="383-383"];
m5_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="ITransactionHandler.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="385-385"];
m5_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="ITransactionHandler.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="383-383"];
m5_324 [file="ITransactionHandler.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m5_331 [file="ITransactionHandler.cs", label="QuantConnect.SecurityType", span=""];
m5_332 [file="ITransactionHandler.cs", label=string, span=""];
m5_333 [file="ITransactionHandler.cs", label=selector, span=""];
m5_325 [file="ITransactionHandler.cs", label=coarse, span=""];
m5_326 [file="ITransactionHandler.cs", label=coarse, span=""];
m5_327 [file="ITransactionHandler.cs", label=fine, span=""];
m5_328 [file="ITransactionHandler.cs", label=selector, span=""];
m5_329 [file="ITransactionHandler.cs", label=selector, span=""];
m5_330 [file="ITransactionHandler.cs", label=selector, span=""];
m9_15 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TestResultHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_14 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TestResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m9_12 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="TestResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m9_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="TestResultHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", span="40-40"];
m9_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="TestResultHandler.cs", label="_job = job", span="43-43"];
m9_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="TestResultHandler.cs", label="_queue = dataSource", span="44-44"];
m9_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="TestResultHandler.cs", label="algorithm.Securities.Values", span="50-50"];
m9_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="TestResultHandler.cs", label="_queue.Subscribe(job, symbols)", span="60-60"];
m9_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="TestResultHandler.cs", label="var symbols = new Dictionary<SecurityType, List<string>>()", span="47-47"];
m9_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="TestResultHandler.cs", label="!symbols.ContainsKey(security.Type)", span="54-54"];
m9_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="TestResultHandler.cs", label="symbols.Add(security.Type, new List<string>())", span="54-54"];
m9_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="TestResultHandler.cs", label="symbols[security.Type].Add(security.Symbol)", span="55-55"];
m9_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="TestResultHandler.cs", label="security.Type == SecurityType.Equity || security.Type == SecurityType.Forex", span="52-52"];
m9_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="TestResultHandler.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", span="40-40"];
m9_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.GetNextTicks()", file="TestResultHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.GetNextTicks()", span="67-67"];
m9_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.GetNextTicks()", file="TestResultHandler.cs", label="return _queue.GetNextTicks();", span="69-69"];
m9_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.GetNextTicks()", file="TestResultHandler.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.GetNextTicks()", span="67-67"];
m9_13 [cluster="System.Collections.Generic.List<T>.List()", file="TestResultHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_20 [cluster="QuantConnect.Interfaces.IDataQueueHandler.GetNextTicks()", file="TestResultHandler.cs", label="Entry QuantConnect.Interfaces.IDataQueueHandler.GetNextTicks()", span="35-35"];
m9_16 [cluster="QuantConnect.Interfaces.IDataQueueHandler.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="TestResultHandler.cs", label="Entry QuantConnect.Interfaces.IDataQueueHandler.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="42-42"];
m9_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TestResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m9_21 [file="TestResultHandler.cs", label="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed", span=""];
m0_167 -> m0_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_224 -> m0_229  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_226 -> m0_229  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m0_228 -> m0_230  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m0_204 -> m0_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_286 -> m0_310  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_286 -> m0_300  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m0_290 -> m0_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_291 -> m0_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_192 -> m0_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_250 -> m0_254  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_251 -> m0_254  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m0_31 -> m0_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_44 -> m0_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_60 -> m0_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_70 -> m0_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_81 -> m0_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_118 -> m0_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_269 -> m0_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_269 -> m0_280  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_269 -> m0_272  [color=darkseagreen4, key=1, label=config, style=dashed];
m0_268 -> m0_272  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_295 -> m0_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_295 -> m0_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_295 -> m0_300  [color=darkseagreen4, key=1, label=config, style=dashed];
m0_298 -> m0_300  [color=darkseagreen4, key=1, label=res, style=dashed];
m0_294 -> m0_300  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_65 -> m0_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_66 -> m0_70  [color=darkseagreen4, key=1, label=selector, style=dashed];
m0_67 -> m0_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_318 -> m0_324  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_320 -> m0_337  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m0_320 -> m0_324  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m0_321 -> m0_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_321 -> m0_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_323 -> m0_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_198 -> m0_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_240 -> m0_388  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_240 -> m0_390  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_240 -> m0_393  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_392 -> m0_396  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m0_392 -> m0_397  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m0_391 -> m0_393  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_394 -> m0_396  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m0_234 -> m0_238  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_235 -> m0_238  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m0_25 -> m0_31  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m0_26 -> m0_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_173 -> m0_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_55 -> m0_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_56 -> m0_60  [color=darkseagreen4, key=1, label=selector, style=dashed];
m0_57 -> m0_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_89 -> m0_111  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m0_89 -> m0_118  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m0_89 -> m0_121  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m0_109 -> m0_111  [color=darkseagreen4, key=1, label=config, style=dashed];
m0_110 -> m0_118  [color=darkseagreen4, key=1, label=selector, style=dashed];
m0_111 -> m0_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m0_10 -> m0_409  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_406 -> m0_409  [color=darkseagreen4, key=1, label=an, style=dashed];
m0_353 -> m0_359  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_355 -> m0_357  [color=darkseagreen4, key=1, label=pyBenchmark, style=dashed];
m0_243 -> m0_247  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_244 -> m0_247  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m0_370 -> m0_379  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_371 -> m0_373  [color=darkseagreen4, key=1, label=securityInitializer1, style=dashed];
m0_375 -> m0_377  [color=darkseagreen4, key=1, label=securityInitializer2, style=dashed];
m0_180 -> m0_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_186 -> m0_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_39 -> m0_41  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m0_39 -> m0_44  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m0_40 -> m0_50  [color=darkseagreen4, key=1, label=fine, style=dashed];
m0_41 -> m0_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_41 -> m0_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_214 -> m0_219  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_216 -> m0_219  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m0_218 -> m0_220  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m0_342 -> m0_347  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_345 -> m0_347  [color=darkseagreen4, key=1, label=start, style=dashed];
m0_161 -> m0_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_76 -> m0_78  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m0_77 -> m0_81  [color=darkseagreen4, key=1, label=selector, style=dashed];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_209 -> m0_211  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_152 -> m0_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_257 -> m0_281  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_257 -> m0_272  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_261 -> m0_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_262 -> m0_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_420 -> m0_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_78  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_124  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_131  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_135  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_145  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_152  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_161  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_180  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_186  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_192  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_198  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_204  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_211  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_219  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_238  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_247  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_254  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_281  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_272  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_310  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_300  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_291  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_316  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_326  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_347  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_351  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_357  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_359  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_366  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_373  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_377  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_420 -> m0_379  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_421 -> m0_31  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m0_422 -> m0_44  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m0_423 -> m0_50  [color=darkseagreen4, key=1, label=fine, style=dashed];
m0_424 -> m0_60  [color=darkseagreen4, key=1, label=selector, style=dashed];
m0_425 -> m0_70  [color=darkseagreen4, key=1, label=selector, style=dashed];
m0_426 -> m0_81  [color=darkseagreen4, key=1, label=selector, style=dashed];
m0_427 -> m0_118  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m0_427 -> m0_121  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m0_428 -> m0_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_428 -> m0_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_429 -> m0_118  [color=darkseagreen4, key=1, label=selector, style=dashed];
m0_430 -> m0_281  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_431 -> m0_272  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_432 -> m0_272  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_433 -> m0_272  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m0_434 -> m0_310  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_435 -> m0_300  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m0_437 -> m0_337  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m1_194 -> m1_196  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
m1_195 -> m1_198  [color=darkseagreen4, key=1, label=dataFeeds, style=dashed];
m1_186 -> m1_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_146 -> m1_148  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m1_165 -> m1_165  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m1_192 -> m1_192  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m1_41 -> m1_51  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_41 -> m1_152  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_154  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_155  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_156  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_157  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_158  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_159  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_41 -> m1_162  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_164  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_41 -> m1_61  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_41 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_41 -> m1_73  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_186  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_97  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_100  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_102  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_103  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_104  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_41 -> m1_110  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_42 -> m1_46  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_42 -> m1_160  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_42 -> m1_163  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_54 -> m1_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_89 -> m1_92  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m1_91 -> m1_100  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m1_91 -> m1_102  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m1_91 -> m1_103  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m1_49 -> m1_147  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m1_49 -> m1_148  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m1_71 -> m1_73  [color=darkseagreen4, key=1, label=cash, style=dashed];
m1_90 -> m1_94  [color=darkseagreen4, key=1, label=supportedSecurityTypes, style=dashed];
m1_90 -> m1_96  [color=darkseagreen4, key=1, label=supportedSecurityTypes, style=dashed];
m1_92 -> m1_94  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_92 -> m1_95  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_92 -> m1_96  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_92 -> m1_97  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_92 -> m1_98  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_92 -> m1_99  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_92 -> m1_100  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_92 -> m1_101  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_92 -> m1_102  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_92 -> m1_103  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_92 -> m1_104  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_26 -> m1_38  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_29 -> m1_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_30 -> m1_33  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerageFactory", style=dashed];
m1_10 -> m1_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m1_11 -> m1_13  [color=darkseagreen4, key=1, label=error, style=dashed];
m1_11 -> m1_14  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_210 -> m1_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_148  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_152  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_167  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_96  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_108  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_114  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_115  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_202  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_206  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_210 -> m1_207  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_211 -> m1_38  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_212 -> m1_152  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_212 -> m1_154  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_212 -> m1_155  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_212 -> m1_156  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_212 -> m1_157  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_212 -> m1_158  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_212 -> m1_159  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_212 -> m1_162  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_212 -> m1_164  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_212 -> m1_186  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_213 -> m1_154  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_214 -> m1_158  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m1_215 -> m1_160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_216 -> m1_160  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_216 -> m1_163  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_152 -> m4_245  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_164 -> m4_222  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_162 -> m4_201  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_213 -> m4_215  [color=darkseagreen4, key=1, label=df, style=dashed];
m4_163 -> m4_234  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_238 -> m4_240  [color=darkseagreen4, key=1, label=th, style=dashed];
m4_151 -> m4_261  [color=darkseagreen4, key=1, label="QuantConnect.SetupHandlerEndpoint", style=dashed];
m4_269 -> m4_271  [color=darkseagreen4, key=1, label=sh, style=dashed];
m4_2 -> m4_8  [color=darkseagreen4, key=1, label=mode, style=dashed];
m4_19 -> m4_129  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m4_19 -> m4_130  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m4_23 -> m4_115  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m4_23 -> m4_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m4_24 -> m4_117  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m4_24 -> m4_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m4_27 -> m4_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_194  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_41 -> m4_43  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_55  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_56  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_57  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_58  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_194  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_75  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_76  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_98  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_104  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_42 -> m4_53  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m4_71 -> m4_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_34 -> m4_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_194  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_39 -> m4_119  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m4_39 -> m4_120  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m4_88 -> m4_104  [color=darkseagreen4, key=1, label=orders, style=dashed];
m4_44 -> m4_53  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m4_50 -> m4_52  [color=darkseagreen4, key=1, label=runtimeMessage, style=dashed];
m4_64 -> m4_67  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m4_64 -> m4_115  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m4_64 -> m4_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m4_65 -> m4_68  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m4_65 -> m4_117  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m4_65 -> m4_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m4_66 -> m4_69  [color=darkseagreen4, key=1, label=threadRealTime, style=dashed];
m4_87 -> m4_95  [color=darkseagreen4, key=1, label=charts, style=dashed];
m4_82 -> m4_84  [color=darkseagreen4, key=1, label=message, style=dashed];
m4_82 -> m4_85  [color=darkseagreen4, key=1, label=message, style=dashed];
m4_82 -> m4_86  [color=darkseagreen4, key=1, label=message, style=dashed];
m4_89 -> m4_104  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m4_90 -> m4_104  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m4_91 -> m4_104  [color=darkseagreen4, key=1, label=banner, style=dashed];
m4_92 -> m4_95  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m4_93 -> m4_95  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m4_99 -> m4_104  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m4_276 -> m4_194  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_277 -> m4_194  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m5_167 -> m5_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_224 -> m5_229  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m5_226 -> m5_229  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m5_228 -> m5_230  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m5_204 -> m5_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_192 -> m5_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_250 -> m5_254  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_251 -> m5_254  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m5_118 -> m5_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_31 -> m5_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_44 -> m5_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_50 -> m5_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_60 -> m5_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_70 -> m5_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_81 -> m5_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_65 -> m5_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_67 -> m5_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_66 -> m5_70  [color=darkseagreen4, key=1, label=selector, style=dashed];
m5_198 -> m5_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_240 -> m5_292  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m5_240 -> m5_294  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m5_240 -> m5_297  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m5_298 -> m5_300  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m5_296 -> m5_301  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m5_296 -> m5_300  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m5_295 -> m5_297  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m5_234 -> m5_238  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_235 -> m5_238  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m5_26 -> m5_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_25 -> m5_31  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m5_173 -> m5_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_55 -> m5_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_57 -> m5_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_56 -> m5_60  [color=darkseagreen4, key=1, label=selector, style=dashed];
m5_111 -> m5_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m5_89 -> m5_111  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m5_89 -> m5_118  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m5_89 -> m5_121  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m5_109 -> m5_111  [color=darkseagreen4, key=1, label=config, style=dashed];
m5_110 -> m5_118  [color=darkseagreen4, key=1, label=selector, style=dashed];
m5_10 -> m5_313  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m5_310 -> m5_313  [color=darkseagreen4, key=1, label=an, style=dashed];
m5_257 -> m5_263  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m5_259 -> m5_261  [color=darkseagreen4, key=1, label=pyBenchmark, style=dashed];
m5_243 -> m5_247  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_244 -> m5_247  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m5_274 -> m5_283  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m5_275 -> m5_277  [color=darkseagreen4, key=1, label=securityInitializer1, style=dashed];
m5_279 -> m5_281  [color=darkseagreen4, key=1, label=securityInitializer2, style=dashed];
m5_180 -> m5_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_186 -> m5_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_41 -> m5_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_41 -> m5_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_39 -> m5_41  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m5_39 -> m5_44  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m5_40 -> m5_50  [color=darkseagreen4, key=1, label=fine, style=dashed];
m5_214 -> m5_219  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m5_216 -> m5_219  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m5_218 -> m5_220  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m5_161 -> m5_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_76 -> m5_78  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m5_78 -> m5_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_77 -> m5_81  [color=darkseagreen4, key=1, label=selector, style=dashed];
m5_209 -> m5_211  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m5_152 -> m5_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_324 -> m5_5  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_78  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_124  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_131  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_135  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_145  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_152  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_161  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_180  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_186  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_192  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_198  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_204  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_211  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_219  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_238  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_247  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_254  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_261  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_263  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_270  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_277  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_281  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_324 -> m5_283  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m5_331 -> m5_118  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m5_331 -> m5_121  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m5_332 -> m5_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_332 -> m5_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_333 -> m5_118  [color=darkseagreen4, key=1, label=selector, style=dashed];
m5_325 -> m5_31  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m5_326 -> m5_44  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m5_327 -> m5_50  [color=darkseagreen4, key=1, label=fine, style=dashed];
m5_328 -> m5_60  [color=darkseagreen4, key=1, label=selector, style=dashed];
m5_329 -> m5_70  [color=darkseagreen4, key=1, label=selector, style=dashed];
m5_330 -> m5_81  [color=darkseagreen4, key=1, label=selector, style=dashed];
m9_0 -> m9_4  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_0 -> m9_9  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m9_4 -> m9_6  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_4 -> m9_7  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_4 -> m9_8  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_3 -> m9_6  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m9_3 -> m9_7  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m9_3 -> m9_8  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m9_3 -> m9_9  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m9_21 -> m9_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed", style=dashed];
m9_21 -> m9_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed", style=dashed];
}
