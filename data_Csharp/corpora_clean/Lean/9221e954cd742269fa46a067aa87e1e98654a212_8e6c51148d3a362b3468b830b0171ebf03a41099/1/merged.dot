digraph  {
n10 [label="QuantConnect.Orders.LimitOrder", span=""];
n0 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="38-38", cluster="QuantConnect.Orders.LimitOrder.LimitOrder()"];
n1 [label="Type = OrderType.Limit", span="40-40", cluster="QuantConnect.Orders.LimitOrder.LimitOrder()"];
n2 [label="Exit QuantConnect.Orders.LimitOrder.LimitOrder()", span="38-38", cluster="QuantConnect.Orders.LimitOrder.LimitOrder()"];
n3 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="53-53", cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)"];
n4 [label="LimitPrice = limitPrice", span="56-56", cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)"];
n6 [label="tag == ''''", span="59-59", cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)"];
n7 [label="Tag = ''Limit Price: '' + limitPrice.ToString(''C'')", span="62-62", cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)"];
n5 [label="Type = OrderType.Limit", span="57-57", cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)"];
n8 [label="Exit QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="53-53", cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)"];
n9 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)"];
m0_45 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1464-1464", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="LiveTradingResultHandler.cs"];
m0_51 [label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202", cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LiveTradingResultHandler.cs"];
m0_6 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="LiveTradingResultHandler.cs"];
m0_34 [label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, System.TimeSpan)", span="119-119", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, System.TimeSpan)", file="LiveTradingResultHandler.cs"];
m0_39 [label="Security = security", span="121-121", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, System.TimeSpan)", file="LiveTradingResultHandler.cs"];
m0_40 [label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, period)", span="122-122", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, System.TimeSpan)", file="LiveTradingResultHandler.cs"];
m0_41 [label="algorithm.SubscriptionManager.AddConsolidator(security.Symbol, Consolidator)", span="123-123", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, System.TimeSpan)", file="LiveTradingResultHandler.cs"];
m0_42 [label="MACD = new MovingAverageConvergenceDivergence(12, 26, 9, MovingAverageType.Exponential)", span="125-125", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, System.TimeSpan)", file="LiveTradingResultHandler.cs"];
m0_43 [label="Consolidator.DataConsolidated += OnDataConsolidated", span="127-127", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, System.TimeSpan)", file="LiveTradingResultHandler.cs"];
m0_44 [label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, System.TimeSpan)", span="119-119", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, System.TimeSpan)", file="LiveTradingResultHandler.cs"];
m0_36 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LiveTradingResultHandler.cs"];
m0_22 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan)", span="111-111", cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan)", file="LiveTradingResultHandler.cs"];
m0_35 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="LiveTradingResultHandler.cs"];
m0_23 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", span="210-210", cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", file="LiveTradingResultHandler.cs"];
m0_47 [label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(int, int, int, QuantConnect.Indicators.MovingAverageType)", span="62-62", cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(int, int, int, QuantConnect.Indicators.MovingAverageType)", file="LiveTradingResultHandler.cs"];
m0_25 [label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="94-94", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LiveTradingResultHandler.cs"];
m0_26 [label="changes.AddedSecurities", span="96-96", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LiveTradingResultHandler.cs"];
m0_27 [label="_symbolData.Add(added.Symbol, new SymbolData(algorithm, added, _consolidatorPeriod))", span="98-98", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LiveTradingResultHandler.cs"];
m0_28 [label="changes.RemovedSecurities", span="100-100", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LiveTradingResultHandler.cs"];
m0_31 [label="data.CleanUp(algorithm)", span="105-105", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LiveTradingResultHandler.cs"];
m0_29 [label="SymbolData data", span="102-102", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LiveTradingResultHandler.cs"];
m0_30 [label="_symbolData.TryGetValue(removed.Symbol, out data)", span="103-103", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LiveTradingResultHandler.cs"];
m0_32 [label="_symbolData.Remove(removed.Symbol)", span="106-106", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LiveTradingResultHandler.cs"];
m0_33 [label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="94-94", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LiveTradingResultHandler.cs"];
m0_52 [label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.OnDataConsolidated(object, QuantConnect.Data.IBaseData)", span="140-140", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.OnDataConsolidated(object, QuantConnect.Data.IBaseData)", file="LiveTradingResultHandler.cs"];
m0_53 [label="MACD.Update(consolidated.EndTime, consolidated.Value)", span="142-142", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.OnDataConsolidated(object, QuantConnect.Data.IBaseData)", file="LiveTradingResultHandler.cs"];
m0_54 [label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.OnDataConsolidated(object, QuantConnect.Data.IBaseData)", span="140-140", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.OnDataConsolidated(object, QuantConnect.Data.IBaseData)", file="LiveTradingResultHandler.cs"];
m0_37 [label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.CleanUp(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="134-134", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.CleanUp(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingResultHandler.cs"];
m0_48 [label="Consolidator.DataConsolidated -= OnDataConsolidated", span="136-136", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.CleanUp(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingResultHandler.cs"];
m0_49 [label="algorithm.SubscriptionManager.RemoveConsolidator(Security.Symbol, Consolidator)", span="137-137", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.CleanUp(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingResultHandler.cs"];
m0_50 [label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.CleanUp(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="134-134", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.CleanUp(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingResultHandler.cs"];
m0_24 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.Clone()", span="163-163", cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Clone()", file="LiveTradingResultHandler.cs"];
m0_8 [label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="57-57", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_9 [label="_symbolData.Values", span="59-59", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_20 [label="yield return alpha;", span="84-84", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_10 [label="sd.Security.Price == 0", span="61-61", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_12 [label="var normalizedAlpha = sd.MACD.Signal / sd.Security.Price", span="67-67", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_17 [label="var alpha = new Alpha(sd.Security.Symbol, AlphaType.Price, direction, _alphaPeriod)", span="77-77", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_18 [label="alpha.Equals(sd.PreviousAlpha)", span="78-78", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_19 [label="sd.PreviousAlpha = alpha.Clone()", span="83-83", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_11 [label="var direction = AlphaDirection.Flat", span="66-66", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_13 [label="normalizedAlpha > _bounceThresholdPercent", span="68-68", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_15 [label="normalizedAlpha < -_bounceThresholdPercent", span="72-72", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_14 [label="direction = AlphaDirection.Up", span="70-70", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_16 [label="direction = AlphaDirection.Down", span="74-74", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_21 [label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="57-57", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="LiveTradingResultHandler.cs"];
m0_46 [label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169", cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LiveTradingResultHandler.cs"];
m0_38 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="LiveTradingResultHandler.cs"];
m0_0 [label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(System.TimeSpan, System.TimeSpan, decimal)", span="43-43", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(System.TimeSpan, System.TimeSpan, decimal)", file="LiveTradingResultHandler.cs"];
m0_1 [label="_alphaPeriod = alphaPeriod", span="45-45", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(System.TimeSpan, System.TimeSpan, decimal)", file="LiveTradingResultHandler.cs"];
m0_2 [label="_consolidatorPeriod = consolidatorPeriod", span="46-46", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(System.TimeSpan, System.TimeSpan, decimal)", file="LiveTradingResultHandler.cs"];
m0_3 [label="_bounceThresholdPercent = Math.Abs(bounceThresholdPercent)", span="47-47", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(System.TimeSpan, System.TimeSpan, decimal)", file="LiveTradingResultHandler.cs"];
m0_4 [label="_symbolData = new Dictionary<Symbol, SymbolData>()", span="48-48", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(System.TimeSpan, System.TimeSpan, decimal)", file="LiveTradingResultHandler.cs"];
m0_5 [label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(System.TimeSpan, System.TimeSpan, decimal)", span="43-43", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(System.TimeSpan, System.TimeSpan, decimal)", file="LiveTradingResultHandler.cs"];
m0_55 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="LiveTradingResultHandler.cs"];
m0_7 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LiveTradingResultHandler.cs"];
m0_56 [label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", span="", file="LiveTradingResultHandler.cs"];
m0_57 [label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", span="", file="LiveTradingResultHandler.cs"];
m1_59 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="MarketOrder.cs"];
m1_18 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1149-1149", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="MarketOrder.cs"];
m1_22 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", span="85-85", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_23 [label="Time.Hour == 1 && Time.Minute == 0", span="87-87", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_24 [label="var limitPrice = Math.Round(Securities[''ETHUSD''].Price * 1.01m, 2)", span="90-90", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_25 [label="var quantity = Portfolio.CashBook[''ETH''].Amount", span="91-91", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_26 [label="LimitOrder(''ETHUSD'', -quantity, limitPrice)", span="92-92", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_27 [label="Time.Hour == 2 && Time.Minute == 0", span="94-94", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_28 [label="var usdTotal = Portfolio.CashBook[''USD''].Amount", span="97-97", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_29 [label="var limitPrice = Math.Round(Securities[''BTCUSD''].Price * 0.95m, 2)", span="98-98", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_31 [label="LimitOrder(''BTCUSD'', quantity, limitPrice)", span="101-101", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_32 [label="Time.Hour == 2 && Time.Minute == 1", span="103-103", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_33 [label="var usdTotal = Portfolio.CashBook[''USD''].Amount", span="106-106", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_34 [label="var usdReserved = Transactions.GetOpenOrders(x => x.Direction == OrderDirection.Buy && x.Type == OrderType.Limit)\r\n                    .Where(x => x.Symbol == ''BTCUSD'' || x.Symbol == ''ETHUSD'')\r\n                    .Sum(x => x.Quantity * ((LimitOrder) x).LimitPrice)", span="107-109", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_36 [label="var limitPrice = Math.Round(Securities[''ETHUSD''].Price * 1.01m, 2)", span="113-113", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_38 [label="LimitOrder(''ETHUSD'', quantity, limitPrice)", span="119-119", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_40 [label="LimitOrder(''ETHUSD'', quantity, limitPrice)", span="123-123", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_41 [label="Time.Hour == 11 && Time.Minute == 0", span="125-125", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_42 [label="SetHoldings(''BTCUSD'', 0m)", span="128-128", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_43 [label="Time.Hour == 12 && Time.Minute == 0", span="130-130", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_44 [label="Buy(''BTCEUR'', 1m)", span="133-133", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_45 [label="var limitPrice = Math.Round(Securities[''BTCEUR''].Price * 1.1m, 2)", span="136-136", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_46 [label="LimitOrder(''BTCEUR'', -1, limitPrice)", span="137-137", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_47 [label="Time.Hour == 13 && Time.Minute == 0", span="139-139", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_48 [label="Transactions.CancelOpenOrders(''BTCEUR'')", span="142-142", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_49 [label="Time.Hour > 13", span="144-144", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_50 [label="_fast > _slow", span="149-149", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_51 [label="Portfolio.CashBook[''LTC''].Amount == 0", span="151-151", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_52 [label="Buy(''LTCUSD'', 10)", span="153-153", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_53 [label="Portfolio.CashBook[''LTC''].Amount > 0", span="158-158", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_54 [label="Liquidate(''LTCUSD'')", span="163-163", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_30 [label="var quantity = usdTotal * 0.5m / limitPrice", span="100-100", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_35 [label="var usdAvailable = usdTotal - usdReserved", span="110-110", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_37 [label="var quantity = usdAvailable / limitPrice", span="116-116", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_39 [label="quantity = usdAvailable * 0.5m / limitPrice", span="122-122", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_55 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", span="85-85", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnData(QuantConnect.Data.Slice)", file="MarketOrder.cs"];
m1_74 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="MarketOrder.cs"];
m1_68 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="MarketOrder.cs"];
m1_71 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="MarketOrder.cs"];
m1_70 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="MarketOrder.cs"];
m1_69 [label="x.Direction == OrderDirection.Buy && x.Type == OrderType.Limit", span="107-107", cluster="lambda expression", file="MarketOrder.cs"];
m1_73 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="MarketOrder.cs"];
m1_72 [label="x.Symbol == ''BTCUSD'' || x.Symbol == ''ETHUSD''", span="108-108", cluster="lambda expression", file="MarketOrder.cs"];
m1_75 [label="x.Quantity * ((LimitOrder) x).LimitPrice", span="109-109", cluster="lambda expression", file="MarketOrder.cs"];
m1_76 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="MarketOrder.cs"];
m1_62 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="885-885", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="MarketOrder.cs"];
m1_81 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnEndOfAlgorithm()", span="175-175", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnEndOfAlgorithm()", file="MarketOrder.cs"];
m1_82 [label="Log($''{Time} - TotalPortfolioValue: {Portfolio.TotalPortfolioValue}'')", span="177-177", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnEndOfAlgorithm()", file="MarketOrder.cs"];
m1_83 [label="Log($''{Time} - CashBook: {Portfolio.CashBook}'')", span="178-178", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnEndOfAlgorithm()", file="MarketOrder.cs"];
m1_84 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnEndOfAlgorithm()", span="175-175", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnEndOfAlgorithm()", file="MarketOrder.cs"];
m1_57 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="MarketOrder.cs"];
m1_77 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="170-170", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="MarketOrder.cs"];
m1_78 [label="Debug(Time + '' '' + orderEvent)", span="172-172", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="MarketOrder.cs"];
m1_79 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="170-170", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="MarketOrder.cs"];
m1_66 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="MarketOrder.cs"];
m1_3 [label="SetCash(10000)", span="48-48", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs", color=green, community=0];
m1_4 [label="SetCash(''EUR'', 10000, 1.23m)", span="52-52", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_5 [label="SetCash(''BTC'', 1m, 7300m)", span="57-57", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1638-1638", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="MarketOrder.cs"];
m1_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1172-1172", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="MarketOrder.cs"];
m1_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="360-360", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="MarketOrder.cs"];
m1_0 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", span="40-40", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_1 [label="SetStartDate(2018, 4, 4)", span="42-42", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs", color=green, community=0];
m1_2 [label="SetEndDate(2018, 4, 4)", span="43-43", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs", color=green, community=0];
m1_58 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="281-281", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="MarketOrder.cs"];
m1_6 [label="QuantConnect.Orders.MarketOrder", span="", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_7 [label="SetBrokerageModel(BrokerageName.GDAX, AccountType.Cash)", span="63-63", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_8 [label="AddCrypto(''BTCUSD'')", span="71-71", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_9 [label="AddCrypto(''ETHUSD'')", span="72-72", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_10 [label="AddCrypto(''BTCEUR'')", span="73-73", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_11 [label="var symbol = AddCrypto(''LTCUSD'').Symbol", span="74-74", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_12 [label="_fast = EMA(symbol, 30, Resolution.Minute)", span="77-77", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_13 [label="_slow = EMA(symbol, 60, Resolution.Minute)", span="78-78", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_14 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", span="40-40", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm.Initialize()", file="MarketOrder.cs"];
m1_80 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1791-1791", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="MarketOrder.cs"];
m1_85 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1837-1837", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="MarketOrder.cs"];
m1_64 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="MarketOrder.cs"];
m1_63 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="MarketOrder.cs"];
m1_16 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1197-1197", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="MarketOrder.cs"];
m1_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="978-978", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="MarketOrder.cs"];
m1_56 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)", file="MarketOrder.cs"];
m1_67 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="MarketOrder.cs"];
m1_17 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1121-1121", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="MarketOrder.cs"];
m1_60 [label="Entry Unk.Sum", span="", cluster="Unk.Sum", file="MarketOrder.cs"];
m1_65 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", span="184-184", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", file="MarketOrder.cs"];
m1_61 [label="Entry Unk.LimitOrder", span="", cluster="Unk.LimitOrder", file="MarketOrder.cs"];
m1_86 [label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm", span="", file="MarketOrder.cs"];
m2_38 [label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", span="76-76", cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Order.cs"];
m2_41 [label="Entry QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.InitializeForRange(System.DateTime, System.DateTime, System.DateTime)", span="150-150", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.InitializeForRange(System.DateTime, System.DateTime, System.DateTime)", file="Order.cs"];
m2_42 [label="Exit QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.InitializeForRange(System.DateTime, System.DateTime, System.DateTime)", span="150-150", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.InitializeForRange(System.DateTime, System.DateTime, System.DateTime)", file="Order.cs"];
m2_14 [label="Entry QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", span="84-84", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_15 [label="Statistics.TotalAlphasClosed += 1", span="87-87", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_16 [label="var volume = _tradablePercentOfVolume * context.InitialValues.Volume", span="90-90", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_17 [label="var enterValue = volume * context.InitialValues.Price * context.InitialValues.QuoteCurrencyConversionRate", span="93-93", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_18 [label="var exitValue = volume * context.CurrentValues.Price * context.CurrentValues.QuoteCurrencyConversionRate", span="96-96", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_19 [label="var alphaValue = (int)context.Alpha.Direction * (exitValue - enterValue)", span="99-99", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_20 [label="context.Alpha.EstimatedValue = alphaValue", span="101-101", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_21 [label="Statistics.TotalEstimatedAlphaValue += alphaValue", span="102-102", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_22 [label="Exit QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", span="84-84", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_23 [label="Entry QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", span="109-109", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_24 [label="Statistics.TotalAlphasAnalysisCompleted += 1", span="112-112", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_26 [label="var score = context.Score.GetScore(scoreType)", span="116-116", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_27 [label="var currentTime = context.CurrentValues.TimeUtc", span="117-117", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_25 [label="AlphaManager.ScoreTypes", span="114-114", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_28 [label="var mean = Statistics.MeanPopulationScore.GetScore(scoreType)", span="120-120", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_30 [label="Statistics.MeanPopulationScore.SetScore(scoreType, newMean, currentTime)", span="122-122", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_33 [label="var ema = Statistics.RollingAveragedPopulationScore.GetScore(scoreType)", span="128-128", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", color=red, community=0, file="Order.cs"];
m2_35 [label="Statistics.RollingAveragedPopulationScore.SetScore(scoreType, newEma, currentTime)", span="131-131", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_29 [label="var newMean = mean + (score - mean) / Statistics.TotalAlphasAnalysisCompleted", span="121-121", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_31 [label="var newEma = score", span="124-124", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_34 [label="newEma = score * _smoothingFactor + ema * (1 - _smoothingFactor)", span="129-129", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", color=red, community=0, file="Order.cs"];
m2_32 [label="Statistics.TotalAlphasAnalysisCompleted > 1", span="125-125", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", color=red, community=0, file="Order.cs"];
m2_36 [label="Exit QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", span="109-109", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_7 [label="Entry QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaGenerated(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", span="63-63", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaGenerated(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_8 [label="Statistics.TotalAlphasGenerated++", span="66-66", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaGenerated(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_9 [label="context.Alpha.Direction == AlphaDirection.Up", span="69-69", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaGenerated(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_11 [label="context.Alpha.Direction == AlphaDirection.Down", span="73-73", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaGenerated(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_10 [label="Statistics.LongCount++", span="71-71", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaGenerated(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_12 [label="Statistics.ShortCount++", span="75-75", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaGenerated(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_13 [label="Exit QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaGenerated(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", span="63-63", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.OnAlphaGenerated(QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext)", file="Order.cs"];
m2_6 [label="Entry QuantConnect.AlphaRuntimeStatistics.AlphaRuntimeStatistics()", span="10-10", cluster="QuantConnect.AlphaRuntimeStatistics.AlphaRuntimeStatistics()", file="Order.cs"];
m2_0 [label="Entry QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.StatisticsAlphaManagerExtension(decimal, int)", span="48-48", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.StatisticsAlphaManagerExtension(decimal, int)", file="Order.cs"];
m2_1 [label="Statistics = new AlphaRuntimeStatistics()", span="50-50", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.StatisticsAlphaManagerExtension(decimal, int)", file="Order.cs"];
m2_2 [label="_tradablePercentOfVolume = tradablePercentOfVolume", span="51-51", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.StatisticsAlphaManagerExtension(decimal, int)", file="Order.cs"];
m2_3 [label="_smoothingFactor = 2.0 / (period + 1.0)", span="52-52", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.StatisticsAlphaManagerExtension(decimal, int)", file="Order.cs"];
m2_4 [label="_rollingAverageIsReadyCount = period", span="55-55", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.StatisticsAlphaManagerExtension(decimal, int)", file="Order.cs"];
m2_5 [label="Exit QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.StatisticsAlphaManagerExtension(decimal, int)", span="48-48", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.StatisticsAlphaManagerExtension(decimal, int)", file="Order.cs"];
m2_39 [label="Entry QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.Step(System.DateTime)", span="139-139", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.Step(System.DateTime)", file="Order.cs"];
m2_40 [label="Exit QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.Step(System.DateTime)", span="139-139", cluster="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension.Step(System.DateTime)", file="Order.cs"];
m2_37 [label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", span="112-112", cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Order.cs"];
m2_43 [label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension", span="", file="Order.cs"];
m3_18 [label="var bar = (TradeBar) data", span="66-66", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_19 [label="return ToCsv(milliseconds, Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close), bar.Volume);", span="67-67", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_20 [label="Resolution.Hour", span="69-69", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_21 [label="Resolution.Daily", span="70-70", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_22 [label="var bigBar = (TradeBar) data", span="71-71", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_25 [label="SecurityType.Cfd", span="77-77", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_26 [label=resolution, span="78-78", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_23 [label="return ToCsv(longTime, Scale(bigBar.Open), Scale(bigBar.High), Scale(bigBar.Low), Scale(bigBar.Close), bigBar.Volume);", span="72-72", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_24 [label="SecurityType.Forex", span="76-76", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_27 [label="Resolution.Tick", span="80-80", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_128 [label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="283-283", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_129 [label="return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, date, resolution, tickType));", span="285-285", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m3_130 [label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="283-283", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_34 [label="Resolution.Hour", span="91-91", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_35 [label="Resolution.Daily", span="92-92", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_36 [label="var bigBar = (QuoteBar) data", span="93-93", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_37 [label="return ToCsv(longTime,\r\n                                ToNonScaledCsv(bigBar.Bid), bigBar.LastBidSize,\r\n                                ToNonScaledCsv(bigBar.Ask), bigBar.LastAskSize);", span="94-96", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_110 [label="Entry QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="660-660", cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="QCAlgorithm.Trading.cs"];
m3_302 [label="return ToCsv(bar.Open, bar.High, bar.Low, bar.Close);", span="667-667", cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="QCAlgorithm.Trading.cs"];
m3_301 [label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="664-664", cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="QCAlgorithm.Trading.cs"];
m3_300 [label="bar == null", span="662-662", cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="QCAlgorithm.Trading.cs"];
m3_303 [label="Exit QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="660-660", cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="QCAlgorithm.Trading.cs"];
m3_7 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm.Initialize()", span="31-31", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm.Initialize()", file="QCAlgorithm.Trading.cs"];
m3_89 [label="var openInterest = data as OpenInterest", span="207-207", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m3_87 [label="tradeBar != null", span="202-202", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_90 [label="openInterest != null", span="208-208", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m3_91 [label="return ToCsv(milliseconds, openInterest.Value);", span="210-210", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_104 [label="throw new NotImplementedException(''LeanData.GenerateLine has not yet been implemented for security type: '' + securityType + '' at resolution: '' + resolution);", span="242-242", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.Trading.cs"];
m3_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.Trading.cs"];
m3_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.Trading.cs"];
m3_12 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="QCAlgorithm.Trading.cs"];
m3_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="986-986", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.Trading.cs"];
m3_28 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="QCAlgorithm.Trading.cs"];
m3_32 [label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169", cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Trading.cs"];
m3_39 [label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm", span="", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_41 [label="var tick = (Tick)data", span="104-104", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_50 [label="var quoteBar = data as QuoteBar", span="124-124", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_53 [label="var tradeBar = data as TradeBar", span="131-131", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_56 [label="var openInterest = data as OpenInterest", span="137-137", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_61 [label="var bigQuoteBar = data as QuoteBar", span="147-147", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_64 [label="var bigTradeBar = data as TradeBar", span="154-154", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_67 [label="var bigOpenInterest = data as OpenInterest", span="159-159", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_70 [label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="167-167", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_72 [label=resolution, span="171-171", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_74 [label="var tick = (Tick)data", span="174-174", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_83 [label="var quoteBar = data as QuoteBar", span="194-194", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_86 [label="var tradeBar = data as TradeBar", span="201-201", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_94 [label="var bigQuoteBar = data as QuoteBar", span="217-217", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_97 [label="var bigTradeBar = data as TradeBar", span="224-224", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_100 [label="var bigOpenInterest = data as OpenInterest", span="229-229", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_103 [label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="237-237", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_88 [label="return ToCsv(milliseconds,\r\n                                             tradeBar.Open, tradeBar.High, tradeBar.Low, tradeBar.Close, tradeBar.Volume);", span="204-205", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_46 [label="tick.TickType == TickType.OpenInterest", span="115-115", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_57 [label="openInterest != null", span="138-138", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_68 [label="bigOpenInterest != null", span="160-160", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_79 [label="tick.TickType == TickType.OpenInterest", span="185-185", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_101 [label="bigOpenInterest != null", span="230-230", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_15 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_29 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="QCAlgorithm.Trading.cs"];
m3_33 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.Trading.cs"];
m3_43 [label="return ToCsv(milliseconds,\r\n                                    Scale(tick.LastPrice), tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'' : ''0'');", span="107-108", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_45 [label="return ToCsv(milliseconds,\r\n                                    Scale(tick.BidPrice), tick.BidSize, Scale(tick.AskPrice), tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="112-113", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_47 [label="return ToCsv(milliseconds, tick.Value);", span="117-117", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_52 [label="return ToCsv(milliseconds,\r\n                                    ToScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="127-129", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_55 [label="return ToCsv(milliseconds,\r\n                                    Scale(tradeBar.Open), Scale(tradeBar.High), Scale(tradeBar.Low), Scale(tradeBar.Close), tradeBar.Volume);", span="134-135", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_58 [label="return ToCsv(milliseconds, openInterest.Value);", span="140-140", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_69 [label="return ToCsv(milliseconds, bigOpenInterest.Value);", span="162-162", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_76 [label="return ToCsv(milliseconds,\r\n                                             tick.LastPrice, tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'': ''0'');", span="177-178", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_78 [label="return ToCsv(milliseconds,\r\n                                             tick.BidPrice, tick.BidSize, tick.AskPrice, tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="182-183", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_80 [label="return ToCsv(milliseconds, tick.Value);", span="187-187", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_85 [label="return ToCsv(milliseconds,\r\n                                    ToNonScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="197-199", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_63 [label="return ToCsv(longTime,\r\n                                    ToScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="150-152", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_66 [label="return ToCsv(longTime, ToScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="157-157", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_96 [label="return ToCsv(longTime,\r\n                                    ToNonScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="220-222", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_99 [label="return ToCsv(longTime, ToNonScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="227-227", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_102 [label="return ToCsv(longTime, bigOpenInterest.Value);", span="232-232", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1404-1404", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Trading.cs"];
m3_38 [label="Entry QuantConnect.Data.BaseData.ToString()", span="272-272", cluster="QuantConnect.Data.BaseData.ToString()", file="QCAlgorithm.Trading.cs"];
m3_71 [label="SecurityType.Future", span="170-170", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_13 [label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="146-146", cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.Trading.cs"];
m3_16 [label=0, span="40-40", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_17 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_30 [label="Entry QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(System.TimeSpan)", span="29-29", cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(System.TimeSpan)", file="QCAlgorithm.Trading.cs"];
m3_31 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="QCAlgorithm.Trading.cs"];
m3_40 [label="Resolution.Tick", span="103-103", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_48 [label="Resolution.Second", span="121-121", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_59 [label="Resolution.Hour", span="144-144", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_42 [label="tick.TickType == TickType.Trade", span="105-105", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_44 [label="tick.TickType == TickType.Quote", span="110-110", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_49 [label="Resolution.Minute", span="122-122", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_51 [label="quoteBar != null", span="125-125", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_54 [label="tradeBar != null", span="132-132", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_60 [label="Resolution.Daily", span="145-145", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_62 [label="bigQuoteBar != null", span="148-148", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_65 [label="bigTradeBar != null", span="155-155", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_73 [label="Resolution.Tick", span="173-173", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_81 [label="Resolution.Second", span="191-191", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_92 [label="Resolution.Hour", span="214-214", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_75 [label="tick.TickType == TickType.Trade", span="175-175", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_77 [label="tick.TickType == TickType.Quote", span="180-180", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_82 [label="Resolution.Minute", span="192-192", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_84 [label="quoteBar != null", span="195-195", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_93 [label="Resolution.Daily", span="215-215", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_95 [label="bigQuoteBar != null", span="218-218", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_98 [label="bigTradeBar != null", span="225-225", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_105 [label="Exit QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_111 [label="Entry QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="646-646", cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="QCAlgorithm.Trading.cs"];
m3_298 [label="return ToCsv(Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close));", span="653-653", cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="QCAlgorithm.Trading.cs"];
m3_297 [label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="650-650", cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="QCAlgorithm.Trading.cs"];
m3_296 [label="bar == null", span="648-648", cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="QCAlgorithm.Trading.cs"];
m3_299 [label="Exit QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="646-646", cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="QCAlgorithm.Trading.cs"];
m3_108 [label="Entry QuantConnect.Util.LeanData.Scale(decimal)", span="620-620", cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="QCAlgorithm.Trading.cs"];
m3_284 [label="return (long)(value*10000);", span="622-622", cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="QCAlgorithm.Trading.cs"];
m3_285 [label="Exit QuantConnect.Util.LeanData.Scale(decimal)", span="620-620", cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="QCAlgorithm.Trading.cs"];
m3_346 [label="Entry string.GetExtension()", span="409-409", cluster="string.GetExtension()", file="QCAlgorithm.Trading.cs"];
m3_357 [label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131", cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="QCAlgorithm.Trading.cs"];
m3_343 [label="Entry System.Enum.GetNames(System.Type)", span="0-0", cluster="System.Enum.GetNames(System.Type)", file="QCAlgorithm.Trading.cs"];
m3_109 [label="Entry QuantConnect.Util.LeanData.ToCsv(params object[])", span="628-628", cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="QCAlgorithm.Trading.cs"];
m3_286 [label="var i = 0", span="631-631", cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="QCAlgorithm.Trading.cs"];
m3_287 [label="i < args.Length", span="631-631", cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="QCAlgorithm.Trading.cs"];
m3_288 [label="var value = args[i]", span="633-633", cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="QCAlgorithm.Trading.cs"];
m3_290 [label="args[i] = ((decimal) value).Normalize().ToString(CultureInfo.InvariantCulture)", span="636-636", cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="QCAlgorithm.Trading.cs"];
m3_292 [label="return string.Join('','', args);", span="640-640", cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="QCAlgorithm.Trading.cs"];
m3_291 [label="i++", span="631-631", cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="QCAlgorithm.Trading.cs"];
m3_289 [label="value is decimal", span="634-634", cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="QCAlgorithm.Trading.cs"];
m3_293 [label="Exit QuantConnect.Util.LeanData.ToCsv(params object[])", span="628-628", cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="QCAlgorithm.Trading.cs"];
m3_0 [label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", span="40-40", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="QCAlgorithm.Trading.cs"];
m3_1 [label="var clone = data.Clone()", span="42-42", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="QCAlgorithm.Trading.cs"];
m3_2 [label="clone.Time = data.Time.ConvertTo(exchangeTimeZone, dataTimeZone)", span="43-43", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="QCAlgorithm.Trading.cs"];
m3_3 [label="return GenerateLine(clone, clone.Symbol.ID.SecurityType, resolution);", span="44-44", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="QCAlgorithm.Trading.cs"];
m3_4 [label="Exit QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", span="40-40", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="QCAlgorithm.Trading.cs"];
m3_5 [label="Entry QuantConnect.Data.IBaseData.Clone()", span="99-99", cluster="QuantConnect.Data.IBaseData.Clone()", file="QCAlgorithm.Trading.cs"];
m3_6 [label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="545-545", cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="QCAlgorithm.Trading.cs"];
m3_311 [label="type == typeof(ZipEntryName)", span="691-691", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_304 [label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="677-677", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_305 [label="type == typeof(TradeBar)", span="679-679", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_307 [label="type == typeof(QuoteBar)", span="683-683", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_309 [label="type == typeof(OpenInterest)", span="687-687", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_313 [label="type == typeof(Tick)", span="695-695", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_314 [label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="697-697", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_310 [label="return TickType.OpenInterest;", span="689-689", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_306 [label="return TickType.Trade;", span="681-681", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_308 [label="return TickType.Quote;", span="685-685", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_312 [label="return TickType.Quote;", span="693-693", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_316 [label="return TickType.Trade;", span="703-703", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_315 [label="return TickType.Quote;", span="699-699", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_317 [label="Exit QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="677-677", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_113 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="QCAlgorithm.Trading.cs"];
m3_294 [label="Entry decimal.Normalize()", span="233-233", cluster="decimal.Normalize()", file="QCAlgorithm.Trading.cs"];
m3_276 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="QCAlgorithm.Trading.cs"];
m3_166 [label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="476-476", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_211 [label="var tickTypeString = tickType.ToLower()", span="478-478", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_212 [label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="479-479", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_213 [label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="480-480", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_214 [label="symbol.ID.SecurityType", span="482-482", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_220 [label="return string.Format(''{0}.zip'', \r\n                            symbol.Value.ToLower()\r\n                            );", span="490-492", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_224 [label="return string.Format(''{0}_{1}_{2}.zip'', \r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickTypeString,\r\n                            symbol.ID.OptionStyle.ToLower()\r\n                            );", span="503-507", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_225 [label="return string.Format(''{0}_{1}_{2}.zip'', \r\n                        formattedDate, \r\n                        tickTypeString,\r\n                        symbol.ID.OptionStyle.ToLower()\r\n                        );", span="510-514", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_228 [label="return string.Format(''{0}_{1}.zip'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickTypeString);", span="519-521", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_221 [label="return string.Format(''{0}_{1}.zip'', \r\n                        formattedDate, \r\n                        tickTypeString\r\n                        );", span="495-498", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_229 [label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString);", span="524-526", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_231 [label="throw new ArgumentOutOfRangeException();", span="530-530", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_219 [label=isHourOrDaily, span="488-488", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_223 [label=isHourOrDaily, span="501-501", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_227 [label=isHourOrDaily, span="517-517", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_215 [label="SecurityType.Base", span="484-484", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_222 [label="SecurityType.Option", span="500-500", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_226 [label="SecurityType.Future", span="516-516", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_230 [label="SecurityType.Commodity", span="528-528", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_218 [label="SecurityType.Cfd", span="487-487", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_216 [label="SecurityType.Equity", span="485-485", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_217 [label="SecurityType.Forex", span="486-486", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_232 [label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="476-476", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_364 [label="Entry lambda expression", span="737-737", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_362 [label="x == fileName.First()", span="728-728", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_358 [label="Entry lambda expression", span="720-720", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_365 [label="securityTypes.Contains(x.ToLower())", span="737-737", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_361 [label="Entry lambda expression", span="728-728", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_363 [label="Exit lambda expression", span="728-728", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_359 [label="x.ToLower()", span="720-720", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_360 [label="Exit lambda expression", span="720-720", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_366 [label="Exit lambda expression", span="737-737", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m3_112 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="QCAlgorithm.Trading.cs"];
m3_354 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="QCAlgorithm.Trading.cs"];
m3_281 [label="Entry QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", span="29-29", cluster="QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", file="QCAlgorithm.Trading.cs"];
m3_163 [label="Entry System.IO.Path.Combine(params string[])", span="0-0", cluster="System.IO.Path.Combine(params string[])", file="QCAlgorithm.Trading.cs"];
m3_318 [label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="713-713", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_319 [label="symbol = null", span="715-715", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_324 [label="fileName = fileName.Replace(fileName.GetExtension(), '''')", span="725-725", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_321 [label="date = default(DateTime)", span="717-717", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_331 [label="resolution = (Resolution)Enum.Parse(typeof(Resolution), info[startIndex + 2], true)", span="742-742", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_336 [label="date = DateTime.ParseExact(info[startIndex + 4].Substring(0, 8), DateFormat.EightCharacter, null)", span="753-753", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_337 [label="symbol = Symbol.Create(ticker, securityType, market)", span="756-756", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_341 [label="return true;", span="764-764", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_340 [label="return false;", span="761-761", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_320 [label="resolution = Resolution.Daily", span="716-716", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_323 [label="var securityTypes = Enum.GetNames(typeof(SecurityType)).Select(x => x.ToLower()).ToList()", span="720-720", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_325 [label="fileName.First() == '.' || pathSeparators.Any(x => x == fileName.First())", span="728-728", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_326 [label="fileName = fileName.Remove(0, 1)", span="730-730", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_327 [label="var info = fileName.Split(pathSeparators, StringSplitOptions.RemoveEmptyEntries).ToList()", span="734-734", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_339 [label="Log.Error(''LeanData.TryParsePath(): Error encountered while parsing the path {0}. Error: {1}'', fileName, ex.GetBaseException())", span="760-760", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_322 [label="var pathSeparators = new[] { '/', '\\'}", span="719-719", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_328 [label="var startIndex = info.FindIndex(x => securityTypes.Contains(x.ToLower()))", span="737-737", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_330 [label="var ticker = info[startIndex + 3]", span="741-741", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_332 [label="var securityType = (SecurityType)Enum.Parse(typeof(SecurityType), info[startIndex], true)", span="743-743", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_335 [label="resolution < Resolution.Hour", span="751-751", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_329 [label="var market = info[startIndex + 1]", span="740-740", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_338 [label=Exception, span="758-758", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_334 [label="throw new ArgumentException(''LeanData.TryParsePath(): Options and futures are not supported by this method.'');", span="747-747", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_333 [label="securityType == SecurityType.Option || securityType == SecurityType.Future", span="745-745", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_342 [label="Exit QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="713-713", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_107 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="QCAlgorithm.Trading.cs"];
m3_201 [label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="450-450", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_203 [label="throw new NotImplementedException(''This method only implements base, equity, forex and cfd security type.'');", span="454-454", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_209 [label="return string.Format(''{0}_{1}_{2}_{3}.csv'', date.ToString(DateFormat.EightCharacter), symbol, resolution.ToLower(), dataType.ToLower());", span="470-470", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_202 [label="securityType != SecurityType.Base && securityType != SecurityType.Equity && securityType != SecurityType.Forex && securityType != SecurityType.Cfd", span="452-452", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_210 [label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="450-450", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_204 [label="symbol = symbol.ToLower()", span="457-457", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_207 [label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="465-465", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_208 [label="dataType = TickType.Quote", span="467-467", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_206 [label="return symbol + ''.csv'';", span="461-461", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_205 [label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="459-459", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_355 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.Trading.cs"];
m3_156 [label="Entry System.Enum.ToLower()", span="826-826", cluster="System.Enum.ToLower()", file="QCAlgorithm.Trading.cs"];
m3_345 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="QCAlgorithm.Trading.cs"];
m3_157 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="QCAlgorithm.Trading.cs"];
m3_278 [label="Entry decimal.Parse(string)", span="0-0", cluster="decimal.Parse(string)", file="QCAlgorithm.Trading.cs"];
m3_133 [label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="291-291", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_134 [label="return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, securityType, market, date, resolution));", span="293-293", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m3_135 [label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="291-291", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_353 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.Trading.cs"];
m3_279 [label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="QCAlgorithm.Trading.cs"];
m3_295 [label="Entry decimal.ToString(System.IFormatProvider)", span="0-0", cluster="decimal.ToString(System.IFormatProvider)", file="QCAlgorithm.Trading.cs"];
m3_356 [label="Entry System.Exception.GetBaseException()", span="0-0", cluster="System.Exception.GetBaseException()", file="QCAlgorithm.Trading.cs"];
m3_172 [label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="537-537", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="QCAlgorithm.Trading.cs"];
m3_235 [label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="539-539", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="QCAlgorithm.Trading.cs"];
m3_236 [label="return symbol.ToLower() + ''.zip'';", span="541-541", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="QCAlgorithm.Trading.cs"];
m3_237 [label="var zipFileName = date.ToString(DateFormat.EightCharacter)", span="544-544", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="QCAlgorithm.Trading.cs"];
m3_238 [label="tickType = tickType ?? (securityType == SecurityType.Forex || securityType == SecurityType.Cfd ? TickType.Quote : TickType.Trade)", span="545-545", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="QCAlgorithm.Trading.cs"];
m3_240 [label="return zipFileName + suffix;", span="547-547", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="QCAlgorithm.Trading.cs"];
m3_239 [label="var suffix = string.Format(''_{0}.zip'', tickType.Value.ToLower())", span="546-546", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="QCAlgorithm.Trading.cs"];
m3_241 [label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="537-537", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="QCAlgorithm.Trading.cs"];
m3_275 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="QCAlgorithm.Trading.cs"];
m3_351 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithm.Trading.cs"];
m3_198 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="QCAlgorithm.Trading.cs"];
m3_249 [label="var parts = zipEntryName.Replace(''.csv'', string.Empty).Split('_')", span="574-574", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_273 [label="throw new NotImplementedException(''ReadSymbolFromZipEntry is not implemented for '' + symbol.ID.SecurityType + '' '' + resolution);", span="613-613", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_247 [label="Entry QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="571-571", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_250 [label="symbol.ID.SecurityType", span="575-575", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_274 [label="Exit QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="571-571", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_248 [label="var isHourlyOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="573-573", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_257 [label="return Symbol.CreateOption(symbol.Underlying, Market.USA, style, right, strike, expiry);", span="584-584", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_262 [label="return Symbol.CreateOption(symbol.Underlying, Market.USA, style, right, strike, expiry);", span="592-592", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_251 [label="SecurityType.Option", span="577-577", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_263 [label="SecurityType.Future", span="596-596", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_268 [label="return Symbol.CreateFuture(parts[0], Market.USA, futureExpiry);", span="602-602", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_272 [label="return Symbol.CreateFuture(parts[1], Market.USA, futureExpiry);", span="609-609", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_253 [label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[2], true)", span="580-580", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_254 [label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[3], true)", span="581-581", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_258 [label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[4], true)", span="588-588", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_259 [label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[5], true)", span="589-589", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_256 [label="var expiry = DateTime.ParseExact(parts[5], DateFormat.EightCharacter, null)", span="583-583", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_261 [label="var expiry = DateTime.ParseExact(parts[7], DateFormat.EightCharacter, null)", span="591-591", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_265 [label="var expiryYearMonth = DateTime.ParseExact(parts[2], DateFormat.YearMonth, null)", span="599-599", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_269 [label="var expiryYearMonth = DateTime.ParseExact(parts[4], DateFormat.YearMonth, null)", span="606-606", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_255 [label="var strike = decimal.Parse(parts[4]) / 10000m", span="582-582", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_260 [label="var strike = decimal.Parse(parts[6]) / 10000m", span="590-590", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_266 [label="var futureExpiryFunc = FuturesExpiryFunctions.FuturesExpiryFunction(parts[1])", span="600-600", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_270 [label="var futureExpiryFunc = FuturesExpiryFunctions.FuturesExpiryFunction(parts[1])", span="607-607", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_252 [label=isHourlyOrDaily, span="578-578", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_264 [label=isHourlyOrDaily, span="597-597", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_267 [label="var futureExpiry = futureExpiryFunc(expiryYearMonth)", span="601-601", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_271 [label="var futureExpiry = futureExpiryFunc(expiryYearMonth)", span="608-608", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="QCAlgorithm.Trading.cs"];
m3_283 [label="Entry QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="143-143", cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="QCAlgorithm.Trading.cs"];
m3_348 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="QCAlgorithm.Trading.cs"];
m3_200 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="QCAlgorithm.Trading.cs"];
m3_132 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="QCAlgorithm.Trading.cs"];
m3_123 [label="Entry QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="267-267", cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="QCAlgorithm.Trading.cs"];
m3_126 [label="return false;", span="276-276", cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m3_124 [label="baseDataType == typeof(TradeBar) ||\r\n                baseDataType == typeof(QuoteBar) ||\r\n                baseDataType == typeof(OpenInterest)", span="269-271", cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="QCAlgorithm.Trading.cs"];
m3_125 [label="return true;", span="273-273", cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="QCAlgorithm.Trading.cs"];
m3_127 [label="Exit QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="267-267", cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="QCAlgorithm.Trading.cs"];
m3_160 [label="Entry QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="330-330", cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m3_161 [label="return Path.Combine(Globals.DataFolder,\r\n                                        ''equity'',\r\n                                        symbol.ID.Market,\r\n                                        ''factor_files'',\r\n                                        symbol.Value.ToLower() + ''.csv'');", span="332-336", cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m3_162 [label="Exit QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="330-330", cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m3_350 [label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0", cluster="string.Split(char[], System.StringSplitOptions)", file="QCAlgorithm.Trading.cs"];
m3_136 [label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="350-350", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_169 [label="directory = Path.Combine(directory, symbol.ToLower())", span="355-355", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_170 [label="return Path.Combine(directory, GenerateZipFileName(symbol, securityType, date, resolution));", span="358-358", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_167 [label="var directory = Path.Combine(securityType.ToLower(), market.ToLower(), resolution.ToLower())", span="352-352", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_168 [label="resolution != Resolution.Daily && resolution != Resolution.Hour", span="353-353", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_171 [label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="350-350", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_197 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="QCAlgorithm.Trading.cs"];
m3_234 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Trading.cs"];
m3_349 [label="Entry string.Remove(int, int)", span="0-0", cluster="string.Remove(int, int)", file="QCAlgorithm.Trading.cs"];
m3_159 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="QCAlgorithm.Trading.cs"];
m3_282 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="QCAlgorithm.Trading.cs"];
m3_131 [label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="342-342", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_164 [label="return Path.Combine(GenerateRelativeZipFileDirectory(symbol, resolution), GenerateZipFileName(symbol, date, resolution, tickType));", span="344-344", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_165 [label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="342-342", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_233 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="QCAlgorithm.Trading.cs"];
m3_196 [label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="364-364", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_174 [label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="366-366", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_188 [label="return string.Join(''_'',\r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickType.ToLower(),\r\n                            symbol.ID.OptionStyle.ToLower(),\r\n                            symbol.ID.OptionRight.ToLower(),\r\n                            Scale(symbol.ID.StrikePrice),\r\n                            symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                            ) + ''.csv'';", span="402-409", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_189 [label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.Underlying.Value.ToLower(), // underlying\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.OptionStyle.ToLower(),\r\n                        symbol.ID.OptionRight.ToLower(),\r\n                        Scale(symbol.ID.StrikePrice),\r\n                        symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                        ) + ''.csv'';", span="412-421", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_192 [label="return string.Join(''_'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickType.ToLower(),\r\n                            symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                            ) + ''.csv'';", span="426-430", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_193 [label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.ID.Symbol.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                        ) + ''.csv'';", span="433-439", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_182 [label="return string.Format(''{0}_{1}_{2}_{3}.csv'',\r\n                            formattedDate,\r\n                            symbol.Value.ToLower(),\r\n                            tickType,\r\n                            resolution\r\n                        );", span="377-382", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_184 [label="return string.Format(''{0}.csv'', \r\n                            symbol.Value.ToLower()\r\n                            );", span="387-389", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_185 [label="return string.Format(''{0}_{1}_{2}_{3}.csv'', \r\n                        formattedDate, \r\n                        symbol.Value.ToLower(), \r\n                        resolution.ToLower(), \r\n                        tickType.ToLower()\r\n                        );", span="392-397", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_173 [label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="364-364", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_175 [label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="367-367", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_187 [label=isHourOrDaily, span="400-400", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_191 [label=isHourOrDaily, span="424-424", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_181 [label="resolution == Resolution.Tick && symbol.SecurityType == SecurityType.Equity", span="375-375", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_183 [label=isHourOrDaily, span="385-385", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_176 [label="symbol.ID.SecurityType", span="369-369", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_186 [label="SecurityType.Option", span="399-399", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_195 [label="throw new ArgumentOutOfRangeException();", span="443-443", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_190 [label="SecurityType.Future", span="423-423", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_180 [label="SecurityType.Cfd", span="374-374", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_177 [label="SecurityType.Base", span="371-371", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_194 [label="SecurityType.Commodity", span="441-441", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_179 [label="SecurityType.Forex", span="373-373", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_178 [label="SecurityType.Equity", span="372-372", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.Trading.cs"];
m3_137 [label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="299-299", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_148 [label="return !isHourOrDaily ? Path.Combine(directory, symbol.Value.ToLower()) : directory;", span="312-312", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_150 [label="return !isHourOrDaily ? Path.Combine(directory, symbol.Underlying.Value.ToLower()) : directory;", span="316-316", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_152 [label="return !isHourOrDaily ? Path.Combine(directory, symbol.ID.Symbol.ToLower()) : directory;", span="319-319", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_138 [label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="301-301", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_139 [label="var securityType = symbol.ID.SecurityType.ToLower()", span="302-302", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_140 [label="var market = symbol.ID.Market.ToLower()", span="303-303", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_141 [label="var res = resolution.ToLower()", span="304-304", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_143 [label="symbol.ID.SecurityType", span="306-306", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_142 [label="var directory = Path.Combine(securityType, market, res)", span="305-305", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_147 [label="SecurityType.Cfd", span="311-311", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_149 [label="SecurityType.Option", span="314-314", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_151 [label="SecurityType.Future", span="318-318", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_154 [label="throw new ArgumentOutOfRangeException();", span="323-323", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_144 [label="SecurityType.Base", span="308-308", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_153 [label="SecurityType.Commodity", span="321-321", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_146 [label="SecurityType.Forex", span="310-310", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_145 [label="SecurityType.Equity", span="309-309", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_155 [label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="299-299", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="QCAlgorithm.Trading.cs"];
m3_352 [label="Entry System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", file="QCAlgorithm.Trading.cs"];
m3_367 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="QCAlgorithm.Trading.cs"];
m3_242 [label="Entry QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", span="555-555", cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_245 [label="return TickType.Trade;", span="561-561", cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_243 [label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="557-557", cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_244 [label="return TickType.Quote;", span="559-559", cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_246 [label="Exit QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", span="555-555", cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m3_277 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="QCAlgorithm.Trading.cs"];
m3_347 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QCAlgorithm.Trading.cs"];
m3_106 [label="Entry double.ToString(System.IFormatProvider)", span="0-0", cluster="double.ToString(System.IFormatProvider)", file="QCAlgorithm.Trading.cs"];
m3_280 [label="Entry QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="115-115", cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="QCAlgorithm.Trading.cs"];
m3_344 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="QCAlgorithm.Trading.cs"];
m3_199 [label="Entry string.Join(string, params object[])", span="0-0", cluster="string.Join(string, params object[])", file="QCAlgorithm.Trading.cs"];
m3_158 [label="Entry System.IO.Path.Combine(string, string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string, string)", file="QCAlgorithm.Trading.cs"];
m3_368 [label=string, span="", file="QCAlgorithm.Trading.cs"];
m3_369 [label=securityTypes, span="", file="QCAlgorithm.Trading.cs"];
m4_41 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_42 [label="return History<T>(symbols, Time - span, Time, resolution).Memoize();", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_43 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_224 [label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="151-151", cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="SecurityTransactionManager.cs"];
m4_50 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="SecurityTransactionManager.cs"];
m4_0 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="SecurityTransactionManager.cs"];
m4_1 [label="_warmupBarCount = null", span="53-53", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="SecurityTransactionManager.cs"];
m4_2 [label="_warmupTimeSpan = timeSpan", span="54-54", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="SecurityTransactionManager.cs"];
m4_3 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="SecurityTransactionManager.cs"];
m4_174 [label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest()", span="84-84", cluster="QuantConnect.Data.HistoryRequest.HistoryRequest()", file="SecurityTransactionManager.cs"];
m4_227 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="SecurityTransactionManager.cs"];
m4_175 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SecurityTransactionManager.cs"];
m4_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="SecurityTransactionManager.cs"];
m4_12 [label="SetWarmup(barCount)", span="88-88", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="SecurityTransactionManager.cs"];
m4_13 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="SecurityTransactionManager.cs"];
m4_33 [label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218", cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="SecurityTransactionManager.cs"];
m4_124 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="393-393", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="SecurityTransactionManager.cs"];
m4_153 [label="return History(new[] {request}).Memoize();", span="395-395", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="SecurityTransactionManager.cs"];
m4_154 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="393-393", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="SecurityTransactionManager.cs"];
m4_171 [label="Entry QuantConnect.Symbol.IsCanonical()", span="163-163", cluster="QuantConnect.Symbol.IsCanonical()", file="SecurityTransactionManager.cs"];
m4_229 [label="Entry lambda expression", span="545-545", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_59 [label="Resolution? res = resolution ?? security.Resolution", span="193-193", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_60 [label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="194-194", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_61 [label="return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="195-195", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_54 [label="Entry lambda expression", span="187-196", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_69 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_55 [label="var security = Securities[x]", span="189-189", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_56 [label="var config = GetMatchingSubscription(security, typeof(T))", span="190-190", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_57 [label="config == null", span="191-191", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_58 [label="return null;", span="191-191", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_62 [label="Exit lambda expression", span="187-196", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_70 [label="x != null", span="198-198", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_71 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_80 [label="return CreateHistoryRequest(security, config, start, end, resolution);", span="219-219", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_75 [label="Entry lambda expression", span="213-220", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_82 [label="Entry lambda expression", span="222-222", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_76 [label="var security = Securities[x]", span="215-215", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_77 [label="var config = GetMatchingSubscription(security, typeof(T))", span="216-216", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_78 [label="config == null", span="217-217", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_79 [label="return null;", span="217-217", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_81 [label="Exit lambda expression", span="213-220", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_83 [label="x != null", span="222-222", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_84 [label="Exit lambda expression", span="222-222", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_112 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_113 [label="x.Type.Name", span="273-273", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_114 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_126 [label="Entry lambda expression", span="298-298", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_127 [label="x.Type.Name", span="298-298", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_128 [label="Exit lambda expression", span="298-298", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_203 [label="var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution)", span="505-505", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_204 [label="Resolution? res = resolution ?? security.Resolution", span="508-508", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_205 [label="fillForward.HasValue", span="509-509", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_206 [label="request.FillForwardResolution = fillForward.Value ? res : null", span="509-509", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_207 [label="extendedMarket.HasValue", span="510-510", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_208 [label="request.IncludeExtendedMarketHours = extendedMarket.Value", span="510-510", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_200 [label="Entry lambda expression", span="501-512", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_201 [label="var security = Securities[x]", span="503-503", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_202 [label="var config = GetMatchingSubscription(security, typeof (BaseData))", span="504-504", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_209 [label="return request;", span="511-511", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_210 [label="Exit lambda expression", span="501-512", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_215 [label="Resolution? res = resolution ?? security.Resolution", span="523-523", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_216 [label="var start = GetStartTimeAlgoTz(x, periods, res)", span="524-524", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_218 [label="return CreateHistoryRequest(security, config, start, Time.RoundDown(res.Value.ToTimeSpan()), resolution);", span="526-526", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_213 [label="Entry lambda expression", span="520-527", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_214 [label="var security = Securities[x]", span="522-522", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_217 [label="var config = GetMatchingSubscription(security, typeof(BaseData))", span="525-525", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_219 [label="Exit lambda expression", span="520-527", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_230 [label="s.Resolution", span="545-545", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_231 [label="Exit lambda expression", span="545-545", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m4_51 [label="Entry Unk.History", span="", cluster="Unk.History", file="SecurityTransactionManager.cs"];
m4_63 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="542-542", cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="SecurityTransactionManager.cs"];
m4_225 [label="return (from sub in security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                    where type.IsAssignableFrom(sub.Type)\r\n                    select sub).FirstOrDefault();", span="545-547", cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="SecurityTransactionManager.cs"];
m4_226 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="542-542", cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="SecurityTransactionManager.cs"];
m4_111 [label="Entry QuantConnect.Symbol.ToString()", span="348-348", cluster="QuantConnect.Symbol.ToString()", file="SecurityTransactionManager.cs"];
m4_64 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="378-378", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_145 [label="var security = Securities[symbol]", span="380-380", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_146 [label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="381-381", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_148 [label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="384-384", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_149 [label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="385-385", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_147 [label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="383-383", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_150 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="378-378", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_95 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="263-263", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_96 [label="resolution == Resolution.Tick", span="266-266", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_98 [label="var security = Securities[symbol]", span="267-267", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_103 [label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="274-274", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_104 [label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="277-277", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_105 [label="return History<T>(symbol, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Memoize();", span="278-278", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_97 [label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="266-266", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_99 [label="var requestedType = typeof(T)", span="269-269", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_100 [label="var config = GetMatchingSubscription(security, requestedType)", span="270-270", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_102 [label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="273-273", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_101 [label="config == null", span="271-271", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_106 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="263-263", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_172 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="SecurityTransactionManager.cs"];
m4_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94", cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="SecurityTransactionManager.cs"];
m4_15 [label="IsWarmingUp = false", span="96-96", cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="SecurityTransactionManager.cs"];
m4_16 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94", cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="SecurityTransactionManager.cs"];
m4_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="SecurityTransactionManager.cs"];
m4_8 [label="_warmupTimeSpan = null", span="75-75", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="SecurityTransactionManager.cs"];
m4_9 [label="_warmupBarCount = barCount", span="76-76", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="SecurityTransactionManager.cs"];
m4_10 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="SecurityTransactionManager.cs"];
m4_94 [label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", span="55-55", cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m4_34 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140", cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_35 [label="return History(Securities.Keys, periods, resolution).Memoize();", span="142-142", cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_36 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140", cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_67 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="457-457", cluster="System.DateTime.RoundDown(System.TimeSpan)", file="SecurityTransactionManager.cs"];
m4_110 [label="Entry ArgumentException.cstr", span="", cluster="ArgumentException.cstr", file="SecurityTransactionManager.cs"];
m4_173 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="459-459", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_178 [label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="461-461", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_180 [label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="466-466", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_181 [label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="467-467", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_179 [label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="464-464", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_182 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="459-459", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_52 [label="Entry Unk.>", span="", cluster="Unk.>", file="SecurityTransactionManager.cs"];
m4_107 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SecurityTransactionManager.cs"];
m4_228 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="SecurityTransactionManager.cs"];
m4_132 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="340-340", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_136 [label="return History(symbols, Time - span, Time, resolution).Memoize();", span="342-342", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_137 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="340-340", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_196 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1511-1511", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="SecurityTransactionManager.cs"];
m4_45 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_46 [label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="187-196", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_47 [label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="198-198", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_48 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_125 [label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134", cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m4_29 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_30 [label="return History(Securities.Keys, Time - span, Time, resolution).Memoize();", span="129-129", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_31 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_109 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="SecurityTransactionManager.cs"];
m4_89 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_90 [label="var security = Securities[symbol]", span="249-249", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_91 [label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="250-250", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_92 [label="return History(new[] {symbol}, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Get(symbol).Memoize();", span="251-251", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_93 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_129 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="313-313", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_130 [label="return History(new[] {symbol}, span, resolution).Get(symbol).Memoize();", span="315-315", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_131 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="313-313", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_195 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SecurityTransactionManager.cs"];
m4_152 [label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="527-527", cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="SecurityTransactionManager.cs"];
m4_28 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="SecurityTransactionManager.cs"];
m4_133 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="326-326", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_134 [label="return History(new[] {symbol}, start, end, resolution).Get(symbol).Memoize();", span="328-328", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_135 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="326-326", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_38 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_39 [label="return History<T>(Securities.Keys, span, resolution).Memoize();", span="156-156", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_40 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_85 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_86 [label="return History<T>(symbol, Time - span, Time, resolution).Memoize();", span="236-236", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_87 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_176 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SecurityTransactionManager.cs"];
m4_32 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="370-370", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="SecurityTransactionManager.cs"];
m4_143 [label="return History(CreateDateRangeHistoryRequests(symbols, start, end, resolution, fillForward, extendedMarket)).Memoize();", span="372-372", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="SecurityTransactionManager.cs"];
m4_144 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="370-370", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="SecurityTransactionManager.cs"];
m4_27 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="499-499", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="SecurityTransactionManager.cs"];
m4_198 [label="return symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof (BaseData));\r\n                var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution);\r\n\r\n                // apply overrides\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                if (fillForward.HasValue) request.FillForwardResolution = fillForward.Value ? res : null;\r\n                if (extendedMarket.HasValue) request.IncludeExtendedMarketHours = extendedMarket.Value;\r\n                return request;\r\n            });", span="501-512", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="SecurityTransactionManager.cs"];
m4_199 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="499-499", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="SecurityTransactionManager.cs"];
m4_17 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="103-103", cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="SecurityTransactionManager.cs"];
m4_18 [label="_warmupBarCount.HasValue", span="105-105", cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="SecurityTransactionManager.cs"];
m4_19 [label="return CreateBarCountHistoryRequests(Securities.Keys, _warmupBarCount.Value);", span="107-107", cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="SecurityTransactionManager.cs"];
m4_20 [label="_warmupTimeSpan.HasValue", span="109-109", cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="SecurityTransactionManager.cs"];
m4_21 [label="var end = UtcTime.ConvertFromUtc(TimeZone)", span="111-111", cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="SecurityTransactionManager.cs"];
m4_23 [label="return Enumerable.Empty<HistoryRequest>();", span="116-116", cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="SecurityTransactionManager.cs"];
m4_22 [label="return CreateDateRangeHistoryRequests(Securities.Keys, end - _warmupTimeSpan.Value, end);", span="112-112", cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="SecurityTransactionManager.cs"];
m4_24 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="103-103", cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="SecurityTransactionManager.cs"];
m4_197 [label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53", cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_65 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="558-558", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="SecurityTransactionManager.cs"];
m4_142 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="403-403", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="SecurityTransactionManager.cs"];
m4_155 [label="return History(requests, TimeZone).Memoize();", span="405-405", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="SecurityTransactionManager.cs"];
m4_156 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="403-403", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="SecurityTransactionManager.cs"];
m4_37 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="354-354", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_138 [label="resolution == Resolution.Tick", span="356-356", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_140 [label="return History(CreateBarCountHistoryRequests(symbols, periods, resolution)).Memoize();", span="357-357", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_139 [label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="356-356", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_141 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="354-354", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_157 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="470-470", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_183 [label="var sentMessage = false", span="472-472", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_184 [label="var reqs = requests.ToList()", span="473-473", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_193 [label="return ((IAlgorithm) this).HistoryProvider.GetHistory(reqs, timeZone);", span="493-493", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_190 [label="!sentMessage", span="484-484", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_185 [label=reqs, span="474-474", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_186 [label="request.EndTimeUtc > UtcTime", span="477-477", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_187 [label="request.EndTimeUtc = UtcTime", span="479-479", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_188 [label="request.StartTimeUtc > request.EndTimeUtc", span="480-480", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_189 [label="request.StartTimeUtc = request.EndTimeUtc", span="482-482", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_191 [label="sentMessage = true", span="486-486", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_192 [label="Debug(''Request for future history modified to end now.'')", span="487-487", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_194 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="470-470", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="SecurityTransactionManager.cs"];
m4_158 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="414-414", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_159 [label="security.Symbol.IsCanonical()", span="417-417", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_161 [label="var resolution = (Resolution)Math.Max((int)Resolution.Minute, (int)security.Resolution)", span="423-423", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_162 [label="var startTime = GetStartTimeAlgoTzForSecurity(security, 1, resolution)", span="425-425", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_164 [label="var subscriptionDataConfig = GetMatchingSubscription(security, typeof(BaseData))", span="429-429", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_165 [label="var request = new HistoryRequest()\r\n            {\r\n                StartTimeUtc = startTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                EndTimeUtc = endTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                DataType = subscriptionDataConfig != null ? subscriptionDataConfig.Type :  typeof(TradeBar),\r\n                Resolution = resolution,\r\n                FillForwardResolution = resolution,\r\n                Symbol = security.Symbol,\r\n                Market = security.Symbol.ID.Market,\r\n                ExchangeHours = security.Exchange.Hours,\r\n                SecurityType = security.Type\r\n            }", span="431-442", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_160 [label="return null;", span="419-419", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_163 [label="var endTime   = Time.RoundDown(resolution.ToTimeSpan())", span="426-426", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_166 [label="var history = History(new List<HistoryRequest> { request })", span="444-444", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_167 [label="history.Any() && history.First().Values.Any()", span="446-446", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_168 [label="return history.First().Values.First();", span="448-448", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_169 [label="return null;", span="452-452", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_170 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="414-414", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m4_25 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="518-518", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_211 [label="return symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, res);\r\n                var config = GetMatchingSubscription(security, typeof(BaseData));\r\n                return CreateHistoryRequest(security, config, start, Time.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            });", span="520-527", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_212 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="518-518", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_4 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="SecurityTransactionManager.cs"];
m4_5 [label="SetWarmup(timeSpan)", span="63-63", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="SecurityTransactionManager.cs"];
m4_6 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="SecurityTransactionManager.cs"];
m4_53 [label="Entry Unk.Memoize", span="", cluster="Unk.Memoize", file="SecurityTransactionManager.cs"];
m4_88 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="289-289", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_115 [label="var security = Securities[symbol]", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_120 [label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="299-299", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_121 [label="var request = CreateHistoryRequest(security, config, start, end, resolution)", span="302-302", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_122 [label="return History(request).Get<T>(symbol).Memoize();", span="303-303", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_116 [label="var requestedType = typeof(T)", span="294-294", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_117 [label="var config = GetMatchingSubscription(security, requestedType)", span="295-295", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_119 [label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="298-298", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_118 [label="config == null", span="296-296", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_123 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="289-289", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_44 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="210-210", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_72 [label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(security, config, start, end, resolution);\r\n            })", span="213-220", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_73 [label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="222-222", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_74 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="210-210", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_151 [label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="390-390", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="SecurityTransactionManager.cs"];
m4_66 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="654-654", cluster="QuantConnect.Resolution.ToTimeSpan()", file="SecurityTransactionManager.cs"];
m4_68 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="530-530", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_220 [label="resolution = resolution ?? security.Resolution", span="532-532", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_221 [label="var request = new HistoryRequest(subscription, security.Exchange.Hours, startAlgoTz.ConvertToUtc(TimeZone), endAlgoTz.ConvertToUtc(TimeZone))\r\n            {\r\n                DataType = subscription.IsCustomData || resolution != Resolution.Tick ? subscription.Type : typeof(Tick),\r\n                Resolution = resolution.Value,\r\n                FillForwardResolution = subscription.FillDataForward ? resolution : null\r\n            }", span="533-538", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_222 [label="return request;", span="539-539", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_223 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="530-530", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="SecurityTransactionManager.cs"];
m4_49 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SecurityTransactionManager.cs"];
m4_177 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="SecurityTransactionManager.cs"];
m4_108 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty", file="SecurityTransactionManager.cs"];
m4_26 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="546-546", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="SecurityTransactionManager.cs"];
m4_232 [label="QuantConnect.Algorithm.QCAlgorithm", span="", file="SecurityTransactionManager.cs"];
m4_233 [label="QuantConnect.Resolution?", span="", file="SecurityTransactionManager.cs"];
m4_234 [label=int, span="", file="SecurityTransactionManager.cs"];
m4_235 [label="System.DateTime", span="", file="SecurityTransactionManager.cs"];
m4_236 [label="System.DateTime", span="", file="SecurityTransactionManager.cs"];
m4_237 [label="QuantConnect.Resolution?", span="", file="SecurityTransactionManager.cs"];
m4_238 [label="System.DateTime", span="", file="SecurityTransactionManager.cs"];
m4_239 [label="System.DateTime", span="", file="SecurityTransactionManager.cs"];
m4_240 [label="QuantConnect.Resolution?", span="", file="SecurityTransactionManager.cs"];
m4_241 [label="bool?", span="", file="SecurityTransactionManager.cs"];
m4_242 [label="bool?", span="", file="SecurityTransactionManager.cs"];
m4_243 [label="QuantConnect.Resolution?", span="", file="SecurityTransactionManager.cs"];
m4_244 [label=int, span="", file="SecurityTransactionManager.cs"];
m5_0 [label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="38-38", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="StopMarketOrder.cs"];
m5_1 [label="Type = OrderType.StopMarket", span="40-40", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="StopMarketOrder.cs"];
m5_2 [label="Exit QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="38-38", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="StopMarketOrder.cs"];
m5_3 [label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="52-52", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="StopMarketOrder.cs"];
m5_4 [label="StopPrice = stopPrice", span="55-55", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="StopMarketOrder.cs"];
m5_6 [label="tag == ''''", span="58-58", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="StopMarketOrder.cs"];
m5_7 [label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'')", span="61-61", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="StopMarketOrder.cs"];
m5_5 [label="Type = OrderType.StopMarket", span="56-56", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="StopMarketOrder.cs"];
m5_8 [label="Exit QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="52-52", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="StopMarketOrder.cs"];
m5_10 [label="QuantConnect.Orders.StopMarketOrder", span="", file="StopMarketOrder.cs"];
n10 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
n10 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
n10 -> n5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
n10 -> n7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n4  [key=0, style=solid];
n3 -> n6  [key=1, style=dashed, color=darkseagreen4, label=string];
n3 -> n7  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n4 -> n5  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n8 -> n3  [key=0, style=bold, color=blue];
m0_34 -> m0_39  [key=0, style=solid];
m0_34 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m0_34 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_45  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_46  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_47  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_34  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m0_25 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m0_25 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [key=0, style=solid];
m0_27 -> m0_26  [key=0, style=solid];
m0_27 -> m0_34  [key=2, style=dotted];
m0_27 -> m0_35  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_33  [key=0, style=solid];
m0_28 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=removed];
m0_28 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=removed];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_37  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_28  [key=0, style=solid];
m0_30 -> m0_36  [key=2, style=dotted];
m0_32 -> m0_28  [key=0, style=solid];
m0_32 -> m0_38  [key=2, style=dotted];
m0_33 -> m0_25  [key=0, style=bold, color=blue];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_55  [key=2, style=dotted];
m0_54 -> m0_52  [key=0, style=bold, color=blue];
m0_37 -> m0_48  [key=0, style=solid];
m0_37 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m0_48 -> m0_49  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_51  [key=2, style=dotted];
m0_50 -> m0_37  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_20  [key=0, style=bold, color=crimson];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_21  [key=0, style=solid];
m0_9 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=sd];
m0_9 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=sd];
m0_9 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=sd];
m0_9 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=sd];
m0_20 -> m0_9  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_9  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=normalizedAlpha];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_22  [key=2, style=dotted];
m0_17 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=alpha];
m0_17 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=alpha];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_9  [key=0, style=solid];
m0_18 -> m0_23  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_24  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=direction];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=0, style=solid];
m0_14 -> m0_17  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_21 -> m0_8  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_56 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m0_56 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m0_56 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m0_56 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m0_56 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m0_56 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m0_56 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m0_56 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m0_56 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m0_56 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m0_56 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m0_57 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m0_57 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m0_57 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m0_57 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m0_57 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m0_57 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m0_57 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m0_57 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_27  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_56  [key=2, style=dotted];
m1_24 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=limitPrice];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_55  [key=0, style=solid];
m1_26 -> m1_57  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_32  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=usdTotal];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_56  [key=2, style=dotted];
m1_29 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=limitPrice];
m1_31 -> m1_55  [key=0, style=solid];
m1_31 -> m1_57  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_41  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=usdTotal];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_58  [key=2, style=dotted];
m1_34 -> m1_59  [key=2, style=dotted];
m1_34 -> m1_60  [key=2, style=dotted];
m1_34 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_34 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_34 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_56  [key=2, style=dotted];
m1_36 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=limitPrice];
m1_36 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=limitPrice];
m1_36 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=limitPrice];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_61  [key=2, style=dotted];
m1_40 -> m1_55  [key=0, style=solid];
m1_40 -> m1_61  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_43  [key=0, style=solid];
m1_42 -> m1_55  [key=0, style=solid];
m1_42 -> m1_62  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_47  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_63  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_56  [key=2, style=dotted];
m1_46 -> m1_55  [key=0, style=solid];
m1_46 -> m1_64  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [key=0, style=solid];
m1_48 -> m1_55  [key=0, style=solid];
m1_48 -> m1_65  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_55  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_53  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_55  [key=0, style=solid];
m1_52 -> m1_55  [key=0, style=solid];
m1_52 -> m1_66  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_55  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_67  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=usdAvailable];
m1_35 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=usdAvailable];
m1_37 -> m1_38  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_55 -> m1_22  [key=0, style=bold, color=blue];
m1_74 -> m1_75  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_70 -> m1_68  [key=0, style=bold, color=blue];
m1_69 -> m1_70  [key=0, style=solid];
m1_73 -> m1_71  [key=0, style=bold, color=blue];
m1_72 -> m1_73  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_76 -> m1_74  [key=0, style=bold, color=blue];
m1_81 -> m1_82  [key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_85  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_85  [key=2, style=dotted];
m1_84 -> m1_81  [key=0, style=bold, color=blue];
m1_77 -> m1_78  [key=0, style=solid];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_80  [key=2, style=dotted];
m1_79 -> m1_77  [key=0, style=bold, color=blue];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_3 -> m1_17  [key=2, style=dotted, color=green];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_18  [key=2, style=dotted];
m1_5 -> m1_3  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_18  [key=2, style=dotted];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_15  [key=2, style=dotted, color=green];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_16  [key=2, style=dotted, color=green];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_18  [key=2, style=dotted];
m1_6 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m1_6 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_19  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_20  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_20  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_20  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_20  [key=2, style=dotted];
m1_11 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_21  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_21  [key=2, style=dotted];
m1_14 -> m1_0  [key=0, style=bold, color=blue];
m1_86 -> m1_1  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_2  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_3  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m1_86 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateCryptoAlgorithm"];
m2_41 -> m2_42  [key=0, style=solid];
m2_42 -> m2_41  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext"];
m2_14 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext"];
m2_14 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext"];
m2_14 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext"];
m2_14 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext"];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=volume];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=enterValue];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=alphaValue];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_22 -> m2_14  [key=0, style=bold, color=blue];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext"];
m2_23 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext"];
m2_24 -> m2_25  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_37  [key=2, style=dotted];
m2_26 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=score];
m2_26 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label=score];
m2_26 -> m2_34  [key=1, style=dashed, color=red, label=score];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=currentTime];
m2_27 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=currentTime];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_36  [key=0, style=solid];
m2_25 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=scoreType];
m2_25 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=scoreType];
m2_25 -> m2_33  [key=1, style=dashed, color=red, label=scoreType];
m2_25 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=scoreType];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_37  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_38  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid, color=red];
m2_33 -> m2_37  [key=2, style=dotted, color=red];
m2_35 -> m2_25  [key=0, style=solid];
m2_35 -> m2_38  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid, color=red];
m2_31 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=newEma];
m2_34 -> m2_35  [key=0, style=solid, color=red];
m2_32 -> m2_33  [key=0, style=solid, color=red];
m2_32 -> m2_35  [key=0, style=solid, color=red];
m2_36 -> m2_23  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext"];
m2_7 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext"];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=0, style=solid];
m2_10 -> m2_13  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_7  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_0 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_39  [key=0, style=bold, color=blue];
m2_43 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_32  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_33  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_34  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m2_43 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alphas.StatisticsAlphaManagerExtension"];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_27  [key=0, style=solid];
m3_19 -> m3_105  [key=0, style=solid];
m3_19 -> m3_109  [key=2, style=dotted];
m3_19 -> m3_108  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_19  [key=0, style=solid];
m3_20 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label=chain];
m3_20 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=contract];
m3_20 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label=contract];
m3_20 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=contract];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_20  [key=0, style=solid];
m3_21 -> m3_28  [key=2, style=dotted];
m3_21 -> m3_3  [key=3, color=darkorchid, style=bold, label="Property variable bool ProcessingOrder"];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_29  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_32  [key=2, style=dotted];
m3_26 -> m3_20  [key=0, style=solid];
m3_26 -> m3_33  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_30  [key=0, style=solid];
m3_26 -> m3_34  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_30  [key=2, style=dotted];
m3_23 -> m3_31  [key=2, style=dotted];
m3_23 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label=consolidator];
m3_23 -> m3_105  [key=0, style=solid];
m3_23 -> m3_109  [key=2, style=dotted];
m3_23 -> m3_108  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_27 -> m3_18  [key=0, style=bold, color=blue];
m3_27 -> m3_28  [key=0, style=solid];
m3_128 -> m3_129  [key=0, style=solid, color=green];
m3_129 -> m3_130  [key=0, style=solid, color=green];
m3_129 -> m3_131  [key=2, style=dotted, color=green];
m3_129 -> m3_132  [key=2, style=dotted, color=green];
m3_130 -> m3_128  [key=0, style=bold, color=blue];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.QuoteBar"];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_33  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=2, style=dotted];
m3_36 -> m3_33  [key=2, style=dotted];
m3_37 -> m3_34  [key=0, style=bold, color=blue];
m3_37 -> m3_105  [key=0, style=solid];
m3_37 -> m3_109  [key=2, style=dotted];
m3_37 -> m3_110  [key=2, style=dotted];
m3_110 -> m3_97  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Market.IBar bar"];
m3_110 -> m3_109  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToNonScaledCsv"];
m3_110 -> m3_300  [key=0, style=solid];
m3_110 -> m3_302  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m3_302 -> m3_109  [key=2, style=dotted];
m3_302 -> m3_303  [key=0, style=solid];
m3_301 -> m3_109  [key=2, style=dotted];
m3_301 -> m3_303  [key=0, style=solid];
m3_300 -> m3_302  [key=0, style=solid];
m3_300 -> m3_301  [key=0, style=solid];
m3_303 -> m3_110  [key=0, style=bold, color=blue];
m3_7 -> m3_89  [key=1, style=dashed, color=green, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m3_7 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_7 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_7 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_7 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_7 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_7 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_7 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_7 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m3_7 -> m3_1  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.IBaseData data"];
m3_7 -> m3_0  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m3_7 -> m3_109  [key=3, color=darkorchid, style=bold, label="method methodReturn string GenerateLine"];
m3_89 -> m3_90  [key=0, style=solid, color=green];
m3_89 -> m3_91  [key=1, style=dashed, color=green, label=openInterest];
m3_87 -> m3_89  [key=0, style=solid, color=green];
m3_87 -> m3_88  [key=0, style=solid];
m3_90 -> m3_91  [key=0, style=solid, color=green];
m3_90 -> m3_104  [key=0, style=solid, color=green];
m3_91 -> m3_105  [key=0, style=solid];
m3_91 -> m3_109  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_113  [key=2, style=dotted];
m3_8 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_106  [key=2, style=dotted];
m3_8 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_8 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=milliseconds];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_107  [key=2, style=dotted];
m3_9 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label=longTime];
m3_9 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=longTime];
m3_9 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=longTime];
m3_9 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=longTime];
m3_9 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label=longTime];
m3_9 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label=longTime];
m3_9 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=longTime];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_24  [key=0, style=solid];
m3_10 -> m3_38  [key=0, style=solid];
m3_10 -> m3_71  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_16  [key=0, style=solid];
m3_12 -> m3_20  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_48  [key=0, style=solid];
m3_39 -> m3_59  [key=0, style=solid];
m3_39 -> m3_70  [key=0, style=solid];
m3_39 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_39 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_39 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_39 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_39 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_39 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_39 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_39 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_39 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_39 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_39 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_39 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesConsolidationAlgorithm"];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label=tick];
m3_41 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label=tick];
m3_41 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label=tick];
m3_41 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label=tick];
m3_41 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=tick];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label=quoteBar];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=tradeBar];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label=openInterest];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=bigQuoteBar];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=bigTradeBar];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=bigOpenInterest];
m3_70 -> m3_105  [key=0, style=solid];
m3_70 -> m3_112  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_81  [key=0, style=solid];
m3_72 -> m3_92  [key=0, style=solid];
m3_72 -> m3_103  [key=0, style=solid];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=tick];
m3_74 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=tick];
m3_74 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=tick];
m3_74 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=tick];
m3_74 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=tick];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=quoteBar];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=tradeBar];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label=bigQuoteBar];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label=bigTradeBar];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=bigOpenInterest];
m3_103 -> m3_105  [key=0, style=solid];
m3_103 -> m3_112  [key=2, style=dotted];
m3_88 -> m3_105  [key=0, style=solid];
m3_88 -> m3_109  [key=2, style=dotted];
m3_46 -> m3_104  [key=0, style=solid];
m3_46 -> m3_47  [key=0, style=solid];
m3_57 -> m3_104  [key=0, style=solid];
m3_57 -> m3_58  [key=0, style=solid];
m3_68 -> m3_104  [key=0, style=solid];
m3_68 -> m3_69  [key=0, style=solid];
m3_79 -> m3_104  [key=0, style=solid];
m3_79 -> m3_80  [key=0, style=solid];
m3_101 -> m3_104  [key=0, style=solid];
m3_101 -> m3_102  [key=0, style=solid];
m3_15 -> m3_105  [key=0, style=solid];
m3_15 -> m3_109  [key=2, style=dotted];
m3_15 -> m3_108  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_29 -> m3_105  [key=0, style=solid];
m3_29 -> m3_109  [key=2, style=dotted];
m3_33 -> m3_105  [key=0, style=solid];
m3_33 -> m3_109  [key=2, style=dotted];
m3_33 -> m3_110  [key=2, style=dotted];
m3_43 -> m3_105  [key=0, style=solid];
m3_43 -> m3_109  [key=2, style=dotted];
m3_43 -> m3_108  [key=2, style=dotted];
m3_45 -> m3_105  [key=0, style=solid];
m3_45 -> m3_109  [key=2, style=dotted];
m3_45 -> m3_108  [key=2, style=dotted];
m3_47 -> m3_105  [key=0, style=solid];
m3_47 -> m3_109  [key=2, style=dotted];
m3_52 -> m3_105  [key=0, style=solid];
m3_52 -> m3_109  [key=2, style=dotted];
m3_52 -> m3_111  [key=2, style=dotted];
m3_55 -> m3_105  [key=0, style=solid];
m3_55 -> m3_109  [key=2, style=dotted];
m3_55 -> m3_108  [key=2, style=dotted];
m3_58 -> m3_105  [key=0, style=solid];
m3_58 -> m3_109  [key=2, style=dotted];
m3_69 -> m3_105  [key=0, style=solid];
m3_69 -> m3_109  [key=2, style=dotted];
m3_76 -> m3_105  [key=0, style=solid];
m3_76 -> m3_109  [key=2, style=dotted];
m3_78 -> m3_105  [key=0, style=solid];
m3_78 -> m3_109  [key=2, style=dotted];
m3_80 -> m3_105  [key=0, style=solid];
m3_80 -> m3_109  [key=2, style=dotted];
m3_85 -> m3_105  [key=0, style=solid];
m3_85 -> m3_109  [key=2, style=dotted];
m3_85 -> m3_110  [key=2, style=dotted];
m3_63 -> m3_105  [key=0, style=solid];
m3_63 -> m3_109  [key=2, style=dotted];
m3_63 -> m3_111  [key=2, style=dotted];
m3_66 -> m3_105  [key=0, style=solid];
m3_66 -> m3_109  [key=2, style=dotted];
m3_66 -> m3_111  [key=2, style=dotted];
m3_96 -> m3_105  [key=0, style=solid];
m3_96 -> m3_109  [key=2, style=dotted];
m3_96 -> m3_110  [key=2, style=dotted];
m3_99 -> m3_105  [key=0, style=solid];
m3_99 -> m3_109  [key=2, style=dotted];
m3_99 -> m3_110  [key=2, style=dotted];
m3_102 -> m3_105  [key=0, style=solid];
m3_102 -> m3_109  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_15  [key=0, style=bold, color=blue];
m3_30 -> m3_31  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_40 -> m3_41  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_59 -> m3_60  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_44  [key=0, style=solid];
m3_44 -> m3_46  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_49 -> m3_50  [key=0, style=solid];
m3_51 -> m3_53  [key=0, style=solid];
m3_51 -> m3_52  [key=0, style=solid];
m3_54 -> m3_56  [key=0, style=solid];
m3_54 -> m3_55  [key=0, style=solid];
m3_60 -> m3_61  [key=0, style=solid];
m3_62 -> m3_64  [key=0, style=solid];
m3_62 -> m3_63  [key=0, style=solid];
m3_65 -> m3_67  [key=0, style=solid];
m3_65 -> m3_66  [key=0, style=solid];
m3_73 -> m3_74  [key=0, style=solid];
m3_81 -> m3_82  [key=0, style=solid];
m3_92 -> m3_93  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_77  [key=0, style=solid];
m3_77 -> m3_79  [key=0, style=solid];
m3_77 -> m3_78  [key=0, style=solid];
m3_82 -> m3_83  [key=0, style=solid];
m3_84 -> m3_86  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_95 -> m3_97  [key=0, style=solid];
m3_95 -> m3_96  [key=0, style=solid];
m3_98 -> m3_100  [key=0, style=solid];
m3_98 -> m3_99  [key=0, style=solid];
m3_105 -> m3_7  [key=0, style=bold, color=blue];
m3_111 -> m3_64  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Market.IBar bar"];
m3_111 -> m3_109  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToScaledCsv"];
m3_111 -> m3_296  [key=0, style=solid];
m3_111 -> m3_298  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m3_298 -> m3_109  [key=2, style=dotted];
m3_298 -> m3_299  [key=0, style=solid];
m3_298 -> m3_108  [key=2, style=dotted];
m3_297 -> m3_109  [key=2, style=dotted];
m3_297 -> m3_299  [key=0, style=solid];
m3_296 -> m3_298  [key=0, style=solid];
m3_296 -> m3_297  [key=0, style=solid];
m3_299 -> m3_111  [key=0, style=bold, color=blue];
m3_108 -> m3_284  [key=0, style=solid];
m3_284 -> m3_285  [key=0, style=solid];
m3_285 -> m3_108  [key=0, style=bold, color=blue];
m3_109 -> m3_8  [key=3, color=darkorchid, style=bold, label="Parameter variable object[] args"];
m3_109 -> m3_9  [key=3, color=darkorchid, style=bold, label="Parameter variable object[] args"];
m3_109 -> m3_286  [key=0, style=solid];
m3_109 -> m3_287  [key=1, style=dashed, color=darkseagreen4, label="params object[]"];
m3_109 -> m3_288  [key=1, style=dashed, color=darkseagreen4, label="params object[]"];
m3_109 -> m3_290  [key=1, style=dashed, color=darkseagreen4, label="params object[]"];
m3_109 -> m3_292  [key=1, style=dashed, color=darkseagreen4, label="params object[]"];
m3_109 -> m3_108  [key=3, color=darkorchid, style=bold, label="Parameter variable object[] args"];
m3_109 -> m3_110  [key=3, color=darkorchid, style=bold, label="Parameter variable object[] args"];
m3_109 -> m3_111  [key=3, color=darkorchid, style=bold, label="Parameter variable object[] args"];
m3_286 -> m3_287  [key=0, style=solid];
m3_286 -> m3_288  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_286 -> m3_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_286 -> m3_291  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_286 -> m3_245  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_287 -> m3_288  [key=0, style=solid];
m3_287 -> m3_292  [key=0, style=solid];
m3_288 -> m3_289  [key=0, style=solid];
m3_288 -> m3_290  [key=1, style=dashed, color=darkseagreen4, label=value];
m3_290 -> m3_291  [key=0, style=solid];
m3_290 -> m3_294  [key=2, style=dotted];
m3_290 -> m3_295  [key=2, style=dotted];
m3_292 -> m3_293  [key=0, style=solid];
m3_292 -> m3_199  [key=2, style=dotted];
m3_291 -> m3_287  [key=0, style=solid];
m3_291 -> m3_291  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_289 -> m3_290  [key=0, style=solid];
m3_289 -> m3_291  [key=0, style=solid];
m3_293 -> m3_109  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string GenerateLine"];
m3_0 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_8  [key=2, style=dotted];
m3_1 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=clone];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_9  [key=2, style=dotted];
m3_2 -> m3_6  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_10  [key=2, style=dotted];
m3_3 -> m3_3  [key=3, color=darkorchid, style=bold, label="Field variable bool _processingOrder"];
m3_3 -> m3_7  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_11  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_12  [key=2, style=dotted];
m3_5 -> m3_13  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_14  [key=2, style=dotted];
m3_6 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_311 -> m3_312  [key=0, style=solid];
m3_311 -> m3_313  [key=0, style=solid];
m3_304 -> m3_245  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.TickType GetCommonTickTypeForCommonDataTypes"];
m3_304 -> m3_305  [key=0, style=solid];
m3_304 -> m3_307  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_304 -> m3_309  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_304 -> m3_311  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_304 -> m3_313  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_304 -> m3_314  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m3_304 -> m3_244  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.TickType GetCommonTickTypeForCommonDataTypes"];
m3_304 -> m3_310  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.TickType GetCommonTickTypeForCommonDataTypes"];
m3_305 -> m3_306  [key=0, style=solid];
m3_305 -> m3_307  [key=0, style=solid];
m3_307 -> m3_308  [key=0, style=solid];
m3_307 -> m3_309  [key=0, style=solid];
m3_309 -> m3_310  [key=0, style=solid];
m3_309 -> m3_311  [key=0, style=solid];
m3_313 -> m3_314  [key=0, style=solid];
m3_313 -> m3_316  [key=0, style=solid];
m3_314 -> m3_315  [key=0, style=solid];
m3_314 -> m3_316  [key=0, style=solid];
m3_310 -> m3_317  [key=0, style=solid];
m3_306 -> m3_317  [key=0, style=solid];
m3_308 -> m3_317  [key=0, style=solid];
m3_312 -> m3_317  [key=0, style=solid];
m3_316 -> m3_317  [key=0, style=solid];
m3_315 -> m3_317  [key=0, style=solid];
m3_317 -> m3_304  [key=0, style=bold, color=blue];
m3_166 -> m3_131  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.TickType tickType"];
m3_166 -> m3_211  [key=0, style=solid];
m3_166 -> m3_212  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m3_166 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_166 -> m3_214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_166 -> m3_220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_166 -> m3_224  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_166 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_166 -> m3_228  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_211 -> m3_212  [key=0, style=solid];
m3_211 -> m3_156  [key=2, style=dotted];
m3_211 -> m3_221  [key=1, style=dashed, color=darkseagreen4, label=tickTypeString];
m3_211 -> m3_224  [key=1, style=dashed, color=darkseagreen4, label=tickTypeString];
m3_211 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label=tickTypeString];
m3_211 -> m3_228  [key=1, style=dashed, color=darkseagreen4, label=tickTypeString];
m3_211 -> m3_229  [key=1, style=dashed, color=darkseagreen4, label=tickTypeString];
m3_212 -> m3_107  [key=2, style=dotted];
m3_212 -> m3_213  [key=0, style=solid];
m3_212 -> m3_221  [key=1, style=dashed, color=darkseagreen4, label=formattedDate];
m3_212 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label=formattedDate];
m3_212 -> m3_229  [key=1, style=dashed, color=darkseagreen4, label=formattedDate];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_219  [key=1, style=dashed, color=darkseagreen4, label=isHourOrDaily];
m3_213 -> m3_223  [key=1, style=dashed, color=darkseagreen4, label=isHourOrDaily];
m3_213 -> m3_227  [key=1, style=dashed, color=darkseagreen4, label=isHourOrDaily];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_222  [key=0, style=solid];
m3_214 -> m3_226  [key=0, style=solid];
m3_214 -> m3_230  [key=0, style=solid];
m3_220 -> m3_232  [key=0, style=solid];
m3_220 -> m3_157  [key=2, style=dotted];
m3_220 -> m3_198  [key=2, style=dotted];
m3_224 -> m3_232  [key=0, style=solid];
m3_224 -> m3_157  [key=2, style=dotted];
m3_224 -> m3_156  [key=2, style=dotted];
m3_224 -> m3_234  [key=2, style=dotted];
m3_225 -> m3_232  [key=0, style=solid];
m3_225 -> m3_156  [key=2, style=dotted];
m3_225 -> m3_234  [key=2, style=dotted];
m3_228 -> m3_232  [key=0, style=solid];
m3_228 -> m3_157  [key=2, style=dotted];
m3_228 -> m3_233  [key=2, style=dotted];
m3_221 -> m3_232  [key=0, style=solid];
m3_221 -> m3_233  [key=2, style=dotted];
m3_229 -> m3_232  [key=0, style=solid];
m3_229 -> m3_233  [key=2, style=dotted];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_159  [key=2, style=dotted];
m3_219 -> m3_220  [key=0, style=solid];
m3_219 -> m3_221  [key=0, style=solid];
m3_223 -> m3_224  [key=0, style=solid];
m3_223 -> m3_225  [key=0, style=solid];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_229  [key=0, style=solid];
m3_215 -> m3_216  [key=0, style=solid];
m3_222 -> m3_223  [key=0, style=solid];
m3_226 -> m3_227  [key=0, style=solid];
m3_230 -> m3_231  [key=0, style=solid];
m3_218 -> m3_219  [key=0, style=solid];
m3_216 -> m3_217  [key=0, style=solid];
m3_217 -> m3_218  [key=0, style=solid];
m3_232 -> m3_166  [key=0, style=bold, color=blue];
m3_364 -> m3_365  [key=0, style=solid];
m3_362 -> m3_363  [key=0, style=solid];
m3_362 -> m3_347  [key=2, style=dotted];
m3_358 -> m3_359  [key=0, style=solid];
m3_365 -> m3_157  [key=2, style=dotted];
m3_365 -> m3_366  [key=0, style=solid];
m3_365 -> m3_367  [key=2, style=dotted];
m3_361 -> m3_362  [key=0, style=solid];
m3_363 -> m3_361  [key=0, style=bold, color=blue];
m3_359 -> m3_157  [key=2, style=dotted];
m3_359 -> m3_360  [key=0, style=solid];
m3_360 -> m3_358  [key=0, style=bold, color=blue];
m3_366 -> m3_364  [key=0, style=bold, color=blue];
m3_318 -> m3_126  [key=3, color=green, style=bold, label="method methodReturn bool TryParsePath"];
m3_318 -> m3_319  [key=0, style=solid];
m3_318 -> m3_324  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_318 -> m3_125  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryParsePath"];
m3_319 -> m3_320  [key=0, style=solid];
m3_324 -> m3_324  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_324 -> m3_325  [key=0, style=solid];
m3_324 -> m3_346  [key=2, style=dotted];
m3_324 -> m3_275  [key=2, style=dotted];
m3_324 -> m3_362  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_324 -> m3_326  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_324 -> m3_327  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_324 -> m3_339  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_321 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label="out System.DateTime"];
m3_321 -> m3_322  [key=0, style=solid];
m3_331 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Resolution"];
m3_331 -> m3_332  [key=0, style=solid];
m3_331 -> m3_277  [key=2, style=dotted];
m3_331 -> m3_335  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Resolution"];
m3_336 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label="out System.DateTime"];
m3_336 -> m3_337  [key=0, style=solid];
m3_336 -> m3_354  [key=2, style=dotted];
m3_336 -> m3_279  [key=2, style=dotted];
m3_337 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Symbol"];
m3_337 -> m3_338  [key=0, style=solid];
m3_337 -> m3_341  [key=0, style=solid];
m3_337 -> m3_355  [key=2, style=dotted];
m3_341 -> m3_342  [key=0, style=solid];
m3_340 -> m3_342  [key=0, style=solid];
m3_320 -> m3_321  [key=0, style=solid];
m3_323 -> m3_324  [key=0, style=solid];
m3_323 -> m3_343  [key=2, style=dotted];
m3_323 -> m3_344  [key=2, style=dotted];
m3_323 -> m3_345  [key=2, style=dotted];
m3_323 -> m3_358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_323 -> m3_328  [key=1, style=dashed, color=darkseagreen4, label=securityTypes];
m3_323 -> m3_365  [key=1, style=dashed, color=darkseagreen4, label=securityTypes];
m3_325 -> m3_326  [key=0, style=solid];
m3_325 -> m3_327  [key=0, style=solid];
m3_325 -> m3_347  [key=2, style=dotted];
m3_325 -> m3_348  [key=2, style=dotted];
m3_325 -> m3_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_326 -> m3_325  [key=0, style=solid];
m3_326 -> m3_326  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_326 -> m3_349  [key=2, style=dotted];
m3_326 -> m3_327  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_326 -> m3_339  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_327 -> m3_331  [key=1, style=dashed, color=darkseagreen4, label=info];
m3_327 -> m3_336  [key=1, style=dashed, color=darkseagreen4, label=info];
m3_327 -> m3_328  [key=0, style=solid];
m3_327 -> m3_350  [key=2, style=dotted];
m3_327 -> m3_351  [key=2, style=dotted];
m3_327 -> m3_329  [key=1, style=dashed, color=darkseagreen4, label=info];
m3_327 -> m3_330  [key=1, style=dashed, color=darkseagreen4, label=info];
m3_327 -> m3_332  [key=1, style=dashed, color=darkseagreen4, label=info];
m3_339 -> m3_340  [key=0, style=solid];
m3_339 -> m3_356  [key=2, style=dotted];
m3_339 -> m3_357  [key=2, style=dotted];
m3_322 -> m3_323  [key=0, style=solid];
m3_322 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label=pathSeparators];
m3_322 -> m3_327  [key=1, style=dashed, color=darkseagreen4, label=pathSeparators];
m3_328 -> m3_331  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m3_328 -> m3_336  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m3_328 -> m3_329  [key=0, style=solid];
m3_328 -> m3_352  [key=2, style=dotted];
m3_328 -> m3_364  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_328 -> m3_330  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m3_328 -> m3_332  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m3_330 -> m3_331  [key=0, style=solid];
m3_330 -> m3_337  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m3_332 -> m3_337  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m3_332 -> m3_333  [key=0, style=solid];
m3_332 -> m3_277  [key=2, style=dotted];
m3_335 -> m3_336  [key=0, style=solid];
m3_335 -> m3_337  [key=0, style=solid];
m3_329 -> m3_337  [key=1, style=dashed, color=darkseagreen4, label=market];
m3_329 -> m3_330  [key=0, style=solid];
m3_338 -> m3_339  [key=0, style=solid];
m3_334 -> m3_341  [key=0, style=solid];
m3_334 -> m3_353  [key=2, style=dotted];
m3_333 -> m3_335  [key=0, style=solid];
m3_333 -> m3_334  [key=0, style=solid];
m3_342 -> m3_318  [key=0, style=bold, color=blue];
m3_201 -> m3_209  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_204  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_201 -> m3_205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_201 -> m3_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m3_203 -> m3_113  [key=2, style=dotted];
m3_203 -> m3_210  [key=0, style=solid];
m3_209 -> m3_107  [key=2, style=dotted];
m3_209 -> m3_156  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_197  [key=2, style=dotted];
m3_202 -> m3_203  [key=0, style=solid];
m3_202 -> m3_204  [key=0, style=solid];
m3_210 -> m3_201  [key=0, style=bold, color=blue];
m3_204 -> m3_157  [key=2, style=dotted];
m3_204 -> m3_209  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_204 -> m3_204  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_206  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_207 -> m3_209  [key=0, style=solid];
m3_207 -> m3_208  [key=0, style=solid];
m3_208 -> m3_209  [key=0, style=solid];
m3_206 -> m3_210  [key=0, style=solid];
m3_205 -> m3_207  [key=0, style=solid];
m3_205 -> m3_206  [key=0, style=solid];
m3_133 -> m3_134  [key=0, style=solid, color=green];
m3_134 -> m3_135  [key=0, style=solid, color=green];
m3_134 -> m3_136  [key=2, style=dotted, color=green];
m3_134 -> m3_132  [key=2, style=dotted, color=green];
m3_135 -> m3_133  [key=0, style=bold, color=blue];
m3_172 -> m3_136  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m3_172 -> m3_235  [key=0, style=solid];
m3_172 -> m3_236  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_172 -> m3_237  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m3_172 -> m3_238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_237  [key=0, style=solid];
m3_236 -> m3_157  [key=2, style=dotted];
m3_236 -> m3_241  [key=0, style=solid];
m3_237 -> m3_107  [key=2, style=dotted];
m3_237 -> m3_238  [key=0, style=solid];
m3_237 -> m3_240  [key=1, style=dashed, color=darkseagreen4, label=zipFileName];
m3_238 -> m3_238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TickType?"];
m3_238 -> m3_239  [key=0, style=solid];
m3_240 -> m3_241  [key=0, style=solid];
m3_239 -> m3_156  [key=2, style=dotted];
m3_239 -> m3_198  [key=2, style=dotted];
m3_239 -> m3_240  [key=0, style=solid];
m3_241 -> m3_172  [key=0, style=bold, color=blue];
m3_249 -> m3_275  [key=2, style=dotted];
m3_249 -> m3_250  [key=0, style=solid];
m3_249 -> m3_276  [key=2, style=dotted];
m3_249 -> m3_253  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_254  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_255  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_256  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_258  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_259  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_260  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_261  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_265  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_266  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_268  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_269  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_270  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_249 -> m3_272  [key=1, style=dashed, color=darkseagreen4, label=parts];
m3_273 -> m3_113  [key=2, style=dotted];
m3_273 -> m3_274  [key=0, style=solid];
m3_247 -> m3_273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_247 -> m3_248  [key=0, style=solid];
m3_247 -> m3_249  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_247 -> m3_250  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_247 -> m3_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_247 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_250 -> m3_273  [key=0, style=solid];
m3_250 -> m3_251  [key=0, style=solid];
m3_250 -> m3_263  [key=0, style=solid];
m3_274 -> m3_247  [key=0, style=bold, color=blue];
m3_248 -> m3_249  [key=0, style=solid];
m3_248 -> m3_252  [key=1, style=dashed, color=darkseagreen4, label=isHourlyOrDaily];
m3_248 -> m3_264  [key=1, style=dashed, color=darkseagreen4, label=isHourlyOrDaily];
m3_257 -> m3_274  [key=0, style=solid];
m3_257 -> m3_280  [key=2, style=dotted];
m3_262 -> m3_274  [key=0, style=solid];
m3_262 -> m3_280  [key=2, style=dotted];
m3_251 -> m3_252  [key=0, style=solid];
m3_263 -> m3_264  [key=0, style=solid];
m3_268 -> m3_274  [key=0, style=solid];
m3_268 -> m3_283  [key=2, style=dotted];
m3_272 -> m3_274  [key=0, style=solid];
m3_272 -> m3_283  [key=2, style=dotted];
m3_253 -> m3_277  [key=2, style=dotted];
m3_253 -> m3_257  [key=1, style=dashed, color=darkseagreen4, label=style];
m3_253 -> m3_254  [key=0, style=solid];
m3_254 -> m3_277  [key=2, style=dotted];
m3_254 -> m3_257  [key=1, style=dashed, color=darkseagreen4, label=right];
m3_254 -> m3_255  [key=0, style=solid];
m3_258 -> m3_277  [key=2, style=dotted];
m3_258 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label=style];
m3_258 -> m3_259  [key=0, style=solid];
m3_259 -> m3_277  [key=2, style=dotted];
m3_259 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label=right];
m3_259 -> m3_260  [key=0, style=solid];
m3_256 -> m3_279  [key=2, style=dotted];
m3_256 -> m3_257  [key=0, style=solid];
m3_261 -> m3_279  [key=2, style=dotted];
m3_261 -> m3_262  [key=0, style=solid];
m3_265 -> m3_279  [key=2, style=dotted];
m3_265 -> m3_266  [key=0, style=solid];
m3_265 -> m3_267  [key=1, style=dashed, color=darkseagreen4, label=expiryYearMonth];
m3_269 -> m3_279  [key=2, style=dotted];
m3_269 -> m3_270  [key=0, style=solid];
m3_269 -> m3_271  [key=1, style=dashed, color=darkseagreen4, label=expiryYearMonth];
m3_255 -> m3_257  [key=1, style=dashed, color=darkseagreen4, label=strike];
m3_255 -> m3_256  [key=0, style=solid];
m3_255 -> m3_278  [key=2, style=dotted];
m3_260 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label=strike];
m3_260 -> m3_261  [key=0, style=solid];
m3_260 -> m3_278  [key=2, style=dotted];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_281  [key=2, style=dotted];
m3_270 -> m3_271  [key=0, style=solid];
m3_270 -> m3_281  [key=2, style=dotted];
m3_252 -> m3_253  [key=0, style=solid];
m3_252 -> m3_258  [key=0, style=solid];
m3_264 -> m3_265  [key=0, style=solid];
m3_264 -> m3_269  [key=0, style=solid];
m3_267 -> m3_268  [key=0, style=solid];
m3_267 -> m3_282  [key=2, style=dotted];
m3_271 -> m3_272  [key=0, style=solid];
m3_271 -> m3_282  [key=2, style=dotted];
m3_123 -> m3_126  [key=3, color=green, style=bold, label="method methodReturn bool IsCommonLeanDataType"];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_125  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsCommonLeanDataType"];
m3_126 -> m3_127  [key=0, style=solid, color=green];
m3_124 -> m3_126  [key=0, style=solid, color=green];
m3_124 -> m3_125  [key=0, style=solid];
m3_125 -> m3_127  [key=0, style=solid];
m3_127 -> m3_123  [key=0, style=bold, color=blue];
m3_160 -> m3_161  [key=0, style=solid];
m3_161 -> m3_157  [key=2, style=dotted];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_163  [key=2, style=dotted];
m3_162 -> m3_160  [key=0, style=bold, color=blue];
m3_136 -> m3_133  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m3_136 -> m3_167  [key=0, style=solid];
m3_136 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_136 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_136 -> m3_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_169 -> m3_132  [key=2, style=dotted];
m3_169 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=directory];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_157  [key=2, style=dotted];
m3_170 -> m3_132  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_172  [key=2, style=dotted];
m3_167 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=directory];
m3_167 -> m3_170  [key=1, style=dashed, color=darkseagreen4, label=directory];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_156  [key=2, style=dotted];
m3_167 -> m3_157  [key=2, style=dotted];
m3_167 -> m3_158  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_170  [key=0, style=solid];
m3_171 -> m3_136  [key=0, style=bold, color=blue];
m3_131 -> m3_128  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.TickType tickType"];
m3_131 -> m3_164  [key=0, style=solid];
m3_164 -> m3_132  [key=2, style=dotted];
m3_164 -> m3_137  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_166  [key=2, style=dotted];
m3_165 -> m3_131  [key=0, style=bold, color=blue];
m3_196 -> m3_173  [key=0, style=bold, color=blue];
m3_174 -> m3_107  [key=2, style=dotted];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_182  [key=1, style=dashed, color=darkseagreen4, label=formattedDate];
m3_174 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label=formattedDate];
m3_174 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label=formattedDate];
m3_174 -> m3_193  [key=1, style=dashed, color=darkseagreen4, label=formattedDate];
m3_188 -> m3_107  [key=2, style=dotted];
m3_188 -> m3_108  [key=2, style=dotted];
m3_188 -> m3_157  [key=2, style=dotted];
m3_188 -> m3_156  [key=2, style=dotted];
m3_188 -> m3_196  [key=0, style=solid];
m3_188 -> m3_199  [key=2, style=dotted];
m3_189 -> m3_107  [key=2, style=dotted];
m3_189 -> m3_108  [key=2, style=dotted];
m3_189 -> m3_157  [key=2, style=dotted];
m3_189 -> m3_156  [key=2, style=dotted];
m3_189 -> m3_196  [key=0, style=solid];
m3_189 -> m3_199  [key=2, style=dotted];
m3_192 -> m3_107  [key=2, style=dotted];
m3_192 -> m3_157  [key=2, style=dotted];
m3_192 -> m3_156  [key=2, style=dotted];
m3_192 -> m3_196  [key=0, style=solid];
m3_192 -> m3_200  [key=2, style=dotted];
m3_193 -> m3_107  [key=2, style=dotted];
m3_193 -> m3_157  [key=2, style=dotted];
m3_193 -> m3_156  [key=2, style=dotted];
m3_193 -> m3_196  [key=0, style=solid];
m3_193 -> m3_200  [key=2, style=dotted];
m3_182 -> m3_157  [key=2, style=dotted];
m3_182 -> m3_196  [key=0, style=solid];
m3_182 -> m3_197  [key=2, style=dotted];
m3_184 -> m3_157  [key=2, style=dotted];
m3_184 -> m3_198  [key=2, style=dotted];
m3_184 -> m3_196  [key=0, style=solid];
m3_185 -> m3_157  [key=2, style=dotted];
m3_185 -> m3_156  [key=2, style=dotted];
m3_185 -> m3_196  [key=0, style=solid];
m3_185 -> m3_197  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_173 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_173 -> m3_192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_173 -> m3_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_173 -> m3_182  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_173 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_173 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_173 -> m3_175  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_173 -> m3_176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_173 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_183  [key=1, style=dashed, color=darkseagreen4, label=isHourOrDaily];
m3_175 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label=isHourOrDaily];
m3_175 -> m3_191  [key=1, style=dashed, color=darkseagreen4, label=isHourOrDaily];
m3_187 -> m3_188  [key=0, style=solid];
m3_187 -> m3_189  [key=0, style=solid];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_193  [key=0, style=solid];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_183  [key=0, style=solid];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_185  [key=0, style=solid];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_186  [key=0, style=solid];
m3_176 -> m3_190  [key=0, style=solid];
m3_176 -> m3_194  [key=0, style=solid];
m3_186 -> m3_187  [key=0, style=solid];
m3_195 -> m3_196  [key=0, style=solid];
m3_195 -> m3_159  [key=2, style=dotted];
m3_190 -> m3_191  [key=0, style=solid];
m3_180 -> m3_181  [key=0, style=solid];
m3_177 -> m3_178  [key=0, style=solid];
m3_194 -> m3_195  [key=0, style=solid];
m3_179 -> m3_180  [key=0, style=solid];
m3_178 -> m3_179  [key=0, style=solid];
m3_137 -> m3_131  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_137 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_137 -> m3_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m3_137 -> m3_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_137 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_137 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_137 -> m3_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_148 -> m3_132  [key=2, style=dotted];
m3_148 -> m3_155  [key=0, style=solid];
m3_148 -> m3_157  [key=2, style=dotted];
m3_150 -> m3_132  [key=2, style=dotted];
m3_150 -> m3_155  [key=0, style=solid];
m3_150 -> m3_157  [key=2, style=dotted];
m3_152 -> m3_132  [key=2, style=dotted];
m3_152 -> m3_155  [key=0, style=solid];
m3_152 -> m3_157  [key=2, style=dotted];
m3_138 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label=isHourOrDaily];
m3_138 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label=isHourOrDaily];
m3_138 -> m3_152  [key=1, style=dashed, color=darkseagreen4, label=isHourOrDaily];
m3_138 -> m3_139  [key=0, style=solid];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_156  [key=2, style=dotted];
m3_139 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_157  [key=2, style=dotted];
m3_140 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label=market];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_156  [key=2, style=dotted];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_149  [key=0, style=solid];
m3_143 -> m3_151  [key=0, style=solid];
m3_143 -> m3_153  [key=0, style=solid];
m3_142 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label=directory];
m3_142 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label=directory];
m3_142 -> m3_152  [key=1, style=dashed, color=darkseagreen4, label=directory];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_158  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_149 -> m3_150  [key=0, style=solid];
m3_151 -> m3_152  [key=0, style=solid];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_159  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_153 -> m3_154  [key=0, style=solid];
m3_146 -> m3_147  [key=0, style=solid];
m3_145 -> m3_146  [key=0, style=solid];
m3_155 -> m3_137  [key=0, style=bold, color=blue];
m3_242 -> m3_245  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.TickType GetCommonTickType"];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_244  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.TickType GetCommonTickType"];
m3_245 -> m3_246  [key=0, style=solid];
m3_243 -> m3_245  [key=0, style=solid];
m3_243 -> m3_244  [key=0, style=solid];
m3_244 -> m3_246  [key=0, style=solid];
m3_246 -> m3_242  [key=0, style=bold, color=blue];
m3_368 -> m3_362  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_369 -> m3_365  [key=1, style=dashed, color=darkseagreen4, label=securityTypes];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_44  [key=2, style=dotted];
m4_42 -> m4_33  [key=2, style=dotted];
m4_43 -> m4_41  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_0  [key=0, style=bold, color=blue];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_7  [key=2, style=dotted];
m4_13 -> m4_11  [key=0, style=bold, color=blue];
m4_124 -> m4_153  [key=0, style=solid];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_142  [key=2, style=dotted];
m4_153 -> m4_33  [key=2, style=dotted];
m4_154 -> m4_124  [key=0, style=bold, color=blue];
m4_229 -> m4_230  [key=0, style=solid];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=res];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_64  [key=2, style=dotted];
m4_60 -> m4_65  [key=2, style=dotted];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_66  [key=2, style=dotted];
m4_61 -> m4_67  [key=2, style=dotted];
m4_61 -> m4_68  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_69 -> m4_70  [key=0, style=solid];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_55 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_63  [key=2, style=dotted];
m4_56 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=config];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_59  [key=0, style=solid];
m4_58 -> m4_62  [key=0, style=solid];
m4_62 -> m4_54  [key=0, style=bold, color=blue];
m4_70 -> m4_71  [key=0, style=solid];
m4_71 -> m4_69  [key=0, style=bold, color=blue];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_68  [key=2, style=dotted];
m4_75 -> m4_76  [key=0, style=solid];
m4_82 -> m4_83  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_63  [key=2, style=dotted];
m4_77 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label=config];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_80  [key=0, style=solid];
m4_79 -> m4_81  [key=0, style=solid];
m4_81 -> m4_75  [key=0, style=bold, color=blue];
m4_83 -> m4_84  [key=0, style=solid];
m4_84 -> m4_82  [key=0, style=bold, color=blue];
m4_112 -> m4_113  [key=0, style=solid];
m4_113 -> m4_114  [key=0, style=solid];
m4_114 -> m4_112  [key=0, style=bold, color=blue];
m4_126 -> m4_127  [key=0, style=solid];
m4_127 -> m4_128  [key=0, style=solid];
m4_128 -> m4_126  [key=0, style=bold, color=blue];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_68  [key=2, style=dotted];
m4_203 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label=request];
m4_203 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label=request];
m4_203 -> m4_209  [key=1, style=dashed, color=darkseagreen4, label=request];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label=res];
m4_205 -> m4_206  [key=0, style=solid];
m4_205 -> m4_207  [key=0, style=solid];
m4_206 -> m4_207  [key=0, style=solid];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_209  [key=0, style=solid];
m4_208 -> m4_209  [key=0, style=solid];
m4_200 -> m4_201  [key=0, style=solid];
m4_201 -> m4_202  [key=0, style=solid];
m4_201 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_201 -> m4_204  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_202 -> m4_203  [key=0, style=solid];
m4_202 -> m4_63  [key=2, style=dotted];
m4_209 -> m4_210  [key=0, style=solid];
m4_210 -> m4_200  [key=0, style=bold, color=blue];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label=res];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_64  [key=2, style=dotted];
m4_216 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label=start];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_66  [key=2, style=dotted];
m4_218 -> m4_67  [key=2, style=dotted];
m4_218 -> m4_68  [key=2, style=dotted];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_217  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_214 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_63  [key=2, style=dotted];
m4_219 -> m4_213  [key=0, style=bold, color=blue];
m4_230 -> m4_231  [key=0, style=solid];
m4_231 -> m4_229  [key=0, style=bold, color=blue];
m4_63 -> m4_225  [key=0, style=solid];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_227  [key=2, style=dotted];
m4_225 -> m4_228  [key=2, style=dotted];
m4_225 -> m4_109  [key=2, style=dotted];
m4_225 -> m4_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_225 -> m4_225  [key=1, style=dashed, color=darkseagreen4, label=sub];
m4_226 -> m4_63  [key=0, style=bold, color=blue];
m4_64 -> m4_145  [key=0, style=solid];
m4_64 -> m4_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_64 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_145 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_66  [key=2, style=dotted];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_26  [key=2, style=dotted];
m4_148 -> m4_151  [key=2, style=dotted];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_152  [key=2, style=dotted];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=timeSpan];
m4_150 -> m4_64  [key=0, style=bold, color=blue];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_95 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_95 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_95 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_98  [key=0, style=solid];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_98 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_98 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_103 -> m4_106  [key=0, style=solid];
m4_103 -> m4_110  [key=2, style=dotted];
m4_103 -> m4_111  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_64  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_66  [key=2, style=dotted];
m4_105 -> m4_67  [key=2, style=dotted];
m4_105 -> m4_88  [key=2, style=dotted];
m4_105 -> m4_33  [key=2, style=dotted];
m4_97 -> m4_106  [key=0, style=solid];
m4_97 -> m4_107  [key=2, style=dotted];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label=requestedType];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_63  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_49  [key=2, style=dotted];
m4_102 -> m4_108  [key=2, style=dotted];
m4_102 -> m4_109  [key=2, style=dotted];
m4_102 -> m4_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_104  [key=0, style=solid];
m4_106 -> m4_95  [key=0, style=bold, color=blue];
m4_14 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_16 -> m4_14  [key=0, style=bold, color=blue];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_7  [key=0, style=bold, color=blue];
m4_34 -> m4_35  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=2, style=dotted];
m4_35 -> m4_33  [key=2, style=dotted];
m4_36 -> m4_34  [key=0, style=bold, color=blue];
m4_173 -> m4_178  [key=0, style=solid];
m4_173 -> m4_180  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_173 -> m4_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_66  [key=2, style=dotted];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_26  [key=2, style=dotted];
m4_180 -> m4_151  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_152  [key=2, style=dotted];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_179  [key=1, style=dashed, color=darkseagreen4, label=timeSpan];
m4_182 -> m4_173  [key=0, style=bold, color=blue];
m4_132 -> m4_136  [key=0, style=solid];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_32  [key=2, style=dotted];
m4_136 -> m4_33  [key=2, style=dotted];
m4_137 -> m4_132  [key=0, style=bold, color=blue];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_45 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_45 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_49  [key=2, style=dotted];
m4_46 -> m4_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_50  [key=2, style=dotted];
m4_47 -> m4_51  [key=2, style=dotted];
m4_47 -> m4_52  [key=2, style=dotted];
m4_47 -> m4_53  [key=2, style=dotted];
m4_47 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_48 -> m4_45  [key=0, style=bold, color=blue];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=2, style=dotted];
m4_30 -> m4_33  [key=2, style=dotted];
m4_31 -> m4_29  [key=0, style=bold, color=blue];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_89 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_64  [key=2, style=dotted];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_66  [key=2, style=dotted];
m4_92 -> m4_67  [key=2, style=dotted];
m4_92 -> m4_32  [key=2, style=dotted];
m4_92 -> m4_94  [key=2, style=dotted];
m4_92 -> m4_33  [key=2, style=dotted];
m4_93 -> m4_89  [key=0, style=bold, color=blue];
m4_129 -> m4_130  [key=0, style=solid];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_132  [key=2, style=dotted];
m4_130 -> m4_94  [key=2, style=dotted];
m4_130 -> m4_33  [key=2, style=dotted];
m4_131 -> m4_129  [key=0, style=bold, color=blue];
m4_133 -> m4_134  [key=0, style=solid];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_32  [key=2, style=dotted];
m4_134 -> m4_94  [key=2, style=dotted];
m4_134 -> m4_33  [key=2, style=dotted];
m4_135 -> m4_133  [key=0, style=bold, color=blue];
m4_38 -> m4_39  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_41  [key=2, style=dotted];
m4_39 -> m4_33  [key=2, style=dotted];
m4_40 -> m4_38  [key=0, style=bold, color=blue];
m4_85 -> m4_86  [key=0, style=solid];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_88  [key=2, style=dotted];
m4_86 -> m4_33  [key=2, style=dotted];
m4_87 -> m4_85  [key=0, style=bold, color=blue];
m4_32 -> m4_143  [key=0, style=solid];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_27  [key=2, style=dotted];
m4_143 -> m4_142  [key=2, style=dotted];
m4_143 -> m4_33  [key=2, style=dotted];
m4_144 -> m4_32  [key=0, style=bold, color=blue];
m4_27 -> m4_198  [key=0, style=solid];
m4_27 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_27 -> m4_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_27 -> m4_205  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m4_27 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m4_27 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m4_27 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m4_198 -> m4_199  [key=0, style=solid];
m4_198 -> m4_49  [key=2, style=dotted];
m4_198 -> m4_200  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_199 -> m4_27  [key=0, style=bold, color=blue];
m4_17 -> m4_18  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_20  [key=0, style=solid];
m4_19 -> m4_24  [key=0, style=solid];
m4_19 -> m4_25  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_23  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_26  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_28  [key=2, style=dotted];
m4_22 -> m4_24  [key=0, style=solid];
m4_22 -> m4_27  [key=2, style=dotted];
m4_24 -> m4_17  [key=0, style=bold, color=blue];
m4_142 -> m4_155  [key=0, style=solid];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_157  [key=2, style=dotted];
m4_155 -> m4_33  [key=2, style=dotted];
m4_156 -> m4_142  [key=0, style=bold, color=blue];
m4_37 -> m4_138  [key=0, style=solid];
m4_37 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>"];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_140  [key=0, style=solid];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_25  [key=2, style=dotted];
m4_140 -> m4_142  [key=2, style=dotted];
m4_140 -> m4_33  [key=2, style=dotted];
m4_139 -> m4_141  [key=0, style=solid];
m4_139 -> m4_107  [key=2, style=dotted];
m4_141 -> m4_37  [key=0, style=bold, color=blue];
m4_157 -> m4_183  [key=0, style=solid];
m4_157 -> m4_184  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>"];
m4_157 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m4_183 -> m4_184  [key=0, style=solid];
m4_183 -> m4_190  [key=1, style=dashed, color=darkseagreen4, label=sentMessage];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_195  [key=2, style=dotted];
m4_184 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label=reqs];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_197  [key=2, style=dotted];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_185  [key=0, style=solid];
m4_185 -> m4_186  [key=0, style=solid];
m4_185 -> m4_193  [key=0, style=solid];
m4_185 -> m4_187  [key=1, style=dashed, color=darkseagreen4, label=request];
m4_185 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label=request];
m4_185 -> m4_189  [key=1, style=dashed, color=darkseagreen4, label=request];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_185  [key=0, style=solid];
m4_187 -> m4_188  [key=0, style=solid];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_190  [key=0, style=solid];
m4_189 -> m4_190  [key=0, style=solid];
m4_191 -> m4_192  [key=0, style=solid];
m4_192 -> m4_185  [key=0, style=solid];
m4_192 -> m4_196  [key=2, style=dotted];
m4_194 -> m4_157  [key=0, style=bold, color=blue];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_158 -> m4_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_158 -> m4_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_158 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_161  [key=0, style=solid];
m4_159 -> m4_171  [key=2, style=dotted];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_172  [key=2, style=dotted];
m4_161 -> m4_163  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m4_161 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_173  [key=2, style=dotted];
m4_162 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label=startTime];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_63  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_174  [key=2, style=dotted];
m4_165 -> m4_65  [key=2, style=dotted];
m4_160 -> m4_170  [key=0, style=solid];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_66  [key=2, style=dotted];
m4_163 -> m4_67  [key=2, style=dotted];
m4_163 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label=endTime];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_175  [key=2, style=dotted];
m4_166 -> m4_142  [key=2, style=dotted];
m4_166 -> m4_168  [key=1, style=dashed, color=darkseagreen4, label=history];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_169  [key=0, style=solid];
m4_167 -> m4_176  [key=2, style=dotted];
m4_167 -> m4_177  [key=2, style=dotted];
m4_168 -> m4_170  [key=0, style=solid];
m4_168 -> m4_177  [key=2, style=dotted];
m4_169 -> m4_170  [key=0, style=solid];
m4_170 -> m4_158  [key=0, style=bold, color=blue];
m4_25 -> m4_211  [key=0, style=solid];
m4_25 -> m4_215  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_25 -> m4_216  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_25 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_49  [key=2, style=dotted];
m4_211 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_212 -> m4_25  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_0  [key=2, style=dotted];
m4_6 -> m4_4  [key=0, style=bold, color=blue];
m4_88 -> m4_115  [key=0, style=solid];
m4_88 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_88 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_88 -> m4_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_115 -> m4_119  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_115 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_120 -> m4_123  [key=0, style=solid];
m4_120 -> m4_110  [key=2, style=dotted];
m4_120 -> m4_111  [key=2, style=dotted];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_68  [key=2, style=dotted];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_124  [key=2, style=dotted];
m4_122 -> m4_125  [key=2, style=dotted];
m4_122 -> m4_33  [key=2, style=dotted];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label=requestedType];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_63  [key=2, style=dotted];
m4_117 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label=config];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_49  [key=2, style=dotted];
m4_119 -> m4_108  [key=2, style=dotted];
m4_119 -> m4_109  [key=2, style=dotted];
m4_119 -> m4_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_121  [key=0, style=solid];
m4_123 -> m4_88  [key=0, style=bold, color=blue];
m4_44 -> m4_72  [key=0, style=solid];
m4_44 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_49  [key=2, style=dotted];
m4_72 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_50  [key=2, style=dotted];
m4_73 -> m4_51  [key=2, style=dotted];
m4_73 -> m4_52  [key=2, style=dotted];
m4_73 -> m4_53  [key=2, style=dotted];
m4_73 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_74 -> m4_44  [key=0, style=bold, color=blue];
m4_68 -> m4_220  [key=0, style=solid];
m4_68 -> m4_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_224  [key=2, style=dotted];
m4_221 -> m4_65  [key=2, style=dotted];
m4_222 -> m4_223  [key=0, style=solid];
m4_223 -> m4_68  [key=0, style=bold, color=blue];
m4_232 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_180  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_211  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_232 -> m4_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_233 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_233 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_233 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_234 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_235 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_236 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_237 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_238 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_239 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_240 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_240 -> m4_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_241 -> m4_205  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m4_241 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m4_242 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m4_242 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m4_243 -> m4_215  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_243 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_244 -> m4_216  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_3 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m5_4 -> m5_5  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_8  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> n9  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_8 -> m5_3  [key=0, style=bold, color=blue];
m5_10 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopMarketOrder"];
m5_10 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopMarketOrder"];
m5_10 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopMarketOrder"];
m5_10 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopMarketOrder"];
}
