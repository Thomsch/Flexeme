digraph  {
m0_88 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", span="119-119", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_89 [label="string json = _matchData", span="121-121", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_94 [label="GDAXTestsHelpers.AddOrder(_unit, 1, id, orderQuantity)", span="130-130", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_98 [label="_unit.OrderStatusChanged += (s, e) =>\r\n            {\r\n                Assert.AreEqual(''BTCUSD'', e.Symbol.Value);\r\n                actualFee += e.OrderFee;\r\n                actualQuantity += e.AbsoluteFillQuantity;\r\n\r\n                Assert.AreEqual(actualQuantity != orderQuantity ? Orders.OrderStatus.PartiallyFilled : Orders.OrderStatus.Filled, e.Status);\r\n                Assert.AreEqual(5.23512m, actualQuantity);\r\n                Assert.AreEqual(0.01m, Math.Round(actualFee, 8));\r\n                raised.Set();\r\n            }", span="136-146", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_99 [label="_unit.OnMessage(_unit, GDAXTestsHelpers.GetArgs(json))", span="148-148", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_101 [label="Assert.AreEqual(400.23, _unit.Ticks.First().Price)", span="153-153", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_100 [label="Assert.AreEqual(raised.WaitOne(1000), expectedQuantity != 99)", span="151-151", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_90 [label="string id = ''132fb6ae-456b-4654-b4e0-d681ac05cea1''", span="122-122", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_92 [label="json = json.Replace(id, Guid.NewGuid().ToString())", span="126-126", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_93 [label="decimal orderQuantity = 6.1m", span="129-129", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_95 [label="ManualResetEvent raised = new ManualResetEvent(false)", span="131-131", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_96 [label="decimal actualFee = 0", span="133-133", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_97 [label="decimal actualQuantity = 0", span="134-134", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_91 [label="expectedQuantity == 99", span="124-124", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_102 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", span="119-119", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m0_209 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", span="248-248", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m0_210 [label="SetupResponse(_holdingData)", span="250-250", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m0_211 [label="_unit.CachedOrderIDs.TryAdd(1, new Orders.MarketOrder { BrokerId = new List<string> { ''1'' }, Price = 123 })", span="252-252", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m0_212 [label="var actual = _unit.GetAccountHoldings()", span="254-254", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m0_213 [label="Assert.AreEqual(2, actual.Count())", span="256-256", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m0_214 [label="Assert.AreEqual(0.005m, actual.First().Quantity)", span="257-257", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m0_215 [label="Assert.AreEqual(10m, actual.First().AveragePrice)", span="258-258", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m0_216 [label="Assert.AreEqual(-0.5m, actual.Last().Quantity)", span="260-260", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m0_217 [label="Assert.AreEqual(1000m, actual.Last().AveragePrice)", span="261-261", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m0_218 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", span="248-248", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m0_69 [label="Entry Unk.Connect", span="", cluster="Unk.Connect", file="GDAXBrokerageTests.cs"];
m0_57 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", span="97-97", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m0_58 [label="_wss.Setup(m => m.Connect()).Verifiable()", span="99-99", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m0_59 [label="_wss.Setup(m => m.IsOpen).Returns(true)", span="100-100", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m0_60 [label="_unit.Connect()", span="102-102", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m0_61 [label="_wss.Verify()", span="103-103", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m0_62 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", span="97-97", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m0_180 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="138-138", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerageTests.cs"];
m0_106 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="25-25", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXBrokerageTests.cs"];
m0_49 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="GDAXBrokerageTests.cs"];
m0_179 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="GDAXBrokerageTests.cs"];
m0_248 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", span="292-292", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m0_249 [label="string actual = null", span="294-294", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_250 [label="string expected = ''[\''BTC-USD\'',\''BTC-ETH\'']''", span="295-295", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_251 [label="_wss.Setup(w => w.Send(It.IsAny<string>())).Callback<string>(c => actual = c)", span="296-296", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_254 [label="StringAssert.Contains(expected, actual)", span="303-303", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_252 [label="_unit.Ticks.Clear()", span="298-298", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_253 [label="_unit.Subscribe(Mock.Of<LiveNodePacket>(), new[] { Symbol.Create(''BTCUSD'', SecurityType.Forex, Market.GDAX), Symbol.Create(''GBPUSD'', SecurityType.Forex, Market.GDAX),\r\n                Symbol.Create(''BTCETH'', SecurityType.Forex, Market.GDAX)})", span="300-301", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_255 [label="Assert.AreEqual(2, _unit.Ticks.Count())", span="305-305", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_256 [label="Assert.AreEqual(333.98, _unit.Ticks.First().BidPrice)", span="306-306", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_257 [label="Assert.AreEqual(333.99, _unit.Ticks.First().AskPrice)", span="307-307", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_258 [label="Assert.AreEqual(333.985, _unit.Ticks.First().Price)", span="308-308", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_259 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", span="292-292", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m0_219 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="207-207", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerageTests.cs"];
m0_190 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", span="230-230", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m0_191 [label="SetupResponse(_accountsData)", span="232-232", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m0_192 [label="var actual = _unit.GetCashBalance()", span="234-234", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m0_193 [label="Assert.AreEqual(2, actual.Count())", span="236-236", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m0_196 [label="Assert.AreEqual(80.2301373066930000m, usd.Amount)", span="241-241", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m0_197 [label="Assert.AreEqual(1, usd.ConversionRate)", span="242-242", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m0_198 [label="Assert.AreEqual(1.1, btc.Amount)", span="243-243", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m0_199 [label="Assert.AreEqual(333.985m, btc.ConversionRate)", span="244-244", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m0_194 [label="var usd = actual.Single(a => a.Symbol == ''USD'')", span="238-238", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m0_195 [label="var btc = actual.Single(a => a.Symbol == ''BTC'')", span="239-239", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m0_200 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", span="230-230", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m0_8 [label="_tickerData = File.ReadAllText(''TestData//gdax_ticker.txt'')", span="60-60", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", color=green, community=0];
m0_157 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="GDAXBrokerageTests.cs"];
m0_23 [label="Entry System.Math.Sign(int)", span="0-0", cluster="System.Math.Sign(int)", file="GDAXBrokerageTests.cs"];
m0_9 [label="_symbol = Symbol.Create(''BTCUSD'', SecurityType.Forex, Market.GDAX)", span="62-62", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m0_201 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="253-253", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerageTests.cs"];
m0_11 [label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => r.Resource.StartsWith(''/orders/'' + _brokerId) || r.Resource.StartsWith(''/orders/'' + _matchBrokerId))))\r\n            .Returns(new RestSharp.RestResponse\r\n            {\r\n                Content = File.ReadAllText(''TestData//gdax_orderById.txt''),\r\n                StatusCode = HttpStatusCode.OK\r\n            })", span="70-75", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m0_156 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="GDAXBrokerageTests.cs"];
m0_112 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="GDAXBrokerageTests.cs"];
m0_110 [label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(int)", file="GDAXBrokerageTests.cs"];
m0_18 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="GDAXBrokerageTests.cs"];
m0_161 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="GDAXBrokerageTests.cs"];
m0_63 [label="Entry Unk.Verifiable", span="", cluster="Unk.Verifiable", file="GDAXBrokerageTests.cs"];
m0_220 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", span="267-267", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m0_221 [label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''1'')))).Returns(new RestSharp.RestResponse\r\n            {\r\n                StatusCode = code\r\n            })", span="269-272", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m0_222 [label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''2'')))).Returns(new RestSharp.RestResponse\r\n            {\r\n                StatusCode = code2\r\n            })", span="274-277", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m0_223 [label="var actual = _unit.CancelOrder(new Orders.LimitOrder { BrokerId = new List<string> { ''1'', ''2'' } })", span="279-279", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m0_224 [label="Assert.AreEqual(expected, actual)", span="281-281", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m0_225 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", span="267-267", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m0_144 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53", cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="GDAXBrokerageTests.cs"];
m0_131 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", span="69-69", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="GDAXBrokerageTests.cs"];
m0_178 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerageTests.cs"];
m0_226 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41", cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="GDAXBrokerageTests.cs"];
m0_162 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_263 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_267 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_264 [label="w.Send(It.IsAny<string>())", span="296-296", cluster="lambda expression", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_265 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_268 [label="actual = c", span="296-296", cluster="lambda expression", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_269 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_152 [label="Assert.IsTrue(orderId == null || _unit.CachedOrderIDs.SelectMany(c => c.Value.BrokerId.Where(b => b == _brokerId)).Any())", span="188-188", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_245 [label="_unit.UpdateOrder(new LimitOrder())", span="288-288", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_20 [label=orders, span="66-66", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.Order>)", file="GDAXBrokerageTests.cs"];
m0_29 [label="Exit QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnMarginCallWarning()", span="76-76", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnMarginCallWarning()", file="GDAXBrokerageTests.cs"];
m0_38 [label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId)))", span="80-80", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_229 [label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''1'')))", span="269-269", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_236 [label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''2'')))", span="274-274", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_117 [label="Assert.AreEqual(actualQuantity != orderQuantity ? Orders.OrderStatus.PartiallyFilled : Orders.OrderStatus.Filled, e.Status)", span="142-142", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_114 [label="Assert.AreEqual(''BTCUSD'', e.Symbol.Value)", span="138-138", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_119 [label="Assert.AreEqual(0.01m, Math.Round(actualFee, 8))", span="144-144", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_118 [label="Assert.AreEqual(5.23512m, actualQuantity)", span="143-143", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_147 [label="Assert.AreEqual(status, e.Status)", span="182-182", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_149 [label="Assert.AreEqual(''BTCUSD'', e.Symbol.Value)", span="185-185", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_150 [label="Assert.AreEqual(0.11, e.OrderFee)", span="186-186", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_19 [label="Entry QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.Order>)", span="61-61", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.Order>)", file="GDAXBrokerageTests.cs"];
m0_28 [label="MarketOrder(''SPY'', shares)", span="85-85", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnMarginCallWarning()", file="GDAXBrokerageTests.cs"];
m0_37 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_51 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_54 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_66 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_70 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_81 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_85 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_115 [label="actualFee += e.OrderFee", span="139-139", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_116 [label="actualQuantity += e.AbsoluteFillQuantity", span="140-140", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_151 [label="Assert.That((quantity > 0 && e.Direction == Orders.OrderDirection.Buy) || (quantity < 0 && e.Direction == Orders.OrderDirection.Sell))", span="187-187", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_153 [label="raised.Set()", span="190-190", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_158 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_228 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_235 [label="Entry lambda expression", span="274-274", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_244 [label="Entry lambda expression", span="288-288", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_246 [label="Exit lambda expression", span="288-288", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_21 [label="order.Quantity = (int)(Math.Sign(order.Quantity) * order.AbsoluteQuantity * 1.1m)", span="69-69", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.Order>)", file="GDAXBrokerageTests.cs"];
m0_24 [label="Entry QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnMarginCallWarning()", span="76-76", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnMarginCallWarning()", file="GDAXBrokerageTests.cs"];
m0_30 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="GDAXBrokerageTests.cs"];
m0_31 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="897-897", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="GDAXBrokerageTests.cs"];
m0_39 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_40 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_230 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_231 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_237 [label="Exit lambda expression", span="274-274", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_238 [label="Entry lambda expression", span="274-274", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_113 [label="Entry lambda expression", span="136-146", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_120 [label="raised.Set()", span="145-145", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_146 [label="Entry lambda expression", span="180-191", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_148 [label="orderId != null", span="183-183", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_53 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_52 [label="w.IsOpen", span="90-90", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_56 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_55 [label="w.IsOpen", span="92-92", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_68 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_67 [label="m.Connect()", span="99-99", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_72 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_71 [label="m.IsOpen", span="100-100", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_83 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_82 [label="m.Close()", span="109-109", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_87 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_86 [label="m.IsOpen", span="110-110", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_154 [label="Exit lambda expression", span="180-191", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_160 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_159 [label="c.Value.BrokerId.Where(b => b == _brokerId)", span="188-188", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_203 [label="Entry lambda expression", span="238-238", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_206 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_26 [label="var shares = (int)(-spyHoldings * .005m)", span="83-83", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnMarginCallWarning()", file="GDAXBrokerageTests.cs"];
m0_25 [label="var spyHoldings = Securities[''SPY''].Holdings.Quantity", span="82-82", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnMarginCallWarning()", file="GDAXBrokerageTests.cs"];
m0_33 [label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm", span="", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_32 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", span="163-163", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="GDAXBrokerageTests.cs"];
m0_42 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_41 [label="!r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId)", span="80-80", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_233 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_232 [label="!r.Resource.EndsWith(''1'')", span="269-269", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_240 [label="Exit lambda expression", span="274-274", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_239 [label="!r.Resource.EndsWith(''2'')", span="274-274", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_121 [label="Exit lambda expression", span="136-146", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_205 [label="Exit lambda expression", span="238-238", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_204 [label="a.Symbol == ''USD''", span="238-238", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_208 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_207 [label="a.Symbol == ''BTC''", span="239-239", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_163 [label="b == _brokerId", span="188-188", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_164 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m0_0 [label="Entry QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.Initialize()", span="32-32", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.Initialize()", file="GDAXBrokerageTests.cs"];
m0_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="548-548", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="GDAXBrokerageTests.cs"];
m0_1 [label="SetStartDate(2013, 10, 01)", span="34-34", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.Initialize()", file="GDAXBrokerageTests.cs"];
m0_2 [label="SetEndDate(2013, 12, 11)", span="35-35", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.Initialize()", file="GDAXBrokerageTests.cs"];
m0_3 [label="SetCash(100000)", span="36-36", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.Initialize()", file="GDAXBrokerageTests.cs"];
m0_4 [label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Second)", span="38-38", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.Initialize()", file="GDAXBrokerageTests.cs"];
m0_5 [label="Securities[''SPY''].SetLeverage(100)", span="41-41", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.Initialize()", file="GDAXBrokerageTests.cs"];
m0_6 [label="Exit QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.Initialize()", span="32-32", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.Initialize()", file="GDAXBrokerageTests.cs"];
m0_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="728-728", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="GDAXBrokerageTests.cs"];
m0_12 [label="Entry QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="48-48", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="GDAXBrokerageTests.cs"];
m0_107 [label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0", cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="GDAXBrokerageTests.cs"];
m0_64 [label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", span="100-100", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="GDAXBrokerageTests.cs"];
m0_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="GDAXBrokerageTests.cs"];
m0_227 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="110-110", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs"];
m0_177 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28", cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXBrokerageTests.cs"];
m0_241 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", span="286-286", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs"];
m0_242 [label="Assert.Throws<NotSupportedException>(() => _unit.UpdateOrder(new LimitOrder()))", span="288-288", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs"];
m0_243 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", span="286-286", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs"];
m0_108 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXBrokerageTests.cs"];
m0_266 [label="Entry Unk.Send", span="", cluster="Unk.Send", file="GDAXBrokerageTests.cs"];
m0_103 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="GDAXBrokerageTests.cs"];
m0_234 [label="Entry Unk.EndsWith", span="", cluster="Unk.EndsWith", file="GDAXBrokerageTests.cs"];
m0_123 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="GDAXBrokerageTests.cs"];
m0_260 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="GDAXBrokerageTests.cs"];
m0_65 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="GDAXBrokerageTests.cs"];
m0_189 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="216-216", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerageTests.cs"];
m0_247 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="100-100", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs"];
m0_34 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", span="78-78", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", file="GDAXBrokerageTests.cs"];
m0_35 [label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId)))).Returns(new RestSharp.RestResponse\r\n            {\r\n                Content = body,\r\n                StatusCode = httpStatus\r\n            })", span="80-84", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", file="GDAXBrokerageTests.cs"];
m0_36 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", span="78-78", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", file="GDAXBrokerageTests.cs"];
m0_145 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="48-48", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs"];
m0_104 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="GDAXBrokerageTests.cs"];
m0_183 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", span="219-219", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m0_184 [label="var actual = _unit.GetTick(_symbol)", span="221-221", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m0_185 [label="Assert.AreEqual(333.98m, actual.BidPrice)", span="222-222", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m0_186 [label="Assert.AreEqual(333.99m, actual.AskPrice)", span="223-223", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m0_187 [label="Assert.AreEqual(5957.11914015, actual.Quantity)", span="225-225", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m0_188 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", span="219-219", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m0_43 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", span="88-88", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m0_44 [label="_wss.Setup(w => w.IsOpen).Returns(true)", span="90-90", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m0_45 [label="Assert.IsTrue(_unit.IsConnected)", span="91-91", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m0_46 [label="_wss.Setup(w => w.IsOpen).Returns(false)", span="92-92", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m0_47 [label="Assert.IsFalse(_unit.IsConnected)", span="93-93", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m0_48 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", span="88-88", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m0_111 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="GDAXBrokerageTests.cs"];
m0_17 [label="Entry RestSharp.RestResponse.cstr", span="", cluster="RestSharp.RestResponse.cstr", file="GDAXBrokerageTests.cs"];
m0_133 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", span="170-170", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs"];
m0_135 [label="SetupResponse(JsonConvert.SerializeObject(response), httpStatus)", span="177-177", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs"];
m0_137 [label="_unit.OrderStatusChanged += (s, e) =>\r\n            {\r\n                Assert.AreEqual(status, e.Status);\r\n                if (orderId != null)\r\n                {\r\n                    Assert.AreEqual(''BTCUSD'', e.Symbol.Value);\r\n                    Assert.AreEqual(0.11, e.OrderFee);\r\n                    Assert.That((quantity > 0 && e.Direction == Orders.OrderDirection.Buy) || (quantity < 0 && e.Direction == Orders.OrderDirection.Sell));\r\n                    Assert.IsTrue(orderId == null || _unit.CachedOrderIDs.SelectMany(c => c.Value.BrokerId.Where(b => b == _brokerId)).Any());\r\n                }\r\n                raised.Set();\r\n            }", span="180-191", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs"];
m0_138 [label="bool actual = _unit.PlaceOrder(new Orders.LimitOrder(_symbol, quantity, price, DateTime.UtcNow))", span="192-192", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs"];
m0_134 [label="var response = new\r\n            {\r\n                id = _brokerId,\r\n                fill_fees = ''0.11''\r\n            }", span="172-176", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs"];
m0_136 [label="ManualResetEvent raised = new ManualResetEvent(false)", span="179-179", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs"];
m0_139 [label="Assert.IsTrue(actual || (orderId == null && !actual))", span="194-194", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs"];
m0_140 [label="Assert.IsTrue(raised.WaitOne(1000))", span="195-195", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs"];
m0_141 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", span="170-170", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs"];
m0_122 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)", file="GDAXBrokerageTests.cs"];
m0_155 [label="Entry Unk.That", span="", cluster="Unk.That", file="GDAXBrokerageTests.cs"];
m0_13 [label="!Portfolio.Invested", span="50-50", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="GDAXBrokerageTests.cs"];
m0_73 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", span="107-107", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m0_74 [label="_wss.Setup(m => m.Close()).Verifiable()", span="109-109", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m0_75 [label="_wss.Setup(m => m.IsOpen).Returns(true)", span="110-110", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m0_76 [label="_unit.Connect()", span="111-111", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m0_77 [label="_unit.Disconnect()", span="112-112", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m0_78 [label="_wss.Verify()", span="113-113", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m0_79 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", span="107-107", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m0_124 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", span="157-157", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m0_125 [label="var actual = _unit.GetAuthenticationToken('''', ''POST'', ''http://localhost'')", span="159-159", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m0_128 [label="Assert.AreEqual(''pass'', actual.Passphrase)", span="163-163", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m0_129 [label="Assert.AreEqual(''abc'', actual.Key)", span="164-164", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m0_126 [label="Assert.IsFalse(string.IsNullOrEmpty(actual.Signature))", span="161-161", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m0_127 [label="Assert.IsFalse(string.IsNullOrEmpty(actual.Timestamp))", span="162-162", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m0_130 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", span="157-157", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m0_181 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="GDAXBrokerageTests.cs"];
m0_261 [label="Entry Unk.Subscribe", span="", cluster="Unk.Subscribe", file="GDAXBrokerageTests.cs"];
m0_202 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="GDAXBrokerageTests.cs"];
m0_14 [label="Liquidate()", span="52-52", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="GDAXBrokerageTests.cs"];
m0_143 [label="Entry Unk.SetupResponse", span="", cluster="Unk.SetupResponse", file="GDAXBrokerageTests.cs"];
m0_109 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, MessageReceivedEventArgs)", span="73-73", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, MessageReceivedEventArgs)", file="GDAXBrokerageTests.cs"];
m0_142 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="GDAXBrokerageTests.cs"];
m0_182 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="GDAXBrokerageTests.cs"];
m0_27 [label="Entry Unk.StartsWith", span="", cluster="Unk.StartsWith", file="GDAXBrokerageTests.cs"];
m0_50 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="GDAXBrokerageTests.cs"];
m0_16 [label="Exit QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="48-48", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="GDAXBrokerageTests.cs"];
m0_15 [label="SetHoldings(''SPY'', 1)", span="53-53", cluster="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="GDAXBrokerageTests.cs"];
m0_105 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="GDAXBrokerageTests.cs"];
m0_84 [label="Entry Unk.Close", span="", cluster="Unk.Close", file="GDAXBrokerageTests.cs"];
m0_80 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="129-129", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerageTests.cs"];
m0_165 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", span="199-199", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_166 [label="SetupResponse(_openOrderData)", span="201-201", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_167 [label="_unit.CachedOrderIDs.TryAdd(1, new Orders.MarketOrder { BrokerId = new List<string> { ''1'' }, Price = 123 })", span="203-203", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_168 [label="var actual = _unit.GetOpenOrders()", span="205-205", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_169 [label="Assert.AreEqual(2, actual.Count())", span="207-207", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_170 [label="Assert.AreEqual(0.01, actual.First().Quantity)", span="208-208", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_171 [label="Assert.AreEqual(OrderDirection.Buy, actual.First().Direction)", span="209-209", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_172 [label="Assert.AreEqual(0.1, actual.First().Price)", span="210-210", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_173 [label="Assert.AreEqual(-1, actual.Last().Quantity)", span="212-212", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_174 [label="Assert.AreEqual(OrderDirection.Sell, actual.Last().Direction)", span="213-213", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_175 [label="Assert.AreEqual(1, actual.Last().Price)", span="214-214", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_176 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", span="199-199", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m0_262 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="GDAXBrokerageTests.cs"];
m0_132 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="GDAXBrokerageTests.cs"];
m0_270 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", span="312-312", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m0_271 [label="string json = _tickerData", span="314-314", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_272 [label="_unit.OnMessage(_unit, GDAXTestsHelpers.GetArgs(json))", span="316-316", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_273 [label="var actual = _unit.Ticks.First()", span="318-318", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_274 [label="Assert.AreEqual(''BTCUSD'', actual.Symbol.Value)", span="320-320", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_276 [label="Assert.AreEqual(4388m, actual.BidPrice)", span="322-322", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_277 [label="Assert.AreEqual(4388.01m, actual.AskPrice)", span="323-323", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_275 [label="Assert.AreEqual(4388.005m, _unit.Ticks.First().Price)", span="321-321", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs"];
m0_278 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", span="312-312", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m0_279 [label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", span="", file="GDAXBrokerageTests.cs"];
m0_285 [label=string, span="", file="GDAXBrokerageTests.cs"];
m0_282 [label=orderQuantity, span="", file="GDAXBrokerageTests.cs"];
m0_284 [label="QuantConnect.Orders.OrderStatus", span="", file="GDAXBrokerageTests.cs"];
m0_280 [label=actualFee, span="", file="GDAXBrokerageTests.cs"];
m0_281 [label=actualQuantity, span="", file="GDAXBrokerageTests.cs"];
m0_286 [label=decimal, span="", file="GDAXBrokerageTests.cs"];
m0_287 [label=raised, span="", file="GDAXBrokerageTests.cs"];
m0_283 [label=raised, span="", file="GDAXBrokerageTests.cs"];
m1_10 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="GDAXTestHelpers.cs"];
m1_5 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="19-19", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="GDAXTestHelpers.cs"];
m1_8 [label="return new SubscriptionDataConfig(typeof(TradeBar), Symbol.Create(''BTCUSD'', SecurityType.Forex, Market.GDAX), Resolution.Minute, TimeZones.Utc, TimeZones.Utc, \r\n                false, true, false);", span="21-22", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="GDAXTestHelpers.cs"];
m1_9 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="19-19", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="GDAXTestHelpers.cs"];
m1_20 [label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49", cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs"];
m1_21 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXTestHelpers.cs"];
m1_22 [label="BindingFlags flags = BindingFlags.NonPublic | BindingFlags.Instance", span="34-34", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", color=red, community=0, file="GDAXTestHelpers.cs"];
m1_24 [label="MessageReceivedEventArgs args = new MessageReceivedEventArgs(json)", span="36-36", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXTestHelpers.cs"];
m1_23 [label="System.Globalization.CultureInfo culture = null", span="35-35", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", color=red, community=0, file="GDAXTestHelpers.cs"];
m1_25 [label="return args;", span="38-38", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXTestHelpers.cs"];
m1_26 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXTestHelpers.cs"];
m1_4 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="GDAXTestHelpers.cs"];
m1_27 [label="Entry MessageReceivedEventArgs.cstr", span="", cluster="MessageReceivedEventArgs.cstr", file="GDAXTestHelpers.cs"];
m1_7 [label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70", cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="GDAXTestHelpers.cs"];
m1_12 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="25-25", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs"];
m1_13 [label="var order = new Orders.MarketOrder { BrokerId = new List<string> { brokerId }, Quantity = quantity, Id = id }", span="27-27", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs"];
m1_14 [label="unit.CachedOrderIDs.TryAdd(1, order)", span="28-28", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs"];
m1_15 [label="unit.FillSplit.TryAdd(id, new GDAXFill(order))", span="29-29", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs"];
m1_16 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="25-25", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs"];
m1_6 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="GDAXTestHelpers.cs"];
m1_0 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", span="13-13", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="GDAXTestHelpers.cs"];
m1_1 [label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.Utc), CreateConfig(), new Cash(CashBook.AccountCurrency, 1000, price), \r\n                new SymbolProperties(''BTCUSD'', CashBook.AccountCurrency, 1, 1, 0.01m));", span="15-16", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="GDAXTestHelpers.cs"];
m1_2 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", span="13-13", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="GDAXTestHelpers.cs"];
m1_3 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="GDAXTestHelpers.cs"];
m1_18 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="GDAXTestHelpers.cs"];
m1_19 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="GDAXTestHelpers.cs"];
m1_11 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="GDAXTestHelpers.cs"];
m1_17 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28", cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXTestHelpers.cs"];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_88 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_89 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_106  [key=2, style=dotted];
m0_98 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_98 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m0_98 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=actualQuantity];
m0_98 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_99 -> m0_108  [key=2, style=dotted];
m0_99 -> m0_109  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_101 -> m0_111  [key=2, style=dotted];
m0_101 -> m0_112  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_100 -> m0_111  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_110  [key=2, style=dotted];
m0_90 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=id];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=id];
m0_90 -> m0_145  [key=3, color=darkorchid, style=bold, label="Local variable string id"];
m0_92 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_92 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_103  [key=2, style=dotted];
m0_92 -> m0_104  [key=2, style=dotted];
m0_92 -> m0_105  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m0_93 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m0_95 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=raised];
m0_95 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=raised];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_107  [key=2, style=dotted];
m0_95 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=raised];
m0_96 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m0_96 -> m0_96  [key=3, color=darkorchid, style=bold, label="Local variable decimal actualFee"];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_96  [key=3, color=darkorchid, style=bold, label="Local variable decimal actualQuantity"];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_93  [key=0, style=solid];
m0_102 -> m0_88  [key=0, style=bold, color=blue];
m0_209 -> m0_210  [key=0, style=solid];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_34  [key=2, style=dotted];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_177  [key=2, style=dotted];
m0_211 -> m0_178  [key=2, style=dotted];
m0_211 -> m0_179  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_219  [key=2, style=dotted];
m0_212 -> m0_214  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_212 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_212 -> m0_216  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_212 -> m0_217  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_213 -> m0_181  [key=2, style=dotted];
m0_213 -> m0_111  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_214 -> m0_111  [key=2, style=dotted];
m0_214 -> m0_112  [key=2, style=dotted];
m0_214 -> m0_215  [key=0, style=solid];
m0_215 -> m0_111  [key=2, style=dotted];
m0_215 -> m0_112  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_216 -> m0_111  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_182  [key=2, style=dotted];
m0_217 -> m0_111  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_182  [key=2, style=dotted];
m0_218 -> m0_209  [key=0, style=bold, color=blue];
m0_57 -> m0_58  [key=0, style=solid];
m0_58 -> m0_16  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_63  [key=2, style=dotted];
m0_58 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_59 -> m0_16  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_18  [key=2, style=dotted];
m0_59 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_64  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_65  [key=2, style=dotted];
m0_62 -> m0_57  [key=0, style=bold, color=blue];
m0_248 -> m0_249  [key=0, style=solid, color=green];
m0_249 -> m0_249  [key=3, color=green, style=bold, label="Local variable string actual"];
m0_249 -> m0_250  [key=0, style=solid, color=green];
m0_249 -> m0_251  [key=3, color=green, style=bold, label="Local variable string actual"];
m0_250 -> m0_250  [key=3, color=green, style=bold, label="Local variable string expected"];
m0_250 -> m0_251  [key=0, style=solid, color=green];
m0_250 -> m0_254  [key=1, style=dashed, color=green, label=expected];
m0_251 -> m0_252  [key=0, style=solid, color=green];
m0_251 -> m0_16  [key=2, style=dotted, color=green];
m0_251 -> m0_22  [key=2, style=dotted, color=green];
m0_251 -> m0_263  [key=1, style=dashed, color=green, label="lambda expression"];
m0_251 -> m0_267  [key=1, style=dashed, color=green, label="lambda expression"];
m0_251 -> m0_254  [key=1, style=dashed, color=green, label=actual];
m0_254 -> m0_255  [key=0, style=solid, color=green];
m0_254 -> m0_262  [key=2, style=dotted, color=green];
m0_252 -> m0_253  [key=0, style=solid, color=green];
m0_252 -> m0_260  [key=2, style=dotted, color=green];
m0_253 -> m0_254  [key=0, style=solid, color=green];
m0_253 -> m0_22  [key=2, style=dotted, color=green];
m0_253 -> m0_15  [key=2, style=dotted, color=green];
m0_253 -> m0_261  [key=2, style=dotted, color=green];
m0_255 -> m0_256  [key=0, style=solid, color=green];
m0_255 -> m0_181  [key=2, style=dotted, color=green];
m0_255 -> m0_111  [key=2, style=dotted, color=green];
m0_256 -> m0_257  [key=0, style=solid, color=green];
m0_256 -> m0_112  [key=2, style=dotted, color=green];
m0_256 -> m0_111  [key=2, style=dotted, color=green];
m0_257 -> m0_258  [key=0, style=solid, color=green];
m0_257 -> m0_112  [key=2, style=dotted, color=green];
m0_257 -> m0_111  [key=2, style=dotted, color=green];
m0_258 -> m0_259  [key=0, style=solid, color=green];
m0_258 -> m0_112  [key=2, style=dotted, color=green];
m0_258 -> m0_111  [key=2, style=dotted, color=green];
m0_259 -> m0_248  [key=0, style=bold, color=blue];
m0_190 -> m0_191  [key=0, style=solid];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_34  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_201  [key=2, style=dotted];
m0_192 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_192 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_193 -> m0_181  [key=2, style=dotted];
m0_193 -> m0_111  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_196 -> m0_111  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_197 -> m0_111  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_198 -> m0_111  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_199 -> m0_111  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_194 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label=usd];
m0_194 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=usd];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_202  [key=2, style=dotted];
m0_194 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=btc];
m0_195 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=btc];
m0_195 -> m0_202  [key=2, style=dotted];
m0_195 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_200 -> m0_190  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_14  [key=2, style=dotted, color=green];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_15  [key=2, style=dotted];
m0_11 -> m0_14  [key=2, style=dotted];
m0_11 -> m0_16  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_17  [key=2, style=dotted];
m0_11 -> m0_18  [key=2, style=dotted];
m0_11 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label="System.Net.HttpStatusCode"];
m0_220 -> m0_224  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_221 -> m0_16  [key=2, style=dotted];
m0_221 -> m0_222  [key=0, style=solid];
m0_221 -> m0_17  [key=2, style=dotted];
m0_221 -> m0_18  [key=2, style=dotted];
m0_221 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_222 -> m0_16  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_17  [key=2, style=dotted];
m0_222 -> m0_18  [key=2, style=dotted];
m0_222 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_226  [key=2, style=dotted];
m0_223 -> m0_178  [key=2, style=dotted];
m0_223 -> m0_227  [key=2, style=dotted];
m0_224 -> m0_111  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_225 -> m0_220  [key=0, style=bold, color=blue];
m0_162 -> m0_163  [key=0, style=solid];
m0_263 -> m0_264  [key=0, style=solid, color=green];
m0_267 -> m0_268  [key=0, style=solid, color=green];
m0_264 -> m0_265  [key=0, style=solid, color=green];
m0_264 -> m0_22  [key=2, style=dotted, color=green];
m0_264 -> m0_266  [key=2, style=dotted, color=green];
m0_265 -> m0_263  [key=0, style=bold, color=blue];
m0_268 -> m0_269  [key=0, style=solid, color=green];
m0_269 -> m0_267  [key=0, style=bold, color=blue];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_156  [key=2, style=dotted];
m0_152 -> m0_157  [key=2, style=dotted];
m0_152 -> m0_49  [key=2, style=dotted];
m0_152 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_226  [key=2, style=dotted];
m0_245 -> m0_247  [key=2, style=dotted];
m0_20 -> m0_22  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_23  [key=2, style=dotted];
m0_20 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_29 -> m0_22  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_23  [key=2, style=dotted];
m0_29 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_29 -> m0_24  [key=0, style=bold, color=blue];
m0_38 -> m0_22  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_23  [key=2, style=dotted];
m0_38 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_229 -> m0_22  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_23  [key=2, style=dotted];
m0_229 -> m0_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_236 -> m0_22  [key=2, style=dotted];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_23  [key=2, style=dotted];
m0_236 -> m0_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_117 -> m0_111  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_114 -> m0_111  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_119 -> m0_111  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_122  [key=2, style=dotted];
m0_118 -> m0_111  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_147 -> m0_111  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_149 -> m0_111  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_150 -> m0_111  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_32  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_115 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m0_115 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m0_115 -> m0_116  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=actualQuantity];
m0_116 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=actualQuantity];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_155  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_123  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_228 -> m0_229  [key=0, style=solid];
m0_235 -> m0_236  [key=0, style=solid];
m0_244 -> m0_245  [key=0, style=solid];
m0_246 -> m0_244  [key=0, style=bold, color=blue];
m0_21 -> m0_19  [key=0, style=bold, color=blue];
m0_21 -> m0_20  [key=0, style=solid];
m0_21 -> m0_23  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_30 -> m0_28  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_39 -> m0_37  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid];
m0_230 -> m0_228  [key=0, style=bold, color=blue];
m0_231 -> m0_232  [key=0, style=solid];
m0_237 -> m0_235  [key=0, style=bold, color=blue];
m0_238 -> m0_239  [key=0, style=solid];
m0_113 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_113 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_123  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_146 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_146 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_153  [key=0, style=solid];
m0_53 -> m0_51  [key=0, style=bold, color=blue];
m0_52 -> m0_53  [key=0, style=solid];
m0_56 -> m0_54  [key=0, style=bold, color=blue];
m0_55 -> m0_56  [key=0, style=solid];
m0_68 -> m0_66  [key=0, style=bold, color=blue];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_69  [key=2, style=dotted];
m0_72 -> m0_70  [key=0, style=bold, color=blue];
m0_71 -> m0_72  [key=0, style=solid];
m0_83 -> m0_81  [key=0, style=bold, color=blue];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_84  [key=2, style=dotted];
m0_87 -> m0_85  [key=0, style=bold, color=blue];
m0_86 -> m0_87  [key=0, style=solid];
m0_154 -> m0_146  [key=0, style=bold, color=blue];
m0_160 -> m0_158  [key=0, style=bold, color=blue];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m0_159 -> m0_161  [key=2, style=dotted];
m0_159 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_203 -> m0_204  [key=0, style=solid];
m0_206 -> m0_207  [key=0, style=solid];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=shares];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=2, style=dotted];
m0_33 -> m0_31  [key=0, style=bold, color=blue];
m0_33 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm"];
m0_33 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm"];
m0_33 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm"];
m0_33 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm"];
m0_33 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm"];
m0_33 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm"];
m0_33 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm"];
m0_33 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm"];
m0_33 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm"];
m0_33 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm"];
m0_33 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarginCallEventsAlgorithm"];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_27  [key=2, style=dotted];
m0_42 -> m0_40  [key=0, style=bold, color=blue];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_27  [key=2, style=dotted];
m0_233 -> m0_231  [key=0, style=bold, color=blue];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_234  [key=2, style=dotted];
m0_240 -> m0_238  [key=0, style=bold, color=blue];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_234  [key=2, style=dotted];
m0_121 -> m0_113  [key=0, style=bold, color=blue];
m0_205 -> m0_203  [key=0, style=bold, color=blue];
m0_204 -> m0_205  [key=0, style=solid];
m0_208 -> m0_206  [key=0, style=bold, color=blue];
m0_207 -> m0_208  [key=0, style=solid];
m0_163 -> m0_164  [key=0, style=solid];
m0_164 -> m0_162  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_7 -> m0_14  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_13  [key=2, style=dotted];
m0_1 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_14  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_14  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_9  [key=2, style=dotted];
m0_4 -> m0_14  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_10  [key=2, style=dotted];
m0_5 -> m0_14  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m0_10 -> m0_14  [key=2, style=dotted];
m0_10 -> m0_16  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_17  [key=2, style=dotted];
m0_10 -> m0_18  [key=2, style=dotted];
m0_10 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_12 -> m0_0  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_22 -> m0_19  [key=0, style=bold, color=blue];
m0_241 -> m0_242  [key=0, style=solid];
m0_242 -> m0_22  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_243 -> m0_241  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_226  [key=3, color=darkorchid, style=bold, label="Parameter variable string body"];
m0_35 -> m0_16  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_17  [key=2, style=dotted];
m0_35 -> m0_18  [key=2, style=dotted];
m0_35 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_36 -> m0_34  [key=0, style=bold, color=blue];
m0_145 -> m0_145  [key=3, color=darkorchid, style=bold, label="Field variable string _matchBrokerId"];
m0_183 -> m0_184  [key=0, style=solid];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_189  [key=2, style=dotted];
m0_184 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_184 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_185 -> m0_111  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_186 -> m0_111  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_187 -> m0_111  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_188 -> m0_183  [key=0, style=bold, color=blue];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_16  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_18  [key=2, style=dotted];
m0_44 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_49  [key=2, style=dotted];
m0_46 -> m0_16  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_18  [key=2, style=dotted];
m0_46 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_50  [key=2, style=dotted];
m0_48 -> m0_43  [key=0, style=bold, color=blue];
m0_133 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label="System.Net.HttpStatusCode"];
m0_133 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_133 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_133 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_133 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderStatus"];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_133 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_133 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_142  [key=2, style=dotted];
m0_135 -> m0_143  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_137 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_137 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_137 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_144  [key=2, style=dotted];
m0_138 -> m0_145  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_107  [key=2, style=dotted];
m0_136 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=raised];
m0_136 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=raised];
m0_139 -> m0_49  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_140 -> m0_49  [key=2, style=dotted];
m0_140 -> m0_110  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_141 -> m0_133  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_16  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_16  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_63  [key=2, style=dotted];
m0_74 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_75 -> m0_16  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_18  [key=2, style=dotted];
m0_75 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_64  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_80  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_65  [key=2, style=dotted];
m0_79 -> m0_73  [key=0, style=bold, color=blue];
m0_124 -> m0_125  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_131  [key=2, style=dotted];
m0_125 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_125 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_125 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_128 -> m0_111  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_129 -> m0_111  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_126 -> m0_50  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_132  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_50  [key=2, style=dotted];
m0_127 -> m0_132  [key=2, style=dotted];
m0_130 -> m0_124  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_17  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_30  [key=2, style=dotted];
m0_27 -> m0_31  [key=2, style=dotted];
m0_16 -> m0_12  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_18  [key=2, style=dotted];
m0_80 -> m0_80  [key=3, color=darkorchid, style=bold, label="Local variable decimal orderQuantity"];
m0_165 -> m0_166  [key=0, style=solid];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_34  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_177  [key=2, style=dotted];
m0_167 -> m0_178  [key=2, style=dotted];
m0_167 -> m0_179  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_180  [key=2, style=dotted];
m0_168 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_168 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_168 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_168 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_168 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_168 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_169 -> m0_181  [key=2, style=dotted];
m0_169 -> m0_111  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_170 -> m0_111  [key=2, style=dotted];
m0_170 -> m0_112  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_171 -> m0_111  [key=2, style=dotted];
m0_171 -> m0_112  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_172 -> m0_111  [key=2, style=dotted];
m0_172 -> m0_112  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_173 -> m0_111  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_182  [key=2, style=dotted];
m0_174 -> m0_111  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_182  [key=2, style=dotted];
m0_175 -> m0_111  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_182  [key=2, style=dotted];
m0_176 -> m0_165  [key=0, style=bold, color=blue];
m0_270 -> m0_271  [key=0, style=solid, color=green];
m0_271 -> m0_272  [key=0, style=solid, color=green];
m0_271 -> m0_15  [key=3, color=green, style=bold, label="Local variable string json"];
m0_272 -> m0_273  [key=0, style=solid, color=green];
m0_272 -> m0_108  [key=2, style=dotted, color=green];
m0_272 -> m0_109  [key=2, style=dotted, color=green];
m0_273 -> m0_274  [key=0, style=solid, color=green];
m0_273 -> m0_112  [key=2, style=dotted, color=green];
m0_273 -> m0_276  [key=1, style=dashed, color=green, label=actual];
m0_273 -> m0_277  [key=1, style=dashed, color=green, label=actual];
m0_274 -> m0_275  [key=0, style=solid, color=green];
m0_274 -> m0_111  [key=2, style=dotted, color=green];
m0_276 -> m0_277  [key=0, style=solid, color=green];
m0_276 -> m0_111  [key=2, style=dotted, color=green];
m0_277 -> m0_278  [key=0, style=solid, color=green];
m0_277 -> m0_111  [key=2, style=dotted, color=green];
m0_275 -> m0_276  [key=0, style=solid, color=green];
m0_275 -> m0_112  [key=2, style=dotted, color=green];
m0_275 -> m0_111  [key=2, style=dotted, color=green];
m0_278 -> m0_270  [key=0, style=bold, color=blue];
m0_279 -> m0_8  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_251  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_252  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_253  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_255  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_256  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_257  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_258  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_271  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_272  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_273  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_275  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_210  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_279 -> m0_245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m0_285 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_285 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_282 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m0_284 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderStatus"];
m0_280 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m0_281 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=actualQuantity];
m0_286 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_287 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=raised];
m0_283 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=raised];
m1_5 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [key=2, style=dotted];
m1_8 -> m1_11  [key=2, style=dotted];
m1_9 -> m1_5  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid, color=red];
m1_21 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_22 -> m1_23  [key=0, style=solid, color=red];
m1_22 -> m1_22  [key=3, color=red, style=bold, label="Local variable System.Reflection.BindingFlags flags"];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_27  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid, color=red];
m1_23 -> m1_23  [key=3, color=red, style=bold, label="Local variable System.Globalization.CultureInfo culture"];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_21  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m1_12 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_17  [key=2, style=dotted];
m1_13 -> m1_18  [key=2, style=dotted];
m1_13 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_19  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_19  [key=2, style=dotted];
m1_16 -> m1_12  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
}
