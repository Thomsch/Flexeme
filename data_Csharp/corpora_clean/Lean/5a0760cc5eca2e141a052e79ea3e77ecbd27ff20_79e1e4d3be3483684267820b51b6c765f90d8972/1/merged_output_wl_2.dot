digraph  {
m0_2 [cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", file="MarketTodayPacket.cs", label="Entry QuantConnect.Packets.MarketHours.MarketHours(double, double)", span="110-110"];
m0_3 [cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", color=green, community=0, file="MarketTodayPacket.cs", label="0: Start = DateTime.Now.Date.AddHours(defaultStart)", span="112-112"];
m0_4 [cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", color=green, community=0, file="MarketTodayPacket.cs", label="0: End = DateTime.Now.Date.AddHours(defaultEnd)", span="113-113"];
m0_5 [cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", file="MarketTodayPacket.cs", label="Exit QuantConnect.Packets.MarketHours.MarketHours(double, double)", span="110-110"];
m0_6 [cluster="System.TimeSpan.FromHours(double)", file="MarketTodayPacket.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m0_0 [cluster="QuantConnect.Packets.MarketToday.MarketToday()", file="MarketTodayPacket.cs", label="Entry QuantConnect.Packets.MarketToday.MarketToday()", span="84-84"];
m0_1 [cluster="QuantConnect.Packets.MarketToday.MarketToday()", file="MarketTodayPacket.cs", label="Exit QuantConnect.Packets.MarketToday.MarketToday()", span="84-84"];
m0_7 [file="MarketTodayPacket.cs", label="QuantConnect.Packets.MarketHours", span=""];
m1_15 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="72-72"];
m1_16 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="QCAlgorithm.cs", label="var cash = new Cash(symbol, quantity, conversionRate)", span="74-74"];
m1_17 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="QCAlgorithm.cs", label="_storage.Add(symbol, cash)", span="75-75"];
m1_18 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="72-72"];
m1_48 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_60 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m1_23 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", span="98-98"];
m1_44 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_24 [cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="103-103"];
m1_25 [cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs", label="_storage.Add(item.Key, item.Value)", span="105-105"];
m1_26 [cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="103-103"];
m1_37 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m1_64 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="QCAlgorithm.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m1_45 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="133-133"];
m1_46 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.cs", label="return _storage.TryGetValue(key, out value);", span="135-135"];
m1_47 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="133-133"];
m1_34 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.Remove(string)", span="118-118"];
m1_35 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="QCAlgorithm.cs", label="return _storage.Remove(key);", span="120-120"];
m1_36 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.Remove(string)", span="118-118"];
m1_27 [cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", span="108-108"];
m1_28 [cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="QCAlgorithm.cs", label="_storage.Add(key, value)", span="110-110"];
m1_29 [cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", span="108-108"];
m1_0 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="41-41"];
m1_1 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.ValueInBaseCurrency", span="41-41"];
m1_2 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="41-41"];
m1_10 [cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="57-57"];
m1_11 [cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.cs", label="_storage.Values", span="59-59"];
m1_12 [cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.cs", label="cash.Update(data)", span="61-61"];
m1_13 [cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="57-57"];
m1_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_3 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="47-47"];
m1_4 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="QCAlgorithm.cs", label="_storage = new Dictionary<string, Cash>()", span="49-49"];
m1_5 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="QCAlgorithm.cs", label="_storage.Add(BaseCurrency, new Cash(BaseCurrency, 0, 1.0m))", span="50-50"];
m1_6 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.CashBook()", span="47-47"];
m1_14 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="71-71"];
m1_61 [cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", span="177-177"];
m1_62 [cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="QCAlgorithm.cs", label="return ((IEnumerable) _storage).GetEnumerator();", span="179-179"];
m1_63 [cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", span="177-177"];
m1_56 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m1_30 [cluster="QuantConnect.Securities.CashBook.Clear()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.Clear()", span="113-113"];
m1_31 [cluster="QuantConnect.Securities.CashBook.Clear()", file="QCAlgorithm.cs", label="_storage.Clear()", span="115-115"];
m1_32 [cluster="QuantConnect.Securities.CashBook.Clear()", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.Clear()", span="113-113"];
m1_41 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.ContainsKey(string)", span="128-128"];
m1_42 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="QCAlgorithm.cs", label="return _storage.ContainsKey(key);", span="130-130"];
m1_43 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.ContainsKey(string)", span="128-128"];
m1_19 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", span="83-83"];
m1_20 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs", label="_storage.Values", span="85-85"];
m1_21 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs", label="cash.EnsureCurrencyDataFeed(subscriptions, securities)", span="87-87"];
m1_22 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", span="83-83"];
m1_33 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m1_7 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_8 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="60-60"];
m1_52 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m1_57 [cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.GetEnumerator()", span="172-172"];
m1_58 [cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="QCAlgorithm.cs", label="return _storage.GetEnumerator();", span="174-174"];
m1_59 [cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.GetEnumerator()", span="172-172"];
m1_53 [cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", span="143-143"];
m1_54 [cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="QCAlgorithm.cs", label="((IDictionary<string, Cash>) _storage).CopyTo(array, arrayIndex)", span="145-145"];
m1_55 [cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", span="143-143"];
m1_49 [cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="138-138"];
m1_50 [cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs", label="return _storage.Contains(item);", span="140-140"];
m1_51 [cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="138-138"];
m1_38 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="123-123"];
m1_39 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs", label="return _storage.Remove(item.Key);", span="125-125"];
m1_40 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="123-123"];
m1_65 [file="QCAlgorithm.cs", label="QuantConnect.Securities.CashBook", span=""];
m2_123 [cluster="System.Math.Abs(decimal)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m2_41 [cluster="QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", span="38-38"];
m2_64 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m2_90 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303"];
m2_91 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="order.Quantity == 0", span="306-306"];
m2_93 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="var security = _securities[order.Symbol]", span="308-308"];
m2_94 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="var ticket = GetOrderTicket(order.Id)", span="310-310"];
m2_96 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Log.Error(''SecurityTransactionManager.GetSufficientCapitalForOrder(): Null order ticket for id: '' + order.Id)", span="313-313"];
m2_98 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="order.Type == OrderType.OptionExercise", span="317-317"];
m2_102 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="var quantity = option.GetExerciseQuantity(order.Quantity)", span="325-325"];
m2_103 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="var newOrder = new LimitOrder\r\n                    {\r\n                        Id = order.Id,\r\n                        Time = order.Time,\r\n                        LimitPrice = option.StrikePrice,\r\n                        Symbol = underlying.Symbol,\r\n                        Quantity = option.Symbol.ID.OptionRight == OptionRight.Call ? quantity : -quantity\r\n                    }", span="327-334"];
m2_104 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="return GetSufficientCapitalForOrder(portfolio, newOrder);", span="337-337"];
m2_106 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="security.Holdings.Quantity * order.Quantity < 0 && Math.Abs(security.Holdings.Quantity) >= Math.Abs(order.Quantity)", span="344-344"];
m2_108 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="var freeMargin = security.MarginModel.GetMarginRemaining(portfolio, security, order.Direction)", span="346-346"];
m2_109 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="var initialMarginRequiredForOrder = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="347-347"];
m2_110 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="var percentUnfilled = (Math.Abs(order.Quantity) - Math.Abs(ticket.QuantityFilled))/Math.Abs(order.Quantity)", span="350-350"];
m2_113 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Log.Error(string.Format(''SecurityTransactionManager.GetSufficientCapitalForOrder(): Id: {0}, Initial Margin: {1}, Free Margin: {2}'', order.Id, initialMarginRequiredForOrder, freeMargin))", span="355-355"];
m2_92 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="return true;", span="306-306"];
m2_99 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="var option = (Option.Option)security", span="320-320"];
m2_95 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="ticket == null", span="311-311"];
m2_97 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="return false;", span="314-314"];
m2_100 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="var underlying = option.Underlying", span="321-321"];
m2_101 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="option.IsAutoExercised(underlying.Close)", span="323-323"];
m2_105 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="return true;", span="340-340"];
m2_107 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="return true;", span="344-344"];
m2_112 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Math.Abs(initialMarginRequiredForRemainderOfOrder) > freeMargin", span="353-353"];
m2_111 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="var initialMarginRequiredForRemainderOfOrder = percentUnfilled*initialMarginRequiredForOrder", span="351-351"];
m2_115 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="return true;", span="358-358"];
m2_114 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="return false;", span="356-356"];
m2_116 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303"];
m2_73 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254"];
m2_74 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="return _orderProcessor.GetOrders(x => x.Symbol == symbol && x.Status.IsOpen()).ToList();", span="256-256"];
m2_75 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254"];
m2_33 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="258-258"];
m2_52 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="222-222"];
m2_53 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="var orderTicket = GetOrderTicket(orderId)", span="224-224"];
m2_55 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="Log.Error(''SecurityTransactionManager.WaitForOrder(): Unable to locate ticket for order: '' + orderId)", span="227-227"];
m2_54 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="orderTicket == null", span="225-225"];
m2_57 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="!orderTicket.OrderClosed.WaitOne(_marketOrderFillTimeout)", span="231-231"];
m2_56 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="return false;", span="228-228"];
m2_58 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="Log.Error(''SecurityTransactionManager.WaitForOrder(): Order did not fill within {0} seconds.'', _marketOrderFillTimeout.TotalSeconds)", span="233-233"];
m2_60 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="return true;", span="237-237"];
m2_59 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="return false;", span="234-234"];
m2_61 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="222-222"];
m2_12 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="107-107"];
m2_79 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272"];
m2_80 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="QCAlgorithm.Trading.cs", label="return _orderProcessor.GetOrderById(orderId);", span="274-274"];
m2_81 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272"];
m2_31 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_119 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m2_32 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="200-200"];
m2_42 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.Trading.cs", label="return _orderProcessor.GetOrderTickets(filter ?? (x => true));", span="202-202"];
m2_43 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="200-200"];
m2_86 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", span="43-43"];
m2_51 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTicket(int)", span="57-57"];
m2_76 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="256-256"];
m2_36 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Symbol == symbol && x.Status.IsOpen()", span="177-177"];
m2_35 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="177-177"];
m2_37 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="177-177"];
m2_45 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="202-202"];
m2_46 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label=true, span="202-202"];
m2_47 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="202-202"];
m2_70 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="246-246"];
m2_71 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Status.IsOpen()", span="246-246"];
m2_72 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="246-246"];
m2_77 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Symbol == symbol && x.Status.IsOpen()", span="256-256"];
m2_78 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="256-256"];
m2_62 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m2_122 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m2_11 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="365-365"];
m2_125 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="QCAlgorithm.Trading.cs", label="return Interlocked.Increment(ref _orderId);", span="367-367"];
m2_126 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="365-365"];
m2_68 [cluster="QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="65-65"];
m2_117 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", span="195-195"];
m2_13 [cluster="QuantConnect.Securities.IOrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.IOrderProcessor.Process(QuantConnect.Orders.OrderRequest)", span="29-29"];
m2_128 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374"];
m2_129 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="QCAlgorithm.Trading.cs", label="_orderProcessor = orderProvider", span="376-376"];
m2_130 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374"];
m2_63 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="QCAlgorithm.Trading.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m2_65 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="244-244"];
m2_66 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="QCAlgorithm.Trading.cs", label="return _orderProcessor.GetOrders(x => x.Status.IsOpen()).ToList();", span="246-246"];
m2_67 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="244-244"];
m2_69 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m2_23 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", span="190-190"];
m2_39 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", file="QCAlgorithm.Trading.cs", label="return ProcessRequest(new CancelOrderRequest(_securities.UtcTime, orderId, tag ?? string.Empty));", span="192-192"];
m2_40 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", span="190-190"];
m2_87 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292"];
m2_88 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.Trading.cs", label="return _orderProcessor.GetOrders(filter);", span="294-294"];
m2_89 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292"];
m2_83 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", span="282-282"];
m2_84 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", file="QCAlgorithm.Trading.cs", label="return _orderProcessor.GetOrderByBrokerageId(brokerageId);", span="284-284"];
m2_85 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", span="282-282"];
m2_121 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63"];
m2_14 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144"];
m2_15 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return ProcessRequest(request);", span="146-146"];
m2_16 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144"];
m2_4 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_5 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129"];
m2_6 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="var submit = request as SubmitOrderRequest", span="131-131"];
m2_9 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="return _orderProcessor.Process(request);", span="136-136"];
m2_7 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="submit != null", span="132-132"];
m2_8 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="submit.SetOrderId(GetIncrementOrderId())", span="134-134"];
m2_10 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129"];
m2_127 [cluster="System.Threading.Interlocked.Increment(ref int)", file="QCAlgorithm.Trading.cs", label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0"];
m2_131 [cluster="QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", span="382-382"];
m2_132 [cluster="QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="return order.Status == OrderStatus.Filled || order.Status == OrderStatus.PartiallyFilled || order.Status == OrderStatus.Invalid || order.Status == OrderStatus.Canceled;", span="384-384"];
m2_133 [cluster="QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", span="382-382"];
m2_124 [cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m2_20 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164"];
m2_21 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="QCAlgorithm.Trading.cs", label="return RemoveOrder(orderId, orderTag);", span="166-166"];
m2_22 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164"];
m2_34 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_0 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m2_1 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.Trading.cs", label="_securities = security", span="52-52"];
m2_2 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.Trading.cs", label="_transactionRecord = new Dictionary<DateTime, decimal>()", span="55-55"];
m2_3 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m2_17 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="154-154"];
m2_18 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="QCAlgorithm.Trading.cs", label="return ProcessRequest(request);", span="156-156"];
m2_19 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="154-154"];
m2_38 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m2_24 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m2_25 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="var cancelledOrders = new List<OrderTicket>()", span="176-176"];
m2_26 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="GetOrderTickets(x => x.Symbol == symbol && x.Status.IsOpen())", span="177-177"];
m2_28 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="cancelledOrders.Add(ticket)", span="180-180"];
m2_29 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="return cancelledOrders;", span="182-182"];
m2_27 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="ticket.Cancel()", span="179-179"];
m2_30 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m2_82 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderById(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderById(int)", span="36-36"];
m2_48 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="210-210"];
m2_49 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs", label="return _orderProcessor.GetOrderTicket(orderId);", span="212-212"];
m2_50 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="210-210"];
m2_44 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
m2_118 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(int)", span="187-187"];
m2_120 [cluster="System.Math.Abs(int)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m2_134 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Securities.SecurityTransactionManager", span=""];
m2_135 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Symbol", span=""];
m2_136 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Symbol", span=""];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_4  [color=green, key=1, label=double, style=dashed];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_6  [color=green, key=2, style=dotted];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_6  [color=green, key=2, style=dotted];
m0_5 -> m0_2  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_7 -> m0_3  [color=green, key=1, label="QuantConnect.Packets.MarketHours", style=dashed];
m0_7 -> m0_4  [color=green, key=1, label="QuantConnect.Packets.MarketHours", style=dashed];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_8  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_9  [key=2, style=dotted];
m1_18 -> m1_15  [color=blue, key=0, style=bold];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_9  [key=2, style=dotted];
m1_25 -> m1_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>", style=dashed];
m1_26 -> m1_24  [color=blue, key=0, style=bold];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=2, style=dotted];
m1_47 -> m1_45  [color=blue, key=0, style=bold];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=2, style=dotted];
m1_36 -> m1_34  [color=blue, key=0, style=bold];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_9  [key=2, style=dotted];
m1_29 -> m1_27  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>", style=dashed];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_12 -> m1_11  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_13 -> m1_10  [color=blue, key=0, style=bold];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_7  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [key=2, style=dotted];
m1_5 -> m1_9  [key=2, style=dotted];
m1_6 -> m1_3  [color=blue, key=0, style=bold];
m1_61 -> m1_62  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_64  [key=2, style=dotted];
m1_63 -> m1_61  [color=blue, key=0, style=bold];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=2, style=dotted];
m1_32 -> m1_30  [color=blue, key=0, style=bold];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_44  [key=2, style=dotted];
m1_43 -> m1_41  [color=blue, key=0, style=bold];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=0, style=solid];
m1_21 -> m1_20  [key=0, style=solid];
m1_21 -> m1_23  [key=2, style=dotted];
m1_22 -> m1_19  [color=blue, key=0, style=bold];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [key=2, style=dotted];
m1_59 -> m1_57  [color=blue, key=0, style=bold];
m1_53 -> m1_54  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_56  [key=2, style=dotted];
m1_55 -> m1_53  [color=blue, key=0, style=bold];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [key=2, style=dotted];
m1_51 -> m1_49  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_37  [key=2, style=dotted];
m1_39 -> m1_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>", style=dashed];
m1_40 -> m1_38  [color=blue, key=0, style=bold];
m1_65 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_39  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_46  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_50  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m1_65 -> m1_62  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_93  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_90 -> m2_94  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_90 -> m2_96  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_90 -> m2_98  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_90 -> m2_102  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_90 -> m2_103  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_90 -> m2_104  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_90 -> m2_106  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_90 -> m2_108  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_90 -> m2_109  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_90 -> m2_110  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_90 -> m2_113  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_99  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_93 -> m2_106  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_93 -> m2_108  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_93 -> m2_109  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_48  [key=2, style=dotted];
m2_94 -> m2_110  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_62  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_106  [key=0, style=solid];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_118  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_119  [key=2, style=dotted];
m2_104 -> m2_116  [key=0, style=solid];
m2_104 -> m2_90  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=0, style=solid];
m2_106 -> m2_120  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_121  [key=2, style=dotted];
m2_108 -> m2_112  [color=darkseagreen4, key=1, label=freeMargin, style=dashed];
m2_108 -> m2_113  [color=darkseagreen4, key=1, label=freeMargin, style=dashed];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_122  [key=2, style=dotted];
m2_109 -> m2_111  [color=darkseagreen4, key=1, label=initialMarginRequiredForOrder, style=dashed];
m2_109 -> m2_113  [color=darkseagreen4, key=1, label=initialMarginRequiredForOrder, style=dashed];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_120  [key=2, style=dotted];
m2_110 -> m2_123  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_124  [key=2, style=dotted];
m2_113 -> m2_62  [key=2, style=dotted];
m2_92 -> m2_116  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_101  [color=darkseagreen4, key=1, label=option, style=dashed];
m2_99 -> m2_102  [color=darkseagreen4, key=1, label=option, style=dashed];
m2_99 -> m2_103  [color=darkseagreen4, key=1, label=option, style=dashed];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_98  [key=0, style=solid];
m2_97 -> m2_116  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_103  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_105  [key=0, style=solid];
m2_101 -> m2_117  [key=2, style=dotted];
m2_105 -> m2_116  [key=0, style=solid];
m2_107 -> m2_116  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_115  [key=0, style=solid];
m2_112 -> m2_123  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_114 -> m2_116  [key=0, style=solid];
m2_116 -> m2_90  [color=blue, key=0, style=bold];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_77  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_68  [key=2, style=dotted];
m2_74 -> m2_69  [key=2, style=dotted];
m2_74 -> m2_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_75 -> m2_73  [color=blue, key=0, style=bold];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_48  [key=2, style=dotted];
m2_53 -> m2_57  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_62  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_57  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_60  [key=0, style=solid];
m2_57 -> m2_63  [key=2, style=dotted];
m2_56 -> m2_61  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_64  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_59 -> m2_61  [key=0, style=solid];
m2_61 -> m2_52  [color=blue, key=0, style=bold];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_82  [key=2, style=dotted];
m2_81 -> m2_79  [color=blue, key=0, style=bold];
m2_32 -> m2_42  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=2, style=dotted];
m2_43 -> m2_32  [color=blue, key=0, style=bold];
m2_76 -> m2_77  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_37 -> m2_35  [color=blue, key=0, style=bold];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_45  [color=blue, key=0, style=bold];
m2_70 -> m2_71  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_38  [key=2, style=dotted];
m2_72 -> m2_70  [color=blue, key=0, style=bold];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_38  [key=2, style=dotted];
m2_78 -> m2_76  [color=blue, key=0, style=bold];
m2_11 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_127  [key=2, style=dotted];
m2_126 -> m2_11  [color=blue, key=0, style=bold];
m2_128 -> m2_129  [key=0, style=solid];
m2_129 -> m2_130  [key=0, style=solid];
m2_130 -> m2_128  [color=blue, key=0, style=bold];
m2_65 -> m2_66  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_68  [key=2, style=dotted];
m2_66 -> m2_69  [key=2, style=dotted];
m2_66 -> m2_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_67 -> m2_65  [color=blue, key=0, style=bold];
m2_23 -> m2_39  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_39 -> m2_5  [key=2, style=dotted];
m2_40 -> m2_23  [color=blue, key=0, style=bold];
m2_87 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_68  [key=2, style=dotted];
m2_89 -> m2_87  [color=blue, key=0, style=bold];
m2_83 -> m2_84  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=2, style=dotted];
m2_85 -> m2_83  [color=blue, key=0, style=bold];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_5  [key=2, style=dotted];
m2_16 -> m2_14  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [color=darkseagreen4, key=1, label=submit, style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_13  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_11  [key=2, style=dotted];
m2_8 -> m2_12  [key=2, style=dotted];
m2_10 -> m2_5  [color=blue, key=0, style=bold];
m2_131 -> m2_132  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_133 -> m2_131  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_22 -> m2_20  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_4  [key=2, style=dotted];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_5  [key=2, style=dotted];
m2_19 -> m2_17  [color=blue, key=0, style=bold];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_24 -> m2_36  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_31  [key=2, style=dotted];
m2_25 -> m2_28  [color=darkseagreen4, key=1, label=cancelledOrders, style=dashed];
m2_25 -> m2_29  [color=darkseagreen4, key=1, label=cancelledOrders, style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=0, style=solid];
m2_26 -> m2_32  [key=2, style=dotted];
m2_26 -> m2_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_26 -> m2_28  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_28 -> m2_26  [key=0, style=solid];
m2_28 -> m2_34  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_33  [key=2, style=dotted];
m2_30 -> m2_24  [color=blue, key=0, style=bold];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_51  [key=2, style=dotted];
m2_50 -> m2_48  [color=blue, key=0, style=bold];
m2_134 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_39  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_53  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_57  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_66  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_74  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_84  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_88  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_93  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_94  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_104  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_125  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_134 -> m2_129  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m2_135 -> m2_36  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_136 -> m2_77  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
}
