digraph  {
m0_2 [label="Entry QuantConnect.Packets.MarketHours.MarketHours(double, double)", span="110-110", cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", file="MarketTodayPacket.cs"];
m0_3 [label="Start = DateTime.Now.Date.AddHours(defaultStart)", span="112-112", cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", color=green, community=0, file="MarketTodayPacket.cs"];
m0_4 [label="End = DateTime.Now.Date.AddHours(defaultEnd)", span="113-113", cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", color=green, community=0, file="MarketTodayPacket.cs"];
m0_5 [label="Exit QuantConnect.Packets.MarketHours.MarketHours(double, double)", span="110-110", cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", file="MarketTodayPacket.cs"];
m0_6 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="MarketTodayPacket.cs"];
m0_0 [label="Entry QuantConnect.Packets.MarketToday.MarketToday()", span="84-84", cluster="QuantConnect.Packets.MarketToday.MarketToday()", file="MarketTodayPacket.cs"];
m0_1 [label="Exit QuantConnect.Packets.MarketToday.MarketToday()", span="84-84", cluster="QuantConnect.Packets.MarketToday.MarketToday()", file="MarketTodayPacket.cs"];
m0_7 [label="QuantConnect.Packets.MarketHours", span="", file="MarketTodayPacket.cs"];
m1_15 [label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="72-72", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="QCAlgorithm.cs"];
m1_16 [label="var cash = new Cash(symbol, quantity, conversionRate)", span="74-74", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="QCAlgorithm.cs"];
m1_17 [label="_storage.Add(symbol, cash)", span="75-75", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="QCAlgorithm.cs"];
m1_18 [label="Exit QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="72-72", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="QCAlgorithm.cs"];
m1_48 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.cs"];
m1_60 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="QCAlgorithm.cs"];
m1_23 [label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", span="98-98", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs"];
m1_44 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.cs"];
m1_24 [label="Entry QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="103-103", cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs"];
m1_25 [label="_storage.Add(item.Key, item.Value)", span="105-105", cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs"];
m1_26 [label="Exit QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="103-103", cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs"];
m1_37 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="QCAlgorithm.cs"];
m1_64 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="QCAlgorithm.cs"];
m1_45 [label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="133-133", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.cs"];
m1_46 [label="return _storage.TryGetValue(key, out value);", span="135-135", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.cs"];
m1_47 [label="Exit QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="133-133", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.cs"];
m1_34 [label="Entry QuantConnect.Securities.CashBook.Remove(string)", span="118-118", cluster="QuantConnect.Securities.CashBook.Remove(string)", file="QCAlgorithm.cs"];
m1_35 [label="return _storage.Remove(key);", span="120-120", cluster="QuantConnect.Securities.CashBook.Remove(string)", file="QCAlgorithm.cs"];
m1_36 [label="Exit QuantConnect.Securities.CashBook.Remove(string)", span="118-118", cluster="QuantConnect.Securities.CashBook.Remove(string)", file="QCAlgorithm.cs"];
m1_27 [label="Entry QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", span="108-108", cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="QCAlgorithm.cs"];
m1_28 [label="_storage.Add(key, value)", span="110-110", cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="QCAlgorithm.cs"];
m1_29 [label="Exit QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", span="108-108", cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="QCAlgorithm.cs"];
m1_0 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="QCAlgorithm.cs"];
m1_1 [label="x.ValueInBaseCurrency", span="41-41", cluster="lambda expression", file="QCAlgorithm.cs"];
m1_2 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="QCAlgorithm.cs"];
m1_10 [label="Entry QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="57-57", cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.cs"];
m1_11 [label="_storage.Values", span="59-59", cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.cs"];
m1_12 [label="cash.Update(data)", span="61-61", cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.cs"];
m1_13 [label="Exit QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="57-57", cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.cs"];
m1_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="QCAlgorithm.cs"];
m1_3 [label="Entry QuantConnect.Securities.CashBook.CashBook()", span="47-47", cluster="QuantConnect.Securities.CashBook.CashBook()", file="QCAlgorithm.cs"];
m1_4 [label="_storage = new Dictionary<string, Cash>()", span="49-49", cluster="QuantConnect.Securities.CashBook.CashBook()", file="QCAlgorithm.cs"];
m1_5 [label="_storage.Add(BaseCurrency, new Cash(BaseCurrency, 0, 1.0m))", span="50-50", cluster="QuantConnect.Securities.CashBook.CashBook()", file="QCAlgorithm.cs"];
m1_6 [label="Exit QuantConnect.Securities.CashBook.CashBook()", span="47-47", cluster="QuantConnect.Securities.CashBook.CashBook()", file="QCAlgorithm.cs"];
m1_14 [label="Entry QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="71-71", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.cs"];
m1_61 [label="Entry QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", span="177-177", cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="QCAlgorithm.cs"];
m1_62 [label="return ((IEnumerable) _storage).GetEnumerator();", span="179-179", cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="QCAlgorithm.cs"];
m1_63 [label="Exit QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", span="177-177", cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="QCAlgorithm.cs"];
m1_56 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="QCAlgorithm.cs"];
m1_30 [label="Entry QuantConnect.Securities.CashBook.Clear()", span="113-113", cluster="QuantConnect.Securities.CashBook.Clear()", file="QCAlgorithm.cs"];
m1_31 [label="_storage.Clear()", span="115-115", cluster="QuantConnect.Securities.CashBook.Clear()", file="QCAlgorithm.cs"];
m1_32 [label="Exit QuantConnect.Securities.CashBook.Clear()", span="113-113", cluster="QuantConnect.Securities.CashBook.Clear()", file="QCAlgorithm.cs"];
m1_41 [label="Entry QuantConnect.Securities.CashBook.ContainsKey(string)", span="128-128", cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="QCAlgorithm.cs"];
m1_42 [label="return _storage.ContainsKey(key);", span="130-130", cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="QCAlgorithm.cs"];
m1_43 [label="Exit QuantConnect.Securities.CashBook.ContainsKey(string)", span="128-128", cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="QCAlgorithm.cs"];
m1_19 [label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", span="83-83", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs"];
m1_20 [label="_storage.Values", span="85-85", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs"];
m1_21 [label="cash.EnsureCurrencyDataFeed(subscriptions, securities)", span="87-87", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs"];
m1_22 [label="Exit QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", span="83-83", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs"];
m1_33 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="QCAlgorithm.cs"];
m1_7 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.cs"];
m1_8 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="60-60", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.cs"];
m1_52 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="QCAlgorithm.cs"];
m1_57 [label="Entry QuantConnect.Securities.CashBook.GetEnumerator()", span="172-172", cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="QCAlgorithm.cs"];
m1_58 [label="return _storage.GetEnumerator();", span="174-174", cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="QCAlgorithm.cs"];
m1_59 [label="Exit QuantConnect.Securities.CashBook.GetEnumerator()", span="172-172", cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="QCAlgorithm.cs"];
m1_53 [label="Entry QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", span="143-143", cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="QCAlgorithm.cs"];
m1_54 [label="((IDictionary<string, Cash>) _storage).CopyTo(array, arrayIndex)", span="145-145", cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="QCAlgorithm.cs"];
m1_55 [label="Exit QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", span="143-143", cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="QCAlgorithm.cs"];
m1_49 [label="Entry QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="138-138", cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs"];
m1_50 [label="return _storage.Contains(item);", span="140-140", cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs"];
m1_51 [label="Exit QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="138-138", cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs"];
m1_38 [label="Entry QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="123-123", cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs"];
m1_39 [label="return _storage.Remove(item.Key);", span="125-125", cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs"];
m1_40 [label="Exit QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="123-123", cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="QCAlgorithm.cs"];
m1_65 [label="QuantConnect.Securities.CashBook", span="", file="QCAlgorithm.cs"];
m2_123 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="QCAlgorithm.Trading.cs"];
m2_41 [label="Entry QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", span="38-38", cluster="QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", file="QCAlgorithm.Trading.cs"];
m2_64 [label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131", cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="QCAlgorithm.Trading.cs"];
m2_90 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_91 [label="order.Quantity == 0", span="306-306", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_93 [label="var security = _securities[order.Symbol]", span="308-308", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_94 [label="var ticket = GetOrderTicket(order.Id)", span="310-310", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_96 [label="Log.Error(''SecurityTransactionManager.GetSufficientCapitalForOrder(): Null order ticket for id: '' + order.Id)", span="313-313", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_98 [label="order.Type == OrderType.OptionExercise", span="317-317", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_102 [label="var quantity = option.GetExerciseQuantity(order.Quantity)", span="325-325", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_103 [label="var newOrder = new LimitOrder\r\n                    {\r\n                        Id = order.Id,\r\n                        Time = order.Time,\r\n                        LimitPrice = option.StrikePrice,\r\n                        Symbol = underlying.Symbol,\r\n                        Quantity = option.Symbol.ID.OptionRight == OptionRight.Call ? quantity : -quantity\r\n                    }", span="327-334", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_104 [label="return GetSufficientCapitalForOrder(portfolio, newOrder);", span="337-337", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_106 [label="security.Holdings.Quantity * order.Quantity < 0 && Math.Abs(security.Holdings.Quantity) >= Math.Abs(order.Quantity)", span="344-344", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_108 [label="var freeMargin = security.MarginModel.GetMarginRemaining(portfolio, security, order.Direction)", span="346-346", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_109 [label="var initialMarginRequiredForOrder = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="347-347", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_110 [label="var percentUnfilled = (Math.Abs(order.Quantity) - Math.Abs(ticket.QuantityFilled))/Math.Abs(order.Quantity)", span="350-350", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_113 [label="Log.Error(string.Format(''SecurityTransactionManager.GetSufficientCapitalForOrder(): Id: {0}, Initial Margin: {1}, Free Margin: {2}'', order.Id, initialMarginRequiredForOrder, freeMargin))", span="355-355", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_92 [label="return true;", span="306-306", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_99 [label="var option = (Option.Option)security", span="320-320", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_95 [label="ticket == null", span="311-311", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_97 [label="return false;", span="314-314", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_100 [label="var underlying = option.Underlying", span="321-321", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_101 [label="option.IsAutoExercised(underlying.Close)", span="323-323", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_105 [label="return true;", span="340-340", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_107 [label="return true;", span="344-344", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_112 [label="Math.Abs(initialMarginRequiredForRemainderOfOrder) > freeMargin", span="353-353", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_111 [label="var initialMarginRequiredForRemainderOfOrder = percentUnfilled*initialMarginRequiredForOrder", span="351-351", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_115 [label="return true;", span="358-358", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_114 [label="return false;", span="356-356", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_116 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_73 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m2_74 [label="return _orderProcessor.GetOrders(x => x.Symbol == symbol && x.Status.IsOpen()).ToList();", span="256-256", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m2_75 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m2_33 [label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="258-258", cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="QCAlgorithm.Trading.cs"];
m2_52 [label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="222-222", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs"];
m2_53 [label="var orderTicket = GetOrderTicket(orderId)", span="224-224", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs"];
m2_55 [label="Log.Error(''SecurityTransactionManager.WaitForOrder(): Unable to locate ticket for order: '' + orderId)", span="227-227", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs"];
m2_54 [label="orderTicket == null", span="225-225", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs"];
m2_57 [label="!orderTicket.OrderClosed.WaitOne(_marketOrderFillTimeout)", span="231-231", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs"];
m2_56 [label="return false;", span="228-228", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs"];
m2_58 [label="Log.Error(''SecurityTransactionManager.WaitForOrder(): Order did not fill within {0} seconds.'', _marketOrderFillTimeout.TotalSeconds)", span="233-233", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs"];
m2_60 [label="return true;", span="237-237", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs"];
m2_59 [label="return false;", span="234-234", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs"];
m2_61 [label="Exit QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="222-222", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs"];
m2_12 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="107-107", cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="QCAlgorithm.Trading.cs"];
m2_79 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="QCAlgorithm.Trading.cs"];
m2_80 [label="return _orderProcessor.GetOrderById(orderId);", span="274-274", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="QCAlgorithm.Trading.cs"];
m2_81 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="QCAlgorithm.Trading.cs"];
m2_31 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Trading.cs"];
m2_119 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41", cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="QCAlgorithm.Trading.cs"];
m2_32 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="200-200", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.Trading.cs"];
m2_42 [label="return _orderProcessor.GetOrderTickets(filter ?? (x => true));", span="202-202", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.Trading.cs"];
m2_43 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="200-200", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.Trading.cs"];
m2_86 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", span="43-43", cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", file="QCAlgorithm.Trading.cs"];
m2_51 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTicket(int)", span="57-57", cluster="QuantConnect.Securities.IOrderProvider.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs"];
m2_76 [label="Entry lambda expression", span="256-256", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_36 [label="x.Symbol == symbol && x.Status.IsOpen()", span="177-177", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_35 [label="Entry lambda expression", span="177-177", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_37 [label="Exit lambda expression", span="177-177", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_45 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_46 [label=true, span="202-202", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_47 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_70 [label="Entry lambda expression", span="246-246", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_71 [label="x.Status.IsOpen()", span="246-246", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_72 [label="Exit lambda expression", span="246-246", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_77 [label="x.Symbol == symbol && x.Status.IsOpen()", span="256-256", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_78 [label="Exit lambda expression", span="256-256", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m2_62 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="QCAlgorithm.Trading.cs"];
m2_122 [label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47", cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_11 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="365-365", cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="QCAlgorithm.Trading.cs"];
m2_125 [label="return Interlocked.Increment(ref _orderId);", span="367-367", cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="QCAlgorithm.Trading.cs"];
m2_126 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="365-365", cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="QCAlgorithm.Trading.cs"];
m2_68 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="65-65", cluster="QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.Trading.cs"];
m2_117 [label="Entry QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", span="195-195", cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="QCAlgorithm.Trading.cs"];
m2_13 [label="Entry QuantConnect.Securities.IOrderProcessor.Process(QuantConnect.Orders.OrderRequest)", span="29-29", cluster="QuantConnect.Securities.IOrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_128 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="QCAlgorithm.Trading.cs"];
m2_129 [label="_orderProcessor = orderProvider", span="376-376", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="QCAlgorithm.Trading.cs"];
m2_130 [label="Exit QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="QCAlgorithm.Trading.cs"];
m2_63 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="QCAlgorithm.Trading.cs"];
m2_65 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="244-244", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="QCAlgorithm.Trading.cs"];
m2_66 [label="return _orderProcessor.GetOrders(x => x.Status.IsOpen()).ToList();", span="246-246", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="QCAlgorithm.Trading.cs"];
m2_67 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="244-244", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="QCAlgorithm.Trading.cs"];
m2_69 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithm.Trading.cs"];
m2_23 [label="Entry QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", span="190-190", cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", file="QCAlgorithm.Trading.cs"];
m2_39 [label="return ProcessRequest(new CancelOrderRequest(_securities.UtcTime, orderId, tag ?? string.Empty));", span="192-192", cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", file="QCAlgorithm.Trading.cs"];
m2_40 [label="Exit QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", span="190-190", cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", file="QCAlgorithm.Trading.cs"];
m2_87 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.Trading.cs"];
m2_88 [label="return _orderProcessor.GetOrders(filter);", span="294-294", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.Trading.cs"];
m2_89 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.Trading.cs"];
m2_83 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", span="282-282", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", file="QCAlgorithm.Trading.cs"];
m2_84 [label="return _orderProcessor.GetOrderByBrokerageId(brokerageId);", span="284-284", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", file="QCAlgorithm.Trading.cs"];
m2_85 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", span="282-282", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", file="QCAlgorithm.Trading.cs"];
m2_121 [label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63", cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="QCAlgorithm.Trading.cs"];
m2_14 [label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_15 [label="return ProcessRequest(request);", span="146-146", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_16 [label="Exit QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_4 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.Trading.cs"];
m2_5 [label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_6 [label="var submit = request as SubmitOrderRequest", span="131-131", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_9 [label="return _orderProcessor.Process(request);", span="136-136", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_7 [label="submit != null", span="132-132", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_8 [label="submit.SetOrderId(GetIncrementOrderId())", span="134-134", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_10 [label="Exit QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_127 [label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0", cluster="System.Threading.Interlocked.Increment(ref int)", file="QCAlgorithm.Trading.cs"];
m2_131 [label="Entry QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", span="382-382", cluster="QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_132 [label="return order.Status == OrderStatus.Filled || order.Status == OrderStatus.PartiallyFilled || order.Status == OrderStatus.Invalid || order.Status == OrderStatus.Canceled;", span="384-384", cluster="QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_133 [label="Exit QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", span="382-382", cluster="QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_124 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Trading.cs"];
m2_20 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="QCAlgorithm.Trading.cs"];
m2_21 [label="return RemoveOrder(orderId, orderTag);", span="166-166", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="QCAlgorithm.Trading.cs"];
m2_22 [label="Exit QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="QCAlgorithm.Trading.cs"];
m2_34 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Trading.cs"];
m2_0 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.Trading.cs"];
m2_1 [label="_securities = security", span="52-52", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.Trading.cs"];
m2_2 [label="_transactionRecord = new Dictionary<DateTime, decimal>()", span="55-55", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.Trading.cs"];
m2_3 [label="Exit QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.Trading.cs"];
m2_17 [label="Entry QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="154-154", cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_18 [label="return ProcessRequest(request);", span="156-156", cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_19 [label="Exit QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="154-154", cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="QCAlgorithm.Trading.cs"];
m2_38 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="QCAlgorithm.Trading.cs"];
m2_24 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m2_25 [label="var cancelledOrders = new List<OrderTicket>()", span="176-176", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m2_26 [label="GetOrderTickets(x => x.Symbol == symbol && x.Status.IsOpen())", span="177-177", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m2_28 [label="cancelledOrders.Add(ticket)", span="180-180", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m2_29 [label="return cancelledOrders;", span="182-182", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m2_27 [label="ticket.Cancel()", span="179-179", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m2_30 [label="Exit QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs"];
m2_82 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderById(int)", span="36-36", cluster="QuantConnect.Securities.IOrderProvider.GetOrderById(int)", file="QCAlgorithm.Trading.cs"];
m2_48 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="210-210", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs"];
m2_49 [label="return _orderProcessor.GetOrderTicket(orderId);", span="212-212", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs"];
m2_50 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="210-210", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs"];
m2_44 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50", cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.Trading.cs"];
m2_118 [label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(int)", span="187-187", cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(int)", file="QCAlgorithm.Trading.cs"];
m2_120 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="QCAlgorithm.Trading.cs"];
m2_134 [label="QuantConnect.Securities.SecurityTransactionManager", span="", file="QCAlgorithm.Trading.cs"];
m2_135 [label="QuantConnect.Symbol", span="", file="QCAlgorithm.Trading.cs"];
m2_136 [label="QuantConnect.Symbol", span="", file="QCAlgorithm.Trading.cs"];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_4  [key=1, style=dashed, color=green, label=double];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_6  [key=2, style=dotted, color=green];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_6  [key=2, style=dotted, color=green];
m0_5 -> m0_2  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_7 -> m0_3  [key=1, style=dashed, color=green, label="QuantConnect.Packets.MarketHours"];
m0_7 -> m0_4  [key=1, style=dashed, color=green, label="QuantConnect.Packets.MarketHours"];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_8  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_9  [key=2, style=dotted];
m1_18 -> m1_15  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_9  [key=2, style=dotted];
m1_25 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>"];
m1_26 -> m1_24  [key=0, style=bold, color=blue];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=2, style=dotted];
m1_47 -> m1_45  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=2, style=dotted];
m1_36 -> m1_34  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_9  [key=2, style=dotted];
m1_29 -> m1_27  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>"];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_12 -> m1_11  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_13 -> m1_10  [key=0, style=bold, color=blue];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_7  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [key=2, style=dotted];
m1_5 -> m1_9  [key=2, style=dotted];
m1_6 -> m1_3  [key=0, style=bold, color=blue];
m1_61 -> m1_62  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_64  [key=2, style=dotted];
m1_63 -> m1_61  [key=0, style=bold, color=blue];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=2, style=dotted];
m1_32 -> m1_30  [key=0, style=bold, color=blue];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_44  [key=2, style=dotted];
m1_43 -> m1_41  [key=0, style=bold, color=blue];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionManager"];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=0, style=solid];
m1_21 -> m1_20  [key=0, style=solid];
m1_21 -> m1_23  [key=2, style=dotted];
m1_22 -> m1_19  [key=0, style=bold, color=blue];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [key=2, style=dotted];
m1_59 -> m1_57  [key=0, style=bold, color=blue];
m1_53 -> m1_54  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_56  [key=2, style=dotted];
m1_55 -> m1_53  [key=0, style=bold, color=blue];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [key=2, style=dotted];
m1_51 -> m1_49  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_37  [key=2, style=dotted];
m1_39 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>"];
m1_40 -> m1_38  [key=0, style=bold, color=blue];
m1_65 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m1_65 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m2_90 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m2_90 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_93 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_93 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_93 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_48  [key=2, style=dotted];
m2_94 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_62  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_106  [key=0, style=solid];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_118  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_119  [key=2, style=dotted];
m2_104 -> m2_116  [key=0, style=solid];
m2_104 -> m2_90  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=0, style=solid];
m2_106 -> m2_120  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_121  [key=2, style=dotted];
m2_108 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=freeMargin];
m2_108 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=freeMargin];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_122  [key=2, style=dotted];
m2_109 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=initialMarginRequiredForOrder];
m2_109 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=initialMarginRequiredForOrder];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_120  [key=2, style=dotted];
m2_110 -> m2_123  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_124  [key=2, style=dotted];
m2_113 -> m2_62  [key=2, style=dotted];
m2_92 -> m2_116  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=option];
m2_99 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=option];
m2_99 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=option];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_98  [key=0, style=solid];
m2_97 -> m2_116  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=underlying];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_105  [key=0, style=solid];
m2_101 -> m2_117  [key=2, style=dotted];
m2_105 -> m2_116  [key=0, style=solid];
m2_107 -> m2_116  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_115  [key=0, style=solid];
m2_112 -> m2_123  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_114 -> m2_116  [key=0, style=solid];
m2_116 -> m2_90  [key=0, style=bold, color=blue];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_68  [key=2, style=dotted];
m2_74 -> m2_69  [key=2, style=dotted];
m2_74 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_75 -> m2_73  [key=0, style=bold, color=blue];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_48  [key=2, style=dotted];
m2_53 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=orderTicket];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_62  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_57  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_60  [key=0, style=solid];
m2_57 -> m2_63  [key=2, style=dotted];
m2_56 -> m2_61  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_64  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_59 -> m2_61  [key=0, style=solid];
m2_61 -> m2_52  [key=0, style=bold, color=blue];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_82  [key=2, style=dotted];
m2_81 -> m2_79  [key=0, style=bold, color=blue];
m2_32 -> m2_42  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=2, style=dotted];
m2_43 -> m2_32  [key=0, style=bold, color=blue];
m2_76 -> m2_77  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_37 -> m2_35  [key=0, style=bold, color=blue];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_45  [key=0, style=bold, color=blue];
m2_70 -> m2_71  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_38  [key=2, style=dotted];
m2_72 -> m2_70  [key=0, style=bold, color=blue];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_38  [key=2, style=dotted];
m2_78 -> m2_76  [key=0, style=bold, color=blue];
m2_11 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_127  [key=2, style=dotted];
m2_126 -> m2_11  [key=0, style=bold, color=blue];
m2_128 -> m2_129  [key=0, style=solid];
m2_129 -> m2_130  [key=0, style=solid];
m2_130 -> m2_128  [key=0, style=bold, color=blue];
m2_65 -> m2_66  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_68  [key=2, style=dotted];
m2_66 -> m2_69  [key=2, style=dotted];
m2_66 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_67 -> m2_65  [key=0, style=bold, color=blue];
m2_23 -> m2_39  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_39 -> m2_5  [key=2, style=dotted];
m2_40 -> m2_23  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_68  [key=2, style=dotted];
m2_89 -> m2_87  [key=0, style=bold, color=blue];
m2_83 -> m2_84  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=2, style=dotted];
m2_85 -> m2_83  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_5  [key=2, style=dotted];
m2_16 -> m2_14  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=submit];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_13  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_11  [key=2, style=dotted];
m2_8 -> m2_12  [key=2, style=dotted];
m2_10 -> m2_5  [key=0, style=bold, color=blue];
m2_131 -> m2_132  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_133 -> m2_131  [key=0, style=bold, color=blue];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_22 -> m2_20  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_4  [key=2, style=dotted];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_5  [key=2, style=dotted];
m2_19 -> m2_17  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_24 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_31  [key=2, style=dotted];
m2_25 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=cancelledOrders];
m2_25 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=cancelledOrders];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=0, style=solid];
m2_26 -> m2_32  [key=2, style=dotted];
m2_26 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_26 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m2_28 -> m2_26  [key=0, style=solid];
m2_28 -> m2_34  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_33  [key=2, style=dotted];
m2_30 -> m2_24  [key=0, style=bold, color=blue];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_51  [key=2, style=dotted];
m2_50 -> m2_48  [key=0, style=bold, color=blue];
m2_134 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_135 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_136 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
}
