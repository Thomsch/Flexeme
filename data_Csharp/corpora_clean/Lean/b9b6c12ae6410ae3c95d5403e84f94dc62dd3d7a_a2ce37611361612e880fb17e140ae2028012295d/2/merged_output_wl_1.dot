digraph  {
n43 [label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", span=""];
n0 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", label="Entry QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", span="35-35"];
n1 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", label="SetStartDate(2007, 05, 16)", span="37-37"];
n2 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", label="SetEndDate(2007, 05, 25)", span="38-38"];
n7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1127-1127"];
n3 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", label="SetCash(100000)", span="39-39"];
n8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1152-1152"];
n4 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", label="AddSecurity(SecurityType.Equity, ''AAA'', Resolution.Daily)", span="41-41"];
n9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1076-1076"];
n5 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Daily)", span="42-42"];
n10 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1319-1319"];
n6 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", label="Exit QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", span="35-35"];
n11 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="Entry QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", span="49-49"];
n12 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="Transactions.OrdersCount == 0", span="51-51"];
n15 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="data.Bars", span="57-57"];
n13 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="SetHoldings(''AAA'', 1)", span="53-53"];
n14 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="Debug(''Purchased Stock'')", span="54-54"];
n25 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="870-870"];
n26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1700-1700"];
n16 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="var symbol = kvp.Key", span="59-59"];
n19 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="var aaa = Securities[''AAA'']", span="66-66"];
n17 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="var tradeBar = kvp.Value", span="60-60"];
n18 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="Debug($''OnData(Slice): {Time}: {symbol}: {tradeBar.Close.ToString(''0.00'')}'')", span="61-61"];
n27 [cluster="decimal.ToString(string)", label="Entry decimal.ToString(string)", span="0-0"];
n20 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="aaa.IsDelisted && aaa.IsTradable", span="67-67"];
n22 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="!aaa.IsDelisted && !aaa.IsTradable", span="71-71"];
n21 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="throw new Exception(''Delisted security must NOT be tradable'');", span="69-69"];
n23 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="throw new Exception(''Securities must be marked as tradable until they're delisted or removed from the universe'');", span="73-73"];
n24 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", label="Exit QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", span="49-49"];
n28 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n29 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", label="Entry QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", span="77-77"];
n30 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", label=data, span="79-79"];
n31 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", label="var symbol = kvp.Key", span="81-81"];
n39 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", label="Exit QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", span="77-77"];
n32 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", label="var delisting = kvp.Value", span="82-82"];
n34 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", label="Debug($''OnData(Delistings): {Time}: {symbol} will be delisted at end of day today.'')", span="85-85"];
n35 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", label="SetHoldings(symbol, 0)", span="88-88"];
n37 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", label="Debug($''OnData(Delistings): {Time}: {symbol} has been delisted.'')", span="92-92"];
n38 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", label="SetHoldings(symbol, 1)", span="95-95"];
n33 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", label="delisting.Type == DelistingType.Warning", span="83-83"];
n36 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", label="delisting.Type == DelistingType.Delisted", span="90-90"];
n40 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="100-100"];
n41 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="Debug($''OnOrderEvent(OrderEvent): {Time}: {orderEvent}'')", span="102-102"];
n42 [cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="Exit QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="100-100"];
m1_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m1_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BacktestingSetupHandler.cs", label="_optionChainProvider = optionChainProvider", span="37-37"];
m1_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m1_14 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_13 [cluster="QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31"];
m1_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingSetupHandler.cs", label="OptionChainCacheEntry entry", span="50-50"];
m1_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="46-46"];
m1_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingSetupHandler.cs", label="List<Symbol> symbols", span="48-48"];
m1_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingSetupHandler.cs", label="!_cache.TryGetValue(symbol, out entry) || date.Date != entry.Date", span="51-51"];
m1_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingSetupHandler.cs", label="symbols = _optionChainProvider.GetOptionContractList(symbol, date.Date).ToList()", span="53-53"];
m1_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingSetupHandler.cs", label="_cache[symbol] = new OptionChainCacheEntry(date.Date, symbols)", span="54-54"];
m1_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingSetupHandler.cs", label="symbols = entry.Symbols", span="58-58"];
m1_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingSetupHandler.cs", label="return symbols;", span="61-61"];
m1_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="46-46"];
m1_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", span="70-70"];
m1_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", span="70-70"];
m1_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="BacktestingSetupHandler.cs", label="Date = date", span="72-72"];
m1_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="BacktestingSetupHandler.cs", label="Symbols = symbols", span="73-73"];
m1_12 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_19 [file="BacktestingSetupHandler.cs", label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", span=""];
m1_20 [file="BacktestingSetupHandler.cs", label="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry", span=""];
m2_173 [cluster="QuantConnect.Lean.Engine.DataFeeds.LiveOptionChainProvider.LiveOptionChainProvider()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.LiveOptionChainProvider.LiveOptionChainProvider()", span="27-27"];
m2_122 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m2_35 [cluster="QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", span="60-60"];
m2_134 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="495-495"];
m2_167 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="399-399"];
m2_204 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="401-401"];
m2_205 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="403-403"];
m2_208 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="return dataFeeds;", span="409-409"];
m2_206 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="dataFeedsConfigString != string.Empty", span="404-404"];
m2_207 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="406-406"];
m2_209 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="399-399"];
m2_132 [cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="BrokerageSetupHandler.cs", label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m2_135 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="485-485"];
m2_5 [cluster="QuantConnect.Packets.SignalPacket.SignalPacket(string, QuantConnect.Algorithm.Framework.Signals.SignalCollection)", file="BrokerageSetupHandler.cs", label="DateTimeUtc = collection.DateTimeUtc", span="65-65"];
m2_137 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", span="392-392"];
m2_126 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", span="380-380"];
m2_187 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="BrokerageSetupHandler.cs", label="var openOrders = brokerage.GetOpenOrders()", span="383-383"];
m2_190 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="BrokerageSetupHandler.cs", label="resultHandler.DebugMessage($''BrokerageSetupHandler.Setup(): Open order detected.  Creating order tickets for open order {order.Symbol.Value} with quantity {order.Quantity}. Beware that this order ticket may not accurately reflect the quantity of the order if the open order is partially filled.'')", span="388-388"];
m2_191 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="BrokerageSetupHandler.cs", label="order.Id = algorithm.Transactions.GetIncrementOrderId()", span="389-389"];
m2_192 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="BrokerageSetupHandler.cs", label="transactionHandler.Orders.AddOrUpdate(order.Id, order, (i, o) => order)", span="390-390"];
m2_193 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="BrokerageSetupHandler.cs", label="transactionHandler.OrderTickets.AddOrUpdate(order.Id, order.ToOrderTicket(algorithm.Transactions))", span="391-391"];
m2_188 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="BrokerageSetupHandler.cs", label=openOrders, span="384-384"];
m2_189 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Has open order: '' + order.Symbol.Value + '' - '' + order.Quantity)", span="387-387"];
m2_194 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", span="380-380"];
m2_169 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="530-530"];
m2_140 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="309-309"];
m2_129 [cluster="Lazy<Resolution>.cstr", file="BrokerageSetupHandler.cs", label="Entry Lazy<Resolution>.cstr", span=""];
m2_183 [cluster="Unk.Min", file="BrokerageSetupHandler.cs", label="Entry Unk.Min", span=""];
m2_116 [cluster="string.IsNullOrWhiteSpace(string)", file="BrokerageSetupHandler.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m2_20 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="91-91"];
m2_147 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="171-221"];
m2_144 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message))", span="158-158"];
m2_148 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetBrokerageModel(_factory.BrokerageModel)", span="176-176"];
m2_163 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="AddInitializationError(err.ToString())", span="219-219"];
m2_149 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Portfolio.MarginCallModel = MarginCallModel.Null", span="179-179"];
m2_150 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetParameters(job.Parameters)", span="182-182"];
m2_151 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="183-183"];
m2_152 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetLiveMode(true)", span="186-186"];
m2_153 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetDateTime(DateTime.UtcNow)", span="189-189"];
m2_154 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="192-192"];
m2_155 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new LiveOptionChainProvider()))", span="195-195"];
m2_156 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="brokerage is InteractiveBrokersBrokerage &&\r\n                            liveJob.DataQueueHandler.EndsWith(''InteractiveBrokersBrokerage'')", span="200-201"];
m2_157 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Settings.DataSubscriptionLimit = 100", span="203-203"];
m2_158 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Initialize()", span="207-207"];
m2_160 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Portfolio.CashBook", span="211-211"];
m2_179 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min()", span="294-294"];
m2_159 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="liveJob.Brokerage != ''PaperBrokerage''", span="208-208"];
m2_164 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="171-221"];
m2_37 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="114-114"];
m2_143 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="args.Type == BrokerageMessageType.Error", span="156-156"];
m2_142 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="154-160"];
m2_145 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="154-160"];
m2_162 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label=Exception, span="217-217"];
m2_161 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="kvp.Value.SetAmount(0)", span="213-213"];
m2_178 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="294-294"];
m2_180 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="294-294"];
m2_184 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="294-294"];
m2_21 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name''))", span="91-91"];
m2_38 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="brokerageFactory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="114-114"];
m2_39 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="114-114"];
m2_201 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="390-390"];
m2_186 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="294-294"];
m2_185 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.Value.Resolution", span="294-294"];
m2_22 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="91-91"];
m2_202 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label=order, span="390-390"];
m2_203 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="390-390"];
m2_127 [cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="71-71"];
m2_131 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m2_196 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="103-103"];
m2_128 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m2_18 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="349-349"];
m2_41 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="133-133"];
m2_55 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0, file="BrokerageSetupHandler.cs", label="1: var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(300), () =>\r\n                {\r\n                    try\r\n                    {\r\n                        //Set the default brokerage model before initialize\r\n                        algorithm.SetBrokerageModel(_factory.BrokerageModel);\r\n\r\n                        //Margin calls are disabled by default in live mode\r\n                        algorithm.Portfolio.MarginCallModel = MarginCallModel.Null;\r\n\r\n                        //Set our parameters\r\n                        algorithm.SetParameters(job.Parameters);\r\n                        algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds());\r\n\r\n                        //Algorithm is live, not backtesting:\r\n                        algorithm.SetLiveMode(true);\r\n\r\n                        //Initialize the algorithm's starting date\r\n                        algorithm.SetDateTime(DateTime.UtcNow);\r\n\r\n                        //Set the source impl for the event scheduling\r\n                        algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n\r\n                        // set the option chain provider\r\n                        algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new LiveOptionChainProvider()));\r\n\r\n                        // If we're going to receive market data from IB,\r\n                        // set the default subscription limit to 100,\r\n                        // algorithms can override this setting in the Initialize method\r\n                        if (brokerage is InteractiveBrokersBrokerage &&\r\n                            liveJob.DataQueueHandler.EndsWith(''InteractiveBrokersBrokerage''))\r\n                        {\r\n                            algorithm.Settings.DataSubscriptionLimit = 100;\r\n                        }\r\n\r\n                        //Initialise the algorithm, get the required data:\r\n                        algorithm.Initialize();\r\n                        if (liveJob.Brokerage != ''PaperBrokerage'')\r\n                        {\r\n                            //Zero the CashBook - we'll populate directly from brokerage\r\n                            foreach (var kvp in algorithm.Portfolio.CashBook)\r\n                            {\r\n                                kvp.Value.SetAmount(0);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        AddInitializationError(err.ToString());\r\n                    }\r\n                }, controls.RamAllocation)", span="171-221"];
m2_42 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var liveJob = job as LiveNodePacket", span="136-136"];
m2_53 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var controls = job.Controls", span="169-169"];
m2_54 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var isolator = new Isolator()", span="170-170"];
m2_56 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!initializeComplete", span="223-223"];
m2_44 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''BrokerageSetupHandler requires a LiveNodePacket'')", span="139-139"];
m2_48 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''A brokerage must be specified'')", span="148-148"];
m2_50 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="EventHandler<BrokerageMessageEvent> brokerageOnMessage = (sender, args) =>\r\n            {\r\n                if (args.Type == BrokerageMessageType.Error)\r\n                {\r\n                    AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message));\r\n                }\r\n            }", span="154-160"];
m2_57 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Initialization timed out.'')", span="225-225"];
m2_65 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(string.Format(''Error connecting to brokerage: {0}. '' +\r\n                        ''This may be caused by incorrect login credentials or an unsupported account type.'', err.Message))", span="243-244"];
m2_68 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Unable to connect to brokerage.'')", span="251-251"];
m2_77 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Error getting cash balance from brokerage: '' + err.Message)", span="269-269"];
m2_80 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="GetOpenOrders(algorithm, resultHandler, transactionHandler, brokerage)", span="276-276"];
m2_83 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Error getting open orders from brokerage: '' + err.Message)", span="281-281"];
m2_93 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Found unsupported security type in existing brokerage holdings: '' + holding.Type + ''. '' +\r\n                                ''QuantConnect currently supports the following security types: '' + string.Join('','', supportedSecurityTypes))", span="303-304"];
m2_105 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Error getting account holdings from brokerage: '' + err.Message)", span="348-348"];
m2_108 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="StartingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="355-355"];
m2_109 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="StartingDate = DateTime.Now", span="356-356"];
m2_111 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(err.ToString())", span="360-360"];
m2_112 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return Errors.Count == 0;", span="370-370"];
m2_46 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.Name = liveJob.GetAlgorithmName()", span="143-143"];
m2_52 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="resultHandler.SendStatusUpdate(AlgorithmStatus.Initializing, ''Initializing algorithm...'')", span="166-166"];
m2_59 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="resultHandler.SendStatusUpdate(AlgorithmStatus.LoggingIn, ''Logging into brokerage...'')", span="230-230"];
m2_60 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="brokerage.Message += brokerageOnMessage", span="232-232"];
m2_62 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="brokerage.Connect()", span="238-238"];
m2_67 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!brokerage.IsConnected", span="248-248"];
m2_71 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var cashBalance = brokerage.GetCashBalance()", span="259-259"];
m2_74 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.Portfolio.SetCash(cash.Symbol, cash.Amount, cash.ConversionRate)", span="263-263"];
m2_86 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var holdings = brokerage.GetAccountHoldings()", span="289-289"];
m2_88 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var minResolution = new Lazy<Resolution>(() => algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min())", span="294-294"];
m2_94 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!algorithm.Portfolio.ContainsKey(holding.Symbol)", span="310-310"];
m2_97 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.AddOptionContract(holding.Symbol, minResolution.Value, true, 1.0m)", span="317-317"];
m2_99 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.AddFutureContract(holding.Symbol, minResolution.Value, true, 1.0m)", span="322-322"];
m2_100 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.AddSecurity(holding.Type, holding.Symbol.Value, minResolution.Value, null, true, 1.0m, false)", span="327-327"];
m2_101 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.Portfolio[holding.Symbol].SetHoldings(holding.AveragePrice, holding.Quantity)", span="331-331"];
m2_102 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.Securities[holding.Symbol].SetMarketPrice(new TradeBar\r\n                        {\r\n                            Time = DateTime.Now,\r\n                            Open = holding.MarketPrice,\r\n                            High = holding.MarketPrice,\r\n                            Low = holding.MarketPrice,\r\n                            Close = holding.MarketPrice,\r\n                            Volume = 0,\r\n                            Symbol = holding.Symbol,\r\n                            DataType = MarketDataType.TradeBar\r\n                        })", span="332-342"];
m2_107 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.PostInitialize()", span="352-352"];
m2_45 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="140-140"];
m2_43 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="liveJob == null", span="137-137"];
m2_47 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="string.IsNullOrWhiteSpace(liveJob.Brokerage)", span="146-146"];
m2_49 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="149-149"];
m2_51 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Initializing algorithm...'')", span="164-164"];
m2_58 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="226-226"];
m2_64 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="242-242"];
m2_66 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="245-245"];
m2_69 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="252-252"];
m2_76 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="268-268"];
m2_78 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="270-270"];
m2_79 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching open orders from brokerage...'')", span="273-273"];
m2_81 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="278-278"];
m2_85 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching holdings from brokerage...'')", span="285-285"];
m2_82 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="280-280"];
m2_84 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="282-282"];
m2_87 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var supportedSecurityTypes = new HashSet<SecurityType>\r\n                    {\r\n                        SecurityType.Equity, SecurityType.Forex, SecurityType.Cfd, SecurityType.Option, SecurityType.Future, SecurityType.Crypto\r\n                    }", span="290-293"];
m2_89 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=holdings, span="295-295"];
m2_92 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(''BrokerageSetupHandler.Setup(): Unsupported security type: '' + holding.Type + ''-'' + holding.Symbol.Value)", span="302-302"];
m2_104 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="347-347"];
m2_106 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="349-349"];
m2_110 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="358-358"];
m2_61 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Connecting to brokerage...'')", span="234-234"];
m2_63 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="240-240"];
m2_70 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching cash balance from brokerage...'')", span="255-255"];
m2_72 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=cashBalance, span="260-260"];
m2_73 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Setting '' + cash.Symbol + '' cash to '' + cash.Amount)", span="262-262"];
m2_91 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!supportedSecurityTypes.Contains(holding.Type)", span="300-300"];
m2_95 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Adding unrequested security: '' + holding.Symbol.Value)", span="312-312"];
m2_96 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="holding.Type == SecurityType.Option", span="314-314"];
m2_98 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="holding.Type == SecurityType.Future", span="319-319"];
m2_75 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="266-266"];
m2_90 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Has existing holding: '' + holding)", span="297-297"];
m2_103 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="345-345"];
m2_113 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="133-133"];
m2_139 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
m2_182 [cluster="Unk.DefaultIfEmpty", file="BrokerageSetupHandler.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m2_125 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="484-484"];
m2_119 [cluster="QuantConnect.Isolator.Isolator()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m2_168 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="580-580"];
m2_136 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="475-475"];
m2_197 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="365-365"];
m2_219 [cluster="System.IDisposable.Dispose()", file="BrokerageSetupHandler.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m2_215 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="426-426"];
m2_216 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="BrokerageSetupHandler.cs", label="_factory != null", span="428-428"];
m2_217 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="BrokerageSetupHandler.cs", label="_factory.Dispose()", span="430-430"];
m2_218 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="426-426"];
m2_166 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="323-323"];
m2_120 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145"];
m2_0 [cluster="QuantConnect.Packets.SignalPacket.SignalPacket()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Packets.SignalPacket.SignalPacket()", span="50-50"];
m2_1 [cluster="QuantConnect.Packets.SignalPacket.SignalPacket()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Packets.SignalPacket.SignalPacket()", span="50-50"];
m2_2 [cluster="QuantConnect.Packets.SignalPacket.SignalPacket(string, QuantConnect.Algorithm.Framework.Signals.SignalCollection)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Packets.SignalPacket.SignalPacket(string, QuantConnect.Algorithm.Framework.Signals.SignalCollection)", span="60-60"];
m2_3 [cluster="QuantConnect.Packets.SignalPacket.SignalPacket(string, QuantConnect.Algorithm.Framework.Signals.SignalCollection)", file="BrokerageSetupHandler.cs", label="AlgorithmId = algorithmId", span="63-63"];
m2_4 [cluster="QuantConnect.Packets.SignalPacket.SignalPacket(string, QuantConnect.Algorithm.Framework.Signals.SignalCollection)", file="BrokerageSetupHandler.cs", label="Signals = collection.Signals", span="64-64"];
m2_211 [cluster="Unk.>", file="BrokerageSetupHandler.cs", label="Entry Unk.>", span=""];
m2_175 [cluster="string.EndsWith(string)", file="BrokerageSetupHandler.cs", label="Entry string.EndsWith(string)", span="0-0"];
m2_130 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m2_118 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="220-220"];
m2_177 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="111-111"];
m2_199 [cluster="QuantConnect.Orders.Order.ToOrderTicket(QuantConnect.Securities.SecurityTransactionManager)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.Order.ToOrderTicket(QuantConnect.Securities.SecurityTransactionManager)", span="890-890"];
m2_23 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m2_34 [cluster="System.ArgumentException.ArgumentException(string)", file="BrokerageSetupHandler.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m2_6 [cluster="System.TimeSpan.FromDays(double)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m2_165 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="331-331"];
m2_123 [cluster="string.Format(string, object)", file="BrokerageSetupHandler.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_170 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="440-440"];
m2_133 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="130-130"];
m2_195 [cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="65-65"];
m2_114 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="417-417"];
m2_212 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="BrokerageSetupHandler.cs", label="Errors.Add(''Failed to initialize algorithm: '' + message)", span="419-419"];
m2_213 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="417-417"];
m2_200 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m2_25 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="105-105"];
m2_29 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="_factory = Composer.Instance.Single<IBrokerageFactory>(brokerageFactory => brokerageFactory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="114-114"];
m2_30 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="factory = _factory", span="115-115"];
m2_31 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="var brokerage = _factory.CreateBrokerage(liveJob, uninitializedAlgorithm)", span="118-118"];
m2_26 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="var liveJob = algorithmNodePacket as LiveNodePacket", span="107-107"];
m2_27 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="liveJob == null", span="108-108"];
m2_32 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="return brokerage;", span="120-120"];
m2_28 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="throw new ArgumentException(''BrokerageSetupHandler.CreateBrokerage requires a live node packet'');", span="110-110"];
m2_33 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="105-105"];
m2_141 [cluster="System.Exception.ToString()", file="BrokerageSetupHandler.cs", label="Entry System.Exception.ToString()", span="0-0"];
m2_121 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103"];
m2_36 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="55-55"];
m2_172 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m2_7 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="QuantConnect.Packets.SignalPacket", span=""];
m2_10 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromSeconds(15), names => names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name'')))", span="91-91"];
m2_9 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="IAlgorithm algorithm", span="88-88"];
m2_11 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="92-92"];
m2_8 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="string error", span="87-87"];
m2_12 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="!complete", span="93-93"];
m2_13 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="throw new Exception(error + '' Try re-building algorithm and remove duplicate QCAlgorithm base classes.'');", span="93-93"];
m2_14 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="return algorithm;", span="95-95"];
m2_15 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="85-85"];
m2_40 [cluster="System.Type.MatchesTypeName(string)", file="BrokerageSetupHandler.cs", label="Entry System.Type.MatchesTypeName(string)", span="653-653"];
m2_210 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_214 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_174 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="586-586"];
m2_198 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m2_171 [cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65"];
m2_146 [cluster="string.Format(string, object, object)", file="BrokerageSetupHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_16 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="82-82"];
m2_24 [cluster="System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", span="867-867"];
m2_138 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m2_117 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m2_181 [cluster="Unk.Select", file="BrokerageSetupHandler.cs", label="Entry Unk.Select", span=""];
m2_17 [cluster="System.TimeSpan.FromSeconds(double)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m2_176 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="303-303"];
m2_124 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77"];
m2_115 [cluster="QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", span="150-150"];
m2_220 [file="BrokerageSetupHandler.cs", label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", span=""];
m2_222 [file="BrokerageSetupHandler.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m2_223 [file="BrokerageSetupHandler.cs", label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
m2_224 [file="BrokerageSetupHandler.cs", label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span=""];
m2_225 [file="BrokerageSetupHandler.cs", label="QuantConnect.Interfaces.IBrokerage", span=""];
m2_226 [file="BrokerageSetupHandler.cs", label=liveJob, span=""];
m2_221 [file="BrokerageSetupHandler.cs", label=liveJob, span=""];
m2_227 [file="BrokerageSetupHandler.cs", label=order, span=""];
m4_37 [cluster="Unk.Where", file="CachingOptionChainProvider.cs", label="Entry Unk.Where", span=""];
m4_25 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", span="69-69"];
m4_26 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="return new HashSet<T>(enumerable);", span="71-71"];
m4_27 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", span="69-69"];
m4_41 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m4_131 [cluster="System.Collections.IEnumerator.MoveNext()", file="CachingOptionChainProvider.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m4_42 [cluster="QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", span="105-105"];
m4_43 [cluster="QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="return enumerable == null || !enumerable.Any();", span="107-107"];
m4_44 [cluster="QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", span="105-105"];
m4_13 [cluster="QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", span="46-46"];
m4_132 [cluster="System.Collections.Generic.List<T>.List()", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_24 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m4_60 [cluster="QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", span="138-138"];
m4_61 [cluster="QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", file="CachingOptionChainProvider.cs", label="return collection.Select(selector).Median();", span="140-140"];
m4_62 [cluster="QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", span="138-138"];
m4_95 [cluster="QuantConnect.Util.MemoizingEnumerable<T>.MemoizingEnumerable(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.MemoizingEnumerable<T>.MemoizingEnumerable(System.Collections.Generic.IEnumerable<T>)", span="40-40"];
m4_116 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m4_113 [cluster="lambda expression", file="CachingOptionChainProvider.cs", label="Entry lambda expression", span="267-267"];
m4_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="List<Symbol> symbols", span="48-48"];
m4_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="symbols = _optionChainProvider.GetOptionContractList(symbol, date.Date).ToList()", span="53-53"];
m4_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="OptionChainCacheEntry entry", span="50-50"];
m4_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="!_cache.TryGetValue(symbol, out entry) || date.Date != entry.Date", span="51-51"];
m4_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="_cache[symbol] = new OptionChainCacheEntry(date.Date, symbols)", span="54-54"];
m4_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="symbols = entry.Symbols", span="58-58"];
m4_14 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m4_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", color=green, community=1, file="CachingOptionChainProvider.cs", label="0: Symbols = symbols", span="73-73"];
m4_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", span="70-70"];
m4_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", color=green, community=1, file="CachingOptionChainProvider.cs", label="1: Date = date", span="72-72"];
m4_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", span="70-70"];
m4_19 [cluster="lambda expression", file="CachingOptionChainProvider.cs", label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", span=""];
m4_39 [cluster="lambda expression", file="CachingOptionChainProvider.cs", label="!set.Contains(item)", span="96-96"];
m4_38 [cluster="lambda expression", file="CachingOptionChainProvider.cs", label="Entry lambda expression", span="96-96"];
m4_40 [cluster="lambda expression", file="CachingOptionChainProvider.cs", label="Exit lambda expression", span="96-96"];
m4_57 [cluster="lambda expression", file="CachingOptionChainProvider.cs", label="Entry lambda expression", span="127-127"];
m4_58 [cluster="lambda expression", file="CachingOptionChainProvider.cs", label=x, span="127-127"];
m4_59 [cluster="lambda expression", file="CachingOptionChainProvider.cs", label="Exit lambda expression", span="127-127"];
m4_114 [cluster="lambda expression", file="CachingOptionChainProvider.cs", label="hash.Add(selector(x))", span="267-267"];
m4_115 [cluster="lambda expression", file="CachingOptionChainProvider.cs", label="Exit lambda expression", span="267-267"];
m4_86 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", span="207-207"];
m4_87 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", file="CachingOptionChainProvider.cs", label="return list.BinarySearch(value, comparer.Compare);", span="209-209"];
m4_88 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", span="207-207"];
m4_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m4_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CachingOptionChainProvider.cs", label="_optionChainProvider = optionChainProvider", span="37-37"];
m4_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m4_106 [cluster="System.IComparable.CompareTo(object)", file="CachingOptionChainProvider.cs", label="Entry System.IComparable.CompareTo(object)", span="0-0"];
m4_112 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m4_83 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", span="194-194"];
m4_84 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", file="CachingOptionChainProvider.cs", label="return BinarySearch(list, value, Comparer<TItem>.Default);", span="196-196"];
m4_85 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", span="194-194"];
m4_46 [cluster="QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", span="113-113"];
m4_47 [cluster="QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", file="CachingOptionChainProvider.cs", label="return enumerable.Select(selector).DefaultIfEmpty(defaultValue);", span="115-115"];
m4_48 [cluster="QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", span="113-113"];
m4_3 [cluster="Unk.ToDictionary", file="CachingOptionChainProvider.cs", label="Entry Unk.ToDictionary", span=""];
m4_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m4_11 [cluster="QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", span="46-46"];
m4_32 [cluster="HashSet<TResult>.cstr", file="CachingOptionChainProvider.cs", label="Entry HashSet<TResult>.cstr", span=""];
m4_81 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CachingOptionChainProvider.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_63 [cluster="Unk.Median", file="CachingOptionChainProvider.cs", label="Entry Unk.Median", span=""];
m4_117 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", span="279-279"];
m4_118 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="var e = enumerable.GetEnumerator()", span="281-281"];
m4_125 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="yield return list;", span="295-295"];
m4_128 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="yield return list;", span="300-300"];
m4_123 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="grouper(pred, e.Current)", span="289-289"];
m4_119 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="e.MoveNext()", span="283-283"];
m4_120 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="var list = new List<T> {e.Current}", span="285-285"];
m4_121 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="var pred = e.Current", span="286-286"];
m4_122 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="e.MoveNext()", span="287-287"];
m4_124 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="list.Add(e.Current)", span="291-291"];
m4_126 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="list = new List<T> {e.Current}", span="296-296"];
m4_127 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="pred = e.Current", span="298-298"];
m4_129 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", span="279-279"];
m4_12 [cluster="QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CachingOptionChainProvider.cs", label="return enumerable.ToDictionary(kvp => kvp.Key, kvp => kvp.Value);", span="48-48"];
m4_82 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="CachingOptionChainProvider.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m4_29 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="82-82"];
m4_30 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="CachingOptionChainProvider.cs", label="return new HashSet<TResult>(enumerable.Select(selector));", span="84-84"];
m4_31 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="82-82"];
m4_90 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", span="218-218"];
m4_91 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="enumerable is MemoizingEnumerable<T>", span="220-220"];
m4_92 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="return enumerable;", span="220-220"];
m4_93 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="return new MemoizingEnumerable<T>(enumerable);", span="221-221"];
m4_94 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", span="218-218"];
m4_89 [cluster="System.Collections.Generic.IList<TItem>.BinarySearch<TItem, TSearch>(TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.IList<TItem>.BinarySearch<TItem, TSearch>(TSearch, System.Func<TSearch, TItem, int>)", span="152-152"];
m4_130 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m4_23 [cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="CachingOptionChainProvider.cs", label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m4_54 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m4_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m4_28 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m4_55 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m4_96 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", span="234-234"];
m4_97 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CachingOptionChainProvider.cs", label="var current = start", span="237-237"];
m4_100 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CachingOptionChainProvider.cs", label="yield return current;", span="242-242"];
m4_103 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CachingOptionChainProvider.cs", label="yield return current;", span="250-250"];
m4_98 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CachingOptionChainProvider.cs", label=includeEndPoint, span="238-238"];
m4_99 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CachingOptionChainProvider.cs", label="current.CompareTo(end) <= 0", span="240-240"];
m4_101 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CachingOptionChainProvider.cs", label="current = incrementer(current)", span="243-243"];
m4_102 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CachingOptionChainProvider.cs", label="current.CompareTo(end) < 0", span="248-248"];
m4_104 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CachingOptionChainProvider.cs", label="current = incrementer(current)", span="251-251"];
m4_105 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", span="234-234"];
m4_107 [cluster="System.Func<T, TResult>.Invoke(T)", file="CachingOptionChainProvider.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_133 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_34 [cluster="QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", span="94-94"];
m4_35 [cluster="QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", file="CachingOptionChainProvider.cs", label="return enumerable.Where(item => !set.Contains(item));", span="96-96"];
m4_36 [cluster="QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", span="94-94"];
m4_64 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", span="152-152"];
m4_65 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="list == null", span="154-154"];
m4_67 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="comparer == null", span="158-158"];
m4_70 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="var upper = list.Count - 1", span="164-164"];
m4_73 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="var comparisonResult = comparer(value, list[middle])", span="169-169"];
m4_66 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="throw new ArgumentNullException(''list'');", span="156-156"];
m4_68 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="throw new ArgumentNullException(''comparer'');", span="160-160"];
m4_69 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="var lower = 0", span="163-163"];
m4_71 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="lower <= upper", span="166-166"];
m4_72 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="var middle = lower + (upper - lower) / 2", span="168-168"];
m4_79 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="return ~lower;", span="184-184"];
m4_75 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="upper = middle - 1", span="172-172"];
m4_77 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="lower = middle + 1", span="176-176"];
m4_78 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="return middle;", span="180-180"];
m4_74 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="comparisonResult < 0", span="170-170"];
m4_76 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="comparisonResult > 0", span="174-174"];
m4_80 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", span="152-152"];
m4_108 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", span="264-264"];
m4_109 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="CachingOptionChainProvider.cs", label="var hash = new HashSet<TPropery>()", span="266-266"];
m4_110 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="CachingOptionChainProvider.cs", label="return enumerable.Where(x => hash.Add(selector(x)));", span="267-267"];
m4_111 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", span="264-264"];
m4_56 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m4_20 [cluster="QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CachingOptionChainProvider.cs", label="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry", span=""];
m4_21 [cluster="QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CachingOptionChainProvider.cs", label="return new ReadOnlyDictionary<K, V>(enumerable.ToDictionary());", span="60-60"];
m4_22 [cluster="QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", span="58-58"];
m4_50 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", span="124-124"];
m4_51 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="var collection = enumerable.ToList()", span="126-126"];
m4_52 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="return collection.OrderBy(x => x).Skip(collection.Count/2).First();", span="127-127"];
m4_53 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", span="124-124"];
m4_33 [cluster="Unk.Select", file="CachingOptionChainProvider.cs", label="Entry Unk.Select", span=""];
m4_49 [cluster="Unk.DefaultIfEmpty", file="CachingOptionChainProvider.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m4_134 [file="CachingOptionChainProvider.cs", label="System.Collections.Generic.ISet<T>", span=""];
m4_135 [file="CachingOptionChainProvider.cs", label="System.Func<T, TPropery>", span=""];
m4_136 [file="CachingOptionChainProvider.cs", label=hash, span=""];
m5_83 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m5_0 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="66-66"];
m5_1 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="MaxOrders = int.MaxValue", span="68-68"];
m5_2 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="StartingPortfolioValue = 0", span="69-69"];
m5_22 [cluster="System.TimeSpan.FromHours(double)", file="ConsoleSetupHandler.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m5_9 [cluster="System.Collections.Generic.List<T>.List()", file="ConsoleSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_82 [cluster="object.GetType()", file="ConsoleSetupHandler.cs", label="Entry object.GetType()", span="0-0"];
m5_3 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="StartingDate = new DateTime(1998, 01, 01)", span="70-70"];
m5_72 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="530-530"];
m5_85 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="309-309"];
m5_4 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="MaximumRuntime = TimeSpan.FromDays(10 * 365)", span="71-71"];
m5_28 [cluster="Unk.SingleOrDefault", file="ConsoleSetupHandler.cs", label="Entry Unk.SingleOrDefault", span=""];
m5_29 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="Entry lambda expression", span="89-89"];
m5_26 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="names.SingleOrDefault(name => MatchTypeName(name, algorithmName))", span="89-89"];
m5_30 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="MatchTypeName(name, algorithmName)", span="89-89"];
m5_25 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="Entry lambda expression", span="89-89"];
m5_27 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="Exit lambda expression", span="89-89"];
m5_31 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="Exit lambda expression", span="89-89"];
m5_23 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="349-349"];
m5_99 [cluster="string.LastIndexOf(char)", file="ConsoleSetupHandler.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m5_74 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="580-580"];
m5_7 [cluster="System.DateTime.DateTime(int, int, int)", file="ConsoleSetupHandler.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m5_71 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="323-323"];
m5_70 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="547-547"];
m5_93 [cluster="Unk.>", file="ConsoleSetupHandler.cs", label="Entry Unk.>", span=""];
m5_20 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m5_10 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="81-81"];
m5_17 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="throw new Exception(error + '': try re-building algorithm.'');", span="91-91"];
m5_15 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="90-90"];
m5_16 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="!complete", span="91-91"];
m5_13 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="var algorithmName = Config.Get(''algorithm-type-name'')", span="85-85"];
m5_14 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromHours(1), names => names.SingleOrDefault(name => MatchTypeName(name, algorithmName)))", span="89-89"];
m5_18 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="return algorithm;", span="93-93"];
m5_12 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="IAlgorithm algorithm", span="84-84"];
m5_11 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="string error", span="83-83"];
m5_19 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="81-81"];
m5_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", span="27-27"];
m5_81 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="440-440"];
m5_8 [cluster="System.TimeSpan.FromDays(double)", file="ConsoleSetupHandler.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m5_100 [cluster="string.Substring(int)", file="ConsoleSetupHandler.cs", label="Entry string.Substring(int)", span="0-0"];
m5_80 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="ConsoleSetupHandler.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m5_41 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="121-121"];
m5_51 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0, file="ConsoleSetupHandler.cs", label="1: algorithm.Initialize()", span="146-146"];
m5_50 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()))", span="143-143"];
m5_52 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetDateTime(algorithm.StartDate.ConvertToUtc(algorithm.TimeZone))", span="149-149"];
m5_42 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="var initializeComplete = false", span="123-123"];
m5_43 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="baseJob.Type == PacketType.BacktestNode", span="129-129"];
m5_44 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="var backtestJob = baseJob as BacktestNodePacket", span="131-131"];
m5_45 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetMaximumOrders(int.MaxValue)", span="132-132"];
m5_46 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetParameters(baseJob.Parameters)", span="135-135"];
m5_47 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetLiveMode(false)", span="136-136"];
m5_48 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="137-137"];
m5_49 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="140-140"];
m5_53 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.PeriodStart = algorithm.StartDate", span="152-152"];
m5_54 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.PeriodFinish = algorithm.EndDate", span="153-153"];
m5_55 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.BacktestId = algorithm.GetType().Name", span="154-154"];
m5_57 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.UserId = baseJob.UserId", span="156-156"];
m5_58 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.Channel = baseJob.Channel", span="157-157"];
m5_60 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="StartingPortfolioValue = algorithm.Portfolio.Cash", span="161-161"];
m5_67 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.PostInitialize()", span="179-179"];
m5_68 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="return initializeComplete;", span="181-181"];
m5_61 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="throw new Exception(''The ConsoleSetupHandler is for backtests only. Use the BrokerageSetupHandler.'');", span="165-165"];
m5_56 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.Type = PacketType.BacktestNode", span="155-155"];
m5_59 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="StartingDate = backtestJob.PeriodStart", span="160-160"];
m5_62 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label=Exception, span="168-168"];
m5_65 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="Errors.Count == 0", span="174-174"];
m5_66 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="initializeComplete = true", span="176-176"];
m5_64 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err)", span="171-171"];
m5_63 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="Log.Error(err)", span="170-170"];
m5_69 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="121-121"];
m5_92 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConsoleSetupHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_32 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="208-208"];
m5_94 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs", label="string.IsNullOrEmpty(expectedTypeName)", span="210-210"];
m5_96 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs", label="return currentTypeFullName == expectedTypeName\r\n                || currentTypeFullName.Substring(currentTypeFullName.LastIndexOf('.') + 1) == expectedTypeName;", span="214-215"];
m5_95 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs", label="return true;", span="212-212"];
m5_97 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="208-208"];
m5_21 [cluster="Loader.cstr", file="ConsoleSetupHandler.cs", label="Entry Loader.cstr", span=""];
m5_76 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m5_84 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ConsoleSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_78 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="586-586"];
m5_75 [cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65"];
m5_98 [cluster="string.IsNullOrEmpty(string)", file="ConsoleSetupHandler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m5_5 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="Errors = new List<string>()", span="72-72"];
m5_6 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="66-66"];
m5_73 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="188-188"];
m5_86 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="190-190"];
m5_87 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="192-192"];
m5_90 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="return dataFeeds;", span="198-198"];
m5_88 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="dataFeedsConfigString != string.Empty", span="193-193"];
m5_89 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="195-195"];
m5_91 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="188-188"];
m5_79 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="303-303"];
m5_103 [file="ConsoleSetupHandler.cs", label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", span=""];
m5_104 [file="ConsoleSetupHandler.cs", label=algorithmName, span=""];
m8_142 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.Clone()", span="358-358"];
m8_143 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="IAlgorithm.cs", label="return (BaseData)MemberwiseClone();", span="360-360"];
m8_144 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.Clone()", span="358-358"];
m8_52 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="252-252"];
m8_86 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="var tradeBar = new T\r\n            {\r\n                Symbol = config.Symbol,\r\n                Period = config.Increment\r\n            }", span="255-259"];
m8_87 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="var csv = line.Split(',')", span="261-261"];
m8_88 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="config.Resolution == Resolution.Daily || config.Resolution == Resolution.Hour", span="262-262"];
m8_94 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Time = date.Date.AddMilliseconds(Convert.ToInt32(csv[0]))", span="274-274"];
m8_89 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Time = DateTime.ParseExact(csv[0], DateFormat.TwelveCharacter, CultureInfo.InvariantCulture)", span="265-265"];
m8_90 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Open = Convert.ToDecimal(csv[1])", span="266-266"];
m8_91 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.High = Convert.ToDecimal(csv[2])", span="267-267"];
m8_92 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Low = Convert.ToDecimal(csv[3])", span="268-268"];
m8_93 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Close = Convert.ToDecimal(csv[4])", span="269-269"];
m8_95 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Open = csv[1].ToDecimal()", span="275-275"];
m8_96 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.High = csv[2].ToDecimal()", span="276-276"];
m8_97 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Low = csv[3].ToDecimal()", span="277-277"];
m8_98 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Close = csv[4].ToDecimal()", span="278-278"];
m8_99 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="return tradeBar;", span="280-280"];
m8_100 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="252-252"];
m8_54 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="189-189"];
m8_55 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="config.SecurityType == SecurityType.Forex", span="191-191"];
m8_56 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="return ParseForex<TradeBar>(config, line, baseDate);", span="193-193"];
m8_57 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="config.SecurityType == SecurityType.Equity", span="195-195"];
m8_58 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="return ParseEquity<TradeBar>(config, line, baseDate);", span="197-197"];
m8_59 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="return null;", span="200-200"];
m8_60 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="189-189"];
m8_78 [cluster="string.Split(params char[])", file="IAlgorithm.cs", label="Entry string.Split(params char[])", span="0-0"];
m8_82 [cluster="System.Convert.ToInt32(string)", file="IAlgorithm.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m8_25 [cluster="System.DateTime.DateTime(long)", file="IAlgorithm.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m8_83 [cluster="System.DateTime.AddMilliseconds(double)", file="IAlgorithm.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m8_53 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m8_13 [cluster="System.TimeSpan.FromMinutes(double)", file="IAlgorithm.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m8_141 [cluster="System.IO.Path.Combine(params string[])", file="IAlgorithm.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m8_51 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="211-211"];
m8_61 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="var tradeBar = new T\r\n            {\r\n                Symbol = config.Symbol,\r\n                Period = config.Increment\r\n            }", span="214-218"];
m8_62 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="var csv = line.Split(',')", span="220-220"];
m8_63 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="config.Resolution == Resolution.Daily || config.Resolution == Resolution.Hour", span="221-221"];
m8_65 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Open = config.GetNormalizedPrice(Convert.ToDecimal(csv[1])/_scaleFactor)", span="225-225"];
m8_66 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.High = config.GetNormalizedPrice(Convert.ToDecimal(csv[2])/_scaleFactor)", span="226-226"];
m8_67 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Low = config.GetNormalizedPrice(Convert.ToDecimal(csv[3])/_scaleFactor)", span="227-227"];
m8_68 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Close = config.GetNormalizedPrice(Convert.ToDecimal(csv[4])/_scaleFactor)", span="228-228"];
m8_69 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Time = date.Date.AddMilliseconds(Convert.ToInt32(csv[0]))", span="233-233"];
m8_70 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Open = config.GetNormalizedPrice(csv[1].ToDecimal()/_scaleFactor)", span="234-234"];
m8_71 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.High = config.GetNormalizedPrice(csv[2].ToDecimal()/_scaleFactor)", span="235-235"];
m8_72 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Low = config.GetNormalizedPrice(csv[3].ToDecimal()/_scaleFactor)", span="236-236"];
m8_73 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Close = config.GetNormalizedPrice(csv[4].ToDecimal()/_scaleFactor)", span="237-237"];
m8_64 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Time = DateTime.ParseExact(csv[0], DateFormat.TwelveCharacter, CultureInfo.InvariantCulture)", span="224-224"];
m8_74 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="tradeBar.Volume = Convert.ToInt64(csv[5])", span="240-240"];
m8_75 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="return tradeBar;", span="241-241"];
m8_76 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="211-211"];
m8_37 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="151-151"];
m8_38 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="line == null", span="154-154"];
m8_40 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label=isLiveMode, span="159-159"];
m8_42 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="config.SecurityType", span="166-166"];
m8_44 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="return ParseEquity<TradeBar>(config, line, date);", span="170-170"];
m8_46 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="return ParseForex<TradeBar>(config, line, date);", span="174-174"];
m8_48 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="Log.Error(''DataModels: TradeBar(): Error Initializing - '' + config.SecurityType + '' - '' + err.Message + '' - '' + line)", span="179-179"];
m8_49 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="return new TradeBar{Symbol = config.Symbol, Period = config.Increment};", span="183-183"];
m8_39 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="return null;", span="156-156"];
m8_41 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="return new TradeBar();", span="161-161"];
m8_43 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="SecurityType.Equity", span="169-169"];
m8_45 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="SecurityType.Forex", span="173-173"];
m8_47 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label=Exception, span="177-177"];
m8_50 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="151-151"];
m8_101 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", span="291-291"];
m8_102 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Open == 0", span="294-294"];
m8_103 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Open = lastTrade", span="294-294"];
m8_104 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="lastTrade > High", span="295-295"];
m8_105 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="High = lastTrade", span="295-295"];
m8_106 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="lastTrade < Low", span="296-296"];
m8_107 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Low = lastTrade", span="296-296"];
m8_108 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Volume += Convert.ToInt32(volume)", span="298-298"];
m8_109 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Close = lastTrade", span="300-300"];
m8_110 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Value = lastTrade", span="301-301"];
m8_111 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", span="291-291"];
m8_140 [cluster="System.DateTime.ToString(string)", file="IAlgorithm.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m8_145 [cluster="object.MemberwiseClone()", file="IAlgorithm.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m8_81 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="187-187"];
m8_138 [cluster="string.ToLower()", file="IAlgorithm.cs", label="Entry string.ToLower()", span="0-0"];
m8_79 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="IAlgorithm.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m8_136 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="39-39"];
m8_113 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="313-313"];
m8_114 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label=isLiveMode, span="316-316"];
m8_118 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="config.SecurityType == SecurityType.Forex", span="323-323"];
m8_122 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="var securityTypePath = config.SecurityType.ToString().ToLower()", span="330-330"];
m8_123 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="var resolutionPath = config.Resolution.ToString().ToLower()", span="331-331"];
m8_124 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="var symbolPath = (string.IsNullOrEmpty(config.MappedSymbol) ? config.Symbol : config.MappedSymbol).ToLower()", span="332-332"];
m8_125 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="var countryCode = config.Country.ToString().ToLower()", span="333-333"];
m8_126 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="var liquiditySource = config.LiquditySource.ToString().ToLower()", span="334-334"];
m8_127 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="var filename = date.ToString(dateFormat) + ''_'' + dataType.ToString().ToLower() + ''.zip''", span="335-335"];
m8_128 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="config.Resolution == Resolution.Hour || config.Resolution == Resolution.Daily", span="338-338"];
m8_131 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="config.Country == CountryCode.None", span="345-345"];
m8_115 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="318-318"];
m8_116 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="var dateFormat = ''yyyyMMdd''", span="321-321"];
m8_117 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="var dataType = TickType.Trade", span="322-322"];
m8_119 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="dataType = TickType.Quote", span="325-325"];
m8_121 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="string source", span="329-329"];
m8_120 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="dateFormat = ''yyMMdd''", span="326-326"];
m8_132 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="source = Path.Combine(Constants.DataFolder, securityTypePath, liquiditySource, resolutionPath, symbolPath, filename)", span="348-348"];
m8_133 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="source = Path.Combine(Constants.DataFolder, securityTypePath, countryCode, resolutionPath, symbolPath, filename)", span="352-352"];
m8_129 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="filename = symbolPath + ''.zip''", span="341-341"];
m8_130 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="symbolPath = string.Empty", span="342-342"];
m8_134 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile);", span="355-355"];
m8_135 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="313-313"];
m8_137 [cluster="System.Enum.ToString()", file="IAlgorithm.cs", label="Entry System.Enum.ToString()", span="0-0"];
m8_84 [cluster="string.ToDecimal()", file="IAlgorithm.cs", label="Entry string.ToDecimal()", span="145-145"];
m8_112 [cluster="System.Convert.ToInt32(decimal)", file="IAlgorithm.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m8_85 [cluster="System.Convert.ToInt64(string)", file="IAlgorithm.cs", label="Entry System.Convert.ToInt64(string)", span="0-0"];
m8_77 [cluster="T.cstr", file="IAlgorithm.cs", label="Entry T.cstr", span=""];
m8_139 [cluster="string.IsNullOrEmpty(string)", file="IAlgorithm.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m8_0 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="87-87"];
m8_1 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Symbol = ''''", span="89-89"];
m8_2 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Time = new DateTime()", span="90-90"];
m8_3 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Value = 0", span="91-91"];
m8_4 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="DataType = MarketDataType.TradeBar", span="92-92"];
m8_5 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Open = 0", span="93-93"];
m8_6 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="High = 0", span="94-94"];
m8_7 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Low = 0", span="95-95"];
m8_8 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Close = 0", span="96-96"];
m8_9 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Volume = 0", span="97-97"];
m8_10 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Period = TimeSpan.FromMinutes(1)", span="98-98"];
m8_11 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar()", span="87-87"];
m8_80 [cluster="System.Convert.ToDecimal(string)", file="IAlgorithm.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m8_12 [cluster="System.DateTime.DateTime()", file="IAlgorithm.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m8_26 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="130-130"];
m8_27 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Time = time", span="132-132"];
m8_28 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Symbol = symbol", span="133-133"];
m8_29 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Value = close", span="134-134"];
m8_30 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Open = open", span="135-135"];
m8_31 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="High = high", span="136-136"];
m8_32 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Low = low", span="137-137"];
m8_33 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Close = close", span="138-138"];
m8_34 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Volume = volume", span="139-139"];
m8_35 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Period = period ?? TimeSpan.FromMinutes(1)", span="140-140"];
m8_36 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="130-130"];
m8_14 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="106-106"];
m8_15 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Time = new DateTime(original.Time.Ticks)", span="108-108"];
m8_16 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Symbol = original.Symbol", span="109-109"];
m8_17 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Value = original.Close", span="110-110"];
m8_18 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Open = original.Open", span="111-111"];
m8_19 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="High = original.High", span="112-112"];
m8_20 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Low = original.Low", span="113-113"];
m8_21 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Close = original.Close", span="114-114"];
m8_22 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Volume = original.Volume", span="115-115"];
m8_23 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Period = original.Period", span="116-116"];
m8_24 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="106-106"];
m8_146 [file="IAlgorithm.cs", label="QuantConnect.Data.Market.TradeBar", span=""];
m12_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="863-863"];
m12_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m12_282 [cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120"];
m12_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
m12_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="412-412"];
m12_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopMarket, security, quantity, tag, stopPrice: stopPrice, properties: DefaultOrderProperties?.Clone())", span="413-413"];
m12_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="414-414"];
m12_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="417-417"];
m12_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="420-420"];
m12_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="415-415"];
m12_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
m12_74 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="222-222"];
m12_203 [cluster="int.ToString()", file="QCAlgorithm.Trading.cs", label="Entry int.ToString()", span="0-0"];
m12_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531"];
m12_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return Order(strategy, Math.Abs(quantity) * -1);", span="533-533"];
m12_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531"];
m12_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85"];
m12_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1);", span="87-87"];
m12_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85"];
m12_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="848-848"];
m12_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="850-850"];
m12_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="848-848"];
m12_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m12_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="42-42"];
m12_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m12_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547"];
m12_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var orders = new List<OrderTicket>()", span="549-549"];
m12_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var strategyTag = strategy.Name + '' ('' + strategyQuantity.ToString() + '')''", span="552-552"];
m12_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.OptionLegs != null", span="555-555"];
m12_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.OptionLegs", span="557-557"];
m12_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var optionSeq = Securities.Where(kv => kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike)", span="559-562"];
m12_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var error = string.Format(''Couldn't find the option contract in algorithm securities list. Underlying: {0}, option {1}, strike {2}, expiration: {3}'',\r\n                                strategy.Underlying.ToString(), optionLeg.Right.ToString(), optionLeg.Strike.ToString(), optionLeg.Expiration.ToString())", span="566-567"];
m12_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var marketOrder = MarketOrder(option, optionLeg.Quantity * strategyQuantity, tag: strategyTag)", span="576-576"];
m12_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var limitOrder = LimitOrder(option, optionLeg.Quantity * strategyQuantity, optionLeg.OrderPrice, tag: strategyTag)", span="580-580"];
m12_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.UnderlyingLegs != null", span="590-590"];
m12_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.UnderlyingLegs", span="592-592"];
m12_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="!Securities.ContainsKey(strategy.Underlying)", span="594-594"];
m12_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var error = string.Format(''Couldn't find the option contract underlying in algorithm securities list. Underlying: {0}'', strategy.Underlying.ToString())", span="596-596"];
m12_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var marketOrder = MarketOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, tag: strategyTag)", span="603-603"];
m12_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var limitOrder = LimitOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, underlyingLeg.OrderPrice, tag: strategyTag)", span="607-607"];
m12_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(marketOrder)", span="577-577"];
m12_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(limitOrder)", span="581-581"];
m12_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(marketOrder)", span="604-604"];
m12_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(limitOrder)", span="608-608"];
m12_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return orders;", span="615-615"];
m12_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="optionLeg.OrderType", span="573-573"];
m12_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + optionLeg.OrderType.ToString());", span="584-584"];
m12_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="optionSeq.Count() != 1", span="564-564"];
m12_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var option = optionSeq.First().Key", span="571-571"];
m12_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(error);", span="568-568"];
m12_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Market", span="575-575"];
m12_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Limit", span="579-579"];
m12_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="underlyingLeg.OrderType", span="600-600"];
m12_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + underlyingLeg.OrderType.ToString());", span="611-611"];
m12_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(error);", span="597-597"];
m12_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Market", span="602-602"];
m12_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Limit", span="606-606"];
m12_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547"];
m12_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397"];
m12_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="399-399"];
m12_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397"];
m12_205 [cluster="Unk.Count", file="QCAlgorithm.Trading.cs", label="Entry Unk.Count", span=""];
m12_217 [cluster="string.Format(string, object)", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, object)", span="0-0"];
m12_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928"];
m12_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="930-930"];
m12_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="target == 0", span="937-937"];
m12_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var targetPortfolioValue = target * Portfolio.TotalPortfolioValue", span="940-940"];
m12_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var unitPrice = new MarketOrder(symbol, 1, UtcTime).GetValue(security)", span="948-948"];
m12_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var marginRemaining = Portfolio.GetMarginRemaining(symbol, direction)", span="952-952"];
m12_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var price = security.Price", span="931-931"];
m12_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return -security.Holdings.Quantity;", span="937-937"];
m12_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var currentHoldingsValue = security.Holdings.HoldingsValue", span="941-941"];
m12_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: orderQuantity -= orderQuantity % security.SymbolProperties.LotSize", span="965-965"];
m12_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: var order = new MarketOrder(security.Symbol, orderQuantity, UtcTime)", span="975-975"];
m12_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: orderValue = order.GetValue(security)", span="976-976"];
m12_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: orderFees = security.FeeModel.GetOrderFee(security, order)", span="977-977"];
m12_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: feeToPriceRatio < security.SymbolProperties.LotSize", span="981-981"];
m12_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=red, community=0, file="QCAlgorithm.Trading.cs", label="1: feeToPriceRatio = security.SymbolProperties.LotSize", span="983-983"];
m12_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: marginRequired = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="987-987"];
m12_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=red, community=0, file="QCAlgorithm.Trading.cs", label="0: var remainder = orderQuantity % security.SymbolProperties.LotSize", span="991-991"];
m12_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="price == 0", span="934-934"];
m12_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return 0;", span="934-934"];
m12_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var targetOrderValue = Math.Abs(targetPortfolioValue - currentHoldingsValue)", span="944-944"];
m12_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var direction = targetPortfolioValue > currentHoldingsValue ? OrderDirection.Buy : OrderDirection.Sell", span="945-945"];
m12_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: var orderQuantity = targetOrderValue / unitPrice", span="962-962"];
m12_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=red, community=0, file="QCAlgorithm.Trading.cs", label="0: marginRequired > marginRemaining || orderValue + orderFees > targetOrderValue", span="989-989"];
m12_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: return (direction == OrderDirection.Sell ? -1 : 1) * orderQuantity;", span="995-995"];
m12_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="unitPrice == 0", span="949-949"];
m12_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: feeToPriceRatio = orderFees / unitPrice", span="980-980"];
m12_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return 0;", span="949-949"];
m12_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="marginRemaining <= 0", span="953-953"];
m12_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return 0;", span="953-953"];
m12_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="decimal marginRequired", span="956-956"];
m12_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="decimal orderValue", span="957-957"];
m12_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="decimal orderFees", span="958-958"];
m12_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="0: var feeToPriceRatio = 0m", span="959-959"];
m12_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=red, community=0, file="QCAlgorithm.Trading.cs", label="1: orderQuantity -= feeToPriceRatio", span="971-971"];
m12_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=red, community=0, file="QCAlgorithm.Trading.cs", label="1: orderQuantity <= 0", span="972-972"];
m12_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="2: orderQuantity -= remainder", span="992-992"];
m12_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=red, community=0, file="QCAlgorithm.Trading.cs", label="1: return 0;", span="972-972"];
m12_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="2: remainder > 0", span="992-992"];
m12_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928"];
m12_66 [cluster="Unk.Any", file="QCAlgorithm.Trading.cs", label="Entry Unk.Any", span=""];
m12_406 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m12_210 [cluster="string.Format(string, params object[])", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m12_214 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m12_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m12_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="837-837"];
m12_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m12_278 [cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154"];
m12_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m12_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="294-294"];
m12_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m12_3 [cluster="System.Math.Abs(int)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m12_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304"];
m12_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="306-306"];
m12_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304"];
m12_12 [cluster="System.Math.Abs(decimal)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m12_8 [cluster="System.Math.Abs(double)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m12_204 [cluster="Unk.Where", file="QCAlgorithm.Trading.cs", label="Entry Unk.Where", span=""];
m12_305 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254"];
m12_202 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542"];
m12_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return GenerateOrders(strategy, quantity);", span="544-544"];
m12_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542"];
m12_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272"];
m12_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="274-274"];
m12_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnOpen, security, quantity, tag, DefaultOrderProperties?.Clone())", span="275-275"];
m12_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="276-276"];
m12_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="279-279"];
m12_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="282-282"];
m12_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="277-277"];
m12_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272"];
m12_308 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="765-765"];
m12_75 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="206-206"];
m12_76 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Resolution != Resolution.Daily", span="206-206"];
m12_77 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="206-206"];
m12_219 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike", span="559-562"];
m12_218 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="559-562"];
m12_220 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="559-562"];
m12_309 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Value", span="765-765"];
m12_310 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="765-765"];
m12_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m12_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Security security", span="879-879"];
m12_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!Securities.TryGetValue(symbol, out security)", span="880-880"];
m12_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="882-882"];
m12_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=liquidateExistingHoldings, span="887-887"];
m12_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="893-893"];
m12_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Order(holdingSymbol, -holdings.Quantity, false, tag)", span="896-896"];
m12_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var quantity = CalculateOrderQuantity(symbol, percentage)", span="902-902"];
m12_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="MarketOrder(symbol, quantity, false, tag)", span="905-905"];
m12_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return;", span="883-883"];
m12_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=Portfolio, span="889-889"];
m12_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var holdingSymbol = kvp.Key", span="891-891"];
m12_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var holdings = kvp.Value", span="892-892"];
m12_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Math.Abs(quantity) > 0", span="903-903"];
m12_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m12_385 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m12_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350"];
m12_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="352-352"];
m12_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350"];
m12_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1033-1033"];
m12_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)quantity);", span="1035-1035"];
m12_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1033-1033"];
m12_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158"];
m12_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="160-160"];
m12_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158"];
m12_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
m12_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="365-365"];
m12_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.Limit, security, quantity, tag, limitPrice: limitPrice, properties: DefaultOrderProperties?.Clone())", span="366-366"];
m12_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="367-367"];
m12_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="370-370"];
m12_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="373-373"];
m12_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="368-368"];
m12_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
m12_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
m12_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="434-434"];
m12_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
m12_280 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m12_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640"];
m12_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Security security", span="644-644"];
m12_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Securities.TryGetValue(request.Symbol, out security)", span="645-645"];
m12_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MissingSecurity, ''You haven't requested '' + request.Symbol.ToString() + '' data. Add this with AddSecurity() in the Initialize() Method.'');", span="647-647"];
m12_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity == 0 || request.Symbol == null || request.Symbol == QuantConnect.Symbol.Empty || Math.Abs(request.Quantity) < security.SymbolProperties.LotSize", span="651-651"];
m12_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.ZeroQuantity(request);", span="653-653"];
m12_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="658-658"];
m12_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="664-664"];
m12_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="666-666"];
m12_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.OptionExercise && !security.Exchange.ExchangeOpen", span="670-670"];
m12_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="672-672"];
m12_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="677-677"];
m12_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.QuoteCurrencyRequired, request.Symbol.Value + '': requires '' + quoteCurrency + '' in the cashbook to trade.'');", span="685-685"];
m12_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ConversionRateZero, request.Symbol.Value + '': requires '' + quoteCurrency + '' to have a non-zero conversion rate. This can be caused by lack of data.'');", span="689-689"];
m12_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' in the cashbook to trade.'');", span="699-699"];
m12_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexConversionRateZero, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' to have non-zero conversion rates. This can be caused by lack of data.'');", span="703-703"];
m12_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityHasNoData, ''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'');", span="710-710"];
m12_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="717-717"];
m12_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.OptionExercise", span="720-720"];
m12_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonExercisableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is not exercisable.'');", span="723-723"];
m12_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''The security with symbol ''' + request.Symbol.ToString() + ''' has a short option position. Only long option positions are exercisable.'');", span="726-726"];
m12_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity > security.Holdings.Quantity", span="728-728"];
m12_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''Cannot exercise more contracts of ''' + request.Symbol.ToString() + ''' than is currently available in the portfolio. '');", span="729-729"];
m12_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity <= 0.0m", span="731-731"];
m12_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="OrderResponse.ZeroQuantity(request)", span="732-732"];
m12_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.MarketOnClose", span="735-735"];
m12_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="745-745"];
m12_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Success(request);", span="750-750"];
m12_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.IsTradable", span="656-656"];
m12_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var price = security.Price", span="661-661"];
m12_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var quoteCurrency = security.QuoteCurrency.Symbol", span="682-682"];
m12_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.QuoteCurrency.ConversionRate == 0m", span="687-687"];
m12_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.Type == SecurityType.Forex || security.Type == SecurityType.Crypto", span="693-693"];
m12_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var baseCurrency = ((IBaseCurrencySymbol)security).BaseCurrencySymbol", span="696-696"];
m12_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.HasData", span="708-708"];
m12_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.Type != SecurityType.Option", span="722-722"];
m12_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.Holdings.IsShort", span="725-725"];
m12_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="737-737"];
m12_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="740-740"];
m12_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="price == 0", span="675-675"];
m12_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Cash quoteCash", span="681-681"];
m12_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Portfolio.CashBook.TryGetValue(quoteCurrency, out quoteCash)", span="683-683"];
m12_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Cash baseCash", span="695-695"];
m12_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="697-697"];
m12_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="baseCash.ConversionRate == 0m", span="701-701"];
m12_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Transactions.OrdersCount > _maxOrders", span="714-714"];
m12_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Status = AlgorithmStatus.Stopped", span="716-716"];
m12_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var latestSubmissionTime = nextMarketClose.AddMinutes(-15.50)", span="739-739"];
m12_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640"];
m12_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1043-1043"];
m12_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="var exchangeHours = MarketHoursDatabase\r\n                .FromDataFolder()\r\n                .GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType)", span="1045-1047"];
m12_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="var time = UtcTime.ConvertFromUtc(exchangeHours.TimeZone)", span="1049-1049"];
m12_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="return exchangeHours.IsOpen(time, false);", span="1051-1051"];
m12_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1043-1043"];
m12_16 [cluster="System.Math.Abs(float)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(float)", span="0-0"];
m12_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1642-1642"];
m12_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m12_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)quantity);", span="129-129"];
m12_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m12_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
m12_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity);", span="138-138"];
m12_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
m12_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
m12_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="250-250"];
m12_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
m12_207 [cluster="System.Enum.ToString()", file="QCAlgorithm.Trading.cs", label="Entry System.Enum.ToString()", span="0-0"];
m12_216 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m12_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="1009-1009"];
m12_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity, asynchronous, tag);", span="1011-1011"];
m12_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="1009-1009"];
m12_304 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m12_72 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="426-426"];
m12_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625"];
m12_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecksImpl(request)", span="627-627"];
m12_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="628-628"];
m12_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Error(response.ErrorMessage)", span="630-630"];
m12_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return response;", span="632-632"];
m12_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625"];
m12_215 [cluster="Unk.LimitOrder", file="QCAlgorithm.Trading.cs", label="Entry Unk.LimitOrder", span=""];
m12_402 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m12_403 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124"];
m12_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96"];
m12_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1);", span="98-98"];
m12_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96"];
m12_213 [cluster="Unk.MarketOrder", file="QCAlgorithm.Trading.cs", label="Entry Unk.MarketOrder", span=""];
m12_400 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m12_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1667-1667"];
m12_279 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m12_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384"];
m12_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="386-386"];
m12_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384"];
m12_206 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m12_68 [cluster="QuantConnect.Interfaces.IOrderProperties.Clone()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IOrderProperties.Clone()", span="25-25"];
m12_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
m12_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return Order(strategy, Math.Abs(quantity));", span="522-522"];
m12_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
m12_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184"];
m12_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="186-186"];
m12_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184"];
m12_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1021-1021"];
m12_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity);", span="1023-1023"];
m12_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1021-1021"];
m12_277 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
m12_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
m12_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="262-262"];
m12_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
m12_382 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
m12_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
m12_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="462-462"];
m12_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice, properties: DefaultOrderProperties?.Clone())", span="463-463"];
m12_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="464-464"];
m12_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="467-467"];
m12_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="471-471"];
m12_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="465-465"];
m12_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
m12_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
m12_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="339-339"];
m12_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
m12_381 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m12_401 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m12_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m12_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, Math.Abs(quantity));", span="64-64"];
m12_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m12_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
m12_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var option = (Option)Securities[optionSymbol]", span="483-483"];
m12_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.OptionExercise, option, quantity, tag, DefaultOrderProperties?.Clone())", span="485-485"];
m12_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="!asynchronous", span="504-504"];
m12_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label=IsWarmingUp, span="488-488"];
m12_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="490-490"];
m12_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="494-494"];
m12_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="497-497"];
m12_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.AddOrder(request)", span="501-501"];
m12_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="preOrderCheckResponse.IsError", span="495-495"];
m12_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="506-506"];
m12_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return ticket;", span="509-509"];
m12_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
m12_70 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="435-435"];
m12_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820"];
m12_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="!_locked", span="822-822"];
m12_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="_maxOrders = max", span="824-824"];
m12_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820"];
m12_281 [cluster="System.DateTime.AddMinutes(double)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m12_212 [cluster="Unk.First", file="QCAlgorithm.Trading.cs", label="Entry Unk.First", span=""];
m12_306 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="210-210"];
m12_209 [cluster="System.DateTime.ToString()", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m12_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m12_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, quantity);", span="147-147"];
m12_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m12_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m12_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="173-173"];
m12_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m12_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
m12_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="318-318"];
m12_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag, DefaultOrderProperties?.Clone())", span="319-319"];
m12_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="320-320"];
m12_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="323-323"];
m12_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="326-326"];
m12_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="321-321"];
m12_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
m12_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="915-915"];
m12_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return CalculateOrderQuantity(symbol, (decimal)target);", span="917-917"];
m12_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="915-915"];
m12_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m12_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="199-199"];
m12_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="205-205"];
m12_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag, DefaultOrderProperties?.Clone())", span="214-214"];
m12_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!asynchronous", span="233-233"];
m12_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!security.Exchange.ExchangeOpen", span="203-203"];
m12_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var anyNonDailySubscriptions = security.Subscriptions.Any(x => x.Resolution != Resolution.Daily)", span="206-206"];
m12_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="mooTicket.SubmitRequest.Response.IsSuccess && !anyNonDailySubscriptions", span="207-207"];
m12_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="209-209"];
m12_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return mooTicket;", span="211-211"];
m12_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=IsWarmingUp, span="217-217"];
m12_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="219-219"];
m12_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="223-223"];
m12_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="226-226"];
m12_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.AddOrder(request)", span="230-230"];
m12_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="preOrderCheckResponse.IsError", span="224-224"];
m12_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="235-235"];
m12_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return ticket;", span="238-238"];
m12_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m12_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m12_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="75-75"];
m12_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m12_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m12_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1m);", span="109-109"];
m12_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m12_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m12_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="53-53"];
m12_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m12_383 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="504-504"];
m12_211 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="QCAlgorithm.Trading.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m12_276 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m12_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m12_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var orderIdList = new List<int>()", span="762-762"];
m12_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="symbolToLiquidate = symbolToLiquidate ?? QuantConnect.Symbol.Empty", span="763-763"];
m12_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Transactions.CancelOrder(order.Id, tag)", span="797-797"];
m12_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="orderIdList.Add(ticket.OrderId)", span="808-808"];
m12_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="return orderIdList;", span="813-813"];
m12_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Securities.Keys.OrderBy(x => x.Value)", span="765-765"];
m12_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="symbol != symbolToLiquidate && symbolToLiquidate != QuantConnect.Symbol.Empty", span="768-768"];
m12_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var orders = Transactions.GetOpenOrders(symbol)", span="772-772"];
m12_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var quantity = Portfolio[symbol].Quantity", span="775-775"];
m12_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Order(symbol, -quantity - marketOrdersQuantity)", span="805-805"];
m12_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="778-778"];
m12_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label=orders, span="783-783"];
m12_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="quantity != 0", span="802-802"];
m12_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var marketOrdersQuantity = 0m", span="782-782"];
m12_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="792-792"];
m12_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="order.Type == OrderType.Market", span="785-785"];
m12_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.GetOrderTicket(order.Id)", span="788-788"];
m12_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="ticket != null", span="789-789"];
m12_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="ticket.Status == OrderStatus.Filled", span="806-806"];
m12_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m12_73 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144"];
m12_384 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m12_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", span="1054-1054"];
m12_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="QCAlgorithm.Trading.cs", label="return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag, properties);", span="1056-1056"];
m12_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", span="1054-1054"];
m12_307 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164"];
m12_208 [cluster="decimal.ToString()", file="QCAlgorithm.Trading.cs", label="Entry decimal.ToString()", span="0-0"];
m12_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m12_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="120-120"];
m12_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m12_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
m12_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="448-448"];
m12_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
m12_407 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m12_408 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Securities.Option.OptionStrategy", span=""];
m12_409 [file="QCAlgorithm.Trading.cs", label=optionLeg, span=""];
n43 -> n1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n43 -> n41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n7  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n8  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n9  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n10  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n10  [key=2, style=dotted];
n6 -> n0  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n11 -> n15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n19  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n25  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n26  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n16  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n16 -> n18  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n19 -> n20  [key=0, style=solid];
n19 -> n22  [color=darkseagreen4, key=1, label=aaa, style=dashed];
n17 -> n18  [key=0, style=solid];
n17 -> n17  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n18 -> n15  [key=0, style=solid];
n18 -> n27  [key=2, style=dotted];
n18 -> n26  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=0, style=solid];
n21 -> n24  [key=0, style=solid];
n21 -> n28  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n28  [key=2, style=dotted];
n24 -> n11  [color=blue, key=0, style=bold];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n39  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n31  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n31 -> n34  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n31 -> n35  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n31 -> n37  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n31 -> n38  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n39 -> n29  [color=blue, key=0, style=bold];
n32 -> n33  [key=0, style=solid];
n32 -> n32  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n32 -> n36  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n34 -> n35  [key=0, style=solid];
n34 -> n26  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n25  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n26  [key=2, style=dotted];
n38 -> n30  [key=0, style=solid];
n38 -> n25  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n36  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n30  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n26  [key=2, style=dotted];
n42 -> n40  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_3 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_3 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_9  [key=0, style=solid];
m1_6 -> m1_12  [key=2, style=dotted];
m1_6 -> m1_6  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_13  [key=2, style=dotted];
m1_7 -> m1_14  [key=2, style=dotted];
m1_7 -> m1_10  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m1_8 -> m1_10  [key=0, style=solid];
m1_8 -> m1_15  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_3  [color=blue, key=0, style=bold];
m1_18 -> m1_15  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Symbol>", style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_19 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m1_19 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m1_19 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m1_19 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m1_20 -> m1_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry", style=dashed];
m1_20 -> m1_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry", style=dashed];
m2_167 -> m2_204  [key=0, style=solid];
m2_167 -> m2_205  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>> GetConfiguredDataFeeds", style=bold];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_23  [key=2, style=dotted];
m2_204 -> m2_206  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
m2_204 -> m2_207  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_210  [key=2, style=dotted];
m2_205 -> m2_208  [color=darkseagreen4, key=1, label=dataFeeds, style=dashed];
m2_208 -> m2_209  [key=0, style=solid];
m2_206 -> m2_208  [key=0, style=solid];
m2_206 -> m2_207  [key=0, style=solid];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_211  [key=2, style=dotted];
m2_209 -> m2_167  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_126 -> m2_41  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IBrokerage brokerage", style=bold];
m2_126 -> m2_187  [key=0, style=solid];
m2_126 -> m2_190  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m2_126 -> m2_191  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_126 -> m2_192  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m2_126 -> m2_193  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_195  [key=2, style=dotted];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_196  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_197  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_198  [key=2, style=dotted];
m2_192 -> m2_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_193 -> m2_188  [key=0, style=solid];
m2_193 -> m2_199  [key=2, style=dotted];
m2_193 -> m2_200  [key=2, style=dotted];
m2_188 -> m2_194  [key=0, style=solid];
m2_188 -> m2_190  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_188 -> m2_191  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_188 -> m2_192  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_188 -> m2_193  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_202  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_117  [key=2, style=dotted];
m2_194 -> m2_126  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_146  [key=2, style=dotted];
m2_144 -> m2_114  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_165  [key=2, style=dotted];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_141  [key=2, style=dotted];
m2_163 -> m2_114  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_166  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_167  [key=2, style=dotted];
m2_151 -> m2_168  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_169  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_170  [key=2, style=dotted];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_171  [key=2, style=dotted];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_172  [key=2, style=dotted];
m2_155 -> m2_173  [key=2, style=dotted];
m2_155 -> m2_174  [key=2, style=dotted];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_158  [key=0, style=solid];
m2_156 -> m2_175  [key=2, style=dotted];
m2_157 -> m2_158  [key=0, style=solid];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_176  [key=2, style=dotted];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_162  [key=0, style=solid];
m2_160 -> m2_164  [key=0, style=solid];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_181  [key=2, style=dotted];
m2_179 -> m2_182  [key=2, style=dotted];
m2_179 -> m2_183  [key=2, style=dotted];
m2_179 -> m2_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_162  [key=0, style=solid];
m2_159 -> m2_164  [key=0, style=solid];
m2_164 -> m2_147  [color=blue, key=0, style=bold];
m2_37 -> m2_38  [key=0, style=solid];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_145  [key=0, style=solid];
m2_142 -> m2_144  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m2_142 -> m2_143  [key=0, style=solid];
m2_145 -> m2_142  [color=blue, key=0, style=bold];
m2_162 -> m2_163  [key=0, style=solid];
m2_161 -> m2_160  [key=0, style=solid];
m2_161 -> m2_161  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m2_161 -> m2_177  [key=2, style=dotted];
m2_178 -> m2_179  [key=0, style=solid];
m2_180 -> m2_178  [color=blue, key=0, style=bold];
m2_184 -> m2_185  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_21 -> m2_24  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=2, style=dotted];
m2_39 -> m2_37  [color=blue, key=0, style=bold];
m2_201 -> m2_202  [key=0, style=solid];
m2_186 -> m2_184  [color=blue, key=0, style=bold];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_185  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m2_22 -> m2_20  [color=blue, key=0, style=bold];
m2_202 -> m2_203  [key=0, style=solid];
m2_203 -> m2_201  [color=blue, key=0, style=bold];
m2_41 -> m2_55  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_46  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m2_41 -> m2_53  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_41 -> m2_148  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_149  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_150  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_151  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_152  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_153  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_154  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_155  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_156  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m2_41 -> m2_157  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_158  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m2_41 -> m2_60  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m2_41 -> m2_62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m2_41 -> m2_67  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m2_41 -> m2_71  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m2_41 -> m2_74  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_86  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m2_41 -> m2_88  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_179  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_94  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_97  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_99  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_100  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_101  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_102  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_107  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_108  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_41 -> m2_45  [color=darkorchid, key=3, label="method methodReturn bool Setup", style=bold];
m2_55 -> m2_56  [color=green, key=0, style=solid];
m2_55 -> m2_17  [color=green, key=2, style=dotted];
m2_55 -> m2_120  [color=green, key=2, style=dotted];
m2_55 -> m2_147  [color=green, key=1, label="lambda expression", style=dashed];
m2_42 -> m2_55  [color=green, key=1, label=liveJob, style=dashed];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_46  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m2_42 -> m2_47  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m2_42 -> m2_156  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m2_42 -> m2_159  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m2_53 -> m2_55  [color=green, key=1, label=controls, style=dashed];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_55  [color=green, key=0, style=solid];
m2_54 -> m2_119  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_59  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_114  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_114  [key=2, style=dotted];
m2_50 -> m2_50  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.BrokerageMessageEvent> brokerageOnMessage", style=bold];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_143  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m2_50 -> m2_144  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m2_50 -> m2_60  [color=darkseagreen4, key=1, label=brokerageOnMessage, style=dashed];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_114  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_123  [key=2, style=dotted];
m2_65 -> m2_114  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_114  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_114  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_85  [key=0, style=solid];
m2_80 -> m2_126  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_114  [key=2, style=dotted];
m2_93 -> m2_89  [key=0, style=solid];
m2_93 -> m2_132  [key=2, style=dotted];
m2_93 -> m2_114  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_114  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_112  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_141  [key=2, style=dotted];
m2_111 -> m2_114  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_115  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_118  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_118  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_67  [key=0, style=solid];
m2_62 -> m2_121  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_70  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_124  [key=2, style=dotted];
m2_74 -> m2_72  [key=0, style=solid];
m2_74 -> m2_125  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_127  [key=2, style=dotted];
m2_86 -> m2_89  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_129  [key=2, style=dotted];
m2_88 -> m2_97  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m2_88 -> m2_99  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m2_88 -> m2_100  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_101  [key=0, style=solid];
m2_94 -> m2_133  [key=2, style=dotted];
m2_97 -> m2_101  [key=0, style=solid];
m2_97 -> m2_134  [key=2, style=dotted];
m2_99 -> m2_101  [key=0, style=solid];
m2_99 -> m2_135  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_136  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_137  [key=2, style=dotted];
m2_102 -> m2_89  [key=0, style=solid];
m2_102 -> m2_138  [key=2, style=dotted];
m2_102 -> m2_139  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_140  [key=2, style=dotted];
m2_45 -> m2_113  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_46  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_50  [key=0, style=solid];
m2_47 -> m2_116  [key=2, style=dotted];
m2_49 -> m2_113  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_117  [key=2, style=dotted];
m2_58 -> m2_112  [key=0, style=solid];
m2_58 -> m2_113  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_122  [key=2, style=dotted];
m2_66 -> m2_112  [key=0, style=solid];
m2_66 -> m2_113  [key=0, style=solid];
m2_69 -> m2_112  [key=0, style=solid];
m2_69 -> m2_113  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_122  [key=2, style=dotted];
m2_78 -> m2_112  [key=0, style=solid];
m2_78 -> m2_113  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_117  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_117  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_122  [key=2, style=dotted];
m2_84 -> m2_112  [key=0, style=solid];
m2_84 -> m2_113  [key=0, style=solid];
m2_87 -> m2_93  [color=darkseagreen4, key=1, label=supportedSecurityTypes, style=dashed];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_128  [key=2, style=dotted];
m2_87 -> m2_91  [color=darkseagreen4, key=1, label=supportedSecurityTypes, style=dashed];
m2_89 -> m2_93  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_89 -> m2_94  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_89 -> m2_97  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_89 -> m2_99  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_89 -> m2_100  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_89 -> m2_101  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_89 -> m2_102  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_89 -> m2_107  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_103  [key=0, style=solid];
m2_89 -> m2_91  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_89 -> m2_92  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_89 -> m2_95  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_89 -> m2_96  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_89 -> m2_98  [color=darkseagreen4, key=1, label=holding, style=dashed];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_131  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_122  [key=2, style=dotted];
m2_106 -> m2_112  [key=0, style=solid];
m2_106 -> m2_113  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_117  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_117  [key=2, style=dotted];
m2_72 -> m2_74  [color=darkseagreen4, key=1, label=cash, style=dashed];
m2_72 -> m2_79  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_75  [key=0, style=solid];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_117  [key=2, style=dotted];
m2_91 -> m2_94  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_130  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_117  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_98  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_100  [key=0, style=solid];
m2_75 -> m2_76  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_117  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_113 -> m2_41  [color=blue, key=0, style=bold];
m2_215 -> m2_216  [key=0, style=solid];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_218  [key=0, style=solid];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_219  [key=2, style=dotted];
m2_218 -> m2_215  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_5  [key=2, style=dotted];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_2 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Signals.SignalCollection", style=dashed];
m2_2 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Signals.SignalCollection", style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_6 -> m2_2  [color=blue, key=0, style=bold];
m2_114 -> m2_44  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m2_114 -> m2_48  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m2_114 -> m2_57  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m2_114 -> m2_68  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m2_114 -> m2_212  [key=0, style=solid];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_214  [key=2, style=dotted];
m2_213 -> m2_114  [color=blue, key=0, style=bold];
m2_25 -> m2_31  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_25 -> m2_26  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_35  [key=2, style=dotted];
m2_29 -> m2_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_33  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerageFactory", style=dashed];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_36  [key=2, style=dotted];
m2_26 -> m2_29  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m2_26 -> m2_31  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_38  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m2_27 -> m2_29  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_28 -> m2_33  [key=0, style=solid];
m2_28 -> m2_34  [key=2, style=dotted];
m2_33 -> m2_25  [color=blue, key=0, style=bold];
m2_7 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_7 -> m2_9  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Interfaces.IAlgorithm CreateAlgorithmInstance", style=bold];
m2_7 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Packets.SignalPacket", style=dashed];
m2_7 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Packets.SignalPacket", style=dashed];
m2_7 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Packets.SignalPacket", style=dashed];
m2_10 -> m2_17  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_16  [key=2, style=dotted];
m2_10 -> m2_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_18  [key=2, style=dotted];
m2_11 -> m2_13  [color=darkseagreen4, key=1, label=error, style=dashed];
m2_11 -> m2_14  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m2_8 -> m2_9  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=0, style=solid];
m2_13 -> n28  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_7  [color=blue, key=0, style=bold];
m2_220 -> m2_55  [color=green, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_144  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_148  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_163  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_93  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_108  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_109  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_111  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_112  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_212  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_220 -> m2_217  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m2_222 -> m2_148  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_222 -> m2_149  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_222 -> m2_150  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_222 -> m2_151  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_222 -> m2_152  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_222 -> m2_153  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_222 -> m2_154  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_222 -> m2_155  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_222 -> m2_157  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_222 -> m2_158  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_222 -> m2_160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_222 -> m2_179  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_223 -> m2_150  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_224 -> m2_154  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m2_225 -> m2_156  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m2_226 -> m2_156  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m2_226 -> m2_159  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m2_221 -> m2_38  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m2_227 -> m2_202  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_25 -> m4_26  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_28  [key=2, style=dotted];
m4_27 -> m4_25  [color=blue, key=0, style=bold];
m4_42 -> m4_43  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_45  [key=2, style=dotted];
m4_44 -> m4_42  [color=blue, key=0, style=bold];
m4_13 -> m4_11  [color=blue, key=0, style=bold];
m4_60 -> m4_61  [key=0, style=solid];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_33  [key=2, style=dotted];
m4_61 -> m4_63  [key=2, style=dotted];
m4_62 -> m4_60  [color=blue, key=0, style=bold];
m4_113 -> m4_114  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_13  [key=2, style=dotted];
m4_7 -> m4_14  [key=2, style=dotted];
m4_7 -> m4_10  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_4  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_6  [color=darkseagreen4, key=1, label=entry, style=dashed];
m4_6 -> m4_9  [key=0, style=solid];
m4_6 -> m4_12  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_10  [key=2, style=dotted];
m4_8 -> m4_15  [key=2, style=dotted];
m4_9 -> m4_7  [color=blue, key=0, style=bold];
m4_9 -> m4_10  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_17 -> m4_18  [color=green, key=0, style=solid];
m4_15 -> m4_16  [color=green, key=0, style=solid];
m4_15 -> m4_15  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<K, V>", style=dashed];
m4_15 -> m4_17  [color=green, key=1, label="System.Collections.Generic.List<QuantConnect.Symbol>", style=dashed];
m4_16 -> m4_14  [color=blue, key=0, style=bold];
m4_16 -> m4_17  [color=green, key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<K, V>", style=dashed];
m4_18 -> m4_15  [color=blue, key=0, style=bold];
m4_19 -> m4_17  [color=blue, key=0, style=bold];
m4_19 -> m4_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m4_19 -> m4_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m4_19 -> m4_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m4_19 -> m4_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_41  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_40 -> m4_38  [color=blue, key=0, style=bold];
m4_57 -> m4_58  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_59 -> m4_57  [color=blue, key=0, style=bold];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_107  [key=2, style=dotted];
m4_114 -> m4_116  [key=2, style=dotted];
m4_115 -> m4_113  [color=blue, key=0, style=bold];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_83  [color=darkorchid, key=3, label="Parameter variable TItem value", style=bold];
m4_86 -> m4_64  [color=darkorchid, key=3, label="method methodReturn int BinarySearch", style=bold];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_89  [key=2, style=dotted];
m4_88 -> m4_86  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1 -> m4_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_86  [color=darkorchid, key=3, label="method methodReturn int BinarySearch", style=bold];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_86  [key=2, style=dotted];
m4_85 -> m4_83  [color=blue, key=0, style=bold];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_33  [key=2, style=dotted];
m4_47 -> m4_49  [key=2, style=dotted];
m4_48 -> m4_46  [color=blue, key=0, style=bold];
m4_3 -> m4_8  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_6  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_3 -> m4_7  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_3  [color=blue, key=0, style=bold];
m4_11 -> m4_12  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_125  [color=crimson, key=0, style=bold];
m4_117 -> m4_128  [color=crimson, key=0, style=bold];
m4_117 -> m4_123  [color=darkseagreen4, key=1, label="System.Func<T, T, bool>", style=dashed];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_130  [key=2, style=dotted];
m4_118 -> m4_120  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_118 -> m4_121  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_118 -> m4_122  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_118 -> m4_123  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_118 -> m4_124  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_118 -> m4_126  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_118 -> m4_127  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_125 -> m4_126  [key=0, style=solid];
m4_128 -> m4_129  [key=0, style=solid];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_125  [key=0, style=solid];
m4_123 -> m4_82  [key=2, style=dotted];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_129  [key=0, style=solid];
m4_119 -> m4_131  [key=2, style=dotted];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_132  [key=2, style=dotted];
m4_120 -> m4_124  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_120 -> m4_125  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_120 -> m4_128  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_123  [color=darkseagreen4, key=1, label=pred, style=dashed];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_128  [key=0, style=solid];
m4_122 -> m4_131  [key=2, style=dotted];
m4_124 -> m4_127  [key=0, style=solid];
m4_124 -> m4_133  [key=2, style=dotted];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_132  [key=2, style=dotted];
m4_126 -> m4_128  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_127 -> m4_122  [key=0, style=solid];
m4_129 -> m4_117  [color=blue, key=0, style=bold];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_3  [key=2, style=dotted];
m4_12 -> m4_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_12 -> m4_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=2, style=dotted];
m4_30 -> m4_33  [key=2, style=dotted];
m4_31 -> m4_29  [color=blue, key=0, style=bold];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_92  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m4_90 -> m4_93  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m4_90 -> m4_90  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<T> Memoize", style=bold];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_93  [key=0, style=solid];
m4_92 -> m4_94  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_95  [key=2, style=dotted];
m4_94 -> m4_90  [color=blue, key=0, style=bold];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_100  [color=crimson, key=0, style=bold];
m4_96 -> m4_103  [color=crimson, key=0, style=bold];
m4_96 -> m4_98  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_96 -> m4_99  [color=darkseagreen4, key=1, label=T, style=dashed];
m4_96 -> m4_101  [color=darkseagreen4, key=1, label="System.Func<T, T>", style=dashed];
m4_96 -> m4_102  [color=darkseagreen4, key=1, label=T, style=dashed];
m4_96 -> m4_104  [color=darkseagreen4, key=1, label="System.Func<T, T>", style=dashed];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_99  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_97 -> m4_100  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_97 -> m4_101  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_97 -> m4_102  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_97 -> m4_103  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_97 -> m4_104  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_97 -> m4_96  [color=darkorchid, key=3, label="Local variable T current", style=bold];
m4_100 -> m4_101  [key=0, style=solid];
m4_103 -> m4_104  [key=0, style=solid];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_102  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_105  [key=0, style=solid];
m4_99 -> m4_106  [key=2, style=dotted];
m4_101 -> m4_99  [key=0, style=solid];
m4_101 -> m4_107  [key=2, style=dotted];
m4_101 -> m4_101  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_105  [key=0, style=solid];
m4_102 -> m4_106  [key=2, style=dotted];
m4_104 -> m4_99  [key=0, style=solid];
m4_104 -> m4_107  [key=2, style=dotted];
m4_104 -> m4_104  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_105 -> m4_96  [color=blue, key=0, style=bold];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.ISet<T>", style=dashed];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=2, style=dotted];
m4_35 -> m4_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_36 -> m4_34  [color=blue, key=0, style=bold];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_67  [color=darkseagreen4, key=1, label="System.Func<TSearch, TItem, int>", style=dashed];
m4_64 -> m4_70  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<TItem>", style=dashed];
m4_64 -> m4_73  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<TItem>", style=dashed];
m4_64 -> m4_72  [color=darkorchid, key=3, label="method methodReturn int BinarySearch", style=bold];
m4_64 -> m4_86  [color=darkorchid, key=3, label="Parameter variable TSearch value", style=bold];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_67  [key=0, style=solid];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_69  [key=0, style=solid];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_72  [color=darkseagreen4, key=1, label=upper, style=dashed];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_82  [key=2, style=dotted];
m4_73 -> m4_76  [color=darkseagreen4, key=1, label=comparisonResult, style=dashed];
m4_66 -> m4_80  [key=0, style=solid];
m4_66 -> m4_81  [key=2, style=dotted];
m4_68 -> m4_80  [key=0, style=solid];
m4_68 -> m4_81  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_71  [color=darkseagreen4, key=1, label=lower, style=dashed];
m4_69 -> m4_72  [color=darkseagreen4, key=1, label=lower, style=dashed];
m4_69 -> m4_79  [color=darkseagreen4, key=1, label=lower, style=dashed];
m4_69 -> m4_69  [color=darkorchid, key=3, label="Local variable int lower", style=bold];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_79  [key=0, style=solid];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_75  [color=darkseagreen4, key=1, label=middle, style=dashed];
m4_72 -> m4_77  [color=darkseagreen4, key=1, label=middle, style=dashed];
m4_72 -> m4_78  [color=darkseagreen4, key=1, label=middle, style=dashed];
m4_79 -> m4_80  [key=0, style=solid];
m4_75 -> m4_71  [key=0, style=solid];
m4_77 -> m4_71  [key=0, style=solid];
m4_77 -> m4_79  [color=darkseagreen4, key=1, label=lower, style=dashed];
m4_78 -> m4_80  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_76  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [key=0, style=solid];
m4_80 -> m4_64  [color=blue, key=0, style=bold];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_110  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m4_108 -> m4_114  [color=darkseagreen4, key=1, label="System.Func<T, TPropery>", style=dashed];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_112  [key=2, style=dotted];
m4_109 -> m4_114  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_37  [key=2, style=dotted];
m4_110 -> m4_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_111 -> m4_108  [color=blue, key=0, style=bold];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_16  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry", style=dashed];
m4_20 -> m4_17  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry", style=dashed];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=2, style=dotted];
m4_21 -> m4_24  [key=2, style=dotted];
m4_22 -> m4_20  [color=blue, key=0, style=bold];
m4_50 -> m4_51  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_10  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_54  [key=2, style=dotted];
m4_52 -> m4_55  [key=2, style=dotted];
m4_52 -> m4_56  [key=2, style=dotted];
m4_52 -> m4_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_53 -> m4_50  [color=blue, key=0, style=bold];
m4_134 -> m4_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.ISet<T>", style=dashed];
m4_135 -> m4_114  [color=darkseagreen4, key=1, label="System.Func<T, TPropery>", style=dashed];
m4_136 -> m4_114  [color=darkseagreen4, key=1, label=hash, style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_7  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_8  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_28  [key=2, style=dotted];
m5_26 -> m5_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_30 -> m5_32  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_25 -> m5_26  [key=0, style=solid];
m5_27 -> m5_25  [color=blue, key=0, style=bold];
m5_31 -> m5_29  [color=blue, key=0, style=bold];
m5_10 -> m5_15  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_14  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m5_10 -> m5_12  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Interfaces.IAlgorithm CreateAlgorithmInstance", style=bold];
m5_17 -> n28  [key=2, style=dotted];
m5_17 -> m5_19  [key=0, style=solid];
m5_15 -> m5_17  [color=darkseagreen4, key=1, label=error, style=dashed];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_23  [key=2, style=dotted];
m5_15 -> m5_18  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=0, style=solid];
m5_13 -> m5_20  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_26  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m5_13 -> m5_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_21  [key=2, style=dotted];
m5_14 -> m5_22  [key=2, style=dotted];
m5_14 -> m5_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m5_18 -> m5_19  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_19 -> m5_10  [color=blue, key=0, style=bold];
m5_41 -> m5_51  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_43  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m5_41 -> m5_44  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m5_41 -> m5_45  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_46  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_47  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_48  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_49  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_50  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_52  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_53  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_54  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_55  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_57  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m5_41 -> m5_58  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m5_41 -> m5_60  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_41 -> m5_67  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_51 -> m5_52  [color=green, key=0, style=solid];
m5_51 -> m5_79  [color=green, key=2, style=dotted];
m5_50 -> m5_51  [color=green, key=0, style=solid];
m5_50 -> m5_76  [key=2, style=dotted];
m5_50 -> m5_77  [key=2, style=dotted];
m5_50 -> m5_78  [key=2, style=dotted];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_80  [key=2, style=dotted];
m5_52 -> m5_81  [key=2, style=dotted];
m5_42 -> m5_42  [color=darkorchid, key=3, label="Local variable bool initializeComplete", style=bold];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_68  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_61  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_53  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m5_44 -> m5_54  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m5_44 -> m5_55  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m5_44 -> m5_56  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m5_44 -> m5_57  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m5_44 -> m5_58  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m5_44 -> m5_59  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_70  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_71  [key=2, style=dotted];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_72  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_73  [key=2, style=dotted];
m5_48 -> m5_74  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_75  [key=2, style=dotted];
m5_53 -> m5_54  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_82  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_60 -> m5_62  [key=0, style=solid];
m5_60 -> m5_65  [key=0, style=solid];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_85  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_61 -> m5_65  [key=0, style=solid];
m5_61 -> n28  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_65 -> m5_67  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_68  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_84  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_83  [key=2, style=dotted];
m5_69 -> m5_41  [color=blue, key=0, style=bold];
m5_32 -> m5_13  [color=darkorchid, key=3, label="Parameter variable string expectedTypeName", style=bold];
m5_32 -> m5_14  [color=darkorchid, key=3, label="Parameter variable string currentTypeFullName", style=bold];
m5_32 -> m5_94  [key=0, style=solid];
m5_32 -> m5_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_32 -> m5_95  [color=darkorchid, key=3, label="method methodReturn bool MatchTypeName", style=bold];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_96  [key=0, style=solid];
m5_94 -> m5_98  [key=2, style=dotted];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_99  [key=2, style=dotted];
m5_96 -> m5_100  [key=2, style=dotted];
m5_95 -> m5_97  [key=0, style=solid];
m5_97 -> m5_32  [color=blue, key=0, style=bold];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_9  [key=2, style=dotted];
m5_6 -> m5_0  [color=blue, key=0, style=bold];
m5_73 -> m5_86  [key=0, style=solid];
m5_73 -> m5_87  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>> GetConfiguredDataFeeds", style=bold];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_20  [key=2, style=dotted];
m5_86 -> m5_88  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
m5_86 -> m5_89  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_92  [key=2, style=dotted];
m5_87 -> m5_90  [color=darkseagreen4, key=1, label=dataFeeds, style=dashed];
m5_90 -> m5_91  [key=0, style=solid];
m5_88 -> m5_90  [key=0, style=solid];
m5_88 -> m5_89  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_93  [key=2, style=dotted];
m5_91 -> m5_73  [color=blue, key=0, style=bold];
m5_103 -> m5_60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m5_103 -> m5_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m5_103 -> m5_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m5_103 -> m5_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m5_103 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m5_103 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m5_103 -> m5_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m5_103 -> m5_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m5_103 -> m5_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m5_104 -> m5_26  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m5_104 -> m5_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m8_142 -> m8_143  [key=0, style=solid];
m8_143 -> m8_144  [key=0, style=solid];
m8_143 -> m8_145  [key=2, style=dotted];
m8_144 -> m8_142  [color=blue, key=0, style=bold];
m8_52 -> m8_86  [key=0, style=solid];
m8_52 -> m8_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_52 -> m8_88  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_52 -> m8_94  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_77  [key=2, style=dotted];
m8_86 -> m8_89  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_86 -> m8_90  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_86 -> m8_91  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_86 -> m8_92  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_86 -> m8_93  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_86 -> m8_94  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_86 -> m8_95  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_86 -> m8_96  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_86 -> m8_97  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_86 -> m8_98  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_86 -> m8_99  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_78  [key=2, style=dotted];
m8_87 -> m8_89  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_87 -> m8_90  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_87 -> m8_91  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_87 -> m8_92  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_87 -> m8_93  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_87 -> m8_94  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_87 -> m8_95  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_87 -> m8_96  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_87 -> m8_97  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_87 -> m8_98  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_94  [key=0, style=solid];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_82  [key=2, style=dotted];
m8_94 -> m8_83  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_79  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_80  [key=2, style=dotted];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_80  [key=2, style=dotted];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_80  [key=2, style=dotted];
m8_93 -> m8_99  [key=0, style=solid];
m8_93 -> m8_80  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_84  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_84  [key=2, style=dotted];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_84  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_84  [key=2, style=dotted];
m8_99 -> m8_100  [key=0, style=solid];
m8_100 -> m8_52  [color=blue, key=0, style=bold];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_54 -> m8_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_54 -> m8_58  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_57  [key=0, style=solid];
m8_56 -> m8_60  [key=0, style=solid];
m8_56 -> m8_52  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_59  [key=0, style=solid];
m8_58 -> m8_60  [key=0, style=solid];
m8_58 -> m8_51  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_60 -> m8_54  [color=blue, key=0, style=bold];
m8_51 -> m8_61  [key=0, style=solid];
m8_51 -> m8_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_51 -> m8_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_51 -> m8_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_51 -> m8_66  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_51 -> m8_67  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_51 -> m8_68  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_51 -> m8_69  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m8_51 -> m8_70  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_51 -> m8_71  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_51 -> m8_72  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_51 -> m8_73  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_77  [key=2, style=dotted];
m8_61 -> m8_64  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_61 -> m8_65  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_61 -> m8_66  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_61 -> m8_67  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_61 -> m8_68  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_61 -> m8_69  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_61 -> m8_70  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_61 -> m8_71  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_61 -> m8_72  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_61 -> m8_73  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_61 -> m8_74  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_61 -> m8_75  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_78  [key=2, style=dotted];
m8_62 -> m8_64  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_62 -> m8_65  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_62 -> m8_66  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_62 -> m8_67  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_62 -> m8_68  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_62 -> m8_69  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_62 -> m8_70  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_62 -> m8_71  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_62 -> m8_72  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_62 -> m8_73  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_62 -> m8_74  [color=darkseagreen4, key=1, label=csv, style=dashed];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_69  [key=0, style=solid];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_80  [key=2, style=dotted];
m8_65 -> m8_81  [key=2, style=dotted];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_80  [key=2, style=dotted];
m8_66 -> m8_81  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_80  [key=2, style=dotted];
m8_67 -> m8_81  [key=2, style=dotted];
m8_68 -> m8_74  [key=0, style=solid];
m8_68 -> m8_80  [key=2, style=dotted];
m8_68 -> m8_81  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_82  [key=2, style=dotted];
m8_69 -> m8_83  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_84  [key=2, style=dotted];
m8_70 -> m8_81  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_84  [key=2, style=dotted];
m8_71 -> m8_81  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_84  [key=2, style=dotted];
m8_72 -> m8_81  [key=2, style=dotted];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_84  [key=2, style=dotted];
m8_73 -> m8_81  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_79  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_85  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_76 -> m8_51  [color=blue, key=0, style=bold];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_40  [color=darkseagreen4, key=1, label=bool, style=dashed];
m8_37 -> m8_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_37 -> m8_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_37 -> m8_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_37 -> m8_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_37 -> m8_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_40  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=0, style=solid];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_45  [key=0, style=solid];
m8_44 -> m8_50  [key=0, style=solid];
m8_44 -> m8_51  [key=2, style=dotted];
m8_46 -> m8_50  [key=0, style=solid];
m8_46 -> m8_52  [key=2, style=dotted];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_53  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_0  [key=2, style=dotted];
m8_39 -> m8_50  [key=0, style=solid];
m8_41 -> m8_50  [key=0, style=solid];
m8_41 -> m8_0  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_47 -> m8_48  [key=0, style=solid];
m8_50 -> m8_37  [color=blue, key=0, style=bold];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_103  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_101 -> m8_104  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_101 -> m8_105  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_101 -> m8_106  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_101 -> m8_107  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_101 -> m8_108  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_101 -> m8_109  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_101 -> m8_110  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_104  [key=0, style=solid];
m8_103 -> m8_104  [key=0, style=solid];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_106  [key=0, style=solid];
m8_105 -> m8_106  [key=0, style=solid];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_108  [key=0, style=solid];
m8_107 -> m8_108  [key=0, style=solid];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_112  [key=2, style=dotted];
m8_109 -> m8_110  [key=0, style=solid];
m8_110 -> m8_111  [key=0, style=solid];
m8_111 -> m8_101  [color=blue, key=0, style=bold];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_113 -> m8_122  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_113 -> m8_123  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_113 -> m8_124  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_113 -> m8_125  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_113 -> m8_126  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_113 -> m8_127  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m8_113 -> m8_128  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_113 -> m8_131  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_116  [key=0, style=solid];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_121  [key=0, style=solid];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_137  [key=2, style=dotted];
m8_122 -> m8_138  [key=2, style=dotted];
m8_122 -> m8_132  [color=darkseagreen4, key=1, label=securityTypePath, style=dashed];
m8_122 -> m8_133  [color=darkseagreen4, key=1, label=securityTypePath, style=dashed];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_137  [key=2, style=dotted];
m8_123 -> m8_138  [key=2, style=dotted];
m8_123 -> m8_132  [color=darkseagreen4, key=1, label=resolutionPath, style=dashed];
m8_123 -> m8_133  [color=darkseagreen4, key=1, label=resolutionPath, style=dashed];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_139  [key=2, style=dotted];
m8_124 -> m8_138  [key=2, style=dotted];
m8_124 -> m8_129  [color=darkseagreen4, key=1, label=symbolPath, style=dashed];
m8_124 -> m8_132  [color=darkseagreen4, key=1, label=symbolPath, style=dashed];
m8_124 -> m8_133  [color=darkseagreen4, key=1, label=symbolPath, style=dashed];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_137  [key=2, style=dotted];
m8_125 -> m8_138  [key=2, style=dotted];
m8_125 -> m8_133  [color=darkseagreen4, key=1, label=countryCode, style=dashed];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_137  [key=2, style=dotted];
m8_126 -> m8_138  [key=2, style=dotted];
m8_126 -> m8_132  [color=darkseagreen4, key=1, label=liquiditySource, style=dashed];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_140  [key=2, style=dotted];
m8_127 -> m8_137  [key=2, style=dotted];
m8_127 -> m8_138  [key=2, style=dotted];
m8_127 -> m8_132  [color=darkseagreen4, key=1, label=filename, style=dashed];
m8_127 -> m8_133  [color=darkseagreen4, key=1, label=filename, style=dashed];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_131  [key=0, style=solid];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_133  [key=0, style=solid];
m8_115 -> m8_135  [key=0, style=solid];
m8_115 -> m8_136  [key=2, style=dotted];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_127  [color=darkseagreen4, key=1, label=dateFormat, style=dashed];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_127  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_127  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m8_121 -> m8_122  [key=0, style=solid];
m8_120 -> m8_121  [key=0, style=solid];
m8_120 -> m8_127  [color=darkseagreen4, key=1, label=dateFormat, style=dashed];
m8_132 -> m8_134  [key=0, style=solid];
m8_132 -> m8_141  [key=2, style=dotted];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_141  [key=2, style=dotted];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_132  [color=darkseagreen4, key=1, label=filename, style=dashed];
m8_129 -> m8_133  [color=darkseagreen4, key=1, label=filename, style=dashed];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_132  [color=darkseagreen4, key=1, label=symbolPath, style=dashed];
m8_130 -> m8_133  [color=darkseagreen4, key=1, label=symbolPath, style=dashed];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_136  [key=2, style=dotted];
m8_135 -> m8_113  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_12  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=2, style=dotted];
m8_11 -> m8_0  [color=blue, key=0, style=bold];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_26 -> m8_29  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_26 -> m8_30  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_26 -> m8_31  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_26 -> m8_32  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_26 -> m8_33  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_26 -> m8_34  [color=darkseagreen4, key=1, label=long, style=dashed];
m8_26 -> m8_35  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m8_27 -> m8_28  [key=0, style=solid];
m8_28 -> m8_29  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_13  [key=2, style=dotted];
m8_36 -> m8_26  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_14 -> m8_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_14 -> m8_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_14 -> m8_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_14 -> m8_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_14 -> m8_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_14 -> m8_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_14 -> m8_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_25  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_23 -> m8_24  [key=0, style=solid];
m8_24 -> m8_14  [color=blue, key=0, style=bold];
m8_146 -> m8_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_102  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_103  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_104  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_105  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_106  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_107  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_108  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_109  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_110  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_146 -> m8_143  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m12_323 -> m12_324  [key=0, style=solid];
m12_323 -> m12_318  [key=2, style=dotted];
m12_324 -> n25  [color=blue, key=0, style=bold];
m12_122 -> m12_126  [key=0, style=solid];
m12_122 -> m12_127  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_122 -> m12_119  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_122 -> m12_123  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_126 -> m12_127  [key=0, style=solid];
m12_127 -> m12_128  [key=0, style=solid];
m12_127 -> m12_68  [key=2, style=dotted];
m12_127 -> m12_69  [key=2, style=dotted];
m12_127 -> m12_130  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_127 -> m12_131  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_128 -> m12_129  [key=0, style=solid];
m12_128 -> m12_71  [key=2, style=dotted];
m12_128 -> m12_130  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_130 -> m12_132  [key=0, style=solid];
m12_130 -> m12_72  [key=2, style=dotted];
m12_131 -> m12_132  [key=0, style=solid];
m12_131 -> m12_73  [key=2, style=dotted];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_131  [key=0, style=solid];
m12_132 -> m12_122  [color=blue, key=0, style=bold];
m12_164 -> m12_165  [key=0, style=solid];
m12_164 -> m12_163  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Sell", style=bold];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_3  [key=2, style=dotted];
m12_165 -> m12_163  [key=2, style=dotted];
m12_166 -> m12_164  [color=blue, key=0, style=bold];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_3  [key=2, style=dotted];
m12_18 -> m12_4  [key=2, style=dotted];
m12_19 -> m12_17  [color=blue, key=0, style=bold];
m12_319 -> m12_320  [key=0, style=solid];
m12_320 -> m12_321  [key=0, style=solid];
m12_320 -> m12_318  [key=2, style=dotted];
m12_321 -> m12_319  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_1 -> m12_4  [key=2, style=dotted];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_169 -> m12_170  [key=0, style=solid];
m12_169 -> m12_171  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_172  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_173  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_174  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_219  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_176  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_181  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_169 -> m12_184  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_169 -> m12_187  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_188  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_189  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_190  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_194  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_197  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_169 -> m12_163  [color=darkorchid, key=3, label="Parameter variable int strategyQuantity", style=bold];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_202  [key=2, style=dotted];
m12_170 -> m12_182  [color=darkseagreen4, key=1, label=orders, style=dashed];
m12_170 -> m12_185  [color=darkseagreen4, key=1, label=orders, style=dashed];
m12_170 -> m12_195  [color=darkseagreen4, key=1, label=orders, style=dashed];
m12_170 -> m12_198  [color=darkseagreen4, key=1, label=orders, style=dashed];
m12_170 -> m12_200  [color=darkseagreen4, key=1, label=orders, style=dashed];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_203  [key=2, style=dotted];
m12_171 -> m12_181  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m12_171 -> m12_184  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m12_171 -> m12_194  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m12_171 -> m12_197  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m12_172 -> m12_173  [key=0, style=solid];
m12_172 -> m12_187  [key=0, style=solid];
m12_173 -> m12_174  [key=0, style=solid];
m12_173 -> m12_187  [key=0, style=solid];
m12_173 -> m12_219  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m12_173 -> m12_176  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m12_173 -> m12_179  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m12_173 -> m12_181  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m12_173 -> m12_184  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m12_173 -> m12_186  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m12_174 -> m12_175  [key=0, style=solid];
m12_174 -> m12_204  [key=2, style=dotted];
m12_174 -> m12_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_174 -> m12_178  [color=darkseagreen4, key=1, label=optionSeq, style=dashed];
m12_176 -> m12_177  [key=0, style=solid];
m12_176 -> m12_206  [key=2, style=dotted];
m12_176 -> m12_207  [key=2, style=dotted];
m12_176 -> m12_208  [key=2, style=dotted];
m12_176 -> m12_209  [key=2, style=dotted];
m12_176 -> m12_210  [key=2, style=dotted];
m12_181 -> m12_182  [key=0, style=solid];
m12_181 -> m12_213  [key=2, style=dotted];
m12_184 -> m12_185  [key=0, style=solid];
m12_184 -> m12_215  [key=2, style=dotted];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_200  [key=0, style=solid];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_200  [key=0, style=solid];
m12_188 -> m12_192  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m12_188 -> m12_194  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m12_188 -> m12_197  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m12_188 -> m12_199  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m12_189 -> m12_190  [key=0, style=solid];
m12_189 -> m12_192  [key=0, style=solid];
m12_189 -> m12_216  [key=2, style=dotted];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_206  [key=2, style=dotted];
m12_190 -> m12_217  [key=2, style=dotted];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_41  [key=2, style=dotted];
m12_197 -> m12_198  [key=0, style=solid];
m12_197 -> m12_105  [key=2, style=dotted];
m12_182 -> m12_173  [key=0, style=solid];
m12_182 -> m12_214  [key=2, style=dotted];
m12_185 -> m12_173  [key=0, style=solid];
m12_185 -> m12_214  [key=2, style=dotted];
m12_195 -> m12_188  [key=0, style=solid];
m12_195 -> m12_214  [key=2, style=dotted];
m12_198 -> m12_188  [key=0, style=solid];
m12_198 -> m12_214  [key=2, style=dotted];
m12_200 -> m12_201  [key=0, style=solid];
m12_179 -> m12_180  [key=0, style=solid];
m12_179 -> m12_183  [key=0, style=solid];
m12_179 -> m12_186  [key=0, style=solid];
m12_186 -> m12_201  [key=0, style=solid];
m12_186 -> m12_211  [key=2, style=dotted];
m12_186 -> m12_207  [key=2, style=dotted];
m12_175 -> m12_176  [key=0, style=solid];
m12_175 -> m12_178  [key=0, style=solid];
m12_175 -> m12_205  [key=2, style=dotted];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_212  [key=2, style=dotted];
m12_178 -> m12_181  [color=darkseagreen4, key=1, label=option, style=dashed];
m12_178 -> m12_184  [color=darkseagreen4, key=1, label=option, style=dashed];
m12_177 -> m12_201  [key=0, style=solid];
m12_177 -> m12_211  [key=2, style=dotted];
m12_180 -> m12_181  [key=0, style=solid];
m12_183 -> m12_184  [key=0, style=solid];
m12_192 -> m12_193  [key=0, style=solid];
m12_192 -> m12_196  [key=0, style=solid];
m12_192 -> m12_199  [key=0, style=solid];
m12_199 -> m12_201  [key=0, style=solid];
m12_199 -> m12_211  [key=2, style=dotted];
m12_199 -> m12_207  [key=2, style=dotted];
m12_191 -> m12_201  [key=0, style=solid];
m12_191 -> m12_211  [key=2, style=dotted];
m12_193 -> m12_194  [key=0, style=solid];
m12_196 -> m12_197  [key=0, style=solid];
m12_201 -> m12_169  [color=blue, key=0, style=bold];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_122  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopMarketOrder", style=bold];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_122  [key=2, style=dotted];
m12_125 -> m12_123  [color=blue, key=0, style=bold];
m12_339 -> m12_343  [key=0, style=solid];
m12_339 -> m12_347  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_339 -> m12_349  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_339 -> m12_353  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_339 -> m12_356  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_339 -> m12_318  [color=darkorchid, key=3, label="Parameter variable decimal target", style=bold];
m12_339 -> m12_340  [color=darkorchid, key=3, label="Parameter variable decimal target", style=bold];
m12_339 -> m12_54  [color=darkorchid, key=3, label="method methodReturn decimal CalculateOrderQuantity", style=bold];
m12_343 -> m12_344  [key=0, style=solid];
m12_343 -> m12_348  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_343 -> m12_350  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_343 -> m12_353  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_343 -> m12_364  [color=green, key=1, label=security, style=dashed];
m12_343 -> m12_368  [color=green, key=1, label=security, style=dashed];
m12_343 -> m12_369  [color=green, key=1, label=security, style=dashed];
m12_343 -> m12_370  [color=green, key=1, label=security, style=dashed];
m12_343 -> m12_372  [color=green, key=1, label=security, style=dashed];
m12_343 -> m12_373  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_343 -> m12_374  [color=green, key=1, label=security, style=dashed];
m12_343 -> m12_376  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_347 -> m12_348  [key=0, style=solid];
m12_347 -> m12_349  [key=0, style=solid];
m12_349 -> m12_350  [key=0, style=solid];
m12_349 -> m12_351  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m12_349 -> m12_352  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m12_353 -> m12_354  [key=0, style=solid];
m12_353 -> m12_381  [key=2, style=dotted];
m12_353 -> m12_382  [key=2, style=dotted];
m12_353 -> m12_363  [color=green, key=1, label=unitPrice, style=dashed];
m12_353 -> m12_371  [color=green, key=1, label=unitPrice, style=dashed];
m12_356 -> m12_357  [key=0, style=solid];
m12_356 -> m12_383  [key=2, style=dotted];
m12_356 -> m12_375  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m12_344 -> m12_345  [key=0, style=solid];
m12_348 -> m12_380  [key=0, style=solid];
m12_350 -> m12_351  [key=0, style=solid];
m12_350 -> m12_352  [color=darkseagreen4, key=1, label=currentHoldingsValue, style=dashed];
m12_364 -> m12_365  [color=green, key=0, style=solid];
m12_364 -> m12_364  [color=green, key=1, label=orderQuantity, style=dashed];
m12_368 -> m12_369  [color=green, key=0, style=solid];
m12_368 -> m12_381  [color=green, key=2, style=dotted];
m12_368 -> m12_370  [color=green, key=1, label=order, style=dashed];
m12_368 -> m12_374  [color=green, key=1, label=order, style=dashed];
m12_369 -> m12_370  [color=green, key=0, style=solid];
m12_369 -> m12_382  [color=green, key=2, style=dotted];
m12_369 -> m12_375  [color=green, key=1, label=orderValue, style=dashed];
m12_370 -> m12_371  [color=green, key=0, style=solid];
m12_370 -> m12_384  [color=green, key=2, style=dotted];
m12_370 -> m12_375  [color=green, key=1, label=orderFees, style=dashed];
m12_372 -> m12_373  [color=green, key=0, style=solid];
m12_372 -> m12_374  [color=green, key=0, style=solid];
m12_373 -> m12_374  [color=green, key=0, style=solid];
m12_374 -> m12_375  [color=green, key=0, style=solid];
m12_374 -> m12_385  [color=green, key=2, style=dotted];
m12_376 -> m12_377  [color=green, key=0, style=solid];
m12_376 -> m12_378  [color=green, key=1, label=remainder, style=dashed];
m12_345 -> m12_346  [key=0, style=solid];
m12_345 -> m12_347  [key=0, style=solid];
m12_346 -> m12_380  [key=0, style=solid];
m12_351 -> m12_352  [key=0, style=solid];
m12_351 -> m12_12  [key=2, style=dotted];
m12_351 -> m12_363  [color=green, key=1, label=targetOrderValue, style=dashed];
m12_351 -> m12_375  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m12_352 -> m12_353  [key=0, style=solid];
m12_352 -> m12_356  [color=darkseagreen4, key=1, label=direction, style=dashed];
m12_352 -> m12_379  [color=green, key=1, label=direction, style=dashed];
m12_363 -> m12_364  [color=green, key=0, style=solid];
m12_363 -> m12_362  [color=green, key=3, label="Local variable decimal orderQuantity", style=bold];
m12_363 -> m12_376  [color=red, key=3, label="Local variable decimal orderQuantity", style=bold];
m12_375 -> m12_364  [color=green, key=0, style=solid];
m12_375 -> m12_376  [color=red, key=0, style=solid];
m12_379 -> m12_380  [color=green, key=0, style=solid];
m12_354 -> m12_355  [key=0, style=solid];
m12_354 -> m12_356  [key=0, style=solid];
m12_371 -> m12_372  [color=green, key=0, style=solid];
m12_355 -> m12_380  [key=0, style=solid];
m12_357 -> m12_358  [key=0, style=solid];
m12_357 -> m12_359  [key=0, style=solid];
m12_358 -> m12_380  [key=0, style=solid];
m12_359 -> m12_360  [key=0, style=solid];
m12_360 -> m12_361  [key=0, style=solid];
m12_361 -> m12_362  [color=green, key=0, style=solid];
m12_362 -> m12_363  [color=green, key=0, style=solid];
m12_362 -> m12_365  [color=green, key=1, label=feeToPriceRatio, style=dashed];
m12_362 -> m12_291  [color=green, key=3, label="Local variable decimal feeToPriceRatio", style=bold];
m12_365 -> m12_366  [color=red, key=0, style=solid];
m12_365 -> m12_365  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m12_365 -> m12_368  [color=green, key=1, label=orderQuantity, style=dashed];
m12_365 -> m12_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m12_365 -> m12_378  [color=green, key=1, label=orderQuantity, style=dashed];
m12_365 -> m12_379  [color=green, key=1, label=orderQuantity, style=dashed];
m12_366 -> m12_367  [color=red, key=0, style=solid];
m12_366 -> m12_368  [color=green, key=0, style=solid];
m12_378 -> m12_379  [color=green, key=0, style=solid];
m12_378 -> m12_378  [color=green, key=1, label=orderQuantity, style=dashed];
m12_367 -> m12_380  [color=red, key=0, style=solid];
m12_377 -> m12_378  [color=green, key=0, style=solid];
m12_377 -> m12_379  [color=green, key=0, style=solid];
m12_380 -> m12_339  [color=blue, key=0, style=bold];
m12_315 -> m12_316  [key=0, style=solid];
m12_316 -> m12_317  [key=0, style=solid];
m12_316 -> m12_318  [key=2, style=dotted];
m12_317 -> m12_315  [color=blue, key=0, style=bold];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_94  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnCloseOrder", style=bold];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_94  [key=2, style=dotted];
m12_93 -> m12_91  [color=blue, key=0, style=bold];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_94  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnCloseOrder", style=bold];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_94  [key=2, style=dotted];
m12_97 -> m12_95  [color=blue, key=0, style=bold];
m12_163 -> m12_167  [key=0, style=solid];
m12_163 -> m12_160  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Option.OptionStrategy strategy", style=bold];
m12_163 -> m12_164  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Option.OptionStrategy strategy", style=bold];
m12_163 -> m12_169  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Order", style=bold];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_169  [key=2, style=dotted];
m12_168 -> m12_163  [color=blue, key=0, style=bold];
m12_65 -> m12_84  [key=0, style=solid];
m12_65 -> m12_85  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_65 -> m12_78  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_65 -> m12_81  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_65 -> m12_35  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_84 -> m12_85  [key=0, style=solid];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_68  [key=2, style=dotted];
m12_85 -> m12_69  [key=2, style=dotted];
m12_85 -> m12_88  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_85 -> m12_89  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_71  [key=2, style=dotted];
m12_86 -> m12_88  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_88 -> m12_90  [key=0, style=solid];
m12_88 -> m12_72  [key=2, style=dotted];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_73  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_89  [key=0, style=solid];
m12_90 -> m12_65  [color=blue, key=0, style=bold];
m12_308 -> m12_309  [key=0, style=solid];
m12_75 -> m12_76  [key=0, style=solid];
m12_76 -> m12_77  [key=0, style=solid];
m12_77 -> m12_75  [color=blue, key=0, style=bold];
m12_219 -> m12_220  [key=0, style=solid];
m12_219 -> m12_219  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m12_218 -> m12_219  [key=0, style=solid];
m12_220 -> m12_218  [color=blue, key=0, style=bold];
m12_309 -> m12_310  [key=0, style=solid];
m12_310 -> m12_308  [color=blue, key=0, style=bold];
m12_318 -> m12_325  [key=0, style=solid];
m12_318 -> m12_326  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_318 -> m12_327  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_318 -> m12_329  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_318 -> m12_333  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_318 -> m12_334  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_318 -> m12_335  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_318 -> m12_337  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_318 -> m12_315  [color=darkorchid, key=3, label="Parameter variable bool liquidateExistingHoldings", style=bold];
m12_318 -> m12_319  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_318 -> n25  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_325 -> m12_326  [key=0, style=solid];
m12_326 -> m12_327  [key=0, style=solid];
m12_326 -> m12_329  [key=0, style=solid];
m12_326 -> m12_276  [key=2, style=dotted];
m12_327 -> m12_328  [key=0, style=solid];
m12_327 -> m12_206  [key=2, style=dotted];
m12_327 -> m12_227  [key=2, style=dotted];
m12_329 -> m12_330  [key=0, style=solid];
m12_329 -> m12_335  [key=0, style=solid];
m12_333 -> m12_334  [key=0, style=solid];
m12_333 -> m12_330  [key=0, style=solid];
m12_334 -> m12_330  [key=0, style=solid];
m12_334 -> m12_38  [key=2, style=dotted];
m12_335 -> m12_336  [key=0, style=solid];
m12_335 -> m12_339  [key=2, style=dotted];
m12_335 -> m12_337  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m12_337 -> m12_338  [key=0, style=solid];
m12_337 -> m12_35  [key=2, style=dotted];
m12_328 -> m12_338  [key=0, style=solid];
m12_330 -> m12_331  [key=0, style=solid];
m12_330 -> m12_335  [key=0, style=solid];
m12_331 -> m12_332  [key=0, style=solid];
m12_331 -> m12_331  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m12_331 -> m12_333  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m12_331 -> m12_334  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m12_332 -> m12_333  [key=0, style=solid];
m12_332 -> m12_332  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m12_332 -> m12_334  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m12_336 -> m12_337  [key=0, style=solid];
m12_336 -> m12_338  [key=0, style=solid];
m12_336 -> m12_12  [key=2, style=dotted];
m12_338 -> m12_318  [color=blue, key=0, style=bold];
m12_109 -> m12_110  [key=0, style=solid];
m12_109 -> m12_108  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket LimitOrder", style=bold];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_108  [key=2, style=dotted];
m12_111 -> m12_109  [color=blue, key=0, style=bold];
m12_392 -> m12_393  [key=0, style=solid];
m12_392 -> m12_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m12_393 -> m12_394  [key=0, style=solid];
m12_393 -> m12_4  [key=2, style=dotted];
m12_394 -> m12_392  [color=blue, key=0, style=bold];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m12_38 -> m12_331  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m12_38 -> m12_386  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m12_38 -> m12_337  [color=darkorchid, key=3, label="Parameter variable bool asynchronous", style=bold];
m12_38 -> m12_318  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_35  [key=2, style=dotted];
m12_40 -> m12_38  [color=blue, key=0, style=bold];
m12_108 -> m12_112  [key=0, style=solid];
m12_108 -> m12_113  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_108 -> m12_105  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_108 -> m12_109  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_112 -> m12_113  [key=0, style=solid];
m12_113 -> m12_114  [key=0, style=solid];
m12_113 -> m12_68  [key=2, style=dotted];
m12_113 -> m12_69  [key=2, style=dotted];
m12_113 -> m12_116  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_113 -> m12_117  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_114 -> m12_115  [key=0, style=solid];
m12_114 -> m12_71  [key=2, style=dotted];
m12_114 -> m12_116  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_116 -> m12_118  [key=0, style=solid];
m12_116 -> m12_72  [key=2, style=dotted];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_73  [key=2, style=dotted];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_117  [key=0, style=solid];
m12_118 -> m12_108  [color=blue, key=0, style=bold];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_136  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopLimitOrder", style=bold];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_136  [key=2, style=dotted];
m12_135 -> m12_133  [color=blue, key=0, style=bold];
m12_226 -> m12_228  [key=0, style=solid];
m12_226 -> m12_229  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_230  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_231  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_232  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_234  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_236  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_237  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_238  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_239  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_241  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_245  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_247  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_252  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_254  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_256  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_259  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_260  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_262  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_264  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_265  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_266  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_267  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_268  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_269  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_273  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_274  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m12_226 -> m12_71  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m12_228 -> m12_229  [key=0, style=solid];
m12_229 -> m12_230  [key=0, style=solid];
m12_229 -> m12_231  [key=0, style=solid];
m12_229 -> m12_276  [key=2, style=dotted];
m12_229 -> m12_233  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_235  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_236  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_238  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_243  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_246  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_248  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_250  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_255  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_261  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_263  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_265  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_270  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_229 -> m12_272  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_230 -> m12_275  [key=0, style=solid];
m12_230 -> m12_206  [key=2, style=dotted];
m12_230 -> m12_277  [key=2, style=dotted];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_233  [key=0, style=solid];
m12_231 -> m12_12  [key=2, style=dotted];
m12_232 -> m12_275  [key=0, style=solid];
m12_232 -> m12_278  [key=2, style=dotted];
m12_234 -> m12_275  [key=0, style=solid];
m12_234 -> m12_206  [key=2, style=dotted];
m12_234 -> m12_277  [key=2, style=dotted];
m12_236 -> m12_237  [key=0, style=solid];
m12_236 -> m12_238  [key=0, style=solid];
m12_237 -> m12_275  [key=0, style=solid];
m12_237 -> m12_277  [key=2, style=dotted];
m12_238 -> m12_239  [key=0, style=solid];
m12_238 -> m12_240  [key=0, style=solid];
m12_239 -> m12_275  [key=0, style=solid];
m12_239 -> m12_277  [key=2, style=dotted];
m12_241 -> m12_275  [key=0, style=solid];
m12_241 -> m12_206  [key=2, style=dotted];
m12_241 -> m12_277  [key=2, style=dotted];
m12_245 -> m12_275  [key=0, style=solid];
m12_245 -> m12_277  [key=2, style=dotted];
m12_247 -> m12_275  [key=0, style=solid];
m12_247 -> m12_277  [key=2, style=dotted];
m12_252 -> m12_275  [key=0, style=solid];
m12_252 -> m12_277  [key=2, style=dotted];
m12_254 -> m12_275  [key=0, style=solid];
m12_254 -> m12_277  [key=2, style=dotted];
m12_256 -> m12_275  [key=0, style=solid];
m12_256 -> m12_277  [key=2, style=dotted];
m12_259 -> m12_275  [key=0, style=solid];
m12_259 -> m12_217  [key=2, style=dotted];
m12_259 -> m12_277  [key=2, style=dotted];
m12_260 -> m12_261  [key=0, style=solid];
m12_260 -> m12_269  [key=0, style=solid];
m12_262 -> m12_275  [key=0, style=solid];
m12_262 -> m12_206  [key=2, style=dotted];
m12_262 -> m12_277  [key=2, style=dotted];
m12_264 -> m12_275  [key=0, style=solid];
m12_264 -> m12_206  [key=2, style=dotted];
m12_264 -> m12_277  [key=2, style=dotted];
m12_265 -> m12_266  [key=0, style=solid];
m12_265 -> m12_267  [key=0, style=solid];
m12_266 -> m12_275  [key=0, style=solid];
m12_266 -> m12_206  [key=2, style=dotted];
m12_266 -> m12_277  [key=2, style=dotted];
m12_267 -> m12_268  [key=0, style=solid];
m12_267 -> m12_269  [key=0, style=solid];
m12_268 -> m12_269  [key=0, style=solid];
m12_268 -> m12_278  [key=2, style=dotted];
m12_269 -> m12_270  [key=0, style=solid];
m12_269 -> m12_274  [key=0, style=solid];
m12_273 -> m12_275  [key=0, style=solid];
m12_273 -> m12_277  [key=2, style=dotted];
m12_274 -> m12_275  [key=0, style=solid];
m12_274 -> m12_282  [key=2, style=dotted];
m12_233 -> m12_234  [key=0, style=solid];
m12_233 -> m12_235  [key=0, style=solid];
m12_235 -> m12_236  [key=0, style=solid];
m12_235 -> m12_240  [color=darkseagreen4, key=1, label=price, style=dashed];
m12_243 -> m12_244  [key=0, style=solid];
m12_243 -> m12_245  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m12_243 -> m12_247  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m12_243 -> m12_252  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m12_243 -> m12_254  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m12_246 -> m12_247  [key=0, style=solid];
m12_246 -> m12_248  [key=0, style=solid];
m12_248 -> m12_249  [key=0, style=solid];
m12_248 -> m12_255  [key=0, style=solid];
m12_250 -> m12_251  [key=0, style=solid];
m12_250 -> m12_252  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m12_250 -> m12_254  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m12_255 -> m12_256  [key=0, style=solid];
m12_255 -> m12_257  [key=0, style=solid];
m12_261 -> m12_262  [key=0, style=solid];
m12_261 -> m12_263  [key=0, style=solid];
m12_263 -> m12_264  [key=0, style=solid];
m12_263 -> m12_265  [key=0, style=solid];
m12_270 -> m12_271  [key=0, style=solid];
m12_270 -> m12_280  [key=2, style=dotted];
m12_272 -> m12_273  [key=0, style=solid];
m12_272 -> m12_274  [key=0, style=solid];
m12_240 -> m12_241  [key=0, style=solid];
m12_240 -> m12_242  [key=0, style=solid];
m12_242 -> m12_243  [key=0, style=solid];
m12_244 -> m12_245  [key=0, style=solid];
m12_244 -> m12_246  [key=0, style=solid];
m12_244 -> m12_279  [key=2, style=dotted];
m12_249 -> m12_250  [key=0, style=solid];
m12_251 -> m12_252  [key=0, style=solid];
m12_251 -> m12_253  [key=0, style=solid];
m12_251 -> m12_279  [key=2, style=dotted];
m12_253 -> m12_254  [key=0, style=solid];
m12_253 -> m12_255  [key=0, style=solid];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_260  [key=0, style=solid];
m12_258 -> m12_259  [key=0, style=solid];
m12_271 -> m12_272  [key=0, style=solid];
m12_271 -> m12_281  [key=2, style=dotted];
m12_275 -> m12_226  [color=blue, key=0, style=bold];
m12_395 -> m12_396  [key=0, style=solid];
m12_396 -> m12_397  [key=0, style=solid];
m12_396 -> m12_400  [key=2, style=dotted];
m12_396 -> m12_401  [key=2, style=dotted];
m12_396 -> m12_398  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m12_397 -> m12_398  [key=0, style=solid];
m12_397 -> m12_402  [key=2, style=dotted];
m12_398 -> m12_399  [key=0, style=solid];
m12_398 -> m12_403  [key=2, style=dotted];
m12_399 -> m12_395  [color=blue, key=0, style=bold];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_4  [key=2, style=dotted];
m12_31 -> m12_29  [color=blue, key=0, style=bold];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_35  [key=2, style=dotted];
m12_34 -> m12_32  [color=blue, key=0, style=bold];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_65  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnOpenOrder", style=bold];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_65  [key=2, style=dotted];
m12_80 -> m12_78  [color=blue, key=0, style=bold];
m12_386 -> m12_387  [key=0, style=solid];
m12_386 -> m12_38  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m12_387 -> m12_388  [key=0, style=solid];
m12_387 -> m12_38  [key=2, style=dotted];
m12_388 -> m12_386  [color=blue, key=0, style=bold];
m12_71 -> m12_221  [key=0, style=solid];
m12_71 -> m12_54  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m12_71 -> m12_85  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m12_71 -> m12_99  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m12_71 -> m12_113  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m12_71 -> m12_127  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m12_71 -> m12_141  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m12_71 -> m12_149  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m12_221 -> m12_222  [key=0, style=solid];
m12_221 -> m12_226  [key=2, style=dotted];
m12_221 -> m12_223  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_221 -> m12_224  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_222 -> m12_223  [key=0, style=solid];
m12_222 -> m12_224  [key=0, style=solid];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_227  [key=2, style=dotted];
m12_224 -> m12_225  [key=0, style=solid];
m12_225 -> m12_71  [color=blue, key=0, style=bold];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_8  [key=2, style=dotted];
m12_21 -> m12_4  [key=2, style=dotted];
m12_22 -> m12_20  [color=blue, key=0, style=bold];
m12_119 -> m12_120  [key=0, style=solid];
m12_119 -> m12_122  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopMarketOrder", style=bold];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_122  [key=2, style=dotted];
m12_121 -> m12_119  [color=blue, key=0, style=bold];
m12_160 -> m12_161  [key=0, style=solid];
m12_160 -> m12_163  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Buy", style=bold];
m12_161 -> m12_162  [key=0, style=solid];
m12_161 -> m12_3  [key=2, style=dotted];
m12_161 -> m12_163  [key=2, style=dotted];
m12_162 -> m12_160  [color=blue, key=0, style=bold];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_35  [key=2, style=dotted];
m12_46 -> m12_44  [color=blue, key=0, style=bold];
m12_389 -> m12_390  [key=0, style=solid];
m12_389 -> m12_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m12_390 -> m12_391  [key=0, style=solid];
m12_390 -> m12_4  [key=2, style=dotted];
m12_391 -> m12_389  [color=blue, key=0, style=bold];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_65  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnOpenOrder", style=bold];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_65  [key=2, style=dotted];
m12_83 -> m12_81  [color=blue, key=0, style=bold];
m12_136 -> m12_140  [key=0, style=solid];
m12_136 -> m12_141  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_136 -> m12_133  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_136 -> m12_137  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_140 -> m12_141  [key=0, style=solid];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_68  [key=2, style=dotted];
m12_141 -> m12_69  [key=2, style=dotted];
m12_141 -> m12_144  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_141 -> m12_145  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_142 -> m12_143  [key=0, style=solid];
m12_142 -> m12_71  [key=2, style=dotted];
m12_142 -> m12_144  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_144 -> m12_146  [key=0, style=solid];
m12_144 -> m12_72  [key=2, style=dotted];
m12_145 -> m12_146  [key=0, style=solid];
m12_145 -> m12_73  [key=2, style=dotted];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_145  [key=0, style=solid];
m12_146 -> m12_136  [color=blue, key=0, style=bold];
m12_105 -> m12_106  [key=0, style=solid];
m12_105 -> m12_108  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket LimitOrder", style=bold];
m12_105 -> m12_171  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_108  [key=2, style=dotted];
m12_107 -> m12_105  [color=blue, key=0, style=bold];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_12  [key=2, style=dotted];
m12_10 -> m12_4  [key=2, style=dotted];
m12_11 -> m12_9  [color=blue, key=0, style=bold];
m12_147 -> m12_148  [key=0, style=solid];
m12_147 -> m12_149  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_147 -> m12_156  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_147 -> m12_155  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket ExerciseOption", style=bold];
m12_148 -> m12_149  [key=0, style=solid];
m12_149 -> m12_150  [key=0, style=solid];
m12_149 -> m12_68  [key=2, style=dotted];
m12_149 -> m12_69  [key=2, style=dotted];
m12_149 -> m12_151  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_149 -> m12_152  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_149 -> m12_154  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_149 -> m12_155  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_158  [key=0, style=solid];
m12_150 -> m12_151  [key=0, style=solid];
m12_150 -> m12_152  [key=0, style=solid];
m12_151 -> m12_159  [key=0, style=solid];
m12_151 -> m12_70  [key=2, style=dotted];
m12_152 -> m12_153  [key=0, style=solid];
m12_152 -> m12_71  [key=2, style=dotted];
m12_152 -> m12_154  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m12_154 -> m12_159  [key=0, style=solid];
m12_154 -> m12_72  [key=2, style=dotted];
m12_155 -> m12_156  [key=0, style=solid];
m12_155 -> m12_73  [key=2, style=dotted];
m12_155 -> m12_157  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m12_155 -> m12_158  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m12_153 -> m12_154  [key=0, style=solid];
m12_153 -> m12_155  [key=0, style=solid];
m12_157 -> m12_158  [key=0, style=solid];
m12_157 -> m12_74  [key=2, style=dotted];
m12_158 -> m12_159  [key=0, style=solid];
m12_159 -> m12_147  [color=blue, key=0, style=bold];
m12_311 -> m12_312  [key=0, style=solid];
m12_311 -> m12_313  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_312 -> m12_313  [key=0, style=solid];
m12_312 -> m12_314  [key=0, style=solid];
m12_313 -> m12_314  [key=0, style=solid];
m12_314 -> m12_311  [color=blue, key=0, style=bold];
m12_4 -> m12_36  [key=0, style=solid];
m12_4 -> m12_0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m12_4 -> m12_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m12_4 -> m12_9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m12_4 -> m12_13  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m12_4 -> m12_17  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m12_4 -> m12_20  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m12_4 -> m12_23  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m12_4 -> m12_26  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m12_4 -> m12_29  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m12_4 -> m12_286  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m12_4 -> m12_389  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m12_4 -> m12_392  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m12_4 -> m12_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_35  [key=2, style=dotted];
m12_37 -> m12_4  [color=blue, key=0, style=bold];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
m12_41 -> m12_171  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_35  [key=2, style=dotted];
m12_43 -> m12_41  [color=blue, key=0, style=bold];
m12_94 -> m12_98  [key=0, style=solid];
m12_94 -> m12_99  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_94 -> m12_91  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_94 -> m12_95  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_98 -> m12_99  [key=0, style=solid];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_68  [key=2, style=dotted];
m12_99 -> m12_69  [key=2, style=dotted];
m12_99 -> m12_102  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_99 -> m12_103  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_71  [key=2, style=dotted];
m12_100 -> m12_102  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_102 -> m12_104  [key=0, style=solid];
m12_102 -> m12_72  [key=2, style=dotted];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_73  [key=2, style=dotted];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_103  [key=0, style=solid];
m12_104 -> m12_94  [color=blue, key=0, style=bold];
m12_340 -> m12_341  [key=0, style=solid];
m12_340 -> m12_339  [color=darkorchid, key=3, label="method methodReturn decimal CalculateOrderQuantity", style=bold];
m12_341 -> m12_342  [key=0, style=solid];
m12_341 -> m12_339  [key=2, style=dotted];
m12_342 -> m12_340  [color=blue, key=0, style=bold];
m12_35 -> m12_47  [key=0, style=solid];
m12_35 -> m12_49  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_35 -> m12_54  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_35 -> m12_61  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_35 -> m12_32  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m12_35 -> m12_4  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m12_35 -> m12_38  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_35 -> m12_41  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_35 -> m12_44  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_35 -> m12_318  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_35 -> m12_335  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m12_35 -> m12_337  [color=darkorchid, key=3, label="Parameter variable bool asynchronous", style=bold];
m12_35 -> m12_60  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_49  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_47 -> m12_50  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_47 -> m12_54  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_65  [key=2, style=dotted];
m12_49 -> m12_51  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m12_49 -> m12_52  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m12_49 -> m12_53  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_68  [key=2, style=dotted];
m12_54 -> m12_69  [key=2, style=dotted];
m12_54 -> m12_56  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_54 -> m12_57  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_54 -> m12_59  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_54 -> m12_60  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_63  [key=0, style=solid];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_54  [key=0, style=solid];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_66  [key=2, style=dotted];
m12_50 -> m12_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_53  [key=0, style=solid];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_67  [key=2, style=dotted];
m12_53 -> m12_64  [key=0, style=solid];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_57  [key=0, style=solid];
m12_56 -> m12_64  [key=0, style=solid];
m12_56 -> m12_70  [key=2, style=dotted];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_71  [key=2, style=dotted];
m12_57 -> m12_59  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m12_59 -> m12_64  [key=0, style=solid];
m12_59 -> m12_72  [key=2, style=dotted];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_73  [key=2, style=dotted];
m12_60 -> m12_62  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m12_60 -> m12_63  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_60  [key=0, style=solid];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_74  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_64 -> m12_35  [color=blue, key=0, style=bold];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_16  [key=2, style=dotted];
m12_14 -> m12_4  [key=2, style=dotted];
m12_15 -> m12_13  [color=blue, key=0, style=bold];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_16  [key=2, style=dotted];
m12_24 -> m12_4  [key=2, style=dotted];
m12_25 -> m12_23  [color=blue, key=0, style=bold];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_8  [key=2, style=dotted];
m12_6 -> m12_4  [key=2, style=dotted];
m12_7 -> m12_5  [color=blue, key=0, style=bold];
m12_283 -> m12_284  [key=0, style=solid];
m12_283 -> m12_285  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_283 -> m12_297  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_284 -> m12_285  [key=0, style=solid];
m12_284 -> m12_202  [key=2, style=dotted];
m12_284 -> m12_301  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m12_284 -> m12_302  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m12_285 -> m12_286  [key=0, style=solid];
m12_285 -> m12_285  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_285 -> m12_287  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_297 -> m12_292  [key=0, style=solid];
m12_297 -> m12_307  [key=2, style=dotted];
m12_301 -> m12_286  [key=0, style=solid];
m12_301 -> m12_214  [key=2, style=dotted];
m12_302 -> m12_303  [key=0, style=solid];
m12_286 -> m12_287  [key=0, style=solid];
m12_286 -> m12_302  [key=0, style=solid];
m12_286 -> m12_304  [key=2, style=dotted];
m12_286 -> m12_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_286 -> m12_288  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m12_286 -> m12_289  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m12_286 -> m12_299  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m12_287 -> m12_288  [key=0, style=solid];
m12_287 -> m12_286  [key=0, style=solid];
m12_288 -> m12_289  [key=0, style=solid];
m12_288 -> m12_305  [key=2, style=dotted];
m12_288 -> m12_290  [color=darkseagreen4, key=1, label=orders, style=dashed];
m12_288 -> m12_292  [color=darkseagreen4, key=1, label=orders, style=dashed];
m12_289 -> m12_290  [key=0, style=solid];
m12_289 -> m12_298  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m12_289 -> m12_299  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m12_299 -> m12_300  [key=0, style=solid];
m12_299 -> m12_4  [key=2, style=dotted];
m12_299 -> m12_301  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m12_290 -> m12_291  [key=0, style=solid];
m12_290 -> m12_286  [key=0, style=solid];
m12_292 -> m12_293  [key=0, style=solid];
m12_292 -> m12_298  [key=0, style=solid];
m12_292 -> m12_294  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_292 -> m12_297  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_298 -> m12_299  [key=0, style=solid];
m12_298 -> m12_286  [key=0, style=solid];
m12_291 -> m12_292  [key=0, style=solid];
m12_291 -> m12_296  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m12_291 -> m12_299  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m12_291 -> m12_291  [color=darkorchid, key=3, label="Local variable decimal marketOrdersQuantity", style=bold];
m12_296 -> m12_292  [key=0, style=solid];
m12_296 -> m12_296  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m12_296 -> m12_299  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m12_293 -> m12_294  [key=0, style=solid];
m12_293 -> m12_297  [key=0, style=solid];
m12_294 -> m12_295  [key=0, style=solid];
m12_294 -> m12_306  [key=2, style=dotted];
m12_294 -> m12_296  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m12_295 -> m12_296  [key=0, style=solid];
m12_295 -> m12_292  [key=0, style=solid];
m12_300 -> m12_301  [key=0, style=solid];
m12_300 -> m12_286  [key=0, style=solid];
m12_303 -> m12_283  [color=blue, key=0, style=bold];
m12_69 -> m12_404  [key=0, style=solid];
m12_69 -> m12_54  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m12_69 -> m12_85  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m12_69 -> m12_99  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m12_69 -> m12_113  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m12_69 -> m12_127  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m12_69 -> m12_141  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m12_69 -> m12_149  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m12_69 -> m12_47  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m12_69 -> m12_84  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m12_69 -> m12_98  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m12_69 -> m12_112  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m12_69 -> m12_126  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m12_69 -> m12_140  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m12_69 -> m12_148  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m12_69 -> m12_35  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_69 -> m12_65  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_69 -> m12_94  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_69 -> m12_108  [color=darkorchid, key=3, label="Parameter variable decimal limitPrice", style=bold];
m12_69 -> m12_122  [color=darkorchid, key=3, label="Parameter variable decimal stopPrice", style=bold];
m12_69 -> m12_136  [color=darkorchid, key=3, label="Parameter variable decimal stopPrice", style=bold];
m12_69 -> m12_147  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m12_404 -> m12_405  [key=0, style=solid];
m12_404 -> m12_406  [key=2, style=dotted];
m12_405 -> m12_69  [color=blue, key=0, style=bold];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_12  [key=2, style=dotted];
m12_27 -> m12_4  [key=2, style=dotted];
m12_28 -> m12_26  [color=blue, key=0, style=bold];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_136  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopLimitOrder", style=bold];
m12_138 -> m12_139  [key=0, style=solid];
m12_138 -> m12_136  [key=2, style=dotted];
m12_139 -> m12_137  [color=blue, key=0, style=bold];
m12_407 -> m12_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_54  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_56  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_96  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_112  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_114  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_116  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_120  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_124  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_131  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_134  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_140  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_145  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_148  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_151  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_152  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_154  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_155  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_157  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_161  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_165  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_174  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_184  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_189  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_194  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_197  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_221  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_223  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_244  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_251  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_258  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_259  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_272  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_286  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_288  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_289  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_294  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_297  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_299  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_312  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_313  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_316  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_320  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_323  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_326  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_327  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_330  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_335  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_337  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_341  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_343  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_349  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_353  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_356  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_368  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_387  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_390  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_393  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_397  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_407 -> m12_404  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m12_408 -> m12_219  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m12_409 -> m12_219  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
}
