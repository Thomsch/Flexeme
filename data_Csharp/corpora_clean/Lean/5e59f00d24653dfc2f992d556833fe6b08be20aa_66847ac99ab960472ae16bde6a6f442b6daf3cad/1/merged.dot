digraph  {
n172 [label="QuantConnect.Data.Market.Tick", span=""];
n0 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n1 [label="Value = 0", span="100-100", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n2 [label="Time = new DateTime()", span="101-101", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n3 [label="DataType = MarketDataType.Tick", span="102-102", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n13 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()"];
n4 [label="Symbol = Symbol.Empty", span="103-103", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n5 [label="TickType = TickType.Trade", span="104-104", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n6 [label="Quantity = 0", span="105-105", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n7 [label="Exchange = ''''", span="106-106", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n8 [label="SaleCondition = ''''", span="107-107", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n9 [label="Suspicious = false", span="108-108", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n10 [label="BidSize = 0", span="109-109", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n11 [label="AskSize = 0", span="110-110", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n12 [label="Exit QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n14 [label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="117-117", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n15 [label="Symbol = original.Symbol", span="119-119", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n16 [label="Time = new DateTime(original.Time.Ticks)", span="120-120", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n17 [label="Value = original.Value", span="121-121", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n18 [label="BidPrice = original.BidPrice", span="122-122", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n19 [label="AskPrice = original.AskPrice", span="123-123", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n20 [label="Exchange = original.Exchange", span="124-124", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n21 [label="SaleCondition = original.SaleCondition", span="125-125", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n22 [label="Quantity = original.Quantity", span="126-126", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n23 [label="Suspicious = original.Suspicious", span="127-127", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n25 [label="TickType = original.TickType", span="129-129", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n26 [label="BidSize = original.BidSize", span="130-130", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n27 [label="AskSize = original.AskSize", span="131-131", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n29 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)"];
n24 [label="DataType = MarketDataType.Tick", span="128-128", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n28 [label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="117-117", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)"];
n30 [label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)"];
n31 [label="DataType = MarketDataType.Tick", span="144-144", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)"];
n32 [label="Time = time", span="145-145", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)"];
n33 [label="Symbol = symbol", span="146-146", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)"];
n34 [label="Value = (bid + ask) / 2", span="147-147", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)"];
n36 [label="BidPrice = bid", span="149-149", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)"];
n37 [label="AskPrice = ask", span="150-150", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)"];
n35 [label="TickType = TickType.Quote", span="148-148", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)"];
n38 [label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)"];
n39 [label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)"];
n40 [label="DataType = MarketDataType.Tick", span="163-163", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)"];
n41 [label="Time = time", span="164-164", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)"];
n42 [label="Symbol = symbol", span="165-165", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)"];
n43 [label="Value = last", span="166-166", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)"];
n45 [label="BidPrice = bid", span="168-168", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)"];
n46 [label="AskPrice = ask", span="169-169", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)"];
n44 [label="TickType = TickType.Quote", span="167-167", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)"];
n47 [label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)"];
n48 [label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", span="177-177", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)"];
n49 [label="var csv = line.Split(',')", span="179-179", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)"];
n51 [label="Symbol = symbol", span="181-181", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)"];
n50 [label="DataType = MarketDataType.Tick", span="180-180", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)"];
n58 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
n52 [label="Time = DateTime.ParseExact(csv[0], DateFormat.Forex, CultureInfo.InvariantCulture)", span="182-182", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)"];
n55 [label="BidPrice = Convert.ToDecimal(csv[1], CultureInfo.InvariantCulture)", span="185-185", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)"];
n56 [label="AskPrice = Convert.ToDecimal(csv[2], CultureInfo.InvariantCulture)", span="186-186", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)"];
n53 [label="Value = (BidPrice + AskPrice) / 2", span="183-183", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)"];
n59 [label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)"];
n54 [label="TickType = TickType.Quote", span="184-184", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)"];
n60 [label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(string, System.IFormatProvider)"];
n57 [label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", span="177-177", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)"];
n61 [label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", span="195-195", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n62 [label="var csv = line.Split(',')", span="197-197", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n64 [label="Symbol = symbol", span="199-199", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n65 [label="Time = baseDate.Date.AddMilliseconds(csv[0].ToInt32())", span="200-200", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n66 [label="Value = csv[1].ToDecimal() / GetScaleFactor(symbol.SecurityType)", span="201-201", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n63 [label="DataType = MarketDataType.Tick", span="198-198", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n68 [label="Quantity = csv[2].ToDecimal()", span="203-203", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n69 [label="Exchange = csv[3].Trim()", span="204-204", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n70 [label="SaleCondition = csv[4]", span="205-205", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n71 [label="Suspicious = csv[5].ToInt32() == 1", span="206-206", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n73 [label="Entry string.ToInt32()", span="297-297", cluster="string.ToInt32()"];
n74 [label="Entry System.DateTime.AddMilliseconds(double)", span="0-0", cluster="System.DateTime.AddMilliseconds(double)"];
n67 [label="TickType = TickType.Trade", span="202-202", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n75 [label="Entry string.ToDecimal()", span="248-248", cluster="string.ToDecimal()"];
n76 [label="Entry QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", span="401-401", cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)"];
n77 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()"];
n72 [label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", span="195-195", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)"];
n78 [label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="215-215", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n79 [label="DataType = MarketDataType.Tick", span="219-219", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n80 [label="var scaleFactor = GetScaleFactor(config.SecurityType)", span="222-222", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n81 [label="config.SecurityType", span="224-224", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n83 [label="var csv = line.ToCsv(6)", span="228-228", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n84 [label="Symbol = config.Symbol", span="229-229", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n85 [label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="230-230", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n86 [label="Value = config.GetNormalizedPrice(csv[1].ToDecimal() / scaleFactor)", span="231-231", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n96 [label="var csv = line.ToCsv(3)", span="247-247", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n97 [label="Symbol = config.Symbol", span="248-248", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n99 [label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="250-250", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n105 [label="var csv = line.ToCsv(7)", span="260-260", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n106 [label="TickType = config.TickType", span="261-261", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n107 [label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="262-262", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n108 [label="Symbol = config.Symbol", span="263-263", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n110 [label="Value = config.GetNormalizedPrice(csv[1].ToDecimal()/scaleFactor)", span="267-267", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n118 [label="BidPrice = config.GetNormalizedPrice(csv[1].ToDecimal()/scaleFactor)", span="281-281", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n121 [label="AskPrice = config.GetNormalizedPrice(csv[3].ToDecimal()/scaleFactor)", span="286-286", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n82 [label="SecurityType.Equity", span="226-226", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n93 [label="SecurityType.Forex", span="243-243", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n103 [label="SecurityType.Future", span="257-257", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n133 [label="Entry string.ToCsv(int)", span="329-329", cluster="string.ToCsv(int)"];
n88 [label="Quantity = csv[2].ToDecimal()", span="233-233", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n89 [label="csv.Count > 3", span="234-234", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n90 [label="Exchange = csv[3]", span="236-236", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n91 [label="SaleCondition = csv[4]", span="237-237", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n92 [label="Suspicious = (csv[5] == ''1'')", span="238-238", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n134 [label="Entry string.ToInt64()", span="313-313", cluster="string.ToInt64()"];
n135 [label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585", cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)"];
n87 [label="TickType = TickType.Trade", span="232-232", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n136 [label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="277-277", cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)"];
n130 [label=Exception, span="313-313", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n132 [label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="215-215", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n94 [label="SecurityType.Cfd", span="244-244", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n95 [label="SecurityType.Crypto", span="245-245", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n100 [label="BidPrice = csv[1].ToDecimal()", span="251-251", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n101 [label="AskPrice = csv[2].ToDecimal()", span="252-252", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n98 [label="TickType = TickType.Quote", span="249-249", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n102 [label="Value = (BidPrice + AskPrice) / 2", span="253-253", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n104 [label="SecurityType.Option", span="258-258", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n111 [label="Quantity = csv[2].ToDecimal()", span="268-268", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n112 [label="Exchange = csv[3]", span="269-269", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n113 [label="SaleCondition = csv[4]", span="270-270", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n114 [label="Suspicious = csv[5] == ''1''", span="271-271", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n116 [label="Value = csv[1].ToDecimal()", span="275-275", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n117 [label="csv[1].Length != 0", span="279-279", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n119 [label="BidSize = csv[2].ToDecimal()", span="282-282", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n120 [label="csv[3].Length != 0", span="284-284", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n122 [label="AskSize = csv[4].ToDecimal()", span="287-287", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n123 [label="Exchange = csv[5]", span="289-289", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n124 [label="Suspicious = csv[6] == ''1''", span="290-290", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n109 [label="TickType == TickType.Trade", span="265-265", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n115 [label="TickType == TickType.OpenInterest", span="273-273", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n125 [label="BidPrice != 0", span="292-292", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n126 [label="AskPrice != 0", span="294-294", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n129 [label="Value = AskPrice", span="305-305", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n127 [label="Value = (BidPrice + AskPrice)/2m", span="296-296", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n128 [label="Value = BidPrice", span="300-300", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n131 [label="Log.Error(err)", span="315-315", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)"];
n137 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)"];
n138 [label="Entry QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="327-327", cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)"];
n139 [label=isLiveMode, span="329-329", cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)"];
n141 [label="return new Tick(config, line, date);", span="335-335", cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)"];
n140 [label="return new Tick();", span="332-332", cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)"];
n142 [label="Exit QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="327-327", cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)"];
n143 [label="Entry QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="345-345", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n144 [label=isLiveMode, span="347-347", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n146 [label="var source = LeanData.GenerateZipFilePath(Globals.DataFolder, config.Symbol, date, config.Resolution, config.TickType)", span="353-353", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n147 [label="config.SecurityType == SecurityType.Option ||\r\n                config.SecurityType == SecurityType.Future", span="354-355", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n148 [label="source += ''#'' + LeanData.GenerateZipEntryName(config.Symbol, date, config.Resolution, config.TickType)", span="357-357", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n145 [label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="350-350", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n152 [label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="290-290", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)"];
n149 [label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile, FileFormat.Csv);", span="359-359", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n153 [label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="372-372", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)"];
n150 [label="Exit QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="345-345", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n151 [label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="44-44", cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)"];
n154 [label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="57-57", cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)"];
n155 [label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="371-371", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)"];
n156 [label="Value = lastTrade", span="373-373", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)"];
n157 [label="BidPrice = bidPrice", span="374-374", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)"];
n158 [label="AskPrice = askPrice", span="375-375", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)"];
n159 [label="BidSize = bidSize", span="376-376", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)"];
n160 [label="AskSize = askSize", span="377-377", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)"];
n161 [label="Quantity = Convert.ToDecimal(volume)", span="378-378", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)"];
n162 [label="Exit QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="371-371", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)"];
n163 [label="Entry System.Convert.ToDecimal(decimal)", span="0-0", cluster="System.Convert.ToDecimal(decimal)"];
n164 [label="Entry QuantConnect.Data.Market.Tick.IsValid()", span="384-384", cluster="QuantConnect.Data.Market.Tick.IsValid()"];
n165 [label="return (TickType == TickType.Trade && LastPrice > 0.0m && Quantity > 0) ||\r\n                   (TickType == TickType.Quote && AskPrice > 0.0m && AskSize > 0) ||\r\n                   (TickType == TickType.Quote && BidPrice > 0.0m && BidSize > 0) ||\r\n                   (TickType == TickType.OpenInterest && Value > 0);", span="386-389", cluster="QuantConnect.Data.Market.Tick.IsValid()"];
n166 [label="Exit QuantConnect.Data.Market.Tick.IsValid()", span="384-384", cluster="QuantConnect.Data.Market.Tick.IsValid()"];
n167 [label="Entry QuantConnect.Data.Market.Tick.Clone()", span="396-396", cluster="QuantConnect.Data.Market.Tick.Clone()"];
n168 [label="return new Tick(this);", span="398-398", cluster="QuantConnect.Data.Market.Tick.Clone()"];
n169 [label="Exit QuantConnect.Data.Market.Tick.Clone()", span="396-396", cluster="QuantConnect.Data.Market.Tick.Clone()"];
n170 [label="return securityType == SecurityType.Equity || securityType == SecurityType.Option ? 10000m : 1;", span="403-403", cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)"];
n171 [label="Exit QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", span="401-401", cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)"];
m0_22 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="ApiDataProvider.cs"];
m0_20 [label="Entry QuantConnect.Api.Api.Initialize(int, string, string)", span="49-49", cluster="QuantConnect.Api.Api.Initialize(int, string, string)", file="ApiDataProvider.cs"];
m0_17 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ApiDataProvider.cs"];
m0_16 [label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123", cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="ApiDataProvider.cs"];
m0_15 [label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Fetch(string)", span="32-32", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Fetch(string)", file="ApiDataProvider.cs"];
m0_21 [label="Entry QuantConnect.Api.Api.DownloadData(string)", span="598-598", cluster="QuantConnect.Api.Api.DownloadData(string)", file="ApiDataProvider.cs"];
m0_18 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="ApiDataProvider.cs"];
m0_19 [label="Entry QuantConnect.Api.Api.Api()", span="38-38", cluster="QuantConnect.Api.Api.Api()", file="ApiDataProvider.cs"];
m0_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", span="41-41", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", file="ApiDataProvider.cs"];
m0_1 [label="var dataAlreadyOnDisk = _defaultDataProvider.Fetch(key)", span="43-43", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_3 [label="Log.Trace(''Data was already present on disc for path {0}. Returning data on disc.'', key)", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_5 [label="Log.Trace(\r\n                string.Format(\r\n                    ''Attempting to get data from QuantConnect.com's data library for path: {0}.'', key))", span="51-53", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_8 [label="var download = api.DownloadData(key)", span="58-58", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_10 [label="Log.Trace(\r\n                    string.Format(\r\n                        ''Successfully able to retrieve data from QuantConnect.com's data library for path: {0}'', key))", span="62-64", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_11 [label="return _defaultDataProvider.Fetch(key);", span="66-66", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_12 [label="Log.Error(\r\n                    string.Format(\r\n                        ''Unable to remotely retrieve data for for path: {0}. Please make sure you have the necessary data in your online QuantConnect data library.'',\r\n                            key))", span="70-73", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_2 [label="dataAlreadyOnDisk != null", span="45-45", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_4 [label="return dataAlreadyOnDisk;", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_6 [label="var api = new Api.Api()", span="55-55", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_7 [label="api.Initialize(_uid, _token, _dataPath)", span="56-56", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_9 [label=download, span="60-60", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_13 [label="return null;", span="75-75", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", color=red, community=0, file="ApiDataProvider.cs"];
m0_14 [label="Exit QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", span="41-41", cluster="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider.Fetch(string)", file="ApiDataProvider.cs"];
m0_23 [label="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider", span="", file="ApiDataProvider.cs"];
m1_304 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="463-463", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="BacktestingSetupHandler.cs"];
m1_241 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="BacktestingSetupHandler.cs"];
m1_297 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="253-253", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingSetupHandler.cs"];
m1_309 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="BacktestingSetupHandler.cs"];
m1_240 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="BacktestingSetupHandler.cs"];
m1_266 [label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83", cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="BacktestingSetupHandler.cs"];
m1_303 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="BacktestingSetupHandler.cs"];
m1_432 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="BacktestingSetupHandler.cs"];
m1_9 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", span="135-135", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_10 [label="_dataPointCount = 0", span="138-138", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_11 [label="_algorithm = algorithm", span="139-139", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_12 [label="var portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="140-140", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_13 [label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="141-141", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_20 [label="_algorithmId = job.AlgorithmId", span="151-151", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_22 [label="_previousTime = algorithm.StartDate.Date", span="153-153", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_23 [label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="158-158", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_24 [label="var hasOnDataQuoteBars = AddMethodInvoker<QuoteBars>(algorithm, methodInvokers)", span="159-159", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_25 [label="var hasOnDataOptionChains = AddMethodInvoker<OptionChains>(algorithm, methodInvokers)", span="160-160", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_26 [label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="161-161", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_27 [label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="164-164", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_28 [label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="165-165", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_29 [label="var hasOnDataDelistings = AddMethodInvoker<Delistings>(algorithm, methodInvokers)", span="166-166", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_30 [label="var hasOnDataSymbolChangedEvents = AddMethodInvoker<SymbolChangedEvents>(algorithm, methodInvokers)", span="167-167", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_31 [label="var hasOnDataSlice = algorithm.GetType().GetMethods()\r\n                .Where(x => x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice))\r\n                .FirstOrDefault(x => x.DeclaringType == algorithm.GetType()) != null", span="170-172", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_32 [label="algorithm.SubscriptionManager.Subscriptions", span="175-175", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_34 [label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="181-181", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_37 [label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="189-189", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_42 [label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="201-201", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_43 [label="Stream(job, algorithm, feed, results, token)", span="202-202", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_47 [label="token.IsCancellationRequested", span="215-215", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_50 [label="leanManager.Update()", span="222-222", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_55 [label="SampleBenchmark(algorithm, results, _previousTime.Date)", span="235-235", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_56 [label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="238-238", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_58 [label="results.SamplePerformance(_previousTime.Date, 0)", span="243-243", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_59 [label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="247-247", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_60 [label="portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="249-249", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_64 [label="results.SystemDebugMessage(logMessage)", span="256-256", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_65 [label="SampleBenchmark(algorithm, results, time)", span="263-263", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_67 [label="realtime.ScanPastEvents(time)", span="273-273", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_68 [label="algorithm.SetDateTime(time)", span="277-277", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_71 [label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", span="283-283", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_73 [label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", span="288-288", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_77 [label="!algorithm.Securities.ContainsKey(security.Symbol)", span="299-299", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_78 [label="algorithm.Securities.Add(security)", span="302-302", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_87 [label="algorithm.TradeBuilder.SetMarketPrice(security.Symbol, security.Price)", span="327-327", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_88 [label="realtime.SetTime(timeSlice.Time)", span="331-331", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_89 [label="transactions.ProcessSynchronousEvents()", span="334-334", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_90 [label="ProcessDelistedSymbols(algorithm, delistings)", span="337-337", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_91 [label="algorithm.Status == AlgorithmStatus.Stopped", span="340-340", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_93 [label="algorithm.RunTimeError != null", span="345-345", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_95 [label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="348-348", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_98 [label="var marginCallOrders = algorithm.Portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="357-357", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_101 [label="algorithm.OnMarginCall(marginCallOrders)", span="364-364", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_103 [label="var executedTickets = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="369-369", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_105 [label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="372-372", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_107 [label="algorithm.RunTimeError = err", span="377-377", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_113 [label="algorithm.OnMarginCallWarning()", span="389-389", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_115 [label="algorithm.RunTimeError = err", span="393-393", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_121 [label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="406-406", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_124 [label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="416-416", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_126 [label="algorithm.RunTimeError = err", span="420-420", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_131 [label="Log.Trace(''AlgorithmManager.Run(): {0}: Applying Dividend for {1}'', algorithm.Time, dividend.Symbol.ToString())", span="430-430", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_132 [label="algorithm.Portfolio.ApplyDividend(dividend)", span="431-431", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_134 [label="Log.Trace(''AlgorithmManager.Run(): {0}: Applying Split for {1}'', algorithm.Time, split.Symbol.ToString())", span="439-439", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_135 [label="algorithm.Portfolio.ApplySplit(split)", span="440-440", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_136 [label="_liveMode || algorithm.Securities[split.Symbol].DataNormalizationMode == DataNormalizationMode.Raw", span="442-442", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_137 [label="var openOrders = transactions.GetOrderTickets(ticket => ticket.Status.IsOpen() && ticket.Symbol == split.Symbol)", span="445-445", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_138 [label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="446-446", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_140 [label="algorithm.RunTimeError = err", span="451-451", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_153 [label="algorithm.RunTimeError = err", span="483-483", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_162 [label="methodInvoker(algorithm, dataPoint)", span="504-504", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_164 [label="algorithm.RunTimeError = err", span="510-510", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_169 [label="methodInvokers[typeof(Dividends)](algorithm, timeSlice.Slice.Dividends)", span="522-522", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_171 [label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="526-526", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_173 [label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="530-530", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_175 [label="algorithm.RunTimeError = err", span="535-535", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_179 [label="HandleDelistedSymbols(algorithm, timeSlice.Slice.Delistings, delistings)", span="542-542", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_184 [label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="557-557", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_186 [label="methodInvokers[typeof(QuoteBars)](algorithm, timeSlice.Slice.QuoteBars)", span="558-558", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_188 [label="methodInvokers[typeof(OptionChains)](algorithm, timeSlice.Slice.OptionChains)", span="559-559", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_190 [label="methodInvokers[typeof(Ticks)](algorithm, timeSlice.Slice.Ticks)", span="560-560", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_192 [label="algorithm.RunTimeError = err", span="564-564", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_197 [label="algorithm.OnData(timeSlice.Slice)", span="575-575", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_199 [label="algorithm.RunTimeError = err", span="580-580", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_203 [label="transactions.ProcessSynchronousEvents()", span="588-588", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_205 [label="results.ProcessSynchronousEvents()", span="594-594", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_208 [label="algorithm.OnEndOfAlgorithm()", span="604-604", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_211 [label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="609-609", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_214 [label="results.ProcessSynchronousEvents(forceProcess: true)", span="615-615", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_217 [label="algorithm.Liquidate()", span="621-621", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_218 [label="results.LogMessage(''Algorithm Liquidated'')", span="622-622", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_219 [label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="623-623", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_222 [label="results.LogMessage(''Algorithm Stopped'')", span="630-630", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_223 [label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="631-631", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_226 [label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="638-638", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_227 [label="results.SendStatusUpdate(AlgorithmStatus.Deleted)", span="639-639", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_228 [label="results.SendStatusUpdate(AlgorithmStatus.Completed)", span="643-643", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_229 [label="results.SampleRange(algorithm.GetChartUpdates())", span="646-646", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_230 [label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="647-647", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_231 [label="SampleBenchmark(algorithm, results, backtestMode ? _previousTime.Date : _previousTime)", span="648-648", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_233 [label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime, 0m)", span="653-653", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_234 [label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime,\r\n                    Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="657-658", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_57 [label="portfolioValue == 0m", span="241-241", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_61 [label="portfolioValue <= 0", span="252-252", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_232 [label="portfolioValue == 0m", span="651-651", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_14 [label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="142-142", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_53 [label=backtestMode, span="230-230", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_66 [label=backtestMode, span="271-271", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_15 [label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="143-143", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_35 [label="methodInvokers.ContainsKey(config.Type)", span="184-184", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_41 [label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="195-195", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_159 [label="!methodInvokers.TryGetValue(update.DataType, out methodInvoker)", span="493-493", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_16 [label="var nextMarginCallTime = DateTime.MinValue", span="144-144", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_119 [label="nextMarginCallTime = time + marginCallFrequency", span="400-400", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_17 [label="var settlementScanFrequency = TimeSpan.FromMinutes(30)", span="145-145", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_96 [label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="353-353", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_18 [label="var nextSettlementScanTime = DateTime.MinValue", span="146-146", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_122 [label="nextSettlementScanTime = time + settlementScanFrequency", span="408-408", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_19 [label="var delistings = new List<Delisting>()", span="148-148", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_120 [label="time >= nextSettlementScanTime || (_liveMode && nextSettlementScanTime > DateTime.UtcNow)", span="404-404", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_21 [label="_algorithm.Status = AlgorithmStatus.Running", span="152-152", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_183 [label="hasOnDataTradeBars && timeSlice.Slice.Bars.Count > 0", span="557-557", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_185 [label="hasOnDataQuoteBars && timeSlice.Slice.QuoteBars.Count > 0", span="558-558", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_187 [label="hasOnDataOptionChains && timeSlice.Slice.OptionChains.Count > 0", span="559-559", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_189 [label="hasOnDataTicks && timeSlice.Slice.Ticks.Count > 0", span="560-560", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_168 [label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="520-520", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_170 [label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="524-524", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_172 [label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="528-528", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_70 [label=hasOnDataSymbolChangedEvents, span="281-281", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_36 [label="genericMethod == null && !hasOnDataSlice", span="187-187", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_33 [label="config.IsCustomData", span="178-178", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_40 [label="genericMethod != null", span="193-193", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_38 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="190-190", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_39 [label="return;", span="191-191", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_44 [label="_currentTimeStepTime = DateTime.UtcNow", span="205-205", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_206 [label="_currentTimeStepTime = DateTime.MinValue", span="598-598", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_46 [label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="210-210", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_48 [label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", span="217-217", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_51 [label="var time = timeSlice.Time", span="224-224", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_52 [label="_dataPointCount += timeSlice.DataPointCount", span="225-225", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_69 [label="timeSlice.Slice.SymbolChangedEvents.Count != 0", span="279-279", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_72 [label="timeSlice.Slice.SymbolChangedEvents.Keys", span="285-285", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_75 [label="timeSlice.SecurityChanges != SecurityChanges.None", span="295-295", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_76 [label="timeSlice.SecurityChanges.AddedSecurities", span="297-297", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_79 [label="timeSlice.CashBookUpdateData", span="308-308", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_83 [label="timeSlice.SecuritiesUpdateData", span="318-318", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_123 [label="timeSlice.SecurityChanges != SecurityChanges.None", span="412-412", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_130 [label="timeSlice.Slice.Dividends.Values", span="428-428", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_133 [label="timeSlice.Slice.Splits.Values", span="435-435", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_144 [label="timeSlice.ConsolidatorUpdateData", span="461-461", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_157 [label="timeSlice.CustomData", span="490-490", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_180 [label="timeSlice.Slice.QuoteBars.Count > 0", span="550-550", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_181 [label="timeSlice.Slice.QuoteBars.Where(x => x.Key.ID.SecurityType == SecurityType.Forex)", span="552-552", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_182 [label="timeSlice.Slice.Bars.Add(tradeBar.Value.Collapse())", span="554-554", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_196 [label="timeSlice.Slice.HasData", span="572-572", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_45 [label="_algorithm.Status != AlgorithmStatus.Running", span="208-208", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_49 [label="return;", span="218-218", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_54 [label="_previousTime.Date != time.Date", span="233-233", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_150 [label="var localTime = time.ConvertFromUtc(update.Target.ExchangeTimeZone)", span="476-476", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_204 [label="_previousTime = time", span="591-591", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_62 [label="string logMessage = ''AlgorithmManager.Run(): Portfolio value is less than or equal to zero''", span="254-254", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_63 [label="Log.Trace(logMessage)", span="255-255", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_74 [label="ticket.Cancel(''Open order cancelled on symbol changed event'')", span="290-290", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_80 [label="var cash = update.Target", span="310-310", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_81 [label="update.Data", span="311-311", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_82 [label="cash.Update(data)", span="313-313", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_84 [label="var security = update.Target", span="320-320", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_85 [label="update.Data", span="321-321", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_86 [label="security.SetMarketPrice(data)", span="323-323", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_92 [label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="342-342", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_94 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="347-347", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_97 [label="bool issueMarginCallWarning", span="356-356", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_99 [label="marginCallOrders.Count != 0", span="358-358", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_112 [label=issueMarginCallWarning, span="385-385", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_100 [label="var executingMarginCall = false", span="360-360", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_102 [label="executingMarginCall = true", span="366-366", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_109 [label="var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="379-379", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_104 [label=executedTickets, span="370-370", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_106 [label=Exception, span="375-375", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_108 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="378-378", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_110 [label="Log.Error(string.Format(''AlgorithmManager.Run(): RuntimeError: {0}: '', locator) + err)", span="380-380", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_111 [label="return;", span="381-381", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_114 [label=Exception, span="391-391", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_116 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="394-394", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_117 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err)", span="395-395", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_118 [label="return;", span="396-396", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_125 [label=Exception, span="418-418", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_127 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="421-421", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_128 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="422-422", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_129 [label="return;", span="423-423", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_139 [label=Exception, span="449-449", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_141 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="452-452", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_142 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="453-453", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_143 [label="return;", span="454-454", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_145 [label="var consolidators = update.Target.Consolidators", span="463-463", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_152 [label=Exception, span="481-481", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_147 [label="update.Data", span="466-466", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_148 [label="EndTimeIsInNativeResolution(update.Target, dataPoint.EndTime)", span="469-469", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_146 [label=consolidators, span="464-464", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_149 [label="consolidator.Update(dataPoint)", span="471-471", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_151 [label="consolidator.Scan(localTime)", span="477-477", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_154 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="484-484", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_155 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="485-485", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_156 [label="return;", span="486-486", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_158 [label="MethodInvoker methodInvoker", span="492-492", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_160 [label="update.Data", span="500-500", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_161 [label="update.DataType.IsInstanceOfType(dataPoint)", span="502-502", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_163 [label=Exception, span="508-508", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_165 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="511-511", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_166 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="512-512", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_167 [label="return;", span="513-513", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_174 [label=Exception, span="533-533", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_176 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="536-536", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_177 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits/Delistings: '' + err)", span="537-537", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_178 [label="return;", span="538-538", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_191 [label=Exception, span="562-562", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_193 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="565-565", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_194 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="566-566", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_195 [label="return;", span="567-567", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_198 [label=Exception, span="578-578", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_200 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="581-581", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_201 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="582-582", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_202 [label="return;", span="583-583", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_207 [label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="601-601", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_209 [label=Exception, span="606-606", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_210 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="608-608", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_212 [label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="610-610", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_213 [label="return;", span="611-611", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_215 [label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="618-618", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_216 [label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="620-620", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_220 [label="_algorithm.Status == AlgorithmStatus.Stopped", span="627-627", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_221 [label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="629-629", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_224 [label="_algorithm.Status == AlgorithmStatus.Deleted", span="635-635", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_225 [label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="637-637", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_235 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", span="135-135", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_288 [label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59", cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", file="BacktestingSetupHandler.cs"];
m1_427 [label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110", cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BacktestingSetupHandler.cs"];
m1_305 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="187-187", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingSetupHandler.cs"];
m1_416 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="BacktestingSetupHandler.cs"];
m1_525 [label="Entry decimal.SmartRounding()", span="206-206", cluster="decimal.SmartRounding()", file="BacktestingSetupHandler.cs"];
m1_302 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="BacktestingSetupHandler.cs"];
m1_298 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="405-405", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="BacktestingSetupHandler.cs"];
m1_273 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="385-385", cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="BacktestingSetupHandler.cs"];
m1_277 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="BacktestingSetupHandler.cs"];
m1_285 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BacktestingSetupHandler.cs"];
m1_419 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="BacktestingSetupHandler.cs"];
m1_517 [label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="BacktestingSetupHandler.cs"];
m1_286 [label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85", cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="BacktestingSetupHandler.cs"];
m1_275 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="BacktestingSetupHandler.cs"];
m1_423 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BacktestingSetupHandler.cs"];
m1_429 [label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="367-367", cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="BacktestingSetupHandler.cs"];
m1_411 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="541-541", cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="BacktestingSetupHandler.cs"];
m1_316 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="BacktestingSetupHandler.cs"];
m1_425 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="BacktestingSetupHandler.cs"];
m1_422 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="BacktestingSetupHandler.cs"];
m1_265 [label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81", cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="BacktestingSetupHandler.cs"];
m1_242 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="BacktestingSetupHandler.cs"];
m1_280 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="361-361", cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BacktestingSetupHandler.cs"];
m1_532 [label="Entry System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", span="494-494", cluster="System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", file="BacktestingSetupHandler.cs"];
m1_238 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BacktestingSetupHandler.cs"];
m1_300 [label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="524-524", cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BacktestingSetupHandler.cs"];
m1_283 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="595-595", cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="BacktestingSetupHandler.cs"];
m1_415 [label="Entry Unk.Min", span="", cluster="Unk.Min", file="BacktestingSetupHandler.cs"];
m1_490 [label="Entry lambda expression", span="908-908", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_4 [label="Entry lambda expression", span="109-117", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_5 [label="CurrentTimeStepElapsed > _timeLoopMaximum", span="111-111", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_6 [label="return ''Algorithm took longer than 10 minutes on a single time loop.'';", span="113-113", cluster="lambda expression", color=red, community=0, file="BacktestingSetupHandler.cs"];
m1_7 [label="return null;", span="116-116", cluster="lambda expression", color=red, community=0, file="BacktestingSetupHandler.cs"];
m1_8 [label="Exit lambda expression", span="109-117", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_311 [label="x.DeclaringType == algorithm.GetType()", span="172-172", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_306 [label="Entry lambda expression", span="171-171", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_310 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_314 [label="x.Status.IsOpen() && x.Symbol == symbol", span="288-288", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_313 [label="Entry lambda expression", span="288-288", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_318 [label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="445-445", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_317 [label="Entry lambda expression", span="445-445", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_320 [label="Entry lambda expression", span="552-552", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_307 [label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="171-171", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_308 [label="Exit lambda expression", span="171-171", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_312 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_315 [label="Exit lambda expression", span="288-288", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_319 [label="Exit lambda expression", span="445-445", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_321 [label="x.Key.ID.SecurityType == SecurityType.Forex", span="552-552", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_322 [label="Exit lambda expression", span="552-552", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_434 [label="Entry lambda expression", span="698-698", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_438 [label="Entry lambda expression", span="707-707", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_441 [label="Entry lambda expression", span="708-708", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_444 [label="Entry lambda expression", span="723-723", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_447 [label="Entry lambda expression", span="725-725", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_450 [label="Entry lambda expression", span="725-725", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_453 [label="Entry lambda expression", span="726-726", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_456 [label="Entry lambda expression", span="813-813", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_435 [label="x.Value.Configuration.Resolution.ToTimeSpan()", span="698-698", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_436 [label="Exit lambda expression", span="698-698", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_439 [label="!x.IsInternalFeed", span="707-707", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_440 [label="Exit lambda expression", span="707-707", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_442 [label="x.Resolution", span="708-708", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_443 [label="Exit lambda expression", span="708-708", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_445 [label="x.FillForwardResolution.HasValue", span="723-723", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_446 [label="Exit lambda expression", span="723-723", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_448 [label="x.FillForwardResolution.HasValue", span="725-725", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_449 [label="Exit lambda expression", span="725-725", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_451 [label="x.FillForwardResolution.Value", span="725-725", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_452 [label="Exit lambda expression", span="725-725", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_454 [label="x.FillForwardResolution.HasValue", span="726-726", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_455 [label="Exit lambda expression", span="726-726", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_457 [label=x, span="813-813", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_458 [label="Exit lambda expression", span="813-813", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_491 [label="x.Symbol == delisting.Symbol && x.Type == delisting.Type", span="908-908", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_492 [label="Exit lambda expression", span="908-908", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m1_472 [label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38", cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="BacktestingSetupHandler.cs"];
m1_267 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="BacktestingSetupHandler.cs"];
m1_430 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="535-535", cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="BacktestingSetupHandler.cs"];
m1_514 [label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238", cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="BacktestingSetupHandler.cs"];
m1_526 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="171-171", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", file="BacktestingSetupHandler.cs"];
m1_278 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="390-390", cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="BacktestingSetupHandler.cs"];
m1_284 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="615-615", cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="BacktestingSetupHandler.cs"];
m1_248 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="BacktestingSetupHandler.cs"];
m1_260 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="440-440", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_254 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="977-977", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_518 [label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="982-982", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_520 [label="algorithm.RunTimeError = err", span="986-986", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_519 [label=Exception, span="984-984", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_521 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="987-987", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_522 [label="Log.Error(err)", span="988-988", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_523 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="977-977", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_259 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", span="59-59", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_257 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="163-163", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", file="BacktestingSetupHandler.cs"];
m1_264 [label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122", cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="BacktestingSetupHandler.cs"];
m1_256 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="155-155", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", file="BacktestingSetupHandler.cs"];
m1_421 [label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53", cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="BacktestingSetupHandler.cs"];
m1_426 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m1_287 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="995-995", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_527 [label="config.Increment == TimeSpan.Zero", span="997-997", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_529 [label="var roundedDataPointEndTime = dataPointEndTime.RoundDownInTimeZone(config.Increment, config.ExchangeTimeZone, config.DataTimeZone)", span="1002-1002", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_530 [label="return dataPointEndTime == roundedDataPointEndTime;", span="1003-1003", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_528 [label="return true;", span="999-999", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_531 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="995-995", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_295 [label="Entry Unk.Collapse", span="", cluster="Unk.Collapse", file="BacktestingSetupHandler.cs"];
m1_296 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="355-355", cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs"];
m1_299 [label="Entry System.Exception.Exception(string, System.Exception)", span="0-0", cluster="System.Exception.Exception(string, System.Exception)", file="BacktestingSetupHandler.cs"];
m1_249 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestingSetupHandler.cs"];
m1_301 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="120-120", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="BacktestingSetupHandler.cs"];
m1_413 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BacktestingSetupHandler.cs"];
m1_262 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50", cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BacktestingSetupHandler.cs"];
m1_289 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m1_433 [label="Entry Unk.Subtract", span="", cluster="Unk.Subtract", file="BacktestingSetupHandler.cs"];
m1_291 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BacktestingSetupHandler.cs"];
m1_271 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="928-928", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_493 [label="var i = delistings.Count - 1", span="930-930", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_495 [label="var security = algorithm.Securities[delistings[i].Symbol]", span="933-933", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_497 [label="var delistingTime = delistings[i].Time", span="937-937", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_503 [label="var underlying = algorithm.Securities[security.Symbol.Underlying]", span="948-948", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_506 [label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option exercise on expiration'')", span="953-954", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_507 [label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option assignment on expiration'')", span="958-959", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_508 [label="request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="964-965", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_509 [label="algorithm.Transactions.ProcessRequest(request)", span="968-968", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_510 [label="delistings.RemoveAt(i)", span="970-970", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_494 [label="i >= 0", span="930-930", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_511 [label="i--", span="930-930", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_496 [label="security.Holdings.Quantity == 0", span="934-934", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_498 [label="var nextMarketOpen = security.Exchange.Hours.GetNextMarketOpen(delistingTime, false)", span="938-938", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_499 [label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(nextMarketOpen, false)", span="939-939", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_500 [label="security.LocalTime < nextMarketClose", span="941-941", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_502 [label="security.Type == SecurityType.Option", span="946-946", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_504 [label="var option = (Option)security", span="949-949", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_505 [label="security.Holdings.Quantity > 0", span="951-951", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_501 [label="SubmitOrderRequest request", span="944-944", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_512 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="928-928", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_515 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="BacktestingSetupHandler.cs"];
m1_293 [label="Entry Unk.methodInvoker", span="", cluster="Unk.methodInvoker", file="BacktestingSetupHandler.cs"];
m1_258 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", span="108-108", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", file="BacktestingSetupHandler.cs"];
m1_263 [label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="258-258", cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="BacktestingSetupHandler.cs"];
m1_424 [label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80", cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="BacktestingSetupHandler.cs"];
m1_281 [label="Entry QuantConnect.Symbol.ToString()", span="354-354", cluster="QuantConnect.Symbol.ToString()", file="BacktestingSetupHandler.cs"];
m1_513 [label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", span="205-205", cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", file="BacktestingSetupHandler.cs"];
m1_239 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="886-886", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BacktestingSetupHandler.cs"];
m1_473 [label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="888-888", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BacktestingSetupHandler.cs"];
m1_475 [label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="891-891", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BacktestingSetupHandler.cs"];
m1_474 [label="newSplitMethodInfo != null", span="889-889", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BacktestingSetupHandler.cs"];
m1_477 [label="return false;", span="894-894", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BacktestingSetupHandler.cs"];
m1_476 [label="return true;", span="892-892", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BacktestingSetupHandler.cs"];
m1_478 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="886-886", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BacktestingSetupHandler.cs"];
m1_253 [label="Entry QuantConnect.Lean.Engine.Server.ILeanManager.Update()", span="46-46", cluster="QuantConnect.Lean.Engine.Server.ILeanManager.Update()", file="BacktestingSetupHandler.cs"];
m1_246 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BacktestingSetupHandler.cs"];
m1_272 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="541-541", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="BacktestingSetupHandler.cs"];
m1_471 [label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156", cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="BacktestingSetupHandler.cs"];
m1_247 [label="Entry Unk.DelegateForCallMethod", span="", cluster="Unk.DelegateForCallMethod", file="BacktestingSetupHandler.cs"];
m1_261 [label="Entry Unk.]", span="", cluster="Unk.]", file="BacktestingSetupHandler.cs"];
m1_431 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="BacktestingSetupHandler.cs"];
m1_0 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="BacktestingSetupHandler.cs"];
m1_1 [label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return ''Algorithm took longer than 10 minutes on a single time loop.'';\r\n                }\r\n\r\n                return null;\r\n            }", span="109-117", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", color=red, community=0, file="BacktestingSetupHandler.cs"];
m1_2 [label="_liveMode = liveMode", span="118-118", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", color=red, community=0, file="BacktestingSetupHandler.cs"];
m1_3 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="BacktestingSetupHandler.cs"];
m1_250 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="678-678", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_328 [label="bool setStartTime = false", span="680-680", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_371 [label="yield break;", span="762-762", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_381 [label="yield return timeSlice;", span="781-781", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_408 [label="yield return timeSlice;", span="848-848", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_329 [label="var timeZone = algorithm.TimeZone", span="681-681", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_330 [label="var history = algorithm.HistoryProvider", span="682-682", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_331 [label="algorithm.LiveMode", span="685-685", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_332 [label="ProcessVolatilityHistoryRequirements(algorithm)", span="687-687", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_334 [label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="692-692", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_337 [label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="697-700", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_340 [label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="707-707", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_344 [label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="712-712", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_359 [label="var security = algorithm.Securities[symbol]", span="748-748", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_367 [label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="756-756", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_370 [label="algorithm.RunTimeError = err", span="761-761", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_376 [label="algorithm.Debug(''Algorithm warming up...'')", span="771-771", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_380 [label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="779-779", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_383 [label="!algorithm.LiveMode || historyRequests.Count == 0", span="788-788", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_384 [label="algorithm.SetFinishedWarmingUp()", span="790-790", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_386 [label="algorithm.Debug(''Algorithm finished warming up.'')", span="793-793", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_388 [label=feed, span="798-798", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_392 [label="algorithm.LiveMode && algorithm.IsWarmingUp", span="805-805", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_396 [label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="816-816", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_401 [label="algorithm.SetFinishedWarmingUp()", span="835-835", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_402 [label="algorithm.Debug(''Algorithm finished warming up.'')", span="836-836", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_407 [label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="845-845", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_373 [label="!setStartTime", span="767-767", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_389 [label="!setStartTime", span="800-800", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_355 [label="history.GetHistory(historyRequests, timeZone)", span="739-739", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_333 [label="DateTime? lastHistoryTimeUtc = null", span="691-691", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_393 [label="lastHistoryTimeUtc.HasValue", span="809-809", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_335 [label="var start = DateTime.UtcNow.Ticks", span="695-695", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_339 [label="historyRequests.Count != 0", span="704-704", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_342 [label=historyRequests, span="709-709", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_348 [label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="723-723", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_349 [label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="725-725", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_350 [label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="726-726", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_352 [label=historyRequests, span="732-732", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_385 [label="historyRequests.Count != 0", span="791-791", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_336 [label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="696-696", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_353 [label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="734-734", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_379 [label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="778-778", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_406 [label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="844-844", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_377 [label="DateTime.UtcNow > nextStatusTime", span="773-773", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_404 [label="DateTime.UtcNow > nextStatusTime", span="839-839", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_338 [label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="702-702", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_400 [label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="833-833", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_341 [label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="708-708", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_345 [label="request.Resolution < minResolution", span="714-714", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_346 [label="request.Resolution = minResolution", span="716-716", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_347 [label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="717-717", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_343 [label="Security security", span="711-711", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_351 [label="request.FillForwardResolution = minResolution", span="728-728", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_354 [label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="735-735", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_356 [label="TimeSlice timeSlice", span="741-741", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_358 [label="slice.Keys", span="746-746", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_360 [label="var data = slice[symbol]", span="749-749", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_357 [label="var paired = new List<DataFeedPacket>()", span="745-745", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_366 [label="paired.Add(new DataFeedPacket(security, security.Subscriptions.First(), list))", span="754-754", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_361 [label="var list = new List<BaseData>()", span="750-750", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_362 [label="var ticks = data as List<Tick>", span="751-751", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_365 [label="list.Add(data)", span="753-753", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_364 [label="list.AddRange(ticks)", span="752-752", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_363 [label="ticks != null", span="752-752", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_368 [label=Exception, span="758-758", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_372 [label="timeSlice != null", span="765-765", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_375 [label="_previousTime = timeSlice.Time", span="770-770", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_382 [label="lastHistoryTimeUtc = timeSlice.Time", span="782-782", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_369 [label="Log.Error(err)", span="760-760", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_374 [label="setStartTime = true", span="769-769", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_378 [label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="777-777", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_387 [label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="794-794", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_391 [label="_previousTime = timeSlice.Time", span="803-803", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_395 [label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="813-813", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_390 [label="setStartTime = true", span="802-802", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_394 [label="var hasHistoricalData = false", span="812-812", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_398 [label=hasHistoricalData, span="822-822", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_397 [label="hasHistoricalData = true", span="818-818", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_399 [label="lastHistoryTimeUtc = null", span="828-828", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_403 [label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="837-837", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_405 [label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="843-843", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_409 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="678-678", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m1_243 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="BacktestingSetupHandler.cs"];
m1_282 [label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123", cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="BacktestingSetupHandler.cs"];
m1_524 [label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29", cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_470 [label="Entry QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="46-46", cluster="QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_255 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)", file="BacktestingSetupHandler.cs"];
m1_418 [label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30", cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="BacktestingSetupHandler.cs"];
m1_516 [label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BacktestingSetupHandler.cs"];
m1_274 [label="Entry QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="43-43", cluster="QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="BacktestingSetupHandler.cs"];
m1_410 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="852-852", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_459 [label="Log.Trace(''AlgorithmManager.ProcessVolatilityHistoryRequirements(): Updating volatility models with historical data...'')", span="854-854", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_460 [label="algorithm.Securities.Values", span="856-856", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_462 [label="var historyReq = security.VolatilityModel.GetHistoryRequirements(security, algorithm.UtcTime)", span="860-860", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_463 [label="historyReq != null && algorithm.HistoryProvider != null", span="862-862", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_464 [label="var history = algorithm.HistoryProvider.GetHistory(historyReq, algorithm.TimeZone)", span="864-864", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_461 [label="security.VolatilityModel != VolatilityModel.Null", span="858-858", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_467 [label="slice.Bars.ContainsKey(security.Symbol)", span="869-869", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_468 [label="security.VolatilityModel.Update(security, slice.Bars[security.Symbol])", span="870-870", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_465 [label="history != null", span="865-865", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_466 [label=history, span="867-867", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_469 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="852-852", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m1_323 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="665-665", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="BacktestingSetupHandler.cs"];
m1_324 [label=_lock, span="667-667", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="BacktestingSetupHandler.cs"];
m1_325 [label="state != AlgorithmStatus.Running", span="671-671", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="BacktestingSetupHandler.cs"];
m1_326 [label="_algorithm.Status = state", span="673-673", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="BacktestingSetupHandler.cs"];
m1_327 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="665-665", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="BacktestingSetupHandler.cs"];
m1_290 [label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65", cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_251 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BacktestingSetupHandler.cs"];
m1_294 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="901-901", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_479 [label="newDelistings.Values", span="903-903", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_481 [label="!delistings.Any(x => x.Symbol == delisting.Symbol && x.Type == delisting.Type)", span="908-908", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_482 [label="delistings.Add(delisting)", span="910-910", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_485 [label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="917-917", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_480 [label="delisting.Type == DelistingType.Warning", span="906-906", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_483 [label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.Value)", span="911-911", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_484 [label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.Value)", span="916-916", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_486 [label=cancelledOrders, span="918-918", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_487 [label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="920-920", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_488 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="901-901", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BacktestingSetupHandler.cs"];
m1_437 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722", cluster="QuantConnect.Resolution.ToTimeSpan()", file="BacktestingSetupHandler.cs"];
m1_269 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_245 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BacktestingSetupHandler.cs"];
m1_252 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BacktestingSetupHandler.cs"];
m1_237 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="BacktestingSetupHandler.cs"];
m1_268 [label="Entry QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="49-49", cluster="QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", file="BacktestingSetupHandler.cs"];
m1_276 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="379-379", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BacktestingSetupHandler.cs"];
m1_279 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="BacktestingSetupHandler.cs"];
m1_417 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="BacktestingSetupHandler.cs"];
m1_270 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="75-75", cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="BacktestingSetupHandler.cs"];
m1_412 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="BacktestingSetupHandler.cs"];
m1_420 [label="Entry System.Math.Min(long, long)", span="0-0", cluster="System.Math.Min(long, long)", file="BacktestingSetupHandler.cs"];
m1_236 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BacktestingSetupHandler.cs"];
m1_244 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="BacktestingSetupHandler.cs"];
m1_489 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="BacktestingSetupHandler.cs"];
m1_292 [label="Entry System.Type.IsInstanceOfType(object)", span="0-0", cluster="System.Type.IsInstanceOfType(object)", file="BacktestingSetupHandler.cs"];
m1_414 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty", file="BacktestingSetupHandler.cs"];
m1_533 [label="QuantConnect.Lean.Engine.AlgorithmManager", span="", file="BacktestingSetupHandler.cs"];
m1_534 [label="QuantConnect.Interfaces.IAlgorithm", span="", file="BacktestingSetupHandler.cs"];
m1_535 [label=symbol, span="", file="BacktestingSetupHandler.cs"];
m1_536 [label=split, span="", file="BacktestingSetupHandler.cs"];
m1_537 [label=delisting, span="", file="BacktestingSetupHandler.cs"];
m2_130 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", span="460-460", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_253 [label="var resetEvent = new ManualResetEvent(false)", span="462-462", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_256 [label="_algorithm.StopMarketOrder(symbol, quantity, stopPrice)", span="468-468", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_254 [label="EventHandler<OrderEvent> handler = (s, e) => { resetEvent.Set(); }", span="464-464", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_257 [label="resetEvent.WaitOne()", span="470-470", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_255 [label="_brokerage.OrderStatusChanged += handler", span="466-466", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_258 [label="_brokerage.OrderStatusChanged -= handler", span="472-472", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_259 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", span="460-460", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_0 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", span="46-46", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_1 [label="_algorithm = new QCAlgorithm()", span="48-48", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_2 [label="_portfolio = _algorithm.Portfolio", span="49-49", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_20 [label="Entry Unk.AddDays", span="", cluster="Unk.AddDays", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_155 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", span="288-288", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_156 [label="_portfolio.SetCash(0)", span="290-290", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_157 [label="_btcusd.SetMarketPrice(new Tick { Value = 10000m })", span="292-292", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_158 [label="_portfolio.SetCash(''BTC'', 0.5m, 10000m)", span="293-293", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_159 [label="var order = new MarketOrder(_btcusd.Symbol, -0.5m, DateTime.UtcNow)", span="296-296", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_160 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="297-297", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_161 [label="order = new MarketOrder(_btcusd.Symbol, -0.51m, DateTime.UtcNow)", span="300-300", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_162 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="301-301", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_163 [label="Assert.AreEqual(-0.5m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btcusd, 0))", span="304-304", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_164 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", span="288-288", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_44 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", span="204-204", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_34 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.TearDown()", span="92-92", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.TearDown()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_35 [label="_transactionHandler.Exit()", span="94-94", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.TearDown()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_36 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.TearDown()", span="92-92", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.TearDown()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_180 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", span="338-338", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_181 [label="_portfolio.SetCash(5000)", span="340-340", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_182 [label="_portfolio.CashBook[''BTC''].SetAmount(1m)", span="341-341", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_183 [label="_portfolio.CashBook[''ETH''].SetAmount(3m)", span="342-342", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_184 [label="_btcusd = _algorithm.AddCrypto(''BTCUSD'')", span="344-344", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_185 [label="_btcusd.SetMarketPrice(new Tick { Value = 15000m })", span="345-345", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_186 [label="_ethusd = _algorithm.AddCrypto(''ETHUSD'')", span="347-347", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_187 [label="_ethusd.SetMarketPrice(new Tick { Value = 1000m })", span="348-348", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_188 [label="_ethbtc = _algorithm.AddCrypto(''ETHBTC'')", span="350-350", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_189 [label="_ethbtc.SetMarketPrice(new Tick { Value = 0.1m })", span="351-351", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_190 [label="_algorithm.SetFinishedWarmingUp()", span="352-352", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_191 [label="SubmitLimitOrder(_btcusd.Symbol, -0.1m, 15000m)", span="355-355", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_192 [label="SubmitLimitOrder(_ethbtc.Symbol, 1m, 0.1m)", span="358-358", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_193 [label="Assert.AreEqual(-0.798m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btcusd, 0.2m * 15000))", span="362-362", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_194 [label="var order = new MarketOrder(_btcusd.Symbol, -0.80m, DateTime.UtcNow)", span="365-365", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_195 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="366-366", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_196 [label="order = new MarketOrder(_btcusd.Symbol, -0.81m, DateTime.UtcNow)", span="369-369", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_197 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="370-370", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_198 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", span="338-338", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_19 [label="Entry BaseDataCollection.cstr", span="", cluster="BaseDataCollection.cstr", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_131 [label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="55-55", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_33 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.CashBuyingPowerModel()", span="24-24", cluster="QuantConnect.Securities.CashBuyingPowerModel.CashBuyingPowerModel()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_260 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_60 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="55-55", cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_209 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", span="391-391", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_210 [label="_portfolio.SetCash(10000)", span="393-393", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_211 [label="_portfolio.SetCash(''EUR'', 10000m, 1.20m)", span="394-394", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_212 [label="_btcusd = _algorithm.AddCrypto(''BTCUSD'')", span="396-396", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_213 [label="_btcusd.SetMarketPrice(new Tick { Value = 15000m })", span="397-397", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_214 [label="_ethusd = _algorithm.AddCrypto(''ETHUSD'')", span="399-399", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_215 [label="_ethusd.SetMarketPrice(new Tick { Value = 1000m })", span="400-400", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_216 [label="_ethbtc = _algorithm.AddCrypto(''ETHBTC'')", span="402-402", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_217 [label="_ethbtc.SetMarketPrice(new Tick { Value = 0.1m })", span="403-403", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_218 [label="_btceur = _algorithm.AddCrypto(''BTCEUR'')", span="405-405", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_219 [label="_btceur.SetMarketPrice(new Tick { Value = 12000m })", span="406-406", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_220 [label="_algorithm.SetFinishedWarmingUp()", span="407-407", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_221 [label="Assert.AreEqual(0.665m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btcusd, 10000))", span="410-410", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_222 [label="Assert.AreEqual(9.97m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _ethusd, 10000))", span="413-413", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_223 [label="Assert.AreEqual(0m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _ethbtc, 10000))", span="416-416", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_224 [label="var targetValue = 10000m * _portfolio.CashBook[''EUR''].ConversionRate", span="419-419", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_225 [label="Assert.AreEqual(0.83125m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btceur, targetValue))", span="420-420", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_226 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", span="391-391", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_83 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", span="164-164", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_84 [label="_portfolio.SetCash(5000)", span="166-166", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_85 [label="_btcusd = _algorithm.AddCrypto(''BTCUSD'')", span="168-168", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_86 [label="_btcusd.SetMarketPrice(new Tick { Value = 15000m })", span="169-169", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_87 [label="_ethusd = _algorithm.AddCrypto(''ETHUSD'')", span="171-171", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_88 [label="_ethusd.SetMarketPrice(new Tick { Value = 1000m })", span="172-172", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_89 [label="_algorithm.SetFinishedWarmingUp()", span="173-173", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_90 [label="SubmitLimitOrder(_btcusd.Symbol, 0.1m, 15000m)", span="176-176", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_91 [label="SubmitLimitOrder(_ethusd.Symbol, 3m, 1000m)", span="179-179", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_92 [label="var order = new LimitOrder(_btcusd.Symbol, 0.05m, 10000m, DateTime.UtcNow)", span="182-182", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_93 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="183-183", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_94 [label="order = new LimitOrder(_btcusd.Symbol, 0.06m, 10000m, DateTime.UtcNow)", span="186-186", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_95 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="187-187", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_96 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", span="164-164", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_7 [label="_transactionHandler = new BacktestingTransactionHandler()", span="56-56", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_11 [label="_algorithm.Transactions.SetOrderProcessor(_transactionHandler)", span="61-61", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", color=green, community=0, file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_6 [label="_algorithm.SetBrokerageModel(BrokerageName.GDAX, AccountType.Cash)", span="54-54", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_8 [label="_brokerage = new BacktestingBrokerage(_algorithm)", span="57-57", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_9 [label="_transactionHandler.Initialize(_algorithm, _brokerage, new TestResultHandler())", span="58-58", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_10 [label="new Thread(_transactionHandler.Run) { IsBackground = true }.Start()", span="59-59", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_12 [label="var tz = TimeZones.NewYork", span="63-63", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_208 [label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="114-114", cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_102 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", span="191-191", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_103 [label="_portfolio.SetCash(5000)", span="193-193", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_104 [label="_portfolio.CashBook[''BTC''].SetAmount(1m)", span="194-194", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_105 [label="_portfolio.CashBook[''ETH''].SetAmount(3m)", span="195-195", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_106 [label="_btcusd = _algorithm.AddCrypto(''BTCUSD'')", span="197-197", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_107 [label="_btcusd.SetMarketPrice(new Tick { Value = 15000m })", span="198-198", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_108 [label="_ethusd = _algorithm.AddCrypto(''ETHUSD'')", span="200-200", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_109 [label="_ethusd.SetMarketPrice(new Tick { Value = 1000m })", span="201-201", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_110 [label="_ethbtc = _algorithm.AddCrypto(''ETHBTC'')", span="203-203", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_111 [label="_ethbtc.SetMarketPrice(new Tick { Value = 0.1m })", span="204-204", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_112 [label="_algorithm.SetFinishedWarmingUp()", span="205-205", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_113 [label="SubmitLimitOrder(_btcusd.Symbol, -0.1m, 15000m)", span="208-208", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_114 [label="SubmitLimitOrder(_ethusd.Symbol, -1m, 1000m)", span="211-211", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_115 [label="SubmitLimitOrder(_ethbtc.Symbol, 1m, 0.1m)", span="214-214", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_116 [label="SubmitStopMarketOrder(_btcusd.Symbol, -0.1m, 5000m)", span="217-217", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_117 [label="var order = new LimitOrder(_btcusd.Symbol, -0.7m, 10000m, DateTime.UtcNow)", span="220-220", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_118 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="221-221", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_119 [label="order = new LimitOrder(_btcusd.Symbol, -0.8m, 10000m, DateTime.UtcNow)", span="224-224", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_120 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="225-225", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_121 [label="order = new LimitOrder(_ethusd.Symbol, -2m, 1200m, DateTime.UtcNow)", span="228-228", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_122 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _ethusd, order))", span="229-229", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_123 [label="order = new LimitOrder(_ethusd.Symbol, -2.1m, 2000m, DateTime.UtcNow)", span="232-232", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_124 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _ethusd, order))", span="233-233", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_125 [label="var stopOrder = new StopMarketOrder(_btcusd.Symbol, -0.7m, 5000m, DateTime.UtcNow)", span="236-236", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_126 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, stopOrder))", span="237-237", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_127 [label="stopOrder = new StopMarketOrder(_btcusd.Symbol, -0.8m, 5000m, DateTime.UtcNow)", span="240-240", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_128 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, stopOrder))", span="241-241", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_129 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", span="191-191", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_15 [label="_btceur = new Crypto(\r\n                SecurityExchangeHours.AlwaysOpen(tz),\r\n                _portfolio.CashBook[''EUR''],\r\n                new SubscriptionDataConfig(typeof(TradeBar), Symbols.BTCEUR, Resolution.Minute, tz, tz, true, false, false),\r\n                new SymbolProperties(''BTCEUR'', ''EUR'', 1, 0.01m, 0.00000001m))", span="76-80", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_3 [label="_portfolio.CashBook.Add(''EUR'', 0, 1.20m)", span="50-50", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_250 [label="resetEvent.Set()", span="448-448", cluster="lambda expression", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_249 [label="Entry lambda expression", span="448-448", cluster="lambda expression", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_251 [label="Exit lambda expression", span="448-448", cluster="lambda expression", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_262 [label="resetEvent.Set()", span="464-464", cluster="lambda expression", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_261 [label="Entry lambda expression", span="464-464", cluster="lambda expression", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_263 [label="Exit lambda expression", span="464-464", cluster="lambda expression", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_4 [label="_portfolio.CashBook.Add(''BTC'', 0, 15000m)", span="51-51", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_5 [label="_portfolio.CashBook.Add(''ETH'', 0, 1000m)", span="52-52", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_31 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_63 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_99 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="540-540", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_247 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_73 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="485-485", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_227 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", span="424-424", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_228 [label="_portfolio.SetCash(8000)", span="426-426", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_229 [label="_portfolio.CashBook.Add(''BTC'', 0.2m, 10000m)", span="427-427", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_230 [label="_btcusd = _algorithm.AddCrypto(''BTCUSD'')", span="429-429", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_231 [label="_btcusd.SetMarketPrice(new Tick { Value = 10000m })", span="430-430", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_232 [label="_algorithm.SetFinishedWarmingUp()", span="431-431", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_233 [label="Assert.AreEqual(10000m, _portfolio.TotalPortfolioValue)", span="433-433", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_234 [label="var quantity = _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btcusd, 10000m)", span="436-436", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_235 [label="Assert.AreEqual(0.798m, quantity)", span="437-437", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_236 [label="var order = new MarketOrder(_btcusd.Symbol, quantity, DateTime.UtcNow)", span="440-440", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_237 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="441-441", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_238 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", span="424-424", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksExistingHoldings()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_246 [label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0", cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_37 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="608-608", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_100 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="142-142", cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_62 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="967-967", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_97 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1613-1613", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_25 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="36-36", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_24 [label="Entry QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="51-51", cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_143 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="122-122", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_50 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", span="113-113", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_51 [label="_portfolio.SetCash(20000)", span="115-115", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_52 [label="var order = new LimitOrder(_btcusd.Symbol, 2m, 10000m, DateTime.UtcNow)", span="118-118", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_53 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="119-119", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_54 [label="order = new LimitOrder(_btcusd.Symbol, 2.1m, 10000m, DateTime.UtcNow)", span="122-122", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_55 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="123-123", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_56 [label="order = new LimitOrder(_btcusd.Symbol, 2m, 11000m, DateTime.UtcNow)", span="126-126", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_57 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="127-127", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_58 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", span="113-113", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_26 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_27 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_64 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", span="131-131", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_65 [label="_portfolio.SetCash(''EUR'', 20000m, 1.20m)", span="133-133", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_66 [label="var order = new LimitOrder(_btceur.Symbol, 2m, 10000m, DateTime.UtcNow)", span="136-136", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_67 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btceur, order))", span="137-137", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_68 [label="order = new LimitOrder(_btceur.Symbol, 2.1m, 10000m, DateTime.UtcNow)", span="140-140", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_69 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btceur, order))", span="141-141", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_70 [label="order = new LimitOrder(_btceur.Symbol, 2m, 11000m, DateTime.UtcNow)", span="144-144", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_71 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btceur, order))", span="145-145", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_72 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", span="131-131", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_13 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="18-18", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_14 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_16 [label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="161-161", cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_17 [label="Entry Unk.ForSource", span="", cluster="Unk.ForSource", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_18 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_49 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="45-45", cluster="QuantConnect.Securities.CashBuyingPowerModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_82 [label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="127-127", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_45 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", span="105-105", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_46 [label="_buyingPowerModel.SetLeverage(_btcusd, 50m)", span="108-108", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_47 [label="Assert.AreEqual(1m, _buyingPowerModel.GetLeverage(_btcusd))", span="109-109", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_48 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", span="105-105", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_23 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_30 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_43 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_28 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="335-335", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_142 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_199 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", span="374-374", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_200 [label="_portfolio.SetCash(20000)", span="376-376", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_201 [label="_btcusd.FeeModel = new ConstantFeeModel(50)", span="377-377", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_202 [label="var order = new LimitOrder(_btcusd.Symbol, 2m, 10000m, DateTime.UtcNow)", span="380-380", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_203 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="381-381", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_205 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="387-387", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_204 [label="_portfolio.CashBook[''USD''].AddAmount(50)", span="384-384", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_206 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", span="374-374", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_42 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", span="31-31", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_207 [label="Entry QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", span="31-31", cluster="QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_61 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_29 [label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37", cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_22 [label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory", span="", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_101 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", span="444-444", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_239 [label="var resetEvent = new ManualResetEvent(false)", span="446-446", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_242 [label="_algorithm.LimitOrder(symbol, quantity, limitPrice)", span="452-452", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_240 [label="EventHandler<OrderEvent> handler = (s, e) => { resetEvent.Set(); }", span="448-448", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_243 [label="resetEvent.WaitOne()", span="454-454", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_241 [label="_brokerage.OrderStatusChanged += handler", span="450-450", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_244 [label="_brokerage.OrderStatusChanged -= handler", span="456-456", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_245 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", span="444-444", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_132 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", span="245-245", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_133 [label="_portfolio.SetCash(20000)", span="247-247", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_134 [label="_btcusd.SetMarketPrice(new Tick { Value = 10000m })", span="249-249", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_135 [label="var order = new MarketOrder(_btcusd.Symbol, 2m, DateTime.UtcNow)", span="252-252", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_136 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="253-253", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_137 [label="Assert.AreEqual(1.995m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btcusd, 20000))", span="256-256", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_138 [label="_btcusd.SetMarketPrice(new Tick { Value = 9900m })", span="258-258", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_139 [label="order = new MarketOrder(_btcusd.Symbol, 2m, DateTime.UtcNow)", span="261-261", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_140 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="262-262", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_141 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", span="245-245", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_38 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", span="98-98", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_39 [label="Assert.AreEqual(1m, _buyingPowerModel.GetLeverage(_btcusd))", span="100-100", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_40 [label="Assert.AreEqual(0m, _buyingPowerModel.GetReservedBuyingPowerForPosition(_btcusd))", span="101-101", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_41 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", span="98-98", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_248 [label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0", cluster="System.Threading.WaitHandle.WaitOne()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_59 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="474-474", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_144 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", span="266-266", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_145 [label="_portfolio.SetCash(''EUR'', 20000m, 1.20m)", span="268-268", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_146 [label="_btceur.SetMarketPrice(new Tick { Value = 10000m })", span="270-270", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_147 [label="var order = new MarketOrder(_btceur.Symbol, 2m, DateTime.UtcNow)", span="273-273", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_148 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btceur, order))", span="274-274", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_149 [label="var targetValue = 20000m * _portfolio.CashBook[''EUR''].ConversionRate", span="277-277", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_150 [label="Assert.AreEqual(1.995m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btceur, targetValue))", span="278-278", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_151 [label="_btceur.SetMarketPrice(new Tick { Value = 9900m })", span="280-280", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_152 [label="order = new MarketOrder(_btceur.Symbol, 2m, DateTime.UtcNow)", span="283-283", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_153 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btceur, order))", span="284-284", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_154 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", span="266-266", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_32 [label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70", cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_165 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", span="308-308", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_166 [label="_portfolio.SetCash(5000)", span="310-310", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_167 [label="_btcusd = _algorithm.AddCrypto(''BTCUSD'')", span="312-312", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_168 [label="_btcusd.SetMarketPrice(new Tick { Value = 15000m })", span="313-313", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_169 [label="_ethusd = _algorithm.AddCrypto(''ETHUSD'')", span="315-315", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_170 [label="_ethusd.SetMarketPrice(new Tick { Value = 1000m })", span="316-316", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_171 [label="_algorithm.SetFinishedWarmingUp()", span="317-317", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_172 [label="SubmitLimitOrder(_btcusd.Symbol, 0.1m, 15000m)", span="320-320", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_173 [label="SubmitLimitOrder(_ethusd.Symbol, 3m, 1000m)", span="323-323", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_174 [label="Assert.AreEqual(0.03325m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btcusd, 500))", span="326-326", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_175 [label="var order = new MarketOrder(_btcusd.Symbol, 0.03m, DateTime.UtcNow)", span="329-329", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_176 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="330-330", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_177 [label="order = new MarketOrder(_btcusd.Symbol, 0.04m, DateTime.UtcNow)", span="333-333", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_178 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="334-334", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_179 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", span="308-308", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_74 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", span="149-149", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_75 [label="_portfolio.SetCash(0)", span="151-151", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_76 [label="_portfolio.CashBook[''BTC''].SetAmount(0.5m)", span="152-152", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_77 [label="var order = new LimitOrder(_btcusd.Symbol, -0.5m, 10000m, DateTime.UtcNow)", span="155-155", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_78 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="156-156", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_79 [label="order = new LimitOrder(_btcusd.Symbol, -0.6m, 10000m, DateTime.UtcNow)", span="159-159", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_80 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="160-160", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_81 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", span="149-149", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_252 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_264 [label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests", span="", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_265 [label=resetEvent, span="", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m2_266 [label=resetEvent, span="", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs"];
m3_4 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_5 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="59-59", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_6 [label="return 3m;", span="61-61", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_7 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="59-59", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_11 [label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="26-26", cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_12 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="82-82", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_13 [label="message = _message", span="84-84", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_14 [label="return false;", span="85-85", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_15 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="82-82", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_8 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="69-69", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_9 [label="return new GDAXFeeModel();", span="71-71", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_10 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="69-69", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_23 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="87-87", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_22 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_0 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_1 [label="accountType == AccountType.Margin", span="47-47", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_2 [label="new BrokerageMessageEvent(BrokerageMessageType.Warning, 0, \r\n                    ''It is recommend to use a cash account. Margin trading is currently in pre-Alpha. Use at your own risk and please report any issues encountered.'')", span="49-50", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_3 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_16 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="95-95", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_17 [label="order.BrokerId != null && order.BrokerId.Any()", span="97-97", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_20 [label="return base.CanSubmitOrder(security, order, out message);", span="103-103", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_18 [label="message = _message", span="99-99", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_19 [label="return false;", span="100-100", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_21 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="95-95", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m3_24 [label="QuantConnect.Brokerages.GDAXBrokerageModel", span="", file="BaseDataSubscriptionEnumeratorFactory.cs"];
m4_86 [label="var entry = zipStream.GetNextEntry()", span="210-210", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_81 [label="Entry QuantConnect.Compression.UnzipData(byte[])", span="195-195", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_82 [label="var data = new Dictionary<string, string>()", span="198-198", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_83 [label="var ms = new MemoryStream(zipData)", span="202-202", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_90 [label="data.Add(entry.Name, buffer.GetString())", span="219-219", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_93 [label="return data;", span="234-234", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_84 [label="var zipStream = new ZipInputStream(ms)", span="205-205", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_85 [label=true, span="207-207", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_89 [label="zipStream.Read(buffer, 0, (int)entry.Size)", span="216-216", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_91 [label=Exception, span="230-230", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_87 [label="entry != null", span="212-212", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_88 [label="var buffer = new byte[entry.Size]", span="215-215", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_92 [label="Log.Error(err)", span="232-232", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_94 [label="Exit QuantConnect.Compression.UnzipData(byte[])", span="195-195", cluster="QuantConnect.Compression.UnzipData(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_288 [label="Exit QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="611-611", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="BrokerageModelSecurityInitializer.cs"];
m4_284 [label="Entry QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="611-611", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="BrokerageModelSecurityInitializer.cs"];
m4_285 [label="var entryReader = new StreamReader(entry.OpenReader())", span="613-613", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="BrokerageModelSecurityInitializer.cs"];
m4_287 [label="yield return entryReader.ReadLine();", span="617-617", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="BrokerageModelSecurityInitializer.cs"];
m4_286 [label="!entryReader.EndOfStream", span="615-615", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="BrokerageModelSecurityInitializer.cs"];
m4_80 [label="Entry ZipFile.cstr", span="", cluster="ZipFile.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_158 [label="stream.PutNextEntry(entry)", span="348-348", cluster="QuantConnect.Compression.Zip(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_155 [label="Entry QuantConnect.Compression.Zip(string, string, string)", span="343-343", cluster="QuantConnect.Compression.Zip(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_156 [label="var stream = new ZipOutputStream(File.Create(zipPath))", span="345-345", cluster="QuantConnect.Compression.Zip(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_157 [label="var entry = new ZipEntry(zipEntry)", span="347-347", cluster="QuantConnect.Compression.Zip(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_160 [label="var dataReader = new MemoryStream(Encoding.Default.GetBytes(data))", span="350-350", cluster="QuantConnect.Compression.Zip(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_163 [label="stream.Write(buffer, 0, sourceBytes)", span="356-356", cluster="QuantConnect.Compression.Zip(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_159 [label="var buffer = new byte[4096]", span="349-349", cluster="QuantConnect.Compression.Zip(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_162 [label="sourceBytes = dataReader.Read(buffer, 0, buffer.Length)", span="355-355", cluster="QuantConnect.Compression.Zip(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_161 [label="int sourceBytes", span="352-352", cluster="QuantConnect.Compression.Zip(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_164 [label="sourceBytes > 0", span="358-358", cluster="QuantConnect.Compression.Zip(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_165 [label="Exit QuantConnect.Compression.Zip(string, string, string)", span="343-343", cluster="QuantConnect.Compression.Zip(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_335 [label="Entry string.LastIndexOf(char)", span="0-0", cluster="string.LastIndexOf(char)", file="BrokerageModelSecurityInitializer.cs"];
m4_148 [label="Entry System.IO.File.OpenRead(string)", span="0-0", cluster="System.IO.File.OpenRead(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_19 [label="Entry Unk.SetLevel", span="", cluster="Unk.SetLevel", file="BrokerageModelSecurityInitializer.cs"];
m4_47 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="BrokerageModelSecurityInitializer.cs"];
m4_137 [label="stream.PutNextEntry(entry)", span="306-306", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_133 [label="Entry QuantConnect.Compression.Zip(string, string, string, bool)", span="297-297", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_134 [label="var buffer = new byte[4096]", span="301-301", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_135 [label="var stream = new ZipOutputStream(File.Create(destination))", span="302-302", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_136 [label="var entry = new ZipEntry(zipEntryName)", span="305-305", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_138 [label="var fs = File.OpenRead(source)", span="308-308", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_143 [label=deleteOriginal, span="321-321", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_144 [label="File.Delete(source)", span="323-323", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_140 [label="sourceBytes = fs.Read(buffer, 0, buffer.Length)", span="313-313", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_141 [label="stream.Write(buffer, 0, sourceBytes)", span="314-314", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_139 [label="int sourceBytes", span="310-310", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_142 [label="sourceBytes > 0", span="316-316", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_145 [label=Exception, span="326-326", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_146 [label="Log.Error(err)", span="328-328", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_147 [label="Exit QuantConnect.Compression.Zip(string, string, string, bool)", span="297-297", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_23 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="BrokerageModelSecurityInitializer.cs"];
m4_61 [label="Entry StreamWriter.cstr", span="", cluster="StreamWriter.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_98 [label="Entry byte[].GetString(System.Text.Encoding)", span="85-85", cluster="byte[].GetString(System.Text.Encoding)", file="BrokerageModelSecurityInitializer.cs"];
m4_257 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="BrokerageModelSecurityInitializer.cs"];
m4_399 [label="Exit QuantConnect.Compression.GetZipEntryFileNames(string)", span="847-847", cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_395 [label="Entry QuantConnect.Compression.GetZipEntryFileNames(string)", span="847-847", cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_396 [label="var zip = ZipFile.Read(zipFileName)", span="849-849", cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_398 [label="yield return entry.FileName;", span="853-853", cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_397 [label=zip, span="851-851", cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_303 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_270 [label="return ReadLinesImpl(filename, firstEntryOnly: true).Single().Value;", span="585-585", cluster="QuantConnect.Compression.ReadLines(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_266 [label="Entry QuantConnect.Compression.ReadLines(string)", span="575-575", cluster="QuantConnect.Compression.ReadLines(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_267 [label="!File.Exists(filename)", span="577-577", cluster="QuantConnect.Compression.ReadLines(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_268 [label="Log.Error(''Compression.ReadFirstZipEntry(): File does not exist: '' + filename)", span="579-579", cluster="QuantConnect.Compression.ReadLines(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_269 [label="return Enumerable.Empty<string>();", span="580-580", cluster="QuantConnect.Compression.ReadLines(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_271 [label=Exception, span="587-587", cluster="QuantConnect.Compression.ReadLines(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_272 [label="Log.Error(err)", span="589-589", cluster="QuantConnect.Compression.ReadLines(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_273 [label="return Enumerable.Empty<string>();", span="591-591", cluster="QuantConnect.Compression.ReadLines(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_274 [label="Exit QuantConnect.Compression.ReadLines(string)", span="575-575", cluster="QuantConnect.Compression.ReadLines(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_372 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="BrokerageModelSecurityInitializer.cs"];
m4_21 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_340 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BrokerageModelSecurityInitializer.cs"];
m4_103 [label="var entry = archive.CreateEntry(zipEntryName)", span="248-248", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="BrokerageModelSecurityInitializer.cs"];
m4_100 [label="Entry QuantConnect.Compression.ZipBytes(byte[], string)", span="243-243", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="BrokerageModelSecurityInitializer.cs"];
m4_101 [label="var memoryStream = new MemoryStream()", span="245-245", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="BrokerageModelSecurityInitializer.cs"];
m4_105 [label="entryStream.Write(bytes, 0, bytes.Length)", span="251-251", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="BrokerageModelSecurityInitializer.cs"];
m4_102 [label="var archive = new ZipArchive(memoryStream, ZipArchiveMode.Create, true)", span="246-246", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="BrokerageModelSecurityInitializer.cs"];
m4_106 [label="return memoryStream.GetBuffer();", span="254-254", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="BrokerageModelSecurityInitializer.cs"];
m4_104 [label="var entryStream = entry.Open()", span="249-249", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="BrokerageModelSecurityInitializer.cs"];
m4_107 [label="Exit QuantConnect.Compression.ZipBytes(byte[], string)", span="243-243", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="BrokerageModelSecurityInitializer.cs"];
m4_304 [label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", span="659-659", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_305 [label="zipFile = ZipFile.Read(zipstream)", span="661-661", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_306 [label="var entry = zipFile.Entries.FirstOrDefault()", span="666-666", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_307 [label="entry != null", span="668-668", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_308 [label="return entry.OpenReader();", span="670-670", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_309 [label=Exception, span="673-673", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_311 [label="return null;", span="678-678", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_310 [label="Log.Error(err)", span="675-675", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_312 [label="Exit QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", span="659-659", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_242 [label="Entry System.IO.StreamReader.Close()", span="0-0", cluster="System.IO.StreamReader.Close()", file="BrokerageModelSecurityInitializer.cs"];
m4_348 [label="Entry Unk.CreateInputTarArchive", span="", cluster="Unk.CreateInputTarArchive", file="BrokerageModelSecurityInitializer.cs"];
m4_388 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="BrokerageModelSecurityInitializer.cs"];
m4_78 [label="Entry Unk.AddEntry", span="", cluster="Unk.AddEntry", file="BrokerageModelSecurityInitializer.cs"];
m4_334 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BrokerageModelSecurityInitializer.cs"];
m4_350 [label="Entry System.IO.Stream.Close()", span="0-0", cluster="System.IO.Stream.Close()", file="BrokerageModelSecurityInitializer.cs"];
m4_175 [label="Entry Unk.CreateFromDirectory", span="", cluster="Unk.CreateFromDirectory", file="BrokerageModelSecurityInitializer.cs"];
m4_244 [label="Entry lambda expression", span="495-495", cluster="lambda expression", file="BrokerageModelSecurityInitializer.cs"];
m4_245 [label="zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0", span="495-495", cluster="lambda expression", file="BrokerageModelSecurityInitializer.cs"];
m4_246 [label="Exit lambda expression", span="495-495", cluster="lambda expression", file="BrokerageModelSecurityInitializer.cs"];
m4_4 [label="var entry = new ZipEntry(filename)", span="55-55", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_0 [label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", span="44-44", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_1 [label="var stream = new ZipOutputStream(File.Create(zipPath))", span="49-49", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_3 [label="filenamesAndData.Keys", span="52-52", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_5 [label="var data = filenamesAndData[filename]", span="56-56", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_2 [label="stream.SetLevel(0)", span="51-51", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_7 [label="stream.PutNextEntry(entry)", span="58-58", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="BrokerageModelSecurityInitializer.cs"];
m4_8 [label="stream.Write(bytes, 0, bytes.Length)", span="59-59", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_9 [label="stream.CloseEntry()", span="60-60", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="BrokerageModelSecurityInitializer.cs"];
m4_10 [label="stream.Finish()", span="64-64", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="BrokerageModelSecurityInitializer.cs"];
m4_11 [label="stream.Close()", span="65-65", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="BrokerageModelSecurityInitializer.cs"];
m4_6 [label="var bytes = Encoding.Default.GetBytes(data)", span="57-57", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="BrokerageModelSecurityInitializer.cs"];
m4_12 [label=Exception, span="68-68", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_15 [label="return true;", span="73-73", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_13 [label="Log.Error(err)", span="70-70", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_14 [label="return false;", span="71-71", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_16 [label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", span="44-44", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_390 [label="Entry QuantConnect.Compression.ValidateZip(string)", span="834-834", cluster="QuantConnect.Compression.ValidateZip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_391 [label="var zip = new ICSharpCode.SharpZipLib.Zip.ZipFile(path)", span="836-836", cluster="QuantConnect.Compression.ValidateZip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_392 [label="return zip.TestArchive(true);", span="838-838", cluster="QuantConnect.Compression.ValidateZip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_393 [label="Exit QuantConnect.Compression.ValidateZip(string)", span="834-834", cluster="QuantConnect.Compression.ValidateZip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_199 [label="Entry System.IO.DirectoryInfo.Create()", span="0-0", cluster="System.IO.DirectoryInfo.Create()", file="BrokerageModelSecurityInitializer.cs"];
m4_371 [label="Entry KeyValuePair<string, byte[]>.cstr", span="", cluster="KeyValuePair<string, byte[]>.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_24 [label="Entry Unk.CloseEntry", span="", cluster="Unk.CloseEntry", file="BrokerageModelSecurityInitializer.cs"];
m4_122 [label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0", cluster="System.IO.Path.GetFileNameWithoutExtension(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_112 [label="Entry System.IO.MemoryStream.GetBuffer()", span="0-0", cluster="System.IO.MemoryStream.GetBuffer()", file="BrokerageModelSecurityInitializer.cs"];
m4_99 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="BrokerageModelSecurityInitializer.cs"];
m4_150 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_96 [label="Entry ZipInputStream.cstr", span="", cluster="ZipInputStream.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_241 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="BrokerageModelSecurityInitializer.cs"];
m4_77 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="BrokerageModelSecurityInitializer.cs"];
m4_198 [label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0", cluster="System.IO.FileInfo.FileInfo(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_214 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_176 [label="Entry QuantConnect.Compression.Unzip(string, string, bool)", span="391-391", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_177 [label="!File.Exists(zip)", span="393-393", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_179 [label="!overwrite", span="397-397", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_180 [label="System.IO.Compression.ZipFile.ExtractToDirectory(zip, directory)", span="399-399", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_181 [label="var archive = new ZipArchive(File.OpenRead(zip))", span="403-403", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_184 [label="var filepath = Path.Combine(directory, file.FullName)", span="409-409", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_178 [label="return false;", span="393-393", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_182 [label="archive.Entries", span="405-405", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_183 [label="file.Name == ''''", span="408-408", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_191 [label="return true;", span="421-421", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_190 [label="file.ExtractToFile(outputFile.FullName, true)", span="416-416", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_185 [label="OS.IsLinux", span="410-410", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_186 [label="filepath = filepath.Replace(@''\'', ''/'')", span="410-410", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_187 [label="var outputFile = new FileInfo(filepath)", span="411-411", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_188 [label="!outputFile.Directory.Exists", span="412-412", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_189 [label="outputFile.Directory.Create()", span="414-414", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_192 [label=Exception, span="423-423", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_193 [label="Log.Error(err)", span="425-425", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_194 [label="return false;", span="426-426", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_195 [label="Exit QuantConnect.Compression.Unzip(string, string, bool)", span="391-391", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_154 [label="Entry System.IO.Path.GetFileName(string)", span="0-0", cluster="System.IO.Path.GetFileName(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_247 [label="Entry Unk.Compare", span="", cluster="Unk.Compare", file="BrokerageModelSecurityInitializer.cs"];
m4_20 [label="Entry ZipEntry.cstr", span="", cluster="ZipEntry.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_294 [label="var entry = zipStream.GetNextEntry()", span="637-637", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_290 [label="Entry QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", span="625-625", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_291 [label="StreamReader reader = null", span="627-627", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_293 [label="var zipStream = new ZipInputStream(zipstream)", span="634-634", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_292 [label="MemoryStream file", span="631-631", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_296 [label="zipStream.Read(buffer, 0, (int)entry.Size)", span="639-639", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_295 [label="var buffer = new byte[entry.Size]", span="638-638", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_297 [label="file = new MemoryStream(buffer)", span="642-642", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_298 [label="reader = new StreamReader(file)", span="646-646", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_299 [label=Exception, span="648-648", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_301 [label="return reader;", span="653-653", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_300 [label="Log.Error(err)", span="650-650", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_302 [label="Exit QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", span="625-625", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_97 [label="Entry Unk.GetNextEntry", span="", cluster="Unk.GetNextEntry", file="BrokerageModelSecurityInitializer.cs"];
m4_113 [label="Entry QuantConnect.Compression.UnGZip(string, string)", span="262-262", cluster="QuantConnect.Compression.UnGZip(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_114 [label="var dataBuffer = new byte[4096]", span="265-265", cluster="QuantConnect.Compression.UnGZip(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_115 [label="var newFileOutput = Path.Combine(targetDirectory, Path.GetFileNameWithoutExtension(gzipFileName))", span="266-266", cluster="QuantConnect.Compression.UnGZip(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_116 [label="Stream fileStream = new FileStream(gzipFileName, FileMode.Open, FileAccess.Read)", span="267-267", cluster="QuantConnect.Compression.UnGZip(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_119 [label="StreamUtils.Copy(gzipStream, fileOutput, dataBuffer)", span="271-271", cluster="QuantConnect.Compression.UnGZip(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_118 [label="var fileOutput = File.Create(newFileOutput)", span="269-269", cluster="QuantConnect.Compression.UnGZip(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_120 [label="return newFileOutput;", span="273-273", cluster="QuantConnect.Compression.UnGZip(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_117 [label="var gzipStream = new GZipInputStream(fileStream)", span="268-268", cluster="QuantConnect.Compression.UnGZip(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_121 [label="Exit QuantConnect.Compression.UnGZip(string, string)", span="262-262", cluster="QuantConnect.Compression.UnGZip(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_110 [label="Entry Unk.CreateEntry", span="", cluster="Unk.CreateEntry", file="BrokerageModelSecurityInitializer.cs"];
m4_275 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="BrokerageModelSecurityInitializer.cs"];
m4_289 [label="Entry System.IO.StreamReader.ReadLine()", span="0-0", cluster="System.IO.StreamReader.ReadLine()", file="BrokerageModelSecurityInitializer.cs"];
m4_33 [label="var entry = new ZipEntry(file.Key)", span="95-95", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_28 [label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", span="82-82", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_29 [label="var success = true", span="84-84", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_31 [label="var stream = new ZipOutputStream(File.Create(zipPath))", span="90-90", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_32 [label=filenamesAndData, span="92-92", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_30 [label="var buffer = new byte[4096]", span="85-85", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_37 [label="sourceBytes = ms.Read(buffer, 0, buffer.Length)", span="104-104", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_38 [label="stream.Write(buffer, 0, sourceBytes)", span="105-105", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_34 [label="stream.PutNextEntry(entry)", span="97-97", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_40 [label="stream.Finish()", span="112-112", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_41 [label="stream.Close()", span="113-113", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_35 [label="var ms = new MemoryStream(file.Value)", span="99-99", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_36 [label="int sourceBytes", span="101-101", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_39 [label="sourceBytes > 0", span="107-107", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_42 [label=Exception, span="116-116", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_45 [label="return success;", span="121-121", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_43 [label="Log.Error(err)", span="118-118", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_44 [label="success = false", span="119-119", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_46 [label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", span="82-82", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="BrokerageModelSecurityInitializer.cs"];
m4_124 [label="Entry System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", span="0-0", cluster="System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", file="BrokerageModelSecurityInitializer.cs"];
m4_394 [label="Entry Unk.TestArchive", span="", cluster="Unk.TestArchive", file="BrokerageModelSecurityInitializer.cs"];
m4_351 [label="Entry QuantConnect.Compression.UnTarGzFiles(string, string)", span="759-759", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_352 [label="var inStream = File.OpenRead(source)", span="761-761", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_355 [label="tarArchive.ExtractContents(destination)", span="764-764", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_353 [label="var gzipStream = new GZipInputStream(inStream)", span="762-762", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_358 [label="inStream.Close()", span="767-767", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_354 [label="var tarArchive = TarArchive.CreateInputTarArchive(gzipStream)", span="763-763", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_357 [label="gzipStream.Close()", span="766-766", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_356 [label="tarArchive.Close()", span="765-765", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_359 [label="Exit QuantConnect.Compression.UnTarGzFiles(string, string)", span="759-759", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_341 [label="Entry QuantConnect.Compression.UnTarFiles(string, string)", span="745-745", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_342 [label="var inStream = File.OpenRead(source)", span="747-747", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_344 [label="tarArchive.ExtractContents(destination)", span="749-749", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_343 [label="var tarArchive = TarArchive.CreateInputTarArchive(inStream)", span="748-748", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_346 [label="inStream.Close()", span="751-751", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_345 [label="tarArchive.Close()", span="750-750", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_347 [label="Exit QuantConnect.Compression.UnTarFiles(string, string)", span="745-745", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_239 [label="Entry StreamReader.cstr", span="", cluster="StreamReader.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_48 [label="Entry System.IO.MemoryStream.Read(byte[], int, int)", span="0-0", cluster="System.IO.MemoryStream.Read(byte[], int, int)", file="BrokerageModelSecurityInitializer.cs"];
m4_207 [label="var entry = new ZipEntry(Path.GetFileName(file))", span="448-448", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_201 [label="Entry QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="433-433", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_202 [label="var zipStream = new ZipOutputStream(File.Create(destination))", span="437-437", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_204 [label=files, span="440-440", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_203 [label="var buffer = new byte[4096]", span="439-439", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_208 [label="zipStream.PutNextEntry(entry)", span="449-449", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_210 [label="StreamUtils.Copy(fstream, zipStream, buffer)", span="452-452", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_205 [label="!File.Exists(file)", span="442-442", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_211 [label=Exception, span="457-457", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_206 [label="Log.Trace(''ZipFiles(): File does not exist: '' + file)", span="444-444", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_209 [label="var fstream = File.OpenRead(file)", span="450-450", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_212 [label="Log.Error(err)", span="459-459", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_213 [label="Exit QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="433-433", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_349 [label="Entry Unk.ExtractContents", span="", cluster="Unk.ExtractContents", file="BrokerageModelSecurityInitializer.cs"];
m4_238 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="BrokerageModelSecurityInitializer.cs"];
m4_389 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="BrokerageModelSecurityInitializer.cs"];
m4_125 [label="Entry GZipInputStream.cstr", span="", cluster="GZipInputStream.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_337 [label="Entry ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", span="", cluster="ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_277 [label=firstEntryOnly, span="598-598", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_258 [label="Entry QuantConnect.Compression.ReadLinesImpl(string, bool)", span="594-594", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_276 [label="var zip = ZipFile.Read(filename)", span="596-596", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_279 [label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="601-601", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_280 [label="yield break;", span="602-602", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_282 [label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="606-606", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_278 [label="var entry = zip[0]", span="600-600", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_281 [label=zip, span="604-604", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_283 [label="Exit QuantConnect.Compression.ReadLinesImpl(string, bool)", span="594-594", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_123 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_111 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="BrokerageModelSecurityInitializer.cs"];
m4_366 [label="tar.CopyEntryContents(output)", span="787-787", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_360 [label="Entry QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="776-776", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_361 [label="var tar = new TarInputStream(isTarGz ? (Stream)new GZipInputStream(stream) : stream)", span="778-778", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_367 [label="yield return new KeyValuePair<string, byte[]>(entry.Name, output.ToArray());", span="788-788", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_362 [label="TarEntry entry", span="780-780", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_363 [label="(entry = tar.GetNextEntry()) != null", span="781-781", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_364 [label="entry.IsDirectory", span="783-783", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_365 [label="var output = new MemoryStream()", span="785-785", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_368 [label="Exit QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="776-776", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_265 [label="Entry Unk.ReadZipEntry", span="", cluster="Unk.ReadZipEntry", file="BrokerageModelSecurityInitializer.cs"];
m4_240 [label="Entry Unk.OpenReader", span="", cluster="Unk.OpenReader", file="BrokerageModelSecurityInitializer.cs"];
m4_339 [label="Entry Unk.GetInputStream", span="", cluster="Unk.GetInputStream", file="BrokerageModelSecurityInitializer.cs"];
m4_324 [label="var entryFileName = Path.GetFileName(zipEntry.Name)", span="709-709", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_313 [label="Entry QuantConnect.Compression.UnzipToFolder(string)", span="686-686", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_314 [label="var files = new List<string>()", span="689-689", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_315 [label="var slash = zipFile.LastIndexOf(Path.DirectorySeparatorChar)", span="690-690", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_318 [label="outFolder = zipFile.Substring(0, slash)", span="694-694", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_320 [label="var fs = File.OpenRead(zipFile)", span="700-700", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_329 [label="files.Add(fullZipToPath)", span="719-719", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_332 [label="return files;", span="737-737", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_316 [label="var outFolder = ''''", span="691-691", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_317 [label="slash > 0", span="692-692", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_328 [label="var fullZipToPath = Path.Combine(outFolder, entryFileName)", span="716-716", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_319 [label="ICSharpCode.SharpZipLib.Zip.ZipFile zf = null", span="696-696", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_321 [label="zf = new ICSharpCode.SharpZipLib.Zip.ZipFile(fs)", span="701-701", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_322 [label=zf, span="703-703", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_327 [label="var zipStream = zf.GetInputStream(zipEntry)", span="713-713", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_323 [label="!zipEntry.IsFile", span="706-706", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_325 [label="entryFileName == null", span="710-710", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_326 [label="var buffer = new byte[4096]", span="712-712", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_331 [label="StreamUtils.Copy(zipStream, streamWriter, buffer)", span="725-725", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_330 [label="var streamWriter = File.Create(fullZipToPath)", span="723-723", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_333 [label="Exit QuantConnect.Compression.UnzipToFolder(string)", span="686-686", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_338 [label="Entry Unk.GetFileName", span="", cluster="Unk.GetFileName", file="BrokerageModelSecurityInitializer.cs"];
m4_223 [label="var entry = zip.FirstOrDefault(x => zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0)", span="495-495", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_218 [label="Entry QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="483-483", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_219 [label="StreamReader reader = null", span="485-485", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_221 [label="File.Exists(filename)", span="490-490", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_222 [label="zip = new ZipFile(filename)", span="494-494", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_233 [label="Log.Error(''Data.UnZip(2): File doesn't exist: '' + filename)", span="513-513", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_235 [label="Log.Error(err, ''File: '' + filename)", span="518-518", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_220 [label="zip = null", span="486-486", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_236 [label="return reader;", span="520-520", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_229 [label="zip != null", span="507-507", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_230 [label="zip.Dispose()", span="507-507", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_224 [label="entry == null", span="496-496", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_226 [label="reader = new StreamReader(entry.OpenReader())", span="502-502", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_225 [label="return null;", span="499-499", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_227 [label=Exception, span="504-504", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_234 [label=Exception, span="516-516", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_231 [label="reader != null", span="508-508", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_232 [label="reader.Close()", span="508-508", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_228 [label="Log.Error(err, ''Inner try/catch'')", span="506-506", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_237 [label="Exit QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="483-483", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_108 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="BrokerageModelSecurityInitializer.cs"];
m4_25 [label="Entry Unk.Finish", span="", cluster="Unk.Finish", file="BrokerageModelSecurityInitializer.cs"];
m4_166 [label="Entry QuantConnect.Compression.ZipDirectory(string, string, bool)", span="370-370", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_167 [label="File.Exists(destination)", span="374-374", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_168 [label="File.Delete(destination)", span="374-374", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_169 [label="System.IO.Compression.ZipFile.CreateFromDirectory(directory, destination, CompressionLevel.Fastest, includeRootInZip)", span="375-375", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_170 [label="return true;", span="376-376", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_171 [label=Exception, span="378-378", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_172 [label="Log.Error(err)", span="380-380", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_173 [label="return false;", span="381-381", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_174 [label="Exit QuantConnect.Compression.ZipDirectory(string, string, bool)", span="370-370", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_18 [label="Entry System.IO.File.Create(string)", span="0-0", cluster="System.IO.File.Create(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_264 [label="Entry KeyValuePair<string, IEnumerable<string>>.cstr", span="", cluster="KeyValuePair<string, IEnumerable<string>>.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_262 [label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="565-565", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_259 [label="Entry QuantConnect.Compression.Unzip(System.IO.Stream)", span="559-559", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_260 [label="var zip = ZipFile.Read(stream)", span="561-561", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_261 [label=zip, span="563-563", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_263 [label="Exit QuantConnect.Compression.Unzip(System.IO.Stream)", span="559-559", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="BrokerageModelSecurityInitializer.cs"];
m4_151 [label="Entry QuantConnect.Compression.Zip(string, bool)", span="338-338", cluster="QuantConnect.Compression.Zip(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_152 [label="return Zip(textPath, Path.GetFileName(textPath), deleteOriginal);", span="340-340", cluster="QuantConnect.Compression.Zip(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_153 [label="Exit QuantConnect.Compression.Zip(string, bool)", span="338-338", cluster="QuantConnect.Compression.Zip(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_197 [label="Entry Unk.Combine", span="", cluster="Unk.Combine", file="BrokerageModelSecurityInitializer.cs"];
m4_336 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="BrokerageModelSecurityInitializer.cs"];
m4_243 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_126 [label="Entry Unk.Copy", span="", cluster="Unk.Copy", file="BrokerageModelSecurityInitializer.cs"];
m4_215 [label="Entry QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="470-470", cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_216 [label="return Unzip(filename, null, out zip);", span="472-472", cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_217 [label="Exit QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="470-470", cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="BrokerageModelSecurityInitializer.cs"];
m4_370 [label="Entry Unk.CopyEntryContents", span="", cluster="Unk.CopyEntryContents", file="BrokerageModelSecurityInitializer.cs"];
m4_248 [label="Entry QuantConnect.Compression.Unzip(string)", span="534-534", cluster="QuantConnect.Compression.Unzip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_249 [label="!File.Exists(filename)", span="536-536", cluster="QuantConnect.Compression.Unzip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_250 [label="Log.Error(''Compression.Unzip(): File does not exist: '' + filename)", span="538-538", cluster="QuantConnect.Compression.Unzip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_252 [label="return ReadLinesImpl(filename);", span="544-544", cluster="QuantConnect.Compression.Unzip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_251 [label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="539-539", cluster="QuantConnect.Compression.Unzip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_253 [label=Exception, span="546-546", cluster="QuantConnect.Compression.Unzip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_254 [label="Log.Error(err)", span="548-548", cluster="QuantConnect.Compression.Unzip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_255 [label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="550-550", cluster="QuantConnect.Compression.Unzip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_256 [label="Exit QuantConnect.Compression.Unzip(string)", span="534-534", cluster="QuantConnect.Compression.Unzip(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_53 [label="stream.PutNextEntry(entry)", span="139-139", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_49 [label="Entry QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="131-131", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_50 [label="var stream = new ZipOutputStream(File.Create(zipPath))", span="135-135", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_52 [label="var entry = new ZipEntry(zipEntry)", span="138-138", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_54 [label=lines, span="140-140", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_51 [label="var writer = new StreamWriter(stream)", span="136-136", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_55 [label="writer.WriteLine(line)", span="142-142", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_56 [label="return true;", span="145-145", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_57 [label=Exception, span="147-147", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_58 [label="Log.Error(err)", span="149-149", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_59 [label="return false;", span="150-150", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_60 [label="Exit QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="131-131", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageModelSecurityInitializer.cs"];
m4_369 [label="Entry TarInputStream.cstr", span="", cluster="TarInputStream.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_132 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_76 [label="Entry System.IO.File.Exists(string)", span="0-0", cluster="System.IO.File.Exists(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_26 [label="Entry Unk.Close", span="", cluster="Unk.Close", file="BrokerageModelSecurityInitializer.cs"];
m4_79 [label="Entry Unk.Save", span="", cluster="Unk.Save", file="BrokerageModelSecurityInitializer.cs"];
m4_62 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_129 [label="Zip(textPath, zipPath, zipEntryName, deleteOriginal)", span="286-286", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_127 [label="Entry QuantConnect.Compression.Zip(string, string, bool)", span="283-283", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_128 [label="var zipPath = textPath.Replace(''.csv'', ''.zip'').Replace(''.txt'', ''.zip'')", span="285-285", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_130 [label="return zipPath;", span="287-287", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_131 [label="Exit QuantConnect.Compression.Zip(string, string, bool)", span="283-283", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="BrokerageModelSecurityInitializer.cs"];
m4_382 [label="tarEntry.IsDirectory", span="817-817", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_373 [label="Entry QuantConnect.Compression.UnTar(string)", span="799-799", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_374 [label="var gzip = (source.Substring(Math.Max(0, source.Length - 6)) == ''tar.gz'')", span="802-802", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_385 [label="yield return new KeyValuePair<string, byte[]>(tarEntry.Name, stream.ToArray());", span="822-822", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_375 [label="var file = File.OpenRead(source)", span="804-804", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_377 [label=gzip, span="808-808", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_376 [label="var tarIn = new TarInputStream(file)", span="806-806", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_378 [label="var gzipStream = new GZipInputStream(file)", span="810-810", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_381 [label="(tarEntry = tarIn.GetNextEntry()) != null", span="815-815", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_384 [label="tarIn.CopyEntryContents(stream)", span="821-821", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_386 [label="tarIn.Close()", span="825-825", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_380 [label="TarEntry tarEntry", span="814-814", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_379 [label="tarIn = new TarInputStream(gzipStream)", span="811-811", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_383 [label="var stream = new MemoryStream()", span="819-819", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_387 [label="Exit QuantConnect.Compression.UnTar(string)", span="799-799", cluster="QuantConnect.Compression.UnTar(string)", file="BrokerageModelSecurityInitializer.cs"];
m4_95 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BrokerageModelSecurityInitializer.cs"];
m4_149 [label="Entry System.IO.FileStream.Read(byte[], int, int)", span="0-0", cluster="System.IO.FileStream.Read(byte[], int, int)", file="BrokerageModelSecurityInitializer.cs"];
m4_22 [label="Entry Unk.PutNextEntry", span="", cluster="Unk.PutNextEntry", file="BrokerageModelSecurityInitializer.cs"];
m4_200 [label="Entry Unk.ExtractToFile", span="", cluster="Unk.ExtractToFile", file="BrokerageModelSecurityInitializer.cs"];
m4_17 [label="Entry ZipOutputStream.cstr", span="", cluster="ZipOutputStream.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_69 [label="zip.AddEntry(entry, data)", span="177-177", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_63 [label="Entry QuantConnect.Compression.ZipCreateAppendData(string, string, string)", span="161-161", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_64 [label="File.Exists(path)", span="165-165", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_65 [label="var zip = ZipFile.Read(path)", span="167-167", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_66 [label="zip.AddEntry(entry, data)", span="169-169", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_68 [label="var zip = new ZipFile(path)", span="175-175", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_67 [label="zip.Save()", span="170-170", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_70 [label="zip.Save()", span="178-178", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_71 [label=Exception, span="182-182", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_74 [label="return true;", span="187-187", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_72 [label="Log.Error(err)", span="184-184", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_73 [label="return false;", span="185-185", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_75 [label="Exit QuantConnect.Compression.ZipCreateAppendData(string, string, string)", span="161-161", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="BrokerageModelSecurityInitializer.cs"];
m4_196 [label="Entry Unk.ExtractToDirectory", span="", cluster="Unk.ExtractToDirectory", file="BrokerageModelSecurityInitializer.cs"];
m4_109 [label="Entry ZipArchive.cstr", span="", cluster="ZipArchive.cstr", file="BrokerageModelSecurityInitializer.cs"];
m4_400 [label=string, span="", file="BrokerageModelSecurityInitializer.cs"];
m5_85 [label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", span="138-138", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_86 [label="decimal price = 14m", span="140-140", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_87 [label="decimal underlyingPrice = 196m", span="141-141", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_92 [label="optionCall.SetMarketPrice(new Tick { Value = price })", span="148-148", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_94 [label="optionCall.Holdings.SetHoldings(price, -2)", span="150-150", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_88 [label="var tz = TimeZones.NewYork", span="142-142", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_90 [label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="145-145", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_89 [label="var equity = new Equity(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="144-144", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_91 [label="var optionCall = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="147-147", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_93 [label="optionCall.Underlying = equity", span="149-149", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_96 [label="Assert.AreEqual(9840, (double)marginModel.GetMaintenanceMargin(optionCall), 0.01)", span="156-156", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_95 [label="var marginModel = new OptionMarginModel()", span="152-152", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_97 [label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", span="138-138", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_18 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="BrokerageModelSecurityInitializerTests.cs"];
m5_19 [label="marginModel.SetLeverage(option, 10m)", span="40-40", cluster="lambda expression", color=red, community=0, file="BrokerageModelSecurityInitializerTests.cs"];
m5_20 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="BrokerageModelSecurityInitializerTests.cs"];
m5_10 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_22 [label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", span="45-45", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_23 [label="decimal price = 1.2345m", span="47-47", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_24 [label="decimal underlyingPrice = 200m", span="48-48", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_29 [label="optionPut.SetMarketPrice(new Tick { Value = price })", span="55-55", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_33 [label="optionCall.SetMarketPrice(new Tick { Value = price })", span="60-60", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_25 [label="var tz = TimeZones.NewYork", span="49-49", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_27 [label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="52-52", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_26 [label="var equity = new Equity(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="51-51", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_28 [label="var optionPut = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="54-54", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_32 [label="var optionCall = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_C_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="59-59", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_30 [label="optionPut.Underlying = equity", span="56-56", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_34 [label="optionCall.Underlying = equity", span="61-61", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_31 [label="optionPut.Holdings.SetHoldings(1m, 2)", span="57-57", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_37 [label="Assert.AreEqual(optionPut.Holdings.AbsoluteHoldingsCost, marginModel.GetMaintenanceMargin(optionPut))", span="67-67", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_35 [label="optionCall.Holdings.SetHoldings(1.5m, 2)", span="62-62", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_38 [label="Assert.AreEqual(optionCall.Holdings.AbsoluteHoldingsCost, marginModel.GetMaintenanceMargin(optionCall))", span="68-68", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_36 [label="var marginModel = new OptionMarginModel()", span="64-64", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_39 [label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", span="45-45", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_45 [label="Entry QuantConnect.Securities.OptionMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="79-79", cluster="QuantConnect.Securities.OptionMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_43 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="531-531", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_72 [label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", span="116-116", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_73 [label="decimal price = 14m", span="118-118", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_74 [label="decimal underlyingPrice = 182m", span="119-119", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_79 [label="optionPut.SetMarketPrice(new Tick { Value = price })", span="126-126", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_81 [label="optionPut.Holdings.SetHoldings(price, -2)", span="128-128", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_75 [label="var tz = TimeZones.NewYork", span="120-120", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_77 [label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="123-123", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_76 [label="var equity = new Equity(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="122-122", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_78 [label="var optionPut = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="125-125", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_80 [label="optionPut.Underlying = equity", span="127-127", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_83 [label="Assert.AreEqual(10080m, marginModel.GetMaintenanceMargin(optionPut))", span="134-134", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_82 [label="var marginModel = new OptionMarginModel()", span="130-130", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_84 [label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", span="116-116", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_59 [label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", span="94-94", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_60 [label="decimal price = 14m", span="96-96", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_61 [label="decimal underlyingPrice = 180m", span="97-97", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_66 [label="optionCall.SetMarketPrice(new Tick { Value = price })", span="104-104", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_68 [label="optionCall.Holdings.SetHoldings(price, -2)", span="106-106", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_62 [label="var tz = TimeZones.NewYork", span="98-98", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_64 [label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="101-101", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_63 [label="var equity = new Equity(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="100-100", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_65 [label="var optionCall = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_C_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="103-103", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_67 [label="optionCall.Underlying = equity", span="105-105", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_70 [label="Assert.AreEqual(7600, (double)marginModel.GetMaintenanceMargin(optionCall), 0.01)", span="112-112", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_69 [label="var marginModel = new OptionMarginModel()", span="108-108", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_71 [label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", span="94-94", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_112 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_17 [label="Entry Unk.>", span="", cluster="Unk.>", file="BrokerageModelSecurityInitializerTests.cs"];
m5_98 [label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", span="160-160", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_99 [label="decimal price = 0.18m", span="162-162", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_100 [label="decimal underlyingPrice = 200m", span="163-163", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_106 [label="optionPut.SetMarketPrice(new Tick { Value = price })", span="171-171", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_108 [label="optionPut.Holdings.SetHoldings(price, -2)", span="173-173", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_101 [label="var tz = TimeZones.NewYork", span="165-165", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_103 [label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="167-167", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_102 [label="var equity = new Equity(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="166-166", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_105 [label="var optionPut = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), optionPutSymbol, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="170-170", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_107 [label="optionPut.Underlying = equity", span="172-172", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_104 [label="var optionPutSymbol = Symbol.CreateOption(Symbols.SPY, Market.USA, OptionStyle.American, OptionRight.Put, 207m, new DateTime(2015, 02, 27))", span="169-169", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_110 [label="Assert.AreEqual(8036, (double)marginModel.GetMaintenanceMargin(optionPut), 0.01)", span="179-179", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_109 [label="var marginModel = new OptionMarginModel()", span="175-175", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_111 [label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", span="160-160", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_13 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_46 [label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", span="72-72", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_47 [label="decimal price = 14m", span="74-74", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_48 [label="decimal underlyingPrice = 196m", span="75-75", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_53 [label="optionCall.SetMarketPrice(new Tick { Value = price })", span="82-82", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_55 [label="optionCall.Holdings.SetHoldings(price, -2)", span="84-84", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_49 [label="var tz = TimeZones.NewYork", span="76-76", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_51 [label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="79-79", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_50 [label="var equity = new Equity(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="78-78", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_52 [label="var optionCall = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_C_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="81-81", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_54 [label="optionCall.Underlying = equity", span="83-83", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_57 [label="Assert.AreEqual(10640m, marginModel.GetMaintenanceMargin(optionCall))", span="90-90", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_56 [label="var marginModel = new OptionMarginModel()", span="86-86", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_58 [label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", span="72-72", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_9 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_16 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="BrokerageModelSecurityInitializerTests.cs"];
m5_114 [label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", span="183-183", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_115 [label="decimal optionPriceStart = 4.68m", span="185-185", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_116 [label="decimal underlyingPriceStart = 192m", span="186-186", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_124 [label="optionPut.SetMarketPrice(new Tick { Value = optionPriceStart })", span="196-196", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_126 [label="optionPut.Holdings.SetHoldings(optionPriceStart, -2)", span="198-198", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_117 [label="decimal optionPriceEnd = 0.18m", span="187-187", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_121 [label="equity.SetMarketPrice(new Tick { Value = underlyingPriceStart })", span="192-192", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_118 [label="decimal underlyingPriceEnd = 200m", span="188-188", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_130 [label="optionPut.SetMarketPrice(new Tick { Value = optionPriceEnd })", span="207-207", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_119 [label="var tz = TimeZones.NewYork", span="190-190", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_129 [label="equity.SetMarketPrice(new Tick { Value = underlyingPriceEnd })", span="206-206", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_120 [label="var equity = new Equity(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="191-191", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_123 [label="var optionPut = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), optionPutSymbol, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="195-195", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_125 [label="optionPut.Underlying = equity", span="197-197", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_122 [label="var optionPutSymbol = Symbol.CreateOption(Symbols.SPY, Market.USA, OptionStyle.American, OptionRight.Put, 207m, new DateTime(2015, 02, 27))", span="194-194", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_128 [label="Assert.AreEqual(8616, (double)marginModel.GetMaintenanceMargin(optionPut), 0.01)", span="204-204", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_131 [label="Assert.AreEqual(8936, (double)marginModel.GetMaintenanceMargin(optionPut), 0.01)", span="211-211", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_127 [label="var marginModel = new OptionMarginModel()", span="200-200", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_132 [label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", span="183-183", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_15 [label="Entry QuantConnect.Securities.OptionMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="40-40", cluster="QuantConnect.Securities.OptionMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_0 [label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", span="32-32", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_1 [label="var tz = TimeZones.NewYork", span="34-34", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_2 [label="var option = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="35-35", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_3 [label="var marginModel = new OptionMarginModel()", span="36-36", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_4 [label="Assert.AreEqual(1m, marginModel.GetLeverage(option))", span="39-39", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", file="BrokerageModelSecurityInitializerTests.cs", color=green, community=0];
m5_5 [label="Assert.Throws<InvalidOperationException>(() => marginModel.SetLeverage(option, 10m))", span="40-40", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", color=red, community=0, file="BrokerageModelSecurityInitializerTests.cs"];
m5_6 [label="Assert.AreEqual(1m, marginModel.GetLeverage(option))", span="41-41", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", color=red, community=0, file="BrokerageModelSecurityInitializerTests.cs"];
m5_7 [label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", span="32-32", cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_41 [label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84", cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_14 [label="Entry QuantConnect.Securities.OptionMarginModel.OptionMarginModel()", span="28-28", cluster="QuantConnect.Securities.OptionMarginModel.OptionMarginModel()", file="BrokerageModelSecurityInitializerTests.cs"];
m5_11 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_44 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_8 [label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="49-49", cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_113 [label="Entry QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="119-119", cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_21 [label="Entry QuantConnect.Securities.OptionMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="51-51", cluster="QuantConnect.Securities.OptionMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_12 [label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", span="34-34", cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_40 [label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="65-65", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="BrokerageModelSecurityInitializerTests.cs"];
m5_133 [label=option, span="", file="BrokerageModelSecurityInitializerTests.cs"];
m5_134 [label=marginModel, span="", file="BrokerageModelSecurityInitializerTests.cs"];
m6_182 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="396-396", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BrokerageSetupHandler.cs"];
m6_183 [label="MarketSimulation?.SimulateMarketConditions(this, Algorithm)", span="399-399", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BrokerageSetupHandler.cs"];
m6_184 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="396-396", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BrokerageSetupHandler.cs"];
m6_175 [label="Entry Unk.All", span="", cluster="Unk.All", file="BrokerageSetupHandler.cs"];
m6_203 [label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113", cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs"];
m6_52 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="BrokerageSetupHandler.cs"];
m6_56 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="424-424", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs"];
m6_198 [label="e.Status.IsClosed() && _pendingOptionAssignments.Contains(e.Symbol)", span="426-426", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs"];
m6_199 [label="_pendingOptionAssignments.Remove(e.Symbol)", span="428-428", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs"];
m6_200 [label="base.OnOrderEvent(e)", span="431-431", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs"];
m6_201 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="424-424", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs"];
m6_159 [label="Entry QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="48-48", cluster="QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_163 [label="Entry QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="54-54", cluster="QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BrokerageSetupHandler.cs"];
m6_164 [label="Entry QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="38-38", cluster="QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BrokerageSetupHandler.cs"];
m6_195 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="BrokerageSetupHandler.cs"];
m6_210 [label="Entry QuantConnect.Orders.Order.Clone()", span="241-241", cluster="QuantConnect.Orders.Order.Clone()", file="BrokerageSetupHandler.cs"];
m6_179 [label="Entry lambda expression", span="378-378", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_24 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_25 [label="x.Value.Symbol", span="108-108", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_26 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_31 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_32 [label="x.Value", span="119-119", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_33 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_176 [label="Entry lambda expression", span="245-245", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_177 [label="x.Key", span="245-245", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_178 [label="Exit lambda expression", span="245-245", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_180 [label="x.Status.IsClosed()", span="378-378", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_181 [label="Exit lambda expression", span="378-378", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m6_34 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_35 [label="Algorithm.LiveMode", span="129-129", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_36 [label="Log.Trace(''BacktestingBrokerage.PlaceOrder(): Type: '' + order.Type + '' Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="131-131", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_37 [label="order.Status == OrderStatus.New", span="134-134", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_40 [label="SetPendingOrder(order)", span="139-139", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_41 [label="var orderId = order.Id.ToString()", span="142-142", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_42 [label="!order.BrokerId.Contains(orderId)", span="143-143", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_43 [label="order.BrokerId.Add(orderId)", span="143-143", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_45 [label="var submitted = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="147-147", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_38 [label=_needsScanLock, span="136-136", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_48 [label="return false;", span="152-152", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_39 [label="_needsScan = true", span="138-138", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_44 [label="int orderFee = 0", span="146-146", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_46 [label="OnOrderEvent(submitted)", span="148-148", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_47 [label="return true;", span="150-150", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_49 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_27 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="117-117", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BrokerageSetupHandler.cs"];
m6_28 [label="return Algorithm.Portfolio.CashBook.Select(x => x.Value).ToList();", span="119-119", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BrokerageSetupHandler.cs"];
m6_29 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="117-117", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BrokerageSetupHandler.cs"];
m6_155 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageSetupHandler.cs"];
m6_5 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="62-62", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BrokerageSetupHandler.cs"];
m6_6 [label="Algorithm = algorithm", span="65-65", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BrokerageSetupHandler.cs"];
m6_7 [label="_pending = new ConcurrentDictionary<int, Order>()", span="66-66", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BrokerageSetupHandler.cs"];
m6_8 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="62-62", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BrokerageSetupHandler.cs"];
m6_158 [label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78", cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_185 [label="Entry QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="31-31", cluster="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs"];
m6_14 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="96-96", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BrokerageSetupHandler.cs"];
m6_15 [label="return Algorithm.Transactions.GetOpenOrders();", span="98-98", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BrokerageSetupHandler.cs"];
m6_16 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="96-96", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BrokerageSetupHandler.cs"];
m6_202 [label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="BrokerageSetupHandler.cs"];
m6_174 [label="Entry QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", span="132-132", cluster="QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs"];
m6_23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="BrokerageSetupHandler.cs"];
m6_91 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_92 [label=_needsScanLock, span="234-234", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_93 [label="!_needsScan", span="237-237", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_94 [label="return;", span="239-239", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_95 [label="var stillNeedsScan = false", span="242-242", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_96 [label="_pending.OrderBy(x => x.Key)", span="245-245", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_153 [label="_needsScan = stillNeedsScan", span="389-389", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_97 [label="var order = kvp.Value", span="247-247", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_98 [label="order == null", span="248-248", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_99 [label="Log.Error(''BacktestingBrokerage.Scan(): Null pending order found: '' + kvp.Key)", span="250-250", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_101 [label="order.Status.IsClosed()", span="255-255", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_102 [label="_pending.TryRemove(order.Id, out order)", span="258-258", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_103 [label="order.Time == Algorithm.UtcTime && order.Type != OrderType.Market", span="263-263", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_105 [label="var fills = new[] { new OrderEvent(order, Algorithm.UtcTime, 0) }", span="269-269", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_107 [label="!Algorithm.Securities.TryGetValue(order.Symbol, out security)", span="272-272", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_108 [label="Log.Error(''BacktestingBrokerage.Scan(): Unable to process order: '' + order.Id + ''. The security no longer exists.'')", span="274-274", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_109 [label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0m){Status = OrderStatus.Invalid})", span="276-276", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_110 [label="_pending.TryRemove(order.Id, out order)", span="277-277", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_111 [label="!Algorithm.BrokerageModel.CanExecuteOrder(security, order)", span="282-282", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_113 [label="hasSufficientBuyingPower = security.BuyingPowerModel.HasSufficientBuyingPowerForOrder(Algorithm.Portfolio, security, order)", span="291-291", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_116 [label="_pending.TryRemove(order.Id, out pending)", span="297-297", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_117 [label="order.Status = OrderStatus.Invalid", span="298-298", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_118 [label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0, ''Error in GetSufficientCapitalForOrder''))", span="299-299", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_120 [label="Algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="302-302", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_123 [label="order.Type", span="315-315", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_125 [label="fills = new[] { model.LimitFill(security, order as LimitOrder) }", span="318-318", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_127 [label="fills = new[] { model.StopMarketFill(security, order as StopMarketOrder) }", span="322-322", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_129 [label="fills = new[] { model.MarketFill(security, order as MarketOrder) }", span="326-326", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_131 [label="fills = new[] { model.StopLimitFill(security, order as StopLimitOrder) }", span="330-330", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_133 [label="fills = new[] { model.MarketOnOpenFill(security, order as MarketOnOpenOrder) }", span="334-334", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_135 [label="fills = new[] { model.MarketOnCloseFill(security, order as MarketOnCloseOrder) }", span="338-338", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_138 [label="fills = option.OptionExerciseModel.OptionExercise(option, order as OptionExerciseOrder).ToArray()", span="343-343", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_141 [label="Algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'',\r\n                                order.Id, order.Type, err.Message))", span="350-351", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_142 [label="order.Status = OrderStatus.Invalid", span="357-357", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_143 [label="Algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id,\r\n                            order.GetValue(security).SmartRounding()))", span="358-359", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_145 [label="order.Status != fill.Status || fill.FillQuantity != 0", span="365-365", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_147 [label="order.Type == OrderType.OptionExercise", span="371-371", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_148 [label="fill.Message = order.Tag", span="373-373", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_151 [label="_pending.TryRemove(order.Id, out order)", span="380-380", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_100 [label="_pending.TryRemove(kvp.Key, out order)", span="251-251", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_104 [label="stillNeedsScan = true", span="265-265", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_106 [label="Security security", span="271-271", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_144 [label=fills, span="362-362", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_150 [label="fills.All(x => x.Status.IsClosed())", span="378-378", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_122 [label="var model = security.FillModel", span="310-310", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_137 [label="var option = (Option)security", span="342-342", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_112 [label="bool hasSufficientBuyingPower", span="288-288", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_114 [label=Exception, span="293-293", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_121 [label=hasSufficientBuyingPower, span="307-307", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_115 [label="Order pending", span="296-296", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_119 [label="Log.Error(err)", span="301-301", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_124 [label="OrderType.Limit", span="317-317", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_126 [label="OrderType.StopMarket", span="321-321", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_128 [label="OrderType.Market", span="325-325", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_130 [label="OrderType.StopLimit", span="329-329", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_132 [label="OrderType.MarketOnOpen", span="333-333", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_134 [label="OrderType.MarketOnClose", span="337-337", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_136 [label="OrderType.OptionExercise", span="341-341", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_139 [label=Exception, span="347-347", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_140 [label="Log.Error(err)", span="349-349", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_146 [label="OnOrderEvent(fill)", span="368-368", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_149 [label="OnOptionPositionAssigned(fill)", span="374-374", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_152 [label="stillNeedsScan = true", span="384-384", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_154 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BrokerageSetupHandler.cs"];
m6_162 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="426-426", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BrokerageSetupHandler.cs"];
m6_74 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BrokerageSetupHandler.cs"];
m6_22 [label="Entry Holding.cstr", span="", cluster="Holding.cstr", file="BrokerageSetupHandler.cs"];
m6_90 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="BrokerageSetupHandler.cs"];
m6_173 [label="Entry decimal.SmartRounding()", span="207-207", cluster="decimal.SmartRounding()", file="BrokerageSetupHandler.cs"];
m6_194 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="BrokerageSetupHandler.cs"];
m6_9 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BrokerageSetupHandler.cs"];
m6_10 [label="Algorithm = algorithm", span="77-77", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BrokerageSetupHandler.cs"];
m6_11 [label="MarketSimulation = marketSimulation", span="78-78", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BrokerageSetupHandler.cs"];
m6_12 [label="_pending = new ConcurrentDictionary<int, Order>()", span="79-79", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BrokerageSetupHandler.cs"];
m6_13 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BrokerageSetupHandler.cs"];
m6_4 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="BrokerageSetupHandler.cs"];
m6_172 [label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191", cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="BrokerageSetupHandler.cs"];
m6_0 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs"];
m6_1 [label="Algorithm = algorithm", span="53-53", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs"];
m6_2 [label="_pending = new ConcurrentDictionary<int, Order>()", span="54-54", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs"];
m6_3 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs"];
m6_57 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_58 [label="Algorithm.LiveMode", span="162-162", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_59 [label="Log.Trace(''BacktestingBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="164-164", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_62 [label="!_pending.TryGetValue(order.Id, out pending)", span="170-170", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_65 [label="SetPendingOrder(order)", span="177-177", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_66 [label="var orderId = order.Id.ToString()", span="180-180", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_67 [label="!order.BrokerId.Contains(orderId)", span="181-181", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_68 [label="order.BrokerId.Add(orderId)", span="181-181", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_70 [label="var updated = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="185-185", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_60 [label=_needsScanLock, span="167-167", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_61 [label="Order pending", span="169-169", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_63 [label="return false;", span="173-173", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_64 [label="_needsScan = true", span="176-176", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_69 [label="int orderFee = 0", span="184-184", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_71 [label="OnOrderEvent(updated)", span="186-186", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_72 [label="return true;", span="188-188", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_73 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_186 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="407-407", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BrokerageSetupHandler.cs"];
m6_187 [label="_pendingOptionAssignments.Contains(option.Symbol)", span="410-410", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BrokerageSetupHandler.cs"];
m6_189 [label="_pendingOptionAssignments.Add(option.Symbol)", span="412-412", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BrokerageSetupHandler.cs"];
m6_190 [label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, -quantity, 0m, 0m, Algorithm.UtcTime, ''Simulated option assignment before expiration'')", span="414-414", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BrokerageSetupHandler.cs"];
m6_188 [label="return;", span="410-410", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BrokerageSetupHandler.cs"];
m6_191 [label="var ticket = Algorithm.Transactions.ProcessRequest(request)", span="416-416", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BrokerageSetupHandler.cs"];
m6_192 [label="Log.Trace($''BacktestingBrokerage.ActivateOptionAssignment(): OrderId: {ticket.OrderId}'')", span="417-417", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BrokerageSetupHandler.cs"];
m6_193 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="407-407", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BrokerageSetupHandler.cs"];
m6_53 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="BrokerageSetupHandler.cs"];
m6_170 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="BrokerageSetupHandler.cs"];
m6_17 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="259-259", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="BrokerageSetupHandler.cs"];
m6_157 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="BrokerageSetupHandler.cs"];
m6_169 [label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33", cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="BrokerageSetupHandler.cs"];
m6_21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BrokerageSetupHandler.cs"];
m6_165 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="30-30", cluster="QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="BrokerageSetupHandler.cs"];
m6_204 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="437-437", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="BrokerageSetupHandler.cs"];
m6_205 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="437-437", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="BrokerageSetupHandler.cs"];
m6_196 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BrokerageSetupHandler.cs"];
m6_75 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_76 [label="Algorithm.LiveMode", span="198-198", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_77 [label="Log.Trace(''BacktestingBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="200-200", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_80 [label="!_pending.TryRemove(order.Id, out pending)", span="206-206", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_82 [label="var orderId = order.Id.ToString()", span="213-213", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_83 [label="!order.BrokerId.Contains(orderId)", span="214-214", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_84 [label="order.BrokerId.Add(order.Id.ToString())", span="214-214", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_86 [label="var canceled = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Canceled }", span="218-218", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_78 [label=_needsScanLock, span="203-203", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_79 [label="Order pending", span="205-205", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_81 [label="return false;", span="209-209", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_85 [label="int orderFee = 0", span="217-217", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_87 [label="OnOrderEvent(canceled)", span="219-219", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_88 [label="return true;", span="221-221", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_89 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_166 [label="Entry QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="46-46", cluster="QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="BrokerageSetupHandler.cs"];
m6_197 [label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageSetupHandler.cs"];
m6_171 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="BrokerageSetupHandler.cs"];
m6_54 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BrokerageSetupHandler.cs"];
m6_206 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="445-445", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="BrokerageSetupHandler.cs"];
m6_207 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="445-445", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="BrokerageSetupHandler.cs"];
m6_51 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="455-455", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_208 [label="_pending[order.Id] = order.Clone()", span="458-458", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_209 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="455-455", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs"];
m6_156 [label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27", cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="BrokerageSetupHandler.cs"];
m6_168 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="70-70", cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="BrokerageSetupHandler.cs"];
m6_167 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="62-62", cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="BrokerageSetupHandler.cs"];
m6_161 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BrokerageSetupHandler.cs"];
m6_18 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="105-105", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BrokerageSetupHandler.cs"];
m6_19 [label="return (from kvp in Algorithm.Portfolio.Securities.OrderBy(x => x.Value.Symbol)\r\n                    where kvp.Value.Holdings.AbsoluteQuantity > 0\r\n                    select new Holding(kvp.Value)).ToList();", span="108-110", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BrokerageSetupHandler.cs"];
m6_20 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="105-105", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BrokerageSetupHandler.cs"];
m6_50 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BrokerageSetupHandler.cs"];
m6_30 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BrokerageSetupHandler.cs"];
m6_55 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="BrokerageSetupHandler.cs"];
m6_211 [label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span="", file="BrokerageSetupHandler.cs"];
m8_98 [label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="244-244", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_99 [label="Exit QuantConnect.Brokerages.BaseWebsocketsBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="244-244", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_108 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_106 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_64 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", span="78-78", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_31 [label="Entry lambda expression", span="109-178", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_29 [label="WebSocket.IsOpen", span="106-106", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_34 [label=_lockerConnectionMonitor, span="114-114", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_35 [label="LastHeartbeatUtcTime = DateTime.UtcNow", span="116-116", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_36 [label="!_cancellationTokenSource.IsCancellationRequested", span="121-121", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_38 [label=_lockerConnectionMonitor, span="125-125", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_39 [label="elapsed = DateTime.UtcNow - LastHeartbeatUtcTime", span="127-127", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_40 [label="!_connectionLost && elapsed > TimeSpan.FromSeconds(_heartbeatTimeout)", span="130-130", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_41 [label="_connectionLost = true", span="132-132", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_43 [label="OnMessage(BrokerageMessageEvent.Disconnected(''Connection with server lost. This could be because of internet connectivity issues.''))", span="135-135", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_44 [label=_connectionLost, span="137-137", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_46 [label="_connectionLost = false", span="143-143", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_48 [label="OnMessage(BrokerageMessageEvent.Reconnected(''Connection with server restored.''))", span="146-146", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_50 [label="Reconnect()", span="154-154", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_85 [label="!WebSocket.IsOpen", span="210-210", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_88 [label="WebSocket.IsOpen", span="215-215", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_28 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_30 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_55 [label="Log.Error(exception)", span="167-167", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_58 [label="Log.Error(exception)", span="176-176", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_33 [label="double nextReconnectionAttemptSeconds = 1", span="112-112", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_56 [label="Thread.Sleep(10000)", span="171-171", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_37 [label="TimeSpan elapsed", span="124-124", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_57 [label=Exception, span="174-174", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_59 [label="Exit lambda expression", span="109-178", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_45 [label="elapsed <= TimeSpan.FromSeconds(_heartbeatTimeout)", span="141-141", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_42 [label="nextReconnectionAttemptUtcTime = DateTime.UtcNow.AddSeconds(nextReconnectionAttemptSeconds)", span="133-133", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_47 [label="nextReconnectionAttemptSeconds = 1", span="144-144", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_54 [label=Exception, span="165-165", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_49 [label="DateTime.UtcNow > nextReconnectionAttemptUtcTime", span="150-150", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_51 [label=Exception, span="156-156", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_84 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_86 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_87 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_32 [label="var nextReconnectionAttemptUtcTime = DateTime.UtcNow", span="111-111", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_52 [label="nextReconnectionAttemptSeconds = Math.Min(nextReconnectionAttemptSeconds * 2, 60)", span="159-159", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_53 [label="nextReconnectionAttemptUtcTime = DateTime.UtcNow.AddSeconds(nextReconnectionAttemptSeconds)", span="160-160", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_89 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="CollectionSubscriptionDataSourceReader.cs"];
m8_82 [label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.GetSubscribed()", span="250-250", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.GetSubscribed()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_101 [label=ChannelList, span="253-253", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.GetSubscribed()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_102 [label=ChannelList, span="255-255", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.GetSubscribed()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_103 [label="list.Add(Symbol.Create(item.Value.Symbol, SecurityType.Forex, _market))", span="257-257", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.GetSubscribed()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_100 [label="IList<Symbol> list = new List<Symbol>()", span="252-252", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.GetSubscribed()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_104 [label="return list;", span="260-260", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.GetSubscribed()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_105 [label="Exit QuantConnect.Brokerages.BaseWebsocketsBrokerage.GetSubscribed()", span="250-250", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.GetSubscribed()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_22 [label="Entry QuantConnect.Brokerages.IWebSocket.Connect()", span="46-46", cluster="QuantConnect.Brokerages.IWebSocket.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_66 [label="Entry System.Math.Min(double, double)", span="0-0", cluster="System.Math.Min(double, double)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_96 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_11 [label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", span="100-100", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_12 [label="WebSocket.OnMessage += OnMessage", span="102-102", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_13 [label="WebSocket.OnError += OnError", span="103-103", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_14 [label="WebSocket.Connect()", span="105-105", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_15 [label="Wait(_connectionTimeout, () => WebSocket.IsOpen)", span="106-106", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_16 [label="_cancellationTokenSource = new CancellationTokenSource()", span="108-108", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_17 [label="_connectionMonitorThread = new Thread(() =>\r\n            {\r\n                var nextReconnectionAttemptUtcTime = DateTime.UtcNow;\r\n                double nextReconnectionAttemptSeconds = 1;\r\n\r\n                lock (_lockerConnectionMonitor)\r\n                {\r\n                    LastHeartbeatUtcTime = DateTime.UtcNow;\r\n                }\r\n\r\n                try\r\n                {\r\n                    while (!_cancellationTokenSource.IsCancellationRequested)\r\n                    {\r\n\r\n                        TimeSpan elapsed;\r\n                        lock (_lockerConnectionMonitor)\r\n                        {\r\n                            elapsed = DateTime.UtcNow - LastHeartbeatUtcTime;\r\n                        }\r\n\r\n                        if (!_connectionLost && elapsed > TimeSpan.FromSeconds(_heartbeatTimeout))\r\n                        {\r\n                            _connectionLost = true;\r\n                            nextReconnectionAttemptUtcTime = DateTime.UtcNow.AddSeconds(nextReconnectionAttemptSeconds);\r\n\r\n                            OnMessage(BrokerageMessageEvent.Disconnected(''Connection with server lost. This could be because of internet connectivity issues.''));\r\n                        }\r\n                        else if (_connectionLost)\r\n                        {\r\n                            try\r\n                            {\r\n                                if (elapsed <= TimeSpan.FromSeconds(_heartbeatTimeout))\r\n                                {\r\n                                    _connectionLost = false;\r\n                                    nextReconnectionAttemptSeconds = 1;\r\n\r\n                                    OnMessage(BrokerageMessageEvent.Reconnected(''Connection with server restored.''));\r\n                                }\r\n                                else\r\n                                {\r\n                                    if (DateTime.UtcNow > nextReconnectionAttemptUtcTime)\r\n                                    {\r\n                                        try\r\n                                        {\r\n                                            Reconnect();\r\n                                        }\r\n                                        catch (Exception)\r\n                                        {\r\n                                            // double the interval between attempts (capped to 1 minute)\r\n                                            nextReconnectionAttemptSeconds = Math.Min(nextReconnectionAttemptSeconds * 2, 60);\r\n                                            nextReconnectionAttemptUtcTime = DateTime.UtcNow.AddSeconds(nextReconnectionAttemptSeconds);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            catch (Exception exception)\r\n                            {\r\n                                Log.Error(exception);\r\n                            }\r\n                        }\r\n\r\n                        Thread.Sleep(10000);\r\n                    }\r\n                }\r\n                catch (Exception exception)\r\n                {\r\n                    Log.Error(exception);\r\n                }\r\n            })", span="109-178", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_18 [label="_connectionMonitorThread.Start()", span="179-179", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_19 [label="!_connectionMonitorThread.IsAlive", span="180-180", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_20 [label="Thread.Sleep(1)", span="182-182", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_21 [label="Exit QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", span="100-100", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_107 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_25 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_26 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_97 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_83 [label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="51-51", cluster="QuantConnect.Brokerages.IWebSocket.Close()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_24 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_62 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", span="68-68", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_63 [label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170", cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_27 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_65 [label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", span="199-199", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_73 [label="var subscribed = GetSubscribed()", span="201-201", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_74 [label="WebSocket.OnError -= this.OnError", span="203-203", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_75 [label=IsConnected, span="207-207", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_76 [label="WebSocket.Close()", span="209-209", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_77 [label="Wait(_connectionTimeout, () => !WebSocket.IsOpen)", span="210-210", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_78 [label="!IsConnected", span="212-212", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_79 [label="WebSocket.Connect()", span="214-214", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_80 [label="Wait(_connectionTimeout, () => WebSocket.IsOpen)", span="215-215", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_81 [label="Exit QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", span="199-199", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Reconnect()", file="CollectionSubscriptionDataSourceReader.cs"];
m8_61 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_23 [label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Wait(int, System.Func<bool>)", span="225-225", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Wait(int, System.Func<bool>)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_90 [label="var StartTime = Environment.TickCount", span="227-227", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Wait(int, System.Func<bool>)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_91 [label="Environment.TickCount > StartTime + timeout", span="230-230", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Wait(int, System.Func<bool>)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_94 [label="!state()", span="236-236", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Wait(int, System.Func<bool>)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_92 [label="throw new Exception(''Websockets connection timeout.'');", span="232-232", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Wait(int, System.Func<bool>)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_93 [label="Thread.Sleep(1)", span="234-234", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Wait(int, System.Func<bool>)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_95 [label="Exit QuantConnect.Brokerages.BaseWebsocketsBrokerage.Wait(int, System.Func<bool>)", span="225-225", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Wait(int, System.Func<bool>)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_8 [label="Entry QuantConnect.Brokerages.IWebSocket.Initialize(string)", span="35-35", cluster="QuantConnect.Brokerages.IWebSocket.Initialize(string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_0 [label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.BaseWebsocketsBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, string)", span="80-80", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.BaseWebsocketsBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_5 [label="ApiSecret = apiSecret", span="86-86", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.BaseWebsocketsBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, string)", color=green, community=0, file="CollectionSubscriptionDataSourceReader.cs"];
m8_4 [label="_market = market", span="85-85", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.BaseWebsocketsBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_6 [label="ApiKey = apiKey", span="87-87", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.BaseWebsocketsBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_1 [label="WebSocket = websocket", span="82-82", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.BaseWebsocketsBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_2 [label="WebSocket.Initialize(wssUrl)", span="83-83", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.BaseWebsocketsBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_3 [label="RestClient = restClient", span="84-84", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.BaseWebsocketsBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_7 [label="Exit QuantConnect.Brokerages.BaseWebsocketsBrokerage.BaseWebsocketsBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, string)", span="80-80", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.BaseWebsocketsBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, string)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_60 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="CollectionSubscriptionDataSourceReader.cs"];
m8_109 [label="QuantConnect.Brokerages.BaseWebsocketsBrokerage", span="", file="CollectionSubscriptionDataSourceReader.cs"];
m10_22 [label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''66''},\r\n                {''Average Win'', ''1.06%''},\r\n                {''Average Loss'', ''-0.50%''},\r\n                {''Compounding Annual Return'', ''18.581%''},\r\n                {''Drawdown'', ''7.100%''},\r\n                {''Expectancy'', ''0.815''},\r\n                {''Net Profit'', ''18.581%''},\r\n                {''Sharpe Ratio'', ''1.44''},\r\n                {''Loss Rate'', ''42%''},\r\n                {''Win Rate'', ''58%''},\r\n                {''Profit-Loss Ratio'', ''2.13''},\r\n                {''Alpha'', ''0.309''},\r\n                {''Beta'', ''-10.101''},\r\n                {''Annual Standard Deviation'', ''0.1''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''1.277''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.014''},\r\n                {''Total Fees'', ''$185.37''},\r\n            }", span="285-306", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_43 [label="baseJob.Type == PacketType.BacktestNode", span="132-132", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ConsoleSetupHandler.cs"];
m10_79 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ConsoleSetupHandler.cs"];
m10_72 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="491-491", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="ConsoleSetupHandler.cs"];
m10_83 [label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="291-291", cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="ConsoleSetupHandler.cs"];
m10_33 [label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.358''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.93''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="538-559", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_34 [label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.461''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.706''},\r\n                {''Beta'', ''15.77''},\r\n                {''Annual Standard Deviation'', ''0.146''},\r\n                {''Annual Variance'', ''0.021''},\r\n                {''Information Ratio'', ''6.359''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''0.06''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="561-582", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_36 [label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="607-628", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_35 [label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="584-605", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_37 [label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.02%''},\r\n                {''Compounding Annual Return'', ''254.081%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.018''},\r\n                {''Net Profit'', ''1.395%''},\r\n                {''Sharpe Ratio'', ''1.176''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.47''},\r\n                {''Alpha'', ''-1.18''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.813''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.245''},\r\n                {''Tracking Error'', ''0.178''},\r\n                {''Treynor Ratio'', ''0.765''},\r\n                {''Total Fees'', ''$2045.20''}\r\n            }", span="630-651", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_46 [label="algorithm.SetParameters(baseJob.Parameters)", span="137-137", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_28 [label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'',''2''},\r\n                {''Average Win'',''0%''},\r\n                {''Average Loss'',''-0.02%''},\r\n                {''Compounding Annual Return'',''-1.242%''},\r\n                {''Drawdown'',''0.000%''},\r\n                {''Expectancy'',''-1''},\r\n                {''Net Profit'',''-0.017%''},\r\n                {''Sharpe Ratio'',''-7.099''},\r\n                {''Loss Rate'',''100%''},\r\n                {''Win Rate'',''0%''},\r\n                {''Profit-Loss Ratio'',''0''},\r\n                {''Alpha'',''-0.01''},\r\n                {''Beta'',''0''},\r\n                {''Annual Standard Deviation'',''0.001''},\r\n                {''Annual Variance'',''0''},\r\n                {''Information Ratio'',''7.126''},\r\n                {''Tracking Error'',''6.064''},\r\n                {''Treynor Ratio'',''174.306''},\r\n                {''Total Fees'',''$0.50''},\r\n            }", span="423-444", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_29 [label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="446-467", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_26 [label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.288''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.105''},\r\n                {''Beta'', ''-46.73''},\r\n                {''Annual Standard Deviation'', ''0.235''},\r\n                {''Annual Variance'', ''0.055''},\r\n                {''Information Ratio'', ''-3.366''},\r\n                {''Tracking Error'', ''0.236''},\r\n                {''Treynor Ratio'', ''0.017''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="377-398", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="ConsoleSetupHandler.cs"];
m10_30 [label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="469-490", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="ConsoleSetupHandler.cs"];
m10_25 [label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.267''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''0.032''},\r\n                {''Annual Standard Deviation'', ''0.027''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-1.014''},\r\n                {''Tracking Error'', ''0.027''},\r\n                {''Treynor Ratio'', ''-0.222''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="354-375", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_27 [label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.299''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''0.111''},\r\n                {''Beta'', ''-3.721''},\r\n                {''Annual Standard Deviation'', ''0.124''},\r\n                {''Annual Variance'', ''0.015''},\r\n                {''Information Ratio'', ''0.137''},\r\n                {''Tracking Error'', ''0.124''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="400-421", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_31 [label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="492-513", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_97 [label="Entry string.LastIndexOf(char)", span="0-0", cluster="string.LastIndexOf(char)", file="ConsoleSetupHandler.cs"];
m10_74 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="514-514", cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="ConsoleSetupHandler.cs"];
m10_24 [label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''79.192''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.466''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="331-352", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_7 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="ConsoleSetupHandler.cs"];
m10_71 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="305-305", cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="ConsoleSetupHandler.cs"];
m10_23 [label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''78.067''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''10.897''},\r\n                {''Tracking Error'', ''0.078''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="308-329", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_44 [label="var backtestJob = baseJob as BacktestNodePacket", span="134-134", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_52 [label="backtestJob.PeriodStart = algorithm.StartDate", span="148-148", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_53 [label="backtestJob.PeriodFinish = algorithm.EndDate", span="149-149", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_54 [label="backtestJob.BacktestId = algorithm.GetType().Name", span="150-150", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_55 [label="backtestJob.Type = PacketType.BacktestNode", span="151-151", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_70 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="508-508", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="ConsoleSetupHandler.cs"];
m10_91 [label="Entry Unk.>", span="", cluster="Unk.>", file="ConsoleSetupHandler.cs"];
m10_40 [label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomIndicatorAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.Python)\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="699-766", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_78 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="422-422", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="ConsoleSetupHandler.cs"];
m10_8 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="ConsoleSetupHandler.cs"];
m10_82 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="372-372", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="ConsoleSetupHandler.cs"];
m10_98 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="ConsoleSetupHandler.cs"];
m10_41 [label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="41-41", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_42 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConsoleSetupHandler.cs"];
m10_45 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ConsoleSetupHandler.cs"];
m10_47 [label="algorithm.SetLiveMode(false)", span="138-138", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_48 [label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="139-139", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_49 [label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="141-141", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_50 [label="algorithm.Initialize()", span="143-143", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_51 [label="algorithm.SetDateTime(algorithm.StartDate.ConvertToUtc(algorithm.TimeZone))", span="145-145", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_56 [label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span="", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_57 [label="backtestJob.Channel = baseJob.Channel", span="153-153", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_59 [label="StartingPortfolioValue = algorithm.Portfolio.Cash", span="157-157", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_66 [label="algorithm.Transactions.SetOrderProcessor(transactionHandler)", span="175-175", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_67 [label="algorithm.PostInitialize()", span="176-176", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_68 [label="return initializeComplete;", span="178-178", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_60 [label="throw new Exception(''The ConsoleSetupHandler is for backtests only. Use the BrokerageSetupHandler.'');", span="161-161", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_58 [label="StartingDate = backtestJob.PeriodStart", span="156-156", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_61 [label=Exception, span="164-164", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_64 [label="Errors.Count == 0", span="170-170", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_62 [label="Log.Error(err)", span="166-166", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_63 [label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err)", span="167-167", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_65 [label="initializeComplete = true", span="172-172", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_69 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="124-124", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs"];
m10_38 [label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="653-674", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_10 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", span="85-85", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ConsoleSetupHandler.cs"];
m10_11 [label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="41-41", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_14 [label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="101-122", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="ConsoleSetupHandler.cs"];
m10_15 [label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''9.733%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.513''},\r\n                {''Net Profit'', ''0.119%''},\r\n                {''Sharpe Ratio'', ''1.954''},\r\n                {''Loss Rate'', ''25%''},\r\n                {''Win Rate'', ''75%''},\r\n                {''Profit-Loss Ratio'', ''1.02''},\r\n                {''Alpha'', ''-0.107''},\r\n                {''Beta'', ''15.186''},\r\n                {''Annual Standard Deviation'', ''0.031''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''1.6''},\r\n                {''Tracking Error'', ''0.031''},\r\n                {''Treynor Ratio'', ''0.004''},\r\n                {''Total Fees'', ''$34.00''},\r\n            }", span="124-145", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="ConsoleSetupHandler.cs"];
m10_12 [label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="43-64", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_13 [label="var basicTemplateFrameworkStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n                {''Total Alphas Generated'', ''100''},\r\n                {''Total Alphas Closed'', ''99''},\r\n                {''Total Alphas Analysis Completed'', ''86''},\r\n                {''Long Alpha Count'', ''100''},\r\n                {''Short Alpha Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Total Estimated Alpha Value'', ''$24404.2897''},\r\n                {''Mean Population Estimated Alpha Value'', ''$246.508''},\r\n                {''Mean Population Direction'', ''48.8372%''},\r\n                {''Mean Population Magnitude'', ''48.8372%''},\r\n                {''Rolling Averaged Population Direction'', ''68.2411%''},\r\n                {''Rolling Averaged Population Magnitude'', ''68.2411%''}\r\n            }", span="66-99", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs", color=green, community=0];
m10_16 [label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.358''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.065''},\r\n                {''Beta'', ''-0.998''},\r\n                {''Annual Standard Deviation'', ''0.062''},\r\n                {''Annual Variance'', ''0.004''},\r\n                {''Information Ratio'', ''-1.679''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''0.085''},\r\n                {''Total Fees'', ''$21.00''},\r\n            }", span="147-168", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_17 [label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.019''},\r\n                {''Beta'', ''-0.339''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-38.93''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.067''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="170-191", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_18 [label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.973''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.68''},\r\n                {''Beta'', ''-29.799''},\r\n                {''Annual Standard Deviation'', ''0.318''},\r\n                {''Annual Variance'', ''0.101''},\r\n                {''Information Ratio'', ''-4.034''},\r\n                {''Tracking Error'', ''0.318''},\r\n                {''Treynor Ratio'', ''0.042''},\r\n                {''Total Fees'', ''$5.00''},\r\n            }", span="193-214", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_19 [label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.365%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.2''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''73.725''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.183''},\r\n                {''Tracking Error'', ''0.84''},\r\n                {''Treynor Ratio'', ''0.014''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="216-237", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_77 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="558-558", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="ConsoleSetupHandler.cs"];
m10_32 [label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.239''},\r\n                {''Beta'', ''12.675''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-0.723''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''-0.001''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="515-536", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_92 [label="string.IsNullOrEmpty(expectedTypeName)", span="207-207", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs"];
m10_94 [label="return currentTypeFullName == expectedTypeName\r\n                || currentTypeFullName.Substring(currentTypeFullName.LastIndexOf('.') + 1) == expectedTypeName;", span="211-212", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs"];
m10_93 [label="return true;", span="209-209", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs"];
m10_95 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="205-205", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs"];
m10_21 [label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''90''},\r\n                {''Average Win'', ''0.78%''},\r\n                {''Average Loss'', ''-0.40%''},\r\n                {''Compounding Annual Return'', ''18.626%''},\r\n                {''Drawdown'', ''4.700%''},\r\n                {''Expectancy'', ''1.071''},\r\n                {''Net Profit'', ''18.626%''},\r\n                {''Sharpe Ratio'', ''1.997''},\r\n                {''Loss Rate'', ''30%''},\r\n                {''Win Rate'', ''70%''},\r\n                {''Profit-Loss Ratio'', ''1.97''},\r\n                {''Alpha'', ''0.112''},\r\n                {''Beta'', ''2.998''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''1.768''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.057''},\r\n                {''Total Fees'', ''$240.17''},\r\n            }", span="262-283", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="ConsoleSetupHandler.cs"];
m10_90 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConsoleSetupHandler.cs"];
m10_81 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ConsoleSetupHandler.cs"];
m10_73 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="185-185", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs"];
m10_84 [label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="187-187", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs"];
m10_85 [label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="189-189", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs"];
m10_86 [label="dataFeedsConfigString != string.Empty", span="190-190", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs"];
m10_87 [label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="192-192", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs"];
m10_88 [label="return dataFeeds;", span="195-195", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs"];
m10_89 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="185-185", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs"];
m10_75 [label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65", cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="ConsoleSetupHandler.cs"];
m10_99 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="219-219", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="ConsoleSetupHandler.cs"];
m10_100 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="219-219", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="ConsoleSetupHandler.cs"];
m10_96 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ConsoleSetupHandler.cs"];
m10_20 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="ConsoleSetupHandler.cs"];
m10_39 [label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", span="34-34", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", file="ConsoleSetupHandler.cs"];
m10_0 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="69-69", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs"];
m10_1 [label="MaxOrders = int.MaxValue", span="71-71", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs"];
m10_2 [label="StartingPortfolioValue = 0", span="72-72", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs"];
m10_3 [label="StartingDate = new DateTime(1998, 01, 01)", span="73-73", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs"];
m10_4 [label="MaximumRuntime = TimeSpan.FromDays(10 * 365)", span="74-74", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs"];
m10_5 [label="Errors = new List<string>()", span="75-75", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs"];
m10_6 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="69-69", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs"];
m10_76 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="285-285", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="ConsoleSetupHandler.cs"];
m10_101 [label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", span="", file="ConsoleSetupHandler.cs"];
m10_102 [label=algorithmName, span="", file="ConsoleSetupHandler.cs"];
m11_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Fetch(string)", span="32-32", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Fetch(string)", file="DefaultDataProvider.cs"];
m11_1 [label="!File.Exists(key)", span="34-34", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Fetch(string)", file="DefaultDataProvider.cs"];
m11_3 [label="return new FileStream(key, FileMode.Open, FileAccess.Read);", span="39-39", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Fetch(string)", file="DefaultDataProvider.cs"];
m11_2 [label="return null;", span="36-36", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Fetch(string)", file="DefaultDataProvider.cs"];
m11_4 [label="Exit QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Fetch(string)", span="32-32", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Fetch(string)", file="DefaultDataProvider.cs"];
m11_7 [label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Dispose()", span="42-42", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Dispose()", file="DefaultDataProvider.cs"];
m11_8 [label="Exit QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Dispose()", span="42-42", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.Dispose()", file="DefaultDataProvider.cs"];
m11_6 [label="Entry System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", span="0-0", cluster="System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", file="DefaultDataProvider.cs"];
m11_5 [label="Entry System.IO.File.Exists(string)", span="0-0", cluster="System.IO.File.Exists(string)", file="DefaultDataProvider.cs"];
m12_4 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="Engine.cs"];
m12_5 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="74-74", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="Engine.cs"];
m12_6 [label="AccountType == AccountType.Cash", span="76-76", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="Engine.cs"];
m12_7 [label="return 1m;", span="78-78", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="Engine.cs"];
m12_8 [label="return 3m;", span="81-81", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="Engine.cs"];
m12_9 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="74-74", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="Engine.cs"];
m12_13 [label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="23-23", cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="Engine.cs"];
m12_14 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="102-102", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_15 [label="message = _message", span="104-104", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_16 [label="return false;", span="105-105", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_17 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="102-102", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_35 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Engine.cs"];
m12_36 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="Engine.cs"];
m12_37 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="Engine.cs"];
m12_10 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="89-89", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="Engine.cs"];
m12_11 [label="return new GDAXFeeModel();", span="91-91", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="Engine.cs"];
m12_12 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="89-89", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="Engine.cs"];
m12_39 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="160-160", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="Engine.cs"];
m12_40 [label="return new LatestPriceFillModel();", span="162-162", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="Engine.cs"];
m12_41 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="160-160", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="Engine.cs"];
m12_38 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="87-87", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_34 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Engine.cs"];
m12_42 [label="Entry QuantConnect.Orders.Fills.LatestPriceFillModel.LatestPriceFillModel()", span="27-27", cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.LatestPriceFillModel()", file="Engine.cs"];
m12_0 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="59-59", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="Engine.cs"];
m12_1 [label="accountType == AccountType.Margin", span="62-62", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="Engine.cs"];
m12_2 [label="new BrokerageMessageEvent(BrokerageMessageType.Warning, 0,\r\n                    ''It is recommend to use a cash account. Margin trading is currently in pre-Alpha. Use at your own risk and please report any issues encountered.'')", span="64-65", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="Engine.cs"];
m12_3 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="59-59", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="Engine.cs"];
m12_18 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="115-115", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_19 [label="order.BrokerId != null && order.BrokerId.Any()", span="117-117", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_23 [label="MinimumOrderSizes.TryGetValue(security.Symbol.Value, out minimumOrderSize) &&\r\n                Math.Abs(order.Quantity) < minimumOrderSize", span="124-125", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_24 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    $''The minimum order quantity for {security.Symbol.Value} is {minimumOrderSize}''\r\n                )", span="127-129", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=red, community=0, file="Engine.cs"];
m12_26 [label="security.Type != SecurityType.Crypto", span="134-134", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_27 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''This model does not support '' + security.Type + '' security type.''\r\n                )", span="136-138", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_29 [label="order.Type != OrderType.Limit && order.Type != OrderType.Market && order.Type != OrderType.StopMarket", span="143-143", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_30 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''This model does not support '' + order.Type + '' order type.''\r\n                )", span="145-147", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_32 [label="return base.CanSubmitOrder(security, order, out message);", span="152-152", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_20 [label="message = _message", span="119-119", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_22 [label="decimal minimumOrderSize", span="123-123", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_21 [label="return false;", span="120-120", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_25 [label="return false;", span="131-131", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_28 [label="return false;", span="140-140", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_31 [label="return false;", span="149-149", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_33 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="115-115", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Engine.cs"];
m12_43 [label="QuantConnect.Brokerages.GDAXBrokerageModel", span="", file="Engine.cs"];
m13_27 [label="Entry QuantConnect.Data.Fundamental.EarningRatios.EarningRatios()", span="88-88", cluster="QuantConnect.Data.Fundamental.EarningRatios.EarningRatios()", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_22 [label="Entry QuantConnect.Data.Fundamental.CompanyReference.CompanyReference()", span="263-263", cluster="QuantConnect.Data.Fundamental.CompanyReference.CompanyReference()", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_25 [label="Entry QuantConnect.Data.Fundamental.EarningReports.EarningReports()", span="299-299", cluster="QuantConnect.Data.Fundamental.EarningReports.EarningReports()", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_24 [label="Entry QuantConnect.Data.Fundamental.FinancialStatements.FinancialStatements()", span="137-137", cluster="QuantConnect.Data.Fundamental.FinancialStatements.FinancialStatements()", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_66 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_5 [label="request.TradableDays", span="50-50", cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_4 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_6 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_67 [label=x, span="110-110", cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_68 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_23 [label="Entry QuantConnect.Data.Fundamental.SecurityReference.SecurityReference()", span="282-282", cluster="QuantConnect.Data.Fundamental.SecurityReference.SecurityReference()", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_53 [label="Entry QuantConnect.Data.Fundamental.FineFundamental.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="52-52", cluster="QuantConnect.Data.Fundamental.FineFundamental.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_18 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="95-95", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_30 [label="var source = fine.GetSource(config, date, _isLiveMode)", span="97-97", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_31 [label="var fileName = date.ToString(''yyyyMMdd'')", span="99-99", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_39 [label="date < firstDate", span="114-114", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_43 [label="date = date.AddDays(-1)", span="124-124", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_44 [label="source = fine.GetSource(config, date, _isLiveMode)", span="127-127", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_49 [label="source = fine.GetSource(config, date, _isLiveMode)", span="143-143", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_32 [label="!File.Exists(source.Source)", span="101-101", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_34 [label="var path = Path.GetDirectoryName(source.Source) ?? string.Empty", span="106-106", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_36 [label="return source;", span="108-108", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_40 [label="return source;", span="115-115", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_51 [label="return source;", span="151-151", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_42 [label="string.CompareOrdinal(fileName, _lastUsedFileName) > 0", span="121-121", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_50 [label="_lastUsedFileName = fileName", span="148-148", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_33 [label="_lastUsedFileName == null", span="103-103", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_48 [label="date = DateTime.ParseExact(_lastUsedFileName, ''yyyyMMdd'', CultureInfo.InvariantCulture)", span="142-142", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_35 [label="string.IsNullOrEmpty(path) || !Directory.Exists(path)", span="107-107", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_37 [label="var firstFileName = Path.GetFileNameWithoutExtension(Directory.GetFiles(path, ''*.zip'').OrderBy(x => x).First())", span="110-110", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_38 [label="var firstDate = DateTime.ParseExact(firstFileName, ''yyyyMMdd'', CultureInfo.InvariantCulture)", span="111-111", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_41 [label="_lastUsedFileName = firstFileName", span="118-118", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_45 [label="fileName = Path.GetFileNameWithoutExtension(source.Source)", span="128-128", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_46 [label="!File.Exists(source.Source)", span="130-130", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_47 [label="_lastUsedFileName = fileName", span="134-134", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_52 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="95-95", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.GetSource(QuantConnect.Data.Fundamental.FineFundamental, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_29 [label="Entry Unk.GetEnumerator", span="", cluster="Unk.GetEnumerator", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_54 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_62 [label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0", cluster="System.IO.Path.GetFileNameWithoutExtension(string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_26 [label="Entry QuantConnect.Data.Fundamental.OperationRatios.OperationRatios()", span="537-537", cluster="QuantConnect.Data.Fundamental.OperationRatios.OperationRatios()", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_19 [label="Entry Unk.ForSource", span="", cluster="Unk.ForSource", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_21 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_14 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="18-18", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_16 [label="Entry QuantConnect.Data.Fundamental.FineFundamental.FineFundamental()", span="68-68", cluster="QuantConnect.Data.Fundamental.FineFundamental.FineFundamental()", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_20 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_55 [label="Entry System.IO.File.Exists(string)", span="0-0", cluster="System.IO.File.Exists(string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_56 [label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0", cluster="System.IO.Path.GetDirectoryName(string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_58 [label="Entry System.IO.Directory.Exists(string)", span="0-0", cluster="System.IO.Directory.Exists(string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_60 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_1 [label="_isLiveMode = isLiveMode", span="49-49", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_2 [label="_tradableDaysProvider = tradableDaysProvider ?? (request => request.TradableDays)", span="50-50", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_3 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_8 [label="_dataCacheProvider = new SingleEntryDataCacheProvider(dataProvider)", span="61-61", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_7 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="59-59", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_9 [label="var tradableDays = _tradableDaysProvider(request)", span="63-63", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_11 [label="var fineFundamentalConfiguration = new SubscriptionDataConfig(request.Configuration, typeof(FineFundamental), request.Security.Symbol)", span="66-66", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_12 [label="return (\r\n                from date in tradableDays\r\n\r\n                let fineFundamentalSource = GetSource(fineFundamental, fineFundamentalConfiguration, date)\r\n                let fineFundamentalFactory = SubscriptionDataSourceReader.ForSource(fineFundamentalSource, dataProvider, _dataCacheProvider, fineFundamentalConfiguration, date, _isLiveMode)\r\n                let fineFundamentalForDate = (FineFundamental)fineFundamentalFactory.Read(fineFundamentalSource).FirstOrDefault()\r\n\r\n                select new FineFundamental\r\n                {\r\n                    DataType = MarketDataType.Auxiliary,\r\n                    Symbol = request.Configuration.Symbol,\r\n                    Time = date,\r\n                    CompanyReference = fineFundamentalForDate != null ? fineFundamentalForDate.CompanyReference : new CompanyReference(),\r\n                    SecurityReference = fineFundamentalForDate != null ? fineFundamentalForDate.SecurityReference : new SecurityReference(),\r\n                    FinancialStatements = fineFundamentalForDate != null ? fineFundamentalForDate.FinancialStatements : new FinancialStatements(),\r\n                    EarningReports = fineFundamentalForDate != null ? fineFundamentalForDate.EarningReports : new EarningReports(),\r\n                    OperationRatios = fineFundamentalForDate != null ? fineFundamentalForDate.OperationRatios : new OperationRatios(),\r\n                    EarningRatios = fineFundamentalForDate != null ? fineFundamentalForDate.EarningRatios : new EarningRatios(),\r\n                    ValuationRatios = fineFundamentalForDate != null ? fineFundamentalForDate.ValuationRatios : new ValuationRatios()\r\n                }\r\n                ).GetEnumerator();", span="68-88", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", color=red, community=0, file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_10 [label="var fineFundamental = new FineFundamental()", span="65-65", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_13 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="59-59", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_64 [label="Entry string.CompareOrdinal(string, string)", span="0-0", cluster="string.CompareOrdinal(string, string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_15 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_17 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="243-243", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_57 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_59 [label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0", cluster="System.IO.Directory.GetFiles(string, string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_61 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_65 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_28 [label="Entry QuantConnect.Data.Fundamental.ValuationRatios.ValuationRatios()", span="437-437", cluster="QuantConnect.Data.Fundamental.ValuationRatios.ValuationRatios()", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m13_69 [label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory", span="", file="FineFundamentalSubscriptionEnumeratorFactory.cs"];
m16_0 [label="Entry QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Action<int>, QuantConnect.Interfaces.IDataCacheProvider)", span="45-45", cluster="QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Action<int>, QuantConnect.Interfaces.IDataCacheProvider)", file="IHistoryProvider.cs"];
m16_1 [label="Exit QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Action<int>, QuantConnect.Interfaces.IDataCacheProvider)", span="45-45", cluster="QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Action<int>, QuantConnect.Interfaces.IDataCacheProvider)", file="IHistoryProvider.cs"];
m16_2 [label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53", cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="IHistoryProvider.cs"];
m16_3 [label="Exit QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53", cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="IHistoryProvider.cs"];
m18_4 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="101-101", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ISetupHandler.cs"];
m18_5 [label="Exit QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="101-101", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ISetupHandler.cs"];
m18_0 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", span="80-80", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ISetupHandler.cs"];
m18_1 [label="Exit QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", span="80-80", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ISetupHandler.cs"];
m18_2 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="89-89", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="ISetupHandler.cs"];
m18_3 [label="Exit QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="89-89", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="ISetupHandler.cs"];
m19_54 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderStatus(QuantConnect.Brokerages.GDAX.Messages.Order)", span="138-138", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderStatus(QuantConnect.Brokerages.GDAX.Messages.Order)", file="Isolator.cs"];
m19_55 [label="order.FilledSize != 0 && order.FilledSize != order.Size", span="140-140", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderStatus(QuantConnect.Brokerages.GDAX.Messages.Order)", file="Isolator.cs"];
m19_57 [label="order.Status == Open || order.Status == Pending || order.Status == Active", span="144-144", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderStatus(QuantConnect.Brokerages.GDAX.Messages.Order)", file="Isolator.cs"];
m19_59 [label="order.Status == Done || order.Status == Settled", span="148-148", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderStatus(QuantConnect.Brokerages.GDAX.Messages.Order)", file="Isolator.cs"];
m19_56 [label="return Orders.OrderStatus.PartiallyFilled;", span="142-142", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderStatus(QuantConnect.Brokerages.GDAX.Messages.Order)", file="Isolator.cs"];
m19_58 [label="return Orders.OrderStatus.Submitted;", span="146-146", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderStatus(QuantConnect.Brokerages.GDAX.Messages.Order)", file="Isolator.cs"];
m19_60 [label="return Orders.OrderStatus.Filled;", span="150-150", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderStatus(QuantConnect.Brokerages.GDAX.Messages.Order)", file="Isolator.cs"];
m19_61 [label="return Orders.OrderStatus.None;", span="153-153", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderStatus(QuantConnect.Brokerages.GDAX.Messages.Order)", file="Isolator.cs"];
m19_62 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderStatus(QuantConnect.Brokerages.GDAX.Messages.Order)", span="138-138", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderStatus(QuantConnect.Brokerages.GDAX.Messages.Order)", file="Isolator.cs"];
m19_32 [label="Entry System.Security.Cryptography.HMACSHA256.HMACSHA256(byte[])", span="0-0", cluster="System.Security.Cryptography.HMACSHA256.HMACSHA256(byte[])", file="Isolator.cs"];
m19_11 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="Isolator.cs"];
m19_17 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", span="81-81", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="Isolator.cs"];
m19_18 [label="var token = new AuthenticationToken\r\n            {\r\n                Key = ApiKey,\r\n                Passphrase = _passPhrase,\r\n                //todo: query time server to correct for time skew\r\n                Timestamp = Time.DateTimeToUnixTimeStamp(DateTime.UtcNow).ToString(System.Globalization.CultureInfo.InvariantCulture)\r\n            }", span="83-89", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="Isolator.cs"];
m19_20 [label="var prehash = token.Timestamp + method + url + body", span="92-92", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="Isolator.cs"];
m19_19 [label="byte[] data = Convert.FromBase64String(ApiSecret)", span="91-91", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="Isolator.cs"];
m19_24 [label="token.Signature = Convert.ToBase64String(hash)", span="98-98", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="Isolator.cs"];
m19_25 [label="return token;", span="101-101", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="Isolator.cs"];
m19_22 [label="var hmac = new HMACSHA256(data)", span="95-95", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="Isolator.cs"];
m19_21 [label="byte[] bytes = Encoding.UTF8.GetBytes(prehash)", span="94-94", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="Isolator.cs"];
m19_23 [label="byte[] hash = hmac.ComputeHash(bytes)", span="97-97", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="Isolator.cs"];
m19_26 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", span="81-81", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="Isolator.cs"];
m19_9 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="Isolator.cs"];
m19_14 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="Isolator.cs"];
m19_15 [label="b.Type == ParameterType.RequestBody", span="63-63", cluster="lambda expression", file="Isolator.cs"];
m19_16 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="Isolator.cs"];
m19_53 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="Isolator.cs"];
m19_12 [label="Entry Unk.GetAuthenticationToken", span="", cluster="Unk.GetAuthenticationToken", file="Isolator.cs"];
m19_35 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="104-104", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Isolator.cs"];
m19_36 [label="orderType == Orders.OrderType.Limit || orderType == Orders.OrderType.Market", span="106-106", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Isolator.cs"];
m19_37 [label="return orderType.ToString().ToLower();", span="108-108", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Isolator.cs"];
m19_38 [label="orderType == Orders.OrderType.StopMarket", span="110-110", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Isolator.cs"];
m19_40 [label="throw new Exception(''Unsupported order type:'' + orderType.ToString());", span="115-115", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Isolator.cs"];
m19_39 [label="return ''stop'';", span="112-112", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Isolator.cs"];
m19_41 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="104-104", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Isolator.cs"];
m19_10 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="Isolator.cs"];
m19_44 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="Isolator.cs"];
m19_49 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Isolator.cs"];
m19_43 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="Isolator.cs"];
m19_13 [label="Entry Unk.AddHeader", span="", cluster="Unk.AddHeader", file="Isolator.cs"];
m19_34 [label="Entry System.Convert.ToBase64String(byte[])", span="0-0", cluster="System.Convert.ToBase64String(byte[])", file="Isolator.cs"];
m19_27 [label="Entry QuantConnect.Brokerages.GDAX.AuthenticationToken.AuthenticationToken()", span="19-19", cluster="QuantConnect.Brokerages.GDAX.AuthenticationToken.AuthenticationToken()", file="Isolator.cs"];
m19_42 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="Isolator.cs"];
m19_48 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="Isolator.cs"];
m19_31 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="Isolator.cs"];
m19_28 [label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="148-148", cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Isolator.cs"];
m19_50 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="Isolator.cs"];
m19_51 [label="return symbol.Value.Substring(0, 3).ToLower() + ''-'' + symbol.Value.Substring(3, 3).ToLower();", span="135-135", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="Isolator.cs"];
m19_52 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="Isolator.cs"];
m19_30 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="Isolator.cs"];
m19_45 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", span="123-123", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", file="Isolator.cs"];
m19_46 [label="return Symbol.Create(productId.Replace(''-'', ''''), SecurityType.Forex, Market.GDAX);", span="125-125", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", file="Isolator.cs"];
m19_47 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", span="123-123", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", file="Isolator.cs"];
m19_29 [label="Entry double.ToString(System.IFormatProvider)", span="0-0", cluster="double.ToString(System.IFormatProvider)", file="Isolator.cs"];
m19_33 [label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", span="0-0", cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", file="Isolator.cs"];
m19_0 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(IRestRequest)", span="61-61", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(IRestRequest)", file="Isolator.cs"];
m19_1 [label="var body = request.Parameters.SingleOrDefault(b => b.Type == ParameterType.RequestBody)", span="63-63", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(IRestRequest)", file="Isolator.cs"];
m19_2 [label="var token = GetAuthenticationToken(body == null ? '''' : body.Value.ToString(), request.Method.ToString().ToUpper(), request.Resource)", span="64-64", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(IRestRequest)", file="Isolator.cs"];
m19_3 [label="request.AddHeader(SignHeader, token.Signature)", span="66-66", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(IRestRequest)", file="Isolator.cs"];
m19_4 [label="request.AddHeader(KeyHeader, ApiKey)", span="67-67", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(IRestRequest)", file="Isolator.cs"];
m19_5 [label="request.AddHeader(TimeHeader, token.Timestamp)", span="68-68", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(IRestRequest)", file="Isolator.cs"];
m19_6 [label="request.AddHeader(PassHeader, _passPhrase)", span="69-69", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(IRestRequest)", file="Isolator.cs"];
m19_7 [label="return token;", span="71-71", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(IRestRequest)", file="Isolator.cs"];
m19_8 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(IRestRequest)", span="61-61", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(IRestRequest)", file="Isolator.cs"];
m19_63 [label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span="", file="Isolator.cs"];
m20_43 [label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101", cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="LeanEngineAlgorithmHandlers.cs"];
m20_48 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="LeanEngineAlgorithmHandlers.cs"];
m20_44 [label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", span="221-221", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="LeanEngineAlgorithmHandlers.cs"];
m20_45 [label="Setup.Dispose()", span="223-223", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="LeanEngineAlgorithmHandlers.cs"];
m20_46 [label="CommandQueue.Dispose()", span="224-224", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="LeanEngineAlgorithmHandlers.cs"];
m20_47 [label="Exit QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", span="221-221", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="LeanEngineAlgorithmHandlers.cs"];
m20_29 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="LeanEngineAlgorithmHandlers.cs"];
m20_30 [label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="192-192", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs"];
m20_31 [label="var setupHandlerTypeName = Config.Get(''setup-handler'', ''ConsoleSetupHandler'')", span="194-194", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs"];
m20_40 [label="return new LeanEngineAlgorithmHandlers(\r\n                composer.GetExportedValueByTypeName<IResultHandler>(resultHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<ISetupHandler>(setupHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<IDataFeed>(dataFeedHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<ITransactionHandler>(transactionHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<IRealTimeHandler>(realTimeHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<ICommandQueueHandler>(commandQueueHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<IMapFileProvider>(mapFileProviderTypeName),\r\n                composer.GetExportedValueByTypeName<IFactorFileProvider>(factorFileProviderTypeName),\r\n                composer.GetExportedValueByTypeName<IDataProvider>(fileProviderTypeName)\r\n                );", span="204-214", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", color=red, community=0, file="LeanEngineAlgorithmHandlers.cs"];
m20_32 [label="var transactionHandlerTypeName = Config.Get(''transaction-handler'', ''BacktestingTransactionHandler'')", span="195-195", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs"];
m20_33 [label="var realTimeHandlerTypeName = Config.Get(''real-time-handler'', ''BacktestingRealTimeHandler'')", span="196-196", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs"];
m20_34 [label="var dataFeedHandlerTypeName = Config.Get(''data-feed-handler'', ''FileSystemDataFeed'')", span="197-197", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs"];
m20_35 [label="var resultHandlerTypeName = Config.Get(''result-handler'', ''BacktestingResultHandler'')", span="198-198", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs"];
m20_36 [label="var commandQueueHandlerTypeName = Config.Get(''command-queue-handler'', ''EmptyCommandQueueHandler'')", span="199-199", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs"];
m20_37 [label="var mapFileProviderTypeName = Config.Get(''map-file-provider'', ''LocalDiskMapFileProvider'')", span="200-200", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs"];
m20_38 [label="var factorFileProviderTypeName = Config.Get(''factor-file-provider'', ''LocalDiskFactorFileProvider'')", span="201-201", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs"];
m20_39 [label="var fileProviderTypeName = Config.Get(''data-file-provider'', ''DefaultDataProvider'')", span="202-202", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", color=red, community=0, file="LeanEngineAlgorithmHandlers.cs"];
m20_41 [label="Exit QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="192-192", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs"];
m20_42 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="LeanEngineAlgorithmHandlers.cs"];
m20_0 [label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="128-128", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_1 [label="results == null", span="139-139", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_3 [label="setup == null", span="143-143", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_5 [label="dataFeed == null", span="147-147", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_7 [label="transactions == null", span="151-151", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_9 [label="realTime == null", span="155-155", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_11 [label="commandQueue == null", span="159-159", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_13 [label="mapFileProvider == null", span="163-163", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_15 [label="factorFileProvider == null", span="167-167", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_17 [label="dataProvider == null", span="171-171", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_19 [label="_results = results", span="175-175", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_20 [label="_setup = setup", span="176-176", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_21 [label="_dataFeed = dataFeed", span="177-177", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_22 [label="_transactions = transactions", span="178-178", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_23 [label="_realTime = realTime", span="179-179", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_24 [label="_commandQueue = commandQueue", span="180-180", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_25 [label="_mapFileProvider = mapFileProvider", span="181-181", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_26 [label="_factorFileProvider = factorFileProvider", span="182-182", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_27 [label="_dataProvider = dataProvider", span="183-183", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_2 [label="throw new ArgumentNullException(''results'');", span="141-141", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_4 [label="throw new ArgumentNullException(''setup'');", span="145-145", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_6 [label="throw new ArgumentNullException(''dataFeed'');", span="149-149", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_8 [label="throw new ArgumentNullException(''transactions'');", span="153-153", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_10 [label="throw new ArgumentNullException(''realTime'');", span="157-157", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_12 [label="throw new ArgumentNullException(''commandQueue'');", span="161-161", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_14 [label="throw new ArgumentNullException(''mapFileProvider'');", span="165-165", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_16 [label="throw new ArgumentNullException(''factorFileProvider'');", span="169-169", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_18 [label="throw new ArgumentNullException(''dataProvider'');", span="173-173", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_28 [label="Exit QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="128-128", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="LeanEngineAlgorithmHandlers.cs"];
m20_49 [label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", span="", file="LeanEngineAlgorithmHandlers.cs"];
m22_37 [label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230", cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="LiveTradingResultHandler.cs"];
m22_9 [label="Entry QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="81-81", cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LiveTradingResultHandler.cs"];
m22_10 [label="Quantity < 0", span="84-84", cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LiveTradingResultHandler.cs"];
m22_11 [label="return Quantity*Math.Max(LimitPrice, security.Price);", span="86-86", cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LiveTradingResultHandler.cs"];
m22_13 [label="return Quantity*Math.Min(LimitPrice, security.Price);", span="92-92", cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LiveTradingResultHandler.cs"];
m22_12 [label="Quantity > 0", span="90-90", cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LiveTradingResultHandler.cs"];
m22_14 [label="return 0m;", span="95-95", cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LiveTradingResultHandler.cs"];
m22_15 [label="Exit QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="81-81", cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LiveTradingResultHandler.cs"];
m22_31 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="LiveTradingResultHandler.cs"];
m22_16 [label="Entry System.Math.Max(decimal, decimal)", span="0-0", cluster="System.Math.Max(decimal, decimal)", file="LiveTradingResultHandler.cs"];
m22_32 [label="Entry QuantConnect.Orders.StopLimitOrder.Clone()", span="131-131", cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="LiveTradingResultHandler.cs"];
m22_33 [label="var order = new StopLimitOrder {StopPrice = StopPrice, LimitPrice = LimitPrice}", span="133-133", cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="LiveTradingResultHandler.cs"];
m22_34 [label="CopyTo(order)", span="134-134", cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="LiveTradingResultHandler.cs"];
m22_35 [label="return order;", span="135-135", cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="LiveTradingResultHandler.cs"];
m22_36 [label="Exit QuantConnect.Orders.StopLimitOrder.Clone()", span="131-131", cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="LiveTradingResultHandler.cs"];
m22_29 [label="Entry QuantConnect.Orders.Order.ToString()", span="215-215", cluster="QuantConnect.Orders.Order.ToString()", file="LiveTradingResultHandler.cs"];
m22_17 [label="Entry System.Math.Min(decimal, decimal)", span="0-0", cluster="System.Math.Min(decimal, decimal)", file="LiveTradingResultHandler.cs"];
m22_25 [label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192", cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LiveTradingResultHandler.cs"];
m22_0 [label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="LiveTradingResultHandler.cs"];
m22_1 [label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="LiveTradingResultHandler.cs"];
m22_2 [label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="64-64", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="LiveTradingResultHandler.cs"];
m22_3 [label="StopPrice = stopPrice", span="67-67", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="LiveTradingResultHandler.cs"];
m22_4 [label="LimitPrice = limitPrice", span="68-68", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="LiveTradingResultHandler.cs"];
m22_5 [label="tag == ''''", span="70-70", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="LiveTradingResultHandler.cs"];
m22_6 [label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'') + '' Limit Price: '' + limitPrice.ToString(''C'')", span="73-73", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="LiveTradingResultHandler.cs"];
m22_7 [label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="64-64", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="LiveTradingResultHandler.cs"];
m22_26 [label="Entry QuantConnect.Orders.StopLimitOrder.ToString()", span="122-122", cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="LiveTradingResultHandler.cs"];
m22_27 [label="return string.Format(''{0} at stop {1} limit {2}'', base.ToString(), StopPrice.SmartRounding(), LimitPrice.SmartRounding());", span="124-124", cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="LiveTradingResultHandler.cs"];
m22_28 [label="Exit QuantConnect.Orders.StopLimitOrder.ToString()", span="122-122", cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="LiveTradingResultHandler.cs"];
m22_18 [label="Entry QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="102-102", cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LiveTradingResultHandler.cs"];
m22_19 [label="base.ApplyUpdateOrderRequest(request)", span="104-104", cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LiveTradingResultHandler.cs"];
m22_20 [label="request.StopPrice.HasValue", span="105-105", cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LiveTradingResultHandler.cs"];
m22_21 [label="StopPrice = request.StopPrice.Value", span="107-107", cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LiveTradingResultHandler.cs"];
m22_22 [label="request.LimitPrice.HasValue", span="109-109", cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LiveTradingResultHandler.cs"];
m22_23 [label="LimitPrice = request.LimitPrice.Value", span="111-111", cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LiveTradingResultHandler.cs"];
m22_24 [label="Exit QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="102-102", cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LiveTradingResultHandler.cs"];
m22_8 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="LiveTradingResultHandler.cs"];
m22_30 [label="Entry decimal.SmartRounding()", span="206-206", cluster="decimal.SmartRounding()", file="LiveTradingResultHandler.cs"];
m22_38 [label="QuantConnect.Orders.StopLimitOrder", span="", file="LiveTradingResultHandler.cs"];
m23_41 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="Loader.cs"];
m23_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1439-1439", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="Loader.cs"];
m23_13 [label="Entry QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="326-326", cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="Loader.cs"];
m23_55 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="Loader.cs"];
m23_15 [label="Entry lambda expression", span="44-46", cluster="lambda expression", file="Loader.cs"];
m23_16 [label="u.IncludeWeeklys()\r\n                       .Strikes(-2, +2)\r\n                       .Expiration(TimeSpan.Zero, TimeSpan.FromDays(365 * 2))", span="44-46", cluster="lambda expression", file="Loader.cs"];
m23_17 [label="Exit lambda expression", span="44-46", cluster="lambda expression", file="Loader.cs"];
m23_49 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="Loader.cs"];
m23_52 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="Loader.cs"];
m23_50 [label="x.Expiry", span="66-66", cluster="lambda expression", file="Loader.cs"];
m23_51 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="Loader.cs"];
m23_53 [label="x.Right == OptionRight.Call && x.Strike == 650", span="67-67", cluster="lambda expression", file="Loader.cs"];
m23_54 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="Loader.cs"];
m23_56 [label="x.Value.Holdings.AbsoluteQuantity != 0", span="88-88", cluster="lambda expression", file="Loader.cs"];
m23_57 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="Loader.cs"];
m23_47 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="Loader.cs"];
m23_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1151-1151", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="Loader.cs"];
m23_21 [label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="271-271", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="Loader.cs"];
m23_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="1043-1043", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="Loader.cs"];
m23_19 [label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="199-199", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="Loader.cs"];
m23_58 [label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="106-106", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Loader.cs"];
m23_59 [label="Log(orderEvent.ToString())", span="108-108", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Loader.cs"];
m23_60 [label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="106-106", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Loader.cs"];
m23_42 [label="Entry Unk.Skip", span="", cluster="Unk.Skip", file="Loader.cs"];
m23_20 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="Loader.cs"];
m23_43 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="Loader.cs"];
m23_62 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1737-1737", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="Loader.cs"];
m23_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1176-1176", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="Loader.cs"];
m23_39 [label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189", cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="Loader.cs"];
m23_40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Loader.cs"];
m23_45 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Loader.cs"];
m23_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1100-1100", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="Loader.cs"];
m23_0 [label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Loader.cs"];
m23_1 [label="SetStartDate(2014, 06, 06)", span="36-36", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Loader.cs"];
m23_2 [label="SetEndDate(2014, 06, 09)", span="37-37", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Loader.cs"];
m23_3 [label="SetCash(1000000)", span="38-38", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Loader.cs"];
m23_4 [label="var option = AddOption(''AAPL'')", span="40-40", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Loader.cs"];
m23_5 [label="_optionSymbol = option.Symbol", span="41-41", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Loader.cs"];
m23_6 [label="option.SetFilter(u => u.IncludeWeeklys()\r\n                       .Strikes(-2, +2)\r\n                       .Expiration(TimeSpan.Zero, TimeSpan.FromDays(365 * 2)))", span="44-46", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Loader.cs"];
m23_7 [label="SetBenchmark(''AAPL'')", span="49-49", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Loader.cs"];
m23_8 [label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="Loader.cs"];
m23_44 [label="Entry Unk.Buy", span="", cluster="Unk.Buy", file="Loader.cs"];
m23_48 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="Loader.cs"];
m23_46 [label="Entry Unk.First", span="", cluster="Unk.First", file="Loader.cs"];
m23_22 [label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="56-56", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_23 [label="!Portfolio.Invested", span="58-58", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_26 [label="slice.OptionChains.TryGetValue(_optionSymbol, out chain)", span="63-63", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_24 [label="Time.Hour > 9 && Time.Minute > 0", span="60-60", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_30 [label="Time.Day > 6 && Time.Hour > 14 && Time.Minute > 0", span="80-80", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_25 [label="OptionChain chain", span="62-62", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_32 [label="Portfolio.Invested", span="86-86", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_27 [label="var contract =\r\n                            chain.OrderBy(x => x.Expiry)\r\n                            .Where(x => x.Right == OptionRight.Call && x.Strike == 650)\r\n                            .Skip(1)\r\n                            .FirstOrDefault()", span="65-69", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_28 [label="contract != null", span="71-71", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_29 [label="Buy(contract.Symbol, 1)", span="73-73", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_31 [label="Liquidate()", span="82-82", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_33 [label="var holdings = Portfolio.Securities.Where(x => x.Value.Holdings.AbsoluteQuantity != 0).First().Value.Holdings.AbsoluteQuantity", span="88-88", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_34 [label="Time.Day == 6 && holdings != 1", span="90-90", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_35 [label="throw new Exception(string.Format(''Expected position quantity of 1 but was {0}'', holdings));", span="92-92", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_36 [label="Time.Day == 9 && holdings != 7", span="94-94", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_37 [label="throw new Exception(string.Format(''Expected position quantity of 7 but was {0}'', holdings));", span="96-96", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_38 [label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="56-56", cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="Loader.cs"];
m23_61 [label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="169-169", cluster="QuantConnect.Orders.OrderEvent.ToString()", file="Loader.cs"];
m23_18 [label="Entry QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", span="98-98", cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="Loader.cs"];
m23_63 [label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", span="", file="Loader.cs"];
m24_35 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", span="122-122", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", file="LocalFileSubscriptionStreamReader.cs"];
m24_36 [label="return _streamReader.ReadLine();", span="124-124", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", file="LocalFileSubscriptionStreamReader.cs"];
m24_37 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", span="122-122", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", file="LocalFileSubscriptionStreamReader.cs"];
m24_31 [label="Entry Unk.Compare", span="", cluster="Unk.Compare", file="LocalFileSubscriptionStreamReader.cs"];
m24_38 [label="Entry System.IO.StreamReader.ReadLine()", span="0-0", cluster="System.IO.StreamReader.ReadLine()", file="LocalFileSubscriptionStreamReader.cs"];
m24_39 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", span="130-130", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs"];
m24_40 [label="_streamReader != null", span="132-132", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs"];
m24_41 [label="_streamReader.Dispose()", span="134-134", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs"];
m24_42 [label="_streamReader = null", span="135-135", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs"];
m24_43 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", span="130-130", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs"];
m24_44 [label="Entry System.IO.TextReader.Dispose()", span="0-0", cluster="System.IO.TextReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs"];
m24_24 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="LocalFileSubscriptionStreamReader.cs"];
m24_15 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(ZipFile, string)", span="79-79", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(ZipFile, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_16 [label="_zipFile = zipFile", span="81-81", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(ZipFile, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_17 [label="var entry = _zipFile.Entries.FirstOrDefault(x => entryName == null || string.Compare(x.FileName, entryName, StringComparison.OrdinalIgnoreCase) == 0)", span="82-82", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(ZipFile, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_18 [label="entry != null", span="83-83", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(ZipFile, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_20 [label="entry.OpenReader().CopyTo(stream)", span="86-86", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(ZipFile, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_19 [label="var stream = new MemoryStream()", span="85-85", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(ZipFile, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_21 [label="stream.Position = 0", span="87-87", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(ZipFile, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_22 [label="_streamReader = new StreamReader(stream)", span="88-88", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(ZipFile, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_23 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(ZipFile, string)", span="79-79", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(ZipFile, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_26 [label="Entry Unk.OpenReader", span="", cluster="Unk.OpenReader", file="LocalFileSubscriptionStreamReader.cs"];
m24_7 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, long)", span="58-58", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, long)", file="LocalFileSubscriptionStreamReader.cs"];
m24_8 [label="var stream = dataCacheProvider.Fetch(source)", span="60-60", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, long)", file="LocalFileSubscriptionStreamReader.cs"];
m24_11 [label="startingPosition != 0", span="66-66", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, long)", file="LocalFileSubscriptionStreamReader.cs"];
m24_12 [label="_streamReader.BaseStream.Seek(startingPosition, SeekOrigin.Begin)", span="68-68", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, long)", file="LocalFileSubscriptionStreamReader.cs"];
m24_9 [label="stream != null", span="62-62", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, long)", file="LocalFileSubscriptionStreamReader.cs"];
m24_10 [label="_streamReader = new StreamReader(stream)", span="64-64", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, long)", file="LocalFileSubscriptionStreamReader.cs"];
m24_13 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, long)", span="58-58", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, long)", file="LocalFileSubscriptionStreamReader.cs"];
m24_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="41-41", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_1 [label="var stream = dataCacheProvider.Fetch(source)", span="43-43", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_2 [label="stream != null", span="45-45", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_3 [label="_streamReader = new StreamReader(stream)", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_4 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="41-41", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_27 [label="Entry Unk.CopyTo", span="", cluster="Unk.CopyTo", file="LocalFileSubscriptionStreamReader.cs"];
m24_14 [label="Entry System.IO.Stream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.Stream.Seek(long, System.IO.SeekOrigin)", file="LocalFileSubscriptionStreamReader.cs"];
m24_5 [label="Entry QuantConnect.Interfaces.IDataCacheProvider.Fetch(string)", span="32-32", cluster="QuantConnect.Interfaces.IDataCacheProvider.Fetch(string)", file="LocalFileSubscriptionStreamReader.cs"];
m24_25 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="LocalFileSubscriptionStreamReader.cs"];
m24_6 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="LocalFileSubscriptionStreamReader.cs"];
m24_32 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="LocalFileSubscriptionStreamReader.cs"];
m24_29 [label="entryName == null || string.Compare(x.FileName, entryName, StringComparison.OrdinalIgnoreCase) == 0", span="82-82", cluster="lambda expression", file="LocalFileSubscriptionStreamReader.cs"];
m24_28 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="LocalFileSubscriptionStreamReader.cs"];
m24_30 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="LocalFileSubscriptionStreamReader.cs"];
m24_33 [label="x.FileName", span="99-99", cluster="lambda expression", file="LocalFileSubscriptionStreamReader.cs"];
m24_34 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="LocalFileSubscriptionStreamReader.cs"];
m24_45 [label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader", span="", file="LocalFileSubscriptionStreamReader.cs"];
m24_46 [label=string, span="", file="LocalFileSubscriptionStreamReader.cs"];
m25_12 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", span="122-122", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_13 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_9 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="18-18", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_7 [label="Exit QuantConnect.Tests.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReaderTests.ReadsFromSpecificZipEntry()", span="28-28", cluster="QuantConnect.Tests.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReaderTests.ReadsFromSpecificZipEntry()", file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_0 [label="Entry QuantConnect.Tests.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReaderTests.ReadsFromSpecificZipEntry()", span="28-28", cluster="QuantConnect.Tests.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReaderTests.ReadsFromSpecificZipEntry()", file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_1 [label="var source = Path.Combine(''TestData'', ''multizip.zip'')", span="30-30", cluster="QuantConnect.Tests.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReaderTests.ReadsFromSpecificZipEntry()", color=red, community=0, file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_2 [label="string entryName = ''multizip/three.txt''", span="31-31", cluster="QuantConnect.Tests.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReaderTests.ReadsFromSpecificZipEntry()", color=red, community=0, file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_4 [label="var reader = new LocalFileSubscriptionStreamReader(dataCacheProvider, source, entryName)", span="33-33", cluster="QuantConnect.Tests.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReaderTests.ReadsFromSpecificZipEntry()", color=red, community=0, file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_3 [label="var dataCacheProvider = new SingleEntryDataCacheProvider(new DefaultDataProvider())", span="32-32", cluster="QuantConnect.Tests.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReaderTests.ReadsFromSpecificZipEntry()", color=red, community=0, file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_5 [label="var line = reader.ReadLine()", span="35-35", cluster="QuantConnect.Tests.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReaderTests.ReadsFromSpecificZipEntry()", color=red, community=0, file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_6 [label="Assert.AreEqual(''3'', line)", span="36-36", cluster="QuantConnect.Tests.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReaderTests.ReadsFromSpecificZipEntry()", color=red, community=0, file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_11 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="41-41", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_10 [label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", span="25-25", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", file="LocalFileSubscriptionStreamReaderTests.cs"];
m25_8 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="LocalFileSubscriptionStreamReaderTests.cs"];
m26_0 [label="Entry QuantConnect.Data.Fundamental.SecurityReference.SecurityReference()", span="282-282", cluster="QuantConnect.Data.Fundamental.SecurityReference.SecurityReference()", file="OandaBrokerage.HistoryProvider.cs"];
m26_1 [label="Exit QuantConnect.Data.Fundamental.SecurityReference.SecurityReference()", span="282-282", cluster="QuantConnect.Data.Fundamental.SecurityReference.SecurityReference()", file="OandaBrokerage.HistoryProvider.cs"];
m26_2 [label="Entry QuantConnect.Data.Fundamental.SecurityReference.UpdateValues(QuantConnect.Data.Fundamental.SecurityReference)", span="291-291", cluster="QuantConnect.Data.Fundamental.SecurityReference.UpdateValues(QuantConnect.Data.Fundamental.SecurityReference)", file="OandaBrokerage.HistoryProvider.cs"];
m26_3 [label="Exit QuantConnect.Data.Fundamental.SecurityReference.UpdateValues(QuantConnect.Data.Fundamental.SecurityReference)", span="291-291", cluster="QuantConnect.Data.Fundamental.SecurityReference.UpdateValues(QuantConnect.Data.Fundamental.SecurityReference)", file="OandaBrokerage.HistoryProvider.cs"];
m30_9 [label="Entry QuantConnect.Interfaces.IDataProvider.Fetch(string)", span="33-33", cluster="QuantConnect.Interfaces.IDataProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs"];
m30_2 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="18-18", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="SingleEntryDataCacheProvider.cs"];
m30_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="18-18", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="SingleEntryDataCacheProvider.cs"];
m30_1 [label="_dataProvider = dataProvider", span="20-20", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="SingleEntryDataCacheProvider.cs"];
m30_15 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Dispose()", span="51-51", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Dispose()", file="SingleEntryDataCacheProvider.cs"];
m30_14 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Dispose()", span="51-51", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Dispose()", file="SingleEntryDataCacheProvider.cs"];
m30_11 [label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="665-665", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="SingleEntryDataCacheProvider.cs"];
m30_13 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Store(string, byte[])", span="46-46", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Store(string, byte[])", file="SingleEntryDataCacheProvider.cs"];
m30_12 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Store(string, byte[])", span="46-46", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Store(string, byte[])", file="SingleEntryDataCacheProvider.cs"];
m30_8 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", span="28-28", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs"];
m30_3 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", span="28-28", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs"];
m30_4 [label="var stream = _dataProvider.Fetch(key)", span="30-30", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs"];
m30_5 [label="key.EndsWith(''.zip'') && stream != null", span="32-32", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs"];
m30_6 [label="return Compression.UnzipStream(stream);", span="35-35", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", color=red, community=0, file="SingleEntryDataCacheProvider.cs"];
m30_7 [label="return stream;", span="38-38", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs"];
m30_10 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="SingleEntryDataCacheProvider.cs"];
m30_16 [label="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider", span="", file="SingleEntryDataCacheProvider.cs"];
m31_4 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="101-101", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionDataReader.cs"];
m31_5 [label="Exit QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="101-101", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionDataReader.cs"];
m31_0 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="80-80", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SubscriptionDataReader.cs"];
m31_1 [label="Exit QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="80-80", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SubscriptionDataReader.cs"];
m31_2 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="89-89", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SubscriptionDataReader.cs"];
m31_3 [label="Exit QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="89-89", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SubscriptionDataReader.cs"];
m32_36 [label="return GenerateEquity(firstDate, symbol, market);", span="346-346", cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_187 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_197 [label="Entry QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="690-690", cluster="QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_198 [label="return !Equals(left, right);", span="692-692", cluster="QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_199 [label="Exit QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="690-690", cluster="QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_107 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_222 [label="Entry QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", span="737-737", cluster="QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_223 [label="return SecurityIdentifier.GetHashCode();", span="739-739", cluster="QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_224 [label="Exit QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", span="737-737", cluster="QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_192 [label="Entry ulong.GetHashCode()", span="0-0", cluster="ulong.GetHashCode()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_215 [label="Entry QuantConnect.SecurityIdentifier.SidBox.Equals(object)", span="731-731", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_216 [label="ReferenceEquals(null, obj)", span="733-733", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_218 [label="ReferenceEquals(this, obj)", span="734-734", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_220 [label="return obj is SidBox && Equals((SidBox)obj);", span="735-735", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_217 [label="return false;", span="733-733", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_219 [label="return true;", span="734-734", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_221 [label="Exit QuantConnect.SecurityIdentifier.SidBox.Equals(object)", span="731-731", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_0 [label="Entry QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", span="49-49", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_1 [label="SetStartDate(2013, 1, 1)", span="52-52", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_3 [label="SetCash(25000)", span="54-54", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_5 [label="AddData<Quandl>(_customSymbol)", span="60-60", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_6 [label="_indicators = new Indicators\r\n            {\r\n                BB = BB(_symbol, 20, 1, MovingAverageType.Simple, Resolution.Daily),\r\n                RSI = RSI(_symbol, 14, MovingAverageType.Simple, Resolution.Daily),\r\n                ATR = ATR(_symbol, 14, MovingAverageType.Simple, Resolution.Daily),\r\n                EMA = EMA(_symbol, 14, Resolution.Daily),\r\n                SMA = SMA(_symbol, 14, Resolution.Daily),\r\n                MACD = MACD(_symbol, 12, 26, 9, MovingAverageType.Simple, Resolution.Daily),\r\n                AROON = AROON(_symbol, 20, Resolution.Daily),\r\n                MOM = MOM(_symbol, 20, Resolution.Daily),\r\n                MOMP = MOMP(_symbol, 20, Resolution.Daily),\r\n                STD = STD(_symbol, 20, Resolution.Daily),\r\n                MIN = MIN(_symbol, 14, Resolution.Daily), // by default if the symbol is a tradebar type then it will be the min of the low property\r\n                MAX = MAX(_symbol, 14, Resolution.Daily)  // by default if the symbol is a tradebar type then it will be the max of the high property\r\n            }", span="63-77", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs", color=green, community=0];
m32_2 [label="SetEndDate(2014, 12, 31)", span="53-53", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_4 [label="AddSecurity(SecurityType.Equity, _symbol, Resolution.Daily)", span="57-57", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_7 [label="_selectorIndicators = new Indicators\r\n            {\r\n                BB = BB(_symbol, 20, 1, MovingAverageType.Simple, Resolution.Daily, Field.Low),\r\n                RSI = RSI(_symbol, 14, MovingAverageType.Simple, Resolution.Daily, Field.Low),\r\n                EMA = EMA(_symbol, 14, Resolution.Daily, Field.Low),\r\n                SMA = SMA(_symbol, 14, Resolution.Daily, Field.Low),\r\n                MACD = MACD(_symbol, 12, 26, 9, MovingAverageType.Simple, Resolution.Daily, Field.Low),\r\n                MOM = MOM(_symbol, 20, Resolution.Daily, Field.Low),\r\n                MOMP = MOMP(_symbol, 20, Resolution.Daily, Field.Low),\r\n                STD = STD(_symbol, 20, Resolution.Daily, Field.Low),\r\n                MIN = MIN(_symbol, 14, Resolution.Daily, Field.High), // this will find the 14 day min of the high property\r\n                MAX = MAX(_symbol, 14, Resolution.Daily, Field.Low),  // this will find the 14 day max of the low property\r\n\r\n                // ATR and AROON are special in that they accept a TradeBar instance instead of a decimal, we could easily project and/or transform the input TradeBar\r\n                // before it gets sent to the ATR/AROON indicator, here we use a function that will multiply the input trade bar by a factor of two\r\n                ATR = ATR(_symbol, 14, MovingAverageType.Simple, Resolution.Daily, SelectorDoubleTradeBar),\r\n                AROON = AROON(_symbol, 20, Resolution.Daily, SelectorDoubleTradeBar)\r\n            }", span="86-103", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_8 [label="_rsiCustom = RSI(_customSymbol, 14, MovingAverageType.Simple, Resolution.Daily)", span="106-106", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_12 [label="var btcClose = Identity(_customSymbol)", span="114-114", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_13 [label="_ratio = btcClose.Over(spyClose)", span="116-116", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_15 [label="Exit QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", span="49-49", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_16 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1154-1154", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_17 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1179-1179", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_18 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1103-1103", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_14 [label="PlotIndicator(''Ratio'', _ratio)", span="118-118", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1346-1346", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_80 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_84 [label="Entry System.DateTime.ToOADate()", span="0-0", cluster="System.DateTime.ToOADate()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_83 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_30 [label="var provider = Composer.Instance.GetExportedValueByTypeName<IMapFileProvider>(MapFileProviderTypeName)", span="338-338", cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_57 [label="Plot(''RSI'', _indicators.RSI)", span="161-161", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_58 [label="Plot(''RSI-BTC'', _rsiCustom)", span="164-164", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_59 [label="Plot(''ATR'', _indicators.ATR)", span="166-166", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_42 [label="_price = data[''SPY''].Close", span="137-137", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_170 [label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0", cluster="string.Split(char[], System.StringSplitOptions)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_188 [label="Entry QuantConnect.SecurityIdentifier.GetHashCode()", span="674-674", cluster="QuantConnect.SecurityIdentifier.GetHashCode()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_189 [label="return (_symbol.GetHashCode()*397) ^ _properties.GetHashCode();", span="676-676", cluster="QuantConnect.SecurityIdentifier.GetHashCode()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_190 [label="Exit QuantConnect.SecurityIdentifier.GetHashCode()", span="674-674", cluster="QuantConnect.SecurityIdentifier.GetHashCode()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_144 [label="Entry QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", span="586-586", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_145 [label="exception = null", span="588-588", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_147 [label="string.IsNullOrWhiteSpace(value)", span="591-591", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_149 [label="var sids = value.Split('|')", span="598-598", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_164 [label="Log.Error(''SecurityIdentifier.TryParseProperties(): Error parsing SecurityIdentifier: '{0}', Exception: {1}'', value, exception)", span="620-620", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_146 [label="identifier = Empty", span="589-589", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_160 [label="identifier = new SecurityIdentifier(symbol, props, identifier)", span="614-614", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_148 [label="return true;", span="593-593", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_150 [label="var i = sids.Length - 1", span="599-599", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_152 [label="var current = sids[i]", span="601-601", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_151 [label="i > -1", span="599-599", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_161 [label="i--", span="599-599", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_162 [label=Exception, span="617-617", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_166 [label="return true;", span="624-624", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_153 [label="var parts = current.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries)", span="602-602", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_154 [label="parts.Length != 2", span="603-603", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_157 [label="var symbol = parts[0]", span="609-609", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_158 [label="var otherData = parts[1]", span="610-610", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_155 [label="exception = new FormatException(''The string must be splittable on space into two parts.'')", span="605-605", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_156 [label="return false;", span="606-606", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_159 [label="var props = DecodeBase36(otherData)", span="611-611", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_163 [label="exception = error", span="619-619", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_165 [label="return false;", span="621-621", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_167 [label="Exit QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", span="586-586", cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_44 [label="int quantity = (int)Math.Floor(Portfolio.Cash / data[_symbol].Close)", span="141-141", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_28 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="158-158", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_29 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="792-792", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_31 [label="Entry QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1012-1012", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_32 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="763-763", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_37 [label="return GenerateEquity(DefaultDate, symbol, market);", span="350-350", cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_33 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="666-666", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_34 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="497-497", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_35 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="214-214", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_38 [label="Exit QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", span="334-334", cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_52 [label="return Generate(DefaultDate, symbol, SecurityType.Base, market);", span="375-375", cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_53 [label="Exit QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373", cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_55 [label="return Generate(DefaultDate, symbol, SecurityType.Forex, market);", span="386-386", cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_56 [label="Exit QuantConnect.SecurityIdentifier.GenerateForex(string, string)", span="384-384", cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_60 [label="(ulong)securityType >= SecurityTypeWidth || securityType < 0", span="413-413", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_61 [label="throw new ArgumentOutOfRangeException(''securityType'', ''securityType must be between 0 and 99'');", span="415-415", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_54 [label="Entry QuantConnect.SecurityIdentifier.GenerateForex(string, string)", span="384-384", cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_62 [label="(int)optionRight > 1 || optionRight < 0", span="417-417", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_176 [label="Entry QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", span="646-646", cluster="QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_177 [label="return _properties == other._properties \r\n                && _symbol == other._symbol \r\n                && _underlying == other._underlying;", span="648-650", cluster="QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_178 [label="Exit QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", span="646-646", cluster="QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_172 [label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131", cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_20 [label="Entry QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", span="721-721", cluster="QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_25 [label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="360-360", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_26 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="997-997", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_27 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="633-633", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_168 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_46 [label="Debug(''Purchased SPY on '' + Time.ToShortDateString())", span="147-147", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_47 [label="Exit QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="133-133", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_48 [label="Entry System.Math.Floor(decimal)", span="0-0", cluster="System.Math.Floor(decimal)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_109 [label="Entry string.String(char[])", span="0-0", cluster="string.String(char[])", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_41 [label="return;", span="135-135", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_225 [label="Entry QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="741-741", cluster="QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_226 [label="return Equals(left, right);", span="743-743", cluster="QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_227 [label="Exit QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="741-741", cluster="QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_173 [label="Entry QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", span="630-630", cluster="QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_174 [label="return (_properties/offset)%width;", span="632-632", cluster="QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_175 [label="Exit QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", span="630-630", cluster="QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_51 [label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373", cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_49 [label="return Generate(date, symbol, SecurityType.Equity, market);", span="364-364", cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_10 [label="Entry string.IndexOfAny(char[])", span="0-0", cluster="string.IndexOfAny(char[])", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_11 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_43 [label="!Portfolio.HoldStock", span="139-139", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_21 [label="Entry QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="302-302", cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_24 [label="Entry QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", span="404-404", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_136 [label="Entry QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", span="564-564", cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_137 [label="Exception exception", span="566-566", cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_138 [label="return TryParse(value, out identifier, out exception);", span="567-567", cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_139 [label="Exit QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", span="564-564", cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_50 [label="Exit QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", span="362-362", cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_63 [label="throw new ArgumentOutOfRangeException(''optionRight'', ''optionType must be either 0 or 1'');", span="419-419", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_45 [label="Order(_symbol, quantity)", span="144-144", cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_110 [label="Entry System.Collections.Generic.Stack<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.Stack<T>.ToArray()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_98 [label="Entry QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", span="471-471", cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_99 [label="var stack = new Stack<char>()", span="473-473", cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_100 [label="data != 0", span="474-474", cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_101 [label="var value = data % 36", span="476-476", cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_104 [label="data /= 36", span="482-482", cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_103 [label="stack.Push(c)", span="481-481", cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_105 [label="return new string(stack.ToArray());", span="484-484", cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_102 [label="var c = value < 10\r\n                    ? (char)(value + '0')\r\n                    : (char)(value - 10 + 'A')", span="477-479", cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_106 [label="Exit QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", span="471-471", cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_127 [label="Entry Unk.Pow", span="", cluster="Unk.Pow", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_186 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_193 [label="Entry QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="682-682", cluster="QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_194 [label="return Equals(left, right);", span="684-684", cluster="QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_195 [label="Exit QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="682-682", cluster="QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_85 [label="Entry QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", span="491-491", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_111 [label="var str = strike", span="493-493", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_112 [label="strike == 0", span="495-495", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_115 [label="strike *= StrikeDefaultScaleExpanded", span="502-502", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_121 [label="throw new ArgumentException(''The specified strike price's precision is too high: '' + str);", span="513-513", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_113 [label="scale = 0", span="497-497", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_114 [label="return 0;", span="498-498", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_116 [label="scale = 0", span="504-504", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_117 [label="strike % 10 == 0", span="505-505", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_118 [label="strike /= 10", span="507-507", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_120 [label="strike >= 1000000", span="511-511", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_122 [label="return (ulong)strike;", span="516-516", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_119 [label="scale++", span="508-508", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_123 [label="Exit QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", span="491-491", cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_23 [label="Exit QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="302-302", cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_124 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_179 [label="Entry QuantConnect.SecurityIdentifier.Equals(object)", span="660-660", cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_180 [label="ReferenceEquals(null, obj)", span="662-662", cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_182 [label="obj.GetType() != GetType()", span="663-663", cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_184 [label="return Equals((SecurityIdentifier)obj);", span="664-664", cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_181 [label="return false;", span="662-662", cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_183 [label="return false;", span="663-663", cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_185 [label="Exit QuantConnect.SecurityIdentifier.Equals(object)", span="660-660", cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_196 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_64 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="237-237", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_65 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="414-414", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_69 [label="var days = (ulong)date.ToOADate() * DaysOffset", span="433-433", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_72 [label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", span="", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_74 [label="var style = (ulong)optionStyle * OptionStyleOffset", span="439-439", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_75 [label="var putcall = (ulong)optionRight * PutCallOffset", span="440-440", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_76 [label="var otherData = putcall + days + style + strk + strikeScale + marketCode + (ulong)securityType", span="442-442", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_77 [label="return new SecurityIdentifier(symbol, otherData, underlying ?? Empty);", span="444-444", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_66 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="428-428", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_68 [label="throw new ArgumentOutOfRangeException(''market'', string.Format(''The specified market wasn't found in the markets lookup. Requested: {0}. '' +\r\n                    ''You can add markets by calling QuantConnect.Market.AddMarket(string,ushort)'', market));", span="429-430", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_67 [label="!marketIdentifier.HasValue", span="427-427", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_70 [label="var marketCode = (ulong)marketIdentifier * MarketOffset", span="434-434", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_71 [label="ulong strikeScale", span="436-436", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_73 [label="strikeScale *= StrikeScaleOffset", span="438-438", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_78 [label="Exit QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", span="404-404", cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_191 [label="Entry string.GetHashCode()", span="0-0", cluster="string.GetHashCode()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_86 [label="Entry QuantConnect.SecurityIdentifier.DecodeBase36(string)", span="450-450", cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_87 [label="int pos = 0", span="452-452", cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_89 [label="int i = symbol.Length - 1", span="454-454", cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_91 [label="var c = symbol[i]", span="456-456", cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_88 [label="ulong result = 0", span="453-453", cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_93 [label="result += value * Pow(36, pos++)", span="463-463", cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_95 [label="return result;", span="465-465", cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_90 [label="i > -1", span="454-454", cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_94 [label="i--", span="454-454", cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_92 [label="var value = (uint)(c <= 57\r\n                    ? c - '0'\r\n                    : c - 'A' + 10)", span="459-461", cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_96 [label="Exit QuantConnect.SecurityIdentifier.DecodeBase36(string)", span="450-450", cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_79 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_108 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_39 [label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101", cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_40 [label="Entry QuantConnect.Interfaces.IMapFileProvider.Get(string)", span="33-33", cluster="QuantConnect.Interfaces.IMapFileProvider.Get(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_228 [label="Entry QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="745-745", cluster="QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_229 [label="return !Equals(left, right);", span="747-747", cluster="QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_230 [label="Exit QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="745-745", cluster="QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_200 [label="Entry QuantConnect.SecurityIdentifier.ToString()", span="702-702", cluster="QuantConnect.SecurityIdentifier.ToString()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_201 [label="var props = EncodeBase36(_properties)", span="704-704", cluster="QuantConnect.SecurityIdentifier.ToString()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_202 [label=HasUnderlying, span="705-705", cluster="QuantConnect.SecurityIdentifier.ToString()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_203 [label="return _symbol + ' ' + props + '|' + _underlying.SecurityIdentifier;", span="707-707", cluster="QuantConnect.SecurityIdentifier.ToString()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_204 [label="return _symbol + ' ' + props;", span="709-709", cluster="QuantConnect.SecurityIdentifier.ToString()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_205 [label="Exit QuantConnect.SecurityIdentifier.ToString()", span="702-702", cluster="QuantConnect.SecurityIdentifier.ToString()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_208 [label="Entry QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", span="725-725", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_209 [label="ReferenceEquals(null, other)", span="727-727", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_211 [label="ReferenceEquals(this, other)", span="728-728", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_213 [label="return SecurityIdentifier.Equals(other.SecurityIdentifier);", span="729-729", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_210 [label="return false;", span="727-727", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_212 [label="return true;", span="728-728", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_214 [label="Exit QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", span="725-725", cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_82 [label="Entry QuantConnect.Market.Encode(string)", span="162-162", cluster="QuantConnect.Market.Encode(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_171 [label="Entry System.FormatException.FormatException(string)", span="0-0", cluster="System.FormatException.FormatException(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_22 [label="Entry QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="208-208", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_135 [label="Entry QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", span="573-573", cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_140 [label="!TryParseProperties(value, out exception, out identifier)", span="575-575", cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_141 [label="return false;", span="577-577", cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_142 [label="return true;", span="580-580", cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_143 [label="Exit QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", span="573-573", cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_81 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_206 [label="SecurityIdentifier = securityIdentifier", span="723-723", cluster="QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_207 [label="Exit QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", span="721-721", cluster="QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_128 [label="Entry QuantConnect.SecurityIdentifier.Parse(string)", span="544-544", cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_129 [label="Exception exception", span="546-546", cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_131 [label="!TryParse(value, out identifier, out exception)", span="548-548", cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_130 [label="SecurityIdentifier identifier", span="547-547", cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_132 [label="throw exception;", span="550-550", cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_133 [label="return identifier;", span="553-553", cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_134 [label="Exit QuantConnect.SecurityIdentifier.Parse(string)", span="544-544", cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_97 [label="Entry QuantConnect.SecurityIdentifier.Pow(uint, int)", span="522-522", cluster="QuantConnect.SecurityIdentifier.Pow(uint, int)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_125 [label="return (ulong)BigInteger.Pow(x, pow);", span="525-525", cluster="QuantConnect.SecurityIdentifier.Pow(uint, int)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_126 [label="Exit QuantConnect.SecurityIdentifier.Pow(uint, int)", span="522-522", cluster="QuantConnect.SecurityIdentifier.Pow(uint, int)", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_231 [label="out QuantConnect.SecurityIdentifier", span="", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_232 [label="out QuantConnect.SecurityIdentifier", span="", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_233 [label="QuantConnect.SecurityIdentifier", span="", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_234 [label="ref QuantConnect.SecurityIdentifier", span="", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_235 [label="ref QuantConnect.SecurityIdentifier", span="", file="SubscriptionDataReaderHistoryProvider.cs"];
m32_236 [label="QuantConnect.SecurityIdentifier.SidBox", span="", file="SubscriptionDataReaderHistoryProvider.cs"];
m33_7 [label="return new ZipEntryNameSubscriptionDataSourceReader(dataProvider, dataCacheProvider, config, date, isLiveMode);", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataSourceReader.cs", color=red, community=0];
m33_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="37-37", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataSourceReader.cs"];
m33_1 [label="source.Format", span="39-39", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataSourceReader.cs"];
m33_3 [label="return new TextSubscriptionDataSourceReader(dataProvider, dataCacheProvider, config, date, isLiveMode);", span="42-42", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=red, community=0, file="SubscriptionDataSourceReader.cs"];
m33_5 [label="return new CollectionSubscriptionDataSourceReader(dataProvider, dataCacheProvider, config, date, isLiveMode);", span="45-45", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=red, community=0, file="SubscriptionDataSourceReader.cs"];
m33_8 [label="throw new NotImplementedException(''SubscriptionFactory.ForSource('' + source + '') has not been implemented yet.'');", span="51-51", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataSourceReader.cs"];
m33_2 [label="FileFormat.Csv", span="41-41", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataSourceReader.cs", color=green, community=0];
m33_4 [label="FileFormat.Collection", span="44-44", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataSourceReader.cs", color=green, community=0];
m33_6 [label="FileFormat.ZipEntryName", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataSourceReader.cs", color=green, community=0];
m33_9 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="37-37", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataSourceReader.cs"];
m33_10 [label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="67-67", cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataSourceReader.cs"];
m33_13 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="SubscriptionDataSourceReader.cs"];
m33_11 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="44-44", cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataSourceReader.cs"];
m33_12 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="49-49", cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataSourceReader.cs"];
m34_4 [label="Entry QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", span="65-65", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="TextSubscriptionDataSourceReader.cs"];
m34_5 [label="!IsReady", span="67-67", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", color=red, community=0, file="TextSubscriptionDataSourceReader.cs"];
m34_8 [label="(\r\n                  // white engulfs black\r\n                  GetCandleColor(window[1]) == CandleColor.White && GetCandleColor(window[2]) == CandleColor.Black &&\r\n                  window[1].Close > window[2].Open && window[1].Open < window[2].Close &&\r\n                  // third candle higher\r\n                  input.Close > window[1].Close\r\n                )\r\n                ||\r\n                (\r\n                  // black engulfs white\r\n                  GetCandleColor(window[1]) == CandleColor.Black && GetCandleColor(window[2]) == CandleColor.White &&\r\n                  window[1].Open > window[2].Close && window[1].Close < window[2].Open &&\r\n                  // third candle lower\r\n                  input.Close < window[1].Close\r\n                )", span="74-88", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="TextSubscriptionDataSourceReader.cs"];
m34_9 [label="value = (int)GetCandleColor(window[1])", span="90-90", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="TextSubscriptionDataSourceReader.cs"];
m34_6 [label="return 0m;", span="69-69", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", color=red, community=0, file="TextSubscriptionDataSourceReader.cs"];
m34_7 [label="decimal value", span="72-72", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="TextSubscriptionDataSourceReader.cs"];
m34_10 [label="value = 0", span="92-92", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="TextSubscriptionDataSourceReader.cs"];
m34_11 [label="return value;", span="94-94", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="TextSubscriptionDataSourceReader.cs"];
m34_12 [label="Exit QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", span="65-65", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="TextSubscriptionDataSourceReader.cs"];
m34_13 [label="Entry QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetCandleColor(QuantConnect.Data.Market.TradeBar)", span="39-39", cluster="QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetCandleColor(QuantConnect.Data.Market.TradeBar)", file="TextSubscriptionDataSourceReader.cs"];
m34_0 [label="Entry QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ThreeOutside(string)", span="38-38", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ThreeOutside(string)", file="TextSubscriptionDataSourceReader.cs"];
m34_1 [label="Exit QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ThreeOutside(string)", span="38-38", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ThreeOutside(string)", file="TextSubscriptionDataSourceReader.cs"];
m34_2 [label="Entry QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ThreeOutside()", span="46-46", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ThreeOutside()", file="TextSubscriptionDataSourceReader.cs"];
m34_3 [label="Exit QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ThreeOutside()", span="46-46", cluster="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside.ThreeOutside()", file="TextSubscriptionDataSourceReader.cs"];
m34_14 [label="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside", span="", file="TextSubscriptionDataSourceReader.cs"];
m35_2 [label="Entry QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(int)", span="39-39", cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(int)", file="TickConsolidator.cs"];
m35_3 [label="Exit QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(int)", span="39-39", cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(int)", file="TickConsolidator.cs"];
m35_17 [label="Entry QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase<T, TConsolidated>.GetRoundedBarTime(System.DateTime)", span="251-251", cluster="QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase<T, TConsolidated>.GetRoundedBarTime(System.DateTime)", file="TickConsolidator.cs"];
m35_16 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="121-121", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TickConsolidator.cs"];
m35_0 [label="Entry QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", span="30-30", cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", file="TickConsolidator.cs"];
m35_1 [label="Exit QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", span="30-30", cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", file="TickConsolidator.cs"];
m35_4 [label="Entry QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(int, System.TimeSpan)", span="49-49", cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(int, System.TimeSpan)", file="TickConsolidator.cs"];
m35_5 [label="Exit QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(int, System.TimeSpan)", span="49-49", cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(int, System.TimeSpan)", file="TickConsolidator.cs"];
m35_6 [label="Entry QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", span="60-60", cluster="QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", file="TickConsolidator.cs"];
m35_7 [label="workingBar == null", span="62-62", cluster="QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", file="TickConsolidator.cs"];
m35_8 [label="workingBar = new TradeBar\r\n                {\r\n                    Symbol = data.Symbol,\r\n                    Time = GetRoundedBarTime(data.Time),\r\n                    Close = data.Value,\r\n                    High = data.Value,\r\n                    Low = data.Value,\r\n                    Open = data.Value,\r\n                    DataType = data.DataType,\r\n                    Value = data.Value,\r\n                    Volume = data.Quantity\r\n                }", span="64-75", cluster="QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", file="TickConsolidator.cs"];
m35_9 [label="workingBar.Close = data.Value", span="80-80", cluster="QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", file="TickConsolidator.cs"];
m35_10 [label="workingBar.Volume += data.Quantity", span="81-81", cluster="QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", file="TickConsolidator.cs"];
m35_11 [label="data.Value < workingBar.Low", span="82-82", cluster="QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", file="TickConsolidator.cs"];
m35_12 [label="workingBar.Low = data.Value", span="82-82", cluster="QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", file="TickConsolidator.cs"];
m35_13 [label="data.Value > workingBar.High", span="83-83", cluster="QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", file="TickConsolidator.cs"];
m35_14 [label="workingBar.High = data.Value", span="83-83", cluster="QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", file="TickConsolidator.cs"];
m35_15 [label="Exit QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", span="60-60", cluster="QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(ref QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.Tick)", file="TickConsolidator.cs"];
m35_18 [label="QuantConnect.Data.Consolidators.TickConsolidator", span="", file="TickConsolidator.cs"];
m36_0 [label="Entry QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(System.TimeSpan)", span="30-30", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(System.TimeSpan)", file="TickQuoteBarConsolidator.cs"];
m36_1 [label="Exit QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(System.TimeSpan)", span="30-30", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(System.TimeSpan)", file="TickQuoteBarConsolidator.cs"];
m36_6 [label="Entry QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.ShouldProcess(QuantConnect.Data.Market.Tick)", span="59-59", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.ShouldProcess(QuantConnect.Data.Market.Tick)", file="TickQuoteBarConsolidator.cs"];
m36_7 [label="return data.TickType == TickType.Quote;", span="61-61", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.ShouldProcess(QuantConnect.Data.Market.Tick)", file="TickQuoteBarConsolidator.cs"];
m36_8 [label="Exit QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.ShouldProcess(QuantConnect.Data.Market.Tick)", span="59-59", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.ShouldProcess(QuantConnect.Data.Market.Tick)", file="TickQuoteBarConsolidator.cs"];
m36_4 [label="Entry QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(int, System.TimeSpan)", span="49-49", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(int, System.TimeSpan)", file="TickQuoteBarConsolidator.cs"];
m36_5 [label="Exit QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(int, System.TimeSpan)", span="49-49", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(int, System.TimeSpan)", file="TickQuoteBarConsolidator.cs"];
m36_9 [label="Entry QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.Tick)", span="70-70", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.Tick)", file="TickQuoteBarConsolidator.cs"];
m36_10 [label="workingBar == null", span="72-72", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.Tick)", file="TickQuoteBarConsolidator.cs"];
m36_11 [label="workingBar = new QuoteBar\r\n                {\r\n                    Symbol = data.Symbol,\r\n                    Time = GetRoundedBarTime(data.Time),\r\n                    Bid = null,\r\n                    Ask = null\r\n                }", span="74-80", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.Tick)", file="TickQuoteBarConsolidator.cs"];
m36_12 [label="workingBar.Update(0, data.BidPrice, data.AskPrice, 0, data.BidSize, data.AskSize)", span="84-84", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.Tick)", file="TickQuoteBarConsolidator.cs"];
m36_13 [label="Exit QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.Tick)", span="70-70", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.Tick)", file="TickQuoteBarConsolidator.cs"];
m36_14 [label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar()", span="196-196", cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar()", file="TickQuoteBarConsolidator.cs"];
m36_2 [label="Entry QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(int)", span="39-39", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(int)", file="TickQuoteBarConsolidator.cs"];
m36_3 [label="Exit QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(int)", span="39-39", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(int)", file="TickQuoteBarConsolidator.cs"];
m36_15 [label="Entry QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase<T, TConsolidated>.GetRoundedBarTime(System.DateTime)", span="251-251", cluster="QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase<T, TConsolidated>.GetRoundedBarTime(System.DateTime)", file="TickQuoteBarConsolidator.cs"];
m36_16 [label="Entry QuantConnect.Data.Market.QuoteBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="239-239", cluster="QuantConnect.Data.Market.QuoteBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="TickQuoteBarConsolidator.cs"];
m36_17 [label="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator", span="", file="TickQuoteBarConsolidator.cs"];
m38_0 [label="Entry QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimeEquals()", span="27-27", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimeEquals()", file="UniverseSelection.cs"];
m38_1 [label="var triggered = false", span="29-29", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimeEquals()", file="UniverseSelection.cs"];
m38_2 [label="var se = new ScheduledEvent(''test'', new DateTime(2015, 08, 07), (name, triggerTime) =>\r\n            {\r\n                triggered = true;\r\n            })", span="30-33", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimeEquals()", file="UniverseSelection.cs"];
m38_3 [label="se.IsLoggingEnabled = true", span="34-34", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimeEquals()", file="UniverseSelection.cs"];
m38_4 [label="se.Scan(new DateTime(2015, 08, 06))", span="36-36", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimeEquals()", file="UniverseSelection.cs"];
m38_6 [label="se.Scan(new DateTime(2015, 08, 07))", span="39-39", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimeEquals()", file="UniverseSelection.cs"];
m38_5 [label="Assert.IsFalse(triggered)", span="37-37", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimeEquals()", file="UniverseSelection.cs"];
m38_7 [label="Assert.IsTrue(triggered)", span="40-40", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimeEquals()", file="UniverseSelection.cs"];
m38_8 [label="Exit QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimeEquals()", span="27-27", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimeEquals()", file="UniverseSelection.cs"];
m38_12 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="UniverseSelection.cs"];
m38_57 [label="Entry System.DateTime.AddYears(int)", span="0-0", cluster="System.DateTime.AddYears(int)", file="UniverseSelection.cs"];
m38_17 [label="Entry QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimePasses()", span="44-44", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimePasses()", file="UniverseSelection.cs"];
m38_18 [label="var triggered = false", span="46-46", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimePasses()", file="UniverseSelection.cs"];
m38_19 [label="var se = new ScheduledEvent(''test'', new DateTime(2015, 08, 07), (name, triggerTime) =>\r\n            {\r\n                triggered = true;\r\n            })", span="47-50", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimePasses()", file="UniverseSelection.cs"];
m38_20 [label="se.IsLoggingEnabled = true", span="51-51", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimePasses()", file="UniverseSelection.cs"];
m38_21 [label="se.Scan(new DateTime(2015, 08, 06))", span="53-53", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimePasses()", file="UniverseSelection.cs"];
m38_23 [label="se.Scan(new DateTime(2015, 08, 08))", span="56-56", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimePasses()", file="UniverseSelection.cs"];
m38_22 [label="Assert.IsFalse(triggered)", span="54-54", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimePasses()", file="UniverseSelection.cs"];
m38_24 [label="Assert.IsTrue(triggered)", span="57-57", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimePasses()", file="UniverseSelection.cs"];
m38_25 [label="Exit QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimePasses()", span="44-44", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.FiresEventWhenTimePasses()", file="UniverseSelection.cs"];
m38_40 [label="Entry ScheduledEvent.cstr", span="", cluster="ScheduledEvent.cstr", file="UniverseSelection.cs"];
m38_10 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="UniverseSelection.cs"];
m38_42 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="UniverseSelection.cs"];
m38_13 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="UniverseSelection.cs"];
m38_39 [label="Entry Unk.ToHashSet", span="", cluster="Unk.ToHashSet", file="UniverseSelection.cs"];
m38_29 [label="Entry QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", span="61-61", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", file="UniverseSelection.cs"];
m38_30 [label="var first = new DateTime(2015, 08, 07)", span="63-63", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", file="UniverseSelection.cs"];
m38_31 [label="var second = new DateTime(2015, 08, 08)", span="64-64", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", file="UniverseSelection.cs"];
m38_32 [label="var dates = new[] { first, second }.ToHashSet()", span="65-65", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", file="UniverseSelection.cs"];
m38_34 [label="se.Scan(first)", span="71-71", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", file="UniverseSelection.cs"];
m38_35 [label="Assert.IsFalse(dates.Contains(first))", span="72-72", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", file="UniverseSelection.cs"];
m38_36 [label="se.Scan(second)", span="74-74", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", file="UniverseSelection.cs"];
m38_37 [label="Assert.IsFalse(dates.Contains(second))", span="75-75", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", file="UniverseSelection.cs"];
m38_33 [label="var se = new ScheduledEvent(''test'', dates.ToList(), (name, triggerTime) =>\r\n            {\r\n                dates.Remove(triggerTime);\r\n            })", span="66-69", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", file="UniverseSelection.cs"];
m38_38 [label="Exit QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", span="61-61", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.SchedulesNextEvent()", file="UniverseSelection.cs"];
m38_41 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="UniverseSelection.cs"];
m38_46 [label="Entry Unk.Remove", span="", cluster="Unk.Remove", file="UniverseSelection.cs"];
m38_47 [label="Entry QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", span="79-79", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", file="UniverseSelection.cs"];
m38_48 [label="var triggered = false", span="81-81", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", file="UniverseSelection.cs"];
m38_49 [label="var first = new DateTime(2015, 08, 07)", span="82-82", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", file="UniverseSelection.cs"];
m38_50 [label="var se = new ScheduledEvent(''test'', first, (name, triggerTime) =>\r\n            {\r\n                triggered = true;\r\n            })", span="83-86", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", file="UniverseSelection.cs"];
m38_51 [label="se.Scan(first)", span="88-88", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", file="UniverseSelection.cs"];
m38_54 [label="se.Scan(first.AddYears(100))", span="92-92", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", file="UniverseSelection.cs"];
m38_52 [label="Assert.IsTrue(triggered)", span="89-89", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", file="UniverseSelection.cs"];
m38_53 [label="triggered = false", span="91-91", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", file="UniverseSelection.cs"];
m38_55 [label="Assert.IsFalse(triggered)", span="93-93", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", file="UniverseSelection.cs"];
m38_56 [label="Exit QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", span="79-79", cluster="QuantConnect.Tests.Engine.RealTime.ScheduledEventTests.DoesNothingAfterEventsEnd()", file="UniverseSelection.cs"];
m38_9 [label="Entry QuantConnect.Scheduling.ScheduledEvent.ScheduledEvent(string, System.DateTime, System.Action<string, System.DateTime>)", span="88-88", cluster="QuantConnect.Scheduling.ScheduledEvent.ScheduledEvent(string, System.DateTime, System.Action<string, System.DateTime>)", file="UniverseSelection.cs"];
m38_11 [label="Entry QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", span="126-126", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="UniverseSelection.cs"];
m38_58 [label="Entry lambda expression", span="83-86", cluster="lambda expression", file="UniverseSelection.cs"];
m38_14 [label="Entry lambda expression", span="30-33", cluster="lambda expression", file="UniverseSelection.cs"];
m38_15 [label="triggered = true", span="32-32", cluster="lambda expression", file="UniverseSelection.cs"];
m38_16 [label="Exit lambda expression", span="30-33", cluster="lambda expression", file="UniverseSelection.cs"];
m38_26 [label="Entry lambda expression", span="47-50", cluster="lambda expression", file="UniverseSelection.cs"];
m38_27 [label="triggered = true", span="49-49", cluster="lambda expression", file="UniverseSelection.cs"];
m38_28 [label="Exit lambda expression", span="47-50", cluster="lambda expression", file="UniverseSelection.cs"];
m38_44 [label="dates.Remove(triggerTime)", span="68-68", cluster="lambda expression", file="UniverseSelection.cs"];
m38_43 [label="Entry lambda expression", span="66-69", cluster="lambda expression", file="UniverseSelection.cs"];
m38_45 [label="Exit lambda expression", span="66-69", cluster="lambda expression", file="UniverseSelection.cs"];
m38_59 [label="triggered = true", span="85-85", cluster="lambda expression", file="UniverseSelection.cs"];
m38_60 [label="Exit lambda expression", span="83-86", cluster="lambda expression", file="UniverseSelection.cs"];
m38_61 [label=dates, span="", file="UniverseSelection.cs"];
m39_25 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="ZipDataCacheProvider.cs"];
m39_2 [label="Entry QuantConnect.Securities.Forex.ForexMarginModel.ForexMarginModel(decimal)", span="43-43", cluster="QuantConnect.Securities.Forex.ForexMarginModel.ForexMarginModel(decimal)", file="ZipDataCacheProvider.cs"];
m39_3 [label="Exit QuantConnect.Securities.Forex.ForexMarginModel.ForexMarginModel(decimal)", span="43-43", cluster="QuantConnect.Securities.Forex.ForexMarginModel.ForexMarginModel(decimal)", file="ZipDataCacheProvider.cs"];
m39_26 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, string, int, decimal, decimal, System.DateTime, string)", span="92-92", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, string, int, decimal, decimal, System.DateTime, string)", file="ZipDataCacheProvider.cs"];
m39_0 [label="Entry QuantConnect.Securities.Forex.ForexMarginModel.ForexMarginModel(decimal, decimal)", span="34-34", cluster="QuantConnect.Securities.Forex.ForexMarginModel.ForexMarginModel(decimal, decimal)", file="ZipDataCacheProvider.cs"];
m39_1 [label="Exit QuantConnect.Securities.Forex.ForexMarginModel.ForexMarginModel(decimal, decimal)", span="34-34", cluster="QuantConnect.Securities.Forex.ForexMarginModel.ForexMarginModel(decimal, decimal)", file="ZipDataCacheProvider.cs"];
m39_11 [label="Entry QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="74-74", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="ZipDataCacheProvider.cs"];
m39_12 [label="totalMargin <= netLiquidationValue", span="76-76", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="ZipDataCacheProvider.cs"];
m39_14 [label="var forex = (Forex)security", span="80-80", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", color=red, community=0, file="ZipDataCacheProvider.cs"];
m39_17 [label="decimal delta = (totalMargin - netLiquidationValue)/forex.QuoteCurrency.ConversionRate", span="89-89", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", color=red, community=0, file="ZipDataCacheProvider.cs"];
m39_18 [label="int quantity = (int) Math.Round(delta/security.Price, MidpointRounding.AwayFromZero)", span="92-92", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="ZipDataCacheProvider.cs"];
m39_19 [label="quantity = Math.Min((int)security.Holdings.AbsoluteQuantity, quantity)", span="95-95", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="ZipDataCacheProvider.cs"];
m39_20 [label="security.Holdings.IsLong", span="96-96", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="ZipDataCacheProvider.cs"];
m39_22 [label="return new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, quantity, 0, 0, security.Time, ''Margin Call'');", span="102-102", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="ZipDataCacheProvider.cs"];
m39_13 [label="return null;", span="78-78", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="ZipDataCacheProvider.cs"];
m39_15 [label="forex.Price == 0m || forex.QuoteCurrency.ConversionRate == 0m", span="83-83", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", color=red, community=0, file="ZipDataCacheProvider.cs"];
m39_16 [label="return null;", span="85-85", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", color=red, community=0, file="ZipDataCacheProvider.cs"];
m39_21 [label="quantity *= -1", span="99-99", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="ZipDataCacheProvider.cs"];
m39_23 [label="Exit QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="74-74", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="ZipDataCacheProvider.cs"];
m39_10 [label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="87-87", cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ZipDataCacheProvider.cs"];
m39_4 [label="Entry QuantConnect.Securities.Forex.ForexMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="54-54", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ZipDataCacheProvider.cs"];
m39_5 [label="var forex = (Forex)security", span="56-56", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ZipDataCacheProvider.cs"];
m39_6 [label="var orderFees = security.TransactionModel.GetOrderFee(security, order)", span="60-60", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ZipDataCacheProvider.cs"];
m39_7 [label="var orderCostInAccountCurrency = order.Price*order.AbsoluteQuantity*forex.QuoteCurrency.ConversionRate", span="62-62", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=red, community=0, file="ZipDataCacheProvider.cs"];
m39_8 [label="return orderCostInAccountCurrency*InitialMarginRequirement + orderFees;", span="63-63", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=red, community=0, file="ZipDataCacheProvider.cs"];
m39_9 [label="Exit QuantConnect.Securities.Forex.ForexMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="54-54", cluster="QuantConnect.Securities.Forex.ForexMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ZipDataCacheProvider.cs"];
m39_24 [label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0", cluster="System.Math.Round(decimal, System.MidpointRounding)", file="ZipDataCacheProvider.cs"];
m39_27 [label="QuantConnect.Securities.Forex.ForexMarginModel", span="", file="ZipDataCacheProvider.cs"];
m40_14 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_16 [label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", span="25-25", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_26 [label="Entry Unk.All", span="", cluster="Unk.All", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_11 [label="Exit QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", span="29-29", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_0 [label="Entry QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", span="29-29", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_1 [label="var time = new DateTime(2016, 03, 03, 12, 48, 15)", span="31-31", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_2 [label="var source = Path.Combine(''TestData'', ''20151224_quote_american.zip'')", span="32-32", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_6 [label="var factory = new ZipEntryNameSubscriptionDataSourceReader(dataProvider, dataCacheProvider, config, time, false)", span="37-37", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", color=red, community=0, file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_3 [label="var config = new SubscriptionDataConfig(typeof (ZipEntryName), Symbol.Create(''XLRE'', SecurityType.Option, Market.USA), Resolution.Tick,\r\n                TimeZones.NewYork, TimeZones.NewYork, false, false, false)", span="33-34", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_8 [label="var actual = factory.Read(new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile, FileFormat.ZipEntryName)).ToList()", span="45-45", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_4 [label="var dataProvider = new DefaultDataProvider()", span="35-35", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_5 [label="var dataCacheProvider = new SingleEntryDataCacheProvider(dataProvider)", span="36-36", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_7 [label="var expected = new[]\r\n            {\r\n                Symbol.CreateOption(''XLRE'', Market.USA, OptionStyle.American, OptionRight.Call, 21m, new DateTime(2016, 08, 19)),\r\n                Symbol.CreateOption(''XLRE'', Market.USA, OptionStyle.American, OptionRight.Call, 22m, new DateTime(2016, 08, 19)),\r\n                Symbol.CreateOption(''XLRE'', Market.USA, OptionStyle.American, OptionRight.Put, 37m, new DateTime(2016, 08, 19)),\r\n            }", span="38-43", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_9 [label="CollectionAssert.AreEqual(expected, actual.Select(x => x.Symbol))", span="48-48", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_10 [label="Assert.IsTrue(actual.All(x => x is ZipEntryName))", span="49-49", cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_25 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_17 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="18-18", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_19 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_24 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_27 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_20 [label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", span="91-91", cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_15 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="46-46", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_13 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_22 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="64-64", cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_12 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_18 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="49-49", cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_32 [label="x is ZipEntryName", span="49-49", cluster="lambda expression", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_28 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_31 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_29 [label="x.Symbol", span="48-48", cluster="lambda expression", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_30 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m40_33 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="ZipEntryNameSubsciptionFactoryTests.cs"];
m41_13 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_9 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="78-78", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_10 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, 0, ''Brokerage does not support update. You must cancel and re-create instead.'')", span="80-80", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_11 [label="return false;", span="81-81", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_12 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="78-78", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_2 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="55-55", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_3 [label="return 3m;", span="57-57", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_4 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="55-55", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_8 [label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="26-26", cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_5 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="65-65", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_6 [label="return new GDAXFeeModel();", span="67-67", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_7 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="65-65", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_0 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
m41_1 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="ZipEntryNameSubscriptionDataSourceReader.cs"];
n172 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n172 -> n168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n13  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n12 -> n0  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n14 -> n17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n14 -> n18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n14 -> n19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n14 -> n20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n14 -> n21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n14 -> n22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n14 -> n23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n14 -> n25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n14 -> n26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n14 -> n27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n29  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n28 -> n14  [key=0, style=bold, color=blue];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n30 -> n33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n30 -> n34  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n30 -> n36  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n30 -> n37  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n31 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n38 -> n30  [key=0, style=bold, color=blue];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n39 -> n42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n39 -> n43  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n39 -> n45  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n39 -> n46  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n40 -> n41  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n47 -> n39  [key=0, style=bold, color=blue];
n48 -> n49  [key=0, style=solid];
n48 -> n51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n49 -> n50  [key=0, style=solid];
n49 -> n58  [key=2, style=dotted];
n49 -> n52  [key=1, style=dashed, color=darkseagreen4, label=csv];
n49 -> n55  [key=1, style=dashed, color=darkseagreen4, label=csv];
n49 -> n56  [key=1, style=dashed, color=darkseagreen4, label=csv];
n51 -> n52  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n59  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n60  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n60  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n57 -> n48  [key=0, style=bold, color=blue];
n61 -> n62  [key=0, style=solid];
n61 -> n64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n61 -> n65  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n61 -> n66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n62 -> n63  [key=0, style=solid];
n62 -> n58  [key=2, style=dotted];
n62 -> n65  [key=1, style=dashed, color=darkseagreen4, label=csv];
n62 -> n66  [key=1, style=dashed, color=darkseagreen4, label=csv];
n62 -> n68  [key=1, style=dashed, color=darkseagreen4, label=csv];
n62 -> n69  [key=1, style=dashed, color=darkseagreen4, label=csv];
n62 -> n70  [key=1, style=dashed, color=darkseagreen4, label=csv];
n62 -> n71  [key=1, style=dashed, color=darkseagreen4, label=csv];
n64 -> n65  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n65 -> n73  [key=2, style=dotted];
n65 -> n74  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n66 -> n75  [key=2, style=dotted];
n66 -> n76  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n75  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n77  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n71 -> n73  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n76 -> n170  [key=0, style=solid];
n72 -> n61  [key=0, style=bold, color=blue];
n78 -> n79  [key=0, style=solid];
n78 -> n80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n83  [key=1, style=dashed, color=darkseagreen4, label=string];
n78 -> n84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n96  [key=1, style=dashed, color=darkseagreen4, label=string];
n78 -> n97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n105  [key=1, style=dashed, color=darkseagreen4, label=string];
n78 -> n106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n78 -> n121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n79 -> n80  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n80 -> n76  [key=2, style=dotted];
n80 -> n86  [key=1, style=dashed, color=darkseagreen4, label=scaleFactor];
n80 -> n110  [key=1, style=dashed, color=darkseagreen4, label=scaleFactor];
n80 -> n118  [key=1, style=dashed, color=darkseagreen4, label=scaleFactor];
n80 -> n121  [key=1, style=dashed, color=darkseagreen4, label=scaleFactor];
n81 -> n82  [key=0, style=solid];
n81 -> n93  [key=0, style=solid];
n81 -> n103  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n83 -> n133  [key=2, style=dotted];
n83 -> n85  [key=1, style=dashed, color=darkseagreen4, label=csv];
n83 -> n86  [key=1, style=dashed, color=darkseagreen4, label=csv];
n83 -> n88  [key=1, style=dashed, color=darkseagreen4, label=csv];
n83 -> n89  [key=1, style=dashed, color=darkseagreen4, label=csv];
n83 -> n90  [key=1, style=dashed, color=darkseagreen4, label=csv];
n83 -> n91  [key=1, style=dashed, color=darkseagreen4, label=csv];
n83 -> n92  [key=1, style=dashed, color=darkseagreen4, label=csv];
n84 -> n85  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n85 -> n134  [key=2, style=dotted];
n85 -> n74  [key=2, style=dotted];
n85 -> n135  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n75  [key=2, style=dotted];
n86 -> n136  [key=2, style=dotted];
n96 -> n97  [key=0, style=solid];
n96 -> n133  [key=2, style=dotted];
n96 -> n99  [key=1, style=dashed, color=darkseagreen4, label=csv];
n96 -> n100  [key=1, style=dashed, color=darkseagreen4, label=csv];
n96 -> n101  [key=1, style=dashed, color=darkseagreen4, label=csv];
n97 -> n98  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n134  [key=2, style=dotted];
n99 -> n74  [key=2, style=dotted];
n99 -> n135  [key=2, style=dotted];
n105 -> n106  [key=0, style=solid];
n105 -> n133  [key=2, style=dotted];
n105 -> n107  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n110  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n111  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n112  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n113  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n114  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n116  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n117  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n118  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n119  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n120  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n121  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n122  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n123  [key=1, style=dashed, color=darkseagreen4, label=csv];
n105 -> n124  [key=1, style=dashed, color=darkseagreen4, label=csv];
n106 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n134  [key=2, style=dotted];
n107 -> n74  [key=2, style=dotted];
n107 -> n135  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n110 -> n111  [key=0, style=solid];
n110 -> n75  [key=2, style=dotted];
n110 -> n136  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n118 -> n75  [key=2, style=dotted];
n118 -> n136  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n121 -> n75  [key=2, style=dotted];
n121 -> n136  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n93 -> n94  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n88 -> n75  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n130  [key=0, style=solid];
n89 -> n132  [key=0, style=solid];
n90 -> n91  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n92 -> n130  [key=0, style=solid];
n92 -> n132  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n130 -> n131  [key=0, style=solid];
n132 -> n78  [key=0, style=bold, color=blue];
n94 -> n95  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n75  [key=2, style=dotted];
n101 -> n102  [key=0, style=solid];
n101 -> n75  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n102 -> n130  [key=0, style=solid];
n102 -> n132  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n111 -> n75  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n114 -> n130  [key=0, style=solid];
n114 -> n132  [key=0, style=solid];
n116 -> n130  [key=0, style=solid];
n116 -> n132  [key=0, style=solid];
n116 -> n75  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n117 -> n120  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n119 -> n75  [key=2, style=dotted];
n120 -> n121  [key=0, style=solid];
n120 -> n123  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n75  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n124 -> n125  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n115  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n115 -> n117  [key=0, style=solid];
n125 -> n126  [key=0, style=solid];
n125 -> n129  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n129 -> n132  [key=0, style=solid];
n127 -> n130  [key=0, style=solid];
n127 -> n132  [key=0, style=solid];
n128 -> n130  [key=0, style=solid];
n128 -> n132  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n131 -> n137  [key=2, style=dotted];
n138 -> n139  [key=0, style=solid];
n138 -> n141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n139 -> n140  [key=0, style=solid];
n139 -> n141  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n141 -> n78  [key=2, style=dotted];
n140 -> n142  [key=0, style=solid];
n140 -> n0  [key=2, style=dotted];
n142 -> n138  [key=0, style=bold, color=blue];
n143 -> n144  [key=0, style=solid];
n143 -> n146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n143 -> n147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n143 -> n148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n144 -> n145  [key=0, style=solid];
n144 -> n146  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n146 -> n152  [key=2, style=dotted];
n146 -> n148  [key=1, style=dashed, color=darkseagreen4, label=source];
n146 -> n149  [key=1, style=dashed, color=darkseagreen4, label=source];
n147 -> n148  [key=0, style=solid];
n147 -> n149  [key=0, style=solid];
n148 -> n149  [key=0, style=solid];
n148 -> n153  [key=2, style=dotted];
n148 -> n148  [key=1, style=dashed, color=darkseagreen4, label=source];
n145 -> n150  [key=0, style=solid];
n145 -> n151  [key=2, style=dotted];
n149 -> n150  [key=0, style=solid];
n149 -> n154  [key=2, style=dotted];
n150 -> n143  [key=0, style=bold, color=blue];
n155 -> n156  [key=0, style=solid];
n155 -> n157  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n155 -> n158  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n155 -> n159  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n155 -> n160  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n155 -> n161  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n156 -> n157  [key=0, style=solid];
n157 -> n158  [key=0, style=solid];
n158 -> n159  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n160 -> n161  [key=0, style=solid];
n161 -> n162  [key=0, style=solid];
n161 -> n163  [key=2, style=dotted];
n162 -> n155  [key=0, style=bold, color=blue];
n164 -> n165  [key=0, style=solid];
n165 -> n166  [key=0, style=solid];
n166 -> n164  [key=0, style=bold, color=blue];
n167 -> n168  [key=0, style=solid];
n168 -> n169  [key=0, style=solid];
n168 -> n14  [key=2, style=dotted];
n169 -> n167  [key=0, style=bold, color=blue];
n170 -> n171  [key=0, style=solid];
n171 -> n76  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=red];
m0_0 -> m0_3  [key=1, style=dashed, color=red, label=string];
m0_0 -> m0_5  [key=1, style=dashed, color=red, label=string];
m0_0 -> m0_8  [key=1, style=dashed, color=red, label=string];
m0_0 -> m0_10  [key=1, style=dashed, color=red, label=string];
m0_0 -> m0_11  [key=1, style=dashed, color=red, label=string];
m0_0 -> m0_12  [key=1, style=dashed, color=red, label=string];
m0_0 -> m0_13  [key=3, color=red, style=bold, label="method methodReturn System.IO.Stream Fetch"];
m0_1 -> m0_2  [key=0, style=solid, color=red];
m0_1 -> m0_15  [key=2, style=dotted, color=red];
m0_1 -> m0_4  [key=1, style=dashed, color=red, label=dataAlreadyOnDisk];
m0_3 -> m0_4  [key=0, style=solid, color=red];
m0_3 -> m0_16  [key=2, style=dotted, color=red];
m0_5 -> m0_6  [key=0, style=solid, color=red];
m0_5 -> m0_17  [key=2, style=dotted, color=red];
m0_5 -> m0_18  [key=2, style=dotted, color=red];
m0_8 -> m0_9  [key=0, style=solid, color=red];
m0_8 -> m0_21  [key=2, style=dotted, color=red];
m0_10 -> m0_11  [key=0, style=solid, color=red];
m0_10 -> m0_17  [key=2, style=dotted, color=red];
m0_10 -> m0_18  [key=2, style=dotted, color=red];
m0_11 -> m0_14  [key=0, style=solid, color=red];
m0_11 -> m0_15  [key=2, style=dotted, color=red];
m0_12 -> m0_13  [key=0, style=solid, color=red];
m0_12 -> m0_17  [key=2, style=dotted, color=red];
m0_12 -> m0_22  [key=2, style=dotted, color=red];
m0_2 -> m0_3  [key=0, style=solid, color=red];
m0_2 -> m0_5  [key=0, style=solid, color=red];
m0_4 -> m0_14  [key=0, style=solid, color=red];
m0_6 -> m0_7  [key=0, style=solid, color=red];
m0_6 -> m0_19  [key=2, style=dotted, color=red];
m0_6 -> m0_8  [key=1, style=dashed, color=red, label=api];
m0_7 -> m0_8  [key=0, style=solid, color=red];
m0_7 -> m0_20  [key=2, style=dotted, color=red];
m0_9 -> m0_10  [key=0, style=solid, color=red];
m0_9 -> m0_12  [key=0, style=solid, color=red];
m0_13 -> m0_14  [key=0, style=solid, color=red];
m0_14 -> m0_0  [key=0, style=bold, color=blue];
m0_23 -> m0_1  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider"];
m0_23 -> m0_7  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider"];
m0_23 -> m0_11  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider"];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_9 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_9 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_9 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m1_9 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Server.ILeanManager"];
m1_9 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_9 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_9 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler"];
m1_9 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
m1_9 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler"];
m1_9 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
m1_9 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
m1_9 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
m1_9 -> m1_205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_9 -> m1_208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_211  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_9 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_9 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_9 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_9 -> m1_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_9 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_9 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_9 -> m1_228  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_9 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_9 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_9 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
m1_12 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
m1_12 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
m1_12 -> m1_232  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
m1_12 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=backtestMode];
m1_13 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=backtestMode];
m1_13 -> m1_231  [key=1, style=dashed, color=darkseagreen4, label=backtestMode];
m1_13 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label=backtestMode];
m1_13 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label=backtestMode];
m1_20 -> m1_21  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_239  [key=2, style=dotted];
m1_23 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataTradeBars];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_239  [key=2, style=dotted];
m1_24 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataQuoteBars];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_239  [key=2, style=dotted];
m1_25 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataOptionChains];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_239  [key=2, style=dotted];
m1_26 -> m1_189  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataTicks];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_239  [key=2, style=dotted];
m1_27 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataDividends];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_239  [key=2, style=dotted];
m1_28 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataSplits];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_239  [key=2, style=dotted];
m1_29 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataDelistings];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_239  [key=2, style=dotted];
m1_30 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataSymbolChangedEvents];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_240  [key=2, style=dotted];
m1_31 -> m1_241  [key=2, style=dotted];
m1_31 -> m1_242  [key=2, style=dotted];
m1_31 -> m1_243  [key=2, style=dotted];
m1_31 -> m1_306  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_31 -> m1_310  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_31 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataSlice];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_42  [key=0, style=solid];
m1_32 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=config];
m1_32 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=config];
m1_32 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=config];
m1_32 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=config];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_240  [key=2, style=dotted];
m1_34 -> m1_244  [key=2, style=dotted];
m1_34 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=genericMethod];
m1_34 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=genericMethod];
m1_34 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=genericMethod];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_246  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_249  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_206  [key=0, style=solid];
m1_43 -> m1_250  [key=2, style=dotted];
m1_43 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_124  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_189  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_190  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_196  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_43 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_50  [key=0, style=solid];
m1_47 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_253  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_254  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_255  [key=2, style=dotted];
m1_56 -> m1_256  [key=2, style=dotted];
m1_58 -> m1_60  [key=0, style=solid];
m1_58 -> m1_257  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_255  [key=2, style=dotted];
m1_59 -> m1_257  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_232  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
m1_60 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
m1_64 -> m1_206  [key=0, style=solid];
m1_64 -> m1_258  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_254  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_259  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_260  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_261  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_72  [key=0, style=solid];
m1_73 -> m1_262  [key=2, style=dotted];
m1_73 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_76  [key=0, style=solid];
m1_77 -> m1_264  [key=2, style=dotted];
m1_78 -> m1_76  [key=0, style=solid];
m1_78 -> m1_265  [key=2, style=dotted];
m1_87 -> m1_83  [key=0, style=solid];
m1_87 -> m1_268  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_269  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_270  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_271  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_93  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_96  [key=0, style=solid];
m1_95 -> m1_206  [key=0, style=solid];
m1_95 -> m1_251  [key=2, style=dotted];
m1_95 -> m1_249  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_272  [key=2, style=dotted];
m1_98 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m1_98 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m1_98 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label=issueMarginCallWarning];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_273  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_274  [key=2, style=dotted];
m1_105 -> m1_104  [key=0, style=solid];
m1_105 -> m1_275  [key=2, style=dotted];
m1_105 -> m1_276  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_119  [key=0, style=solid];
m1_113 -> m1_278  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_279  [key=2, style=dotted];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_130  [key=0, style=solid];
m1_124 -> m1_280  [key=2, style=dotted];
m1_126 -> m1_127  [key=0, style=solid];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_281  [key=2, style=dotted];
m1_131 -> m1_282  [key=2, style=dotted];
m1_132 -> m1_130  [key=0, style=solid];
m1_132 -> m1_283  [key=2, style=dotted];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_281  [key=2, style=dotted];
m1_134 -> m1_282  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_284  [key=2, style=dotted];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_139  [key=0, style=solid];
m1_136 -> m1_133  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_262  [key=2, style=dotted];
m1_137 -> m1_317  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_133  [key=0, style=solid];
m1_138 -> m1_285  [key=2, style=dotted];
m1_138 -> m1_286  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_153 -> m1_154  [key=0, style=solid];
m1_162 -> m1_160  [key=0, style=solid];
m1_162 -> m1_293  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_261  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_261  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_179  [key=0, style=solid];
m1_173 -> m1_261  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_294  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_261  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_261  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_261  [key=2, style=dotted];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_196  [key=0, style=solid];
m1_190 -> m1_261  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_203  [key=0, style=solid];
m1_197 -> m1_296  [key=2, style=dotted];
m1_199 -> m1_200  [key=0, style=solid];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_270  [key=2, style=dotted];
m1_205 -> m1_43  [key=0, style=solid];
m1_205 -> m1_297  [key=2, style=dotted];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_214  [key=0, style=solid];
m1_208 -> m1_298  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_299  [key=2, style=dotted];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_297  [key=2, style=dotted];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_300  [key=2, style=dotted];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_301  [key=2, style=dotted];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_302  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_301  [key=2, style=dotted];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_302  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_303  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_302  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_302  [key=2, style=dotted];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_304  [key=2, style=dotted];
m1_229 -> m1_305  [key=2, style=dotted];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_255  [key=2, style=dotted];
m1_230 -> m1_256  [key=2, style=dotted];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_254  [key=2, style=dotted];
m1_233 -> m1_235  [key=0, style=solid];
m1_233 -> m1_257  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_255  [key=2, style=dotted];
m1_234 -> m1_257  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_59  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_66  [key=0, style=solid];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_234  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_236  [key=2, style=dotted];
m1_14 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_14 -> m1_190  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_65  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_237  [key=2, style=dotted];
m1_15 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=marginCallFrequency];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_32  [key=0, style=solid];
m1_35 -> m1_245  [key=2, style=dotted];
m1_41 -> m1_32  [key=0, style=solid];
m1_41 -> m1_247  [key=2, style=dotted];
m1_41 -> m1_248  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_157  [key=0, style=solid];
m1_159 -> m1_291  [key=2, style=dotted];
m1_159 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label=methodInvoker];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label=nextMarginCallTime];
m1_119 -> m1_120  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_237  [key=2, style=dotted];
m1_17 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label=settlementScanFrequency];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_120  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=nextSettlementScanTime];
m1_122 -> m1_123  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_238  [key=2, style=dotted];
m1_19 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=delistings];
m1_19 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label=delistings];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_123  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_185  [key=0, style=solid];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_187  [key=0, style=solid];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_189  [key=0, style=solid];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_191  [key=0, style=solid];
m1_189 -> m1_196  [key=0, style=solid];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_170  [key=0, style=solid];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_172  [key=0, style=solid];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_174  [key=0, style=solid];
m1_172 -> m1_179  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_40  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_32  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_32  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_235  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_206 -> m1_207  [key=0, style=solid];
m1_46 -> m1_206  [key=0, style=solid];
m1_46 -> m1_251  [key=2, style=dotted];
m1_46 -> m1_252  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_252  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=time];
m1_51 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label=time];
m1_51 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label=time];
m1_51 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label=time];
m1_51 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label=time];
m1_51 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=time];
m1_51 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=time];
m1_51 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label=time];
m1_51 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label=time];
m1_51 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label=time];
m1_52 -> m1_53  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_75  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_75  [key=0, style=solid];
m1_72 -> m1_314  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_79  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_79  [key=0, style=solid];
m1_76 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_83  [key=0, style=solid];
m1_79 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label=update];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_88  [key=0, style=solid];
m1_83 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=update];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_130  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_133  [key=0, style=solid];
m1_130 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label=dividend];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_144  [key=0, style=solid];
m1_133 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label=split];
m1_133 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label=split];
m1_133 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label=split];
m1_133 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=split];
m1_133 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=split];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_152  [key=0, style=solid];
m1_144 -> m1_157  [key=0, style=solid];
m1_144 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=update];
m1_144 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label=update];
m1_144 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label=update];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_168  [key=0, style=solid];
m1_157 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label=update];
m1_157 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label=update];
m1_157 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label=update];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_183  [key=0, style=solid];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_183  [key=0, style=solid];
m1_181 -> m1_242  [key=2, style=dotted];
m1_181 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_182 -> m1_181  [key=0, style=solid];
m1_182 -> m1_295  [key=2, style=dotted];
m1_182 -> m1_248  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_198  [key=0, style=solid];
m1_196 -> m1_203  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [key=0, style=solid];
m1_49 -> m1_235  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_61  [key=0, style=solid];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_289  [key=2, style=dotted];
m1_204 -> m1_205  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label=logMessage];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_249  [key=2, style=dotted];
m1_74 -> m1_73  [key=0, style=solid];
m1_74 -> m1_263  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label=cash];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_79  [key=0, style=solid];
m1_82 -> m1_81  [key=0, style=solid];
m1_82 -> m1_266  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_84 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_87  [key=0, style=solid];
m1_86 -> m1_85  [key=0, style=solid];
m1_86 -> m1_267  [key=2, style=dotted];
m1_92 -> m1_206  [key=0, style=solid];
m1_92 -> m1_249  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_97 -> m1_98  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_112  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_119  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=executingMarginCall];
m1_109 -> m1_110  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_106  [key=0, style=solid];
m1_104 -> m1_119  [key=0, style=solid];
m1_106 -> m1_107  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_277  [key=2, style=dotted];
m1_110 -> m1_252  [key=2, style=dotted];
m1_111 -> m1_235  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_252  [key=2, style=dotted];
m1_118 -> m1_235  [key=0, style=solid];
m1_125 -> m1_126  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_252  [key=2, style=dotted];
m1_129 -> m1_235  [key=0, style=solid];
m1_139 -> m1_140  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_252  [key=2, style=dotted];
m1_143 -> m1_235  [key=0, style=solid];
m1_145 -> m1_146  [key=0, style=solid];
m1_152 -> m1_153  [key=0, style=solid];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_150  [key=0, style=solid];
m1_147 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label=dataPoint];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_147  [key=0, style=solid];
m1_148 -> m1_287  [key=2, style=dotted];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_144  [key=0, style=solid];
m1_146 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label=consolidator];
m1_146 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=consolidator];
m1_149 -> m1_147  [key=0, style=solid];
m1_149 -> m1_288  [key=2, style=dotted];
m1_151 -> m1_146  [key=0, style=solid];
m1_151 -> m1_290  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_252  [key=2, style=dotted];
m1_156 -> m1_235  [key=0, style=solid];
m1_158 -> m1_159  [key=0, style=solid];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_163  [key=0, style=solid];
m1_160 -> m1_157  [key=0, style=solid];
m1_160 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label=dataPoint];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_160  [key=0, style=solid];
m1_161 -> m1_292  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_165 -> m1_166  [key=0, style=solid];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_252  [key=2, style=dotted];
m1_167 -> m1_235  [key=0, style=solid];
m1_174 -> m1_175  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_252  [key=2, style=dotted];
m1_178 -> m1_235  [key=0, style=solid];
m1_191 -> m1_192  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_252  [key=2, style=dotted];
m1_195 -> m1_235  [key=0, style=solid];
m1_198 -> m1_199  [key=0, style=solid];
m1_200 -> m1_201  [key=0, style=solid];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_252  [key=2, style=dotted];
m1_202 -> m1_235  [key=0, style=solid];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_249  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_210 -> m1_211  [key=0, style=solid];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_252  [key=2, style=dotted];
m1_213 -> m1_235  [key=0, style=solid];
m1_215 -> m1_216  [key=0, style=solid];
m1_215 -> m1_220  [key=0, style=solid];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_249  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_224  [key=0, style=solid];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_249  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_228  [key=0, style=solid];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_249  [key=2, style=dotted];
m1_235 -> m1_9  [key=0, style=bold, color=blue];
m1_490 -> m1_491  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid, color=red];
m1_5 -> m1_7  [key=0, style=solid, color=red];
m1_6 -> m1_8  [key=0, style=solid, color=red];
m1_7 -> m1_8  [key=0, style=solid, color=red];
m1_8 -> m1_4  [key=0, style=bold, color=blue];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_240  [key=2, style=dotted];
m1_306 -> m1_307  [key=0, style=solid];
m1_310 -> m1_311  [key=0, style=solid];
m1_314 -> m1_315  [key=0, style=solid];
m1_314 -> m1_316  [key=2, style=dotted];
m1_313 -> m1_314  [key=0, style=solid];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_316  [key=2, style=dotted];
m1_317 -> m1_318  [key=0, style=solid];
m1_320 -> m1_321  [key=0, style=solid];
m1_307 -> m1_308  [key=0, style=solid];
m1_307 -> m1_309  [key=2, style=dotted];
m1_308 -> m1_306  [key=0, style=bold, color=blue];
m1_312 -> m1_310  [key=0, style=bold, color=blue];
m1_315 -> m1_313  [key=0, style=bold, color=blue];
m1_319 -> m1_317  [key=0, style=bold, color=blue];
m1_321 -> m1_322  [key=0, style=solid];
m1_321 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.QuoteBar>"];
m1_322 -> m1_320  [key=0, style=bold, color=blue];
m1_434 -> m1_435  [key=0, style=solid];
m1_438 -> m1_439  [key=0, style=solid];
m1_441 -> m1_442  [key=0, style=solid];
m1_444 -> m1_445  [key=0, style=solid];
m1_447 -> m1_448  [key=0, style=solid];
m1_450 -> m1_451  [key=0, style=solid];
m1_453 -> m1_454  [key=0, style=solid];
m1_456 -> m1_457  [key=0, style=solid];
m1_435 -> m1_436  [key=0, style=solid];
m1_435 -> m1_437  [key=2, style=dotted];
m1_435 -> m1_435  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>"];
m1_436 -> m1_434  [key=0, style=bold, color=blue];
m1_439 -> m1_440  [key=0, style=solid];
m1_440 -> m1_438  [key=0, style=bold, color=blue];
m1_442 -> m1_443  [key=0, style=solid];
m1_443 -> m1_441  [key=0, style=bold, color=blue];
m1_445 -> m1_446  [key=0, style=solid];
m1_446 -> m1_444  [key=0, style=bold, color=blue];
m1_448 -> m1_449  [key=0, style=solid];
m1_449 -> m1_447  [key=0, style=bold, color=blue];
m1_451 -> m1_452  [key=0, style=solid];
m1_452 -> m1_450  [key=0, style=bold, color=blue];
m1_454 -> m1_455  [key=0, style=solid];
m1_455 -> m1_453  [key=0, style=bold, color=blue];
m1_457 -> m1_458  [key=0, style=solid];
m1_458 -> m1_456  [key=0, style=bold, color=blue];
m1_491 -> m1_492  [key=0, style=solid];
m1_492 -> m1_490  [key=0, style=bold, color=blue];
m1_254 -> m1_518  [key=0, style=solid];
m1_254 -> m1_520  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_518 -> m1_519  [key=0, style=solid];
m1_518 -> m1_523  [key=0, style=solid];
m1_518 -> m1_524  [key=2, style=dotted];
m1_518 -> m1_525  [key=2, style=dotted];
m1_518 -> m1_526  [key=2, style=dotted];
m1_520 -> m1_521  [key=0, style=solid];
m1_519 -> m1_520  [key=0, style=solid];
m1_521 -> m1_522  [key=0, style=solid];
m1_522 -> m1_523  [key=0, style=solid];
m1_522 -> n137  [key=2, style=dotted];
m1_523 -> m1_254  [key=0, style=bold, color=blue];
m1_287 -> m1_527  [key=0, style=solid];
m1_287 -> m1_529  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m1_287 -> m1_530  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m1_527 -> m1_528  [key=0, style=solid];
m1_527 -> m1_529  [key=0, style=solid];
m1_529 -> m1_530  [key=0, style=solid];
m1_529 -> m1_532  [key=2, style=dotted];
m1_530 -> m1_531  [key=0, style=solid];
m1_528 -> m1_531  [key=0, style=solid];
m1_531 -> m1_287  [key=0, style=bold, color=blue];
m1_271 -> m1_493  [key=0, style=solid];
m1_271 -> m1_495  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_271 -> m1_497  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>"];
m1_271 -> m1_503  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_271 -> m1_506  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_271 -> m1_507  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_271 -> m1_508  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_271 -> m1_509  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_271 -> m1_510  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>"];
m1_493 -> m1_494  [key=0, style=solid];
m1_493 -> m1_495  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_493 -> m1_497  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_493 -> m1_510  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_493 -> m1_511  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_495 -> m1_496  [key=0, style=solid];
m1_495 -> m1_498  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_495 -> m1_499  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_495 -> m1_500  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_495 -> m1_502  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_495 -> m1_503  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_495 -> m1_504  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_495 -> m1_505  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_495 -> m1_506  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_495 -> m1_507  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_495 -> m1_508  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_497 -> m1_498  [key=0, style=solid];
m1_503 -> m1_504  [key=0, style=solid];
m1_506 -> m1_509  [key=0, style=solid];
m1_506 -> m1_515  [key=2, style=dotted];
m1_507 -> m1_509  [key=0, style=solid];
m1_507 -> m1_515  [key=2, style=dotted];
m1_508 -> m1_509  [key=0, style=solid];
m1_508 -> m1_515  [key=2, style=dotted];
m1_509 -> m1_510  [key=0, style=solid];
m1_509 -> m1_516  [key=2, style=dotted];
m1_510 -> m1_511  [key=0, style=solid];
m1_510 -> m1_517  [key=2, style=dotted];
m1_494 -> m1_495  [key=0, style=solid];
m1_494 -> m1_512  [key=0, style=solid];
m1_511 -> m1_494  [key=0, style=solid];
m1_511 -> m1_511  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_496 -> m1_497  [key=0, style=solid];
m1_496 -> m1_494  [key=0, style=solid];
m1_498 -> m1_499  [key=0, style=solid];
m1_498 -> m1_513  [key=2, style=dotted];
m1_499 -> m1_500  [key=0, style=solid];
m1_499 -> m1_514  [key=2, style=dotted];
m1_500 -> m1_501  [key=0, style=solid];
m1_500 -> m1_494  [key=0, style=solid];
m1_502 -> m1_503  [key=0, style=solid];
m1_502 -> m1_508  [key=0, style=solid];
m1_504 -> m1_505  [key=0, style=solid];
m1_505 -> m1_506  [key=0, style=solid];
m1_505 -> m1_507  [key=0, style=solid];
m1_501 -> m1_502  [key=0, style=solid];
m1_512 -> m1_271  [key=0, style=bold, color=blue];
m1_239 -> m1_473  [key=0, style=solid];
m1_239 -> m1_475  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>"];
m1_473 -> m1_474  [key=0, style=solid];
m1_473 -> m1_240  [key=2, style=dotted];
m1_473 -> m1_244  [key=2, style=dotted];
m1_473 -> m1_475  [key=1, style=dashed, color=darkseagreen4, label=newSplitMethodInfo];
m1_475 -> m1_476  [key=0, style=solid];
m1_475 -> m1_247  [key=2, style=dotted];
m1_475 -> m1_248  [key=2, style=dotted];
m1_474 -> m1_475  [key=0, style=solid];
m1_474 -> m1_477  [key=0, style=solid];
m1_477 -> m1_478  [key=0, style=solid];
m1_476 -> m1_478  [key=0, style=solid];
m1_478 -> m1_239  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=red];
m1_0 -> m1_2  [key=1, style=dashed, color=red, label=bool];
m1_1 -> m1_2  [key=0, style=solid, color=red];
m1_2 -> m1_3  [key=0, style=solid, color=red];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_250 -> m1_328  [key=0, style=solid];
m1_250 -> m1_371  [key=0, style=bold, color=crimson];
m1_250 -> m1_381  [key=0, style=bold, color=crimson];
m1_250 -> m1_408  [key=0, style=bold, color=crimson];
m1_250 -> m1_329  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_330  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_337  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_340  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_359  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_370  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_376  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_380  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_250 -> m1_383  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_388  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
m1_250 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_396  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_401  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_402  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_250 -> m1_407  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_373  [key=1, style=dashed, color=darkseagreen4, label=setStartTime];
m1_328 -> m1_389  [key=1, style=dashed, color=darkseagreen4, label=setStartTime];
m1_371 -> m1_372  [key=0, style=solid];
m1_381 -> m1_382  [key=0, style=solid];
m1_408 -> m1_388  [key=0, style=solid];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label=timeZone];
m1_329 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label=timeZone];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label=history];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_333  [key=0, style=solid];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_410  [key=2, style=dotted];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_411  [key=2, style=dotted];
m1_334 -> m1_285  [key=2, style=dotted];
m1_334 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
m1_334 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
m1_334 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
m1_334 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
m1_334 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
m1_334 -> m1_352  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
m1_334 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
m1_334 -> m1_383  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
m1_334 -> m1_385  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
m1_337 -> m1_338  [key=0, style=solid];
m1_337 -> m1_413  [key=2, style=dotted];
m1_337 -> m1_414  [key=2, style=dotted];
m1_337 -> m1_415  [key=2, style=dotted];
m1_337 -> m1_434  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_340 -> m1_341  [key=0, style=solid];
m1_340 -> m1_242  [key=2, style=dotted];
m1_340 -> m1_416  [key=2, style=dotted];
m1_340 -> m1_438  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_342  [key=0, style=solid];
m1_344 -> m1_417  [key=2, style=dotted];
m1_344 -> m1_418  [key=2, style=dotted];
m1_344 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_359 -> m1_360  [key=0, style=solid];
m1_359 -> m1_366  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_367 -> m1_368  [key=0, style=solid];
m1_367 -> m1_372  [key=0, style=solid];
m1_367 -> m1_426  [key=2, style=dotted];
m1_367 -> m1_427  [key=2, style=dotted];
m1_367 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_367 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_367 -> m1_381  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_367 -> m1_382  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_370 -> m1_371  [key=0, style=solid];
m1_376 -> m1_377  [key=0, style=solid];
m1_376 -> m1_429  [key=2, style=dotted];
m1_380 -> m1_381  [key=0, style=solid];
m1_380 -> m1_277  [key=2, style=dotted];
m1_380 -> m1_302  [key=2, style=dotted];
m1_383 -> m1_384  [key=0, style=solid];
m1_383 -> m1_388  [key=0, style=solid];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_430  [key=2, style=dotted];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_429  [key=2, style=dotted];
m1_388 -> m1_389  [key=0, style=solid];
m1_388 -> m1_409  [key=0, style=solid];
m1_388 -> m1_391  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_388 -> m1_395  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_388 -> m1_400  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_388 -> m1_406  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_388 -> m1_408  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m1_392 -> m1_393  [key=0, style=solid];
m1_392 -> m1_408  [key=0, style=solid];
m1_396 -> m1_397  [key=0, style=solid];
m1_396 -> m1_395  [key=0, style=solid];
m1_396 -> m1_426  [key=2, style=dotted];
m1_401 -> m1_402  [key=0, style=solid];
m1_401 -> m1_430  [key=2, style=dotted];
m1_402 -> m1_403  [key=0, style=solid];
m1_402 -> m1_429  [key=2, style=dotted];
m1_407 -> m1_408  [key=0, style=solid];
m1_407 -> m1_277  [key=2, style=dotted];
m1_407 -> m1_302  [key=2, style=dotted];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_377  [key=0, style=solid];
m1_389 -> m1_390  [key=0, style=solid];
m1_389 -> m1_392  [key=0, style=solid];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_383  [key=0, style=solid];
m1_355 -> m1_421  [key=2, style=dotted];
m1_355 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=slice];
m1_355 -> m1_360  [key=1, style=dashed, color=darkseagreen4, label=slice];
m1_355 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label=slice];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_393  [key=1, style=dashed, color=darkseagreen4, label=lastHistoryTimeUtc];
m1_333 -> m1_396  [key=1, style=dashed, color=darkseagreen4, label=lastHistoryTimeUtc];
m1_393 -> m1_394  [key=0, style=solid];
m1_393 -> m1_400  [key=0, style=solid];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label=start];
m1_335 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=start];
m1_335 -> m1_406  [key=1, style=dashed, color=darkseagreen4, label=start];
m1_339 -> m1_340  [key=0, style=solid];
m1_339 -> m1_383  [key=0, style=solid];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_348  [key=0, style=solid];
m1_342 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label=request];
m1_342 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label=request];
m1_342 -> m1_346  [key=1, style=dashed, color=darkseagreen4, label=request];
m1_342 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=request];
m1_348 -> m1_349  [key=0, style=solid];
m1_348 -> m1_352  [key=0, style=solid];
m1_348 -> m1_419  [key=2, style=dotted];
m1_348 -> m1_444  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_242  [key=2, style=dotted];
m1_349 -> m1_415  [key=2, style=dotted];
m1_349 -> m1_447  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_349 -> m1_450  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_349 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_352  [key=0, style=solid];
m1_350 -> m1_242  [key=2, style=dotted];
m1_350 -> m1_453  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_355  [key=0, style=solid];
m1_352 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=request];
m1_385 -> m1_386  [key=0, style=solid];
m1_385 -> m1_388  [key=0, style=solid];
m1_336 -> m1_337  [key=0, style=solid];
m1_336 -> m1_412  [key=2, style=dotted];
m1_336 -> m1_377  [key=1, style=dashed, color=darkseagreen4, label=nextStatusTime];
m1_336 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label=nextStatusTime];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_420  [key=2, style=dotted];
m1_353 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label=start];
m1_353 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=start];
m1_353 -> m1_406  [key=1, style=dashed, color=darkseagreen4, label=start];
m1_379 -> m1_380  [key=0, style=solid];
m1_406 -> m1_407  [key=0, style=solid];
m1_377 -> m1_378  [key=0, style=solid];
m1_377 -> m1_381  [key=0, style=solid];
m1_404 -> m1_405  [key=0, style=solid];
m1_404 -> m1_408  [key=0, style=solid];
m1_338 -> m1_339  [key=0, style=solid];
m1_338 -> m1_338  [key=1, style=dashed, color=darkseagreen4, label=minimumIncrement];
m1_338 -> m1_400  [key=1, style=dashed, color=darkseagreen4, label=minimumIncrement];
m1_400 -> m1_401  [key=0, style=solid];
m1_400 -> m1_404  [key=0, style=solid];
m1_400 -> m1_433  [key=2, style=dotted];
m1_341 -> m1_342  [key=0, style=solid];
m1_341 -> m1_415  [key=2, style=dotted];
m1_341 -> m1_441  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_341 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
m1_341 -> m1_346  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
m1_341 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_342  [key=0, style=solid];
m1_346 -> m1_347  [key=0, style=solid];
m1_347 -> m1_342  [key=0, style=solid];
m1_343 -> m1_344  [key=0, style=solid];
m1_351 -> m1_350  [key=0, style=solid];
m1_351 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=request];
m1_354 -> m1_352  [key=0, style=solid];
m1_354 -> m1_275  [key=2, style=dotted];
m1_354 -> m1_249  [key=2, style=dotted];
m1_356 -> m1_357  [key=0, style=solid];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_367  [key=0, style=solid];
m1_358 -> m1_360  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_362  [key=1, style=dashed, color=darkseagreen4, label=data];
m1_360 -> m1_365  [key=1, style=dashed, color=darkseagreen4, label=data];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_238  [key=2, style=dotted];
m1_357 -> m1_366  [key=1, style=dashed, color=darkseagreen4, label=paired];
m1_357 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label=paired];
m1_366 -> m1_358  [key=0, style=solid];
m1_366 -> m1_424  [key=2, style=dotted];
m1_366 -> m1_425  [key=2, style=dotted];
m1_366 -> m1_423  [key=2, style=dotted];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_238  [key=2, style=dotted];
m1_361 -> m1_364  [key=1, style=dashed, color=darkseagreen4, label=list];
m1_361 -> m1_365  [key=1, style=dashed, color=darkseagreen4, label=list];
m1_361 -> m1_366  [key=1, style=dashed, color=darkseagreen4, label=list];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_364  [key=1, style=dashed, color=darkseagreen4, label=ticks];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_423  [key=2, style=dotted];
m1_364 -> m1_366  [key=0, style=solid];
m1_364 -> m1_422  [key=2, style=dotted];
m1_363 -> m1_364  [key=0, style=solid];
m1_363 -> m1_365  [key=0, style=solid];
m1_368 -> m1_369  [key=0, style=solid];
m1_372 -> m1_373  [key=0, style=solid];
m1_372 -> m1_355  [key=0, style=solid];
m1_375 -> m1_376  [key=0, style=solid];
m1_382 -> m1_355  [key=0, style=solid];
m1_382 -> m1_393  [key=1, style=dashed, color=darkseagreen4, label=lastHistoryTimeUtc];
m1_382 -> m1_396  [key=1, style=dashed, color=darkseagreen4, label=lastHistoryTimeUtc];
m1_369 -> m1_370  [key=0, style=solid];
m1_369 -> n137  [key=2, style=dotted];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_389  [key=1, style=dashed, color=darkseagreen4, label=setStartTime];
m1_378 -> m1_379  [key=0, style=solid];
m1_378 -> m1_412  [key=2, style=dotted];
m1_378 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label=nextStatusTime];
m1_387 -> m1_388  [key=0, style=solid];
m1_387 -> m1_249  [key=2, style=dotted];
m1_391 -> m1_392  [key=0, style=solid];
m1_395 -> m1_396  [key=0, style=solid];
m1_395 -> m1_398  [key=0, style=solid];
m1_395 -> m1_431  [key=2, style=dotted];
m1_395 -> m1_432  [key=2, style=dotted];
m1_395 -> m1_456  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_390 -> m1_391  [key=0, style=solid];
m1_394 -> m1_395  [key=0, style=solid];
m1_394 -> m1_398  [key=1, style=dashed, color=darkseagreen4, label=hasHistoricalData];
m1_398 -> m1_399  [key=0, style=solid];
m1_398 -> m1_388  [key=0, style=solid];
m1_397 -> m1_398  [key=0, style=solid];
m1_399 -> m1_400  [key=0, style=solid];
m1_403 -> m1_408  [key=0, style=solid];
m1_403 -> m1_249  [key=2, style=dotted];
m1_405 -> m1_406  [key=0, style=solid];
m1_405 -> m1_412  [key=2, style=dotted];
m1_409 -> m1_250  [key=0, style=bold, color=blue];
m1_410 -> m1_459  [key=0, style=solid];
m1_410 -> m1_460  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_410 -> m1_462  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_410 -> m1_463  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_410 -> m1_464  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_459 -> m1_460  [key=0, style=solid];
m1_459 -> m1_249  [key=2, style=dotted];
m1_460 -> m1_461  [key=0, style=solid];
m1_460 -> m1_469  [key=0, style=solid];
m1_460 -> m1_462  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_460 -> m1_467  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_460 -> m1_468  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_462 -> m1_463  [key=0, style=solid];
m1_462 -> m1_470  [key=2, style=dotted];
m1_462 -> m1_464  [key=1, style=dashed, color=darkseagreen4, label=historyReq];
m1_463 -> m1_464  [key=0, style=solid];
m1_463 -> m1_460  [key=0, style=solid];
m1_464 -> m1_465  [key=0, style=solid];
m1_464 -> m1_421  [key=2, style=dotted];
m1_464 -> m1_466  [key=1, style=dashed, color=darkseagreen4, label=history];
m1_461 -> m1_462  [key=0, style=solid];
m1_461 -> m1_460  [key=0, style=solid];
m1_467 -> m1_468  [key=0, style=solid];
m1_467 -> m1_466  [key=0, style=solid];
m1_467 -> m1_471  [key=2, style=dotted];
m1_468 -> m1_466  [key=0, style=solid];
m1_468 -> m1_472  [key=2, style=dotted];
m1_465 -> m1_466  [key=0, style=solid];
m1_465 -> m1_460  [key=0, style=solid];
m1_466 -> m1_467  [key=0, style=solid];
m1_466 -> m1_460  [key=0, style=solid];
m1_466 -> m1_468  [key=1, style=dashed, color=darkseagreen4, label=slice];
m1_469 -> m1_410  [key=0, style=bold, color=blue];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_325  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmStatus"];
m1_323 -> m1_326  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmStatus"];
m1_324 -> m1_325  [key=0, style=solid];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_327  [key=0, style=solid];
m1_326 -> m1_327  [key=0, style=solid];
m1_327 -> m1_323  [key=0, style=bold, color=blue];
m1_294 -> m1_479  [key=0, style=solid];
m1_294 -> m1_481  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>"];
m1_294 -> m1_482  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>"];
m1_294 -> m1_485  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_479 -> m1_480  [key=0, style=solid];
m1_479 -> m1_488  [key=0, style=solid];
m1_479 -> m1_481  [key=1, style=dashed, color=darkseagreen4, label=delisting];
m1_479 -> m1_491  [key=1, style=dashed, color=darkseagreen4, label=delisting];
m1_479 -> m1_482  [key=1, style=dashed, color=darkseagreen4, label=delisting];
m1_479 -> m1_483  [key=1, style=dashed, color=darkseagreen4, label=delisting];
m1_479 -> m1_484  [key=1, style=dashed, color=darkseagreen4, label=delisting];
m1_479 -> m1_485  [key=1, style=dashed, color=darkseagreen4, label=delisting];
m1_481 -> m1_482  [key=0, style=solid];
m1_481 -> m1_479  [key=0, style=solid];
m1_481 -> m1_419  [key=2, style=dotted];
m1_481 -> m1_490  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_482 -> m1_483  [key=0, style=solid];
m1_482 -> m1_423  [key=2, style=dotted];
m1_485 -> m1_486  [key=0, style=solid];
m1_485 -> m1_489  [key=2, style=dotted];
m1_480 -> m1_481  [key=0, style=solid];
m1_480 -> m1_484  [key=0, style=solid];
m1_483 -> m1_479  [key=0, style=solid];
m1_483 -> m1_249  [key=2, style=dotted];
m1_484 -> m1_485  [key=0, style=solid];
m1_484 -> m1_249  [key=2, style=dotted];
m1_486 -> m1_487  [key=0, style=solid];
m1_486 -> m1_479  [key=0, style=solid];
m1_487 -> m1_486  [key=0, style=solid];
m1_487 -> m1_249  [key=2, style=dotted];
m1_488 -> m1_294  [key=0, style=bold, color=blue];
m1_533 -> m1_1  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_2  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_215  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_224  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_326  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_391  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_533 -> m1_521  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_534 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_535 -> m1_314  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m1_536 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=split];
m1_537 -> m1_491  [key=1, style=dashed, color=darkseagreen4, label=delisting];
m2_130 -> m2_253  [key=0, style=solid];
m2_130 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_246  [key=2, style=dotted];
m2_253 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label=resetEvent];
m2_253 -> m2_257  [key=1, style=dashed, color=darkseagreen4, label=resetEvent];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_260  [key=2, style=dotted];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label=handler];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_248  [key=2, style=dotted];
m2_255 -> m2_256  [key=0, style=solid];
m2_258 -> m2_259  [key=0, style=solid];
m2_259 -> m2_130  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m2_1 -> m2_19  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_155 -> m2_156  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_59  [key=2, style=dotted];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> n0  [key=2, style=dotted];
m2_157 -> m2_99  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_73  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_142  [key=2, style=dotted];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_61  [key=2, style=dotted];
m2_160 -> m2_62  [key=2, style=dotted];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_142  [key=2, style=dotted];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_61  [key=2, style=dotted];
m2_162 -> m2_63  [key=2, style=dotted];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_143  [key=2, style=dotted];
m2_163 -> m2_43  [key=2, style=dotted];
m2_164 -> m2_155  [key=0, style=bold, color=blue];
m2_34 -> m2_35  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_37  [key=2, style=dotted];
m2_36 -> m2_34  [key=0, style=bold, color=blue];
m2_180 -> m2_181  [key=0, style=solid];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_59  [key=2, style=dotted];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_82  [key=2, style=dotted];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_82  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_97  [key=2, style=dotted];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> n0  [key=2, style=dotted];
m2_185 -> m2_99  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_97  [key=2, style=dotted];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> n0  [key=2, style=dotted];
m2_187 -> m2_99  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_97  [key=2, style=dotted];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> n0  [key=2, style=dotted];
m2_189 -> m2_99  [key=2, style=dotted];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_100  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_101  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_101  [key=2, style=dotted];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_143  [key=2, style=dotted];
m2_193 -> m2_43  [key=2, style=dotted];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_142  [key=2, style=dotted];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_61  [key=2, style=dotted];
m2_195 -> m2_62  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_142  [key=2, style=dotted];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_61  [key=2, style=dotted];
m2_197 -> m2_63  [key=2, style=dotted];
m2_198 -> m2_180  [key=0, style=bold, color=blue];
m2_209 -> m2_210  [key=0, style=solid];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_59  [key=2, style=dotted];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_73  [key=2, style=dotted];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_97  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> n0  [key=2, style=dotted];
m2_213 -> m2_99  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_97  [key=2, style=dotted];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> n0  [key=2, style=dotted];
m2_215 -> m2_99  [key=2, style=dotted];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_97  [key=2, style=dotted];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> n0  [key=2, style=dotted];
m2_217 -> m2_99  [key=2, style=dotted];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_97  [key=2, style=dotted];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> n0  [key=2, style=dotted];
m2_219 -> m2_99  [key=2, style=dotted];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_100  [key=2, style=dotted];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_143  [key=2, style=dotted];
m2_221 -> m2_43  [key=2, style=dotted];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_143  [key=2, style=dotted];
m2_222 -> m2_43  [key=2, style=dotted];
m2_223 -> m2_224  [key=0, style=solid];
m2_223 -> m2_143  [key=2, style=dotted];
m2_223 -> m2_43  [key=2, style=dotted];
m2_224 -> m2_225  [key=0, style=solid];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_143  [key=2, style=dotted];
m2_225 -> m2_43  [key=2, style=dotted];
m2_226 -> m2_209  [key=0, style=bold, color=blue];
m2_83 -> m2_84  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_59  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_97  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> n0  [key=2, style=dotted];
m2_86 -> m2_99  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_97  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> n0  [key=2, style=dotted];
m2_88 -> m2_99  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_100  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_101  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_101  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_60  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_61  [key=2, style=dotted];
m2_93 -> m2_62  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_60  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_61  [key=2, style=dotted];
m2_95 -> m2_63  [key=2, style=dotted];
m2_96 -> m2_83  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_13  [key=2, style=dotted];
m2_7 -> m2_22  [key=2, style=dotted];
m2_11 -> m2_11  [key=1, style=dashed, color=green, label=date];
m2_11 -> m2_12  [key=0, style=solid, color=green];
m2_11 -> m2_16  [key=2, style=dotted, color=green];
m2_11 -> m2_17  [key=2, style=dotted, color=green];
m2_11 -> m2_18  [key=2, style=dotted, color=green];
m2_11 -> m2_19  [key=2, style=dotted, color=green];
m2_11 -> m2_20  [key=2, style=dotted, color=green];
m2_11 -> m2_21  [key=2, style=dotted, color=green];
m2_11 -> m2_28  [key=2, style=dotted];
m2_6 -> m2_11  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IDataProvider"];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m2_6 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m2_6 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m2_6 -> m2_21  [key=2, style=dotted];
m2_8 -> m2_11  [key=1, style=dashed, color=green, label=configuration];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_23  [key=2, style=dotted];
m2_9 -> m2_11  [key=1, style=dashed, color=green, label=tradableDays];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_14  [key=2, style=dotted];
m2_9 -> m2_24  [key=2, style=dotted];
m2_9 -> m2_25  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_10 -> m2_15  [key=2, style=dotted];
m2_10 -> m2_26  [key=2, style=dotted];
m2_10 -> m2_27  [key=2, style=dotted];
m2_12 -> m2_6  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=tz];
m2_12 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=tz];
m2_12 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=tz];
m2_102 -> m2_103  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_59  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_82  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_82  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_97  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> n0  [key=2, style=dotted];
m2_107 -> m2_99  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_97  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> n0  [key=2, style=dotted];
m2_109 -> m2_99  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_97  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> n0  [key=2, style=dotted];
m2_111 -> m2_99  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_100  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_101  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_101  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_101  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_130  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_60  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_61  [key=2, style=dotted];
m2_118 -> m2_62  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_60  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_61  [key=2, style=dotted];
m2_120 -> m2_63  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_60  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_61  [key=2, style=dotted];
m2_122 -> m2_62  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_60  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_61  [key=2, style=dotted];
m2_124 -> m2_63  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_131  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_61  [key=2, style=dotted];
m2_126 -> m2_62  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_131  [key=2, style=dotted];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_61  [key=2, style=dotted];
m2_128 -> m2_63  [key=2, style=dotted];
m2_129 -> m2_102  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_29  [key=2, style=dotted];
m2_15 -> m2_30  [key=2, style=dotted];
m2_15 -> m2_31  [key=2, style=dotted];
m2_15 -> m2_32  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_20  [key=2, style=dotted];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> m2_252  [key=2, style=dotted];
m2_249 -> m2_250  [key=0, style=solid];
m2_251 -> m2_249  [key=0, style=bold, color=blue];
m2_262 -> m2_263  [key=0, style=solid];
m2_262 -> m2_252  [key=2, style=dotted];
m2_261 -> m2_262  [key=0, style=solid];
m2_263 -> m2_261  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_20  [key=2, style=dotted];
m2_5 -> m2_3  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_20  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_228 -> m2_229  [key=0, style=solid];
m2_228 -> m2_59  [key=2, style=dotted];
m2_229 -> m2_230  [key=0, style=solid];
m2_229 -> m2_20  [key=2, style=dotted];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_97  [key=2, style=dotted];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> n0  [key=2, style=dotted];
m2_231 -> m2_99  [key=2, style=dotted];
m2_232 -> m2_233  [key=0, style=solid];
m2_232 -> m2_100  [key=2, style=dotted];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_43  [key=2, style=dotted];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_143  [key=2, style=dotted];
m2_234 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_43  [key=2, style=dotted];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_142  [key=2, style=dotted];
m2_237 -> m2_238  [key=0, style=solid];
m2_237 -> m2_61  [key=2, style=dotted];
m2_237 -> m2_62  [key=2, style=dotted];
m2_238 -> m2_227  [key=0, style=bold, color=blue];
m2_50 -> m2_51  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_59  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_60  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_61  [key=2, style=dotted];
m2_53 -> m2_62  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_60  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_61  [key=2, style=dotted];
m2_55 -> m2_63  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_60  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_61  [key=2, style=dotted];
m2_57 -> m2_63  [key=2, style=dotted];
m2_58 -> m2_50  [key=0, style=bold, color=blue];
m2_64 -> m2_65  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_73  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_60  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_61  [key=2, style=dotted];
m2_67 -> m2_62  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_60  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_61  [key=2, style=dotted];
m2_69 -> m2_63  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_60  [key=2, style=dotted];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_61  [key=2, style=dotted];
m2_71 -> m2_63  [key=2, style=dotted];
m2_72 -> m2_64  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_29  [key=2, style=dotted];
m2_13 -> m2_30  [key=2, style=dotted];
m2_13 -> m2_31  [key=2, style=dotted];
m2_13 -> m2_32  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_29  [key=2, style=dotted];
m2_14 -> m2_30  [key=2, style=dotted];
m2_14 -> m2_31  [key=2, style=dotted];
m2_14 -> m2_32  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_29  [key=2, style=dotted];
m2_16 -> m2_30  [key=2, style=dotted];
m2_16 -> m2_31  [key=2, style=dotted];
m2_16 -> m2_32  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_33  [key=2, style=dotted];
m2_18 -> m2_0  [key=0, style=bold, color=blue];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_49  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_42  [key=2, style=dotted];
m2_47 -> m2_43  [key=2, style=dotted];
m2_48 -> m2_45  [key=0, style=bold, color=blue];
m2_199 -> m2_200  [key=0, style=solid];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_59  [key=2, style=dotted];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_207  [key=2, style=dotted];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_60  [key=2, style=dotted];
m2_202 -> m2_205  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_61  [key=2, style=dotted];
m2_203 -> m2_63  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_61  [key=2, style=dotted];
m2_205 -> m2_62  [key=2, style=dotted];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_208  [key=2, style=dotted];
m2_206 -> m2_199  [key=0, style=bold, color=blue];
m2_22 -> m2_11  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory"];
m2_22 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory"];
m2_22 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory"];
m2_22 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory"];
m2_101 -> m2_239  [key=0, style=solid];
m2_101 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_246  [key=2, style=dotted];
m2_239 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label=resetEvent];
m2_239 -> m2_243  [key=1, style=dashed, color=darkseagreen4, label=resetEvent];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_247  [key=2, style=dotted];
m2_240 -> m2_241  [key=0, style=solid];
m2_240 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label=handler];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_248  [key=2, style=dotted];
m2_241 -> m2_242  [key=0, style=solid];
m2_244 -> m2_245  [key=0, style=solid];
m2_245 -> m2_101  [key=0, style=bold, color=blue];
m2_132 -> m2_133  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_59  [key=2, style=dotted];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> n0  [key=2, style=dotted];
m2_134 -> m2_99  [key=2, style=dotted];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_142  [key=2, style=dotted];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_61  [key=2, style=dotted];
m2_136 -> m2_63  [key=2, style=dotted];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_143  [key=2, style=dotted];
m2_137 -> m2_43  [key=2, style=dotted];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> n0  [key=2, style=dotted];
m2_138 -> m2_99  [key=2, style=dotted];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_142  [key=2, style=dotted];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_61  [key=2, style=dotted];
m2_140 -> m2_62  [key=2, style=dotted];
m2_141 -> m2_132  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_42  [key=2, style=dotted];
m2_39 -> m2_43  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_44  [key=2, style=dotted];
m2_40 -> m2_43  [key=2, style=dotted];
m2_41 -> m2_38  [key=0, style=bold, color=blue];
m2_144 -> m2_145  [key=0, style=solid];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_73  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> n0  [key=2, style=dotted];
m2_146 -> m2_99  [key=2, style=dotted];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_142  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_61  [key=2, style=dotted];
m2_148 -> m2_63  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_143  [key=2, style=dotted];
m2_150 -> m2_43  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> n0  [key=2, style=dotted];
m2_151 -> m2_99  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_142  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_61  [key=2, style=dotted];
m2_153 -> m2_62  [key=2, style=dotted];
m2_154 -> m2_144  [key=0, style=bold, color=blue];
m2_165 -> m2_166  [key=0, style=solid];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_59  [key=2, style=dotted];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_97  [key=2, style=dotted];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> n0  [key=2, style=dotted];
m2_168 -> m2_99  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_97  [key=2, style=dotted];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> n0  [key=2, style=dotted];
m2_170 -> m2_99  [key=2, style=dotted];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_100  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_101  [key=2, style=dotted];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_101  [key=2, style=dotted];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_143  [key=2, style=dotted];
m2_174 -> m2_43  [key=2, style=dotted];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_142  [key=2, style=dotted];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_61  [key=2, style=dotted];
m2_176 -> m2_62  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_142  [key=2, style=dotted];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_61  [key=2, style=dotted];
m2_178 -> m2_63  [key=2, style=dotted];
m2_179 -> m2_165  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_59  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_82  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_60  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_61  [key=2, style=dotted];
m2_78 -> m2_62  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_60  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_61  [key=2, style=dotted];
m2_80 -> m2_63  [key=2, style=dotted];
m2_81 -> m2_74  [key=0, style=bold, color=blue];
m2_264 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_178  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_182  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_210  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_228  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_255  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_264 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m2_265 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label=resetEvent];
m2_266 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label=resetEvent];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_5  [key=0, style=bold, color=blue];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_12  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=2, style=dotted];
m3_10 -> m3_8  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=2, style=dotted];
m3_3 -> m3_0  [key=0, style=bold, color=blue];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_20  [key=0, style=solid];
m3_17 -> m3_22  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_23  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_21  [key=0, style=solid];
m3_21 -> m3_16  [key=0, style=bold, color=blue];
m3_24 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAXBrokerageModel"];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_97  [key=2, style=dotted];
m4_86 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_86 -> m4_89  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_86 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_95  [key=2, style=dotted];
m4_82 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=data];
m4_82 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=data];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_47  [key=2, style=dotted];
m4_90 -> m4_85  [key=0, style=solid];
m4_90 -> m4_98  [key=2, style=dotted];
m4_90 -> m4_99  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_96  [key=2, style=dotted];
m4_84 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m4_84 -> m4_89  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_91  [key=0, style=solid];
m4_85 -> m4_93  [key=0, style=solid];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_77  [key=2, style=dotted];
m4_91 -> m4_92  [key=0, style=solid];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_91  [key=0, style=solid];
m4_87 -> m4_93  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> n137  [key=2, style=dotted];
m4_94 -> m4_81  [key=0, style=bold, color=blue];
m4_288 -> m4_284  [key=0, style=bold, color=blue];
m4_284 -> m4_285  [key=0, style=solid];
m4_284 -> m4_287  [key=0, style=bold, color=crimson];
m4_285 -> m4_286  [key=0, style=solid];
m4_285 -> m4_239  [key=2, style=dotted];
m4_285 -> m4_240  [key=2, style=dotted];
m4_285 -> m4_287  [key=1, style=dashed, color=darkseagreen4, label=entryReader];
m4_287 -> m4_286  [key=0, style=solid];
m4_287 -> m4_289  [key=2, style=dotted];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_288  [key=0, style=solid];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_22  [key=2, style=dotted];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_155 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_17  [key=2, style=dotted];
m4_156 -> m4_18  [key=2, style=dotted];
m4_156 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label=stream];
m4_156 -> m4_163  [key=1, style=dashed, color=darkseagreen4, label=stream];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_20  [key=2, style=dotted];
m4_160 -> m4_161  [key=0, style=solid];
m4_160 -> m4_47  [key=2, style=dotted];
m4_160 -> m4_21  [key=2, style=dotted];
m4_160 -> m4_162  [key=1, style=dashed, color=darkseagreen4, label=dataReader];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_23  [key=2, style=dotted];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_162  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_159 -> m4_163  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_48  [key=2, style=dotted];
m4_162 -> m4_164  [key=1, style=dashed, color=darkseagreen4, label=sourceBytes];
m4_161 -> m4_162  [key=0, style=solid];
m4_164 -> m4_161  [key=0, style=solid];
m4_164 -> m4_165  [key=0, style=solid];
m4_165 -> m4_155  [key=0, style=bold, color=blue];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_22  [key=2, style=dotted];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_135  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_133 -> m4_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_133 -> m4_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_133 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_133 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_134 -> m4_141  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_17  [key=2, style=dotted];
m4_135 -> m4_18  [key=2, style=dotted];
m4_135 -> m4_137  [key=1, style=dashed, color=darkseagreen4, label=stream];
m4_135 -> m4_141  [key=1, style=dashed, color=darkseagreen4, label=stream];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_20  [key=2, style=dotted];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_148  [key=2, style=dotted];
m4_138 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label=fs];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_145  [key=0, style=solid];
m4_143 -> m4_147  [key=0, style=solid];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_147  [key=0, style=solid];
m4_144 -> m4_150  [key=2, style=dotted];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_149  [key=2, style=dotted];
m4_140 -> m4_142  [key=1, style=dashed, color=darkseagreen4, label=sourceBytes];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_23  [key=2, style=dotted];
m4_139 -> m4_140  [key=0, style=solid];
m4_142 -> m4_139  [key=0, style=solid];
m4_142 -> m4_143  [key=0, style=solid];
m4_145 -> m4_146  [key=0, style=solid];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> n137  [key=2, style=dotted];
m4_147 -> m4_133  [key=0, style=bold, color=blue];
m4_399 -> m4_395  [key=0, style=bold, color=blue];
m4_395 -> m4_396  [key=0, style=solid];
m4_395 -> m4_398  [key=0, style=bold, color=crimson];
m4_396 -> m4_397  [key=0, style=solid];
m4_396 -> m4_77  [key=2, style=dotted];
m4_398 -> m4_397  [key=0, style=solid];
m4_397 -> m4_398  [key=0, style=solid];
m4_397 -> m4_399  [key=0, style=solid];
m4_270 -> m4_274  [key=0, style=solid];
m4_270 -> m4_258  [key=2, style=dotted];
m4_270 -> m4_275  [key=2, style=dotted];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_268  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_266 -> m4_270  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_267 -> m4_268  [key=0, style=solid];
m4_267 -> m4_270  [key=0, style=solid];
m4_267 -> m4_76  [key=2, style=dotted];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_243  [key=2, style=dotted];
m4_269 -> m4_274  [key=0, style=solid];
m4_269 -> m4_257  [key=2, style=dotted];
m4_271 -> m4_272  [key=0, style=solid];
m4_272 -> m4_273  [key=0, style=solid];
m4_272 -> n137  [key=2, style=dotted];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_257  [key=2, style=dotted];
m4_274 -> m4_266  [key=0, style=bold, color=blue];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_110  [key=2, style=dotted];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_100 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_108  [key=2, style=dotted];
m4_101 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label=memoryStream];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_23  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_109  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_112  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_111  [key=2, style=dotted];
m4_107 -> m4_100  [key=0, style=bold, color=blue];
m4_304 -> m4_305  [key=0, style=solid];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_77  [key=2, style=dotted];
m4_305 -> m4_312  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_238  [key=2, style=dotted];
m4_306 -> m4_308  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_307 -> m4_308  [key=0, style=solid];
m4_307 -> m4_309  [key=0, style=solid];
m4_307 -> m4_311  [key=0, style=solid];
m4_308 -> m4_312  [key=0, style=solid];
m4_308 -> m4_240  [key=2, style=dotted];
m4_309 -> m4_310  [key=0, style=solid];
m4_311 -> m4_312  [key=0, style=solid];
m4_310 -> m4_311  [key=0, style=solid];
m4_310 -> n137  [key=2, style=dotted];
m4_312 -> m4_304  [key=0, style=bold, color=blue];
m4_244 -> m4_245  [key=0, style=solid];
m4_245 -> m4_246  [key=0, style=solid];
m4_245 -> m4_247  [key=2, style=dotted];
m4_246 -> m4_244  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_20  [key=2, style=dotted];
m4_4 -> m4_7  [key=1, style=dashed, color=red, label=entry];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m4_0 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_17  [key=2, style=dotted];
m4_1 -> m4_18  [key=2, style=dotted];
m4_1 -> m4_7  [key=1, style=dashed, color=red, label=stream];
m4_1 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label=stream];
m4_1 -> m4_9  [key=1, style=dashed, color=red, label=stream];
m4_1 -> m4_10  [key=1, style=dashed, color=red, label=stream];
m4_1 -> m4_11  [key=1, style=dashed, color=red, label=stream];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_10  [key=0, style=solid, color=red];
m4_3 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=filename];
m4_5 -> m4_6  [key=0, style=solid, color=red];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_19  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid, color=red];
m4_7 -> m4_22  [key=2, style=dotted, color=red];
m4_8 -> m4_9  [key=0, style=solid, color=red];
m4_8 -> m4_23  [key=2, style=dotted];
m4_9 -> m4_3  [key=0, style=solid, color=red];
m4_9 -> m4_24  [key=2, style=dotted, color=red];
m4_10 -> m4_11  [key=0, style=solid, color=red];
m4_10 -> m4_25  [key=2, style=dotted, color=red];
m4_11 -> m4_12  [key=0, style=solid, color=red];
m4_11 -> m4_15  [key=0, style=solid, color=red];
m4_11 -> m4_26  [key=2, style=dotted, color=red];
m4_6 -> m4_7  [key=0, style=solid, color=red];
m4_6 -> m4_21  [key=2, style=dotted, color=red];
m4_6 -> m4_8  [key=1, style=dashed, color=red, label=bytes];
m4_12 -> m4_13  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> n137  [key=2, style=dotted];
m4_14 -> m4_16  [key=0, style=solid];
m4_16 -> m4_0  [key=0, style=bold, color=blue];
m4_390 -> m4_391  [key=0, style=solid];
m4_391 -> m4_392  [key=0, style=solid];
m4_391 -> m4_337  [key=2, style=dotted];
m4_392 -> m4_393  [key=0, style=solid];
m4_392 -> m4_394  [key=2, style=dotted];
m4_393 -> m4_390  [key=0, style=bold, color=blue];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_179  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_176 -> m4_180  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_176 -> m4_181  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_176 -> m4_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_177 -> m4_178  [key=0, style=solid];
m4_177 -> m4_179  [key=0, style=solid];
m4_177 -> m4_76  [key=2, style=dotted];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_181  [key=0, style=solid];
m4_180 -> m4_191  [key=0, style=solid];
m4_180 -> m4_196  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_109  [key=2, style=dotted];
m4_181 -> m4_148  [key=2, style=dotted];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_197  [key=2, style=dotted];
m4_184 -> m4_186  [key=1, style=dashed, color=darkseagreen4, label=filepath];
m4_184 -> m4_187  [key=1, style=dashed, color=darkseagreen4, label=filepath];
m4_178 -> m4_195  [key=0, style=solid];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_191  [key=0, style=solid];
m4_182 -> m4_184  [key=1, style=dashed, color=darkseagreen4, label=file];
m4_182 -> m4_190  [key=1, style=dashed, color=darkseagreen4, label=file];
m4_183 -> m4_184  [key=0, style=solid];
m4_183 -> m4_182  [key=0, style=solid];
m4_191 -> m4_195  [key=0, style=solid];
m4_190 -> m4_182  [key=0, style=solid];
m4_190 -> m4_200  [key=2, style=dotted];
m4_185 -> m4_186  [key=0, style=solid];
m4_185 -> m4_187  [key=0, style=solid];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_132  [key=2, style=dotted];
m4_186 -> m4_186  [key=1, style=dashed, color=darkseagreen4, label=filepath];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_198  [key=2, style=dotted];
m4_187 -> m4_189  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m4_187 -> m4_190  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_190  [key=0, style=solid];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_199  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> n137  [key=2, style=dotted];
m4_194 -> m4_195  [key=0, style=solid];
m4_195 -> m4_176  [key=0, style=bold, color=blue];
m4_294 -> m4_295  [key=0, style=solid];
m4_294 -> m4_97  [key=2, style=dotted];
m4_294 -> m4_296  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_290 -> m4_291  [key=0, style=solid];
m4_290 -> m4_293  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m4_291 -> m4_292  [key=0, style=solid];
m4_293 -> m4_294  [key=0, style=solid];
m4_293 -> m4_96  [key=2, style=dotted];
m4_293 -> m4_296  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m4_292 -> m4_293  [key=0, style=solid];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_77  [key=2, style=dotted];
m4_295 -> m4_296  [key=0, style=solid];
m4_295 -> m4_297  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_47  [key=2, style=dotted];
m4_298 -> m4_299  [key=0, style=solid];
m4_298 -> m4_301  [key=0, style=solid];
m4_298 -> m4_303  [key=2, style=dotted];
m4_299 -> m4_300  [key=0, style=solid];
m4_301 -> m4_302  [key=0, style=solid];
m4_300 -> m4_301  [key=0, style=solid];
m4_300 -> n137  [key=2, style=dotted];
m4_302 -> m4_290  [key=0, style=bold, color=blue];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_113 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_119  [key=1, style=dashed, color=darkseagreen4, label=dataBuffer];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_122  [key=2, style=dotted];
m4_115 -> m4_123  [key=2, style=dotted];
m4_115 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label=newFileOutput];
m4_115 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label=newFileOutput];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_124  [key=2, style=dotted];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_126  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_18  [key=2, style=dotted];
m4_120 -> m4_121  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_125  [key=2, style=dotted];
m4_117 -> m4_119  [key=1, style=dashed, color=darkseagreen4, label=gzipStream];
m4_121 -> m4_113  [key=0, style=bold, color=blue];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_20  [key=2, style=dotted];
m4_33 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=file];
m4_33 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=file];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_28 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>"];
m4_29 -> m4_30  [key=0, style=solid];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_17  [key=2, style=dotted];
m4_31 -> m4_18  [key=2, style=dotted];
m4_31 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label=stream];
m4_31 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=stream];
m4_31 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=stream];
m4_31 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=stream];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_40  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_30 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_48  [key=2, style=dotted];
m4_37 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label=sourceBytes];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_23  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_22  [key=2, style=dotted];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_25  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_45  [key=0, style=solid];
m4_41 -> m4_26  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_47  [key=2, style=dotted];
m4_35 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=file];
m4_35 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_36 -> m4_37  [key=0, style=solid];
m4_39 -> m4_36  [key=0, style=solid];
m4_39 -> m4_32  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> n137  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_46 -> m4_28  [key=0, style=bold, color=blue];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_352 -> m4_353  [key=0, style=solid];
m4_352 -> m4_148  [key=2, style=dotted];
m4_352 -> m4_358  [key=1, style=dashed, color=darkseagreen4, label=inStream];
m4_355 -> m4_356  [key=0, style=solid];
m4_355 -> m4_349  [key=2, style=dotted];
m4_353 -> m4_354  [key=0, style=solid];
m4_353 -> m4_125  [key=2, style=dotted];
m4_353 -> m4_357  [key=1, style=dashed, color=darkseagreen4, label=gzipStream];
m4_358 -> m4_359  [key=0, style=solid];
m4_358 -> m4_350  [key=2, style=dotted];
m4_354 -> m4_355  [key=0, style=solid];
m4_354 -> m4_348  [key=2, style=dotted];
m4_354 -> m4_356  [key=1, style=dashed, color=darkseagreen4, label=tarArchive];
m4_357 -> m4_358  [key=0, style=solid];
m4_357 -> m4_26  [key=2, style=dotted];
m4_356 -> m4_357  [key=0, style=solid];
m4_356 -> m4_26  [key=2, style=dotted];
m4_359 -> m4_351  [key=0, style=bold, color=blue];
m4_341 -> m4_342  [key=0, style=solid];
m4_341 -> m4_344  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_342 -> m4_343  [key=0, style=solid];
m4_342 -> m4_148  [key=2, style=dotted];
m4_342 -> m4_346  [key=1, style=dashed, color=darkseagreen4, label=inStream];
m4_344 -> m4_345  [key=0, style=solid];
m4_344 -> m4_349  [key=2, style=dotted];
m4_343 -> m4_344  [key=0, style=solid];
m4_343 -> m4_348  [key=2, style=dotted];
m4_343 -> m4_345  [key=1, style=dashed, color=darkseagreen4, label=tarArchive];
m4_346 -> m4_347  [key=0, style=solid];
m4_346 -> m4_350  [key=2, style=dotted];
m4_345 -> m4_346  [key=0, style=solid];
m4_345 -> m4_26  [key=2, style=dotted];
m4_347 -> m4_341  [key=0, style=bold, color=blue];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_20  [key=2, style=dotted];
m4_207 -> m4_154  [key=2, style=dotted];
m4_201 -> m4_202  [key=0, style=solid];
m4_201 -> m4_204  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m4_202 -> m4_203  [key=0, style=solid];
m4_202 -> m4_17  [key=2, style=dotted];
m4_202 -> m4_18  [key=2, style=dotted];
m4_202 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m4_202 -> m4_210  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_211  [key=0, style=solid];
m4_204 -> m4_213  [key=0, style=solid];
m4_204 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label=file];
m4_204 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label=file];
m4_204 -> m4_209  [key=1, style=dashed, color=darkseagreen4, label=file];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_210  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_22  [key=2, style=dotted];
m4_210 -> m4_204  [key=0, style=solid];
m4_210 -> m4_126  [key=2, style=dotted];
m4_205 -> m4_206  [key=0, style=solid];
m4_205 -> m4_207  [key=0, style=solid];
m4_205 -> m4_76  [key=2, style=dotted];
m4_211 -> m4_212  [key=0, style=solid];
m4_206 -> m4_204  [key=0, style=solid];
m4_206 -> m4_214  [key=2, style=dotted];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_148  [key=2, style=dotted];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> n137  [key=2, style=dotted];
m4_213 -> m4_201  [key=0, style=bold, color=blue];
m4_277 -> m4_278  [key=0, style=solid];
m4_277 -> m4_281  [key=0, style=solid];
m4_258 -> m4_276  [key=0, style=solid];
m4_258 -> m4_279  [key=0, style=bold, color=crimson];
m4_258 -> m4_280  [key=0, style=bold, color=crimson];
m4_258 -> m4_282  [key=0, style=bold, color=crimson];
m4_258 -> m4_277  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_77  [key=2, style=dotted];
m4_276 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label=zip];
m4_276 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=zip];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_264  [key=2, style=dotted];
m4_279 -> m4_265  [key=2, style=dotted];
m4_280 -> m4_281  [key=0, style=solid];
m4_282 -> m4_281  [key=0, style=solid];
m4_282 -> m4_264  [key=2, style=dotted];
m4_282 -> m4_265  [key=2, style=dotted];
m4_278 -> m4_279  [key=0, style=solid];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_283  [key=0, style=solid];
m4_283 -> m4_258  [key=0, style=bold, color=blue];
m4_366 -> m4_367  [key=0, style=solid];
m4_366 -> m4_370  [key=2, style=dotted];
m4_360 -> m4_361  [key=0, style=solid];
m4_360 -> m4_367  [key=0, style=bold, color=crimson];
m4_361 -> m4_362  [key=0, style=solid];
m4_361 -> m4_369  [key=2, style=dotted];
m4_361 -> m4_125  [key=2, style=dotted];
m4_361 -> m4_363  [key=1, style=dashed, color=darkseagreen4, label=tar];
m4_361 -> m4_366  [key=1, style=dashed, color=darkseagreen4, label=tar];
m4_367 -> m4_363  [key=0, style=solid];
m4_367 -> m4_371  [key=2, style=dotted];
m4_367 -> m4_372  [key=2, style=dotted];
m4_362 -> m4_363  [key=0, style=solid];
m4_363 -> m4_364  [key=0, style=solid];
m4_363 -> m4_368  [key=0, style=solid];
m4_363 -> m4_97  [key=2, style=dotted];
m4_363 -> m4_367  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_364 -> m4_365  [key=0, style=solid];
m4_364 -> m4_363  [key=0, style=solid];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_108  [key=2, style=dotted];
m4_365 -> m4_367  [key=1, style=dashed, color=darkseagreen4, label=output];
m4_368 -> m4_360  [key=0, style=bold, color=blue];
m4_324 -> m4_325  [key=0, style=solid];
m4_324 -> m4_338  [key=2, style=dotted];
m4_324 -> m4_328  [key=1, style=dashed, color=darkseagreen4, label=entryFileName];
m4_313 -> m4_314  [key=0, style=solid];
m4_313 -> m4_315  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_313 -> m4_318  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_313 -> m4_320  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_314 -> m4_315  [key=0, style=solid];
m4_314 -> m4_334  [key=2, style=dotted];
m4_314 -> m4_329  [key=1, style=dashed, color=darkseagreen4, label=files];
m4_314 -> m4_332  [key=1, style=dashed, color=darkseagreen4, label=files];
m4_315 -> m4_316  [key=0, style=solid];
m4_315 -> m4_335  [key=2, style=dotted];
m4_315 -> m4_317  [key=1, style=dashed, color=darkseagreen4, label=slash];
m4_315 -> m4_318  [key=1, style=dashed, color=darkseagreen4, label=slash];
m4_318 -> m4_319  [key=0, style=solid];
m4_318 -> m4_336  [key=2, style=dotted];
m4_318 -> m4_328  [key=1, style=dashed, color=darkseagreen4, label=outFolder];
m4_320 -> m4_321  [key=0, style=solid];
m4_320 -> m4_148  [key=2, style=dotted];
m4_329 -> m4_330  [key=0, style=solid];
m4_329 -> m4_340  [key=2, style=dotted];
m4_332 -> m4_333  [key=0, style=solid];
m4_316 -> m4_317  [key=0, style=solid];
m4_316 -> m4_328  [key=1, style=dashed, color=darkseagreen4, label=outFolder];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_319  [key=0, style=solid];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_123  [key=2, style=dotted];
m4_328 -> m4_330  [key=1, style=dashed, color=darkseagreen4, label=fullZipToPath];
m4_319 -> m4_320  [key=0, style=solid];
m4_321 -> m4_322  [key=0, style=solid];
m4_321 -> m4_337  [key=2, style=dotted];
m4_321 -> m4_327  [key=1, style=dashed, color=darkseagreen4, label=zf];
m4_322 -> m4_323  [key=0, style=solid];
m4_322 -> m4_332  [key=0, style=solid];
m4_322 -> m4_324  [key=1, style=dashed, color=darkseagreen4, label=zipEntry];
m4_322 -> m4_327  [key=1, style=dashed, color=darkseagreen4, label=zipEntry];
m4_327 -> m4_328  [key=0, style=solid];
m4_327 -> m4_339  [key=2, style=dotted];
m4_327 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m4_323 -> m4_324  [key=0, style=solid];
m4_323 -> m4_322  [key=0, style=solid];
m4_325 -> m4_326  [key=0, style=solid];
m4_325 -> m4_322  [key=0, style=solid];
m4_326 -> m4_327  [key=0, style=solid];
m4_326 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_331 -> m4_322  [key=0, style=solid];
m4_331 -> m4_126  [key=2, style=dotted];
m4_330 -> m4_331  [key=0, style=solid];
m4_330 -> m4_18  [key=2, style=dotted];
m4_333 -> m4_313  [key=0, style=bold, color=blue];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_238  [key=2, style=dotted];
m4_223 -> m4_244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_223 -> m4_226  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_221  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_218 -> m4_222  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_218 -> m4_223  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_218 -> m4_245  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_218 -> m4_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_218 -> m4_235  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_219 -> m4_220  [key=0, style=solid];
m4_219 -> m4_236  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_233  [key=0, style=solid];
m4_221 -> m4_76  [key=2, style=dotted];
m4_222 -> m4_223  [key=0, style=solid];
m4_222 -> m4_80  [key=2, style=dotted];
m4_222 -> m4_229  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m4_222 -> m4_230  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m4_222 -> m4_237  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_236  [key=0, style=solid];
m4_233 -> m4_243  [key=2, style=dotted];
m4_235 -> m4_236  [key=0, style=solid];
m4_235 -> n137  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_237  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m4_236 -> m4_237  [key=0, style=solid];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_231  [key=0, style=solid];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_241  [key=2, style=dotted];
m4_224 -> m4_225  [key=0, style=solid];
m4_224 -> m4_226  [key=0, style=solid];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_234  [key=0, style=solid];
m4_226 -> m4_236  [key=0, style=solid];
m4_226 -> m4_239  [key=2, style=dotted];
m4_226 -> m4_240  [key=2, style=dotted];
m4_226 -> m4_231  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_226 -> m4_232  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_225 -> m4_237  [key=0, style=solid];
m4_227 -> m4_228  [key=0, style=solid];
m4_234 -> m4_235  [key=0, style=solid];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_234  [key=0, style=solid];
m4_231 -> m4_236  [key=0, style=solid];
m4_232 -> m4_234  [key=0, style=solid];
m4_232 -> m4_236  [key=0, style=solid];
m4_232 -> m4_242  [key=2, style=dotted];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> n137  [key=2, style=dotted];
m4_237 -> m4_218  [key=0, style=bold, color=blue];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_168  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_166 -> m4_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_169  [key=0, style=solid];
m4_167 -> m4_76  [key=2, style=dotted];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_150  [key=2, style=dotted];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_175  [key=2, style=dotted];
m4_170 -> m4_174  [key=0, style=solid];
m4_171 -> m4_172  [key=0, style=solid];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> n137  [key=2, style=dotted];
m4_173 -> m4_174  [key=0, style=solid];
m4_174 -> m4_166  [key=0, style=bold, color=blue];
m4_262 -> m4_261  [key=0, style=solid];
m4_262 -> m4_264  [key=2, style=dotted];
m4_262 -> m4_265  [key=2, style=dotted];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_262  [key=0, style=bold, color=crimson];
m4_260 -> m4_261  [key=0, style=solid];
m4_260 -> m4_77  [key=2, style=dotted];
m4_261 -> m4_262  [key=0, style=solid];
m4_261 -> m4_263  [key=0, style=solid];
m4_263 -> m4_259  [key=0, style=bold, color=blue];
m4_151 -> m4_152  [key=0, style=solid];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_154  [key=2, style=dotted];
m4_152 -> m4_127  [key=2, style=dotted];
m4_153 -> m4_151  [key=0, style=bold, color=blue];
m4_215 -> m4_216  [key=0, style=solid];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_218  [key=2, style=dotted];
m4_217 -> m4_215  [key=0, style=bold, color=blue];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_248 -> m4_252  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_249 -> m4_250  [key=0, style=solid];
m4_249 -> m4_252  [key=0, style=solid];
m4_249 -> m4_76  [key=2, style=dotted];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_243  [key=2, style=dotted];
m4_252 -> m4_256  [key=0, style=solid];
m4_252 -> m4_258  [key=2, style=dotted];
m4_251 -> m4_256  [key=0, style=solid];
m4_251 -> m4_257  [key=2, style=dotted];
m4_253 -> m4_254  [key=0, style=solid];
m4_254 -> m4_255  [key=0, style=solid];
m4_254 -> n137  [key=2, style=dotted];
m4_255 -> m4_256  [key=0, style=solid];
m4_255 -> m4_257  [key=2, style=dotted];
m4_256 -> m4_248  [key=0, style=bold, color=blue];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_22  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_49 -> m4_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_17  [key=2, style=dotted];
m4_50 -> m4_18  [key=2, style=dotted];
m4_50 -> m4_53  [key=1, style=dashed, color=darkseagreen4, label=stream];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_20  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_56  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_61  [key=2, style=dotted];
m4_51 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label=writer];
m4_55 -> m4_54  [key=0, style=solid];
m4_55 -> m4_62  [key=2, style=dotted];
m4_56 -> m4_60  [key=0, style=solid];
m4_57 -> m4_58  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> n137  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_60 -> m4_49  [key=0, style=bold, color=blue];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_133  [key=2, style=dotted];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_129  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_132  [key=2, style=dotted];
m4_128 -> m4_130  [key=1, style=dashed, color=darkseagreen4, label=zipPath];
m4_130 -> m4_131  [key=0, style=solid];
m4_131 -> m4_127  [key=0, style=bold, color=blue];
m4_382 -> m4_383  [key=0, style=solid];
m4_382 -> m4_381  [key=0, style=solid];
m4_373 -> m4_374  [key=0, style=solid];
m4_373 -> m4_385  [key=0, style=bold, color=crimson];
m4_373 -> m4_375  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_374 -> m4_375  [key=0, style=solid];
m4_374 -> m4_388  [key=2, style=dotted];
m4_374 -> m4_389  [key=2, style=dotted];
m4_374 -> m4_377  [key=1, style=dashed, color=darkseagreen4, label=gzip];
m4_385 -> m4_381  [key=0, style=solid];
m4_385 -> m4_371  [key=2, style=dotted];
m4_385 -> m4_372  [key=2, style=dotted];
m4_375 -> m4_376  [key=0, style=solid];
m4_375 -> m4_148  [key=2, style=dotted];
m4_375 -> m4_378  [key=1, style=dashed, color=darkseagreen4, label=file];
m4_377 -> m4_378  [key=0, style=solid];
m4_377 -> m4_380  [key=0, style=solid];
m4_376 -> m4_377  [key=0, style=solid];
m4_376 -> m4_369  [key=2, style=dotted];
m4_376 -> m4_381  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m4_376 -> m4_384  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m4_376 -> m4_386  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m4_378 -> m4_379  [key=0, style=solid];
m4_378 -> m4_125  [key=2, style=dotted];
m4_381 -> m4_382  [key=0, style=solid];
m4_381 -> m4_386  [key=0, style=solid];
m4_381 -> m4_97  [key=2, style=dotted];
m4_381 -> m4_385  [key=1, style=dashed, color=darkseagreen4, label=tarEntry];
m4_384 -> m4_385  [key=0, style=solid];
m4_384 -> m4_370  [key=2, style=dotted];
m4_386 -> m4_387  [key=0, style=solid];
m4_386 -> m4_26  [key=2, style=dotted];
m4_380 -> m4_381  [key=0, style=solid];
m4_379 -> m4_380  [key=0, style=solid];
m4_379 -> m4_369  [key=2, style=dotted];
m4_379 -> m4_381  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m4_379 -> m4_384  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m4_379 -> m4_386  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m4_383 -> m4_384  [key=0, style=solid];
m4_383 -> m4_108  [key=2, style=dotted];
m4_383 -> m4_385  [key=1, style=dashed, color=darkseagreen4, label=stream];
m4_387 -> m4_373  [key=0, style=bold, color=blue];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_78  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_63 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_63 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_63 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_68  [key=0, style=solid];
m4_64 -> m4_76  [key=2, style=dotted];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_77  [key=2, style=dotted];
m4_65 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label=zip];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_78  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_80  [key=2, style=dotted];
m4_68 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=zip];
m4_67 -> m4_71  [key=0, style=solid];
m4_67 -> m4_74  [key=0, style=solid];
m4_67 -> m4_79  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_74  [key=0, style=solid];
m4_70 -> m4_79  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> n137  [key=2, style=dotted];
m4_73 -> m4_75  [key=0, style=solid];
m4_75 -> m4_63  [key=0, style=bold, color=blue];
m4_400 -> m4_245  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_85 -> m5_86  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_86 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=underlyingPrice];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> n0  [key=2, style=dotted];
m5_92 -> m5_43  [key=2, style=dotted];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_44  [key=2, style=dotted];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label=tz];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> n0  [key=2, style=dotted];
m5_90 -> m5_43  [key=2, style=dotted];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_40  [key=2, style=dotted];
m5_89 -> m5_9  [key=2, style=dotted];
m5_89 -> m5_10  [key=2, style=dotted];
m5_89 -> m5_11  [key=2, style=dotted];
m5_89 -> m5_41  [key=2, style=dotted];
m5_89 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_8  [key=2, style=dotted];
m5_91 -> m5_9  [key=2, style=dotted];
m5_91 -> m5_10  [key=2, style=dotted];
m5_91 -> m5_11  [key=2, style=dotted];
m5_91 -> m5_12  [key=2, style=dotted];
m5_91 -> m5_13  [key=2, style=dotted];
m5_91 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_91 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_91 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_93 -> m5_94  [key=0, style=solid];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_45  [key=2, style=dotted];
m5_96 -> m5_16  [key=2, style=dotted];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_14  [key=2, style=dotted];
m5_97 -> m5_85  [key=0, style=bold, color=blue];
m5_18 -> m5_19  [key=0, style=solid, color=red];
m5_19 -> m5_20  [key=0, style=solid, color=red];
m5_19 -> m5_21  [key=2, style=dotted, color=red];
m5_20 -> m5_18  [key=0, style=bold, color=blue];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_23 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label=underlyingPrice];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> n0  [key=2, style=dotted];
m5_29 -> m5_43  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> n0  [key=2, style=dotted];
m5_33 -> m5_43  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=tz];
m5_25 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=tz];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> n0  [key=2, style=dotted];
m5_27 -> m5_43  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_40  [key=2, style=dotted];
m5_26 -> m5_9  [key=2, style=dotted];
m5_26 -> m5_10  [key=2, style=dotted];
m5_26 -> m5_11  [key=2, style=dotted];
m5_26 -> m5_41  [key=2, style=dotted];
m5_26 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_26 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_8  [key=2, style=dotted];
m5_28 -> m5_9  [key=2, style=dotted];
m5_28 -> m5_10  [key=2, style=dotted];
m5_28 -> m5_11  [key=2, style=dotted];
m5_28 -> m5_12  [key=2, style=dotted];
m5_28 -> m5_13  [key=2, style=dotted];
m5_28 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_28 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_28 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_8  [key=2, style=dotted];
m5_32 -> m5_9  [key=2, style=dotted];
m5_32 -> m5_10  [key=2, style=dotted];
m5_32 -> m5_11  [key=2, style=dotted];
m5_32 -> m5_12  [key=2, style=dotted];
m5_32 -> m5_13  [key=2, style=dotted];
m5_32 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_32 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_32 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_30 -> m5_31  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_44  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_45  [key=2, style=dotted];
m5_37 -> m5_16  [key=2, style=dotted];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_44  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_45  [key=2, style=dotted];
m5_38 -> m5_16  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_14  [key=2, style=dotted];
m5_36 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=marginModel];
m5_39 -> m5_22  [key=0, style=bold, color=blue];
m5_72 -> m5_73  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_73 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=underlyingPrice];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> n0  [key=2, style=dotted];
m5_79 -> m5_43  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_44  [key=2, style=dotted];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label=tz];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> n0  [key=2, style=dotted];
m5_77 -> m5_43  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_40  [key=2, style=dotted];
m5_76 -> m5_9  [key=2, style=dotted];
m5_76 -> m5_10  [key=2, style=dotted];
m5_76 -> m5_11  [key=2, style=dotted];
m5_76 -> m5_41  [key=2, style=dotted];
m5_76 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_8  [key=2, style=dotted];
m5_78 -> m5_9  [key=2, style=dotted];
m5_78 -> m5_10  [key=2, style=dotted];
m5_78 -> m5_11  [key=2, style=dotted];
m5_78 -> m5_12  [key=2, style=dotted];
m5_78 -> m5_13  [key=2, style=dotted];
m5_78 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_78 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_78 -> m5_83  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_80 -> m5_81  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_45  [key=2, style=dotted];
m5_83 -> m5_16  [key=2, style=dotted];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_14  [key=2, style=dotted];
m5_84 -> m5_72  [key=0, style=bold, color=blue];
m5_59 -> m5_60  [key=0, style=solid];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_60 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=underlyingPrice];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> n0  [key=2, style=dotted];
m5_66 -> m5_43  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_44  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label=tz];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> n0  [key=2, style=dotted];
m5_64 -> m5_43  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_40  [key=2, style=dotted];
m5_63 -> m5_9  [key=2, style=dotted];
m5_63 -> m5_10  [key=2, style=dotted];
m5_63 -> m5_11  [key=2, style=dotted];
m5_63 -> m5_41  [key=2, style=dotted];
m5_63 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_8  [key=2, style=dotted];
m5_65 -> m5_9  [key=2, style=dotted];
m5_65 -> m5_10  [key=2, style=dotted];
m5_65 -> m5_11  [key=2, style=dotted];
m5_65 -> m5_12  [key=2, style=dotted];
m5_65 -> m5_13  [key=2, style=dotted];
m5_65 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_65 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_65 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_67 -> m5_68  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_45  [key=2, style=dotted];
m5_70 -> m5_16  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_14  [key=2, style=dotted];
m5_71 -> m5_59  [key=0, style=bold, color=blue];
m5_98 -> m5_99  [key=0, style=solid];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_106  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_99 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_103  [key=1, style=dashed, color=darkseagreen4, label=underlyingPrice];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> n0  [key=2, style=dotted];
m5_106 -> m5_43  [key=2, style=dotted];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_44  [key=2, style=dotted];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label=tz];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> n0  [key=2, style=dotted];
m5_103 -> m5_43  [key=2, style=dotted];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_40  [key=2, style=dotted];
m5_102 -> m5_9  [key=2, style=dotted];
m5_102 -> m5_10  [key=2, style=dotted];
m5_102 -> m5_11  [key=2, style=dotted];
m5_102 -> m5_41  [key=2, style=dotted];
m5_102 -> m5_107  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_8  [key=2, style=dotted];
m5_105 -> m5_9  [key=2, style=dotted];
m5_105 -> m5_10  [key=2, style=dotted];
m5_105 -> m5_11  [key=2, style=dotted];
m5_105 -> m5_12  [key=2, style=dotted];
m5_105 -> m5_13  [key=2, style=dotted];
m5_105 -> m5_107  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_105 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_105 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_107 -> m5_108  [key=0, style=solid];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_112  [key=2, style=dotted];
m5_104 -> m5_113  [key=2, style=dotted];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_45  [key=2, style=dotted];
m5_110 -> m5_16  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_14  [key=2, style=dotted];
m5_111 -> m5_98  [key=0, style=bold, color=blue];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_22  [key=3, color=green, style=bold, label="Property variable System.Collections.Concurrent.ConcurrentQueue<QuantConnect.Data.BaseData> Queue"];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_47 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=price];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label=underlyingPrice];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> n0  [key=2, style=dotted];
m5_53 -> m5_43  [key=2, style=dotted];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_44  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label=tz];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> n0  [key=2, style=dotted];
m5_51 -> m5_43  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_40  [key=2, style=dotted];
m5_50 -> m5_9  [key=2, style=dotted];
m5_50 -> m5_10  [key=2, style=dotted];
m5_50 -> m5_11  [key=2, style=dotted];
m5_50 -> m5_41  [key=2, style=dotted];
m5_50 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_8  [key=2, style=dotted];
m5_52 -> m5_9  [key=2, style=dotted];
m5_52 -> m5_10  [key=2, style=dotted];
m5_52 -> m5_11  [key=2, style=dotted];
m5_52 -> m5_12  [key=2, style=dotted];
m5_52 -> m5_13  [key=2, style=dotted];
m5_52 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_52 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_52 -> m5_57  [key=1, style=dashed, color=darkseagreen4, label=optionCall];
m5_54 -> m5_55  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_45  [key=2, style=dotted];
m5_57 -> m5_16  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_14  [key=2, style=dotted];
m5_58 -> m5_46  [key=0, style=bold, color=blue];
m5_114 -> m5_115  [key=0, style=solid];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_124  [key=1, style=dashed, color=darkseagreen4, label=optionPriceStart];
m5_115 -> m5_126  [key=1, style=dashed, color=darkseagreen4, label=optionPriceStart];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label=underlyingPriceStart];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> n0  [key=2, style=dotted];
m5_124 -> m5_43  [key=2, style=dotted];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_44  [key=2, style=dotted];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_130  [key=1, style=dashed, color=darkseagreen4, label=optionPriceEnd];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> n0  [key=2, style=dotted];
m5_121 -> m5_43  [key=2, style=dotted];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_129  [key=1, style=dashed, color=darkseagreen4, label=underlyingPriceEnd];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> n0  [key=2, style=dotted];
m5_130 -> m5_43  [key=2, style=dotted];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label=tz];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> n0  [key=2, style=dotted];
m5_129 -> m5_43  [key=2, style=dotted];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_40  [key=2, style=dotted];
m5_120 -> m5_9  [key=2, style=dotted];
m5_120 -> m5_10  [key=2, style=dotted];
m5_120 -> m5_11  [key=2, style=dotted];
m5_120 -> m5_41  [key=2, style=dotted];
m5_120 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_120 -> m5_129  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_8  [key=2, style=dotted];
m5_123 -> m5_9  [key=2, style=dotted];
m5_123 -> m5_10  [key=2, style=dotted];
m5_123 -> m5_11  [key=2, style=dotted];
m5_123 -> m5_12  [key=2, style=dotted];
m5_123 -> m5_13  [key=2, style=dotted];
m5_123 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_123 -> m5_126  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_123 -> m5_128  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_123 -> m5_130  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_123 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label=optionPut];
m5_125 -> m5_126  [key=0, style=solid];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_112  [key=2, style=dotted];
m5_122 -> m5_113  [key=2, style=dotted];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_45  [key=2, style=dotted];
m5_128 -> m5_16  [key=2, style=dotted];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_45  [key=2, style=dotted];
m5_131 -> m5_16  [key=2, style=dotted];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_14  [key=2, style=dotted];
m5_127 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label=marginModel];
m5_132 -> m5_114  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_8  [key=2, style=dotted];
m5_2 -> m5_9  [key=2, style=dotted];
m5_2 -> m5_10  [key=2, style=dotted];
m5_2 -> m5_11  [key=2, style=dotted];
m5_2 -> m5_12  [key=2, style=dotted];
m5_2 -> m5_13  [key=2, style=dotted];
m5_2 -> m5_4  [key=1, style=dashed, color=green, label=option];
m5_2 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=option];
m5_2 -> m5_19  [key=1, style=dashed, color=red, label=option];
m5_2 -> m5_6  [key=1, style=dashed, color=red, label=option];
m5_3 -> m5_4  [key=0, style=solid, color=green];
m5_3 -> m5_14  [key=2, style=dotted];
m5_3 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=marginModel];
m5_3 -> m5_19  [key=1, style=dashed, color=red, label=marginModel];
m5_3 -> m5_6  [key=1, style=dashed, color=red, label=marginModel];
m5_4 -> m5_5  [key=0, style=solid, color=green];
m5_4 -> m5_15  [key=2, style=dotted, color=green];
m5_4 -> m5_16  [key=2, style=dotted, color=green];
m5_4 -> m5_7  [key=0, style=solid, color=green];
m5_5 -> m5_6  [key=0, style=solid, color=red];
m5_5 -> m5_17  [key=2, style=dotted, color=red];
m5_5 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_5 -> m5_4  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid, color=red];
m5_6 -> m5_15  [key=2, style=dotted, color=red];
m5_6 -> m5_16  [key=2, style=dotted, color=red];
m5_7 -> m5_0  [key=0, style=bold, color=blue];
m5_133 -> m5_19  [key=1, style=dashed, color=red, label=option];
m5_134 -> m5_19  [key=1, style=dashed, color=red, label=marginModel];
m6_182 -> m6_183  [key=0, style=solid];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_185  [key=2, style=dotted];
m6_184 -> m6_182  [key=0, style=bold, color=blue];
m6_56 -> m6_198  [key=0, style=solid];
m6_56 -> m6_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m6_56 -> m6_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m6_56 -> m6_45  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderEvent e"];
m6_56 -> m6_70  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderEvent e"];
m6_56 -> m6_86  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderEvent e"];
m6_56 -> m6_144  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderEvent e"];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_200  [key=0, style=solid];
m6_198 -> m6_156  [key=2, style=dotted];
m6_198 -> m6_194  [key=2, style=dotted];
m6_199 -> m6_200  [key=0, style=solid];
m6_199 -> m6_202  [key=2, style=dotted];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_203  [key=2, style=dotted];
m6_201 -> m6_56  [key=0, style=bold, color=blue];
m6_179 -> m6_180  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
m6_26 -> m6_24  [key=0, style=bold, color=blue];
m6_31 -> m6_32  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>"];
m6_33 -> m6_31  [key=0, style=bold, color=blue];
m6_176 -> m6_177  [key=0, style=solid];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m6_178 -> m6_176  [key=0, style=bold, color=blue];
m6_180 -> m6_181  [key=0, style=solid];
m6_180 -> m6_156  [key=2, style=dotted];
m6_181 -> m6_179  [key=0, style=bold, color=blue];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_34 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_34 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_34 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_34 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_34 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_34 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_34 -> m6_48  [key=3, color=darkorchid, style=bold, label="method methodReturn bool PlaceOrder"];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_37  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_50  [key=2, style=dotted];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_48  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_51  [key=2, style=dotted];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_52  [key=2, style=dotted];
m6_41 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label=orderId];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_44  [key=0, style=solid];
m6_42 -> m6_53  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_54  [key=2, style=dotted];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_55  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_48 -> m6_49  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_44  [key=3, color=darkorchid, style=bold, label="Local variable int orderFee"];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_56  [key=2, style=dotted];
m6_47 -> m6_49  [key=0, style=solid];
m6_49 -> m6_34  [key=0, style=bold, color=blue];
m6_27 -> m6_28  [key=0, style=solid];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=2, style=dotted];
m6_28 -> m6_23  [key=2, style=dotted];
m6_28 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_29 -> m6_27  [key=0, style=bold, color=blue];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_4  [key=2, style=dotted];
m6_8 -> m6_5  [key=0, style=bold, color=blue];
m6_14 -> m6_15  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [key=2, style=dotted];
m6_16 -> m6_14  [key=0, style=bold, color=blue];
m6_91 -> m6_92  [key=0, style=solid];
m6_92 -> m6_93  [key=0, style=solid];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_95  [key=0, style=solid];
m6_94 -> m6_154  [key=0, style=solid];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
m6_95 -> m6_48  [key=3, color=darkorchid, style=bold, label="Local variable bool stillNeedsScan"];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_153  [key=0, style=solid];
m6_96 -> m6_21  [key=2, style=dotted];
m6_96 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_153 -> m6_154  [key=0, style=solid];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_97  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m6_97 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m6_97 -> m6_101  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_142  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_143  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_97 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_101  [key=0, style=solid];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_155  [key=2, style=dotted];
m6_99 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_103  [key=0, style=solid];
m6_101 -> m6_156  [key=2, style=dotted];
m6_102 -> m6_96  [key=0, style=solid];
m6_102 -> m6_90  [key=2, style=dotted];
m6_102 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_142  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_143  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_102 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_105  [key=0, style=solid];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_55  [key=2, style=dotted];
m6_105 -> m6_144  [key=1, style=dashed, color=darkseagreen4, label=fills];
m6_105 -> m6_150  [key=1, style=dashed, color=darkseagreen4, label=fills];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_111  [key=0, style=solid];
m6_107 -> m6_157  [key=2, style=dotted];
m6_107 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=security];
m6_107 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label=security];
m6_107 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=security];
m6_107 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=security];
m6_107 -> m6_129  [key=1, style=dashed, color=darkseagreen4, label=security];
m6_107 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label=security];
m6_107 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label=security];
m6_107 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label=security];
m6_107 -> m6_137  [key=1, style=dashed, color=darkseagreen4, label=security];
m6_107 -> m6_143  [key=1, style=dashed, color=darkseagreen4, label=security];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_155  [key=2, style=dotted];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_55  [key=2, style=dotted];
m6_109 -> m6_56  [key=2, style=dotted];
m6_110 -> m6_96  [key=0, style=solid];
m6_110 -> m6_90  [key=2, style=dotted];
m6_110 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_142  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_143  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_110 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_96  [key=0, style=solid];
m6_111 -> m6_158  [key=2, style=dotted];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_121  [key=0, style=solid];
m6_113 -> m6_159  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_90  [key=2, style=dotted];
m6_117 -> m6_118  [key=0, style=solid];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_55  [key=2, style=dotted];
m6_118 -> m6_56  [key=2, style=dotted];
m6_120 -> m6_96  [key=0, style=solid];
m6_120 -> m6_161  [key=2, style=dotted];
m6_120 -> m6_162  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_126  [key=0, style=solid];
m6_123 -> m6_128  [key=0, style=solid];
m6_123 -> m6_130  [key=0, style=solid];
m6_123 -> m6_132  [key=0, style=solid];
m6_123 -> m6_134  [key=0, style=solid];
m6_123 -> m6_136  [key=0, style=solid];
m6_125 -> m6_139  [key=0, style=solid];
m6_125 -> m6_144  [key=0, style=solid];
m6_125 -> m6_163  [key=2, style=dotted];
m6_127 -> m6_139  [key=0, style=solid];
m6_127 -> m6_144  [key=0, style=solid];
m6_127 -> m6_164  [key=2, style=dotted];
m6_129 -> m6_139  [key=0, style=solid];
m6_129 -> m6_144  [key=0, style=solid];
m6_129 -> m6_165  [key=2, style=dotted];
m6_131 -> m6_139  [key=0, style=solid];
m6_131 -> m6_144  [key=0, style=solid];
m6_131 -> m6_166  [key=2, style=dotted];
m6_133 -> m6_139  [key=0, style=solid];
m6_133 -> m6_144  [key=0, style=solid];
m6_133 -> m6_167  [key=2, style=dotted];
m6_135 -> m6_139  [key=0, style=solid];
m6_135 -> m6_144  [key=0, style=solid];
m6_135 -> m6_168  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_144  [key=0, style=solid];
m6_138 -> m6_169  [key=2, style=dotted];
m6_138 -> m6_170  [key=2, style=dotted];
m6_138 -> m6_150  [key=1, style=dashed, color=darkseagreen4, label=fills];
m6_141 -> m6_144  [key=0, style=solid];
m6_141 -> m6_171  [key=2, style=dotted];
m6_141 -> m6_162  [key=2, style=dotted];
m6_142 -> m6_143  [key=0, style=solid];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_172  [key=2, style=dotted];
m6_143 -> m6_173  [key=2, style=dotted];
m6_143 -> m6_161  [key=2, style=dotted];
m6_143 -> m6_162  [key=2, style=dotted];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_147  [key=0, style=solid];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_144  [key=0, style=solid];
m6_148 -> m6_149  [key=0, style=solid];
m6_151 -> m6_96  [key=0, style=solid];
m6_151 -> m6_90  [key=2, style=dotted];
m6_151 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_96  [key=0, style=solid];
m6_100 -> m6_90  [key=2, style=dotted];
m6_100 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m6_100 -> m6_101  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_142  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_143  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_100 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_104 -> m6_96  [key=0, style=solid];
m6_104 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
m6_106 -> m6_107  [key=0, style=solid];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_150  [key=0, style=solid];
m6_144 -> m6_146  [key=1, style=dashed, color=darkseagreen4, label=fill];
m6_144 -> m6_148  [key=1, style=dashed, color=darkseagreen4, label=fill];
m6_144 -> m6_149  [key=1, style=dashed, color=darkseagreen4, label=fill];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_152  [key=0, style=solid];
m6_150 -> m6_175  [key=2, style=dotted];
m6_150 -> m6_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=model];
m6_122 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=model];
m6_122 -> m6_129  [key=1, style=dashed, color=darkseagreen4, label=model];
m6_122 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label=model];
m6_122 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label=model];
m6_122 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label=model];
m6_137 -> m6_138  [key=0, style=solid];
m6_112 -> m6_113  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_142  [key=0, style=solid];
m6_115 -> m6_116  [key=0, style=solid];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> n137  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_126 -> m6_127  [key=0, style=solid];
m6_128 -> m6_129  [key=0, style=solid];
m6_130 -> m6_131  [key=0, style=solid];
m6_132 -> m6_133  [key=0, style=solid];
m6_134 -> m6_135  [key=0, style=solid];
m6_136 -> m6_137  [key=0, style=solid];
m6_139 -> m6_140  [key=0, style=solid];
m6_140 -> m6_141  [key=0, style=solid];
m6_140 -> n137  [key=2, style=dotted];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_56  [key=2, style=dotted];
m6_149 -> m6_144  [key=0, style=solid];
m6_149 -> m6_174  [key=2, style=dotted];
m6_152 -> m6_96  [key=0, style=solid];
m6_152 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
m6_154 -> m6_91  [key=0, style=bold, color=blue];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation"];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_4  [key=2, style=dotted];
m6_13 -> m6_9  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_4  [key=2, style=dotted];
m6_3 -> m6_0  [key=0, style=bold, color=blue];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_57 -> m6_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_57 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_57 -> m6_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_57 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_57 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_57 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_57 -> m6_48  [key=3, color=darkorchid, style=bold, label="method methodReturn bool UpdateOrder"];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_60  [key=0, style=solid];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_50  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_64  [key=0, style=solid];
m6_62 -> m6_74  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_51  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_52  [key=2, style=dotted];
m6_66 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=orderId];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_69  [key=0, style=solid];
m6_67 -> m6_53  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_54  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_55  [key=2, style=dotted];
m6_60 -> m6_61  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid];
m6_63 -> m6_73  [key=0, style=solid];
m6_64 -> m6_65  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_44  [key=3, color=darkorchid, style=bold, label="Local variable int orderFee"];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_56  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_73 -> m6_57  [key=0, style=bold, color=blue];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
m6_186 -> m6_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_189  [key=0, style=solid];
m6_187 -> m6_194  [key=2, style=dotted];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_195  [key=2, style=dotted];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_196  [key=2, style=dotted];
m6_188 -> m6_193  [key=0, style=solid];
m6_191 -> m6_192  [key=0, style=solid];
m6_191 -> m6_197  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_50  [key=2, style=dotted];
m6_193 -> m6_186  [key=0, style=bold, color=blue];
m6_204 -> m6_205  [key=0, style=solid];
m6_205 -> m6_204  [key=0, style=bold, color=blue];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_75 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_75 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_75 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_75 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_75 -> m6_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_75 -> m6_48  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CancelOrder"];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_78  [key=0, style=solid];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_50  [key=2, style=dotted];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_82  [key=0, style=solid];
m6_80 -> m6_90  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_52  [key=2, style=dotted];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_85  [key=0, style=solid];
m6_83 -> m6_53  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_52  [key=2, style=dotted];
m6_84 -> m6_54  [key=2, style=dotted];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_55  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_79 -> m6_80  [key=0, style=solid];
m6_81 -> m6_89  [key=0, style=solid];
m6_85 -> m6_86  [key=0, style=solid];
m6_85 -> m6_44  [key=3, color=darkorchid, style=bold, label="Local variable int orderFee"];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_56  [key=2, style=dotted];
m6_88 -> m6_89  [key=0, style=solid];
m6_89 -> m6_75  [key=0, style=bold, color=blue];
m6_206 -> m6_207  [key=0, style=solid];
m6_207 -> m6_206  [key=0, style=bold, color=blue];
m6_51 -> m6_208  [key=0, style=solid];
m6_51 -> m6_34  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m6_51 -> m6_57  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_210  [key=2, style=dotted];
m6_209 -> m6_51  [key=0, style=bold, color=blue];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=2, style=dotted];
m6_19 -> m6_22  [key=2, style=dotted];
m6_19 -> m6_23  [key=2, style=dotted];
m6_19 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_19 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m6_20 -> m6_18  [key=0, style=bold, color=blue];
m6_211 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m6_211 -> m6_208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m8_98 -> m8_73  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Symbol> symbols"];
m8_98 -> m8_99  [key=0, style=solid];
m8_99 -> m8_98  [key=0, style=bold, color=blue];
m8_31 -> m8_32  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_35 -> m8_36  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_57  [key=0, style=solid];
m8_36 -> m8_59  [key=0, style=solid];
m8_38 -> m8_39  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label=elapsed];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_44  [key=0, style=solid];
m8_40 -> m8_60  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_43 -> m8_56  [key=0, style=solid];
m8_43 -> m8_62  [key=2, style=dotted];
m8_43 -> m8_63  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_56  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_48 -> m8_54  [key=0, style=solid];
m8_48 -> m8_56  [key=0, style=solid];
m8_48 -> m8_64  [key=2, style=dotted];
m8_48 -> m8_63  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_54  [key=0, style=solid];
m8_50 -> m8_56  [key=0, style=solid];
m8_50 -> m8_65  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_88 -> m8_89  [key=0, style=solid];
m8_28 -> m8_29  [key=0, style=solid];
m8_30 -> m8_28  [key=0, style=bold, color=blue];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> n137  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> n137  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label=nextReconnectionAttemptSeconds];
m8_33 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label=nextReconnectionAttemptSeconds];
m8_56 -> m8_36  [key=0, style=solid];
m8_56 -> m8_27  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid];
m8_57 -> m8_58  [key=0, style=solid];
m8_59 -> m8_31  [key=0, style=bold, color=blue];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_49  [key=0, style=solid];
m8_45 -> m8_60  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_61  [key=2, style=dotted];
m8_47 -> m8_48  [key=0, style=solid];
m8_54 -> m8_55  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_56  [key=0, style=solid];
m8_49 -> m8_54  [key=0, style=solid];
m8_51 -> m8_52  [key=0, style=solid];
m8_84 -> m8_85  [key=0, style=solid];
m8_86 -> m8_84  [key=0, style=bold, color=blue];
m8_87 -> m8_88  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label=nextReconnectionAttemptUtcTime];
m8_52 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label=nextReconnectionAttemptSeconds];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_66  [key=2, style=dotted];
m8_53 -> m8_56  [key=0, style=solid];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_61  [key=2, style=dotted];
m8_89 -> m8_87  [key=0, style=bold, color=blue];
m8_82 -> m8_100  [key=0, style=solid];
m8_101 -> m8_102  [key=0, style=solid];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_104  [key=0, style=solid];
m8_103 -> m8_102  [key=0, style=solid];
m8_103 -> m8_103  [key=1, style=dashed, color=darkseagreen4, label=item];
m8_103 -> m8_107  [key=2, style=dotted];
m8_103 -> m8_108  [key=2, style=dotted];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_103  [key=1, style=dashed, color=darkseagreen4, label=list];
m8_100 -> m8_106  [key=2, style=dotted];
m8_100 -> m8_104  [key=1, style=dashed, color=darkseagreen4, label=list];
m8_104 -> m8_105  [key=0, style=solid];
m8_105 -> m8_82  [key=0, style=bold, color=blue];
m8_11 -> m8_12  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_22  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_23  [key=2, style=dotted];
m8_15 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_24  [key=2, style=dotted];
m8_17 -> m8_12  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Exception exception"];
m8_17 -> m8_17  [key=3, color=darkorchid, style=bold, label="Local variable double nextReconnectionAttemptSeconds"];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_25  [key=2, style=dotted];
m8_17 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label=exception];
m8_17 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=exception];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_26  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_21  [key=0, style=solid];
m8_20 -> m8_19  [key=0, style=solid];
m8_20 -> m8_27  [key=2, style=dotted];
m8_21 -> m8_11  [key=0, style=bold, color=blue];
m8_65 -> m8_73  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_82  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_78  [key=0, style=solid];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_83  [key=2, style=dotted];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_23  [key=2, style=dotted];
m8_77 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_81  [key=0, style=solid];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_22  [key=2, style=dotted];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_23  [key=2, style=dotted];
m8_80 -> m8_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_81 -> m8_65  [key=0, style=bold, color=blue];
m8_23 -> m8_15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<bool> state"];
m8_23 -> m8_77  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<bool> state"];
m8_23 -> m8_80  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<bool> state"];
m8_23 -> m8_90  [key=0, style=solid];
m8_23 -> m8_91  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_23 -> m8_94  [key=1, style=dashed, color=darkseagreen4, label="System.Func<bool>"];
m8_90 -> m8_91  [key=0, style=solid];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_93  [key=0, style=solid];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_90  [key=0, style=solid];
m8_94 -> m8_97  [key=2, style=dotted];
m8_92 -> m8_95  [key=0, style=solid];
m8_92 -> m8_96  [key=2, style=dotted];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_27  [key=2, style=dotted];
m8_95 -> m8_23  [key=0, style=bold, color=blue];
m8_0 -> m8_5  [key=1, style=dashed, color=green, label=string];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_0 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label=IRestClient];
m8_0 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_0 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_5 -> m8_6  [key=0, style=solid, color=green];
m8_4 -> m8_5  [key=0, style=solid, color=green];
m8_6 -> m8_7  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_8  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_7 -> m8_0  [key=0, style=bold, color=blue];
m8_109 -> m8_5  [key=1, style=dashed, color=green, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m8_109 -> m8_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BaseWebsocketsBrokerage"];
m10_22 -> m10_42  [key=2, style=dotted];
m10_22 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=dropboxUniverseSelectionStatistics];
m10_22 -> m10_22  [key=3, color=darkorchid, style=bold, label="Local variable decimal lowPrice"];
m10_22 -> m10_23  [key=0, style=solid];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_60  [key=0, style=solid];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_33 -> m10_42  [key=2, style=dotted];
m10_33 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=optionExerciseAssignRegressionAlgorithmStatistics];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_38  [key=2, style=dotted];
m10_34 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerageFactory"];
m10_34 -> m10_42  [key=2, style=dotted];
m10_34 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=basicTemplateDailyStatistics];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_40  [key=2, style=dotted];
m10_36 -> m10_42  [key=2, style=dotted];
m10_36 -> m10_19  [key=3, color=darkorchid, style=bold, label="Local variable decimal buyPrice"];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_39  [key=2, style=dotted];
m10_35 -> m10_42  [key=2, style=dotted];
m10_35 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=hourSplitStatistics];
m10_35 -> m10_19  [key=3, color=darkorchid, style=bold, label="Local variable int amount"];
m10_35 -> m10_22  [key=3, color=darkorchid, style=bold, label="Local variable decimal leverage"];
m10_35 -> m10_35  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m10_37 -> m10_33  [key=0, style=bold, color=blue];
m10_37 -> m10_42  [key=2, style=dotted];
m10_37 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=fractionalQuantityRegressionStatistics];
m10_37 -> m10_22  [key=3, color=darkorchid, style=bold, label="Local variable decimal lowPrice"];
m10_37 -> m10_38  [key=0, style=solid];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_71  [key=2, style=dotted];
m10_28 -> m10_42  [key=2, style=dotted];
m10_28 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=optionSplitRegressionAlgorithmStatistics];
m10_28 -> m10_29  [key=0, style=solid];
m10_29 -> m10_30  [key=0, style=solid, color=red];
m10_29 -> m10_42  [key=2, style=dotted];
m10_29 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=optionRenameRegressionAlgorithmStatistics];
m10_26 -> m10_27  [key=0, style=solid, color=red];
m10_26 -> m10_28  [key=2, style=dotted, color=red];
m10_26 -> m10_29  [key=1, style=dashed, color=red, label="lambda expression"];
m10_26 -> m10_42  [key=2, style=dotted];
m10_26 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=coarseFineFundamentalRegressionAlgorithmStatistics];
m10_30 -> m10_31  [key=0, style=solid, color=red];
m10_30 -> m10_32  [key=2, style=dotted, color=red];
m10_30 -> m10_42  [key=2, style=dotted];
m10_30 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=optionOpenInterestRegressionAlgorithmStatistics];
m10_25 -> m10_26  [key=0, style=solid, color=red];
m10_25 -> m10_42  [key=2, style=dotted];
m10_25 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=coarseFundamentalTop5AlgorithmStatistics];
m10_27 -> m10_25  [key=0, style=bold, color=blue];
m10_27 -> m10_42  [key=2, style=dotted];
m10_27 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=macdTrendAlgorithmStatistics];
m10_27 -> m10_28  [key=0, style=solid];
m10_31 -> m10_29  [key=0, style=bold, color=blue];
m10_31 -> m10_42  [key=2, style=dotted];
m10_31 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=optionChainConsistencyRegressionAlgorithmStatistics];
m10_31 -> m10_32  [key=0, style=solid];
m10_24 -> m10_42  [key=2, style=dotted];
m10_24 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=historyAlgorithmStatistics];
m10_24 -> m10_25  [key=0, style=solid];
m10_23 -> m10_42  [key=2, style=dotted];
m10_23 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=parameterizedStatistics];
m10_23 -> m10_24  [key=0, style=solid];
m10_44 -> m10_52  [key=0, style=solid];
m10_44 -> m10_53  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m10_44 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m10_44 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m10_44 -> m10_57  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m10_44 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m10_52 -> m10_53  [key=0, style=solid];
m10_53 -> m10_54  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_79  [key=2, style=dotted];
m10_55 -> m10_44  [key=0, style=bold, color=blue];
m10_55 -> m10_56  [key=0, style=solid];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_43  [key=2, style=dotted];
m10_40 -> m10_44  [key=2, style=dotted];
m10_40 -> m10_45  [key=2, style=dotted];
m10_40 -> m10_46  [key=2, style=dotted];
m10_40 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m10_41 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m10_41 -> m10_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m10_41 -> m10_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m10_41 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_41 -> m10_11  [key=0, style=bold, color=blue];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_68  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m10_42 -> m10_42  [key=3, color=darkorchid, style=bold, label="Local variable bool initializeComplete"];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_70  [key=2, style=dotted];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_72  [key=2, style=dotted];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_73  [key=2, style=dotted];
m10_48 -> m10_74  [key=2, style=dotted];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_75  [key=2, style=dotted];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_76  [key=2, style=dotted];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_77  [key=2, style=dotted];
m10_51 -> m10_78  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m10_56 -> m10_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m10_56 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m10_57 -> m10_58  [key=0, style=solid];
m10_59 -> m10_61  [key=0, style=solid];
m10_59 -> m10_64  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_82  [key=2, style=dotted];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_83  [key=2, style=dotted];
m10_68 -> m10_69  [key=0, style=solid];
m10_60 -> m10_64  [key=0, style=solid];
m10_60 -> m10_24  [key=2, style=dotted];
m10_58 -> m10_59  [key=0, style=solid];
m10_61 -> m10_62  [key=0, style=solid];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_66  [key=0, style=solid];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> n137  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_81  [key=2, style=dotted];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_68  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m10_69 -> m10_41  [key=0, style=bold, color=blue];
m10_38 -> m10_42  [key=2, style=dotted];
m10_38 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=basicTemplateFuturesAlgorithmDailyStatistics];
m10_38 -> m10_19  [key=3, color=darkorchid, style=bold, label="Local variable decimal sellPrice"];
m10_38 -> m10_22  [key=3, color=darkorchid, style=bold, label="Local variable decimal leverage"];
m10_38 -> m10_35  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m10_38 -> m10_39  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_14  [key=1, style=dashed, color=red, label="QuantConnect.Language"];
m10_10 -> m10_15  [key=1, style=dashed, color=red, label=string];
m10_10 -> m10_12  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Interfaces.IAlgorithm CreateAlgorithmInstance"];
m10_11 -> m10_12  [key=0, style=solid];
m10_14 -> m10_15  [key=0, style=solid, color=red];
m10_14 -> m10_21  [key=2, style=dotted, color=red];
m10_14 -> m10_22  [key=2, style=dotted, color=red];
m10_14 -> m10_26  [key=1, style=dashed, color=red, label="System.Collections.Generic.List<string>"];
m10_14 -> m10_14  [key=3, color=darkorchid, style=bold, label="Local variable string jwbQuantityFile"];
m10_14 -> m10_42  [key=2, style=dotted];
m10_14 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=basicTemplateOptionsStatistics];
m10_15 -> m10_16  [key=0, style=solid, color=red];
m10_15 -> m10_23  [key=2, style=dotted, color=red];
m10_15 -> m10_17  [key=1, style=dashed, color=red, label=error];
m10_15 -> m10_18  [key=1, style=dashed, color=red, label=algorithm];
m10_15 -> m10_42  [key=2, style=dotted];
m10_15 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=limitFillRegressionStatistics];
m10_15 -> m10_15  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Setup"];
m10_12 -> m10_13  [key=0, style=solid, color=green];
m10_12 -> m10_12  [key=3, color=darkorchid, style=bold, label="Local variable string equityFile"];
m10_12 -> m10_42  [key=2, style=dotted];
m10_12 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=basicTemplateStatistics];
m10_13 -> m10_14  [key=0, style=solid, color=green];
m10_13 -> m10_20  [key=2, style=dotted];
m10_13 -> m10_26  [key=1, style=dashed, color=red, label=algorithmName];
m10_13 -> m10_30  [key=1, style=dashed, color=red, label=algorithmName];
m10_13 -> m10_13  [key=3, color=green, style=bold, label="Local variable int i"];
m10_13 -> m10_42  [key=2, style=dotted, color=green];
m10_13 -> m10_40  [key=1, style=dashed, color=green, label=basicTemplateFrameworkStatistics];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_18  [key=0, style=solid];
m10_16 -> m10_42  [key=2, style=dotted];
m10_16 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=updateOrderRegressionStatistics];
m10_17 -> m10_19  [key=0, style=solid];
m10_17 -> m10_24  [key=2, style=dotted];
m10_17 -> m10_13  [key=3, color=green, style=bold, label="Local variable int i"];
m10_17 -> m10_17  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>> GetConfiguredDataFeeds"];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_42  [key=2, style=dotted];
m10_17 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=regressionStatistics];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_13  [key=3, color=green, style=bold, label="Parameter variable string expectedTypeName"];
m10_18 -> m10_18  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchTypeName"];
m10_18 -> m10_42  [key=2, style=dotted];
m10_18 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=universeSelectionRegressionStatistics];
m10_19 -> m10_10  [key=0, style=bold, color=blue];
m10_19 -> m10_42  [key=2, style=dotted];
m10_19 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=customDataRegressionStatistics];
m10_19 -> m10_19  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m10_19 -> m10_20  [key=0, style=solid];
m10_32 -> m10_92  [key=0, style=solid];
m10_32 -> m10_94  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_32 -> m10_14  [key=3, color=red, style=bold, label="Parameter variable string currentTypeFullName"];
m10_32 -> m10_13  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedTypeName"];
m10_32 -> m10_93  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchTypeName"];
m10_32 -> m10_42  [key=2, style=dotted];
m10_32 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=weeklyUniverseSelectionRegressionAlgorithmStatistics];
m10_32 -> m10_33  [key=0, style=solid];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_94  [key=0, style=solid];
m10_92 -> m10_96  [key=2, style=dotted];
m10_94 -> m10_95  [key=0, style=solid];
m10_94 -> m10_97  [key=2, style=dotted];
m10_94 -> m10_98  [key=2, style=dotted];
m10_93 -> m10_95  [key=0, style=solid];
m10_95 -> m10_32  [key=0, style=bold, color=blue];
m10_21 -> m10_42  [key=2, style=dotted];
m10_21 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=dropboxBaseDataUniverseSelectionStatistics];
m10_21 -> m10_22  [key=0, style=solid];
m10_73 -> m10_84  [key=0, style=solid];
m10_73 -> m10_85  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>> GetConfiguredDataFeeds"];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_20  [key=2, style=dotted];
m10_84 -> m10_86  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
m10_84 -> m10_87  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
m10_85 -> m10_86  [key=0, style=solid];
m10_85 -> m10_90  [key=2, style=dotted];
m10_85 -> m10_88  [key=1, style=dashed, color=darkseagreen4, label=dataFeeds];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_88  [key=0, style=solid];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_91  [key=2, style=dotted];
m10_88 -> m10_89  [key=0, style=solid];
m10_89 -> m10_73  [key=0, style=bold, color=blue];
m10_99 -> m10_100  [key=0, style=solid];
m10_100 -> m10_99  [key=0, style=bold, color=blue];
m10_20 -> m10_42  [key=2, style=dotted];
m10_20 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=addRemoveSecurityRegressionStatistics];
m10_20 -> m10_19  [key=3, color=darkorchid, style=bold, label="Local variable decimal buyPrice"];
m10_20 -> m10_21  [key=0, style=solid];
m10_39 -> m10_42  [key=2, style=dotted];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_22  [key=3, color=darkorchid, style=bold, label="Local variable decimal highPrice"];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_7  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_8  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_9  [key=2, style=dotted];
m10_6 -> m10_0  [key=0, style=bold, color=blue];
m10_101 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m10_101 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m10_101 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m10_101 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m10_101 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m10_101 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m10_101 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m10_101 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m10_101 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m10_102 -> m10_26  [key=1, style=dashed, color=red, label=algorithmName];
m10_102 -> m10_30  [key=1, style=dashed, color=red, label=algorithmName];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_0 -> m11_2  [key=3, color=darkorchid, style=bold, label="method methodReturn System.IO.Stream Fetch"];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=0, style=solid];
m11_1 -> m11_5  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_6  [key=2, style=dotted];
m11_2 -> m11_4  [key=0, style=solid];
m11_4 -> m11_0  [key=0, style=bold, color=blue];
m11_7 -> m11_8  [key=0, style=solid];
m11_8 -> m11_7  [key=0, style=bold, color=blue];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_8  [key=0, style=solid];
m12_7 -> m12_9  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_5  [key=0, style=bold, color=blue];
m12_14 -> m12_15  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m12_16 -> m12_17  [key=0, style=solid];
m12_17 -> m12_14  [key=0, style=bold, color=blue];
m12_10 -> m12_11  [key=0, style=solid];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_13  [key=2, style=dotted];
m12_12 -> m12_10  [key=0, style=bold, color=blue];
m12_39 -> m12_40  [key=0, style=solid];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_42  [key=2, style=dotted];
m12_41 -> m12_39  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_4  [key=2, style=dotted];
m12_3 -> m12_0  [key=0, style=bold, color=blue];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m12_18 -> m12_24  [key=1, style=dashed, color=red, label="QuantConnect.Securities.Security"];
m12_18 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m12_18 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m12_18 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_18 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_18 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_22  [key=0, style=solid];
m12_19 -> m12_34  [key=2, style=dotted];
m12_23 -> m12_24  [key=0, style=solid, color=red];
m12_23 -> m12_26  [key=0, style=solid];
m12_23 -> m12_35  [key=2, style=dotted];
m12_23 -> m12_36  [key=2, style=dotted];
m12_23 -> m12_23  [key=1, style=dashed, color=darkseagreen4, label=minimumOrderSize];
m12_24 -> m12_25  [key=0, style=solid, color=red];
m12_24 -> m12_37  [key=2, style=dotted, color=red];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_29  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_37  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_32  [key=0, style=solid];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_37  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_38  [key=2, style=dotted];
m12_20 -> m12_21  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_21 -> m12_33  [key=0, style=solid];
m12_25 -> m12_33  [key=0, style=solid];
m12_28 -> m12_33  [key=0, style=solid];
m12_31 -> m12_33  [key=0, style=solid];
m12_33 -> m12_18  [key=0, style=bold, color=blue];
m12_43 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAXBrokerageModel"];
m12_43 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAXBrokerageModel"];
m13_66 -> m13_67  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid];
m13_6 -> m13_4  [key=0, style=bold, color=blue];
m13_67 -> m13_68  [key=0, style=solid];
m13_68 -> m13_66  [key=0, style=bold, color=blue];
m13_18 -> m13_30  [key=0, style=solid];
m13_18 -> m13_31  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m13_18 -> m13_39  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m13_18 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m13_18 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Fundamental.FineFundamental"];
m13_18 -> m13_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Fundamental.FineFundamental"];
m13_18 -> m13_10  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Fundamental.FineFundamental fine"];
m13_18 -> m13_11  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig config"];
m13_18 -> m13_12  [key=3, color=red, style=bold, label="Parameter variable System.DateTime date"];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_53  [key=2, style=dotted];
m13_30 -> m13_32  [key=1, style=dashed, color=darkseagreen4, label=source];
m13_30 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label=source];
m13_30 -> m13_36  [key=1, style=dashed, color=darkseagreen4, label=source];
m13_30 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label=source];
m13_30 -> m13_51  [key=1, style=dashed, color=darkseagreen4, label=source];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_54  [key=2, style=dotted];
m13_31 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label=fileName];
m13_31 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label=fileName];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_41  [key=0, style=solid];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_65  [key=2, style=dotted];
m13_43 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_53  [key=2, style=dotted];
m13_44 -> m13_46  [key=1, style=dashed, color=darkseagreen4, label=source];
m13_44 -> m13_51  [key=1, style=dashed, color=darkseagreen4, label=source];
m13_49 -> m13_51  [key=0, style=solid];
m13_49 -> m13_53  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_50  [key=0, style=solid];
m13_32 -> m13_55  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_56  [key=2, style=dotted];
m13_34 -> m13_37  [key=1, style=dashed, color=darkseagreen4, label=path];
m13_36 -> m13_52  [key=0, style=solid];
m13_40 -> m13_52  [key=0, style=solid];
m13_51 -> m13_52  [key=0, style=solid];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_51  [key=0, style=solid];
m13_42 -> m13_64  [key=2, style=dotted];
m13_50 -> m13_51  [key=0, style=solid];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_48  [key=0, style=solid];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> n59  [key=2, style=dotted];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_37  [key=0, style=solid];
m13_35 -> m13_57  [key=2, style=dotted];
m13_35 -> m13_58  [key=2, style=dotted];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_59  [key=2, style=dotted];
m13_37 -> m13_60  [key=2, style=dotted];
m13_37 -> m13_61  [key=2, style=dotted];
m13_37 -> m13_62  [key=2, style=dotted];
m13_37 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_37 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label=firstFileName];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> n59  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_62  [key=2, style=dotted];
m13_45 -> m13_47  [key=1, style=dashed, color=darkseagreen4, label=fileName];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_42  [key=0, style=solid];
m13_46 -> m13_55  [key=2, style=dotted];
m13_47 -> m13_51  [key=0, style=solid];
m13_52 -> m13_18  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>"];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m13_3 -> m13_0  [key=0, style=bold, color=blue];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_14  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m13_7 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m13_7 -> m13_12  [key=1, style=dashed, color=red, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_15  [key=2, style=dotted];
m13_9 -> m13_12  [key=1, style=dashed, color=red, label=tradableDays];
m13_11 -> m13_12  [key=0, style=solid, color=red];
m13_11 -> m13_17  [key=2, style=dotted];
m13_12 -> m13_13  [key=0, style=solid, color=red];
m13_12 -> m13_18  [key=2, style=dotted, color=red];
m13_12 -> m13_19  [key=2, style=dotted, color=red];
m13_12 -> m13_20  [key=2, style=dotted, color=red];
m13_12 -> m13_21  [key=2, style=dotted, color=red];
m13_12 -> m13_16  [key=2, style=dotted, color=red];
m13_12 -> m13_22  [key=2, style=dotted, color=red];
m13_12 -> m13_23  [key=2, style=dotted, color=red];
m13_12 -> m13_24  [key=2, style=dotted, color=red];
m13_12 -> m13_25  [key=2, style=dotted, color=red];
m13_12 -> m13_26  [key=2, style=dotted, color=red];
m13_12 -> m13_27  [key=2, style=dotted, color=red];
m13_12 -> m13_28  [key=2, style=dotted, color=red];
m13_12 -> m13_29  [key=2, style=dotted, color=red];
m13_12 -> m13_12  [key=1, style=dashed, color=red, label=date];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_16  [key=2, style=dotted];
m13_10 -> m13_12  [key=1, style=dashed, color=red, label=fineFundamental];
m13_13 -> m13_7  [key=0, style=bold, color=blue];
m13_69 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_12  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m13_69 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory"];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_2  [key=0, style=bold, color=blue];
m18_4 -> m18_5  [key=0, style=solid];
m18_5 -> m18_4  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [key=0, style=bold, color=blue];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_2  [key=0, style=bold, color=blue];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.Messages.Order"];
m19_54 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.Messages.Order"];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_57  [key=0, style=solid];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_59  [key=0, style=solid];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_61  [key=0, style=solid];
m19_56 -> m19_62  [key=0, style=solid];
m19_58 -> m19_62  [key=0, style=solid];
m19_60 -> m19_62  [key=0, style=solid];
m19_61 -> m19_62  [key=0, style=solid];
m19_62 -> m19_54  [key=0, style=bold, color=blue];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_27  [key=2, style=dotted];
m19_18 -> m19_28  [key=2, style=dotted];
m19_18 -> m19_29  [key=2, style=dotted];
m19_18 -> m19_20  [key=1, style=dashed, color=darkseagreen4, label=token];
m19_18 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label=token];
m19_18 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label=token];
m19_20 -> m19_21  [key=0, style=solid];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_30  [key=2, style=dotted];
m19_19 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label=data];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_34  [key=2, style=dotted];
m19_25 -> m19_26  [key=0, style=solid];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_32  [key=2, style=dotted];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_31  [key=2, style=dotted];
m19_21 -> m19_23  [key=1, style=dashed, color=darkseagreen4, label=bytes];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_33  [key=2, style=dotted];
m19_26 -> m19_17  [key=0, style=bold, color=blue];
m19_14 -> m19_15  [key=0, style=solid];
m19_15 -> m19_16  [key=0, style=solid];
m19_16 -> m19_14  [key=0, style=bold, color=blue];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderType"];
m19_35 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderType"];
m19_35 -> m19_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderType"];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_38  [key=0, style=solid];
m19_37 -> m19_41  [key=0, style=solid];
m19_37 -> m19_42  [key=2, style=dotted];
m19_37 -> m19_43  [key=2, style=dotted];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_40  [key=0, style=solid];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_44  [key=2, style=dotted];
m19_40 -> m19_42  [key=2, style=dotted];
m19_39 -> m19_41  [key=0, style=solid];
m19_41 -> m19_35  [key=0, style=bold, color=blue];
m19_50 -> m19_51  [key=0, style=solid];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_53  [key=2, style=dotted];
m19_51 -> m19_43  [key=2, style=dotted];
m19_52 -> m19_50  [key=0, style=bold, color=blue];
m19_45 -> m19_46  [key=0, style=solid];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_48  [key=2, style=dotted];
m19_46 -> m19_49  [key=2, style=dotted];
m19_47 -> m19_45  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label=IRestRequest];
m19_0 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label=IRestRequest];
m19_0 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label=IRestRequest];
m19_0 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label=IRestRequest];
m19_0 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label=IRestRequest];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_9  [key=2, style=dotted];
m19_1 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_10  [key=2, style=dotted];
m19_2 -> m19_11  [key=2, style=dotted];
m19_2 -> m19_12  [key=2, style=dotted];
m19_2 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label=token];
m19_2 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label=token];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_13  [key=2, style=dotted];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_13  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_13  [key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_13  [key=2, style=dotted];
m19_7 -> m19_8  [key=0, style=solid];
m19_8 -> m19_0  [key=0, style=bold, color=blue];
m19_63 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m19_63 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m19_63 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m19_63 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m19_63 -> m19_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m20_44 -> m20_45  [key=0, style=solid];
m20_45 -> m20_46  [key=0, style=solid];
m20_45 -> m20_48  [key=2, style=dotted];
m20_46 -> m20_47  [key=0, style=solid];
m20_46 -> m20_48  [key=2, style=dotted];
m20_47 -> m20_44  [key=0, style=bold, color=blue];
m20_30 -> m20_31  [key=0, style=solid];
m20_30 -> m20_40  [key=1, style=dashed, color=red, label="QuantConnect.Util.Composer"];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_42  [key=2, style=dotted];
m20_31 -> m20_40  [key=1, style=dashed, color=red, label=setupHandlerTypeName];
m20_40 -> m20_41  [key=0, style=solid, color=red];
m20_40 -> m20_0  [key=2, style=dotted, color=red];
m20_40 -> m20_43  [key=2, style=dotted, color=red];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_42  [key=2, style=dotted];
m20_32 -> m20_40  [key=1, style=dashed, color=red, label=transactionHandlerTypeName];
m20_33 -> m20_34  [key=0, style=solid];
m20_33 -> m20_42  [key=2, style=dotted];
m20_33 -> m20_40  [key=1, style=dashed, color=red, label=realTimeHandlerTypeName];
m20_34 -> m20_35  [key=0, style=solid];
m20_34 -> m20_42  [key=2, style=dotted];
m20_34 -> m20_40  [key=1, style=dashed, color=red, label=dataFeedHandlerTypeName];
m20_35 -> m20_36  [key=0, style=solid];
m20_35 -> m20_42  [key=2, style=dotted];
m20_35 -> m20_40  [key=1, style=dashed, color=red, label=resultHandlerTypeName];
m20_36 -> m20_37  [key=0, style=solid];
m20_36 -> m20_42  [key=2, style=dotted];
m20_36 -> m20_40  [key=1, style=dashed, color=red, label=commandQueueHandlerTypeName];
m20_37 -> m20_38  [key=0, style=solid];
m20_37 -> m20_42  [key=2, style=dotted];
m20_37 -> m20_40  [key=1, style=dashed, color=red, label=mapFileProviderTypeName];
m20_38 -> m20_39  [key=0, style=solid, color=red];
m20_38 -> m20_42  [key=2, style=dotted];
m20_38 -> m20_40  [key=1, style=dashed, color=red, label=factorFileProviderTypeName];
m20_39 -> m20_40  [key=0, style=solid, color=red];
m20_39 -> m20_42  [key=2, style=dotted, color=red];
m20_41 -> m20_30  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ISetupHandler"];
m20_0 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
m20_0 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
m20_0 -> m20_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler"];
m20_0 -> m20_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.ICommandQueueHandler"];
m20_0 -> m20_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IMapFileProvider"];
m20_0 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IFactorFileProvider"];
m20_0 -> m20_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IDataProvider"];
m20_0 -> m20_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m20_0 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ISetupHandler"];
m20_0 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
m20_0 -> m20_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
m20_0 -> m20_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler"];
m20_0 -> m20_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.ICommandQueueHandler"];
m20_0 -> m20_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IMapFileProvider"];
m20_0 -> m20_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IFactorFileProvider"];
m20_0 -> m20_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IDataProvider"];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_3  [key=0, style=solid];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_5  [key=0, style=solid];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_7  [key=0, style=solid];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_9  [key=0, style=solid];
m20_9 -> m20_10  [key=0, style=solid];
m20_9 -> m20_11  [key=0, style=solid];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_13  [key=0, style=solid];
m20_13 -> m20_14  [key=0, style=solid];
m20_13 -> m20_15  [key=0, style=solid];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> m20_17  [key=0, style=solid];
m20_17 -> m20_18  [key=0, style=solid];
m20_17 -> m20_19  [key=0, style=solid];
m20_19 -> m20_20  [key=0, style=solid];
m20_20 -> m20_21  [key=0, style=solid];
m20_21 -> m20_22  [key=0, style=solid];
m20_22 -> m20_23  [key=0, style=solid];
m20_23 -> m20_24  [key=0, style=solid];
m20_24 -> m20_25  [key=0, style=solid];
m20_25 -> m20_26  [key=0, style=solid];
m20_26 -> m20_27  [key=0, style=solid];
m20_27 -> m20_28  [key=0, style=solid];
m20_2 -> m20_28  [key=0, style=solid];
m20_2 -> m20_29  [key=2, style=dotted];
m20_4 -> m20_28  [key=0, style=solid];
m20_4 -> m20_29  [key=2, style=dotted];
m20_6 -> m20_28  [key=0, style=solid];
m20_6 -> m20_29  [key=2, style=dotted];
m20_8 -> m20_28  [key=0, style=solid];
m20_8 -> m20_29  [key=2, style=dotted];
m20_10 -> m20_28  [key=0, style=solid];
m20_10 -> m20_29  [key=2, style=dotted];
m20_12 -> m20_28  [key=0, style=solid];
m20_12 -> m20_29  [key=2, style=dotted];
m20_14 -> m20_28  [key=0, style=solid];
m20_14 -> m20_29  [key=2, style=dotted];
m20_16 -> m20_28  [key=0, style=solid];
m20_16 -> m20_29  [key=2, style=dotted];
m20_18 -> m20_28  [key=0, style=solid];
m20_18 -> m20_29  [key=2, style=dotted];
m20_28 -> m20_0  [key=0, style=bold, color=blue];
m20_49 -> m20_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m20_49 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m20_49 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m20_49 -> m20_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m20_49 -> m20_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m20_49 -> m20_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m20_49 -> m20_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m20_49 -> m20_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m20_49 -> m20_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m20_49 -> m20_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m20_49 -> m20_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m22_9 -> m22_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_12  [key=0, style=solid];
m22_11 -> m22_15  [key=0, style=solid];
m22_11 -> m22_16  [key=2, style=dotted];
m22_13 -> m22_15  [key=0, style=solid];
m22_13 -> m22_17  [key=2, style=dotted];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_14  [key=0, style=solid];
m22_14 -> m22_15  [key=0, style=solid];
m22_15 -> m22_9  [key=0, style=bold, color=blue];
m22_32 -> m22_33  [key=0, style=solid];
m22_33 -> m22_34  [key=0, style=solid];
m22_33 -> m22_0  [key=2, style=dotted];
m22_33 -> m22_35  [key=1, style=dashed, color=darkseagreen4, label=order];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_37  [key=2, style=dotted];
m22_35 -> m22_36  [key=0, style=solid];
m22_36 -> m22_32  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [key=0, style=bold, color=blue];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_2 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_2 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_3 -> m22_4  [key=0, style=solid];
m22_4 -> m22_5  [key=0, style=solid];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_7  [key=0, style=solid];
m22_5 -> m22_5  [key=3, color=darkorchid, style=bold, label="Field variable int _lastOrderId"];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_8  [key=2, style=dotted];
m22_6 -> m22_6  [key=3, color=darkorchid, style=bold, label="Field variable string _subscription"];
m22_7 -> m22_2  [key=0, style=bold, color=blue];
m22_26 -> m22_27  [key=0, style=solid];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_29  [key=2, style=dotted];
m22_27 -> m22_30  [key=2, style=dotted];
m22_27 -> m22_31  [key=2, style=dotted];
m22_28 -> m22_26  [key=0, style=bold, color=blue];
m22_18 -> m22_19  [key=0, style=solid];
m22_18 -> m22_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m22_18 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m22_18 -> m22_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m22_18 -> m22_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m22_19 -> m22_20  [key=0, style=solid];
m22_19 -> m22_25  [key=2, style=dotted];
m22_20 -> m22_21  [key=0, style=solid];
m22_20 -> m22_22  [key=0, style=solid];
m22_21 -> m22_22  [key=0, style=solid];
m22_22 -> m22_23  [key=0, style=solid];
m22_22 -> m22_24  [key=0, style=solid];
m22_23 -> m22_24  [key=0, style=solid];
m22_24 -> m22_18  [key=0, style=bold, color=blue];
m22_38 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m22_38 -> m22_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopLimitOrder"];
m23_55 -> m23_56  [key=0, style=solid];
m23_15 -> m23_16  [key=0, style=solid];
m23_16 -> m23_17  [key=0, style=solid];
m23_16 -> m23_18  [key=2, style=dotted];
m23_16 -> m23_19  [key=2, style=dotted];
m23_16 -> m23_20  [key=2, style=dotted];
m23_16 -> m23_21  [key=2, style=dotted];
m23_17 -> m23_15  [key=0, style=bold, color=blue];
m23_49 -> m23_50  [key=0, style=solid];
m23_52 -> m23_53  [key=0, style=solid];
m23_50 -> m23_51  [key=0, style=solid];
m23_51 -> m23_49  [key=0, style=bold, color=blue];
m23_53 -> m23_54  [key=0, style=solid];
m23_54 -> m23_52  [key=0, style=bold, color=blue];
m23_56 -> m23_57  [key=0, style=solid];
m23_56 -> m23_56  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
m23_57 -> m23_55  [key=0, style=bold, color=blue];
m23_58 -> m23_59  [key=0, style=solid];
m23_59 -> m23_60  [key=0, style=solid];
m23_59 -> m23_61  [key=2, style=dotted];
m23_59 -> m23_62  [key=2, style=dotted];
m23_60 -> m23_58  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_9  [key=2, style=dotted];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_10  [key=2, style=dotted];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_11  [key=2, style=dotted];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_12  [key=2, style=dotted];
m23_4 -> m23_6  [key=1, style=dashed, color=darkseagreen4, label=option];
m23_5 -> m23_6  [key=0, style=solid];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_13  [key=2, style=dotted];
m23_6 -> m23_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_14  [key=2, style=dotted];
m23_8 -> m23_0  [key=0, style=bold, color=blue];
m23_22 -> m23_23  [key=0, style=solid];
m23_22 -> m23_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_30  [key=0, style=solid];
m23_26 -> m23_27  [key=0, style=solid];
m23_26 -> m23_32  [key=0, style=solid];
m23_26 -> m23_39  [key=2, style=dotted];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_32  [key=0, style=solid];
m23_30 -> m23_31  [key=0, style=solid];
m23_30 -> m23_32  [key=0, style=solid];
m23_25 -> m23_26  [key=0, style=solid];
m23_32 -> m23_33  [key=0, style=solid];
m23_32 -> m23_38  [key=0, style=solid];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_40  [key=2, style=dotted];
m23_27 -> m23_41  [key=2, style=dotted];
m23_27 -> m23_42  [key=2, style=dotted];
m23_27 -> m23_43  [key=2, style=dotted];
m23_27 -> m23_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_27 -> m23_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_27 -> m23_29  [key=1, style=dashed, color=darkseagreen4, label=contract];
m23_28 -> m23_29  [key=0, style=solid];
m23_28 -> m23_32  [key=0, style=solid];
m23_29 -> m23_32  [key=0, style=solid];
m23_29 -> m23_44  [key=2, style=dotted];
m23_31 -> m23_32  [key=0, style=solid];
m23_31 -> m23_45  [key=2, style=dotted];
m23_33 -> m23_34  [key=0, style=solid];
m23_33 -> m23_41  [key=2, style=dotted];
m23_33 -> m23_46  [key=2, style=dotted];
m23_33 -> m23_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_33 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m23_33 -> m23_36  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m23_33 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m23_34 -> m23_35  [key=0, style=solid];
m23_34 -> m23_36  [key=0, style=solid];
m23_35 -> m23_38  [key=0, style=solid];
m23_35 -> m23_47  [key=2, style=dotted];
m23_35 -> m23_48  [key=2, style=dotted];
m23_36 -> m23_37  [key=0, style=solid];
m23_36 -> m23_38  [key=0, style=solid];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_47  [key=2, style=dotted];
m23_37 -> m23_48  [key=2, style=dotted];
m23_38 -> m23_22  [key=0, style=bold, color=blue];
m23_63 -> m23_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m23_63 -> m23_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm"];
m24_35 -> m24_36  [key=0, style=solid];
m24_36 -> m24_37  [key=0, style=solid];
m24_36 -> m24_38  [key=2, style=dotted];
m24_37 -> m24_35  [key=0, style=bold, color=blue];
m24_39 -> m24_40  [key=0, style=solid];
m24_40 -> m24_41  [key=0, style=solid];
m24_40 -> m24_43  [key=0, style=solid];
m24_41 -> m24_42  [key=0, style=solid];
m24_41 -> m24_44  [key=2, style=dotted];
m24_42 -> m24_43  [key=0, style=solid];
m24_43 -> m24_39  [key=0, style=bold, color=blue];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_15 -> m24_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_16 -> m24_17  [key=0, style=solid];
m24_17 -> m24_18  [key=0, style=solid];
m24_17 -> m24_24  [key=2, style=dotted];
m24_17 -> m24_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_17 -> m24_20  [key=1, style=dashed, color=darkseagreen4, label=entry];
m24_18 -> m24_19  [key=0, style=solid];
m24_18 -> m24_23  [key=0, style=solid];
m24_20 -> m24_21  [key=0, style=solid];
m24_20 -> m24_26  [key=2, style=dotted];
m24_20 -> m24_27  [key=2, style=dotted];
m24_19 -> m24_20  [key=0, style=solid];
m24_19 -> m24_25  [key=2, style=dotted];
m24_19 -> m24_21  [key=1, style=dashed, color=darkseagreen4, label=stream];
m24_19 -> m24_22  [key=1, style=dashed, color=darkseagreen4, label=stream];
m24_21 -> m24_22  [key=0, style=solid];
m24_22 -> m24_23  [key=0, style=solid];
m24_22 -> m24_6  [key=2, style=dotted];
m24_23 -> m24_15  [key=0, style=bold, color=blue];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_11  [key=1, style=dashed, color=darkseagreen4, label=long];
m24_7 -> m24_12  [key=1, style=dashed, color=darkseagreen4, label=long];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> m24_5  [key=2, style=dotted];
m24_8 -> m24_10  [key=1, style=dashed, color=darkseagreen4, label=stream];
m24_11 -> m24_12  [key=0, style=solid];
m24_11 -> m24_13  [key=0, style=solid];
m24_12 -> m24_13  [key=0, style=solid];
m24_12 -> m24_14  [key=2, style=dotted];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_13  [key=0, style=solid];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_6  [key=2, style=dotted];
m24_13 -> m24_7  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_5  [key=2, style=dotted];
m24_1 -> m24_3  [key=1, style=dashed, color=darkseagreen4, label=stream];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_4  [key=0, style=solid];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_6  [key=2, style=dotted];
m24_4 -> m24_0  [key=0, style=bold, color=blue];
m24_5 -> m24_15  [key=3, color=darkorchid, style=bold, label="Field variable ZipFile _zipFile"];
m24_32 -> m24_33  [key=0, style=solid];
m24_29 -> m24_30  [key=0, style=solid];
m24_29 -> m24_31  [key=2, style=dotted];
m24_28 -> m24_29  [key=0, style=solid];
m24_30 -> m24_28  [key=0, style=bold, color=blue];
m24_33 -> m24_34  [key=0, style=solid];
m24_34 -> m24_32  [key=0, style=bold, color=blue];
m24_45 -> m24_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader"];
m24_45 -> m24_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader"];
m24_45 -> m24_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader"];
m24_45 -> m24_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader"];
m24_45 -> m24_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader"];
m24_45 -> m24_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader"];
m24_45 -> m24_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader"];
m24_45 -> m24_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader"];
m24_45 -> m24_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader"];
m24_45 -> m24_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader"];
m24_46 -> m24_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_7 -> m25_0  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid, color=red];
m25_1 -> m25_2  [key=0, style=solid, color=red];
m25_1 -> m25_8  [key=2, style=dotted, color=red];
m25_1 -> m25_4  [key=1, style=dashed, color=red, label=source];
m25_2 -> m25_3  [key=0, style=solid, color=red];
m25_2 -> m25_4  [key=1, style=dashed, color=red, label=entryName];
m25_2 -> m25_2  [key=3, color=red, style=bold, label="Local variable string entryName"];
m25_4 -> m25_5  [key=0, style=solid, color=red];
m25_4 -> m25_11  [key=2, style=dotted, color=red];
m25_3 -> m25_4  [key=0, style=solid, color=red];
m25_3 -> m25_9  [key=2, style=dotted, color=red];
m25_3 -> m25_10  [key=2, style=dotted, color=red];
m25_5 -> m25_6  [key=0, style=solid, color=red];
m25_5 -> m25_12  [key=2, style=dotted, color=red];
m25_6 -> m25_7  [key=0, style=solid, color=red];
m25_6 -> m25_13  [key=2, style=dotted, color=red];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_0  [key=0, style=bold, color=blue];
m26_2 -> m26_3  [key=0, style=solid];
m26_3 -> m26_2  [key=0, style=bold, color=blue];
m30_2 -> m30_0  [key=0, style=bold, color=blue];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_2  [key=0, style=solid];
m30_15 -> m30_14  [key=0, style=bold, color=blue];
m30_14 -> m30_15  [key=0, style=solid];
m30_13 -> m30_12  [key=0, style=bold, color=blue];
m30_12 -> m30_13  [key=0, style=solid];
m30_8 -> m30_3  [key=0, style=bold, color=blue];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_4 -> m30_5  [key=0, style=solid];
m30_4 -> m30_9  [key=2, style=dotted];
m30_4 -> m30_6  [key=1, style=dashed, color=red, label=stream];
m30_4 -> m30_7  [key=1, style=dashed, color=darkseagreen4, label=stream];
m30_5 -> m30_6  [key=0, style=solid, color=red];
m30_5 -> m30_7  [key=0, style=solid];
m30_5 -> m30_10  [key=2, style=dotted];
m30_6 -> m30_8  [key=0, style=solid, color=red];
m30_6 -> m30_11  [key=2, style=dotted, color=red];
m30_7 -> m30_8  [key=0, style=solid];
m30_16 -> m30_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider"];
m30_16 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider"];
m31_4 -> m31_5  [key=0, style=solid];
m31_5 -> m31_4  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_0  [key=0, style=bold, color=blue];
m31_2 -> m31_3  [key=0, style=solid];
m31_3 -> m31_2  [key=0, style=bold, color=blue];
m32_36 -> m32_38  [key=0, style=solid];
m32_36 -> m32_45  [key=2, style=dotted];
m32_197 -> m32_198  [key=0, style=solid];
m32_198 -> m32_199  [key=0, style=solid];
m32_198 -> m32_196  [key=2, style=dotted];
m32_199 -> m32_197  [key=0, style=bold, color=blue];
m32_222 -> m32_223  [key=0, style=solid];
m32_223 -> m32_224  [key=0, style=solid];
m32_223 -> m32_188  [key=2, style=dotted];
m32_224 -> m32_222  [key=0, style=bold, color=blue];
m32_215 -> m32_216  [key=0, style=solid];
m32_215 -> m32_218  [key=1, style=dashed, color=darkseagreen4, label=object];
m32_215 -> m32_220  [key=1, style=dashed, color=darkseagreen4, label=object];
m32_216 -> m32_217  [key=0, style=solid];
m32_216 -> m32_218  [key=0, style=solid];
m32_216 -> m32_186  [key=2, style=dotted];
m32_218 -> m32_219  [key=0, style=solid];
m32_218 -> m32_220  [key=0, style=solid];
m32_218 -> m32_186  [key=2, style=dotted];
m32_220 -> m32_221  [key=0, style=solid];
m32_220 -> m32_208  [key=2, style=dotted];
m32_217 -> m32_221  [key=0, style=solid];
m32_219 -> m32_221  [key=0, style=solid];
m32_221 -> m32_215  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid];
m32_0 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_0 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_0 -> m32_6  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_3  [key=0, style=solid];
m32_1 -> m32_16  [key=2, style=dotted];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_5  [key=0, style=solid];
m32_3 -> m32_10  [key=2, style=dotted];
m32_3 -> m32_18  [key=2, style=dotted];
m32_5 -> m32_6  [key=0, style=solid, color=green];
m32_5 -> m32_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_5 -> m32_20  [key=2, style=dotted];
m32_6 -> m32_7  [key=0, style=solid, color=green];
m32_6 -> m32_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_6 -> m32_6  [key=3, color=green, style=bold, label="method methodReturn QuantConnect.Orders.Order Clone"];
m32_6 -> m32_21  [key=2, style=dotted, color=green];
m32_6 -> m32_22  [key=2, style=dotted, color=green];
m32_6 -> m32_23  [key=2, style=dotted, color=green];
m32_6 -> m32_24  [key=2, style=dotted, color=green];
m32_6 -> m32_25  [key=2, style=dotted, color=green];
m32_6 -> m32_26  [key=2, style=dotted, color=green];
m32_6 -> m32_27  [key=2, style=dotted, color=green];
m32_6 -> m32_28  [key=2, style=dotted, color=green];
m32_6 -> m32_29  [key=2, style=dotted, color=green];
m32_6 -> m32_30  [key=2, style=dotted, color=green];
m32_6 -> m32_31  [key=2, style=dotted, color=green];
m32_6 -> m32_32  [key=2, style=dotted, color=green];
m32_6 -> m32_33  [key=2, style=dotted, color=green];
m32_2 -> m32_8  [key=0, style=solid];
m32_2 -> m32_9  [key=2, style=dotted];
m32_2 -> m32_3  [key=0, style=solid];
m32_2 -> m32_17  [key=2, style=dotted];
m32_4 -> m32_8  [key=0, style=solid];
m32_4 -> m32_11  [key=2, style=dotted];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_19  [key=2, style=dotted];
m32_7 -> m32_8  [key=0, style=solid];
m32_7 -> m32_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_7 -> m32_21  [key=2, style=dotted];
m32_7 -> m32_22  [key=2, style=dotted];
m32_7 -> m32_23  [key=2, style=dotted];
m32_7 -> m32_25  [key=2, style=dotted];
m32_7 -> m32_26  [key=2, style=dotted];
m32_7 -> m32_27  [key=2, style=dotted];
m32_7 -> m32_29  [key=2, style=dotted];
m32_7 -> m32_30  [key=2, style=dotted];
m32_7 -> m32_31  [key=2, style=dotted];
m32_7 -> m32_32  [key=2, style=dotted];
m32_7 -> m32_33  [key=2, style=dotted];
m32_7 -> m32_24  [key=2, style=dotted];
m32_7 -> m32_28  [key=2, style=dotted];
m32_8 -> m32_0  [key=0, style=bold, color=blue];
m32_8 -> m32_23  [key=2, style=dotted];
m32_8 -> m32_9  [key=0, style=solid];
m32_12 -> m32_13  [key=0, style=solid];
m32_12 -> m32_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_12 -> m32_16  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m32_12 -> m32_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_12 -> m32_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_12 -> m32_34  [key=2, style=dotted];
m32_13 -> m32_14  [key=0, style=solid];
m32_13 -> m32_15  [key=0, style=solid];
m32_13 -> m32_35  [key=2, style=dotted];
m32_15 -> m32_16  [key=0, style=solid];
m32_15 -> m32_232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_15 -> m32_0  [key=0, style=bold, color=blue];
m32_16 -> m32_17  [key=0, style=solid];
m32_16 -> m32_232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_17 -> m32_18  [key=0, style=solid];
m32_17 -> m32_19  [key=0, style=solid];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_20  [key=2, style=dotted];
m32_18 -> m32_232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_14 -> m32_19  [key=0, style=solid];
m32_14 -> m32_9  [key=2, style=dotted];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_36  [key=2, style=dotted];
m32_19 -> m32_12  [key=0, style=bold, color=blue];
m32_30 -> m32_31  [key=0, style=solid];
m32_30 -> m32_39  [key=2, style=dotted];
m32_57 -> m32_58  [key=0, style=solid];
m32_57 -> m32_65  [key=2, style=dotted];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_24  [key=2, style=dotted];
m32_58 -> m32_65  [key=2, style=dotted];
m32_59 -> m32_57  [key=0, style=bold, color=blue];
m32_59 -> m32_60  [key=0, style=solid];
m32_59 -> m32_66  [key=2, style=dotted];
m32_42 -> m32_43  [key=0, style=solid];
m32_188 -> m32_189  [key=0, style=solid];
m32_189 -> m32_190  [key=0, style=solid];
m32_189 -> m32_191  [key=2, style=dotted];
m32_189 -> m32_192  [key=2, style=dotted];
m32_190 -> m32_188  [key=0, style=bold, color=blue];
m32_144 -> m32_145  [key=0, style=solid];
m32_144 -> m32_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_144 -> m32_149  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_144 -> m32_164  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_145 -> m32_146  [key=0, style=solid];
m32_147 -> m32_148  [key=0, style=solid];
m32_147 -> m32_149  [key=0, style=solid];
m32_147 -> m32_168  [key=2, style=dotted];
m32_149 -> m32_150  [key=0, style=solid];
m32_149 -> n58  [key=2, style=dotted];
m32_149 -> m32_152  [key=1, style=dashed, color=darkseagreen4, label=sids];
m32_164 -> m32_165  [key=0, style=solid];
m32_164 -> m32_172  [key=2, style=dotted];
m32_146 -> m32_147  [key=0, style=solid];
m32_146 -> m32_160  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.SecurityIdentifier"];
m32_146 -> m32_167  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.SecurityIdentifier"];
m32_160 -> m32_161  [key=0, style=solid];
m32_160 -> m32_12  [key=2, style=dotted];
m32_160 -> m32_160  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.SecurityIdentifier"];
m32_160 -> m32_167  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.SecurityIdentifier"];
m32_148 -> m32_167  [key=0, style=solid];
m32_150 -> m32_151  [key=0, style=solid];
m32_150 -> m32_152  [key=1, style=dashed, color=darkseagreen4, label=i];
m32_150 -> m32_161  [key=1, style=dashed, color=darkseagreen4, label=i];
m32_152 -> m32_153  [key=0, style=solid];
m32_151 -> m32_152  [key=0, style=solid];
m32_151 -> m32_162  [key=0, style=solid];
m32_151 -> m32_166  [key=0, style=solid];
m32_161 -> m32_151  [key=0, style=solid];
m32_161 -> m32_161  [key=1, style=dashed, color=darkseagreen4, label=i];
m32_162 -> m32_163  [key=0, style=solid];
m32_166 -> m32_167  [key=0, style=solid];
m32_153 -> m32_154  [key=0, style=solid];
m32_153 -> m32_170  [key=2, style=dotted];
m32_153 -> m32_157  [key=1, style=dashed, color=darkseagreen4, label=parts];
m32_153 -> m32_158  [key=1, style=dashed, color=darkseagreen4, label=parts];
m32_154 -> m32_155  [key=0, style=solid];
m32_154 -> m32_157  [key=0, style=solid];
m32_157 -> m32_158  [key=0, style=solid];
m32_157 -> m32_160  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m32_158 -> m32_159  [key=0, style=solid];
m32_155 -> m32_156  [key=0, style=solid];
m32_155 -> m32_171  [key=2, style=dotted];
m32_156 -> m32_167  [key=0, style=solid];
m32_159 -> m32_160  [key=0, style=solid];
m32_159 -> m32_86  [key=2, style=dotted];
m32_163 -> m32_164  [key=0, style=solid];
m32_163 -> m32_167  [key=1, style=dashed, color=darkseagreen4, label="out System.Exception"];
m32_165 -> m32_167  [key=0, style=solid];
m32_167 -> m32_144  [key=0, style=bold, color=blue];
m32_44 -> m32_45  [key=0, style=solid];
m32_44 -> m32_48  [key=2, style=dotted];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_28 -> m32_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_28 -> m32_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_28 -> m32_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_29 -> m32_30  [key=0, style=solid];
m32_29 -> m32_37  [key=0, style=solid];
m32_31 -> m32_32  [key=0, style=solid];
m32_31 -> m32_40  [key=2, style=dotted];
m32_32 -> m32_33  [key=0, style=solid];
m32_32 -> m32_41  [key=2, style=dotted];
m32_32 -> m32_34  [key=1, style=dashed, color=darkseagreen4, label=mapFile];
m32_32 -> m32_35  [key=1, style=dashed, color=darkseagreen4, label=mapFile];
m32_37 -> m32_38  [key=0, style=solid];
m32_37 -> m32_45  [key=2, style=dotted];
m32_33 -> m32_34  [key=0, style=solid];
m32_33 -> m32_36  [key=1, style=dashed, color=darkseagreen4, label=firstDate];
m32_34 -> m32_35  [key=0, style=solid];
m32_34 -> m32_36  [key=0, style=solid];
m32_34 -> m32_42  [key=2, style=dotted];
m32_35 -> m32_36  [key=0, style=solid];
m32_35 -> m32_43  [key=2, style=dotted];
m32_35 -> m32_44  [key=2, style=dotted];
m32_35 -> m32_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_38 -> m32_28  [key=0, style=bold, color=blue];
m32_52 -> m32_53  [key=0, style=solid];
m32_52 -> m32_24  [key=2, style=dotted];
m32_53 -> m32_54  [key=0, style=solid];
m32_53 -> m32_55  [key=0, style=solid];
m32_53 -> m32_51  [key=0, style=bold, color=blue];
m32_55 -> m32_56  [key=0, style=solid];
m32_55 -> m32_63  [key=2, style=dotted];
m32_55 -> m32_24  [key=2, style=dotted];
m32_56 -> m32_57  [key=0, style=solid];
m32_56 -> m32_64  [key=2, style=dotted];
m32_56 -> m32_54  [key=0, style=bold, color=blue];
m32_60 -> m32_61  [key=0, style=solid];
m32_60 -> m32_64  [key=2, style=dotted];
m32_60 -> m32_62  [key=0, style=solid];
m32_61 -> m32_62  [key=0, style=solid];
m32_61 -> m32_64  [key=2, style=dotted];
m32_61 -> m32_78  [key=0, style=solid];
m32_61 -> m32_79  [key=2, style=dotted];
m32_54 -> m32_62  [key=0, style=solid];
m32_54 -> m32_55  [key=0, style=solid];
m32_62 -> m32_52  [key=0, style=bold, color=blue];
m32_62 -> m32_63  [key=0, style=solid];
m32_62 -> m32_64  [key=0, style=solid];
m32_176 -> m32_177  [key=0, style=solid];
m32_177 -> m32_178  [key=0, style=solid];
m32_178 -> m32_176  [key=0, style=bold, color=blue];
m32_20 -> m32_206  [key=0, style=solid];
m32_25 -> m32_26  [key=0, style=solid];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_24  [key=2, style=dotted];
m32_27 -> m32_25  [key=0, style=bold, color=blue];
m32_46 -> m32_47  [key=0, style=solid];
m32_46 -> m32_50  [key=2, style=dotted];
m32_46 -> m32_51  [key=2, style=dotted];
m32_47 -> m32_48  [key=0, style=solid];
m32_47 -> m32_39  [key=0, style=bold, color=blue];
m32_48 -> m32_46  [key=0, style=bold, color=blue];
m32_41 -> m32_47  [key=0, style=solid];
m32_225 -> m32_226  [key=0, style=solid];
m32_226 -> m32_227  [key=0, style=solid];
m32_226 -> m32_196  [key=2, style=dotted];
m32_227 -> m32_225  [key=0, style=bold, color=blue];
m32_173 -> m32_174  [key=0, style=solid];
m32_174 -> m32_175  [key=0, style=solid];
m32_175 -> m32_173  [key=0, style=bold, color=blue];
m32_51 -> m32_52  [key=0, style=solid];
m32_49 -> m32_50  [key=0, style=solid];
m32_49 -> m32_24  [key=2, style=dotted];
m32_9 -> m32_32  [key=2, style=dotted];
m32_9 -> m32_10  [key=0, style=solid];
m32_10 -> m32_33  [key=2, style=dotted];
m32_10 -> m32_11  [key=0, style=solid];
m32_11 -> m32_12  [key=0, style=solid];
m32_11 -> m32_34  [key=2, style=dotted];
m32_11 -> m32_13  [key=1, style=dashed, color=darkseagreen4, label=spyClose];
m32_43 -> m32_44  [key=0, style=solid];
m32_43 -> m32_47  [key=0, style=solid];
m32_21 -> m32_22  [key=0, style=solid];
m32_24 -> m32_60  [key=0, style=solid];
m32_24 -> m32_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.OptionRight"];
m32_24 -> m32_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_24 -> m32_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_24 -> m32_69  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m32_24 -> m32_72  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_24 -> m32_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.OptionStyle"];
m32_24 -> m32_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.OptionRight"];
m32_24 -> m32_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m32_24 -> m32_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier?"];
m32_136 -> m32_137  [key=0, style=solid];
m32_136 -> m32_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_137 -> m32_138  [key=0, style=solid];
m32_138 -> m32_139  [key=0, style=solid];
m32_138 -> m32_135  [key=2, style=dotted];
m32_139 -> m32_136  [key=0, style=bold, color=blue];
m32_50 -> m32_45  [key=0, style=bold, color=blue];
m32_63 -> m32_78  [key=0, style=solid];
m32_63 -> m32_79  [key=2, style=dotted];
m32_45 -> m32_49  [key=0, style=solid];
m32_45 -> m32_46  [key=0, style=solid];
m32_98 -> m32_99  [key=0, style=solid];
m32_98 -> m32_100  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m32_98 -> m32_101  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m32_98 -> m32_104  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m32_99 -> m32_100  [key=0, style=solid];
m32_99 -> m32_107  [key=2, style=dotted];
m32_99 -> m32_103  [key=1, style=dashed, color=darkseagreen4, label=stack];
m32_99 -> m32_105  [key=1, style=dashed, color=darkseagreen4, label=stack];
m32_100 -> m32_101  [key=0, style=solid];
m32_100 -> m32_105  [key=0, style=solid];
m32_101 -> m32_102  [key=0, style=solid];
m32_104 -> m32_100  [key=0, style=solid];
m32_104 -> m32_104  [key=1, style=dashed, color=darkseagreen4, label=ulong];
m32_103 -> m32_104  [key=0, style=solid];
m32_103 -> m32_108  [key=2, style=dotted];
m32_105 -> m32_106  [key=0, style=solid];
m32_105 -> m32_109  [key=2, style=dotted];
m32_105 -> m32_110  [key=2, style=dotted];
m32_102 -> m32_103  [key=0, style=solid];
m32_106 -> m32_98  [key=0, style=bold, color=blue];
m32_193 -> m32_194  [key=0, style=solid];
m32_194 -> m32_195  [key=0, style=solid];
m32_194 -> m32_196  [key=2, style=dotted];
m32_195 -> m32_193  [key=0, style=bold, color=blue];
m32_85 -> m32_111  [key=0, style=solid];
m32_85 -> m32_112  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_85 -> m32_115  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_111 -> m32_112  [key=0, style=solid];
m32_111 -> m32_121  [key=1, style=dashed, color=darkseagreen4, label=str];
m32_112 -> m32_113  [key=0, style=solid];
m32_112 -> m32_115  [key=0, style=solid];
m32_115 -> m32_116  [key=0, style=solid];
m32_115 -> m32_115  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_115 -> m32_117  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_115 -> m32_118  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_115 -> m32_120  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_115 -> m32_122  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_121 -> m32_123  [key=0, style=solid];
m32_121 -> m32_124  [key=2, style=dotted];
m32_113 -> m32_114  [key=0, style=solid];
m32_114 -> m32_123  [key=0, style=solid];
m32_116 -> m32_117  [key=0, style=solid];
m32_116 -> m32_119  [key=1, style=dashed, color=darkseagreen4, label="out ulong"];
m32_116 -> m32_123  [key=1, style=dashed, color=darkseagreen4, label="out ulong"];
m32_117 -> m32_118  [key=0, style=solid];
m32_117 -> m32_120  [key=0, style=solid];
m32_118 -> m32_119  [key=0, style=solid];
m32_118 -> m32_118  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_118 -> m32_120  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_118 -> m32_122  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_120 -> m32_121  [key=0, style=solid];
m32_120 -> m32_122  [key=0, style=solid];
m32_122 -> m32_123  [key=0, style=solid];
m32_119 -> m32_117  [key=0, style=solid];
m32_119 -> m32_119  [key=1, style=dashed, color=darkseagreen4, label="out ulong"];
m32_119 -> m32_123  [key=1, style=dashed, color=darkseagreen4, label="out ulong"];
m32_123 -> m32_85  [key=0, style=bold, color=blue];
m32_23 -> m32_21  [key=0, style=bold, color=blue];
m32_179 -> m32_180  [key=0, style=solid];
m32_179 -> m32_182  [key=1, style=dashed, color=darkseagreen4, label=object];
m32_179 -> m32_184  [key=1, style=dashed, color=darkseagreen4, label=object];
m32_180 -> m32_181  [key=0, style=solid];
m32_180 -> m32_182  [key=0, style=solid];
m32_180 -> m32_186  [key=2, style=dotted];
m32_182 -> m32_183  [key=0, style=solid];
m32_182 -> m32_184  [key=0, style=solid];
m32_182 -> m32_187  [key=2, style=dotted];
m32_184 -> m32_185  [key=0, style=solid];
m32_184 -> m32_176  [key=2, style=dotted];
m32_184 -> m32_234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_181 -> m32_185  [key=0, style=solid];
m32_183 -> m32_185  [key=0, style=solid];
m32_185 -> m32_179  [key=0, style=bold, color=blue];
m32_64 -> m32_65  [key=0, style=solid];
m32_64 -> m32_80  [key=2, style=dotted];
m32_64 -> m32_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_64 -> m32_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_64 -> m32_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_65 -> m32_66  [key=0, style=solid];
m32_65 -> m32_81  [key=2, style=dotted];
m32_65 -> m32_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_65 -> m32_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_69 -> m32_70  [key=0, style=solid];
m32_69 -> m32_84  [key=2, style=dotted];
m32_69 -> m32_76  [key=1, style=dashed, color=darkseagreen4, label=days];
m32_72 -> m32_73  [key=0, style=solid];
m32_72 -> m32_85  [key=2, style=dotted];
m32_72 -> m32_76  [key=1, style=dashed, color=darkseagreen4, label=strk];
m32_72 -> m32_6  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_72 -> m32_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm"];
m32_74 -> m32_75  [key=0, style=solid];
m32_74 -> m32_76  [key=1, style=dashed, color=darkseagreen4, label=style];
m32_75 -> m32_76  [key=0, style=solid];
m32_76 -> m32_77  [key=0, style=solid];
m32_77 -> m32_78  [key=0, style=solid];
m32_77 -> m32_12  [key=2, style=dotted];
m32_66 -> m32_67  [key=0, style=solid];
m32_66 -> m32_82  [key=2, style=dotted];
m32_66 -> m32_70  [key=1, style=dashed, color=darkseagreen4, label=marketIdentifier];
m32_68 -> m32_78  [key=0, style=solid];
m32_68 -> m32_79  [key=2, style=dotted];
m32_68 -> m32_83  [key=2, style=dotted];
m32_67 -> m32_68  [key=0, style=solid];
m32_67 -> m32_69  [key=0, style=solid];
m32_70 -> m32_71  [key=0, style=solid];
m32_70 -> m32_76  [key=1, style=dashed, color=darkseagreen4, label=marketCode];
m32_71 -> m32_72  [key=0, style=solid];
m32_73 -> m32_74  [key=0, style=solid];
m32_73 -> m32_73  [key=1, style=dashed, color=darkseagreen4, label=strikeScale];
m32_73 -> m32_76  [key=1, style=dashed, color=darkseagreen4, label=strikeScale];
m32_78 -> m32_24  [key=0, style=bold, color=blue];
m32_86 -> m32_87  [key=0, style=solid];
m32_86 -> m32_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_86 -> m32_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_87 -> m32_88  [key=0, style=solid];
m32_87 -> m32_93  [key=1, style=dashed, color=darkseagreen4, label=pos];
m32_89 -> m32_90  [key=0, style=solid];
m32_89 -> m32_91  [key=1, style=dashed, color=darkseagreen4, label=i];
m32_89 -> m32_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m32_91 -> m32_92  [key=0, style=solid];
m32_88 -> m32_89  [key=0, style=solid];
m32_88 -> m32_93  [key=1, style=dashed, color=darkseagreen4, label=result];
m32_88 -> m32_95  [key=1, style=dashed, color=darkseagreen4, label=result];
m32_93 -> m32_94  [key=0, style=solid];
m32_93 -> m32_97  [key=2, style=dotted];
m32_93 -> m32_93  [key=1, style=dashed, color=darkseagreen4, label=result];
m32_93 -> m32_95  [key=1, style=dashed, color=darkseagreen4, label=result];
m32_95 -> m32_96  [key=0, style=solid];
m32_90 -> m32_91  [key=0, style=solid];
m32_90 -> m32_95  [key=0, style=solid];
m32_94 -> m32_90  [key=0, style=solid];
m32_94 -> m32_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m32_92 -> m32_93  [key=0, style=solid];
m32_96 -> m32_86  [key=0, style=bold, color=blue];
m32_39 -> m32_40  [key=0, style=solid];
m32_39 -> m32_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBars"];
m32_39 -> m32_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBars"];
m32_40 -> m32_41  [key=0, style=solid];
m32_40 -> m32_42  [key=0, style=solid];
m32_228 -> m32_229  [key=0, style=solid];
m32_229 -> m32_230  [key=0, style=solid];
m32_229 -> m32_196  [key=2, style=dotted];
m32_230 -> m32_228  [key=0, style=bold, color=blue];
m32_200 -> m32_201  [key=0, style=solid];
m32_201 -> m32_202  [key=0, style=solid];
m32_201 -> m32_98  [key=2, style=dotted];
m32_201 -> m32_203  [key=1, style=dashed, color=darkseagreen4, label=props];
m32_201 -> m32_204  [key=1, style=dashed, color=darkseagreen4, label=props];
m32_202 -> m32_203  [key=0, style=solid];
m32_202 -> m32_204  [key=0, style=solid];
m32_202 -> m32_235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_203 -> m32_205  [key=0, style=solid];
m32_204 -> m32_205  [key=0, style=solid];
m32_205 -> m32_200  [key=0, style=bold, color=blue];
m32_208 -> m32_209  [key=0, style=solid];
m32_208 -> m32_211  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier.SidBox"];
m32_208 -> m32_213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier.SidBox"];
m32_209 -> m32_210  [key=0, style=solid];
m32_209 -> m32_211  [key=0, style=solid];
m32_209 -> m32_186  [key=2, style=dotted];
m32_211 -> m32_212  [key=0, style=solid];
m32_211 -> m32_213  [key=0, style=solid];
m32_211 -> m32_186  [key=2, style=dotted];
m32_213 -> m32_214  [key=0, style=solid];
m32_213 -> m32_176  [key=2, style=dotted];
m32_210 -> m32_214  [key=0, style=solid];
m32_212 -> m32_214  [key=0, style=solid];
m32_214 -> m32_208  [key=0, style=bold, color=blue];
m32_22 -> m32_23  [key=0, style=solid];
m32_22 -> m32_24  [key=2, style=dotted];
m32_22 -> m32_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_135 -> m32_140  [key=0, style=solid];
m32_140 -> m32_141  [key=0, style=solid];
m32_140 -> m32_142  [key=0, style=solid];
m32_140 -> m32_144  [key=2, style=dotted];
m32_140 -> m32_143  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.SecurityIdentifier"];
m32_141 -> m32_143  [key=0, style=solid];
m32_142 -> m32_143  [key=0, style=solid];
m32_143 -> m32_135  [key=0, style=bold, color=blue];
m32_206 -> m32_207  [key=0, style=solid];
m32_207 -> m32_20  [key=0, style=bold, color=blue];
m32_128 -> m32_129  [key=0, style=solid];
m32_128 -> m32_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_129 -> m32_130  [key=0, style=solid];
m32_131 -> m32_132  [key=0, style=solid];
m32_131 -> m32_133  [key=0, style=solid];
m32_131 -> m32_135  [key=2, style=dotted];
m32_130 -> m32_131  [key=0, style=solid];
m32_132 -> m32_134  [key=0, style=solid];
m32_133 -> m32_134  [key=0, style=solid];
m32_134 -> m32_128  [key=0, style=bold, color=blue];
m32_97 -> m32_125  [key=0, style=solid];
m32_125 -> m32_126  [key=0, style=solid];
m32_125 -> m32_127  [key=2, style=dotted];
m32_126 -> m32_97  [key=0, style=bold, color=blue];
m32_233 -> m32_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_233 -> m32_177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_233 -> m32_182  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_233 -> m32_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_233 -> m32_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_233 -> m32_201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_233 -> m32_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_233 -> m32_203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_233 -> m32_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier"];
m32_234 -> m32_185  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.SecurityIdentifier"];
m32_235 -> m32_205  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.SecurityIdentifier"];
m32_236 -> m32_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier.SidBox"];
m32_236 -> m32_211  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier.SidBox"];
m32_236 -> m32_213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier.SidBox"];
m32_236 -> m32_218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier.SidBox"];
m32_236 -> m32_220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier.SidBox"];
m32_236 -> m32_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityIdentifier.SidBox"];
m33_7 -> m33_9  [key=0, style=solid, color=red];
m33_7 -> m33_12  [key=2, style=dotted, color=red];
m33_0 -> m33_1  [key=0, style=solid];
m33_0 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IDataProvider"];
m33_0 -> m33_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IDataProvider"];
m33_0 -> m33_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IDataProvider"];
m33_0 -> m33_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataSource"];
m33_1 -> m33_2  [key=0, style=solid, color=green];
m33_1 -> m33_4  [key=0, style=solid, color=green];
m33_1 -> m33_6  [key=0, style=solid, color=green];
m33_1 -> m33_8  [key=0, style=solid];
m33_3 -> m33_9  [key=0, style=solid, color=red];
m33_3 -> m33_10  [key=2, style=dotted, color=red];
m33_5 -> m33_9  [key=0, style=solid, color=red];
m33_5 -> m33_11  [key=2, style=dotted, color=red];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> m33_13  [key=2, style=dotted];
m33_2 -> m33_3  [key=0, style=solid, color=green];
m33_4 -> m33_5  [key=0, style=solid, color=green];
m33_6 -> m33_7  [key=0, style=solid, color=green];
m33_9 -> m33_0  [key=0, style=bold, color=blue];
m34_4 -> m34_5  [key=0, style=solid, color=red];
m34_4 -> m34_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>"];
m34_4 -> m34_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>"];
m34_4 -> m34_6  [key=3, color=red, style=bold, label="method methodReturn decimal ComputeNextValue"];
m34_4 -> m34_7  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal ComputeNextValue"];
m34_5 -> m34_6  [key=0, style=solid, color=red];
m34_5 -> m34_7  [key=0, style=solid, color=red];
m34_8 -> m34_9  [key=0, style=solid];
m34_8 -> m34_10  [key=0, style=solid];
m34_8 -> m34_13  [key=2, style=dotted];
m34_9 -> m34_11  [key=0, style=solid];
m34_9 -> m34_13  [key=2, style=dotted];
m34_6 -> m34_12  [key=0, style=solid, color=red];
m34_7 -> m34_8  [key=0, style=solid];
m34_10 -> m34_11  [key=0, style=solid];
m34_11 -> m34_12  [key=0, style=solid];
m34_12 -> m34_4  [key=0, style=bold, color=blue];
m34_0 -> m34_1  [key=0, style=solid];
m34_0 -> m34_5  [key=3, color=red, style=bold, label="Field variable QuantConnect.Interfaces.IDataProvider _dataProvider"];
m34_1 -> m34_0  [key=0, style=bold, color=blue];
m34_2 -> m34_3  [key=0, style=solid];
m34_3 -> m34_2  [key=0, style=bold, color=blue];
m34_14 -> m34_5  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.CandlestickPatterns.ThreeOutside"];
m35_2 -> m35_3  [key=0, style=solid];
m35_3 -> m35_2  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_0  [key=0, style=bold, color=blue];
m35_4 -> m35_5  [key=0, style=solid];
m35_5 -> m35_4  [key=0, style=bold, color=blue];
m35_6 -> m35_7  [key=0, style=solid];
m35_6 -> m35_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m35_6 -> m35_9  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.Data.Market.TradeBar"];
m35_6 -> m35_10  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.Data.Market.TradeBar"];
m35_6 -> m35_11  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.Data.Market.TradeBar"];
m35_6 -> m35_12  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.Data.Market.TradeBar"];
m35_6 -> m35_13  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.Data.Market.TradeBar"];
m35_6 -> m35_14  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.Data.Market.TradeBar"];
m35_6 -> m35_15  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.Data.Market.TradeBar"];
m35_7 -> m35_8  [key=0, style=solid];
m35_7 -> m35_9  [key=0, style=solid];
m35_8 -> m35_15  [key=0, style=solid];
m35_8 -> m35_16  [key=2, style=dotted];
m35_8 -> m35_17  [key=2, style=dotted];
m35_9 -> m35_10  [key=0, style=solid];
m35_10 -> m35_11  [key=0, style=solid];
m35_11 -> m35_12  [key=0, style=solid];
m35_11 -> m35_13  [key=0, style=solid];
m35_12 -> m35_13  [key=0, style=solid];
m35_13 -> m35_14  [key=0, style=solid];
m35_13 -> m35_15  [key=0, style=solid];
m35_14 -> m35_15  [key=0, style=solid];
m35_15 -> m35_6  [key=0, style=bold, color=blue];
m35_18 -> m35_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.TickConsolidator"];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_0  [key=0, style=bold, color=blue];
m36_6 -> m36_7  [key=0, style=solid];
m36_7 -> m36_8  [key=0, style=solid];
m36_8 -> m36_6  [key=0, style=bold, color=blue];
m36_4 -> m36_5  [key=0, style=solid];
m36_5 -> m36_4  [key=0, style=bold, color=blue];
m36_9 -> m36_10  [key=0, style=solid];
m36_9 -> m36_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m36_9 -> m36_12  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.Data.Market.QuoteBar"];
m36_9 -> m36_13  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.Data.Market.QuoteBar"];
m36_10 -> m36_11  [key=0, style=solid];
m36_10 -> m36_12  [key=0, style=solid];
m36_11 -> m36_12  [key=0, style=solid];
m36_11 -> m36_14  [key=2, style=dotted];
m36_11 -> m36_15  [key=2, style=dotted];
m36_11 -> m36_13  [key=1, style=dashed, color=darkseagreen4, label="ref QuantConnect.Data.Market.QuoteBar"];
m36_12 -> m36_13  [key=0, style=solid];
m36_12 -> m36_16  [key=2, style=dotted];
m36_13 -> m36_9  [key=0, style=bold, color=blue];
m36_2 -> m36_3  [key=0, style=solid];
m36_3 -> m36_2  [key=0, style=bold, color=blue];
m36_17 -> m36_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator"];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_2 -> m38_3  [key=0, style=solid];
m38_2 -> m38_9  [key=2, style=dotted];
m38_2 -> m38_10  [key=2, style=dotted];
m38_2 -> m38_4  [key=1, style=dashed, color=darkseagreen4, label=se];
m38_2 -> m38_6  [key=1, style=dashed, color=darkseagreen4, label=se];
m38_3 -> m38_4  [key=0, style=solid];
m38_4 -> m38_5  [key=0, style=solid];
m38_4 -> m38_10  [key=2, style=dotted];
m38_4 -> m38_11  [key=2, style=dotted];
m38_6 -> m38_7  [key=0, style=solid];
m38_6 -> m38_10  [key=2, style=dotted];
m38_6 -> m38_11  [key=2, style=dotted];
m38_5 -> m38_6  [key=0, style=solid];
m38_5 -> m38_12  [key=2, style=dotted];
m38_7 -> m38_8  [key=0, style=solid];
m38_7 -> m38_13  [key=2, style=dotted];
m38_8 -> m38_0  [key=0, style=bold, color=blue];
m38_17 -> m38_18  [key=0, style=solid];
m38_18 -> m38_19  [key=0, style=solid];
m38_19 -> m38_20  [key=0, style=solid];
m38_19 -> m38_9  [key=2, style=dotted];
m38_19 -> m38_10  [key=2, style=dotted];
m38_19 -> m38_21  [key=1, style=dashed, color=darkseagreen4, label=se];
m38_19 -> m38_23  [key=1, style=dashed, color=darkseagreen4, label=se];
m38_20 -> m38_21  [key=0, style=solid];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_10  [key=2, style=dotted];
m38_21 -> m38_11  [key=2, style=dotted];
m38_23 -> m38_24  [key=0, style=solid];
m38_23 -> m38_10  [key=2, style=dotted];
m38_23 -> m38_11  [key=2, style=dotted];
m38_22 -> m38_23  [key=0, style=solid];
m38_22 -> m38_12  [key=2, style=dotted];
m38_24 -> m38_25  [key=0, style=solid];
m38_24 -> m38_13  [key=2, style=dotted];
m38_25 -> m38_17  [key=0, style=bold, color=blue];
m38_29 -> m38_30  [key=0, style=solid];
m38_30 -> m38_31  [key=0, style=solid];
m38_30 -> m38_10  [key=2, style=dotted];
m38_30 -> m38_32  [key=1, style=dashed, color=darkseagreen4, label=first];
m38_30 -> m38_34  [key=1, style=dashed, color=darkseagreen4, label=first];
m38_30 -> m38_35  [key=1, style=dashed, color=darkseagreen4, label=first];
m38_31 -> m38_32  [key=0, style=solid];
m38_31 -> m38_10  [key=2, style=dotted];
m38_31 -> m38_36  [key=1, style=dashed, color=darkseagreen4, label=second];
m38_31 -> m38_37  [key=1, style=dashed, color=darkseagreen4, label=second];
m38_32 -> m38_33  [key=0, style=solid];
m38_32 -> m38_39  [key=2, style=dotted];
m38_32 -> m38_44  [key=1, style=dashed, color=darkseagreen4, label=dates];
m38_32 -> m38_35  [key=1, style=dashed, color=darkseagreen4, label=dates];
m38_32 -> m38_37  [key=1, style=dashed, color=darkseagreen4, label=dates];
m38_34 -> m38_35  [key=0, style=solid];
m38_34 -> m38_11  [key=2, style=dotted];
m38_35 -> m38_36  [key=0, style=solid];
m38_35 -> m38_42  [key=2, style=dotted];
m38_35 -> m38_12  [key=2, style=dotted];
m38_36 -> m38_37  [key=0, style=solid];
m38_36 -> m38_11  [key=2, style=dotted];
m38_37 -> m38_38  [key=0, style=solid];
m38_37 -> m38_42  [key=2, style=dotted];
m38_37 -> m38_12  [key=2, style=dotted];
m38_33 -> m38_34  [key=0, style=solid];
m38_33 -> m38_40  [key=2, style=dotted];
m38_33 -> m38_41  [key=2, style=dotted];
m38_33 -> m38_44  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m38_33 -> m38_36  [key=1, style=dashed, color=darkseagreen4, label=se];
m38_38 -> m38_29  [key=0, style=bold, color=blue];
m38_47 -> m38_48  [key=0, style=solid];
m38_48 -> m38_49  [key=0, style=solid];
m38_49 -> m38_50  [key=0, style=solid];
m38_49 -> m38_10  [key=2, style=dotted];
m38_49 -> m38_51  [key=1, style=dashed, color=darkseagreen4, label=first];
m38_49 -> m38_54  [key=1, style=dashed, color=darkseagreen4, label=first];
m38_50 -> m38_51  [key=0, style=solid];
m38_50 -> m38_9  [key=2, style=dotted];
m38_50 -> m38_54  [key=1, style=dashed, color=darkseagreen4, label=se];
m38_51 -> m38_52  [key=0, style=solid];
m38_51 -> m38_11  [key=2, style=dotted];
m38_54 -> m38_55  [key=0, style=solid];
m38_54 -> m38_57  [key=2, style=dotted];
m38_54 -> m38_11  [key=2, style=dotted];
m38_52 -> m38_53  [key=0, style=solid];
m38_52 -> m38_13  [key=2, style=dotted];
m38_53 -> m38_54  [key=0, style=solid];
m38_53 -> m38_55  [key=1, style=dashed, color=darkseagreen4, label=triggered];
m38_55 -> m38_56  [key=0, style=solid];
m38_55 -> m38_12  [key=2, style=dotted];
m38_56 -> m38_47  [key=0, style=bold, color=blue];
m38_58 -> m38_59  [key=0, style=solid];
m38_14 -> m38_15  [key=0, style=solid];
m38_15 -> m38_16  [key=0, style=solid];
m38_15 -> m38_5  [key=1, style=dashed, color=darkseagreen4, label=triggered];
m38_15 -> m38_7  [key=1, style=dashed, color=darkseagreen4, label=triggered];
m38_16 -> m38_14  [key=0, style=bold, color=blue];
m38_26 -> m38_27  [key=0, style=solid];
m38_27 -> m38_28  [key=0, style=solid];
m38_27 -> m38_22  [key=1, style=dashed, color=darkseagreen4, label=triggered];
m38_27 -> m38_24  [key=1, style=dashed, color=darkseagreen4, label=triggered];
m38_28 -> m38_26  [key=0, style=bold, color=blue];
m38_44 -> m38_45  [key=0, style=solid];
m38_44 -> m38_46  [key=2, style=dotted];
m38_43 -> m38_44  [key=0, style=solid];
m38_45 -> m38_43  [key=0, style=bold, color=blue];
m38_59 -> m38_60  [key=0, style=solid];
m38_59 -> m38_52  [key=1, style=dashed, color=darkseagreen4, label=triggered];
m38_60 -> m38_58  [key=0, style=bold, color=blue];
m38_61 -> m38_44  [key=1, style=dashed, color=darkseagreen4, label=dates];
m39_2 -> m39_3  [key=0, style=solid];
m39_3 -> m39_2  [key=0, style=bold, color=blue];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_0  [key=0, style=bold, color=blue];
m39_11 -> m39_12  [key=0, style=solid];
m39_11 -> m39_14  [key=1, style=dashed, color=red, label="QuantConnect.Securities.Security"];
m39_11 -> m39_17  [key=1, style=dashed, color=red, label=decimal];
m39_11 -> m39_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m39_11 -> m39_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m39_11 -> m39_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m39_11 -> m39_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m39_11 -> m39_13  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Orders.Order GenerateMarginCallOrder"];
m39_12 -> m39_13  [key=0, style=solid];
m39_12 -> m39_14  [key=0, style=solid, color=red];
m39_14 -> m39_15  [key=0, style=solid, color=red];
m39_14 -> m39_17  [key=1, style=dashed, color=red, label=forex];
m39_17 -> m39_18  [key=0, style=solid, color=red];
m39_18 -> m39_19  [key=0, style=solid];
m39_18 -> m39_24  [key=2, style=dotted];
m39_19 -> m39_20  [key=0, style=solid];
m39_19 -> m39_25  [key=2, style=dotted];
m39_19 -> m39_19  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m39_19 -> m39_21  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m39_19 -> m39_22  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m39_20 -> m39_21  [key=0, style=solid];
m39_20 -> m39_22  [key=0, style=solid];
m39_22 -> m39_23  [key=0, style=solid];
m39_22 -> m39_26  [key=2, style=dotted];
m39_13 -> m39_23  [key=0, style=solid];
m39_15 -> m39_16  [key=0, style=solid, color=red];
m39_15 -> m39_17  [key=0, style=solid, color=red];
m39_16 -> m39_23  [key=0, style=solid, color=red];
m39_21 -> m39_22  [key=0, style=solid];
m39_21 -> m39_21  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m39_23 -> m39_11  [key=0, style=bold, color=blue];
m39_4 -> m39_5  [key=0, style=solid];
m39_4 -> m39_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m39_4 -> m39_7  [key=1, style=dashed, color=red, label="QuantConnect.Orders.Order"];
m39_5 -> m39_6  [key=0, style=solid];
m39_5 -> m39_7  [key=1, style=dashed, color=red, label=forex];
m39_6 -> m39_7  [key=0, style=solid, color=red];
m39_6 -> m39_10  [key=2, style=dotted];
m39_6 -> m39_8  [key=1, style=dashed, color=red, label=orderFees];
m39_7 -> m39_8  [key=0, style=solid, color=red];
m39_8 -> m39_9  [key=0, style=solid, color=red];
m39_9 -> m39_4  [key=0, style=bold, color=blue];
m39_27 -> m39_8  [key=1, style=dashed, color=red, label="QuantConnect.Securities.Forex.ForexMarginModel"];
m40_11 -> m40_0  [key=0, style=bold, color=blue];
m40_0 -> m40_1  [key=0, style=solid];
m40_1 -> m40_2  [key=0, style=solid];
m40_1 -> m40_12  [key=2, style=dotted];
m40_1 -> m40_6  [key=1, style=dashed, color=red, label=time];
m40_2 -> m40_3  [key=0, style=solid];
m40_2 -> m40_13  [key=2, style=dotted];
m40_2 -> m40_8  [key=1, style=dashed, color=darkseagreen4, label=source];
m40_6 -> m40_7  [key=0, style=solid, color=red];
m40_6 -> m40_18  [key=2, style=dotted, color=red];
m40_6 -> m40_8  [key=1, style=dashed, color=red, label=factory];
m40_3 -> m40_4  [key=0, style=solid];
m40_3 -> m40_14  [key=2, style=dotted];
m40_3 -> m40_15  [key=2, style=dotted];
m40_3 -> m40_6  [key=1, style=dashed, color=red, label=config];
m40_8 -> m40_9  [key=0, style=solid];
m40_8 -> n154  [key=2, style=dotted];
m40_8 -> m40_22  [key=2, style=dotted];
m40_8 -> m40_23  [key=2, style=dotted];
m40_8 -> m40_10  [key=1, style=dashed, color=darkseagreen4, label=actual];
m40_4 -> m40_5  [key=0, style=solid];
m40_4 -> m40_16  [key=2, style=dotted];
m40_4 -> m40_6  [key=1, style=dashed, color=red, label=dataProvider];
m40_5 -> m40_6  [key=0, style=solid, color=red];
m40_5 -> m40_17  [key=2, style=dotted];
m40_7 -> m40_8  [key=0, style=solid];
m40_7 -> m40_19  [key=2, style=dotted];
m40_7 -> m40_20  [key=2, style=dotted];
m40_7 -> m40_9  [key=1, style=dashed, color=darkseagreen4, label=expected];
m40_9 -> m40_10  [key=0, style=solid];
m40_9 -> m40_24  [key=2, style=dotted];
m40_9 -> m40_25  [key=2, style=dotted];
m40_9 -> m40_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_10 -> m40_11  [key=0, style=solid];
m40_10 -> m40_26  [key=2, style=dotted];
m40_10 -> m40_27  [key=2, style=dotted];
m40_10 -> m40_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_32 -> m40_33  [key=0, style=solid];
m40_28 -> m40_29  [key=0, style=solid];
m40_31 -> m40_32  [key=0, style=solid];
m40_29 -> m40_30  [key=0, style=solid];
m40_30 -> m40_28  [key=0, style=bold, color=blue];
m40_33 -> m40_31  [key=0, style=bold, color=blue];
m41_9 -> m41_10  [key=0, style=solid];
m41_10 -> m41_11  [key=0, style=solid];
m41_10 -> m41_13  [key=2, style=dotted];
m41_10 -> m41_12  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m41_11 -> m41_12  [key=0, style=solid];
m41_12 -> m41_9  [key=0, style=bold, color=blue];
m41_2 -> m41_3  [key=0, style=solid];
m41_3 -> m41_4  [key=0, style=solid];
m41_4 -> m41_2  [key=0, style=bold, color=blue];
m41_5 -> m41_6  [key=0, style=solid];
m41_6 -> m41_7  [key=0, style=solid];
m41_6 -> m41_8  [key=2, style=dotted];
m41_7 -> m41_5  [key=0, style=bold, color=blue];
m41_0 -> m41_1  [key=0, style=solid];
m41_1 -> m41_0  [key=0, style=bold, color=blue];
}
