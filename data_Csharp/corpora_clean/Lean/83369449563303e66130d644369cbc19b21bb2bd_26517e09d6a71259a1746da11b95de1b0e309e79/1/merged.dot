digraph  {
n121 [label=transactionHandler, span=""];
n122 [label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel", span=""];
n123 [label="QuantConnect.Orders.MarketOrder", span=""];
n0 [label="Entry QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", span="35-35", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n1 [label="Security security", span="37-37", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n2 [label="MarketOrder order", span="38-38", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n3 [label="OrderTicket ticket", span="39-39", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n4 [label="PartialMarketFillModel model", span="40-40", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n5 [label="BasicTemplateAlgorithm algorithm", span="41-41", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n6 [label="var referenceTimeUtc = InitializeTest(out algorithm, out security, out model, out order, out ticket)", span="42-42", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n7 [label="algorithm.SetDateTime(referenceTimeUtc.AddSeconds(1))", span="44-44", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n18 [label="Entry QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", span="87-87", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n8 [label="var fill1 = model.MarketFill(security, order)", span="46-46", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n9 [label="ticket.AddOrderEvent(fill1)", span="47-47", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n10 [label="Assert.AreEqual(order.Quantity / 2, fill1.FillQuantity)", span="48-48", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n12 [label="algorithm.SetDateTime(referenceTimeUtc.AddSeconds(2))", span="51-51", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n13 [label="var fill2 = model.MarketFill(security, order)", span="53-53", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n14 [label="ticket.AddOrderEvent(fill2)", span="54-54", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n15 [label="Assert.AreEqual(order.Quantity / 2, fill2.FillQuantity)", span="55-55", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n19 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)"];
n20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="913-913", cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)"];
n21 [label="Entry QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="155-155", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n11 [label="Assert.AreEqual(OrderStatus.PartiallyFilled, fill1.Status)", span="49-49", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n22 [label="Entry QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", span="324-324", cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)"];
n23 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual"];
n16 [label="Assert.AreEqual(OrderStatus.Filled, fill2.Status)", span="56-56", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n17 [label="Exit QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", span="35-35", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()"];
n24 [label="Entry QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", span="60-60", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n25 [label="Security security", span="62-62", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n26 [label="MarketOrder order", span="63-63", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n27 [label="OrderTicket ticket", span="64-64", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n28 [label="PartialMarketFillModel model", span="65-65", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n29 [label="BasicTemplateAlgorithm algorithm", span="66-66", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n30 [label="var referenceTimeUtc = InitializeTest(out algorithm, out security, out model, out order, out ticket)", span="67-67", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n31 [label="var fill1 = model.MarketFill(security, order)", span="69-69", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n32 [label="ticket.AddOrderEvent(fill1)", span="70-70", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n33 [label="Assert.AreEqual(order.Quantity / 2, fill1.FillQuantity)", span="71-71", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n35 [label="var fill2 = model.MarketFill(security, order)", span="74-74", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n36 [label="ticket.AddOrderEvent(fill2)", span="75-75", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n39 [label="algorithm.SetDateTime(referenceTimeUtc.AddSeconds(1))", span="79-79", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n40 [label="var fill3 = model.MarketFill(security, order)", span="81-81", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n41 [label="ticket.AddOrderEvent(fill3)", span="82-82", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n42 [label="Assert.AreEqual(order.Quantity / 2, fill3.FillQuantity)", span="83-83", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n34 [label="Assert.AreEqual(OrderStatus.PartiallyFilled, fill1.Status)", span="72-72", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n37 [label="Assert.AreEqual(0, fill2.FillQuantity)", span="76-76", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n38 [label="Assert.AreEqual(OrderStatus.None, fill2.Status)", span="77-77", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n43 [label="Assert.AreEqual(OrderStatus.Filled, fill3.Status)", span="84-84", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n44 [label="Exit QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", span="60-60", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()"];
n45 [label="var referenceTimeNY = new DateTime(2015, 12, 21, 13, 0, 0)", span="89-89", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n46 [label="var referenceTimeUtc = referenceTimeNY.ConvertToUtc(TimeZones.NewYork)", span="90-90", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n65 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)"];
n47 [label="algorithm = new BasicTemplateAlgorithm()", span="91-91", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n66 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="619-619", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)"];
n48 [label="algorithm.SetDateTime(referenceTimeUtc)", span="92-92", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n60 [label="order = new MarketOrder(Symbols.SPY, 100, referenceTimeUtc) { Id = 1 }", span="110-110", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n63 [label="return referenceTimeUtc;", span="114-114", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n67 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.BasicTemplateAlgorithm()", span="28-28", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.BasicTemplateAlgorithm()"];
n50 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="95-95", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n52 [label="algorithm.Transactions.SetOrderProcessor(transactionHandler)", span="98-98", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n55 [label="model = new PartialMarketFillModel(algorithm.Transactions, 2)", span="103-103", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n56 [label="algorithm.Securities.Add(security)", span="105-105", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n57 [label="algorithm.Securities[Symbols.SPY].FillModel = model", span="106-106", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n59 [label="algorithm.SetFinishedWarmingUp()", span="108-108", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n61 [label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, algorithm.UtcTime, null)", span="112-112", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n62 [label="ticket = algorithm.Transactions.ProcessRequest(request)", span="113-113", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n64 [label="Exit QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", span="87-87", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n49 [label="var transactionHandler = new BacktestingTransactionHandler()", span="94-94", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n68 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", span="25-25", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()"];
n51 [label="Task.Run(() => transactionHandler.Run())", span="96-96", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n88 [label="transactionHandler.Run()", span="96-96", cluster="lambda expression"];
n69 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)"];
n70 [label="Entry QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="51-51", cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)"];
n71 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="36-36", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)"];
n72 [label="Entry System.Threading.Tasks.Task.Run(System.Action)", span="0-0", cluster="System.Threading.Tasks.Task.Run(System.Action)"];
n87 [label="Entry lambda expression", span="96-96", cluster="lambda expression"];
n53 [label="var config = new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Second, TimeZones.NewYork, TimeZones.NewYork, false, false, false)", span="100-100", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n73 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="339-339", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)"];
n54 [label="security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="101-101", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n74 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)"];
n75 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="302-302", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)"];
n76 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)"];
n77 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="80-80", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)"];
n78 [label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84", cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)"];
n58 [label="security.SetMarketPrice(new Tick { Symbol = Symbols.SPY, Value = 100 })", span="107-107", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)"];
n79 [label="Entry QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)", span="143-143", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)"];
n80 [label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81", cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)"];
n81 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()"];
n82 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="578-578", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)"];
n83 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="142-142", cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()"];
n84 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)"];
n85 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)"];
n86 [label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)"];
n89 [label="Exit lambda expression", span="96-96", cluster="lambda expression"];
n90 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="473-473", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
n91 [label="_orderProvider = orderProvider", span="145-145", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)"];
n92 [label="_percent = 1m / numberOfFills", span="146-146", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)"];
n93 [label="Exit QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)", span="143-143", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)"];
n94 [label="var currentUtcTime = asset.LocalTime.ConvertToUtc(asset.Exchange.TimeZone)", span="157-157", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n95 [label="var ticket = _orderProvider.GetOrderTickets(x => x.OrderId == order.Id).FirstOrDefault()", span="159-159", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n119 [label="x.OrderId == order.Id", span="159-159", cluster="lambda expression"];
n97 [label="return new OrderEvent(order, currentUtcTime, 0);", span="163-163", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n99 [label="var increment = TimeSpan.FromTicks(Math.Max(asset.Resolution.ToTimeSpan().Ticks, 1))", span="168-168", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n101 [label="return new OrderEvent(order, currentUtcTime, 0);", span="172-172", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n103 [label="var fill = base.MarketFill(asset, order)", span="176-176", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n104 [label="var filledThisTime = Math.Min(remaining, (int)(_percent * order.Quantity))", span="177-177", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n100 [label="lastOrderEvent != null && currentUtcTime - lastOrderEvent.UtcTime < increment", span="169-169", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n96 [label="ticket == null", span="160-160", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n109 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50", cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)"];
n110 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()"];
n118 [label="Entry lambda expression", span="159-159", cluster="lambda expression"];
n98 [label="var lastOrderEvent = ticket.OrderEvents.LastOrDefault()", span="167-167", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n102 [label="var remaining = (int)(ticket.Quantity - ticket.QuantityFilled)", span="175-175", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n112 [label="Entry System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()"];
n113 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="725-725", cluster="QuantConnect.Resolution.ToTimeSpan()"];
n114 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)"];
n115 [label="Entry System.TimeSpan.FromTicks(long)", span="0-0", cluster="System.TimeSpan.FromTicks(long)"];
n106 [label="fill.Status = remaining == filledThisTime\r\n                    ? OrderStatus.Filled\r\n                    : OrderStatus.PartiallyFilled", span="181-183", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n116 [label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="36-36", cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n105 [label="fill.FillQuantity = filledThisTime", span="178-178", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n107 [label="return fill;", span="185-185", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n117 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)"];
n108 [label="Exit QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="155-155", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n111 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)"];
n120 [label="Exit lambda expression", span="159-159", cluster="lambda expression"];
m1_45 [label="Entry QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="117-117", cluster="QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="MapFileResolverTests.cs"];
m1_49 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="MapFileResolverTests.cs"];
m1_50 [label="Entry QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Securities.Security)", span="124-124", cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Securities.Security)", file="MapFileResolverTests.cs"];
m1_67 [label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58", cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="MapFileResolverTests.cs"];
m1_46 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="MapFileResolverTests.cs"];
m1_62 [label="Entry Unk.TryGetValue", span="", cluster="Unk.TryGetValue", file="MapFileResolverTests.cs"];
m1_6 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_68 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_71 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_72 [label="x.Status.IsOpen() && x.Symbol == config.Symbol", span="104-104", cluster="lambda expression", color=green, community=0, file="MapFileResolverTests.cs"];
m1_73 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_69 [label="x.Security.Symbol", span="75-75", cluster="lambda expression", color=green, community=0, file="MapFileResolverTests.cs"];
m1_70 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_7 [label="dataFeed.Subscriptions", span="49-49", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_8 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_5 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", span="43-43", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", file="MapFileResolverTests.cs"];
m1_52 [label="Entry QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="97-97", cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="MapFileResolverTests.cs"];
m1_58 [label="Entry QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="154-154", cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="MapFileResolverTests.cs"];
m1_66 [label="Entry QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", span="136-136", cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="MapFileResolverTests.cs"];
m1_60 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="367-367", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="MapFileResolverTests.cs"];
m1_9 [label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="58-58", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_24 [label="!universe.CanRemoveMember(dateTimeUtc, subscription.Security)", span="98-98", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=green, community=0, file="MapFileResolverTests.cs"];
m1_23 [label="selections.Contains(config.Symbol)", span="95-95", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=green, community=0, file="MapFileResolverTests.cs"];
m1_18 [label="_dataFeed.Subscriptions", span="81-81", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_25 [label="removals.Add(subscription.Security)", span="101-101", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=green, community=0, file="MapFileResolverTests.cs"];
m1_14 [label="var selections = selectSymbolsResult.ToHashSet()", span="72-72", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=green, community=0, file="MapFileResolverTests.cs"];
m1_11 [label="var selectSymbolsResult = universe.SelectSymbols(dateTimeUtc, universeData.Data)", span="63-63", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_12 [label="ReferenceEquals(selectSymbolsResult, Universe.Unchanged)", span="66-66", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_15 [label="var existingSubscriptions = _dataFeed.Subscriptions.ToHashSet(x => x.Security.Symbol)", span="75-75", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=green, community=0, file="MapFileResolverTests.cs"];
m1_31 [label=selections, span="120-120", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_13 [label="return SecurityChanges.None;", span="68-68", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=green, community=0, file="MapFileResolverTests.cs"];
m1_16 [label="var additions = new List<Security>()", span="77-77", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=green, community=0, file="MapFileResolverTests.cs"];
m1_32 [label="existingSubscriptions.Contains(symbol)", span="123-123", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_21 [label="var config = subscription.Configuration", span="89-89", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_22 [label="config.IsInternalFeed", span="92-92", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_17 [label="var removals = new List<Security>()", span="78-78", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_40 [label="additions.Add(security)", span="149-149", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_43 [label="return additions.Count + removals.Count != 0\r\n                ? new SecurityChanges(additions, removals)\r\n                : SecurityChanges.None;", span="159-161", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_26 [label="var openOrders = _algorithm.Transactions.GetOrders(x => x.Status.IsOpen() && x.Symbol == config.Symbol)", span="104-104", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=green, community=0, file="MapFileResolverTests.cs"];
m1_27 [label="!subscription.Security.HoldStock && !openOrders.Any()", span="105-105", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=green, community=0, file="MapFileResolverTests.cs"];
m1_28 [label="subscription.Security.Cache.Reset()", span="110-110", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_10 [label="var settings = universe.UniverseSettings", span="60-60", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_19 [label="!universe.ContainsMember(subscription.Security)", span="84-84", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_30 [label="universe.RemoveMember(dateTimeUtc, subscription.Security)", span="114-114", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_41 [label="_dataFeed.AddSubscription(universe, security, dateTimeUtc, _algorithm.EndDate.ConvertToUtc(_algorithm.TimeZone))", span="152-152", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_42 [label="universe.AddMember(dateTimeUtc, security)", span="154-154", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_20 [label="subscription.IsUniverseSelectionSubscription", span="87-87", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_29 [label="_dataFeed.RemoveSubscription(subscription)", span="112-112", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_38 [label="!_algorithm.Securities.TryGetValue(symbol, out security)", span="136-136", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_39 [label="security = SecurityManager.CreateSecurity(_algorithm.Portfolio, _algorithm.SubscriptionManager, _marketHoursDatabase,\r\n                        symbol,\r\n                        settings.Resolution,\r\n                        settings.FillForward,\r\n                        settings.Leverage,\r\n                        settings.ExtendedMarketHours,\r\n                        false,\r\n                        false,\r\n                        false)", span="138-146", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_34 [label="!_limiter.CanAddSubscription(settings.Resolution, out reason)", span="127-127", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_35 [label="_algorithm.Error(reason)", span="129-129", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_33 [label="string reason", span="126-126", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_36 [label="Log.Trace(''UniverseSelection.ApplyUniverseSelection(): Skipping adding subscriptions: '' + reason)", span="130-130", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_37 [label="Security security", span="135-135", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_44 [label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="58-58", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="MapFileResolverTests.cs"];
m1_59 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", span="84-84", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="MapFileResolverTests.cs"];
m1_65 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="62-62", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="MapFileResolverTests.cs"];
m1_54 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="263-263", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="MapFileResolverTests.cs"];
m1_48 [label="Entry System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", span="82-82", cluster="System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", file="MapFileResolverTests.cs"];
m1_55 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="MapFileResolverTests.cs"];
m1_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", span="45-45", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="MapFileResolverTests.cs"];
m1_1 [label="_dataFeed = dataFeed", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="MapFileResolverTests.cs"];
m1_2 [label="_algorithm = algorithm", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="MapFileResolverTests.cs"];
m1_3 [label="_limiter = new SubscriptionLimiter(() => dataFeed.Subscriptions, controls.TickLimit, controls.SecondLimit, controls.MinuteLimit)", span="49-49", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="MapFileResolverTests.cs"];
m1_4 [label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", span="45-45", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="MapFileResolverTests.cs"];
m1_53 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="MapFileResolverTests.cs"];
m1_51 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="MapFileResolverTests.cs"];
m1_74 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="MapFileResolverTests.cs"];
m1_47 [label="Entry Unk.ToHashSet", span="", cluster="Unk.ToHashSet", file="MapFileResolverTests.cs"];
m1_61 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="MapFileResolverTests.cs"];
m1_57 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="69-69", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="MapFileResolverTests.cs"];
m1_63 [label="Entry Unk.CreateSecurity", span="", cluster="Unk.CreateSecurity", file="MapFileResolverTests.cs"];
m1_56 [label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="58-58", cluster="QuantConnect.Securities.SecurityCache.Reset()", file="MapFileResolverTests.cs"];
m1_75 [label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", span="", file="MapFileResolverTests.cs"];
m1_77 [label=config, span="", file="MapFileResolverTests.cs"];
m1_76 [label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", span="", file="MapFileResolverTests.cs"];
m2_0 [label="Entry QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45", cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="Split.cs"];
m2_1 [label="Value = value", span="47-47", cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="Split.cs"];
m2_2 [label="Status = status", span="48-48", cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="Split.cs"];
m2_3 [label="Exit QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45", cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="Split.cs"];
m2_4 [label="QuantConnect.Indicators.IndicatorResult", span="", file="Split.cs"];
n121 -> n88  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
n122 -> n91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
n122 -> n92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
n122 -> n95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
n122 -> n103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
n122 -> n104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
n123 -> n119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n18  [key=3, color=darkorchid, style=bold, label="Field variable System.TimeSpan _loaderTimeLimit"];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n18  [key=3, color=darkorchid, style=bold, label="Field variable QuantConnect.Language _language"];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n18  [key=2, style=dotted];
n6 -> n8  [key=1, style=dashed, color=darkseagreen4, label=security];
n6 -> n9  [key=1, style=dashed, color=darkseagreen4, label=ticket];
n6 -> n10  [key=1, style=dashed, color=darkseagreen4, label=order];
n6 -> n12  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n6 -> n13  [key=1, style=dashed, color=darkseagreen4, label=security];
n6 -> n14  [key=1, style=dashed, color=darkseagreen4, label=ticket];
n6 -> n15  [key=1, style=dashed, color=darkseagreen4, label=order];
n7 -> n8  [key=0, style=solid];
n7 -> n19  [key=2, style=dotted];
n7 -> n20  [key=2, style=dotted];
n18 -> n45  [key=0, style=solid];
n18 -> n5  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm algorithm"];
n18 -> n29  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm algorithm"];
n18 -> n1  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n18 -> n25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n18 -> n4  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel model"];
n18 -> n28  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel model"];
n18 -> n2  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.MarketOrder order"];
n18 -> n26  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.MarketOrder order"];
n18 -> n3  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderTicket ticket"];
n18 -> n27  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderTicket ticket"];
n18 -> n46  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime InitializeTest"];
n8 -> n9  [key=0, style=solid];
n8 -> n21  [key=2, style=dotted];
n8 -> n10  [key=1, style=dashed, color=darkseagreen4, label=fill1];
n8 -> n11  [key=1, style=dashed, color=darkseagreen4, label=fill1];
n9 -> n10  [key=0, style=solid];
n9 -> n22  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n23  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n19  [key=2, style=dotted];
n12 -> n20  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n21  [key=2, style=dotted];
n13 -> n15  [key=1, style=dashed, color=darkseagreen4, label=fill2];
n13 -> n16  [key=1, style=dashed, color=darkseagreen4, label=fill2];
n14 -> n15  [key=0, style=solid];
n14 -> n22  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n23  [key=2, style=dotted];
n21 -> n94  [key=0, style=solid];
n21 -> n95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
n21 -> n119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
n21 -> n97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
n21 -> n99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n21 -> n101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
n21 -> n103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n21 -> n104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
n21 -> n1  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security asset"];
n21 -> n25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security asset"];
n21 -> n2  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.MarketOrder order"];
n21 -> n26  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.MarketOrder order"];
n11 -> n12  [key=0, style=solid];
n11 -> n23  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n23  [key=2, style=dotted];
n17 -> n0  [key=0, style=bold, color=blue];
n24 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n26  [key=3, color=darkorchid, style=bold, label="Field variable string FrameworkBaseTypeFullName"];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n18  [key=2, style=dotted];
n30 -> n32  [key=1, style=dashed, color=darkseagreen4, label=ticket];
n30 -> n33  [key=1, style=dashed, color=darkseagreen4, label=order];
n30 -> n35  [key=1, style=dashed, color=darkseagreen4, label=security];
n30 -> n36  [key=1, style=dashed, color=darkseagreen4, label=ticket];
n30 -> n39  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n30 -> n40  [key=1, style=dashed, color=darkseagreen4, label=security];
n30 -> n41  [key=1, style=dashed, color=darkseagreen4, label=ticket];
n30 -> n42  [key=1, style=dashed, color=darkseagreen4, label=order];
n31 -> n32  [key=0, style=solid];
n31 -> n21  [key=2, style=dotted];
n31 -> n33  [key=1, style=dashed, color=darkseagreen4, label=fill1];
n31 -> n34  [key=1, style=dashed, color=darkseagreen4, label=fill1];
n32 -> n33  [key=0, style=solid];
n32 -> n22  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n23  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n21  [key=2, style=dotted];
n35 -> n37  [key=1, style=dashed, color=darkseagreen4, label=fill2];
n35 -> n38  [key=1, style=dashed, color=darkseagreen4, label=fill2];
n36 -> n37  [key=0, style=solid];
n36 -> n22  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n19  [key=2, style=dotted];
n39 -> n20  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n21  [key=2, style=dotted];
n40 -> n42  [key=1, style=dashed, color=darkseagreen4, label=fill3];
n40 -> n43  [key=1, style=dashed, color=darkseagreen4, label=fill3];
n41 -> n42  [key=0, style=solid];
n41 -> n22  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n23  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n23  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n23  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n23  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n23  [key=2, style=dotted];
n44 -> n24  [key=0, style=bold, color=blue];
n45 -> n46  [key=0, style=solid];
n45 -> n65  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n66  [key=2, style=dotted];
n46 -> n48  [key=1, style=dashed, color=darkseagreen4, label=referenceTimeUtc];
n46 -> n60  [key=1, style=dashed, color=darkseagreen4, label=referenceTimeUtc];
n46 -> n63  [key=1, style=dashed, color=darkseagreen4, label=referenceTimeUtc];
n47 -> n48  [key=0, style=solid];
n47 -> n67  [key=2, style=dotted];
n47 -> n50  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
n47 -> n52  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
n47 -> n55  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
n47 -> n56  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
n47 -> n57  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
n47 -> n59  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
n47 -> n61  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
n47 -> n62  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
n47 -> n64  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
n48 -> n49  [key=0, style=solid];
n48 -> n20  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n84  [key=2, style=dotted];
n60 -> n64  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Orders.MarketOrder"];
n63 -> n64  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n50 -> n69  [key=2, style=dotted];
n50 -> n70  [key=2, style=dotted];
n50 -> n71  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n73  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n79  [key=2, style=dotted];
n55 -> n57  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
n55 -> n64  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
n56 -> n57  [key=0, style=solid];
n56 -> n80  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n83  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n85  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n86  [key=2, style=dotted];
n62 -> n64  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Orders.OrderTicket"];
n64 -> n18  [key=0, style=bold, color=blue];
n49 -> n50  [key=0, style=solid];
n49 -> n68  [key=2, style=dotted];
n49 -> n51  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
n49 -> n88  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
n49 -> n52  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
n51 -> n52  [key=0, style=solid];
n51 -> n72  [key=2, style=dotted];
n51 -> n87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n88 -> n89  [key=0, style=solid];
n88 -> n90  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n74  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n75  [key=2, style=dotted];
n54 -> n76  [key=2, style=dotted];
n54 -> n77  [key=2, style=dotted];
n54 -> n78  [key=2, style=dotted];
n54 -> n56  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
n54 -> n58  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
n54 -> n61  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
n54 -> n64  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
n58 -> n59  [key=0, style=solid];
n58 -> n81  [key=2, style=dotted];
n58 -> n82  [key=2, style=dotted];
n79 -> n91  [key=0, style=solid];
n79 -> n92  [key=1, style=dashed, color=darkseagreen4, label=int];
n89 -> n87  [key=0, style=bold, color=blue];
n91 -> n92  [key=0, style=solid];
n91 -> n104  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryCreatePythonAlgorithm"];
n92 -> n93  [key=0, style=solid];
n93 -> n79  [key=0, style=bold, color=blue];
n94 -> n95  [key=0, style=solid];
n94 -> n66  [key=2, style=dotted];
n94 -> n97  [key=1, style=dashed, color=darkseagreen4, label=currentUtcTime];
n94 -> n100  [key=1, style=dashed, color=darkseagreen4, label=currentUtcTime];
n94 -> n101  [key=1, style=dashed, color=darkseagreen4, label=currentUtcTime];
n95 -> n96  [key=0, style=solid];
n95 -> n109  [key=2, style=dotted];
n95 -> n110  [key=2, style=dotted];
n95 -> n118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n95 -> n98  [key=1, style=dashed, color=darkseagreen4, label=ticket];
n95 -> n102  [key=1, style=dashed, color=darkseagreen4, label=ticket];
n119 -> n120  [key=0, style=solid];
n97 -> n108  [key=0, style=solid];
n97 -> n111  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n99 -> n113  [key=2, style=dotted];
n99 -> n114  [key=2, style=dotted];
n99 -> n115  [key=2, style=dotted];
n101 -> n108  [key=0, style=solid];
n101 -> n111  [key=2, style=dotted];
n103 -> n104  [key=0, style=solid];
n103 -> n116  [key=2, style=dotted];
n103 -> n105  [key=1, style=dashed, color=darkseagreen4, label=fill];
n103 -> n106  [key=1, style=dashed, color=darkseagreen4, label=fill];
n103 -> n107  [key=1, style=dashed, color=darkseagreen4, label=fill];
n104 -> n105  [key=0, style=solid];
n104 -> n117  [key=2, style=dotted];
n104 -> n106  [key=1, style=dashed, color=darkseagreen4, label=filledThisTime];
n100 -> n101  [key=0, style=solid];
n100 -> n102  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n96 -> n98  [key=0, style=solid];
n118 -> n119  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n98 -> n112  [key=2, style=dotted];
n98 -> n100  [key=1, style=dashed, color=darkseagreen4, label=lastOrderEvent];
n102 -> n103  [key=0, style=solid];
n102 -> n104  [key=1, style=dashed, color=darkseagreen4, label=remaining];
n102 -> n106  [key=1, style=dashed, color=darkseagreen4, label=remaining];
n106 -> n107  [key=0, style=solid];
n105 -> n106  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n108 -> n21  [key=0, style=bold, color=blue];
n120 -> n118  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid, color=green];
m1_71 -> m1_72  [key=0, style=solid, color=green];
m1_72 -> m1_73  [key=0, style=solid, color=green];
m1_72 -> m1_74  [key=2, style=dotted, color=green];
m1_73 -> m1_71  [key=0, style=bold, color=blue];
m1_69 -> m1_70  [key=0, style=solid, color=green];
m1_70 -> m1_68  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_6  [key=0, style=bold, color=blue];
m1_9 -> m1_24  [key=1, style=dashed, color=green, label="QuantConnect.Data.UniverseSelection.Universe"];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m1_9 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m1_9 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m1_9 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m1_9 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m1_24 -> m1_25  [key=0, style=solid, color=green];
m1_24 -> m1_18  [key=0, style=solid, color=green];
m1_24 -> m1_52  [key=2, style=dotted, color=green];
m1_23 -> m1_24  [key=0, style=solid, color=green];
m1_23 -> m1_18  [key=0, style=solid, color=green];
m1_23 -> m1_51  [key=2, style=dotted, color=green];
m1_18 -> m1_24  [key=1, style=dashed, color=green, label=subscription];
m1_18 -> m1_25  [key=1, style=dashed, color=green, label=subscription];
m1_18 -> m1_27  [key=1, style=dashed, color=green, label=subscription];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_31  [key=0, style=solid];
m1_18 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m1_18 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m1_18 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m1_18 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m1_18 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m1_25 -> m1_26  [key=0, style=solid, color=green];
m1_25 -> m1_53  [key=2, style=dotted, color=green];
m1_14 -> m1_15  [key=0, style=solid, color=green];
m1_14 -> m1_47  [key=2, style=dotted, color=green];
m1_14 -> m1_23  [key=1, style=dashed, color=green, label=selections];
m1_14 -> m1_31  [key=1, style=dashed, color=green, label=selections];
m1_11 -> m1_14  [key=1, style=dashed, color=green, label=selectSymbolsResult];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_45  [key=2, style=dotted];
m1_12 -> m1_14  [key=0, style=solid, color=green];
m1_12 -> m1_13  [key=0, style=solid, color=green];
m1_12 -> m1_46  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid, color=green];
m1_15 -> m1_48  [key=2, style=dotted, color=green];
m1_15 -> m1_68  [key=1, style=dashed, color=green, label="lambda expression"];
m1_15 -> m1_32  [key=1, style=dashed, color=green, label=existingSubscriptions];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_43  [key=0, style=solid];
m1_31 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m1_31 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m1_13 -> m1_44  [key=0, style=solid, color=green];
m1_16 -> m1_17  [key=0, style=solid, color=green];
m1_16 -> m1_49  [key=2, style=dotted, color=green];
m1_16 -> m1_40  [key=1, style=dashed, color=green, label=additions];
m1_16 -> m1_43  [key=1, style=dashed, color=green, label=additions];
m1_32 -> m1_31  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_51  [key=2, style=dotted];
m1_21 -> m1_23  [key=1, style=dashed, color=green, label=config];
m1_21 -> m1_26  [key=1, style=dashed, color=green, label=config];
m1_21 -> m1_72  [key=1, style=dashed, color=green, label=config];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid, color=green];
m1_22 -> m1_18  [key=0, style=solid];
m1_17 -> m1_25  [key=1, style=dashed, color=green, label=removals];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_49  [key=2, style=dotted];
m1_17 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=removals];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_53  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_67  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid, color=green];
m1_26 -> m1_54  [key=2, style=dotted, color=green];
m1_26 -> m1_71  [key=1, style=dashed, color=green, label="lambda expression"];
m1_27 -> m1_28  [key=0, style=solid, color=green];
m1_27 -> m1_18  [key=0, style=solid, color=green];
m1_27 -> m1_55  [key=2, style=dotted, color=green];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_56  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_10 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_19 -> m1_18  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_50  [key=2, style=dotted];
m1_30 -> m1_18  [key=0, style=solid];
m1_30 -> m1_58  [key=2, style=dotted];
m1_41 -> m1_31  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> n66  [key=2, style=dotted];
m1_41 -> m1_65  [key=2, style=dotted];
m1_42 -> m1_31  [key=0, style=solid];
m1_42 -> m1_66  [key=2, style=dotted];
m1_20 -> m1_18  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_29 -> m1_18  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_57  [key=2, style=dotted];
m1_38 -> m1_40  [key=0, style=solid];
m1_38 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_38 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_62  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_39 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_39 -> m1_63  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_37  [key=0, style=solid];
m1_34 -> m1_59  [key=2, style=dotted];
m1_34 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=reason];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_60  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_36 -> m1_43  [key=0, style=solid];
m1_36 -> m1_61  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_44 -> m1_9  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
m1_0 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=2, style=dotted];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m1_75 -> m1_15  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_75 -> m1_26  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_75 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_75 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_75 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_75 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_75 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_75 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_75 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_75 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_75 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_75 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m1_77 -> m1_72  [key=1, style=dashed, color=green, label=config];
m1_76 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorStatus"];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorResult"];
m2_4 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorResult"];
}
