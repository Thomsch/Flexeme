digraph  {
n326 [label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", span=""];
n0 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", span="171-171", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n1 [label="_job = job", span="173-173", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n3 [label="_compileId = job.CompileId", span="175-175", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n4 [label="_backtestId = job.BacktestId", span="176-176", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n8 [label="double totalMinutes = (job.PeriodFinish - job.PeriodStart).TotalMinutes", span="182-182", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n2 [label="_exitTriggered = false", span="174-174", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n5 [label="_timeRequested = DateTime.Now", span="177-177", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n6 [label="double samples = 4000", span="180-180", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n7 [label="double minimumSamplePeriod = 4", span="181-181", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n9 [label="var resampleMinutes = (totalMinutes < (minimumSamplePeriod * samples)) ? minimumSamplePeriod : (totalMinutes / samples)", span="183-183", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n10 [label="_resamplePeriod = TimeSpan.FromMinutes(resampleMinutes)", span="184-184", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n11 [label="Log.Trace(''BacktestingResultHandler(): Sample Period Set: '' + resampleMinutes.ToString(''00.00''))", span="185-185", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n22 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)"];
n12 [label="_notificationPeriod = TimeSpan.FromSeconds(2)", span="188-188", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n23 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)"];
n24 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="128-128", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
n13 [label="_messages = new ConcurrentQueue<Packet>()", span="191-191", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n25 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
n14 [label="_charts = new ConcurrentDictionary<string, Chart>()", span="192-192", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n26 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()"];
n15 [label="_chartLock = new Object()", span="193-193", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n27 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()"];
n16 [label="_isActive = true", span="194-194", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n28 [label="Entry object.Object()", span="0-0", cluster="object.Object()"];
n17 [label="_startTime = DateTime.Now", span="197-197", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n18 [label="Charts.AddOrUpdate(''Strategy Equity'', new Chart(''Strategy Equity'', ChartType.Stacked))", span="200-200", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n19 [label="Charts[''Strategy Equity''].Series.Add(''Equity'', new Series(''Equity'', SeriesType.Candle))", span="201-201", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n29 [label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="50-50", cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)"];
n30 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="129-129", cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)"];
n20 [label="Charts[''Strategy Equity''].Series.Add(''Daily Performance'', new Series(''Daily Performance'', SeriesType.Bar))", span="202-202", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n31 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", span="137-137", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)"];
n32 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)"];
n21 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", span="171-171", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)"];
n33 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="211-211", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n34 [label="var _lastMessage = ''''", span="214-214", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", color=red, community=0];
n35 [label="_lastDaysProcessed = 5", span="215-215", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n44 [label="_lastMessage != debug.Message", span="239-239", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", color=red, community=0];
n36 [label="!(_exitTriggered && Messages.Count == 0)", span="221-221", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n37 [label="Messages.Count == 0", span="224-224", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n54 [label="Log.Trace(''BacktestingResultHandler.Run(): Ending Thread...'')", span="267-267", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n38 [label="Thread.Sleep(50)", span="226-226", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n39 [label="Packet packet", span="231-231", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n40 [label="Messages.TryDequeue(out packet)", span="232-232", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n41 [label="packet.Type", span="234-234", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n53 [label="ProcessSeriesUpdate()", span="263-263", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n58 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)"];
n43 [label="var debug = packet as DebugPacket", span="238-238", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n48 [label="var securityPacket = packet as SecurityTypesPacket", span="249-249", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n51 [label="var runtime = packet as RuntimeErrorPacket", span="255-255", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n42 [label="PacketType.Debug", span="237-237", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n47 [label="PacketType.SecurityTypes", span="248-248", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n50 [label="PacketType.RuntimeError", span="253-253", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n45 [label="Engine.Notify.DebugMessage(debug.Message, debug.ProjectId, _backtestId, _compileId)", span="242-242", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n46 [label="_lastMessage = debug.Message", span="243-243", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", color=red, community=0];
n59 [label="Entry QuantConnect.Interfaces.IMessagingHandler.DebugMessage(string, int, string, string)", span="56-56", cluster="QuantConnect.Interfaces.IMessagingHandler.DebugMessage(string, int, string, string)"];
n49 [label="Engine.Notify.SecurityTypes(securityPacket)", span="250-250", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n52 [label="Engine.Notify.RuntimeError(_backtestId, runtime.Message, runtime.StackTrace)", span="256-256", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n57 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)"];
n60 [label="Entry QuantConnect.Interfaces.IMessagingHandler.SecurityTypes(QuantConnect.Packets.SecurityTypesPacket)", span="62-62", cluster="QuantConnect.Interfaces.IMessagingHandler.SecurityTypes(QuantConnect.Packets.SecurityTypesPacket)"];
n61 [label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="77-77", cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)"];
n62 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()", span="276-276", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n55 [label="_isActive = false", span="268-268", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n56 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="211-211", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()"];
n63 [label="Algorithm == null || Algorithm.Transactions == null || _processingFinalPacket", span="281-281", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n64 [label="return;", span="283-283", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n65 [label="DateTime.Now <= _nextUpdate || !(_daysProcessed > (_lastDaysProcessed + 1))", span="286-286", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n66 [label="return;", span="286-286", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n67 [label="var deltaOrders = new Dictionary<int, Order>()", span="292-292", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n68 [label="deltaOrders = (from order in Algorithm.Transactions.Orders\r\n                        where order.Value.Time.Date >= _lastUpdate && order.Value.Status == OrderStatus.Filled\r\n                        select order).ToDictionary(t => t.Key, t => t.Value)", span="296-298", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n98 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n69 [label=Exception, span="300-300", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n71 [label="deltaOrders.Count > 50", span="306-306", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n99 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary"];
n109 [label="Entry lambda expression", span="298-298", cluster="lambda expression"];
n112 [label="Entry lambda expression", span="298-298", cluster="lambda expression"];
n72 [label="deltaOrders.Clear()", span="306-306", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n92 [label="var packet = new BacktestResultPacket(_job, new BacktestResult(deltaCharts, deltaOrders, deltaProfitLoss, deltaStatistics), progress)", span="347-347", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n70 [label="Log.Error(''BacktestingResultHandler().ProcessSeriesUpdate(): Transactions: '' + err.Message)", span="302-302", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n100 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="85-85", cluster="QuantConnect.Logging.Log.Error(string, bool)"];
n73 [label="_lastUpdate = AlgorithmManager.Frontier.Date", span="311-311", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n101 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()"];
n74 [label="_lastDaysProcessed = _daysProcessed", span="312-312", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n75 [label="_nextUpdate = DateTime.Now.AddSeconds(0.5)", span="313-313", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n76 [label=Exception, span="315-315", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n78 [label="var deltaCharts = new Dictionary<string, Chart>()", span="320-320", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n102 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)"];
n77 [label="Log.Error(''BacktestingResultHandler.ProcessSeriesUpdate(): Can't update variables: '' + err.Message)", span="317-317", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n79 [label=_chartLock, span="321-321", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n81 [label="deltaCharts.Add(chart.Name, chart.GetUpdates())", span="326-326", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n80 [label="Charts.Values", span="324-324", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n82 [label="var deltaProfitLoss = new Dictionary<DateTime, decimal>()", span="331-331", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n103 [label="Entry QuantConnect.Chart.GetUpdates()", span="78-78", cluster="QuantConnect.Chart.GetUpdates()"];
n83 [label="var deltaStatistics = new Dictionary<string, string>()", span="332-332", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n84 [label="var progress = Convert.ToDecimal(_daysProcessed / _jobDays)", span="333-333", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n85 [label="progress > 0.999m", span="334-334", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n104 [label="Entry System.Convert.ToDecimal(double)", span="0-0", cluster="System.Convert.ToDecimal(double)"];
n88 [label="var complete = new BacktestResultPacket(_job, completeResult, progress)", span="338-338", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n86 [label="progress = 0.999m", span="334-334", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n87 [label="var completeResult = new BacktestResult(Charts, Algorithm.Transactions.Orders, Algorithm.Transactions.TransactionRecord, new Dictionary<string, string>())", span="337-337", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n105 [label="Entry QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>)", span="244-244", cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>)"];
n89 [label="DateTime.Now > _nextS3Update", span="340-340", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n106 [label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", span="181-181", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)"];
n91 [label="StoreResult(complete, false)", span="343-343", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n90 [label="_nextS3Update = DateTime.Now.AddSeconds(30)", span="342-342", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n107 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="364-364", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n93 [label="packet.DateRequested = _timeRequested", span="348-348", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n94 [label="Engine.Notify.BacktestResult(packet)", span="349-349", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n95 [label=Exception, span="352-352", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n97 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()", span="276-276", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n108 [label="Entry QuantConnect.Interfaces.IMessagingHandler.BacktestResult(QuantConnect.Packets.BacktestResultPacket, bool)", span="92-92", cluster="QuantConnect.Interfaces.IMessagingHandler.BacktestResult(QuantConnect.Packets.BacktestResultPacket, bool)"];
n96 [label="Log.Error(''BacktestingResultHandler().ProcessSeriesUpdate(): '' + err.Message + '' >> '' + err.StackTrace )", span="354-354", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSeriesUpdate()"];
n110 [label="t.Key", span="298-298", cluster="lambda expression"];
n111 [label="Exit lambda expression", span="298-298", cluster="lambda expression"];
n113 [label="t.Value", span="298-298", cluster="lambda expression"];
n114 [label="Exit lambda expression", span="298-298", cluster="lambda expression"];
n115 [label="var serialized = ''''", span="367-367", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n118 [label="packet.Type != PacketType.BacktestResult", span="375-375", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n120 [label="var result = packet as BacktestResultPacket", span="378-378", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n125 [label="Engine.Api.Store(serialized, key, StoragePermissions.Authenticated, async)", span="394-394", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n116 [label="var key = ''''", span="368-368", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n117 [label=_chartLock, span="372-372", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n119 [label="return;", span="375-375", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n121 [label="result != null", span="380-380", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n123 [label="serialized = JsonConvert.SerializeObject(result.Results)", span="386-386", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n122 [label="key = ''backtests/'' + _job.UserId + ''/'' + _job.ProjectId + ''/'' + _job.BacktestId + ''.json''", span="383-383", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n124 [label="Log.Error(''BacktestingResultHandler.StoreResult(): Result Null.'')", span="390-390", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n129 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject"];
n126 [label=Exception, span="397-397", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n128 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="364-364", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n130 [label="Entry QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", span="85-85", cluster="QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)"];
n127 [label="Log.Error(''BacktestingResultHandler.StoreResult(): '' + err.Message)", span="399-399", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n131 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="413-413", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n132 [label="var charts = new Dictionary<string, Chart>(Charts)", span="418-418", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n134 [label="BacktestResultPacket result = new BacktestResultPacket((BacktestNodePacket) job,\r\n                    new BacktestResult(charts, orders, profitLoss, statistics), 1m)\r\n                {\r\n                    ProcessingTime = (DateTime.Now - _startTime).TotalSeconds,\r\n                    DateFinished = DateTime.Now,\r\n                    Progress = 1\r\n                }", span="422-428", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n133 [label="_processingFinalPacket = true", span="419-419", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n142 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)"];
n135 [label="StoreResult(result)", span="431-431", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n136 [label="result.Results = new BacktestResult()", span="434-434", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n137 [label="Engine.Notify.BacktestResult(result, finalPacket: true)", span="437-437", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n143 [label="Entry QuantConnect.Packets.BacktestResult.BacktestResult()", span="237-237", cluster="QuantConnect.Packets.BacktestResult.BacktestResult()"];
n138 [label="Log.Trace(''BacktestingResultHandler.SendAnalysisResult(): Processed final packet'')", span="439-439", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n139 [label=Exception, span="441-441", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n141 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="413-413", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n140 [label="Log.Error(''Algorithm.Worker.SendResult(): '' + err.Message)", span="443-443", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n144 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="453-453", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n145 [label="_algorithm = algorithm", span="455-455", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n146 [label="_jobDays = Time.TradeableDates(Algorithm.Securities, _job.PeriodStart, _job.PeriodFinish)", span="458-458", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n147 [label="_debugMessageMax = Convert.ToInt32(10 * _jobDays)", span="461-461", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n157 [label="Entry QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", span="230-230", cluster="QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)"];
n148 [label="_debugMessageMax < _debugMessageMin", span="463-463", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n158 [label="Entry System.Convert.ToInt32(int)", span="0-0", cluster="System.Convert.ToInt32(int)"];
n149 [label="_debugMessageMax = _debugMessageMin", span="463-463", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n150 [label="_debugMessagePeriod = ''backtest''", span="465-465", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n151 [label="var types = new List<SecurityType>()", span="468-468", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n152 [label="_algorithm.Securities.Values", span="469-469", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n159 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n153 [label="!types.Contains(security.Type)", span="471-471", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n154 [label="types.Add(security.Type)", span="471-471", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n155 [label="SecurityType(types)", span="473-473", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n160 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)"];
n161 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n156 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="453-453", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n162 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="517-517", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)"];
n163 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="480-480", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n164 [label="message == _debugMessage", span="482-482", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n166 [label="message.Trim() == ''''", span="483-483", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n171 [label="message.Length > _debugMessageLength", span="488-488", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n172 [label="message = message.Substring(0, 100) + ''...''", span="490-490", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n174 [label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _backtestId, _compileId, message))", span="498-498", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n175 [label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="501-501", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n176 [label="_debugMessage = message", span="502-502", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n165 [label="return;", span="482-482", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n167 [label="return;", span="483-483", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n168 [label="Messages.Count > 500", span="484-484", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n178 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()"];
n169 [label="return;", span="484-484", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n170 [label="_debugMessageCount++ < _debugMessageMax", span="486-486", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n173 [label="message = ''Maximum '' + _debugMessageMax + '' messages of '' + _debugMessageLength + '' characters per '' + _debugMessagePeriod + ''. This is to avoid crashing your browser. If you'd like more please use Log() command instead.''", span="495-495", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n179 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
n180 [label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", span="86-86", cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)"];
n181 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)"];
n182 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)"];
n177 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="480-480", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)"];
n183 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="509-509", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)"];
n184 [label="_log.Add(_algorithm.Time.ToString( DateFormat.UI ) + '' '' + message)", span="511-511", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)"];
n185 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="509-509", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)"];
n186 [label="var packet = new SecurityTypesPacket\r\n            {\r\n                Types = types\r\n            }", span="519-522", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)"];
n187 [label="Messages.Enqueue(packet)", span="523-523", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)"];
n189 [label="Entry QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", span="65-65", cluster="QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()"];
n188 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="517-517", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)"];
n190 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="531-531", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)"];
n191 [label="message == _errorMessage", span="533-533", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)"];
n195 [label="Messages.Enqueue(new HandledErrorPacket(_backtestId, message, stacktrace))", span="535-535", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)"];
n196 [label="_errorMessage = message", span="536-536", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)"];
n192 [label="return;", span="533-533", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)"];
n193 [label="Messages.Count > 500", span="534-534", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)"];
n194 [label="return;", span="534-534", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)"];
n198 [label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="67-67", cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)"];
n197 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="531-531", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)"];
n199 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="544-544", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)"];
n200 [label="PurgeQueue()", span="546-546", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)"];
n201 [label="Messages.Enqueue(new RuntimeErrorPacket(_backtestId, message, stacktrace))", span="547-547", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)"];
n202 [label="_errorMessage = message", span="548-548", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)"];
n204 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="689-689", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()"];
n205 [label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)", span="67-67", cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)"];
n203 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="544-544", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)"];
n206 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="561-561", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n207 [label=_chartLock, span="563-563", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n208 [label="!Charts.ContainsKey(chartName)", span="566-566", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n209 [label="Charts.AddOrUpdate(chartName, new Chart(chartName, chartType))", span="568-568", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n210 [label="!Charts[chartName].Series.ContainsKey(seriesName)", span="572-572", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n211 [label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, unit))", span="574-574", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n212 [label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="578-578", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n214 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)"];
n215 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
n213 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="561-561", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n216 [label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="201-201", cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)"];
n217 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="587-587", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)"];
n218 [label="Sample(''Strategy Equity'', ChartType.Stacked, ''Equity'', SeriesType.Candle, time, value)", span="590-590", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)"];
n219 [label="_daysProcessed = (time - _job.PeriodStart).TotalDays", span="593-593", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)"];
n220 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="587-587", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)"];
n221 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="601-601", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)"];
n222 [label="Sample(''Strategy Equity'', ChartType.Stacked, ''Daily Performance'', SeriesType.Bar, time, value, ''%'')", span="604-604", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)"];
n223 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="601-601", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)"];
n224 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="611-611", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n225 [label=_chartLock, span="613-613", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n226 [label=updates, span="615-615", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n227 [label="!Charts.ContainsKey(update.Name)", span="618-618", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n233 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="611-611", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n228 [label="Charts.AddOrUpdate(update.Name, new Chart(update.Name, update.ChartType))", span="620-620", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n229 [label="update.Series.Values", span="624-624", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n230 [label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="627-627", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n231 [label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType))", span="629-629", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n232 [label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="633-633", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n234 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)"];
n235 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="642-642", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()"];
n236 [label="var logURL = ProcessLogMessages(_job)", span="645-645", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()"];
n237 [label="logURL != '''' && !Engine.IsLocal", span="646-646", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()"];
n241 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", span="710-710", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n238 [label="DebugMessage(''Your log was successfully created and can be downloaded from: '' + logURL)", span="646-646", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()"];
n239 [label="_exitTriggered = true", span="649-649", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()"];
n240 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="642-642", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()"];
n242 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="657-657", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)"];
n243 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="657-657", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)"];
n244 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="670-670", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)"];
n245 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="670-670", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)"];
n246 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)", span="681-681", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)"];
n247 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)", span="681-681", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)"];
n248 [label="Messages.Clear()", span="691-691", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()"];
n249 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="689-689", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()"];
n250 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="83-83", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()"];
n251 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="700-700", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)"];
n252 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="700-700", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)"];
n253 [label="var remoteUrl = @''http://data.quantconnect.com/''", span="712-712", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n257 [label="var allowance = Engine.Api.ReadLogAllowance(job.UserId, job.Channel)", span="721-721", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n263 [label="var key = ''backtests/'' + job.UserId + ''/'' + job.ProjectId + ''/'' + job.AlgorithmId + ''-log.txt''", span="728-728", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n274 [label="job.UserPlan == UserPlan.Free", span="749-749", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n282 [label="Engine.Api.UpdateDailyLogUsed(job.UserId, job.AlgorithmId, remoteUrl, logLength, job.Channel, hitLimit)", span="768-768", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n254 [label="var logLength = 0", span="713-713", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n264 [label="remoteUrl += key", span="729-729", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n255 [label="!_log.Any()", span="718-718", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n266 [label="(logLength + line.Length) < logRemaining", span="733-733", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n268 [label="logLength += line.Length", span="736-736", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n256 [label="return '''';", span="718-718", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n288 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
n258 [label="var logBacktestMax = allowance[0]", span="722-722", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n289 [label="Entry QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="38-38", cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)"];
n259 [label="var logDailyMax = allowance[1]", span="723-723", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n260 [label="var logRemaining = Math.Min(logBacktestMax, allowance[2])", span="724-724", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n269 [label="var btMax = Math.Round((double)logBacktestMax / 1024, 0) + ''kb''", span="740-740", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n270 [label="var dyMax = Math.Round((double)logDailyMax / 1024, 0) + ''kb''", span="741-741", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n261 [label="var hitLimit = false", span="725-725", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n290 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)"];
n262 [label="var serialized = ''''", span="726-726", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n267 [label="serialized += line + ''\r\n''", span="735-735", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n278 [label="serialized += capNotice", span="758-758", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n281 [label="Engine.Api.Store(serialized, key, StoragePermissions.Public)", span="766-766", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n265 [label=_log, span="731-731", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n285 [label="Log.Trace(''BacktestingResultHandler.ProcessLogMessages(): Ready: '' + remoteUrl)", span="774-774", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n286 [label="return remoteUrl;", span="775-775", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n291 [label="Entry System.Math.Round(double, int)", span="0-0", cluster="System.Math.Round(double, int)"];
n272 [label="var capNotice = ''You currently have a maximum of '' + btMax + '' of log data per backtest, and '' + dyMax + '' total max per day.''", span="745-745", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n273 [label="DebugMessage(''You currently have a maximum of '' + btMax + '' of log data per backtest remaining, and '' + dyMax + '' total max per day.'')", span="746-746", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n271 [label="var requestMore = ''''", span="744-744", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n275 [label="requestMore =''Please upgrade your account and contact us to request more allocation here: https://www.quantconnect.com/contact''", span="751-751", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n276 [label="requestMore = ''If you require more please briefly explain request for more allocation here: https://www.quantconnect.com/contact''", span="755-755", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n277 [label="DebugMessage(requestMore)", span="757-757", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n279 [label="serialized += requestMore", span="759-759", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n280 [label="hitLimit = true", span="760-760", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n283 [label=Exception, span="770-770", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n292 [label="Entry QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="43-43", cluster="QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)"];
n284 [label="Log.Error(''BacktestingResultHandler.ProcessLogMessages(): '' + err.Message)", span="772-772", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n287 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", span="710-710", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)"];
n293 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="782-782", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)"];
n294 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="782-782", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)"];
n295 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="792-792", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n296 [label="var time = _algorithm.Time", span="794-794", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n297 [label="time > _nextSample || forceProcess", span="796-796", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n298 [label="_nextSample = time.Add(ResamplePeriod)", span="799-799", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n299 [label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="802-802", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n302 [label="SampleAssetPrices(security.Symbol, time, security.Price)", span="810-810", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n303 [label="_algorithm.DebugMessages.ForEach(x => DebugMessage(x))", span="815-815", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n312 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)"];
n300 [label="SampleRange(_algorithm.GetChartUpdates())", span="805-805", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n313 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)"];
n301 [label="_algorithm.Securities.Values", span="808-808", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n314 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", span="320-320", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()"];
n304 [label="_algorithm.DebugMessages.Clear()", span="816-816", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n315 [label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)"];
n317 [label="Entry lambda expression", span="815-815", cluster="lambda expression"];
n305 [label="_algorithm.ErrorMessages.ForEach(x => ErrorMessage(x))", span="819-819", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n316 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()"];
n306 [label="_algorithm.ErrorMessages.Clear()", span="820-820", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n320 [label="Entry lambda expression", span="819-819", cluster="lambda expression"];
n307 [label="_algorithm.LogMessages.ForEach(x => LogMessage(x))", span="823-823", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n308 [label="_algorithm.LogMessages.Clear()", span="824-824", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n323 [label="Entry lambda expression", span="823-823", cluster="lambda expression"];
n309 [label="_algorithm.RuntimeStatistics", span="827-827", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n310 [label="RuntimeStatistic(pair.Key, pair.Value)", span="829-829", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n311 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="792-792", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)"];
n318 [label="DebugMessage(x)", span="815-815", cluster="lambda expression"];
n319 [label="Exit lambda expression", span="815-815", cluster="lambda expression"];
n321 [label="ErrorMessage(x)", span="819-819", cluster="lambda expression"];
n322 [label="Exit lambda expression", span="819-819", cluster="lambda expression"];
n324 [label="LogMessage(x)", span="823-823", cluster="lambda expression"];
n325 [label="Exit lambda expression", span="823-823", cluster="lambda expression"];
m1_66 [label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120", cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_301 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="Realtime.cs"];
m1_72 [label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="250-250", cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_100 [label="Entry QuantConnect.Orders.OrderResponse.InvalidStatus(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.Order)", span="136-136", cluster="QuantConnect.Orders.OrderResponse.InvalidStatus(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.Order)", file="Realtime.cs"];
m1_30 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="957-957", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Realtime.cs"];
m1_478 [label="var delta = _algorithm.Portfolio.CashBook[account.CurrencySymbol].Amount - account.CashBalance", span="960-960", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Realtime.cs"];
m1_480 [label="Log.Trace(string.Format(''BrokerageTransactionHandler.HandleAccountChanged(): {0} Cash Delta: {1}'', account.CurrencySymbol, delta))", span="963-963", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Realtime.cs"];
m1_482 [label="_algorithm.Portfolio.CashBook[account.CurrencySymbol].SetAmount(account.CashBalance)", span="970-970", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Realtime.cs"];
m1_479 [label="delta != 0", span="961-961", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Realtime.cs"];
m1_481 [label="_brokerage.AccountInstantlyUpdated", span="967-967", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Realtime.cs"];
m1_483 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="957-957", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Realtime.cs"];
m1_73 [label="Entry QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", span="322-322", cluster="QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", file="Realtime.cs"];
m1_279 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="Realtime.cs"];
m1_417 [label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192", cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_70 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="Realtime.cs"];
m1_380 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="Realtime.cs"];
m1_378 [label="Entry decimal.SmartRounding()", span="205-205", cluster="decimal.SmartRounding()", file="Realtime.cs"];
m1_34 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", span="977-977", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_485 [label="fill.IsAssignment", span="980-980", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_486 [label="fill.Message = string.Format(''Option Assignment: {0}'', fill.Symbol.Value)", span="982-982", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_487 [label="_algorithm.OnAssignmentOrderEvent(fill)", span="983-983", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_488 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", span="977-977", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_489 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="Realtime.cs"];
m1_23 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", span="356-356", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="Realtime.cs"];
m1_151 [label="Order order = GetOrderByIdInternal(orderId)", span="358-358", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="Realtime.cs"];
m1_152 [label="return order != null ? order.Clone() : null;", span="359-359", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="Realtime.cs"];
m1_153 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", span="356-356", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="Realtime.cs"];
m1_179 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="Realtime.cs"];
m1_202 [label="Entry QuantConnect.Util.BusyBlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", span="139-139", cluster="QuantConnect.Util.BusyBlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", file="Realtime.cs"];
m1_68 [label="Entry QuantConnect.Orders.OrderRequest.SetResponse(QuantConnect.Orders.OrderResponse, QuantConnect.Orders.OrderRequestStatus)", span="93-93", cluster="QuantConnect.Orders.OrderRequest.SetResponse(QuantConnect.Orders.OrderResponse, QuantConnect.Orders.OrderRequestStatus)", file="Realtime.cs"];
m1_313 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", span="638-638", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_316 [label="OrderTicket ticket", span="640-640", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_317 [label="var order = Order.CreateOrder(request)", span="641-641", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_323 [label="return OrderResponse.Error(request, OrderResponseErrorCode.OrderAlreadyExists, ''Cannot process submit request because order with id {0} already exists'');", span="653-653", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_326 [label="return OrderResponse.UnableToFindOrder(request);", span="658-658", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_331 [label="var response = OrderResponse.ZeroQuantity(request)", span="670-670", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_341 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ProcessingError, ''Error in GetSufficientCapitalForOrder'');", span="687-687", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_344 [label="var response = OrderResponse.Error(request, OrderResponseErrorCode.InsufficientBuyingPower, string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.GetValue(security).SmartRounding()))", span="693-693", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_353 [label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageModelRefusedToSubmitOrder, ''OrderID: '' + order.Id + '' '' + message)", span="706-706", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_365 [label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToSubmitOrder, errorMessage)", span="729-729", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_370 [label="return OrderResponse.Success(request);", span="736-736", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_318 [label="var security = _algorithm.Securities[order.Symbol]", span="644-644", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_319 [label="order.PriceCurrency = security.SymbolProperties.QuoteCurrency", span="645-645", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_320 [label="order.Quantity = RoundOffOrder(order, security)", span="648-648", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_321 [label="!_orders.TryAdd(order.Id, order)", span="650-650", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_324 [label="!_orderTickets.TryGetValue(order.Id, out ticket)", span="655-655", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_327 [label="RoundOrderPrices(order, security)", span="662-662", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_328 [label="ticket.SetOrder(order)", span="665-665", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_329 [label="order.Quantity == 0", span="667-667", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_330 [label="order.Status = OrderStatus.Invalid", span="669-669", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_333 [label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Unable to add order for zero quantity''))", span="672-672", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_336 [label="sufficientCapitalForOrder = _algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="680-680", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_339 [label="_algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="685-685", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_340 [label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Error executing margin models''))", span="686-686", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_343 [label="order.Status = OrderStatus.Invalid", span="692-692", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_346 [label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Insufficient buying power to complete order''))", span="695-695", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_349 [label="!_algorithm.BrokerageModel.CanSubmitOrder(security, order, out message)", span="701-701", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_350 [label="order.Status = OrderStatus.Invalid", span="704-704", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_352 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''InvalidOrder'', ''BrokerageModel declared unable to submit order: '' + order.Id)", span="705-705", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_355 [label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''BrokerageModel declared unable to submit order''))", span="708-708", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_358 [label="orderPlaced = _brokerage.PlaceOrder(order)", span="716-716", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_363 [label="order.Status = OrderStatus.Invalid", span="727-727", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_364 [label="var errorMessage = ''Brokerage failed to place order: '' + order.Id", span="728-728", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_367 [label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to place order''))", span="731-731", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_369 [label="order.Status = OrderStatus.Submitted", span="735-735", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_322 [label="Log.Error(''BrokerageTransactionHandler.HandleSubmitOrderRequest(): Unable to add new order, order not processed.'')", span="652-652", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_325 [label="Log.Error(''BrokerageTransactionHandler.HandleSubmitOrderRequest(): Unable to retrieve order ticket, order not processed.'')", span="657-657", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_335 [label="bool sufficientCapitalForOrder", span="677-677", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_332 [label="_algorithm.Error(response.ErrorMessage)", span="671-671", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_334 [label="return response;", span="673-673", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_337 [label=Exception, span="682-682", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_342 [label="!sufficientCapitalForOrder", span="690-690", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_338 [label="Log.Error(err)", span="684-684", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_348 [label="BrokerageMessageEvent message", span="700-700", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_345 [label="_algorithm.Error(response.ErrorMessage)", span="694-694", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_347 [label="return response;", span="696-696", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_357 [label="bool orderPlaced", span="713-713", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_351 [label="message == null", span="705-705", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_354 [label="_algorithm.Error(response.ErrorMessage)", span="707-707", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_356 [label="return response;", span="709-709", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_359 [label=Exception, span="718-718", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_362 [label="!orderPlaced", span="724-724", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_360 [label="Log.Error(err)", span="720-720", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_361 [label="orderPlaced = false", span="721-721", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_366 [label="_algorithm.Error(response.ErrorMessage)", span="730-730", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_368 [label="return response;", span="732-732", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_371 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", span="638-638", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_233 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan, System.Threading.CancellationToken)", span="763-763", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan, System.Threading.CancellationToken)", file="Realtime.cs"];
m1_533 [label="Entry System.Math.Round(decimal)", span="0-0", cluster="System.Math.Round(decimal)", file="Realtime.cs"];
m1_135 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="332-332", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="Realtime.cs"];
m1_136 [label="return _orderTickets.Select(x => x.Value).Where(filter ?? (x => true));", span="334-334", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="Realtime.cs"];
m1_137 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="332-332", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="Realtime.cs"];
m1_101 [label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154", cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_0 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="95-95", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_1 [label="brokerage == null", span="97-97", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_3 [label="_resultHandler = resultHandler", span="103-103", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_6 [label="_brokerage = brokerage", span="107-107", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_7 [label="_brokerage.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                // log every fill in live mode\r\n                if (algorithm.LiveMode)\r\n                {\r\n                    var brokerIds = string.Empty;\r\n                    var order = GetOrderById(fill.OrderId);\r\n                    if (order != null && order.BrokerId.Count > 0) brokerIds = string.Join('', '', order.BrokerId);\r\n                    Log.Trace(''BrokerageTransactionHandler.OrderStatusChanged(): '' + fill + '' BrokerId: '' + brokerIds);\r\n                }\r\n\r\n                HandleOrderEvent(fill);\r\n            }", span="108-120", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_11 [label="_algorithm = algorithm", span="134-134", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_2 [label="throw new ArgumentNullException(''brokerage'');", span="99-99", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_4 [label="_syncedLiveBrokerageCashToday = true", span="104-104", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_5 [label="_lastSyncTimeTicks = DateTime.UtcNow.Ticks", span="105-105", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_8 [label="_brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                HandleAccountChanged(account);\r\n            }", span="122-125", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_9 [label="_brokerage.OptionPositionAssigned += (sender, fill) =>\r\n            {\r\n                HandlePositionAssigned(fill);\r\n            }", span="127-130", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_10 [label="IsActive = true", span="132-132", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_12 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="95-95", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Realtime.cs"];
m1_102 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Realtime.cs"];
m1_278 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="Realtime.cs"];
m1_71 [label="Entry QuantConnect.Util.BusyBlockingCollection<T>.Add(T)", span="91-91", cluster="QuantConnect.Util.BusyBlockingCollection<T>.Add(T)", file="Realtime.cs"];
m1_139 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="Realtime.cs"];
m1_375 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="Realtime.cs"];
m1_415 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="810-810", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="Realtime.cs"];
m1_419 [label="return order.Status != OrderStatus.Filled\r\n                && order.Status != OrderStatus.Canceled\r\n                && order.Status != OrderStatus.PartiallyFilled\r\n                && order.Status != OrderStatus.Invalid;", span="812-815", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="Realtime.cs"];
m1_420 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="810-810", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="Realtime.cs"];
m1_474 [label="Entry QuantConnect.Interfaces.ITradeBuilder.ProcessFill(QuantConnect.Orders.OrderEvent, decimal, decimal)", span="57-57", cluster="QuantConnect.Interfaces.ITradeBuilder.ProcessFill(QuantConnect.Orders.OrderEvent, decimal, decimal)", file="Realtime.cs"];
m1_534 [label="Entry decimal.Equals(decimal)", span="0-0", cluster="decimal.Equals(decimal)", file="Realtime.cs"];
m1_47 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="177-177", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_51 [label="var response = !_algorithm.IsWarmingUp\r\n                ? OrderResponse.Success(request) \r\n                : OrderResponse.WarmingUp(request)", span="179-181", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_52 [label="request.SetResponse(response)", span="183-183", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_53 [label="var ticket = new OrderTicket(_algorithm.Transactions, request)", span="184-184", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_56 [label="_orderRequestQueue.Add(request)", span="190-190", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_57 [label="var order = Order.CreateOrder(request)", span="195-195", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_63 [label="_orders.TryAdd(request.OrderId, order)", span="204-204", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_55 [label="response.IsSuccess", span="188-188", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_54 [label="_orderTickets.TryAdd(ticket.OrderId, ticket)", span="185-185", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_62 [label="ticket.SetOrder(order)", span="203-203", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_64 [label="return ticket;", span="206-206", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_58 [label="var security = _algorithm.Securities[order.Symbol]", span="198-198", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_59 [label="order.PriceCurrency = security.SymbolProperties.QuoteCurrency", span="199-199", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_60 [label="order.Status = OrderStatus.Invalid", span="201-201", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_61 [label="order.Tag = ''Algorithm warming up.''", span="202-202", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_65 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="177-177", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_287 [label="Entry lambda expression", span="577-592", cluster="lambda expression", file="Realtime.cs"];
m1_15 [label="algorithm.LiveMode", span="111-111", cluster="lambda expression", file="Realtime.cs"];
m1_17 [label="var order = GetOrderById(fill.OrderId)", span="114-114", cluster="lambda expression", file="Realtime.cs"];
m1_20 [label="Log.Trace(''BrokerageTransactionHandler.OrderStatusChanged(): '' + fill + '' BrokerId: '' + brokerIds)", span="116-116", cluster="lambda expression", file="Realtime.cs"];
m1_21 [label="HandleOrderEvent(fill)", span="119-119", cluster="lambda expression", file="Realtime.cs"];
m1_28 [label="HandleAccountChanged(account)", span="124-124", cluster="lambda expression", file="Realtime.cs"];
m1_32 [label="HandlePositionAssigned(fill)", span="129-129", cluster="lambda expression", file="Realtime.cs"];
m1_14 [label="Entry lambda expression", span="108-120", cluster="lambda expression", file="Realtime.cs"];
m1_16 [label="var brokerIds = string.Empty", span="113-113", cluster="lambda expression", file="Realtime.cs"];
m1_18 [label="order != null && order.BrokerId.Count > 0", span="115-115", cluster="lambda expression", file="Realtime.cs"];
m1_19 [label="brokerIds = string.Join('', '', order.BrokerId)", span="115-115", cluster="lambda expression", file="Realtime.cs"];
m1_22 [label="Exit lambda expression", span="108-120", cluster="lambda expression", file="Realtime.cs"];
m1_27 [label="Entry lambda expression", span="122-125", cluster="lambda expression", file="Realtime.cs"];
m1_29 [label="Exit lambda expression", span="122-125", cluster="lambda expression", file="Realtime.cs"];
m1_31 [label="Entry lambda expression", span="127-130", cluster="lambda expression", file="Realtime.cs"];
m1_33 [label="Exit lambda expression", span="127-130", cluster="lambda expression", file="Realtime.cs"];
m1_140 [label="Entry lambda expression", span="334-334", cluster="lambda expression", file="Realtime.cs"];
m1_141 [label="x.Value", span="334-334", cluster="lambda expression", file="Realtime.cs"];
m1_142 [label="Exit lambda expression", span="334-334", cluster="lambda expression", file="Realtime.cs"];
m1_143 [label="Entry lambda expression", span="334-334", cluster="lambda expression", file="Realtime.cs"];
m1_144 [label=true, span="334-334", cluster="lambda expression", file="Realtime.cs"];
m1_145 [label="Exit lambda expression", span="334-334", cluster="lambda expression", file="Realtime.cs"];
m1_169 [label="x.Value.BrokerId.Contains(brokerageId)", span="381-381", cluster="lambda expression", file="Realtime.cs"];
m1_168 [label="Entry lambda expression", span="381-381", cluster="lambda expression", file="Realtime.cs"];
m1_170 [label="Exit lambda expression", span="381-381", cluster="lambda expression", file="Realtime.cs"];
m1_180 [label="Entry lambda expression", span="402-402", cluster="lambda expression", file="Realtime.cs"];
m1_183 [label="Entry lambda expression", span="402-402", cluster="lambda expression", file="Realtime.cs"];
m1_186 [label="Entry lambda expression", span="404-404", cluster="lambda expression", file="Realtime.cs"];
m1_189 [label="Entry lambda expression", span="404-404", cluster="lambda expression", file="Realtime.cs"];
m1_181 [label="x.Value", span="402-402", cluster="lambda expression", file="Realtime.cs"];
m1_182 [label="Exit lambda expression", span="402-402", cluster="lambda expression", file="Realtime.cs"];
m1_184 [label="x.Clone()", span="402-402", cluster="lambda expression", file="Realtime.cs"];
m1_185 [label="Exit lambda expression", span="402-402", cluster="lambda expression", file="Realtime.cs"];
m1_187 [label="x.Value", span="404-404", cluster="lambda expression", file="Realtime.cs"];
m1_188 [label="Exit lambda expression", span="404-404", cluster="lambda expression", file="Realtime.cs"];
m1_190 [label="x.Clone()", span="404-404", cluster="lambda expression", file="Realtime.cs"];
m1_191 [label="Exit lambda expression", span="404-404", cluster="lambda expression", file="Realtime.cs"];
m1_240 [label="Entry lambda expression", span="491-491", cluster="lambda expression", file="Realtime.cs"];
m1_244 [label="x.Key <= lowestOrderIdToKeep", span="493-493", cluster="lambda expression", file="Realtime.cs"];
m1_243 [label="Entry lambda expression", span="493-493", cluster="lambda expression", file="Realtime.cs"];
m1_241 [label="x.Key", span="491-491", cluster="lambda expression", file="Realtime.cs"];
m1_242 [label="Exit lambda expression", span="491-491", cluster="lambda expression", file="Realtime.cs"];
m1_245 [label="Exit lambda expression", span="493-493", cluster="lambda expression", file="Realtime.cs"];
m1_285 [label="balance.Symbol == cash.Symbol", span="548-548", cluster="lambda expression", file="Realtime.cs"];
m1_284 [label="Entry lambda expression", span="548-548", cluster="lambda expression", file="Realtime.cs"];
m1_286 [label="Exit lambda expression", span="548-548", cluster="lambda expression", file="Realtime.cs"];
m1_288 [label="TimeSinceLastFill <= TimeSpan.FromSeconds(20)", span="580-580", cluster="lambda expression", file="Realtime.cs"];
m1_289 [label="_syncedLiveBrokerageCashToday = false", span="584-584", cluster="lambda expression", file="Realtime.cs"];
m1_291 [label="_lastSyncTimeTicks = DateTime.UtcNow.Ticks", span="589-589", cluster="lambda expression", file="Realtime.cs"];
m1_290 [label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'')", span="585-585", cluster="lambda expression", file="Realtime.cs"];
m1_292 [label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'')", span="590-590", cluster="lambda expression", file="Realtime.cs"];
m1_293 [label="Exit lambda expression", span="577-592", cluster="lambda expression", file="Realtime.cs"];
m1_238 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", file="Realtime.cs"];
m1_192 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="410-410", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Realtime.cs"];
m1_193 [label="_orderRequestQueue.GetConsumingEnumerable(_cancellationTokenSource.Token)", span="414-414", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Realtime.cs"];
m1_194 [label="HandleOrderRequest(request)", span="416-416", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Realtime.cs"];
m1_196 [label=Exception, span="420-420", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Realtime.cs"];
m1_199 [label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="428-428", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Realtime.cs"];
m1_195 [label="ProcessAsynchronousEvents()", span="417-417", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Realtime.cs"];
m1_197 [label="Log.Error(err)", span="423-423", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Realtime.cs"];
m1_198 [label="_algorithm.RunTimeError = err", span="425-425", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Realtime.cs"];
m1_200 [label="IsActive = false", span="429-429", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Realtime.cs"];
m1_201 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="410-410", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Realtime.cs"];
m1_35 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", span="149-149", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_36 [label="_algorithm.LiveMode", span="151-151", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_37 [label="Log.Trace(''BrokerageTransactionHandler.Process(): '' + request)", span="153-153", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_38 [label="request.OrderRequestType", span="156-156", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_40 [label="return AddOrder((SubmitOrderRequest) request);", span="159-159", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_42 [label="return UpdateOrder((UpdateOrderRequest) request);", span="162-162", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_44 [label="return CancelOrder((CancelOrderRequest) request);", span="165-165", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_39 [label="OrderRequestType.Submit", span="158-158", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_41 [label="OrderRequestType.Update", span="161-161", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_43 [label="OrderRequestType.Cancel", span="164-164", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_45 [label="throw new ArgumentOutOfRangeException();", span="168-168", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_46 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", span="149-149", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_416 [label="Entry QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="66-66", cluster="QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Realtime.cs"];
m1_206 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="443-443", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_207 [label="!_algorithm.LiveMode", span="448-448", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_208 [label="_orderRequestQueue.IsBusy && !_orderRequestQueue.WaitHandle.WaitOne(Time.OneSecond, _cancellationTokenSource.Token)", span="450-450", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_211 [label="Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Enter'')", span="457-457", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_209 [label="Log.Error(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Timed out waiting for request queue to finish processing.'')", span="452-452", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_210 [label="return;", span="454-454", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_212 [label="var currentTimeNewYork = DateTime.UtcNow.ConvertFromUtc(TimeZones.NewYork)", span="460-460", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_213 [label="_syncedLiveBrokerageCashToday && currentTimeNewYork.Date != LastSyncDate", span="461-461", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_215 [label="_algorithm.LiveMode && !_syncedLiveBrokerageCashToday && currentTimeNewYork.TimeOfDay >= LiveBrokerageCashSyncTime", span="467-467", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_214 [label="_syncedLiveBrokerageCashToday = false", span="463-463", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_216 [label="TimeSinceLastFill > TimeSpan.FromSeconds(10)", span="472-472", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_220 [label="int maxOrdersToKeep = 10000", span="484-484", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_217 [label="PerformCashSync()", span="474-474", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_218 [label=Exception, span="477-477", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_219 [label="Log.Error(err, ''Updating cash balances'')", span="479-479", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_221 [label="_orders.Count < maxOrdersToKeep + 1", span="485-485", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_225 [label="int lowestOrderIdToKeep = max - maxOrdersToKeep", span="492-492", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_222 [label="Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Exit'')", span="487-487", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_224 [label="int max = _orders.Max(x => x.Key)", span="491-491", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_223 [label="return;", span="488-488", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_226 [label="_orders.Where(x => x.Key <= lowestOrderIdToKeep)", span="493-493", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_227 [label="Order value", span="495-495", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_231 [label="Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Exit'')", span="501-501", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_229 [label="_orders.TryRemove(item.Key, out value)", span="497-497", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_230 [label="_orderTickets.TryRemove(item.Key, out ticket)", span="498-498", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_228 [label="OrderTicket ticket", span="496-496", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_232 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="443-443", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Realtime.cs"];
m1_381 [label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="84-84", cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Realtime.cs"];
m1_204 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="435-435", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="Realtime.cs"];
m1_205 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="435-435", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="Realtime.cs"];
m1_473 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="529-529", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_300 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="Realtime.cs"];
m1_476 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="238-238", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_96 [label="Entry QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", span="336-336", cluster="QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_315 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", span="821-821", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_421 [label="Order order", span="823-823", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_423 [label="!_orders.TryGetValue(request.OrderId, out order) || !_orderTickets.TryGetValue(request.OrderId, out ticket)", span="825-825", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_424 [label="Log.Error(''BrokerageTransactionHandler.HandleCancelOrderRequest(): Unable to cancel order with ID '' + request.OrderId + ''.'')", span="827-827", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_425 [label="return OrderResponse.UnableToFindOrder(request);", span="828-828", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_427 [label="return OrderResponse.InvalidStatus(request, order);", span="833-833", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_438 [label="return OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToCancelOrder, message);", span="855-855", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_440 [label="request.Tag != null", span="861-861", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_441 [label="order.Tag = request.Tag", span="864-864", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_442 [label="return OrderResponse.Success(request);", span="867-867", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_422 [label="OrderTicket ticket", span="824-824", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_426 [label="order.Status.IsClosed()", span="831-831", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_428 [label="ticket.SetOrder(order)", span="836-836", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_430 [label="orderCanceled = _brokerage.CancelOrder(order)", span="841-841", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_435 [label="var message = ''Brokerage failed to cancel order with id '' + order.Id", span="852-852", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_437 [label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to cancel order''))", span="854-854", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_439 [label="order.Status = OrderStatus.Canceled", span="859-859", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_429 [label="bool orderCanceled", span="838-838", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_431 [label=Exception, span="843-843", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_434 [label="!orderCanceled", span="849-849", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_432 [label="Log.Error(err)", span="845-845", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_433 [label="orderCanceled = false", span="846-846", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_436 [label="_algorithm.Error(message)", span="853-853", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_443 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", span="821-821", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_535 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="Realtime.cs"];
m1_25 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Realtime.cs"];
m1_69 [label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="194-194", cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="Realtime.cs"];
m1_138 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Realtime.cs"];
m1_97 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", span="362-362", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="Realtime.cs"];
m1_155 [label="_orders == null", span="365-365", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="Realtime.cs"];
m1_158 [label="return _orders.TryGetValue(orderId, out order) ? order : null;", span="368-368", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="Realtime.cs"];
m1_156 [label="return null;", span="365-365", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="Realtime.cs"];
m1_157 [label="Order order", span="367-367", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="Realtime.cs"];
m1_159 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", span="362-362", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="Realtime.cs"];
m1_418 [label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="91-91", cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Realtime.cs"];
m1_235 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="559-559", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="Realtime.cs"];
m1_283 [label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0", cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="Realtime.cs"];
m1_280 [label="Entry Unk.Trace", span="", cluster="Unk.Trace", file="Realtime.cs"];
m1_237 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="507-507", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_246 [label="!Monitor.TryEnter(_performCashSyncReentranceGuard)", span="512-512", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_247 [label="return;", span="514-514", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_248 [label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Sync cash balance'')", span="517-517", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_249 [label="var balances = new List<Cash>()", span="519-519", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_250 [label="balances = _brokerage.GetCashBalance()", span="522-522", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_251 [label=Exception, span="524-524", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_253 [label="balances.Count == 0", span="529-529", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_255 [label=balances, span="535-535", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_261 [label="var balanceCash = balances.FirstOrDefault(balance => balance.Symbol == cash.Symbol)", span="548-548", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_252 [label="Log.Error(err)", span="526-526", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_254 [label="return;", span="531-531", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_256 [label="Cash cash", span="537-537", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_260 [label="_algorithm.Portfolio.CashBook.Values", span="546-546", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_257 [label="!_algorithm.Portfolio.CashBook.TryGetValue(balance.Symbol, out cash)", span="538-538", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_258 [label="Log.LogHandler.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unexpected cash found {0} {1}'', balance.Amount, balance.Symbol)", span="540-540", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_259 [label="_algorithm.Portfolio.SetCash(balance.Symbol, balance.Amount, balance.ConversionRate)", span="541-541", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_268 [label="_syncedLiveBrokerageCashToday = true", span="568-568", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_263 [label="var delta = cash.Amount - balanceCash.Amount", span="553-553", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_264 [label="Math.Abs(_algorithm.Portfolio.CashBook.ConvertToAccountCurrency(delta, cash.Symbol)) > 5", span="554-554", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_267 [label="_algorithm.Portfolio.SetCash(cash.Symbol, 0, cash.ConversionRate)", span="565-565", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_262 [label="balanceCash != null", span="550-550", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_265 [label="Log.LogHandler.Trace(''BrokerageTransactionHandler.PerformCashSync(): {0} Delta: {1}'', balanceCash.Symbol,\r\n                                delta.ToString(''0.00''))", span="557-558", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_266 [label="_algorithm.Portfolio.SetCash(balanceCash.Symbol, balanceCash.Amount, balanceCash.ConversionRate)", span="560-560", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_269 [label="Task.Delay(TimeSpan.FromSeconds(10)).ContinueWith(_ =>\r\n            {\r\n                // we want to make sure this is a good value, so check for any recent fills\r\n                if (TimeSinceLastFill <= TimeSpan.FromSeconds(20))\r\n                {\r\n                    // this will cause us to come back in and reset cash again until we \r\n                    // haven't processed a fill for +- 10 seconds of the set cash time\r\n                    _syncedLiveBrokerageCashToday = false;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'');\r\n                }\r\n                else\r\n                {\r\n                    _lastSyncTimeTicks = DateTime.UtcNow.Ticks;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'');\r\n                }\r\n            })", span="577-592", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_270 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="507-507", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Realtime.cs"];
m1_274 [label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="Realtime.cs"];
m1_154 [label="Entry QuantConnect.Orders.Order.Clone()", span="224-224", cluster="QuantConnect.Orders.Order.Clone()", file="Realtime.cs"];
m1_276 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="Realtime.cs"];
m1_294 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="598-598", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Realtime.cs"];
m1_295 [label="var timeout = TimeSpan.FromSeconds(60)", span="600-600", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Realtime.cs"];
m1_296 [label="!_orderRequestQueue.WaitHandle.WaitOne(timeout)", span="601-601", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Realtime.cs"];
m1_297 [label="Log.Error(''BrokerageTransactionHandler.Exit(): Exceed timeout: '' + (int)(timeout.TotalSeconds) + '' seconds.'')", span="603-603", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Realtime.cs"];
m1_298 [label="_cancellationTokenSource.Cancel()", span="605-605", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Realtime.cs"];
m1_299 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="598-598", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Realtime.cs"];
m1_475 [label="Entry QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", span="296-296", cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_277 [label="Entry Unk.ConvertToAccountCurrency", span="", cluster="Unk.ConvertToAccountCurrency", file="Realtime.cs"];
m1_103 [label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128", cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="Realtime.cs"];
m1_281 [label="Entry Unk.SetCash", span="", cluster="Unk.SetCash", file="Realtime.cs"];
m1_377 [label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174", cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_171 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="Realtime.cs"];
m1_166 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="Realtime.cs"];
m1_67 [label="Entry QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", span="164-164", cluster="QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_379 [label="Entry QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="56-56", cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="Realtime.cs"];
m1_271 [label="Entry System.Threading.Monitor.TryEnter(object)", span="0-0", cluster="System.Threading.Monitor.TryEnter(object)", file="Realtime.cs"];
m1_98 [label="Entry QuantConnect.Orders.OrderResponse.UnableToFindOrder(QuantConnect.Orders.OrderRequest)", span="145-145", cluster="QuantConnect.Orders.OrderResponse.UnableToFindOrder(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_95 [label="Entry QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", span="391-391", cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_373 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1036-1036", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_501 [label="order.Type == OrderType.Market ||\r\n                order.Type == OrderType.MarketOnOpen ||\r\n                order.Type == OrderType.MarketOnClose", span="1039-1041", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_503 [label="var increment = security.PriceVariationModel.GetMinimumPriceVariation(security)", span="1046-1046", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_510 [label="order.Type", span="1054-1054", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_512 [label="limitPrice = ((LimitOrder)order).LimitPrice", span="1057-1057", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_514 [label="((LimitOrder)order).LimitPrice = limitRound", span="1059-1059", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_516 [label="stopPrice = ((StopMarketOrder)order).StopPrice", span="1062-1062", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_518 [label="((StopMarketOrder)order).StopPrice = stopRound", span="1064-1064", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_520 [label="limitPrice = ((StopLimitOrder)order).LimitPrice", span="1067-1067", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_522 [label="((StopLimitOrder)order).LimitPrice = limitRound", span="1069-1069", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_523 [label="stopPrice = ((StopLimitOrder)order).StopPrice", span="1070-1070", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_525 [label="((StopLimitOrder)order).StopPrice = stopRound", span="1072-1072", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_502 [label="return;", span="1043-1043", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_504 [label="increment == 0", span="1047-1047", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_513 [label="limitRound = Math.Round(limitPrice / increment) * increment", span="1058-1058", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_517 [label="stopRound = Math.Round(stopPrice / increment) * increment", span="1063-1063", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_521 [label="limitRound = Math.Round(limitPrice / increment) * increment", span="1068-1068", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_524 [label="stopRound = Math.Round(stopPrice / increment) * increment", span="1071-1071", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_505 [label="return;", span="1047-1047", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_506 [label="var limitPrice = 0m", span="1049-1049", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_507 [label="var limitRound = 0m", span="1050-1050", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_508 [label="var stopPrice = 0m", span="1051-1051", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_509 [label="var stopRound = 0m", span="1052-1052", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_511 [label="OrderType.Limit", span="1056-1056", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_515 [label="OrderType.StopMarket", span="1061-1061", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_519 [label="OrderType.StopLimit", span="1066-1066", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_526 [label="var format = ''Warning: To meet brokerage precision requirements, order {0}Price was rounded to {1} from {2}''", span="1078-1078", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_527 [label="!limitPrice.Equals(limitRound)", span="1080-1080", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_528 [label="_algorithm.Error(string.Format(format, ''Limit'', limitRound, limitPrice))", span="1082-1082", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_529 [label="!stopPrice.Equals(stopRound)", span="1084-1084", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_530 [label="_algorithm.Error(string.Format(format, ''Stop'', stopRound, stopPrice))", span="1086-1086", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_531 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1036-1036", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_50 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="Realtime.cs"];
m1_490 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="410-410", cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_376 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="Realtime.cs"];
m1_532 [label="Entry QuantConnect.Securities.IPriceVariationModel.GetMinimumPriceVariation(QuantConnect.Securities.Security)", span="28-28", cluster="QuantConnect.Securities.IPriceVariationModel.GetMinimumPriceVariation(QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_26 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="870-870", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_445 [label="var order = GetOrderByIdInternal(fill.OrderId)", span="873-873", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_447 [label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvent(): Unable to locate Order with id '' + fill.OrderId)", span="876-876", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_449 [label="order.Status = fill.Status", span="881-881", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_450 [label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="889-889", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_452 [label="var security = _algorithm.Securities[fill.Symbol]", span="894-894", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_453 [label="_algorithm.Portfolio.ProcessFill(fill)", span="907-907", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_456 [label="_algorithm.TradeBuilder.ProcessFill(fill, conversionRate, multiplier)", span="912-912", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_461 [label="_orderTickets.TryGetValue(fill.OrderId, out ticket)", span="923-923", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_462 [label="ticket.AddOrderEvent(fill)", span="925-925", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_464 [label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvent(): Unable to resolve ticket: '' + fill.OrderId)", span="930-930", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_465 [label="fill.Status != OrderStatus.None", span="934-934", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_466 [label="_resultHandler.OrderEvent(fill)", span="937-937", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_467 [label="_algorithm.OnOrderEvent(fill)", span="941-941", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_446 [label="order == null", span="874-874", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_459 [label="_algorithm.Error(string.Format(''Order Error: id: {0}, Error in Portfolio.ProcessFill: {1}'', order.Id, err.Message))", span="917-917", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_463 [label="order.Price = ticket.AverageFillPrice", span="926-926", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_448 [label="return;", span="877-877", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_451 [label="Interlocked.Exchange(ref _lastFillTimeTicks, DateTime.UtcNow.Ticks)", span="891-891", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_460 [label="OrderTicket ticket", span="922-922", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_454 [label="var conversionRate = security.QuoteCurrency.ConversionRate", span="909-909", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_455 [label="var multiplier = security.SymbolProperties.ContractMultiplier", span="910-910", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_457 [label=Exception, span="914-914", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_458 [label="Log.Error(err)", span="916-916", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_468 [label=Exception, span="943-943", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_469 [label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="945-945", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_470 [label="_algorithm.RunTimeError = err", span="947-947", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_471 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="870-870", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_236 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="Realtime.cs"];
m1_134 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="Realtime.cs"];
m1_167 [label="Entry Unk.Clone", span="", cluster="Unk.Clone", file="Realtime.cs"];
m1_477 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="403-403", cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Realtime.cs"];
m1_24 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Realtime.cs"];
m1_203 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", span="613-613", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_302 [label="OrderResponse response", span="615-615", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_303 [label="request.OrderRequestType", span="616-616", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_305 [label="response = HandleSubmitOrderRequest((SubmitOrderRequest)request)", span="619-619", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_307 [label="response = HandleUpdateOrderRequest((UpdateOrderRequest)request)", span="622-622", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_309 [label="response = HandleCancelOrderRequest((CancelOrderRequest)request)", span="625-625", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_311 [label="request.SetResponse(response, OrderRequestStatus.Processed)", span="632-632", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_304 [label="OrderRequestType.Submit", span="618-618", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_306 [label="OrderRequestType.Update", span="621-621", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_308 [label="OrderRequestType.Cancel", span="624-624", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_310 [label="throw new ArgumentOutOfRangeException();", span="628-628", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_312 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", span="613-613", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="Realtime.cs"];
m1_282 [label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0", cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="Realtime.cs"];
m1_131 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Realtime.cs"];
m1_48 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="214-214", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_74 [label="OrderTicket ticket", span="216-216", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_75 [label="!_orderTickets.TryGetValue(request.OrderId, out ticket)", span="217-217", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_76 [label="return OrderTicket.InvalidUpdateOrderId(_algorithm.Transactions, request);", span="219-219", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_77 [label="ticket.AddUpdateRequest(request)", span="222-222", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_78 [label="var order = GetOrderByIdInternal(request.OrderId)", span="227-227", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_80 [label="request.SetResponse(OrderResponse.UnableToFindOrder(request))", span="231-231", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_82 [label="request.SetResponse(OrderResponse.InvalidStatus(request, order))", span="236-236", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_83 [label="request.Quantity.HasValue && request.Quantity.Value == 0", span="238-238", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_84 [label="request.SetResponse(OrderResponse.ZeroQuantity(request))", span="240-240", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_86 [label="request.SetResponse(OrderResponse.WarmingUp(request))", span="244-244", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_87 [label="request.SetResponse(OrderResponse.Success(request), OrderRequestStatus.Processing)", span="248-248", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_88 [label="_orderRequestQueue.Add(request)", span="249-249", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_91 [label="request.SetResponse(OrderResponse.Error(request, OrderResponseErrorCode.ProcessingError, err.Message))", span="255-255", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_92 [label="return ticket;", span="258-258", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_79 [label="order == null", span="228-228", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_81 [label="order.Status.IsClosed()", span="233-233", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_85 [label="_algorithm.IsWarmingUp", span="242-242", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_89 [label=Exception, span="252-252", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_90 [label="Log.Error(err)", span="254-254", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_93 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="214-214", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Realtime.cs"];
m1_239 [label="Entry Unk.TryRemove", span="", cluster="Unk.TryRemove", file="Realtime.cs"];
m1_472 [label="Entry System.Threading.Interlocked.Exchange(ref long, long)", span="0-0", cluster="System.Threading.Interlocked.Exchange(ref long, long)", file="Realtime.cs"];
m1_374 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="370-370", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="Realtime.cs"];
m1_94 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Realtime.cs"];
m1_484 [label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Realtime.cs"];
m1_172 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="390-390", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="Realtime.cs"];
m1_173 [label="_orders == null", span="392-392", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="Realtime.cs"];
m1_175 [label="filter != null", span="399-399", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="Realtime.cs"];
m1_176 [label="return _orders.Select(x => x.Value).Where(filter).Select(x => x.Clone());", span="402-402", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="Realtime.cs"];
m1_174 [label="return Enumerable.Empty<Order>();", span="396-396", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="Realtime.cs"];
m1_177 [label="return _orders.Select(x => x.Value).Select(x => x.Clone());", span="404-404", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="Realtime.cs"];
m1_178 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="390-390", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="Realtime.cs"];
m1_314 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="742-742", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_382 [label="Order order", span="744-744", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_384 [label="!_orders.TryGetValue(request.OrderId, out order) || !_orderTickets.TryGetValue(request.OrderId, out ticket)", span="746-746", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_385 [label="Log.Error(''BrokerageTransactionHandler.HandleUpdateOrderRequest(): Unable to update order with ID '' + request.OrderId)", span="748-748", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_386 [label="return OrderResponse.UnableToFindOrder(request);", span="749-749", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_388 [label="return OrderResponse.InvalidStatus(request, order);", span="754-754", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_392 [label="!_algorithm.LiveMode && !_algorithm.BrokerageModel.CanUpdateOrder(_algorithm.Securities[order.Symbol], order, request, out message)", span="763-763", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_396 [label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageModelRefusedToUpdateOrder, ''OrderID: '' + order.Id + '' '' + message)", span="768-768", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_400 [label="order.ApplyUpdateOrderRequest(request)", span="775-775", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_409 [label="var errorMessage = ''Brokerage failed to update order with id '' + request.OrderId", span="796-796", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_412 [label="return OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToUpdateOrder, errorMessage);", span="799-799", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_413 [label="return OrderResponse.Success(request);", span="802-802", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_383 [label="OrderTicket ticket", span="745-745", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_387 [label="!CanUpdateOrder(order)", span="752-752", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_389 [label="var security = _algorithm.Securities[order.Symbol]", span="758-758", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_390 [label="order.Quantity = RoundOffOrder(order, security)", span="759-759", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_393 [label="order.Status = OrderStatus.Invalid", span="766-766", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_395 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''InvalidOrder'', ''BrokerageModel declared unable to update order: '' + order.Id)", span="767-767", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_398 [label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''BrokerageModel declared unable to update order''))", span="770-770", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_401 [label="RoundOrderPrices(order, security)", span="778-778", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_402 [label="ticket.SetOrder(order)", span="780-780", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_404 [label="orderUpdated = _brokerage.UpdateOrder(order)", span="785-785", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_411 [label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to update order''))", span="798-798", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_391 [label="BrokerageMessageEvent message", span="762-762", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_394 [label="message == null", span="767-767", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_397 [label="_algorithm.Error(response.ErrorMessage)", span="769-769", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_399 [label="return response;", span="771-771", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_403 [label="bool orderUpdated", span="782-782", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_405 [label=Exception, span="787-787", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_408 [label="!orderUpdated", span="793-793", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_406 [label="Log.Error(err)", span="789-789", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_407 [label="orderUpdated = false", span="790-790", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_410 [label="_algorithm.Error(errorMessage)", span="797-797", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_414 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="742-742", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Realtime.cs"];
m1_234 [label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142", cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Realtime.cs"];
m1_133 [label="Entry QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", span="357-357", cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_275 [label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="62-62", cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="Realtime.cs"];
m1_500 [label="Entry System.Convert.ToInt32(decimal)", span="0-0", cluster="System.Convert.ToInt32(decimal)", file="Realtime.cs"];
m1_132 [label="Entry QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", span="377-377", cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_99 [label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27", cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="Realtime.cs"];
m1_444 [label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="98-98", cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Realtime.cs"];
m1_372 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1006-1006", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_491 [label="var orderLotMod = order.Quantity%Convert.ToInt32(security.SymbolProperties.LotSize)", span="1008-1008", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_493 [label="order.Quantity = order.Quantity - orderLotMod", span="1012-1012", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_495 [label="_algorithm.Error(\r\n                        string.Format(\r\n                            ''Warning: Due to brokerage limitations, orders will be rounded to the nearest lot size of {0}'',\r\n                            Convert.ToInt32(security.SymbolProperties.LotSize)))", span="1016-1019", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_497 [label="return order.Quantity;", span="1022-1022", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_498 [label="return order.Quantity;", span="1026-1026", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_492 [label="orderLotMod != 0", span="1010-1010", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_494 [label="!_firstRoundOffMessage", span="1014-1014", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_496 [label="_firstRoundOffMessage = true", span="1020-1020", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_499 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1006-1006", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="Realtime.cs"];
m1_160 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", span="376-376", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="Realtime.cs"];
m1_161 [label="_orders == null", span="379-379", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="Realtime.cs"];
m1_163 [label="var order = _orders.FirstOrDefault(x => x.Value.BrokerId.Contains(brokerageId)).Value", span="381-381", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="Realtime.cs"];
m1_162 [label="return null;", span="379-379", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="Realtime.cs"];
m1_164 [label="return order != null ? order.Clone() : null;", span="382-382", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="Realtime.cs"];
m1_165 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", span="376-376", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="Realtime.cs"];
m1_273 [label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77", cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="Realtime.cs"];
m1_146 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", span="342-342", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="Realtime.cs"];
m1_147 [label="OrderTicket ticket", span="344-344", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="Realtime.cs"];
m1_148 [label="_orderTickets.TryGetValue(orderId, out ticket)", span="345-345", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="Realtime.cs"];
m1_149 [label="return ticket;", span="346-346", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="Realtime.cs"];
m1_150 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", span="342-342", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="Realtime.cs"];
m1_49 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", span="265-265", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_104 [label="OrderTicket ticket", span="267-267", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_105 [label="!_orderTickets.TryGetValue(request.OrderId, out ticket)", span="268-268", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_107 [label="return OrderTicket.InvalidCancelOrderId(_algorithm.Transactions, request);", span="271-271", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_108 [label="!ticket.TrySetCancelRequest(request)", span="278-278", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_109 [label="request.SetResponse(OrderResponse.Error(request, OrderResponseErrorCode.InvalidRequest, ''Cancellation is already in progress.''))", span="281-281", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_111 [label="var order = GetOrderByIdInternal(request.OrderId)", span="286-286", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_112 [label="order != null && request.Tag != null", span="287-287", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_113 [label="order.Tag = request.Tag", span="289-289", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_116 [label="request.SetResponse(OrderResponse.UnableToFindOrder(request))", span="294-294", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_119 [label="request.SetResponse(OrderResponse.InvalidStatus(request, order))", span="299-299", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_121 [label="request.SetResponse(OrderResponse.WarmingUp(request))", span="303-303", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_124 [label="request.SetResponse(OrderResponse.Success(request), OrderRequestStatus.Processing)", span="314-314", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_125 [label="_orderRequestQueue.Add(request)", span="315-315", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_128 [label="request.SetResponse(OrderResponse.Error(request, OrderResponseErrorCode.ProcessingError, err.Message))", span="321-321", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_106 [label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Unable to locate ticket for order.'')", span="270-270", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_110 [label="return ticket;", span="282-282", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_129 [label="return ticket;", span="324-324", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_114 [label="order == null", span="291-291", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_117 [label="order.Status.IsClosed()", span="296-296", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_118 [label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Order already '' + order.Status)", span="298-298", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_122 [label="order.Status = OrderStatus.CancelPending", span="308-308", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_123 [label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m))", span="311-311", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_115 [label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Cannot find this id.'')", span="293-293", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_120 [label="_algorithm.IsWarmingUp", span="301-301", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_126 [label=Exception, span="318-318", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_127 [label="Log.Error(err)", span="320-320", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_130 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", span="265-265", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="Realtime.cs"];
m1_536 [label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span="", file="Realtime.cs"];
m1_537 [label="QuantConnect.Interfaces.IAlgorithm", span="", file="Realtime.cs"];
m1_538 [label=string, span="", file="Realtime.cs"];
m1_539 [label=lowestOrderIdToKeep, span="", file="Realtime.cs"];
m1_540 [label=cash, span="", file="Realtime.cs"];
n326 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n170  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n175  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n196  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n209  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n210  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n211  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n225  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n228  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n255  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n265  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n277  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n296  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n297  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n298  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n299  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n300  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n301  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n302  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n303  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n318  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n304  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n305  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n306  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n307  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n324  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n308  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n309  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n326 -> n310  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
n0 -> n8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
n1 -> n2  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=1, style=dashed, color=darkseagreen4, label=samples];
n6 -> n6  [key=3, color=darkorchid, style=bold, label="Local variable double samples"];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=1, style=dashed, color=darkseagreen4, label=minimumSamplePeriod];
n7 -> n7  [key=3, color=darkorchid, style=bold, label="Local variable double minimumSamplePeriod"];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=1, style=dashed, color=darkseagreen4, label=resampleMinutes];
n10 -> n11  [key=0, style=solid];
n10 -> n22  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n23  [key=2, style=dotted];
n11 -> n24  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n25  [key=2, style=dotted];
n24 -> n59  [key=3, color=darkorchid, style=bold, label="Property variable bool IsActive"];
n13 -> n14  [key=0, style=solid];
n13 -> n26  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n27  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n28  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n29  [key=2, style=dotted];
n18 -> n30  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n31  [key=2, style=dotted];
n19 -> n32  [key=2, style=dotted];
n29 -> n163  [key=3, color=darkorchid, style=bold, label="Field variable string _debugMessage"];
n20 -> n21  [key=0, style=solid];
n20 -> n31  [key=2, style=dotted];
n20 -> n32  [key=2, style=dotted];
n21 -> n0  [key=0, style=bold, color=blue];
n33 -> n34  [key=0, style=solid, color=red];
n34 -> n35  [key=0, style=solid, color=red];
n34 -> n44  [key=1, style=dashed, color=red, label=_lastMessage];
n35 -> n36  [key=0, style=solid];
n44 -> n45  [key=0, style=solid, color=red];
n44 -> n53  [key=0, style=solid, color=red];
n36 -> n37  [key=0, style=solid];
n36 -> n54  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n54 -> n24  [key=2, style=dotted];
n38 -> n53  [key=0, style=solid];
n38 -> n57  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n53  [key=0, style=solid];
n40 -> n58  [key=2, style=dotted];
n40 -> n43  [key=1, style=dashed, color=darkseagreen4, label=packet];
n40 -> n48  [key=1, style=dashed, color=darkseagreen4, label=packet];
n40 -> n51  [key=1, style=dashed, color=darkseagreen4, label=packet];
n41 -> n42  [key=0, style=solid];
n41 -> n47  [key=0, style=solid];
n41 -> n50  [key=0, style=solid];
n53 -> n36  [key=0, style=solid];
n53 -> n62  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid, color=red];
n43 -> n45  [key=1, style=dashed, color=darkseagreen4, label=debug];
n43 -> n46  [key=1, style=dashed, color=red, label=debug];
n48 -> n49  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n47 -> n48  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n45 -> n46  [key=0, style=solid, color=red];
n45 -> n59  [key=2, style=dotted];
n46 -> n53  [key=0, style=solid, color=red];
n59 -> n59  [key=3, color=darkorchid, style=bold, label="Field variable bool _isActive"];
n49 -> n53  [key=0, style=solid];
n49 -> n60  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n61  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n56 -> n33  [key=0, style=bold, color=blue];
n63 -> n64  [key=0, style=solid];
n63 -> n65  [key=0, style=solid];
n64 -> n97  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n65 -> n67  [key=0, style=solid];
n66 -> n97  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n98  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n71  [key=0, style=solid];
n68 -> n99  [key=2, style=dotted];
n68 -> n68  [key=1, style=dashed, color=darkseagreen4, label=order];
n68 -> n109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n68 -> n112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n68 -> n72  [key=1, style=dashed, color=darkseagreen4, label=deltaOrders];
n68 -> n92  [key=1, style=dashed, color=darkseagreen4, label=deltaOrders];
n69 -> n70  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n71 -> n73  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n72 -> n101  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n106  [key=2, style=dotted];
n92 -> n105  [key=2, style=dotted];
n92 -> n94  [key=1, style=dashed, color=darkseagreen4, label=packet];
n70 -> n71  [key=0, style=solid];
n70 -> n100  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n78  [key=0, style=solid];
n75 -> n102  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n78 -> n98  [key=2, style=dotted];
n78 -> n81  [key=1, style=dashed, color=darkseagreen4, label=deltaCharts];
n78 -> n92  [key=1, style=dashed, color=darkseagreen4, label=deltaCharts];
n77 -> n78  [key=0, style=solid];
n77 -> n100  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n81 -> n80  [key=0, style=solid];
n81 -> n103  [key=2, style=dotted];
n81 -> n32  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n80 -> n82  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n82 -> n98  [key=2, style=dotted];
n82 -> n92  [key=1, style=dashed, color=darkseagreen4, label=deltaProfitLoss];
n83 -> n84  [key=0, style=solid];
n83 -> n98  [key=2, style=dotted];
n83 -> n92  [key=1, style=dashed, color=darkseagreen4, label=deltaStatistics];
n84 -> n85  [key=0, style=solid];
n84 -> n104  [key=2, style=dotted];
n84 -> n88  [key=1, style=dashed, color=darkseagreen4, label=progress];
n84 -> n92  [key=1, style=dashed, color=darkseagreen4, label=progress];
n85 -> n86  [key=0, style=solid];
n85 -> n87  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n88 -> n106  [key=2, style=dotted];
n88 -> n91  [key=1, style=dashed, color=darkseagreen4, label=complete];
n86 -> n87  [key=0, style=solid];
n86 -> n88  [key=1, style=dashed, color=darkseagreen4, label=progress];
n86 -> n92  [key=1, style=dashed, color=darkseagreen4, label=progress];
n87 -> n88  [key=0, style=solid];
n87 -> n105  [key=2, style=dotted];
n87 -> n98  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n92  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n91 -> n107  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n102  [key=2, style=dotted];
n107 -> n115  [key=0, style=solid];
n107 -> n118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.Packet"];
n107 -> n120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.Packet"];
n107 -> n125  [key=1, style=dashed, color=darkseagreen4, label=bool];
n107 -> n88  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Packets.Packet packet"];
n107 -> n134  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Packets.Packet packet"];
n93 -> n94  [key=0, style=solid];
n94 -> n95  [key=0, style=solid];
n94 -> n97  [key=0, style=solid];
n94 -> n108  [key=2, style=dotted];
n95 -> n96  [key=0, style=solid];
n97 -> n62  [key=0, style=bold, color=blue];
n96 -> n97  [key=0, style=solid];
n96 -> n100  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n111 -> n109  [key=0, style=bold, color=blue];
n113 -> n114  [key=0, style=solid];
n114 -> n112  [key=0, style=bold, color=blue];
n115 -> n116  [key=0, style=solid];
n115 -> n125  [key=1, style=dashed, color=darkseagreen4, label=serialized];
n118 -> n119  [key=0, style=solid];
n118 -> n120  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n120 -> n123  [key=1, style=dashed, color=darkseagreen4, label=result];
n125 -> n126  [key=0, style=solid];
n125 -> n128  [key=0, style=solid];
n125 -> n130  [key=2, style=dotted];
n116 -> n117  [key=0, style=solid];
n116 -> n125  [key=1, style=dashed, color=darkseagreen4, label=key];
n117 -> n118  [key=0, style=solid];
n119 -> n128  [key=0, style=solid];
n121 -> n122  [key=0, style=solid];
n121 -> n124  [key=0, style=solid];
n123 -> n125  [key=0, style=solid];
n123 -> n129  [key=2, style=dotted];
n122 -> n123  [key=0, style=solid];
n122 -> n125  [key=1, style=dashed, color=darkseagreen4, label=key];
n124 -> n125  [key=0, style=solid];
n124 -> n100  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n128 -> n107  [key=0, style=bold, color=blue];
n127 -> n128  [key=0, style=solid];
n127 -> n100  [key=2, style=dotted];
n131 -> n132  [key=0, style=solid];
n131 -> n134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n132 -> n133  [key=0, style=solid];
n132 -> n142  [key=2, style=dotted];
n132 -> n134  [key=1, style=dashed, color=darkseagreen4, label=charts];
n134 -> n135  [key=0, style=solid];
n134 -> n106  [key=2, style=dotted];
n134 -> n105  [key=2, style=dotted];
n134 -> n136  [key=1, style=dashed, color=darkseagreen4, label=result];
n134 -> n137  [key=1, style=dashed, color=darkseagreen4, label=result];
n133 -> n134  [key=0, style=solid];
n135 -> n136  [key=0, style=solid];
n135 -> n107  [key=2, style=dotted];
n136 -> n137  [key=0, style=solid];
n136 -> n143  [key=2, style=dotted];
n137 -> n138  [key=0, style=solid];
n137 -> n108  [key=2, style=dotted];
n138 -> n139  [key=0, style=solid];
n138 -> n141  [key=0, style=solid];
n138 -> n24  [key=2, style=dotted];
n139 -> n140  [key=0, style=solid];
n141 -> n131  [key=0, style=bold, color=blue];
n140 -> n141  [key=0, style=solid];
n140 -> n100  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n145 -> n146  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n146 -> n157  [key=2, style=dotted];
n147 -> n148  [key=0, style=solid];
n147 -> n158  [key=2, style=dotted];
n148 -> n149  [key=0, style=solid];
n148 -> n150  [key=0, style=solid];
n149 -> n150  [key=0, style=solid];
n150 -> n151  [key=0, style=solid];
n151 -> n152  [key=0, style=solid];
n151 -> n159  [key=2, style=dotted];
n151 -> n153  [key=1, style=dashed, color=darkseagreen4, label=types];
n151 -> n154  [key=1, style=dashed, color=darkseagreen4, label=types];
n151 -> n155  [key=1, style=dashed, color=darkseagreen4, label=types];
n152 -> n153  [key=0, style=solid];
n152 -> n155  [key=0, style=solid];
n152 -> n154  [key=1, style=dashed, color=darkseagreen4, label=security];
n153 -> n154  [key=0, style=solid];
n153 -> n152  [key=0, style=solid];
n153 -> n160  [key=2, style=dotted];
n154 -> n152  [key=0, style=solid];
n154 -> n161  [key=2, style=dotted];
n155 -> n156  [key=0, style=solid];
n155 -> n162  [key=2, style=dotted];
n156 -> n144  [key=0, style=bold, color=blue];
n162 -> n186  [key=0, style=solid];
n162 -> n151  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<QuantConnect.SecurityType> types"];
n163 -> n164  [key=0, style=solid];
n163 -> n166  [key=1, style=dashed, color=darkseagreen4, label=string];
n163 -> n171  [key=1, style=dashed, color=darkseagreen4, label=string];
n163 -> n172  [key=1, style=dashed, color=darkseagreen4, label=string];
n163 -> n174  [key=1, style=dashed, color=darkseagreen4, label=string];
n163 -> n175  [key=1, style=dashed, color=darkseagreen4, label=string];
n163 -> n176  [key=1, style=dashed, color=darkseagreen4, label=string];
n163 -> n271  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n163 -> n303  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n164 -> n165  [key=0, style=solid];
n164 -> n166  [key=0, style=solid];
n166 -> n167  [key=0, style=solid];
n166 -> n168  [key=0, style=solid];
n166 -> n178  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n174  [key=0, style=solid];
n172 -> n174  [key=0, style=solid];
n172 -> n179  [key=2, style=dotted];
n172 -> n172  [key=1, style=dashed, color=darkseagreen4, label=string];
n172 -> n175  [key=1, style=dashed, color=darkseagreen4, label=string];
n172 -> n176  [key=1, style=dashed, color=darkseagreen4, label=string];
n174 -> n175  [key=0, style=solid];
n174 -> n180  [key=2, style=dotted];
n174 -> n181  [key=2, style=dotted];
n175 -> n176  [key=0, style=solid];
n175 -> n182  [key=2, style=dotted];
n175 -> n161  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n165 -> n177  [key=0, style=solid];
n167 -> n177  [key=0, style=solid];
n168 -> n169  [key=0, style=solid];
n168 -> n170  [key=0, style=solid];
n169 -> n177  [key=0, style=solid];
n170 -> n171  [key=0, style=solid];
n170 -> n173  [key=0, style=solid];
n173 -> n174  [key=0, style=solid];
n173 -> n175  [key=1, style=dashed, color=darkseagreen4, label=string];
n173 -> n176  [key=1, style=dashed, color=darkseagreen4, label=string];
n177 -> n163  [key=0, style=bold, color=blue];
n183 -> n184  [key=0, style=solid];
n183 -> n307  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n184 -> n185  [key=0, style=solid];
n184 -> n182  [key=2, style=dotted];
n184 -> n161  [key=2, style=dotted];
n185 -> n183  [key=0, style=bold, color=blue];
n186 -> n187  [key=0, style=solid];
n186 -> n189  [key=2, style=dotted];
n187 -> n188  [key=0, style=solid];
n187 -> n181  [key=2, style=dotted];
n189 -> n189  [key=3, color=darkorchid, style=bold, label="Field variable int _debugMessageMax"];
n188 -> n162  [key=0, style=bold, color=blue];
n190 -> n191  [key=0, style=solid];
n190 -> n195  [key=1, style=dashed, color=darkseagreen4, label=string];
n190 -> n196  [key=1, style=dashed, color=darkseagreen4, label=string];
n190 -> n305  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n191 -> n192  [key=0, style=solid];
n191 -> n193  [key=0, style=solid];
n195 -> n196  [key=0, style=solid];
n195 -> n198  [key=2, style=dotted];
n195 -> n181  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n192 -> n197  [key=0, style=solid];
n193 -> n194  [key=0, style=solid];
n193 -> n195  [key=0, style=solid];
n194 -> n197  [key=0, style=solid];
n198 -> n198  [key=3, color=darkorchid, style=bold, label="Field variable string _debugMessagePeriod"];
n197 -> n190  [key=0, style=bold, color=blue];
n199 -> n200  [key=0, style=solid];
n199 -> n201  [key=1, style=dashed, color=darkseagreen4, label=string];
n199 -> n202  [key=1, style=dashed, color=darkseagreen4, label=string];
n200 -> n201  [key=0, style=solid];
n200 -> n204  [key=2, style=dotted];
n201 -> n202  [key=0, style=solid];
n201 -> n205  [key=2, style=dotted];
n201 -> n181  [key=2, style=dotted];
n202 -> n203  [key=0, style=solid];
n204 -> n248  [key=0, style=solid];
n203 -> n199  [key=0, style=bold, color=blue];
n206 -> n207  [key=0, style=solid];
n206 -> n208  [key=1, style=dashed, color=darkseagreen4, label=string];
n206 -> n209  [key=1, style=dashed, color=darkseagreen4, label=string];
n206 -> n210  [key=1, style=dashed, color=darkseagreen4, label=string];
n206 -> n211  [key=1, style=dashed, color=darkseagreen4, label=string];
n206 -> n212  [key=1, style=dashed, color=darkseagreen4, label=string];
n206 -> n18  [key=3, color=darkorchid, style=bold, label="Parameter variable string chartName"];
n206 -> n218  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.SeriesType seriesType"];
n206 -> n222  [key=3, color=darkorchid, style=bold, label="Parameter variable string unit"];
n206 -> n217  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal value"];
n206 -> n221  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal value"];
n207 -> n208  [key=0, style=solid];
n208 -> n209  [key=0, style=solid];
n208 -> n210  [key=0, style=solid];
n208 -> n214  [key=2, style=dotted];
n209 -> n210  [key=0, style=solid];
n209 -> n29  [key=2, style=dotted];
n209 -> n30  [key=2, style=dotted];
n210 -> n211  [key=0, style=solid];
n210 -> n212  [key=0, style=solid];
n210 -> n215  [key=2, style=dotted];
n211 -> n212  [key=0, style=solid];
n211 -> n31  [key=2, style=dotted];
n211 -> n32  [key=2, style=dotted];
n212 -> n213  [key=0, style=solid];
n212 -> n216  [key=2, style=dotted];
n212 -> n161  [key=2, style=dotted];
n213 -> n206  [key=0, style=bold, color=blue];
n217 -> n218  [key=0, style=solid];
n217 -> n219  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n217 -> n296  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime time"];
n218 -> n219  [key=0, style=solid];
n218 -> n206  [key=2, style=dotted];
n219 -> n220  [key=0, style=solid];
n220 -> n217  [key=0, style=bold, color=blue];
n221 -> n222  [key=0, style=solid];
n222 -> n223  [key=0, style=solid];
n222 -> n206  [key=2, style=dotted];
n223 -> n221  [key=0, style=bold, color=blue];
n224 -> n225  [key=0, style=solid];
n224 -> n226  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Chart>"];
n225 -> n226  [key=0, style=solid];
n226 -> n227  [key=0, style=solid];
n226 -> n233  [key=0, style=solid];
n226 -> n228  [key=1, style=dashed, color=darkseagreen4, label=update];
n226 -> n229  [key=1, style=dashed, color=darkseagreen4, label=update];
n226 -> n230  [key=1, style=dashed, color=darkseagreen4, label=update];
n226 -> n231  [key=1, style=dashed, color=darkseagreen4, label=update];
n226 -> n232  [key=1, style=dashed, color=darkseagreen4, label=update];
n227 -> n228  [key=0, style=solid];
n227 -> n229  [key=0, style=solid];
n227 -> n214  [key=2, style=dotted];
n233 -> n224  [key=0, style=bold, color=blue];
n228 -> n229  [key=0, style=solid];
n228 -> n29  [key=2, style=dotted];
n228 -> n30  [key=2, style=dotted];
n229 -> n230  [key=0, style=solid];
n229 -> n226  [key=0, style=solid];
n229 -> n231  [key=1, style=dashed, color=darkseagreen4, label=series];
n229 -> n232  [key=1, style=dashed, color=darkseagreen4, label=series];
n230 -> n231  [key=0, style=solid];
n230 -> n232  [key=0, style=solid];
n230 -> n215  [key=2, style=dotted];
n231 -> n232  [key=0, style=solid];
n231 -> n31  [key=2, style=dotted];
n231 -> n32  [key=2, style=dotted];
n232 -> n229  [key=0, style=solid];
n232 -> n234  [key=2, style=dotted];
n235 -> n236  [key=0, style=solid];
n236 -> n237  [key=0, style=solid];
n236 -> n241  [key=2, style=dotted];
n236 -> n238  [key=1, style=dashed, color=darkseagreen4, label=logURL];
n237 -> n238  [key=0, style=solid];
n237 -> n239  [key=0, style=solid];
n241 -> n253  [key=0, style=solid];
n241 -> n257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n241 -> n263  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n241 -> n274  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n241 -> n282  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n238 -> n239  [key=0, style=solid];
n238 -> n163  [key=2, style=dotted];
n239 -> n240  [key=0, style=solid];
n240 -> n235  [key=0, style=bold, color=blue];
n242 -> n243  [key=0, style=solid];
n243 -> n242  [key=0, style=bold, color=blue];
n244 -> n245  [key=0, style=solid];
n245 -> n244  [key=0, style=bold, color=blue];
n246 -> n247  [key=0, style=solid];
n246 -> n296  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime time"];
n247 -> n246  [key=0, style=bold, color=blue];
n248 -> n249  [key=0, style=solid];
n248 -> n250  [key=2, style=dotted];
n249 -> n204  [key=0, style=bold, color=blue];
n251 -> n252  [key=0, style=solid];
n252 -> n251  [key=0, style=bold, color=blue];
n253 -> n254  [key=0, style=solid];
n253 -> n264  [key=1, style=dashed, color=darkseagreen4, label=remoteUrl];
n253 -> n253  [key=3, color=darkorchid, style=bold, label="Local variable string remoteUrl"];
n253 -> n263  [key=3, color=darkorchid, style=bold, label="Local variable string remoteUrl"];
n257 -> n258  [key=0, style=solid];
n257 -> n289  [key=2, style=dotted];
n257 -> n259  [key=1, style=dashed, color=darkseagreen4, label=allowance];
n257 -> n260  [key=1, style=dashed, color=darkseagreen4, label=allowance];
n263 -> n264  [key=0, style=solid];
n263 -> n281  [key=1, style=dashed, color=darkseagreen4, label=key];
n274 -> n275  [key=0, style=solid];
n274 -> n276  [key=0, style=solid];
n282 -> n283  [key=0, style=solid];
n282 -> n285  [key=0, style=solid];
n282 -> n292  [key=2, style=dotted];
n254 -> n255  [key=0, style=solid];
n254 -> n266  [key=1, style=dashed, color=darkseagreen4, label=logLength];
n254 -> n268  [key=1, style=dashed, color=darkseagreen4, label=logLength];
n254 -> n282  [key=1, style=dashed, color=darkseagreen4, label=logLength];
n254 -> n292  [key=3, color=darkorchid, style=bold, label="Local variable int logLength"];
n264 -> n265  [key=0, style=solid];
n264 -> n264  [key=1, style=dashed, color=darkseagreen4, label=remoteUrl];
n264 -> n282  [key=1, style=dashed, color=darkseagreen4, label=remoteUrl];
n264 -> n285  [key=1, style=dashed, color=darkseagreen4, label=remoteUrl];
n264 -> n286  [key=1, style=dashed, color=darkseagreen4, label=remoteUrl];
n255 -> n256  [key=0, style=solid];
n255 -> n257  [key=0, style=solid];
n255 -> n288  [key=2, style=dotted];
n266 -> n267  [key=0, style=solid];
n266 -> n269  [key=0, style=solid];
n268 -> n265  [key=0, style=solid];
n268 -> n268  [key=1, style=dashed, color=darkseagreen4, label=logLength];
n268 -> n282  [key=1, style=dashed, color=darkseagreen4, label=logLength];
n256 -> n287  [key=0, style=solid];
n258 -> n259  [key=0, style=solid];
n258 -> n260  [key=1, style=dashed, color=darkseagreen4, label=logBacktestMax];
n258 -> n269  [key=1, style=dashed, color=darkseagreen4, label=logBacktestMax];
n259 -> n260  [key=0, style=solid];
n259 -> n270  [key=1, style=dashed, color=darkseagreen4, label=logDailyMax];
n260 -> n261  [key=0, style=solid];
n260 -> n290  [key=2, style=dotted];
n260 -> n266  [key=1, style=dashed, color=darkseagreen4, label=logRemaining];
n269 -> n270  [key=0, style=solid];
n269 -> n291  [key=2, style=dotted];
n269 -> n272  [key=1, style=dashed, color=darkseagreen4, label=btMax];
n269 -> n273  [key=1, style=dashed, color=darkseagreen4, label=btMax];
n270 -> n271  [key=0, style=solid];
n270 -> n291  [key=2, style=dotted];
n270 -> n272  [key=1, style=dashed, color=darkseagreen4, label=dyMax];
n270 -> n273  [key=1, style=dashed, color=darkseagreen4, label=dyMax];
n261 -> n262  [key=0, style=solid];
n261 -> n282  [key=1, style=dashed, color=darkseagreen4, label=hitLimit];
n262 -> n263  [key=0, style=solid];
n262 -> n267  [key=1, style=dashed, color=darkseagreen4, label=serialized];
n262 -> n278  [key=1, style=dashed, color=darkseagreen4, label=serialized];
n262 -> n281  [key=1, style=dashed, color=darkseagreen4, label=serialized];
n262 -> n272  [key=3, color=darkorchid, style=bold, label="Local variable string serialized"];
n262 -> n271  [key=3, color=darkorchid, style=bold, label="Local variable string serialized"];
n267 -> n268  [key=0, style=solid];
n267 -> n267  [key=1, style=dashed, color=darkseagreen4, label=serialized];
n267 -> n281  [key=1, style=dashed, color=darkseagreen4, label=serialized];
n278 -> n279  [key=0, style=solid];
n278 -> n278  [key=1, style=dashed, color=darkseagreen4, label=serialized];
n281 -> n282  [key=0, style=solid];
n281 -> n130  [key=2, style=dotted];
n265 -> n266  [key=0, style=solid];
n265 -> n281  [key=0, style=solid];
n265 -> n267  [key=1, style=dashed, color=darkseagreen4, label=line];
n265 -> n268  [key=1, style=dashed, color=darkseagreen4, label=line];
n285 -> n286  [key=0, style=solid];
n285 -> n24  [key=2, style=dotted];
n286 -> n287  [key=0, style=solid];
n272 -> n273  [key=0, style=solid];
n272 -> n278  [key=1, style=dashed, color=darkseagreen4, label=capNotice];
n273 -> n274  [key=0, style=solid];
n273 -> n163  [key=2, style=dotted];
n271 -> n272  [key=0, style=solid];
n275 -> n277  [key=0, style=solid];
n275 -> n279  [key=1, style=dashed, color=darkseagreen4, label=requestMore];
n276 -> n277  [key=0, style=solid];
n276 -> n279  [key=1, style=dashed, color=darkseagreen4, label=requestMore];
n277 -> n278  [key=0, style=solid];
n277 -> n163  [key=2, style=dotted];
n279 -> n280  [key=0, style=solid];
n279 -> n279  [key=1, style=dashed, color=darkseagreen4, label=serialized];
n279 -> n281  [key=1, style=dashed, color=darkseagreen4, label=serialized];
n280 -> n281  [key=0, style=solid];
n280 -> n282  [key=1, style=dashed, color=darkseagreen4, label=hitLimit];
n283 -> n284  [key=0, style=solid];
n292 -> n292  [key=3, color=darkorchid, style=bold, label="Field variable int _jobDays"];
n284 -> n285  [key=0, style=solid];
n284 -> n100  [key=2, style=dotted];
n287 -> n241  [key=0, style=bold, color=blue];
n293 -> n294  [key=0, style=solid];
n294 -> n293  [key=0, style=bold, color=blue];
n295 -> n296  [key=0, style=solid];
n295 -> n297  [key=1, style=dashed, color=darkseagreen4, label=bool];
n296 -> n297  [key=0, style=solid];
n296 -> n298  [key=1, style=dashed, color=darkseagreen4, label=time];
n296 -> n299  [key=1, style=dashed, color=darkseagreen4, label=time];
n296 -> n302  [key=1, style=dashed, color=darkseagreen4, label=time];
n297 -> n298  [key=0, style=solid];
n297 -> n303  [key=0, style=solid];
n298 -> n299  [key=0, style=solid];
n298 -> n312  [key=2, style=dotted];
n299 -> n300  [key=0, style=solid];
n299 -> n313  [key=2, style=dotted];
n299 -> n217  [key=2, style=dotted];
n302 -> n301  [key=0, style=solid];
n302 -> n246  [key=2, style=dotted];
n303 -> n304  [key=0, style=solid];
n303 -> n315  [key=2, style=dotted];
n303 -> n317  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n300 -> n301  [key=0, style=solid];
n300 -> n314  [key=2, style=dotted];
n300 -> n224  [key=2, style=dotted];
n301 -> n302  [key=0, style=solid];
n301 -> n303  [key=0, style=solid];
n304 -> n305  [key=0, style=solid];
n304 -> n316  [key=2, style=dotted];
n317 -> n318  [key=0, style=solid];
n305 -> n306  [key=0, style=solid];
n305 -> n315  [key=2, style=dotted];
n305 -> n320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n306 -> n307  [key=0, style=solid];
n306 -> n316  [key=2, style=dotted];
n320 -> n321  [key=0, style=solid];
n307 -> n308  [key=0, style=solid];
n307 -> n315  [key=2, style=dotted];
n307 -> n323  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n308 -> n309  [key=0, style=solid];
n308 -> n316  [key=2, style=dotted];
n323 -> n324  [key=0, style=solid];
n309 -> n310  [key=0, style=solid];
n309 -> n311  [key=0, style=solid];
n310 -> n309  [key=0, style=solid];
n310 -> n251  [key=2, style=dotted];
n310 -> n310  [key=1, style=dashed, color=darkseagreen4, label=pair];
n311 -> n295  [key=0, style=bold, color=blue];
n318 -> n319  [key=0, style=solid];
n318 -> n163  [key=2, style=dotted];
n319 -> n317  [key=0, style=bold, color=blue];
n321 -> n322  [key=0, style=solid];
n321 -> n190  [key=2, style=dotted];
n322 -> n320  [key=0, style=bold, color=blue];
n324 -> n325  [key=0, style=solid];
n324 -> n183  [key=2, style=dotted];
n325 -> n323  [key=0, style=bold, color=blue];
m1_30 -> m1_478  [key=0, style=solid];
m1_30 -> m1_480  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.AccountEvent"];
m1_30 -> m1_482  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.AccountEvent"];
m1_478 -> m1_479  [key=0, style=solid];
m1_478 -> m1_480  [key=1, style=dashed, color=darkseagreen4, label=delta];
m1_480 -> m1_481  [key=0, style=solid];
m1_480 -> m1_376  [key=2, style=dotted];
m1_480 -> m1_25  [key=2, style=dotted];
m1_482 -> m1_483  [key=0, style=solid];
m1_482 -> m1_484  [key=2, style=dotted];
m1_479 -> m1_480  [key=0, style=solid];
m1_479 -> m1_481  [key=0, style=solid];
m1_481 -> m1_482  [key=0, style=solid];
m1_481 -> m1_483  [key=0, style=solid];
m1_483 -> m1_30  [key=0, style=bold, color=blue];
m1_34 -> m1_485  [key=0, style=solid];
m1_34 -> m1_486  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_34 -> m1_487  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_485 -> m1_486  [key=0, style=solid];
m1_485 -> m1_488  [key=0, style=solid];
m1_486 -> m1_487  [key=0, style=solid];
m1_486 -> m1_489  [key=2, style=dotted];
m1_487 -> m1_488  [key=0, style=solid];
m1_487 -> m1_490  [key=2, style=dotted];
m1_488 -> m1_34  [key=0, style=bold, color=blue];
m1_23 -> m1_151  [key=0, style=solid];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_97  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_154  [key=2, style=dotted];
m1_153 -> m1_23  [key=0, style=bold, color=blue];
m1_313 -> m1_316  [key=0, style=solid];
m1_313 -> m1_317  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_313 -> m1_323  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_313 -> m1_326  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_313 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_313 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_313 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_313 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_313 -> m1_365  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_313 -> m1_370  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_316 -> m1_317  [key=0, style=solid];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_72  [key=2, style=dotted];
m1_317 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_327  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_328  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_329  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_330  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_336  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_340  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_346  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_352  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_363  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_364  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_317 -> m1_369  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_323 -> m1_371  [key=0, style=solid];
m1_323 -> m1_103  [key=2, style=dotted];
m1_326 -> m1_371  [key=0, style=solid];
m1_326 -> m1_98  [key=2, style=dotted];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_101  [key=2, style=dotted];
m1_331 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label=response];
m1_341 -> m1_371  [key=0, style=solid];
m1_341 -> m1_103  [key=2, style=dotted];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_377  [key=2, style=dotted];
m1_344 -> m1_378  [key=2, style=dotted];
m1_344 -> m1_376  [key=2, style=dotted];
m1_344 -> m1_103  [key=2, style=dotted];
m1_344 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=response];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_103  [key=2, style=dotted];
m1_353 -> m1_356  [key=1, style=dashed, color=darkseagreen4, label=response];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_103  [key=2, style=dotted];
m1_365 -> m1_368  [key=1, style=dashed, color=darkseagreen4, label=response];
m1_370 -> m1_371  [key=0, style=solid];
m1_370 -> m1_66  [key=2, style=dotted];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_318 -> m1_327  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_318 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_318 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_319 -> m1_320  [key=0, style=solid];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> m1_372  [key=2, style=dotted];
m1_321 -> m1_322  [key=0, style=solid];
m1_321 -> m1_324  [key=0, style=solid];
m1_321 -> m1_70  [key=2, style=dotted];
m1_324 -> m1_325  [key=0, style=solid];
m1_324 -> m1_327  [key=0, style=solid];
m1_324 -> m1_94  [key=2, style=dotted];
m1_324 -> m1_328  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_373  [key=2, style=dotted];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_73  [key=2, style=dotted];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_335  [key=0, style=solid];
m1_330 -> m1_331  [key=0, style=solid];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_134  [key=2, style=dotted];
m1_333 -> m1_26  [key=2, style=dotted];
m1_336 -> m1_337  [key=0, style=solid];
m1_336 -> m1_342  [key=0, style=solid];
m1_336 -> m1_375  [key=2, style=dotted];
m1_339 -> m1_340  [key=0, style=solid];
m1_339 -> m1_376  [key=2, style=dotted];
m1_339 -> m1_374  [key=2, style=dotted];
m1_340 -> m1_341  [key=0, style=solid];
m1_340 -> m1_134  [key=2, style=dotted];
m1_340 -> m1_26  [key=2, style=dotted];
m1_343 -> m1_344  [key=0, style=solid];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_134  [key=2, style=dotted];
m1_346 -> m1_26  [key=2, style=dotted];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_357  [key=0, style=solid];
m1_349 -> m1_379  [key=2, style=dotted];
m1_349 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=message];
m1_349 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label=message];
m1_350 -> m1_351  [key=0, style=solid];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_380  [key=2, style=dotted];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_134  [key=2, style=dotted];
m1_355 -> m1_26  [key=2, style=dotted];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_362  [key=0, style=solid];
m1_358 -> m1_381  [key=2, style=dotted];
m1_363 -> m1_364  [key=0, style=solid];
m1_364 -> m1_365  [key=0, style=solid];
m1_367 -> m1_368  [key=0, style=solid];
m1_367 -> m1_134  [key=2, style=dotted];
m1_367 -> m1_26  [key=2, style=dotted];
m1_369 -> m1_370  [key=0, style=solid];
m1_322 -> m1_323  [key=0, style=solid];
m1_322 -> m1_131  [key=2, style=dotted];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_131  [key=2, style=dotted];
m1_335 -> m1_336  [key=0, style=solid];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_374  [key=2, style=dotted];
m1_334 -> m1_371  [key=0, style=solid];
m1_337 -> m1_338  [key=0, style=solid];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_348  [key=0, style=solid];
m1_338 -> m1_339  [key=0, style=solid];
m1_338 -> m1_102  [key=2, style=dotted];
m1_348 -> m1_349  [key=0, style=solid];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_374  [key=2, style=dotted];
m1_347 -> m1_371  [key=0, style=solid];
m1_357 -> m1_358  [key=0, style=solid];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_353  [key=0, style=solid];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_374  [key=2, style=dotted];
m1_356 -> m1_371  [key=0, style=solid];
m1_359 -> m1_360  [key=0, style=solid];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_369  [key=0, style=solid];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_102  [key=2, style=dotted];
m1_361 -> m1_362  [key=0, style=solid];
m1_366 -> m1_367  [key=0, style=solid];
m1_366 -> m1_374  [key=2, style=dotted];
m1_368 -> m1_371  [key=0, style=solid];
m1_371 -> m1_313  [key=0, style=bold, color=blue];
m1_135 -> m1_136  [key=0, style=solid];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_138  [key=2, style=dotted];
m1_136 -> m1_139  [key=2, style=dotted];
m1_136 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_137 -> m1_135  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_0 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m1_0 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_0 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_0 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_7 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_7 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_11 -> m1_12  [key=0, style=solid];
m1_2 -> m1_12  [key=0, style=solid];
m1_2 -> m1_13  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.AccountEvent"];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_10 -> m1_11  [key=0, style=solid];
m1_12 -> m1_0  [key=0, style=bold, color=blue];
m1_71 -> m1_71  [key=3, color=darkorchid, style=bold, label="Local variable string raw"];
m1_415 -> m1_419  [key=0, style=solid];
m1_419 -> m1_420  [key=0, style=solid];
m1_420 -> m1_415  [key=0, style=bold, color=blue];
m1_47 -> m1_51  [key=0, style=solid];
m1_47 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_47 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_47 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_47 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_47 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_66  [key=2, style=dotted];
m1_51 -> m1_67  [key=2, style=dotted];
m1_51 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=response];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_68  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_69  [key=2, style=dotted];
m1_53 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m1_53 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m1_56 -> m1_64  [key=0, style=solid];
m1_56 -> m1_71  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_72  [key=2, style=dotted];
m1_57 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_57 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_57 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_57 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_57 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_70  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_57  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_70  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_73  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_65 -> m1_47  [key=0, style=bold, color=blue];
m1_287 -> m1_288  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_21  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_23  [key=2, style=dotted];
m1_17 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_25  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_26  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_34  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_14 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_14 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=brokerIds];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_20  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_24  [key=2, style=dotted];
m1_22 -> m1_14  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_29 -> m1_27  [key=0, style=bold, color=blue];
m1_31 -> m1_32  [key=0, style=solid];
m1_33 -> m1_31  [key=0, style=bold, color=blue];
m1_140 -> m1_141  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.OrderTicket>"];
m1_142 -> m1_140  [key=0, style=bold, color=blue];
m1_143 -> m1_144  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_145 -> m1_143  [key=0, style=bold, color=blue];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_171  [key=2, style=dotted];
m1_169 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m1_168 -> m1_169  [key=0, style=solid];
m1_170 -> m1_168  [key=0, style=bold, color=blue];
m1_180 -> m1_181  [key=0, style=solid];
m1_183 -> m1_184  [key=0, style=solid];
m1_186 -> m1_187  [key=0, style=solid];
m1_189 -> m1_190  [key=0, style=solid];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m1_182 -> m1_180  [key=0, style=bold, color=blue];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_167  [key=2, style=dotted];
m1_185 -> m1_183  [key=0, style=bold, color=blue];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m1_188 -> m1_186  [key=0, style=bold, color=blue];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_167  [key=2, style=dotted];
m1_191 -> m1_189  [key=0, style=bold, color=blue];
m1_240 -> m1_241  [key=0, style=solid];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_244  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m1_243 -> m1_244  [key=0, style=solid];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m1_242 -> m1_240  [key=0, style=bold, color=blue];
m1_245 -> m1_243  [key=0, style=bold, color=blue];
m1_285 -> m1_286  [key=0, style=solid];
m1_284 -> m1_285  [key=0, style=solid];
m1_286 -> m1_284  [key=0, style=bold, color=blue];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_291  [key=0, style=solid];
m1_288 -> m1_236  [key=2, style=dotted];
m1_289 -> m1_290  [key=0, style=solid];
m1_291 -> m1_292  [key=0, style=solid];
m1_290 -> m1_293  [key=0, style=solid];
m1_290 -> m1_25  [key=2, style=dotted];
m1_292 -> m1_293  [key=0, style=solid];
m1_292 -> m1_25  [key=2, style=dotted];
m1_293 -> m1_287  [key=0, style=bold, color=blue];
m1_192 -> m1_193  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_196  [key=0, style=solid];
m1_193 -> m1_199  [key=0, style=solid];
m1_193 -> m1_202  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_203  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_25  [key=2, style=dotted];
m1_195 -> m1_193  [key=0, style=solid];
m1_195 -> m1_204  [key=2, style=dotted];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_102  [key=2, style=dotted];
m1_198 -> m1_199  [key=0, style=solid];
m1_200 -> m1_201  [key=0, style=solid];
m1_201 -> m1_192  [key=0, style=bold, color=blue];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m1_35 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m1_35 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m1_35 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m1_35 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_25  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_41  [key=0, style=solid];
m1_38 -> m1_43  [key=0, style=solid];
m1_38 -> m1_45  [key=0, style=solid];
m1_40 -> m1_46  [key=0, style=solid];
m1_40 -> m1_47  [key=2, style=dotted];
m1_42 -> m1_46  [key=0, style=solid];
m1_42 -> m1_48  [key=2, style=dotted];
m1_44 -> m1_46  [key=0, style=solid];
m1_44 -> m1_49  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_50  [key=2, style=dotted];
m1_46 -> m1_35  [key=0, style=bold, color=blue];
m1_206 -> m1_207  [key=0, style=solid];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_211  [key=0, style=solid];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_210  [key=0, style=solid];
m1_208 -> m1_233  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_234  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_131  [key=2, style=dotted];
m1_210 -> m1_232  [key=0, style=solid];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_235  [key=2, style=dotted];
m1_212 -> m1_215  [key=1, style=dashed, color=darkseagreen4, label=currentTimeNewYork];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_215  [key=0, style=solid];
m1_215 -> m1_216  [key=0, style=solid];
m1_215 -> m1_220  [key=0, style=solid];
m1_214 -> m1_215  [key=0, style=solid];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_218  [key=0, style=solid];
m1_216 -> m1_220  [key=0, style=solid];
m1_216 -> m1_236  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_225  [key=1, style=dashed, color=darkseagreen4, label=maxOrdersToKeep];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_220  [key=0, style=solid];
m1_217 -> m1_237  [key=2, style=dotted];
m1_218 -> m1_219  [key=0, style=solid];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_102  [key=2, style=dotted];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_224  [key=0, style=solid];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_244  [key=1, style=dashed, color=darkseagreen4, label=lowestOrderIdToKeep];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_234  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_238  [key=2, style=dotted];
m1_224 -> m1_240  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_223 -> m1_232  [key=0, style=solid];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_231  [key=0, style=solid];
m1_226 -> m1_139  [key=2, style=dotted];
m1_226 -> m1_243  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_226 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_226 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_227 -> m1_228  [key=0, style=solid];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_234  [key=2, style=dotted];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_239  [key=2, style=dotted];
m1_230 -> m1_226  [key=0, style=solid];
m1_230 -> m1_239  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_232 -> m1_206  [key=0, style=bold, color=blue];
m1_204 -> m1_205  [key=0, style=solid];
m1_205 -> m1_204  [key=0, style=bold, color=blue];
m1_315 -> m1_421  [key=0, style=solid];
m1_315 -> m1_423  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_315 -> m1_424  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_315 -> m1_425  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_315 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_315 -> m1_438  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_315 -> m1_440  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_315 -> m1_441  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_315 -> m1_442  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_421 -> m1_422  [key=0, style=solid];
m1_423 -> m1_424  [key=0, style=solid];
m1_423 -> m1_426  [key=0, style=solid];
m1_423 -> m1_94  [key=2, style=dotted];
m1_423 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_423 -> m1_428  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_423 -> m1_430  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_423 -> m1_435  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_423 -> m1_437  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_423 -> m1_439  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_423 -> m1_441  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_424 -> m1_425  [key=0, style=solid];
m1_424 -> m1_131  [key=2, style=dotted];
m1_425 -> m1_443  [key=0, style=solid];
m1_425 -> m1_98  [key=2, style=dotted];
m1_427 -> m1_443  [key=0, style=solid];
m1_427 -> m1_100  [key=2, style=dotted];
m1_438 -> m1_443  [key=0, style=solid];
m1_438 -> m1_103  [key=2, style=dotted];
m1_440 -> m1_441  [key=0, style=solid];
m1_440 -> m1_442  [key=0, style=solid];
m1_441 -> m1_442  [key=0, style=solid];
m1_442 -> m1_443  [key=0, style=solid];
m1_442 -> m1_66  [key=2, style=dotted];
m1_422 -> m1_423  [key=0, style=solid];
m1_426 -> m1_427  [key=0, style=solid];
m1_426 -> m1_428  [key=0, style=solid];
m1_426 -> m1_99  [key=2, style=dotted];
m1_428 -> m1_429  [key=0, style=solid];
m1_428 -> m1_73  [key=2, style=dotted];
m1_430 -> m1_431  [key=0, style=solid];
m1_430 -> m1_434  [key=0, style=solid];
m1_430 -> m1_444  [key=2, style=dotted];
m1_435 -> m1_436  [key=0, style=solid];
m1_435 -> m1_438  [key=1, style=dashed, color=darkseagreen4, label=message];
m1_437 -> m1_438  [key=0, style=solid];
m1_437 -> m1_134  [key=2, style=dotted];
m1_437 -> m1_26  [key=2, style=dotted];
m1_439 -> m1_440  [key=0, style=solid];
m1_429 -> m1_430  [key=0, style=solid];
m1_431 -> m1_432  [key=0, style=solid];
m1_434 -> m1_435  [key=0, style=solid];
m1_434 -> m1_439  [key=0, style=solid];
m1_432 -> m1_433  [key=0, style=solid];
m1_432 -> m1_102  [key=2, style=dotted];
m1_433 -> m1_434  [key=0, style=solid];
m1_436 -> m1_437  [key=0, style=solid];
m1_436 -> m1_374  [key=2, style=dotted];
m1_443 -> m1_315  [key=0, style=bold, color=blue];
m1_97 -> m1_155  [key=0, style=solid];
m1_97 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_157  [key=0, style=solid];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_94  [key=2, style=dotted];
m1_158 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_156 -> m1_159  [key=0, style=solid];
m1_157 -> m1_158  [key=0, style=solid];
m1_159 -> m1_97  [key=0, style=bold, color=blue];
m1_237 -> m1_246  [key=0, style=solid];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_248  [key=0, style=solid];
m1_246 -> m1_271  [key=2, style=dotted];
m1_247 -> m1_269  [key=0, style=solid];
m1_247 -> m1_270  [key=0, style=solid];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_25  [key=2, style=dotted];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> n159  [key=2, style=dotted];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_253  [key=0, style=solid];
m1_250 -> m1_273  [key=2, style=dotted];
m1_250 -> m1_255  [key=1, style=dashed, color=darkseagreen4, label=balances];
m1_250 -> m1_261  [key=1, style=dashed, color=darkseagreen4, label=balances];
m1_251 -> m1_252  [key=0, style=solid];
m1_253 -> m1_254  [key=0, style=solid];
m1_253 -> m1_255  [key=0, style=solid];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_260  [key=0, style=solid];
m1_255 -> m1_257  [key=1, style=dashed, color=darkseagreen4, label=balance];
m1_255 -> m1_258  [key=1, style=dashed, color=darkseagreen4, label=balance];
m1_255 -> m1_259  [key=1, style=dashed, color=darkseagreen4, label=balance];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_166  [key=2, style=dotted];
m1_261 -> m1_284  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_261 -> m1_263  [key=1, style=dashed, color=darkseagreen4, label=balanceCash];
m1_261 -> m1_265  [key=1, style=dashed, color=darkseagreen4, label=balanceCash];
m1_261 -> m1_266  [key=1, style=dashed, color=darkseagreen4, label=balanceCash];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_102  [key=2, style=dotted];
m1_254 -> m1_269  [key=0, style=solid];
m1_254 -> m1_270  [key=0, style=solid];
m1_256 -> m1_257  [key=0, style=solid];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_268  [key=0, style=solid];
m1_260 -> m1_285  [key=1, style=dashed, color=darkseagreen4, label=cash];
m1_260 -> m1_263  [key=1, style=dashed, color=darkseagreen4, label=cash];
m1_260 -> m1_264  [key=1, style=dashed, color=darkseagreen4, label=cash];
m1_260 -> m1_267  [key=1, style=dashed, color=darkseagreen4, label=cash];
m1_257 -> m1_258  [key=0, style=solid];
m1_257 -> m1_255  [key=0, style=solid];
m1_257 -> m1_274  [key=2, style=dotted];
m1_258 -> m1_259  [key=0, style=solid];
m1_258 -> m1_275  [key=2, style=dotted];
m1_259 -> m1_255  [key=0, style=solid];
m1_259 -> m1_276  [key=2, style=dotted];
m1_268 -> m1_269  [key=0, style=solid];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_265  [key=1, style=dashed, color=darkseagreen4, label=delta];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_266  [key=0, style=solid];
m1_264 -> m1_277  [key=2, style=dotted];
m1_264 -> m1_278  [key=2, style=dotted];
m1_267 -> m1_260  [key=0, style=solid];
m1_267 -> m1_276  [key=2, style=dotted];
m1_262 -> m1_263  [key=0, style=solid];
m1_262 -> m1_267  [key=0, style=solid];
m1_265 -> m1_266  [key=0, style=solid];
m1_265 -> m1_279  [key=2, style=dotted];
m1_265 -> m1_280  [key=2, style=dotted];
m1_266 -> m1_260  [key=0, style=solid];
m1_266 -> m1_281  [key=2, style=dotted];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_236  [key=2, style=dotted];
m1_269 -> m1_282  [key=2, style=dotted];
m1_269 -> m1_283  [key=2, style=dotted];
m1_269 -> m1_287  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_270 -> m1_237  [key=0, style=bold, color=blue];
m1_294 -> m1_295  [key=0, style=solid];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_236  [key=2, style=dotted];
m1_295 -> m1_297  [key=1, style=dashed, color=darkseagreen4, label=timeout];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_298  [key=0, style=solid];
m1_296 -> m1_300  [key=2, style=dotted];
m1_297 -> m1_298  [key=0, style=solid];
m1_297 -> m1_131  [key=2, style=dotted];
m1_297 -> m1_297  [key=1, style=dashed, color=darkseagreen4, label=timeout];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_301  [key=2, style=dotted];
m1_299 -> m1_294  [key=0, style=bold, color=blue];
m1_373 -> m1_501  [key=0, style=solid];
m1_373 -> m1_503  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_373 -> m1_510  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_373 -> m1_512  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_373 -> m1_514  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_373 -> m1_516  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_373 -> m1_518  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_373 -> m1_520  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_373 -> m1_522  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_373 -> m1_523  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_373 -> m1_525  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_501 -> m1_502  [key=0, style=solid];
m1_501 -> m1_503  [key=0, style=solid];
m1_503 -> m1_504  [key=0, style=solid];
m1_503 -> m1_532  [key=2, style=dotted];
m1_503 -> m1_513  [key=1, style=dashed, color=darkseagreen4, label=increment];
m1_503 -> m1_517  [key=1, style=dashed, color=darkseagreen4, label=increment];
m1_503 -> m1_521  [key=1, style=dashed, color=darkseagreen4, label=increment];
m1_503 -> m1_524  [key=1, style=dashed, color=darkseagreen4, label=increment];
m1_510 -> m1_511  [key=0, style=solid];
m1_510 -> m1_515  [key=0, style=solid];
m1_510 -> m1_519  [key=0, style=solid];
m1_510 -> m1_526  [key=0, style=solid];
m1_512 -> m1_513  [key=0, style=solid];
m1_514 -> m1_526  [key=0, style=solid];
m1_516 -> m1_517  [key=0, style=solid];
m1_518 -> m1_526  [key=0, style=solid];
m1_520 -> m1_521  [key=0, style=solid];
m1_520 -> m1_527  [key=1, style=dashed, color=darkseagreen4, label=limitPrice];
m1_520 -> m1_528  [key=1, style=dashed, color=darkseagreen4, label=limitPrice];
m1_522 -> m1_523  [key=0, style=solid];
m1_523 -> m1_524  [key=0, style=solid];
m1_523 -> m1_529  [key=1, style=dashed, color=darkseagreen4, label=stopPrice];
m1_523 -> m1_530  [key=1, style=dashed, color=darkseagreen4, label=stopPrice];
m1_525 -> m1_526  [key=0, style=solid];
m1_502 -> m1_531  [key=0, style=solid];
m1_504 -> m1_505  [key=0, style=solid];
m1_504 -> m1_506  [key=0, style=solid];
m1_513 -> m1_514  [key=0, style=solid];
m1_513 -> m1_533  [key=2, style=dotted];
m1_517 -> m1_518  [key=0, style=solid];
m1_517 -> m1_533  [key=2, style=dotted];
m1_521 -> m1_522  [key=0, style=solid];
m1_521 -> m1_533  [key=2, style=dotted];
m1_521 -> m1_527  [key=1, style=dashed, color=darkseagreen4, label=limitRound];
m1_521 -> m1_528  [key=1, style=dashed, color=darkseagreen4, label=limitRound];
m1_524 -> m1_525  [key=0, style=solid];
m1_524 -> m1_533  [key=2, style=dotted];
m1_524 -> m1_529  [key=1, style=dashed, color=darkseagreen4, label=stopRound];
m1_524 -> m1_530  [key=1, style=dashed, color=darkseagreen4, label=stopRound];
m1_505 -> m1_531  [key=0, style=solid];
m1_506 -> m1_507  [key=0, style=solid];
m1_507 -> m1_508  [key=0, style=solid];
m1_508 -> m1_509  [key=0, style=solid];
m1_509 -> m1_510  [key=0, style=solid];
m1_511 -> m1_512  [key=0, style=solid];
m1_515 -> m1_516  [key=0, style=solid];
m1_519 -> m1_520  [key=0, style=solid];
m1_526 -> m1_527  [key=0, style=solid];
m1_526 -> m1_528  [key=1, style=dashed, color=darkseagreen4, label=format];
m1_526 -> m1_530  [key=1, style=dashed, color=darkseagreen4, label=format];
m1_527 -> m1_528  [key=0, style=solid];
m1_527 -> m1_529  [key=0, style=solid];
m1_527 -> m1_534  [key=2, style=dotted];
m1_528 -> m1_529  [key=0, style=solid];
m1_528 -> m1_535  [key=2, style=dotted];
m1_528 -> m1_374  [key=2, style=dotted];
m1_529 -> m1_530  [key=0, style=solid];
m1_529 -> m1_531  [key=0, style=solid];
m1_529 -> m1_534  [key=2, style=dotted];
m1_530 -> m1_531  [key=0, style=solid];
m1_530 -> m1_535  [key=2, style=dotted];
m1_530 -> m1_374  [key=2, style=dotted];
m1_531 -> m1_373  [key=0, style=bold, color=blue];
m1_26 -> m1_445  [key=0, style=solid];
m1_26 -> m1_447  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_26 -> m1_449  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_26 -> m1_450  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_26 -> m1_452  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_26 -> m1_453  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_26 -> m1_456  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_26 -> m1_461  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_26 -> m1_462  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_26 -> m1_464  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_26 -> m1_465  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_26 -> m1_466  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_26 -> m1_467  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_445 -> m1_446  [key=0, style=solid];
m1_445 -> m1_97  [key=2, style=dotted];
m1_445 -> m1_449  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_445 -> m1_459  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_445 -> m1_463  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_447 -> m1_448  [key=0, style=solid];
m1_447 -> m1_131  [key=2, style=dotted];
m1_449 -> m1_450  [key=0, style=solid];
m1_450 -> m1_451  [key=0, style=solid];
m1_450 -> m1_460  [key=0, style=solid];
m1_452 -> m1_453  [key=0, style=solid];
m1_452 -> m1_454  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_452 -> m1_455  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_453 -> m1_454  [key=0, style=solid];
m1_453 -> m1_473  [key=2, style=dotted];
m1_456 -> m1_457  [key=0, style=solid];
m1_456 -> m1_460  [key=0, style=solid];
m1_456 -> m1_474  [key=2, style=dotted];
m1_461 -> m1_462  [key=0, style=solid];
m1_461 -> m1_464  [key=0, style=solid];
m1_461 -> m1_94  [key=2, style=dotted];
m1_461 -> m1_463  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m1_462 -> m1_463  [key=0, style=solid];
m1_462 -> m1_475  [key=2, style=dotted];
m1_464 -> m1_465  [key=0, style=solid];
m1_464 -> m1_131  [key=2, style=dotted];
m1_465 -> m1_466  [key=0, style=solid];
m1_465 -> m1_471  [key=0, style=solid];
m1_466 -> m1_467  [key=0, style=solid];
m1_466 -> m1_476  [key=2, style=dotted];
m1_467 -> m1_468  [key=0, style=solid];
m1_467 -> m1_471  [key=0, style=solid];
m1_467 -> m1_477  [key=2, style=dotted];
m1_446 -> m1_447  [key=0, style=solid];
m1_446 -> m1_449  [key=0, style=solid];
m1_459 -> m1_460  [key=0, style=solid];
m1_459 -> m1_376  [key=2, style=dotted];
m1_459 -> m1_374  [key=2, style=dotted];
m1_463 -> m1_465  [key=0, style=solid];
m1_448 -> m1_471  [key=0, style=solid];
m1_451 -> m1_452  [key=0, style=solid];
m1_451 -> m1_472  [key=2, style=dotted];
m1_460 -> m1_461  [key=0, style=solid];
m1_454 -> m1_455  [key=0, style=solid];
m1_454 -> m1_456  [key=1, style=dashed, color=darkseagreen4, label=conversionRate];
m1_455 -> m1_456  [key=0, style=solid];
m1_457 -> m1_458  [key=0, style=solid];
m1_458 -> m1_459  [key=0, style=solid];
m1_458 -> m1_102  [key=2, style=dotted];
m1_468 -> m1_469  [key=0, style=solid];
m1_469 -> m1_470  [key=0, style=solid];
m1_469 -> m1_374  [key=2, style=dotted];
m1_470 -> m1_471  [key=0, style=solid];
m1_471 -> m1_26  [key=0, style=bold, color=blue];
m1_203 -> m1_302  [key=0, style=solid];
m1_203 -> m1_303  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m1_203 -> m1_305  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m1_203 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m1_203 -> m1_309  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m1_203 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m1_302 -> m1_303  [key=0, style=solid];
m1_303 -> m1_304  [key=0, style=solid];
m1_303 -> m1_306  [key=0, style=solid];
m1_303 -> m1_308  [key=0, style=solid];
m1_303 -> m1_310  [key=0, style=solid];
m1_305 -> m1_311  [key=0, style=solid];
m1_305 -> m1_313  [key=2, style=dotted];
m1_307 -> m1_311  [key=0, style=solid];
m1_307 -> m1_314  [key=2, style=dotted];
m1_309 -> m1_311  [key=0, style=solid];
m1_309 -> m1_315  [key=2, style=dotted];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_68  [key=2, style=dotted];
m1_304 -> m1_305  [key=0, style=solid];
m1_306 -> m1_307  [key=0, style=solid];
m1_308 -> m1_309  [key=0, style=solid];
m1_310 -> m1_312  [key=0, style=solid];
m1_310 -> m1_50  [key=2, style=dotted];
m1_312 -> m1_203  [key=0, style=bold, color=blue];
m1_48 -> m1_74  [key=0, style=solid];
m1_48 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_48 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_48 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_48 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_48 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_48 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_48 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_48 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_48 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_48 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_48 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_48 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_74 -> m1_75  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_77  [key=0, style=solid];
m1_75 -> m1_94  [key=2, style=dotted];
m1_75 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m1_76 -> m1_93  [key=0, style=solid];
m1_76 -> m1_95  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_96  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_97  [key=2, style=dotted];
m1_78 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_78 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_80 -> m1_89  [key=0, style=solid];
m1_80 -> m1_92  [key=0, style=solid];
m1_80 -> m1_98  [key=2, style=dotted];
m1_80 -> m1_68  [key=2, style=dotted];
m1_82 -> m1_89  [key=0, style=solid];
m1_82 -> m1_92  [key=0, style=solid];
m1_82 -> m1_100  [key=2, style=dotted];
m1_82 -> m1_68  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_85  [key=0, style=solid];
m1_84 -> m1_89  [key=0, style=solid];
m1_84 -> m1_92  [key=0, style=solid];
m1_84 -> m1_101  [key=2, style=dotted];
m1_84 -> m1_68  [key=2, style=dotted];
m1_86 -> m1_89  [key=0, style=solid];
m1_86 -> m1_92  [key=0, style=solid];
m1_86 -> m1_67  [key=2, style=dotted];
m1_86 -> m1_68  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_66  [key=2, style=dotted];
m1_87 -> m1_68  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_92  [key=0, style=solid];
m1_88 -> m1_71  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_103  [key=2, style=dotted];
m1_91 -> m1_68  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_81  [key=0, style=solid];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_83  [key=0, style=solid];
m1_81 -> m1_99  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_87  [key=0, style=solid];
m1_89 -> m1_90  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_102  [key=2, style=dotted];
m1_93 -> m1_48  [key=0, style=bold, color=blue];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Orders.Order, bool>"];
m1_172 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Orders.Order, bool>"];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_175  [key=0, style=solid];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_177  [key=0, style=solid];
m1_176 -> m1_178  [key=0, style=solid];
m1_176 -> m1_138  [key=2, style=dotted];
m1_176 -> m1_139  [key=2, style=dotted];
m1_176 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_176 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_174 -> m1_178  [key=0, style=solid];
m1_174 -> m1_179  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_138  [key=2, style=dotted];
m1_177 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_177 -> m1_189  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_178 -> m1_172  [key=0, style=bold, color=blue];
m1_314 -> m1_382  [key=0, style=solid];
m1_314 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_314 -> m1_385  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_314 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_314 -> m1_388  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_314 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_314 -> m1_396  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_314 -> m1_400  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_314 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_314 -> m1_412  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_314 -> m1_413  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.UpdateOrderRequest"];
m1_382 -> m1_383  [key=0, style=solid];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_387  [key=0, style=solid];
m1_384 -> m1_94  [key=2, style=dotted];
m1_384 -> m1_388  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_389  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_390  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_393  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_395  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_396  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_398  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_400  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_401  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_402  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_384 -> m1_411  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_385 -> m1_386  [key=0, style=solid];
m1_385 -> m1_131  [key=2, style=dotted];
m1_386 -> m1_414  [key=0, style=solid];
m1_386 -> m1_98  [key=2, style=dotted];
m1_388 -> m1_414  [key=0, style=solid];
m1_388 -> m1_100  [key=2, style=dotted];
m1_392 -> m1_393  [key=0, style=solid];
m1_392 -> m1_400  [key=0, style=solid];
m1_392 -> m1_416  [key=2, style=dotted];
m1_392 -> m1_394  [key=1, style=dashed, color=darkseagreen4, label=message];
m1_392 -> m1_396  [key=1, style=dashed, color=darkseagreen4, label=message];
m1_396 -> m1_397  [key=0, style=solid];
m1_396 -> m1_103  [key=2, style=dotted];
m1_396 -> m1_399  [key=1, style=dashed, color=darkseagreen4, label=response];
m1_400 -> m1_401  [key=0, style=solid];
m1_400 -> m1_417  [key=2, style=dotted];
m1_409 -> m1_410  [key=0, style=solid];
m1_409 -> m1_412  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
m1_412 -> m1_414  [key=0, style=solid];
m1_412 -> m1_103  [key=2, style=dotted];
m1_413 -> m1_414  [key=0, style=solid];
m1_413 -> m1_66  [key=2, style=dotted];
m1_383 -> m1_384  [key=0, style=solid];
m1_387 -> m1_388  [key=0, style=solid];
m1_387 -> m1_389  [key=0, style=solid];
m1_387 -> m1_415  [key=2, style=dotted];
m1_389 -> m1_390  [key=0, style=solid];
m1_389 -> m1_401  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_390 -> m1_391  [key=0, style=solid];
m1_390 -> m1_372  [key=2, style=dotted];
m1_393 -> m1_394  [key=0, style=solid];
m1_395 -> m1_396  [key=0, style=solid];
m1_395 -> m1_380  [key=2, style=dotted];
m1_398 -> m1_399  [key=0, style=solid];
m1_398 -> m1_134  [key=2, style=dotted];
m1_398 -> m1_26  [key=2, style=dotted];
m1_401 -> m1_402  [key=0, style=solid];
m1_401 -> m1_373  [key=2, style=dotted];
m1_402 -> m1_403  [key=0, style=solid];
m1_402 -> m1_73  [key=2, style=dotted];
m1_404 -> m1_405  [key=0, style=solid];
m1_404 -> m1_408  [key=0, style=solid];
m1_404 -> m1_418  [key=2, style=dotted];
m1_411 -> m1_412  [key=0, style=solid];
m1_411 -> m1_134  [key=2, style=dotted];
m1_411 -> m1_26  [key=2, style=dotted];
m1_391 -> m1_392  [key=0, style=solid];
m1_394 -> m1_395  [key=0, style=solid];
m1_394 -> m1_396  [key=0, style=solid];
m1_397 -> m1_398  [key=0, style=solid];
m1_397 -> m1_374  [key=2, style=dotted];
m1_399 -> m1_414  [key=0, style=solid];
m1_403 -> m1_404  [key=0, style=solid];
m1_405 -> m1_406  [key=0, style=solid];
m1_408 -> m1_409  [key=0, style=solid];
m1_408 -> m1_413  [key=0, style=solid];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_102  [key=2, style=dotted];
m1_407 -> m1_408  [key=0, style=solid];
m1_410 -> m1_411  [key=0, style=solid];
m1_410 -> m1_374  [key=2, style=dotted];
m1_414 -> m1_314  [key=0, style=bold, color=blue];
m1_372 -> m1_491  [key=0, style=solid];
m1_372 -> m1_493  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_372 -> m1_495  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_372 -> m1_497  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_372 -> m1_498  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m1_491 -> m1_492  [key=0, style=solid];
m1_491 -> m1_500  [key=2, style=dotted];
m1_491 -> m1_493  [key=1, style=dashed, color=darkseagreen4, label=orderLotMod];
m1_493 -> m1_494  [key=0, style=solid];
m1_495 -> m1_496  [key=0, style=solid];
m1_495 -> m1_500  [key=2, style=dotted];
m1_495 -> m1_489  [key=2, style=dotted];
m1_495 -> m1_374  [key=2, style=dotted];
m1_497 -> m1_499  [key=0, style=solid];
m1_498 -> m1_499  [key=0, style=solid];
m1_492 -> m1_493  [key=0, style=solid];
m1_492 -> m1_498  [key=0, style=solid];
m1_494 -> m1_495  [key=0, style=solid];
m1_494 -> m1_497  [key=0, style=solid];
m1_496 -> m1_497  [key=0, style=solid];
m1_499 -> m1_372  [key=0, style=bold, color=blue];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_160 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_163  [key=0, style=solid];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_166  [key=2, style=dotted];
m1_163 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_162 -> m1_165  [key=0, style=solid];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_167  [key=2, style=dotted];
m1_165 -> m1_160  [key=0, style=bold, color=blue];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_147 -> m1_148  [key=0, style=solid];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_94  [key=2, style=dotted];
m1_149 -> m1_150  [key=0, style=solid];
m1_150 -> m1_146  [key=0, style=bold, color=blue];
m1_49 -> m1_104  [key=0, style=solid];
m1_49 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_49 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.CancelOrderRequest"];
m1_104 -> m1_105  [key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_108  [key=0, style=solid];
m1_105 -> m1_94  [key=2, style=dotted];
m1_105 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m1_105 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m1_107 -> m1_130  [key=0, style=solid];
m1_107 -> m1_132  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_111  [key=0, style=solid];
m1_108 -> m1_133  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_103  [key=2, style=dotted];
m1_109 -> m1_68  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_97  [key=2, style=dotted];
m1_111 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_111 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_111 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_111 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_111 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_111 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_111 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_114  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_116 -> m1_126  [key=0, style=solid];
m1_116 -> m1_129  [key=0, style=solid];
m1_116 -> m1_98  [key=2, style=dotted];
m1_116 -> m1_68  [key=2, style=dotted];
m1_119 -> m1_126  [key=0, style=solid];
m1_119 -> m1_129  [key=0, style=solid];
m1_119 -> m1_100  [key=2, style=dotted];
m1_119 -> m1_68  [key=2, style=dotted];
m1_121 -> m1_126  [key=0, style=solid];
m1_121 -> m1_129  [key=0, style=solid];
m1_121 -> m1_67  [key=2, style=dotted];
m1_121 -> m1_68  [key=2, style=dotted];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_66  [key=2, style=dotted];
m1_124 -> m1_68  [key=2, style=dotted];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_129  [key=0, style=solid];
m1_125 -> m1_71  [key=2, style=dotted];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_103  [key=2, style=dotted];
m1_128 -> m1_68  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_131  [key=2, style=dotted];
m1_110 -> m1_130  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_117  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_120  [key=0, style=solid];
m1_117 -> m1_99  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_131  [key=2, style=dotted];
m1_122 -> m1_123  [key=0, style=solid];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_134  [key=2, style=dotted];
m1_123 -> m1_26  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_131  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_122  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_102  [key=2, style=dotted];
m1_130 -> m1_49  [key=0, style=bold, color=blue];
m1_536 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_215  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_224  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_259  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_266  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_267  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_268  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_288  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_289  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_291  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_296  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_298  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_305  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_309  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_327  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_336  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_340  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_346  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_366  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_387  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_389  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_390  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_397  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_398  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_401  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_411  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_423  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_430  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_436  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_437  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_445  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_451  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_452  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_453  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_456  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_459  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_461  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_466  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_467  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_469  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_470  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_478  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_481  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_482  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_487  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_494  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_495  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_496  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_528  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_536 -> m1_530  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m1_537 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_538 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_539 -> m1_244  [key=1, style=dashed, color=darkseagreen4, label=lowestOrderIdToKeep];
m1_540 -> m1_285  [key=1, style=dashed, color=darkseagreen4, label=cash];
}
