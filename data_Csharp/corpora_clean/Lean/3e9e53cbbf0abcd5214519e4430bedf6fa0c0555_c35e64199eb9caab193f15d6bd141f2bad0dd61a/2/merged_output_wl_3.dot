digraph  {
n168 [label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
n169 [label=item, span=""];
n0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="48-48"];
n1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="var req = new RestRequest(''/orders'', Method.POST)", span="50-50"];
n2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=red, community=1, label="1: req.AddJsonBody(new\r\n            {\r\n                size = Math.Abs(order.Quantity),\r\n                side = order.Direction.ToString().ToLower(),\r\n                type = ConvertOrderType(order.Type),\r\n                price = order is LimitOrder ? ((LimitOrder)order).LimitPrice : 0,\r\n                product_id = ConvertSymbol(order.Symbol),\r\n				//todo: can be enabled if margin\r\n                //overdraft_enabled = true\r\n            })", span="51-60"];
n9 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="CachedOrderIDs.ContainsKey(order.Id)", span="72-72"];
n10 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="74-74"];
n11 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="order.BrokerId.Add(brokerId)", span="78-78"];
n12 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="CachedOrderIDs.TryAdd(order.Id, order)", span="79-79"];
n13 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="81-81"];
n14 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=red, community=0, label="1: OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted, OrderFee = raw.fill_fees })", span="83-83"];
n15 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="Log.Trace(''GDAXBrokerage.PlaceOrder(): Order completed successfully orderid:'' + order.Id.ToString())", span="84-84"];
n17 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid })", span="88-88"];
n18 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="Log.Trace(''GDAXBrokerage.PlaceOrder(): Order failed Order Id: '' + order.Id + '' timestamp:'' + order.Time + '' quantity: '' + order.Quantity.ToString()\r\n                + '' content:'' + response.Content)", span="89-90"];
n21 [cluster="RestRequest.cstr", label="Entry RestRequest.cstr", span=""];
n3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="GetAuthenticationToken(req)", span="62-62"];
n4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="var response = RestClient.Execute(req)", span="63-63"];
n22 [cluster="System.Math.Abs(decimal)", label="Entry System.Math.Abs(decimal)", span="0-0"];
n23 [cluster="System.Enum.ToString()", label="Entry System.Enum.ToString()", span="0-0"];
n24 [cluster="string.ToLower()", label="Entry string.ToLower()", span="0-0"];
n25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="91-91"];
n26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="120-120"];
n27 [cluster="Unk.AddJsonBody", label="Entry Unk.AddJsonBody", span=""];
n28 [cluster="Unk.GetAuthenticationToken", label="Entry Unk.GetAuthenticationToken", span=""];
n5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="response.StatusCode == System.Net.HttpStatusCode.OK && response.Content != null", span="65-65"];
n29 [cluster="Unk.Execute", label="Entry Unk.Execute", span=""];
n6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="dynamic raw = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="67-67"];
n7 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="raw != null && raw.id != 0", span="69-69"];
n30 [cluster="Unk.>", label="Entry Unk.>", span=""];
n8 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="string brokerId = raw.id", span="71-71"];
n31 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n32 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n33 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
n34 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
n35 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
n36 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
n16 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="return true;", span="85-85"];
n37 [cluster="int.ToString()", label="Entry int.ToString()", span="0-0"];
n38 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
n19 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="return false;", span="91-91"];
n39 [cluster="decimal.ToString()", label="Entry decimal.ToString()", span="0-0"];
n40 [cluster="Unk.Trace", label="Entry Unk.Trace", span=""];
n20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="48-48"];
n41 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="100-100"];
n42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="throw new NotSupportedException(''Order update not supported. Please cancel and re-create.'');", span="102-102"];
n43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="100-100"];
n44 [cluster="System.NotSupportedException.NotSupportedException(string)", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
n45 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="110-110"];
n46 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="List<bool> success = new List<bool>()", span="112-112"];
n47 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="order.BrokerId", span="114-114"];
n54 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n51 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="success.Add(response.StatusCode == System.Net.HttpStatusCode.OK)", span="120-120"];
n52 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="return success.All(a => a);", span="123-123"];
n48 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="var req = new RestRequest(''/orders/'' + id, Method.DELETE)", span="116-116"];
n49 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="GetAuthenticationToken(req)", span="117-117"];
n50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="var response = RestClient.Execute(req)", span="118-118"];
n53 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="110-110"];
n55 [cluster="Unk.All", label="Entry Unk.All", span=""];
n56 [cluster="lambda expression", label="Entry lambda expression", span="123-123"];
n57 [cluster="lambda expression", label=a, span="123-123"];
n58 [cluster="lambda expression", label="Exit lambda expression", span="123-123"];
n59 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="129-129"];
n60 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", label="WebSocket.Close()", span="131-131"];
n61 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="129-129"];
n62 [cluster="QuantConnect.Brokerages.IWebSocket.Close()", label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="51-51"];
n63 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="138-138"];
n64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="var list = new List<Order>()", span="140-140"];
n65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="var req = new RestRequest(''/orders?status=open&status=pending'', Method.GET)", span="144-144"];
n85 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="list.Add(order)", span="178-178"];
n88 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label=list, span="187-187"];
n93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="return list;", span="199-199"];
n66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="GetAuthenticationToken(req)", span="145-145"];
n67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="var response = RestClient.Execute(req)", span="146-146"];
n68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="response != null", span="148-148"];
n69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="var orders = JsonConvert.DeserializeObject<Messages.Order[]>(response.Content)", span="150-150"];
n86 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label=Exception, span="182-182"];
n70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label=orders, span="151-151"];
n71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="Order order = null", span="153-153"];
n72 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="item.Type == ''market''", span="154-154"];
n73 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="order = new MarketOrder { Price = item.Price }", span="156-156"];
n74 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="item.Type == ''limit''", span="158-158"];
n75 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="order = new LimitOrder { LimitPrice = item.Price }", span="160-160"];
n76 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="item.Type == ''stop''", span="162-162"];
n77 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="order = new StopMarketOrder { StopPrice = item.Price }", span="164-164"];
n78 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="Log.Error(''GDAXBrokerage.GetOpenOrders(): Unsupported order type returned from brokerage'' + item.Type)", span="168-168"];
n79 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="order.Quantity = item.Side == ''sell'' ? -item.Size : item.Size", span="172-172"];
n80 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="order.BrokerId = new List<string> { item.Id.ToString() }", span="173-173"];
n81 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="order.Symbol = ConvertProductId(item.ProductId)", span="174-174"];
n83 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="order.Status = ConvertOrderStatus(item)", span="176-176"];
n84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="order.Price = item.Price", span="177-177"];
n82 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="order.Time = DateTime.UtcNow", span="175-175"];
n95 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
n96 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
n97 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
n99 [cluster="Unk.ToString", label="Entry Unk.ToString", span=""];
n100 [cluster="Unk.ConvertProductId", label="Entry Unk.ConvertProductId", span=""];
n101 [cluster="Unk.ConvertOrderStatus", label="Entry Unk.ConvertOrderStatus", span=""];
n98 [cluster="Unk.Error", label="Entry Unk.Error", span=""];
n87 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="throw;", span="184-184"];
n89 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="item.Status.IsOpen()", span="189-189"];
n90 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="var cached = this.CachedOrderIDs.Where(c => c.Value.BrokerId.Contains(item.BrokerId.First()))", span="191-191"];
n107 [cluster="lambda expression", label="c.Value.BrokerId.Contains(item.BrokerId.First())", span="191-191"];
n92 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="this.CachedOrderIDs[cached.First().Key] = item", span="194-194"];
n102 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
n91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="cached.Any()", span="192-192"];
n103 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n106 [cluster="lambda expression", label="Entry lambda expression", span="191-191"];
n104 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n105 [cluster="Unk.First", label="Entry Unk.First", span=""];
n94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="138-138"];
n108 [cluster="lambda expression", label="Exit lambda expression", span="191-191"];
n109 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
n110 [cluster="System.Collections.Generic.List<T>.Contains(T)", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
n111 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="207-207"];
n112 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="var list = new List<Holding>()", span="209-209"];
n113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="var req = new RestRequest(''/orders?status=active'', Method.GET)", span="211-211"];
n125 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", color=red, community=0, label="1: list.Add(new Holding\r\n                    {\r\n                        Symbol = ConvertProductId(item.ProductId),\r\n                        Quantity = item.Side == ''sell'' ? -item.FilledSize : item.FilledSize,\r\n                        Type = SecurityType.Forex,\r\n                        CurrencySymbol = item.ProductId.Substring(0, 3).ToUpper(),\r\n                        ConversionRate = conversionRate,\r\n                        MarketPrice = item.Price,\r\n                        //todo: check this\r\n                        AveragePrice = item.ExecutedValue / item.FilledSize\r\n                    })", span="232-242"];
n126 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="return list;", span="246-246"];
n114 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="GetAuthenticationToken(req)", span="212-212"];
n115 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="var response = RestClient.Execute(req)", span="213-213"];
n116 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="response != null", span="214-214"];
n117 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="JsonConvert.DeserializeObject<Messages.Order[]>(response.Content)", span="216-216"];
n118 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="decimal conversionRate", span="218-218"];
n119 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="!item.ProductId.EndsWith(''USD'', StringComparison.InvariantCultureIgnoreCase)", span="219-219"];
n120 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="var baseSymbol = (item.ProductId.Substring(0, 3) + ''USD'').ToLower()", span="222-222"];
n123 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="var tick = this.GetTick(ConvertProductId(item.ProductId))", span="228-228"];
n128 [cluster="Unk.EndsWith", label="Entry Unk.EndsWith", span=""];
n121 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="var tick = this.GetTick(Symbol.Create(baseSymbol, SecurityType.Forex, Market.GDAX))", span="223-223"];
n129 [cluster="Unk.Substring", label="Entry Unk.Substring", span=""];
n130 [cluster="Unk.ToLower", label="Entry Unk.ToLower", span=""];
n122 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="conversionRate = tick.Price", span="224-224"];
n131 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
n132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="245-245"];
n124 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="conversionRate = tick.Price", span="229-229"];
n133 [cluster="QuantConnect.Holding.Holding()", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
n134 [cluster="Unk.ToUpper", label="Entry Unk.ToUpper", span=""];
n127 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="207-207"];
n135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="253-253"];
n136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="var list = new List<Securities.Cash>()", span="255-255"];
n137 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="var req = new RestRequest(''/accounts'', Method.GET)", span="257-257"];
n143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="list.Add(new Securities.Cash(item.Currency, item.Balance, 1))", span="267-267"];
n145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, tick.Price))", span="273-273"];
n146 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="return list;", span="277-277"];
n138 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="GetAuthenticationToken(req)", span="258-258"];
n139 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="var response = RestClient.Execute(req)", span="259-259"];
n140 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="JsonConvert.DeserializeObject<Messages.Account[]>(response.Content)", span="261-261"];
n141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="item.Balance > 0", span="263-263"];
n142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="item.Currency == ''USD''", span="265-265"];
n144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="var tick = GetTick(Symbol.Create(item.Currency + ''USD'', SecurityType.Forex, Market.GDAX))", span="271-271"];
n149 [cluster="Unk.Create", label="Entry Unk.Create", span=""];
n148 [cluster="Securities.Cash.cstr", label="Entry Securities.Cash.cstr", span=""];
n147 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="253-253"];
n150 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="284-284"];
n151 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", label=Ticks, span="286-286"];
n152 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", label="var copy = Ticks.ToArray()", span="288-288"];
n153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", label="Ticks.Clear()", span="289-289"];
n156 [cluster="System.Collections.Generic.List<T>.ToArray()", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
n154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", label="return copy;", span="290-290"];
n157 [cluster="System.Collections.Generic.List<T>.Clear()", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
n155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="284-284"];
n158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="300-300"];
n159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", label="var totalFee = 0m", span="302-302"];
n160 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", label="order.BrokerId", span="304-304"];
n165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", label="totalFee += (decimal)fill.fill_fees", span="311-311"];
n166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", label="return totalFee;", span="314-314"];
n161 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="306-306"];
n162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", label="GetAuthenticationToken(req)", span="307-307"];
n163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", label="var response = RestClient.Execute(req)", span="308-308"];
n164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="309-309"];
n167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="300-300"];
m1_10 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161"];
m1_5 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="19-19"];
m1_8 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="GDAXBrokerage.Utility.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), Symbol.Create(''BTCUSD'', SecurityType.Forex, Market.GDAX), Resolution.Minute, TimeZones.Utc, TimeZones.Utc, \r\n                false, true, false);", span="21-22"];
m1_9 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="19-19"];
m1_21 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32"];
m1_22 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", color=red, community=0, file="GDAXBrokerage.Utility.cs", label="1: BindingFlags flags = BindingFlags.NonPublic | BindingFlags.Instance", span="34-34"];
m1_24 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", color=red, community=0, file="GDAXBrokerage.Utility.cs", label="0: MessageReceivedEventArgs args = new MessageReceivedEventArgs(json)", span="36-36"];
m1_23 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", color=red, community=0, file="GDAXBrokerage.Utility.cs", label="1: System.Globalization.CultureInfo culture = null", span="35-35"];
m1_25 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXBrokerage.Utility.cs", label="return args;", span="38-38"];
m1_26 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32"];
m1_4 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m1_27 [cluster="MessageReceivedEventArgs.cstr", file="GDAXBrokerage.Utility.cs", label="Entry MessageReceivedEventArgs.cstr", span=""];
m1_7 [cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70"];
m1_12 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="25-25"];
m1_13 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXBrokerage.Utility.cs", label="var order = new Orders.MarketOrder { BrokerId = new List<string> { brokerId }, Quantity = quantity, Id = id }", span="27-27"];
m1_14 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXBrokerage.Utility.cs", label="unit.CachedOrderIDs.TryAdd(1, order)", span="28-28"];
m1_15 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXBrokerage.Utility.cs", label="unit.FillSplit.TryAdd(id, new GDAXFill(order))", span="29-29"];
m1_16 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="25-25"];
m1_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m1_0 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", span="13-13"];
m1_1 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="GDAXBrokerage.Utility.cs", label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.Utc), CreateConfig(), new Cash(CashBook.AccountCurrency, 1000, price), \r\n                new SymbolProperties(''BTCUSD'', CashBook.AccountCurrency, 1, 1, 0.01m));", span="15-16"];
m1_2 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", span="13-13"];
m1_3 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m1_18 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerage.Utility.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_19 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="GDAXBrokerage.Utility.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m1_11 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m1_17 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m2_132 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="GDAXBrokerageFactory.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_71 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", span="190-190"];
m2_72 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", file="GDAXBrokerageFactory.cs", label="return 0;", span="193-193"];
m2_73 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", file="GDAXBrokerageFactory.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", span="190-190"];
m2_0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerageFactory.GDAXBrokerageFactory()", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerageFactory.GDAXBrokerageFactory()", span="33-33"];
m2_1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerageFactory.GDAXBrokerageFactory()", file="GDAXBrokerageFactory.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerageFactory.GDAXBrokerageFactory()", span="33-33"];
m2_30 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="249-249"];
m2_121 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="quantityInTargetCurrency *= GetOrderPrice(security, openOrder)", span="302-302"];
m2_119 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var quantityInTargetCurrency = openOrder.AbsoluteQuantity", span="299-299"];
m2_115 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label=openOrders, span="291-291"];
m2_101 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var baseCurrency = security as IBaseCurrencySymbol", span="251-251"];
m2_104 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var targetCurrency = order.Direction == OrderDirection.Buy\r\n                ? security.QuoteCurrency.Symbol\r\n                : baseCurrency.BaseCurrencySymbol", span="255-257"];
m2_106 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="portfolio.Securities.Values", span="260-260"];
m2_113 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var openOrders = portfolio.Transactions.GetOpenOrders(x =>\r\n                {\r\n                    OrderDirection dir;\r\n                    return symbolDirectionPairs.TryGetValue(x.Symbol, out dir) &&\r\n                           // same direction of our order\r\n                           dir == x.Direction &&\r\n                           // don't count our current order\r\n                           x.Id != order.Id &&\r\n                           // only count working orders\r\n                           (x.Type == OrderType.Limit || x.Type == OrderType.StopMarket);\r\n                }\r\n            )", span="276-287"];
m2_116 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var orderSecurity = portfolio.Securities[openOrder.Symbol]", span="293-293"];
m2_114 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var openOrdersReservedQuantity = 0m", span="290-290"];
m2_120 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="orderSecurity.QuoteCurrency.Symbol == targetCurrency", span="300-300"];
m2_122 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="openOrdersReservedQuantity += quantityInTargetCurrency", span="305-305"];
m2_118 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="orderBaseCurrency != null", span="296-296"];
m2_123 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="return openOrdersReservedQuantity;", span="309-309"];
m2_103 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="return 0;", span="252-252"];
m2_102 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="baseCurrency == null", span="252-252"];
m2_105 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var symbolDirectionPairs = new Dictionary<Symbol, OrderDirection>()", span="259-259"];
m2_109 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="basePortfolioSecurity.BaseCurrencySymbol == targetCurrency", span="265-265"];
m2_111 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="portfolioSecurity.QuoteCurrency.Symbol == targetCurrency", span="269-269"];
m2_110 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="symbolDirectionPairs.Add(portfolioSecurity.Symbol, OrderDirection.Sell)", span="267-267"];
m2_112 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="symbolDirectionPairs.Add(portfolioSecurity.Symbol, OrderDirection.Buy)", span="271-271"];
m2_108 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="basePortfolioSecurity == null", span="263-263"];
m2_107 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var basePortfolioSecurity = portfolioSecurity as IBaseCurrencySymbol", span="262-262"];
m2_117 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var orderBaseCurrency = orderSecurity as IBaseCurrencySymbol", span="294-294"];
m2_124 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="249-249"];
m2_128 [cluster="lambda expression", file="GDAXBrokerageFactory.cs", label="Entry lambda expression", span="276-286"];
m2_130 [cluster="lambda expression", file="GDAXBrokerageFactory.cs", label="return symbolDirectionPairs.TryGetValue(x.Symbol, out dir) &&\r\n                           // same direction of our order\r\n                           dir == x.Direction &&\r\n                           // don't count our current order\r\n                           x.Id != order.Id &&\r\n                           // only count working orders\r\n                           (x.Type == OrderType.Limit || x.Type == OrderType.StopMarket);", span="279-285"];
m2_129 [cluster="lambda expression", file="GDAXBrokerageFactory.cs", label="OrderDirection dir", span="278-278"];
m2_131 [cluster="lambda expression", file="GDAXBrokerageFactory.cs", label="Exit lambda expression", span="276-286"];
m2_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="76-76"];
m2_5 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57"];
m2_7 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="baseCurrency == null", span="60-60"];
m2_11 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=red, community=0, file="GDAXBrokerageFactory.cs", label="1: order.Direction == OrderDirection.Buy", span="64-64"];
m2_6 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var baseCurrency = security as IBaseCurrencySymbol", span="59-59"];
m2_9 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="decimal totalQuantity", span="62-62"];
m2_8 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="return false;", span="60-60"];
m2_10 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="decimal orderQuantity", span="63-63"];
m2_12 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="totalQuantity = portfolio.CashBook[security.QuoteCurrency.Symbol].Amount", span="67-67"];
m2_13 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="orderQuantity = order.AbsoluteQuantity * GetOrderPrice(security, order)", span="68-68"];
m2_14 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="totalQuantity = portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount", span="73-73"];
m2_29 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="224-224"];
m2_89 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var orderPrice = 0m", span="226-226"];
m2_90 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="order.Type", span="227-227"];
m2_92 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="orderPrice = security.Price", span="230-230"];
m2_94 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="orderPrice = ((LimitOrder)order).LimitPrice", span="234-234"];
m2_96 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="orderPrice = ((StopMarketOrder)order).StopPrice", span="238-238"];
m2_98 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="orderPrice = ((StopLimitOrder)order).LimitPrice", span="242-242"];
m2_99 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="return orderPrice;", span="246-246"];
m2_91 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="OrderType.Market", span="229-229"];
m2_93 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="OrderType.Limit", span="233-233"];
m2_95 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="OrderType.StopMarket", span="237-237"];
m2_97 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="OrderType.StopLimit", span="241-241"];
m2_100 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="224-224"];
m2_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerageFactory.Dispose()", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerageFactory.Dispose()", span="40-40"];
m2_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerageFactory.Dispose()", file="GDAXBrokerageFactory.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerageFactory.Dispose()", span="40-40"];
m2_18 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="return orderQuantity <= totalQuantity - openOrdersReservedQuantity;", span="83-83"];
m2_126 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="GDAXBrokerageFactory.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_16 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var openOrdersReservedQuantity = GetOpenOrdersReservedQuantity(portfolio, security, order)", span="78-78"];
m2_32 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="117-117"];
m2_36 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="var baseCurrency = security as IBaseCurrencySymbol", span="119-119"];
m2_39 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="var baseCurrencyPosition = portfolio.CashBook.ConvertToAccountCurrency(\r\n                portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount,\r\n                baseCurrency.BaseCurrencySymbol)", span="123-125"];
m2_40 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="var quoteCurrencyPosition = portfolio.CashBook.ConvertToAccountCurrency(\r\n                portfolio.CashBook[security.QuoteCurrency.Symbol].Amount,\r\n                security.QuoteCurrency.Symbol)", span="128-130"];
m2_41 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="var unitPrice = new MarketOrder(security.Symbol, 1, DateTime.UtcNow).GetValue(security)", span="133-133"];
m2_44 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="var targetOrderValue = Math.Abs(targetPortfolioValue - baseCurrencyPosition)", span="137-137"];
m2_45 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="var direction = targetPortfolioValue > baseCurrencyPosition ? OrderDirection.Buy : OrderDirection.Sell", span="138-138"];
m2_54 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="orderQuantity -= orderQuantity % security.SymbolProperties.LotSize", span="154-154"];
m2_58 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="var order = new MarketOrder(security.Symbol, orderQuantity, DateTime.UtcNow)", span="164-164"];
m2_59 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="orderValue = order.GetValue(security)", span="165-165"];
m2_60 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="166-166"];
m2_62 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="feeToPriceRatio -= feeToPriceRatio % security.SymbolProperties.LotSize", span="170-170"];
m2_63 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="feeToPriceRatio < security.SymbolProperties.LotSize", span="171-171"];
m2_64 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="feeToPriceRatio = security.SymbolProperties.LotSize", span="173-173"];
m2_37 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="baseCurrency == null", span="120-120"];
m2_52 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="var feeToPriceRatio = 0m", span="148-148"];
m2_38 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="return 0;", span="120-120"];
m2_43 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="return 0;", span="134-134"];
m2_67 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="return (direction == OrderDirection.Sell ? -1 : 1) * orderQuantity;", span="182-182"];
m2_48 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="return 0;", span="142-142"];
m2_57 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="return 0;", span="161-161"];
m2_46 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="var cashRemaining = direction == OrderDirection.Buy ? quoteCurrencyPosition : baseCurrencyPosition", span="141-141"];
m2_42 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="unitPrice == 0", span="134-134"];
m2_53 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="var orderQuantity = targetOrderValue / unitPrice", span="151-151"];
m2_61 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="feeToPriceRatio = orderFees / unitPrice", span="169-169"];
m2_66 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="cashRequired > cashRemaining || orderValue + orderFees > targetOrderValue", span="179-179"];
m2_55 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="orderQuantity -= feeToPriceRatio", span="160-160"];
m2_56 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="orderQuantity <= 0", span="161-161"];
m2_65 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="cashRequired = orderValue", span="177-177"];
m2_51 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="decimal orderFees", span="147-147"];
m2_47 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="cashRemaining <= 0", span="142-142"];
m2_50 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="decimal orderValue", span="146-146"];
m2_49 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="decimal cashRequired", span="145-145"];
m2_68 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="GDAXBrokerageFactory.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="117-117"];
m2_21 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var maximumQuantity =\r\n                    GetMaximumOrderQuantityForTargetValue(portfolio, security, targetValue) * GetOrderPrice(security, order)", span="93-94"];
m2_127 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="278-278"];
m2_70 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
m2_74 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="203-203"];
m2_80 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="var unitPrice = new MarketOrder(security.Symbol, 1, DateTime.UtcNow).GetValue(security) / security.QuoteCurrency.ConversionRate", span="212-212"];
m2_75 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="var baseCurrency = security as IBaseCurrencySymbol", span="205-205"];
m2_78 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="var baseCurrencyPosition = portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount", span="208-208"];
m2_79 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="var quoteCurrencyPosition = portfolio.CashBook[security.QuoteCurrency.Symbol].Amount", span="209-209"];
m2_83 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="direction == OrderDirection.Buy", span="215-215"];
m2_85 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="direction == OrderDirection.Sell", span="218-218"];
m2_81 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="unitPrice == 0", span="213-213"];
m2_84 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="return quoteCurrencyPosition / unitPrice;", span="216-216"];
m2_77 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="return 0;", span="206-206"];
m2_86 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="return baseCurrencyPosition;", span="219-219"];
m2_82 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="return 0;", span="213-213"];
m2_87 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="return 0;", span="221-221"];
m2_76 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="baseCurrency == null", span="206-206"];
m2_88 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerageFactory.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="203-203"];
m2_17 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="order.Direction == OrderDirection.Sell", span="80-80"];
m2_69 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m2_20 [cluster="GDAXBrokerage.cstr", color=green, community=0, file="GDAXBrokerageFactory.cs", label="1: Entry GDAXBrokerage.cstr", span=""];
m2_19 [cluster="QuantConnect.Brokerages.WebSocketWrapper.WebSocketWrapper()", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.WebSocketWrapper()", span="29-29"];
m2_15 [cluster="string.IsNullOrEmpty(string)", file="GDAXBrokerageFactory.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_24 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="order.Type == OrderType.Limit", span="101-101"];
m2_25 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="orderFee = security.FeeModel.GetOrderFee(security, order)", span="103-103"];
m2_26 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="orderFee = portfolio.CashBook.Convert(orderFee, CashBook.AccountCurrency, security.QuoteCurrency.Symbol)", span="104-104"];
m2_27 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="return orderQuantity <= totalQuantity - openOrdersReservedQuantity - orderFee;", span="107-107"];
m2_23 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="var orderFee = 0m", span="100-100"];
m2_22 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="return orderQuantity <= Math.Abs(maximumQuantity);", span="96-96"];
m2_28 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57"];
m2_31 [cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", span="115-115"];
m2_34 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m2_125 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="GDAXBrokerageFactory.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_35 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="GDAXBrokerageFactory.cs", label="Entry QuantConnect.Securities.CashBook.Convert(decimal, string, string)", span="101-101"];
m2_133 [file="GDAXBrokerageFactory.cs", label="QuantConnect.Securities.CashBuyingPowerModel", span=""];
m2_134 [file="GDAXBrokerageFactory.cs", label="QuantConnect.Orders.Order", span=""];
m2_135 [file="GDAXBrokerageFactory.cs", label=symbolDirectionPairs, span=""];
m3_13 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m3_9 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="78-78"];
m3_10 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, file="GDAXBrokerageModel.cs", label="0: message = new BrokerageMessageEvent(BrokerageMessageType.Warning, 0, ''Brokerage does not support update. You must cancel and re-create instead.'')", span="80-80"];
m3_11 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, file="GDAXBrokerageModel.cs", label="2: return false;", span="81-81"];
m3_12 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="78-78"];
m3_2 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="55-55"];
m3_3 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="return 3m;", span="57-57"];
m3_4 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="55-55"];
m3_8 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="26-26"];
m3_5 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="65-65"];
m3_6 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="return new GDAXFeeModel();", span="67-67"];
m3_7 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="65-65"];
m3_0 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44"];
m3_1 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44"];
m4_127 [cluster="System.Threading.EventWaitHandle.Set()", file="GDAXBrokerageTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m4_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="312-312"];
m4_93 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UserDefinedUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.TimeSpan, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UserDefinedUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.TimeSpan, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="85-85"];
m4_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="!security.IsInternalFeed() && existingSecurity.Symbol == _benchmarkSymbol", span="331-331"];
m4_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="Securities.Remove(security.Symbol)", span="339-339"];
m4_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="Securities.Add(security)", span="343-343"];
m4_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="var subscription = security.Subscriptions.First()", span="347-347"];
m4_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="Universe universe", span="346-346"];
m4_94 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="723-723"];
m4_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="Security existingSecurity", span="328-328"];
m4_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="Securities.TryGetValue(security.Symbol, out existingSecurity)", span="329-329"];
m4_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="var securityUniverse = UniverseManager.Select(x => x.Value).OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(security.Symbol))", span="333-333"];
m4_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="securityUniverse != null", span="334-334"];
m4_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="securityUniverse.Remove(security.Symbol)", span="336-336"];
m4_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m4_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="var universeSymbol = UserDefinedUniverse.CreateSymbol(subscription.SecurityType, subscription.Market)", span="348-348"];
m4_213 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", span="253-253"];
m4_214 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="SetupResponse(_holdingData)", span="255-255"];
m4_215 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="_unit.CachedOrderIDs.TryAdd(1, new Orders.MarketOrder { BrokerId = new List<string> { ''1'' }, Price = 123 })", span="257-257"];
m4_216 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="var actual = _unit.GetAccountHoldings()", span="259-259"];
m4_217 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(2, actual.Count())", span="261-261"];
m4_218 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(0.005m, actual.First().Quantity)", span="262-262"];
m4_219 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(10m, actual.First().AveragePrice)", span="263-263"];
m4_220 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(-0.5m, actual.Last().Quantity)", span="265-265"];
m4_221 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(1000m, actual.Last().AveragePrice)", span="266-266"];
m4_222 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", span="253-253"];
m4_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="AddUniverse(new FineFundamentalFilteredUniverse(coarse, fineSelector))", span="266-266"];
m4_12 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: _algo.Setup(a => a.BrokerageModel.AccountType).Returns(_accountType)", span="80-80"];
m4_13 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", span="54-54"];
m4_14 [cluster="GDAXBrokerage.cstr", file="GDAXBrokerageTests.cs", label="Entry GDAXBrokerage.cstr", span=""];
m4_61 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="selector(d.OfType<T>()).Select(x => QuantConnect.Symbol.Create(x, securityType, market))", span="243-243"];
m4_62 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="243-243"];
m4_63 [cluster="Unk.Select", file="GDAXBrokerageTests.cs", label="Entry Unk.Select", span=""];
m4_64 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="243-243"];
m4_65 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="QuantConnect.Symbol.Create(x, securityType, market)", span="243-243"];
m4_66 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="243-243"];
m4_45 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="!r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId)", span="85-85"];
m4_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="var symbolString = MarketHoursDatabase.GetDatabaseSymbolKey(uconfig.Symbol)", span="358-358"];
m4_143 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs", label="Assert.IsTrue(actual || (orderId == null && !actual))", span="199-199"];
m4_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="239-239"];
m4_4 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_openOrderData = File.ReadAllText(''TestData//gdax_openOrders.txt'')", span="59-59"];
m4_5 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_accountsData = File.ReadAllText(''TestData//gdax_accounts.txt'')", span="60-60"];
m4_6 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_holdingData = File.ReadAllText(''TestData//gdax_holding.txt'')", span="61-61"];
m4_111 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="GDAXBrokerageTests.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m4_109 [cluster="string.Replace(string, string)", file="GDAXBrokerageTests.cs", label="Entry string.Replace(string, string)", span="0-0"];
m4_112 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32"];
m4_116 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m4_108 [cluster="System.Guid.ToString()", file="GDAXBrokerageTests.cs", label="Entry System.Guid.ToString()", span="0-0"];
m4_107 [cluster="System.Guid.NewGuid()", file="GDAXBrokerageTests.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m4_113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, MessageReceivedEventArgs)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, MessageReceivedEventArgs)", span="75-75"];
m4_117 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="141-151"];
m4_114 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="GDAXBrokerageTests.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m4_115 [cluster="Unk.AreEqual", file="GDAXBrokerageTests.cs", label="Entry Unk.AreEqual", span=""];
m4_118 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(''BTCUSD'', e.Symbol.Value)", span="143-143"];
m4_183 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m4_252 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", span="297-297"];
m4_253 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="1: string actual = null", span="299-299"];
m4_254 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="1: string expected = ''[\''BTC-USD\'',\''BTC-ETH\'']''", span="300-300"];
m4_255 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="1: _wss.Setup(w => w.Send(It.IsAny<string>())).Callback<string>(c => actual = c)", span="301-301"];
m4_258 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="1: StringAssert.Contains(expected, actual)", span="308-308"];
m4_256 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="1: _unit.Ticks.Clear()", span="303-303"];
m4_257 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="1: _unit.Subscribe(Mock.Of<LiveNodePacket>(), new[] { Symbol.Create(''BTCUSD'', SecurityType.Forex, Market.GDAX), Symbol.Create(''GBPUSD'', SecurityType.Forex, Market.GDAX),\r\n                Symbol.Create(''BTCETH'', SecurityType.Forex, Market.GDAX)})", span="305-306"];
m4_259 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: Assert.AreEqual(2, _unit.Ticks.Count())", span="310-310"];
m4_260 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: Assert.AreEqual(333.98, _unit.Ticks.First().BidPrice)", span="311-311"];
m4_261 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: Assert.AreEqual(333.99, _unit.Ticks.First().AskPrice)", span="312-312"];
m4_262 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: Assert.AreEqual(333.985, _unit.Ticks.First().Price)", span="313-313"];
m4_263 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", span="297-297"];
m4_223 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="219-219"];
m4_33 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="r.Resource.StartsWith(''/orders/'' + _brokerId) || r.Resource.StartsWith(''/orders/'' + _matchBrokerId)", span="73-73"];
m4_34 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="73-73"];
m4_35 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="80-80"];
m4_194 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", span="235-235"];
m4_195 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="SetupResponse(_accountsData)", span="237-237"];
m4_196 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="var actual = _unit.GetCashBalance()", span="239-239"];
m4_197 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(2, actual.Count())", span="241-241"];
m4_200 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(80.2301373066930000m, usd.Amount)", span="246-246"];
m4_201 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(1, usd.ConversionRate)", span="247-247"];
m4_202 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(1.1, btc.Amount)", span="248-248"];
m4_203 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(333.985m, btc.ConversionRate)", span="249-249"];
m4_198 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="var usd = actual.Single(a => a.Symbol == ''USD'')", span="243-243"];
m4_199 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="var btc = actual.Single(a => a.Symbol == ''BTC'')", span="244-244"];
m4_204 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", span="235-235"];
m4_79 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(m => m.IsOpen).Returns(true)", span="115-115"];
m4_80 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="_unit.Connect()", span="116-116"];
m4_81 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="_unit.Disconnect()", span="117-117"];
m4_161 [cluster="Unk.Any", file="GDAXBrokerageTests.cs", label="Entry Unk.Any", span=""];
m4_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="156-156"];
m4_124 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="raised.Set()", span="150-150"];
m4_205 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="270-270"];
m4_51 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="Assert.IsFalse(_unit.IsConnected)", span="98-98"];
m4_160 [cluster="Unk.SelectMany", file="GDAXBrokerageTests.cs", label="Entry Unk.SelectMany", span=""];
m4_0 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", span="54-54"];
m4_1 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: _unit = new GDAXBrokerage(''wss://localhost'', _wss.Object, _rest.Object, ''abc'', ''MTIz'', ''pass'', _algo.Object)", span="56-56"];
m4_2 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_orderData = File.ReadAllText(''TestData//gdax_order.txt'')", span="57-57"];
m4_18 [cluster="RestSharp.RestResponse.cstr", file="GDAXBrokerageTests.cs", label="Entry RestSharp.RestResponse.cstr", span=""];
m4_19 [cluster="Unk.Returns", color=red, community=0, file="GDAXBrokerageTests.cs", label="0: Entry Unk.Returns", span=""];
m4_20 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="67-67"];
m4_126 [cluster="System.Math.Round(decimal, int)", file="GDAXBrokerageTests.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m4_125 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="141-151"];
m4_70 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="104-104"];
m4_38 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", span="83-83"];
m4_7 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_orderByIdData = File.ReadAllText(''TestData//gdax_orderById.txt'')", span="62-62"];
m4_36 [cluster="lambda expression", color=green, community=0, file="GDAXBrokerageTests.cs", label="1: a.BrokerageModel.AccountType", span="80-80"];
m4_39 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", file="GDAXBrokerageTests.cs", label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId)))).Returns(new RestSharp.RestResponse\r\n            {\r\n                Content = body,\r\n                StatusCode = httpStatus\r\n            })", span="85-89"];
m4_40 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", span="83-83"];
m4_41 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="85-85"];
m4_37 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="80-80"];
m4_42 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId)))", span="85-85"];
m4_165 [cluster="Unk.Where", file="GDAXBrokerageTests.cs", label="Entry Unk.Where", span=""];
m4_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="251-251"];
m4_224 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", span="272-272"];
m4_225 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''1'')))).Returns(new RestSharp.RestResponse\r\n            {\r\n                StatusCode = code\r\n            })", span="274-277"];
m4_226 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''2'')))).Returns(new RestSharp.RestResponse\r\n            {\r\n                StatusCode = code2\r\n            })", span="279-282"];
m4_227 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="var actual = _unit.CancelOrder(new Orders.LimitOrder { BrokerId = new List<string> { ''1'', ''2'' } })", span="284-284"];
m4_228 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(expected, actual)", span="286-286"];
m4_229 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", span="272-272"];
m4_148 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="GDAXBrokerageTests.cs", label="System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>", span=""];
m4_135 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", span="153-153"];
m4_182 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_134 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", span="162-162"];
m4_230 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m4_166 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="193-193"];
m4_48 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(w => w.IsOpen).Returns(true)", span="95-95"];
m4_47 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", span="93-93"];
m4_49 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="Assert.IsTrue(_unit.IsConnected)", span="96-96"];
m4_60 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="97-97"];
m4_141 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs", label="_unit.OrderStatusChanged += (s, e) =>\r\n            {\r\n                Assert.AreEqual(status, e.Status);\r\n                if (orderId != null)\r\n                {\r\n                    Assert.AreEqual(''BTCUSD'', e.Symbol.Value);\r\n                    Assert.AreEqual(0.11, e.OrderFee);\r\n                    Assert.That((quantity > 0 && e.Direction == Orders.OrderDirection.Buy) || (quantity < 0 && e.Direction == Orders.OrderDirection.Sell));\r\n                    Assert.IsTrue(orderId == null || _unit.CachedOrderIDs.SelectMany(c => c.Value.BrokerId.Where(b => b == _brokerId)).Any());\r\n                }\r\n                raised.Set();\r\n            }", span="185-196"];
m4_137 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", span="175-175"];
m4_140 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs", label="ManualResetEvent raised = new ManualResetEvent(false)", span="184-184"];
m4_138 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs", label="var response = new\r\n            {\r\n                id = _brokerId,\r\n                fill_fees = ''0.11''\r\n            }", span="177-181"];
m4_139 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs", label="SetupResponse(JsonConvert.SerializeObject(response), httpStatus)", span="182-182"];
m4_142 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs", label="bool actual = _unit.PlaceOrder(new Orders.LimitOrder(_symbol, quantity, price, DateTime.UtcNow))", span="197-197"];
m4_267 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="301-301"];
m4_271 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="301-301"];
m4_268 [cluster="lambda expression", color=green, community=0, file="GDAXBrokerageTests.cs", label="1: w.Send(It.IsAny<string>())", span="301-301"];
m4_269 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="301-301"];
m4_272 [cluster="lambda expression", color=green, community=0, file="GDAXBrokerageTests.cs", label="3: actual = c", span="301-301"];
m4_273 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="301-301"];
m4_156 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.IsTrue(orderId == null || _unit.CachedOrderIDs.SelectMany(c => c.Value.BrokerId.Where(b => b == _brokerId)).Any())", span="193-193"];
m4_249 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="_unit.UpdateOrder(new LimitOrder())", span="293-293"];
m4_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="171-171"];
m4_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="141-141"];
m4_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="186-186"];
m4_233 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''1'')))", span="274-274"];
m4_240 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''2'')))", span="279-279"];
m4_121 [cluster="Unk.>", file="GDAXBrokerageTests.cs", label="Entry Unk.>", span=""];
m4_123 [cluster="Unk.Remove", file="GDAXBrokerageTests.cs", label="Entry Unk.Remove", span=""];
m4_122 [cluster="Unk.FirstOrDefault", file="GDAXBrokerageTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m4_151 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(status, e.Status)", span="187-187"];
m4_153 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(''BTCUSD'', e.Symbol.Value)", span="190-190"];
m4_154 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(0.11, e.OrderFee)", span="191-191"];
m4_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="241-241"];
m4_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="236-236"];
m4_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="262-262"];
m4_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="298-298"];
m4_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="317-317"];
m4_119 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
m4_120 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m4_155 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.That((quantity > 0 && e.Direction == Orders.OrderDirection.Buy) || (quantity < 0 && e.Direction == Orders.OrderDirection.Sell))", span="192-192"];
m4_157 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="raised.Set()", span="195-195"];
m4_162 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="193-193"];
m4_232 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="274-274"];
m4_239 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="279-279"];
m4_248 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="293-293"];
m4_250 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="293-293"];
m4_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="AddUniverse(securityType, name, resolution, market, UniverseSettings, selector)", span="188-188"];
m4_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="AddUniverse(SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="143-143"];
m4_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="AddUniverse(SecurityType.Equity, name, resolution, Market.USA, universeSettings, selector)", span="158-158"];
m4_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="186-186"];
m4_43 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", span="175-175"];
m4_44 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m4_234 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="274-274"];
m4_235 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="274-274"];
m4_241 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="279-279"];
m4_242 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="279-279"];
m4_150 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="185-196"];
m4_152 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="orderId != null", span="188-188"];
m4_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="AddUniverse(new FuncUniverse(config, universeSettings, SecurityInitializer, d => selector(d.OfType<T>()).Select(x => QuantConnect.Symbol.Create(x, securityType, market))))", span="243-243"];
m4_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="var config = new SubscriptionDataConfig(typeof(T), symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, true, isFilteredSubscription: false)", span="242-242"];
m4_59 [cluster="FuncUniverse.cstr", file="GDAXBrokerageTests.cs", label="Entry FuncUniverse.cstr", span=""];
m4_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="var coarse = new CoarseFundamentalUniverse(UniverseSettings, SecurityInitializer, coarseSelector)", span="264-264"];
m4_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="262-262"];
m4_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="275-275"];
m4_75 [cluster="QuantConnect.Data.UniverseSelection.FineFundamentalFilteredUniverse.FineFundamentalFilteredUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Data.UniverseSelection.FineFundamentalFilteredUniverse.FineFundamentalFilteredUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="36-36"];
m4_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="315-315"];
m4_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="var marketHoursDbEntry = MarketHoursDatabase.GetEntry(market, name, securityType)", span="314-314"];
m4_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="AddUniverse(new UserDefinedUniverse(config, universeSettings, SecurityInitializer, resolution.ToTimeSpan(), selector))", span="319-319"];
m4_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="var config = new SubscriptionDataConfig(typeof(CoarseFundamental), symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, isFilteredSubscription: false)", span="318-318"];
m4_158 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="185-196"];
m4_164 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="193-193"];
m4_163 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="c.Value.BrokerId.Where(b => b == _brokerId)", span="193-193"];
m4_207 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="243-243"];
m4_210 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="244-244"];
m4_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="171-171"];
m4_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="156-156"];
m4_46 [cluster="QuantConnect.Data.UniverseSelection.FuncUniverse.FuncUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Data.UniverseSelection.FuncUniverse.FuncUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="44-44"];
m4_237 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="274-274"];
m4_236 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="!r.Resource.EndsWith(''1'')", span="274-274"];
m4_244 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="279-279"];
m4_243 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="!r.Resource.EndsWith(''2'')", span="279-279"];
m4_209 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="243-243"];
m4_208 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="a.Symbol == ''USD''", span="243-243"];
m4_212 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="244-244"];
m4_211 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="a.Symbol == ''BTC''", span="244-244"];
m4_167 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="b == _brokerId", span="193-193"];
m4_168 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="193-193"];
m4_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", color=green, community=0, file="GDAXBrokerageTests.cs", label="1: Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="85-85"];
m4_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="AddUniverse(SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="87-87"];
m4_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="236-236"];
m4_3 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="158-158"];
m4_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="85-85"];
m4_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="AddUniverse(new CoarseFundamentalUniverse(UniverseSettings, SecurityInitializer, selector))", span="253-253"];
m4_50 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(w => w.IsOpen).Returns(false)", span="97-97"];
m4_231 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="122-122"];
m4_181 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m4_245 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", span="291-291"];
m4_246 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs", label="Assert.Throws<NotSupportedException>(() => _unit.UpdateOrder(new LimitOrder()))", span="293-293"];
m4_247 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", span="291-291"];
m4_270 [cluster="Unk.Send", file="GDAXBrokerageTests.cs", label="Entry Unk.Send", span=""];
m4_238 [cluster="Unk.EndsWith", file="GDAXBrokerageTests.cs", label="Entry Unk.EndsWith", span=""];
m4_130 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs", label="Assert.IsFalse(string.IsNullOrEmpty(actual.Signature))", span="166-166"];
m4_129 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs", label="var actual = _unit.GetAuthenticationToken('''', ''POST'', ''http://localhost'')", span="164-164"];
m4_15 [cluster="System.IO.File.ReadAllText(string)", file="GDAXBrokerageTests.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m4_16 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", color=red, community=0, file="GDAXBrokerageTests.cs", label="0: Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m4_17 [cluster="Unk.Setup", file="GDAXBrokerageTests.cs", label="Entry Unk.Setup", span=""];
m4_28 [cluster="Unk.StartsWith", file="GDAXBrokerageTests.cs", label="Entry Unk.StartsWith", span=""];
m4_264 [cluster="System.Collections.Generic.List<T>.Clear()", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m4_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="251-251"];
m4_132 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(''pass'', actual.Passphrase)", span="168-168"];
m4_54 [cluster="Unk.IsFalse", file="GDAXBrokerageTests.cs", label="Entry Unk.IsFalse", span=""];
m4_52 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", span="93-93"];
m4_77 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", span="112-112"];
m4_78 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(m => m.Close()).Verifiable()", span="114-114"];
m4_193 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="218-218"];
m4_88 [cluster="Unk.Close", file="GDAXBrokerageTests.cs", label="Entry Unk.Close", span=""];
m4_82 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="_wss.Verify()", span="118-118"];
m4_251 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="112-112"];
m4_149 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs", label="QuantConnect.Securities.Security", span=""];
m4_136 [cluster="string.IsNullOrEmpty(string)", file="GDAXBrokerageTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_187 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", span="224-224"];
m4_188 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="var actual = _unit.GetTick(_symbol)", span="226-226"];
m4_189 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(333.98m, actual.BidPrice)", span="227-227"];
m4_190 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(333.99m, actual.AskPrice)", span="228-228"];
m4_191 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(5957.11914015, actual.Quantity)", span="230-230"];
m4_192 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", span="224-224"];
m4_144 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m4_145 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal)", file="GDAXBrokerageTests.cs", label="System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>", span=""];
m4_159 [cluster="Unk.That", file="GDAXBrokerageTests.cs", label="Entry Unk.That", span=""];
m4_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="298-298"];
m4_128 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="191-191"];
m4_133 [cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59"];
m4_131 [cluster="QuantConnect.Securities.MarketHoursDatabase.SetEntry(string, string, QuantConnect.SecurityType, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.SetEntry(string, string, QuantConnect.SecurityType, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone)", span="144-144"];
m4_84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="141-141"];
m4_185 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m4_265 [cluster="Unk.Subscribe", file="GDAXBrokerageTests.cs", label="Entry Unk.Subscribe", span=""];
m4_206 [cluster="Unk.Single", file="GDAXBrokerageTests.cs", label="Entry Unk.Single", span=""];
m4_147 [cluster="Unk.SetupResponse", file="GDAXBrokerageTests.cs", label=string, span=""];
m4_146 [cluster="Unk.SerializeObject", file="GDAXBrokerageTests.cs", label="QuantConnect.SecurityType", span=""];
m4_186 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m4_23 [cluster="Unk.>", file="GDAXBrokerageTests.cs", label="Entry Unk.>", span=""];
m4_169 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", span="204-204"];
m4_170 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="SetupResponse(_openOrderData)", span="206-206"];
m4_171 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="_unit.CachedOrderIDs.TryAdd(1, new Orders.MarketOrder { BrokerId = new List<string> { ''1'' }, Price = 123 })", span="208-208"];
m4_172 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="var actual = _unit.GetOpenOrders()", span="210-210"];
m4_173 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(2, actual.Count())", span="212-212"];
m4_174 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(0.01, actual.First().Quantity)", span="213-213"];
m4_175 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(OrderDirection.Buy, actual.First().Direction)", span="214-214"];
m4_176 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(0.1, actual.First().Price)", span="215-215"];
m4_177 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(-1, actual.Last().Quantity)", span="217-217"];
m4_178 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(OrderDirection.Sell, actual.Last().Direction)", span="218-218"];
m4_179 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(1, actual.Last().Price)", span="219-219"];
m4_180 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", span="204-204"];
m4_266 [cluster="Unk.Contains", file="GDAXBrokerageTests.cs", label="Entry Unk.Contains", span=""];
m4_274 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", span="317-317"];
m4_275 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="1: string json = _tickerData", span="319-319"];
m4_276 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="1: _unit.OnMessage(_unit, GDAXTestsHelpers.GetArgs(json))", span="321-321"];
m4_277 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: var actual = _unit.Ticks.First()", span="323-323"];
m4_278 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: Assert.AreEqual(''BTCUSD'', actual.Symbol.Value)", span="325-325"];
m4_280 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: Assert.AreEqual(4388m, actual.BidPrice)", span="327-327"];
m4_281 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: Assert.AreEqual(4388.01m, actual.AskPrice)", span="328-328"];
m4_279 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: Assert.AreEqual(4388.005m, _unit.Ticks.First().Price)", span="326-326"];
m4_282 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", span="317-317"];
m4_283 [file="GDAXBrokerageTests.cs", label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", span=""];
m4_289 [file="GDAXBrokerageTests.cs", label=string, span=""];
m4_286 [file="GDAXBrokerageTests.cs", label=orderQuantity, span=""];
m4_288 [file="GDAXBrokerageTests.cs", label="QuantConnect.Orders.OrderStatus", span=""];
m4_284 [file="GDAXBrokerageTests.cs", label=actualFee, span=""];
m4_285 [file="GDAXBrokerageTests.cs", label=actualQuantity, span=""];
m4_290 [file="GDAXBrokerageTests.cs", label=decimal, span=""];
m4_291 [file="GDAXBrokerageTests.cs", label=raised, span=""];
m4_287 [file="GDAXBrokerageTests.cs", label=raised, span=""];
m5_39 [cluster="System.Math.Abs(decimal)", file="GDAXTestHelpers.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m5_53 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
m5_74 [cluster="Unk.All", file="GDAXTestHelpers.cs", label="Entry Unk.All", span=""];
m5_119 [cluster="Unk.ConvertOrderStatus", file="GDAXTestHelpers.cs", label="Entry Unk.ConvertOrderStatus", span=""];
m5_121 [cluster="Unk.Where", file="GDAXTestHelpers.cs", label="Entry Unk.Where", span=""];
m5_151 [cluster="QuantConnect.Holding.Holding()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m5_169 [cluster="Securities.Cash.cstr", file="GDAXTestHelpers.cs", label="Entry Securities.Cash.cstr", span=""];
m5_55 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m5_58 [cluster="int.ToString()", file="GDAXTestHelpers.cs", label="Entry int.ToString()", span="0-0"];
m5_180 [cluster="System.Collections.Generic.List<T>.Clear()", file="GDAXTestHelpers.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m5_152 [cluster="Unk.ToUpper", file="GDAXTestHelpers.cs", label="Entry Unk.ToUpper", span=""];
m5_73 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXTestHelpers.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_115 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m5_150 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="210-210"];
m5_124 [cluster="lambda expression", file="GDAXTestHelpers.cs", label="Entry lambda expression", span="216-216"];
m5_75 [cluster="lambda expression", file="GDAXTestHelpers.cs", label="Entry lambda expression", span="147-147"];
m5_76 [cluster="lambda expression", file="GDAXTestHelpers.cs", label=a, span="147-147"];
m5_77 [cluster="lambda expression", file="GDAXTestHelpers.cs", label="Exit lambda expression", span="147-147"];
m5_125 [cluster="lambda expression", file="GDAXTestHelpers.cs", label="c.Value.BrokerId.Contains(item.BrokerId.First())", span="216-216"];
m5_126 [cluster="lambda expression", file="GDAXTestHelpers.cs", label="Exit lambda expression", span="216-216"];
m5_60 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="124-124"];
m5_61 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="throw new NotSupportedException(''GDAXBrokerage.UpdateOrder: Order update not supported. Please cancel and re-create.'');", span="126-126"];
m5_62 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="124-124"];
m5_45 [cluster="Unk.GetAuthenticationToken", file="GDAXTestHelpers.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m5_82 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="162-162"];
m5_83 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="var list = new List<Order>()", span="164-164"];
m5_84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="var req = new RestRequest(''/orders?status=open&status=pending'', Method.GET)", span="168-168"];
m5_104 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="list.Add(order)", span="203-203"];
m5_107 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label=list, span="212-212"];
m5_112 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="return list;", span="224-224"];
m5_85 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="GetAuthenticationToken(req)", span="169-169"];
m5_86 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="var response = RestClient.Execute(req)", span="170-170"];
m5_87 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="response != null", span="172-172"];
m5_88 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="var orders = JsonConvert.DeserializeObject<Messages.Order[]>(response.Content)", span="174-174"];
m5_97 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, \r\n                                ''GDAXBrokerage.GetOpenOrders: Unsupported order type returned from brokerage: '' + item.Type))", span="192-193"];
m5_105 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label=Exception, span="207-207"];
m5_89 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label=orders, span="175-175"];
m5_90 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="Order order = null", span="177-177"];
m5_91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="item.Type == ''market''", span="178-178"];
m5_92 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="order = new MarketOrder { Price = item.Price }", span="180-180"];
m5_93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="item.Type == ''limit''", span="182-182"];
m5_94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="order = new LimitOrder { LimitPrice = item.Price }", span="184-184"];
m5_95 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="item.Type == ''stop''", span="186-186"];
m5_96 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="order = new StopMarketOrder { StopPrice = item.Price }", span="188-188"];
m5_98 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="order.Quantity = item.Side == ''sell'' ? -item.Size : item.Size", span="197-197"];
m5_99 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="order.BrokerId = new List<string> { item.Id.ToString() }", span="198-198"];
m5_100 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="order.Symbol = ConvertProductId(item.ProductId)", span="199-199"];
m5_102 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="order.Status = ConvertOrderStatus(item)", span="201-201"];
m5_103 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="order.Price = item.Price", span="202-202"];
m5_101 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="order.Time = DateTime.UtcNow", span="200-200"];
m5_106 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="throw;", span="209-209"];
m5_108 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="item.Status.IsOpen()", span="214-214"];
m5_109 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="var cached = this.CachedOrderIDs.Where(c => c.Value.BrokerId.Contains(item.BrokerId.First()))", span="216-216"];
m5_111 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="this.CachedOrderIDs[cached.First().Key] = item", span="219-219"];
m5_110 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="cached.Any()", span="217-217"];
m5_113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="162-162"];
m5_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="104-104"];
m5_0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="49-49"];
m5_1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="var req = new RestRequest(''/orders'', Method.POST)", span="51-51"];
m5_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="payload.size = Math.Abs(order.Quantity)", span="55-55"];
m5_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="payload.side = order.Direction.ToString().ToLower()", span="56-56"];
m5_5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="payload.type = ConvertOrderType(order.Type)", span="57-57"];
m5_6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="payload.price = order is LimitOrder ? ((LimitOrder)order).LimitPrice : order is StopMarketOrder ? ((StopMarketOrder)order).StopPrice : 0", span="58-58"];
m5_7 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="payload.product_id = ConvertSymbol(order.Symbol)", span="59-59"];
m5_19 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="CachedOrderIDs.ContainsKey(order.Id)", span="82-82"];
m5_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="84-84"];
m5_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="order.BrokerId.Add(brokerId)", span="88-88"];
m5_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="CachedOrderIDs.TryAdd(order.Id, order)", span="89-89"];
m5_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="order.Type != OrderType.Market", span="92-92"];
m5_24 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="94-94"];
m5_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted })", span="97-97"];
m5_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="order.Type == OrderType.Market", span="99-99"];
m5_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, (decimal)raw.fill_fees, ''GDAX Order Event'') { Status = OrderStatus.Filled })", span="101-101"];
m5_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="CachedOrderIDs.TryRemove(order.Id, out outOrder)", span="103-103"];
m5_30 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.PlaceOrder: Order completed successfully orderid:'' + order.Id.ToString()))", span="106-106"];
m5_32 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid })", span="111-111"];
m5_33 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="string message = $''GDAXBrokerage.PlaceOrder: Order failed Order Id: {order.Id} timestamp: {order.Time} quantity: {order.Quantity.ToString()} content: {response.Content}''", span="113-113"];
m5_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="dynamic payload = new ExpandoObject()", span="53-53"];
m5_10 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="req.AddJsonBody(payload)", span="66-66"];
m5_11 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="GetAuthenticationToken(req)", span="68-68"];
m5_12 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="var response = RestClient.Execute(req)", span="69-69"];
m5_9 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="payload.overdraft_enabled = true", span="63-63"];
m5_8 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="_algorithm.BrokerageModel.AccountType == AccountType.Margin", span="61-61"];
m5_13 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="response.StatusCode == System.Net.HttpStatusCode.OK && response.Content != null", span="71-71"];
m5_14 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="dynamic raw = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="73-73"];
m5_16 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GDAXBrokerage.PlaceOrder: Error parsing response from place order: '' + response.Content))", span="77-77"];
m5_15 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="raw == null || raw.id == null", span="75-75"];
m5_18 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="string brokerId = raw.id", span="81-81"];
m5_17 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="return false;", span="78-78"];
m5_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Orders.Order outOrder = null", span="102-102"];
m5_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="return true;", span="107-107"];
m5_34 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, message))", span="114-114"];
m5_35 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="return false;", span="115-115"];
m5_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="49-49"];
m5_37 [cluster="RestRequest.cstr", file="GDAXTestHelpers.cs", label="Entry RestRequest.cstr", span=""];
m5_38 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="GDAXTestHelpers.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m5_48 [cluster="BrokerageMessageEvent.cstr", file="GDAXTestHelpers.cs", label="Entry BrokerageMessageEvent.cstr", span=""];
m5_117 [cluster="Unk.ToString", file="GDAXTestHelpers.cs", label="Entry Unk.ToString", span=""];
m5_172 [cluster="Unk.Create", file="GDAXTestHelpers.cs", label="Entry Unk.Create", span=""];
m5_52 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="GDAXTestHelpers.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m5_149 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m5_44 [cluster="Unk.AddJsonBody", file="GDAXTestHelpers.cs", label="Entry Unk.AddJsonBody", span=""];
m5_47 [cluster="Unk.>", file="GDAXTestHelpers.cs", label="Entry Unk.>", span=""];
m5_41 [cluster="string.ToLower()", file="GDAXTestHelpers.cs", label="Entry string.ToLower()", span="0-0"];
m5_64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="134-134"];
m5_65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="var success = new List<bool>()", span="136-136"];
m5_66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="order.BrokerId", span="138-138"];
m5_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="success.Add(response.StatusCode == System.Net.HttpStatusCode.OK)", span="144-144"];
m5_71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="return success.All(a => a);", span="147-147"];
m5_67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="var req = new RestRequest(''/orders/'' + id, Method.DELETE)", span="140-140"];
m5_68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="GetAuthenticationToken(req)", span="141-141"];
m5_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="var response = RestClient.Execute(req)", span="142-142"];
m5_72 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="134-134"];
m5_81 [cluster="QuantConnect.Brokerages.IWebSocket.Close()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="51-51"];
m5_56 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="GDAXTestHelpers.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m5_114 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m5_147 [cluster="Unk.Substring", file="GDAXTestHelpers.cs", label="Entry Unk.Substring", span=""];
m5_128 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="GDAXTestHelpers.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m5_129 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="232-232"];
m5_130 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="var list = new List<Holding>()", span="234-234"];
m5_131 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="var req = new RestRequest(''/orders?status=active'', Method.GET)", span="236-236"];
m5_143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="list.Add(new Holding\r\n                    {\r\n                        Symbol = ConvertProductId(item.ProductId),\r\n                        Quantity = item.Side == ''sell'' ? -item.FilledSize : item.FilledSize,\r\n                        Type = SecurityType.Crypto,\r\n                        CurrencySymbol = item.ProductId.Substring(0, 3).ToUpper(),\r\n                        ConversionRate = conversionRate,\r\n                        MarketPrice = item.Price,\r\n                        //todo: check this\r\n                        AveragePrice = item.FilledSize > 0 ? item.ExecutedValue / item.FilledSize : 0\r\n                    })", span="258-268"];
m5_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="return list;", span="272-272"];
m5_132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="GetAuthenticationToken(req)", span="237-237"];
m5_133 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="var response = RestClient.Execute(req)", span="238-238"];
m5_134 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="response != null", span="239-239"];
m5_135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="JsonConvert.DeserializeObject<Messages.Order[]>(response.Content)", span="241-241"];
m5_136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="decimal conversionRate", span="244-244"];
m5_137 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="!item.ProductId.EndsWith(''USD'', StringComparison.InvariantCultureIgnoreCase)", span="245-245"];
m5_138 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="var baseSymbol = (item.ProductId.Substring(0, 3) + ''USD'').ToLower()", span="248-248"];
m5_141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="var tick = this.GetTick(ConvertProductId(item.ProductId))", span="254-254"];
m5_139 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="var tick = this.GetTick(Symbol.Create(baseSymbol, SecurityType.Crypto, Market.GDAX))", span="249-249"];
m5_140 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="conversionRate = tick.Price", span="250-250"];
m5_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="conversionRate = tick.Price", span="255-255"];
m5_145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="232-232"];
m5_40 [cluster="System.Enum.ToString()", file="GDAXTestHelpers.cs", label="Entry System.Enum.ToString()", span="0-0"];
m5_49 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m5_78 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="153-153"];
m5_79 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXTestHelpers.cs", label="WebSocket.Close()", span="155-155"];
m5_80 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="153-153"];
m5_122 [cluster="Unk.Any", file="GDAXTestHelpers.cs", label="Entry Unk.Any", span=""];
m5_171 [cluster="Unk.GetConversionRate", file="GDAXTestHelpers.cs", label="Entry Unk.GetConversionRate", span=""];
m5_181 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="331-331"];
m5_182 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="var totalFee = 0m", span="333-333"];
m5_183 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="order.BrokerId", span="335-335"];
m5_188 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="totalFee += (decimal)fill.fill_fees", span="342-342"];
m5_189 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="return totalFee;", span="345-345"];
m5_184 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="337-337"];
m5_185 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="GetAuthenticationToken(req)", span="338-338"];
m5_186 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="var response = RestClient.Execute(req)", span="339-339"];
m5_187 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="340-340"];
m5_190 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="331-331"];
m5_46 [cluster="Unk.Execute", file="GDAXTestHelpers.cs", label="Entry Unk.Execute", span=""];
m5_116 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m5_50 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="GDAXTestHelpers.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_57 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m5_153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="279-279"];
m5_154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="var list = new List<Securities.Cash>()", span="281-281"];
m5_155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="var req = new RestRequest(''/accounts'', Method.GET)", span="283-283"];
m5_161 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="list.Add(new Securities.Cash(item.Currency, item.Balance, 1))", span="293-293"];
m5_164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, rate))", span="298-298"];
m5_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, tick.Price))", span="304-304"];
m5_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="return list;", span="308-308"];
m5_156 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="GetAuthenticationToken(req)", span="284-284"];
m5_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="var response = RestClient.Execute(req)", span="285-285"];
m5_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="JsonConvert.DeserializeObject<Messages.Account[]>(response.Content)", span="287-287"];
m5_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="item.Balance > 0", span="289-289"];
m5_160 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="item.Currency == ''USD''", span="291-291"];
m5_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="new[] {''GBP'', ''EUR'' }.Contains(item.Currency)", span="295-295"];
m5_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="var rate = GetConversionRate(item.Currency)", span="297-297"];
m5_165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="var tick = GetTick(Symbol.Create(item.Currency + ''USD'', SecurityType.Crypto, Market.GDAX))", span="302-302"];
m5_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="279-279"];
m5_51 [cluster="System.Collections.Generic.List<T>.Add(T)", file="GDAXTestHelpers.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133"];
m5_59 [cluster="decimal.ToString()", file="GDAXTestHelpers.cs", label="Entry decimal.ToString()", span="0-0"];
m5_146 [cluster="Unk.EndsWith", file="GDAXTestHelpers.cs", label="Entry Unk.EndsWith", span=""];
m5_170 [cluster="Unk.Contains", file="GDAXTestHelpers.cs", label="Entry Unk.Contains", span=""];
m5_120 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m5_123 [cluster="Unk.First", file="GDAXTestHelpers.cs", label="Entry Unk.First", span=""];
m5_127 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="GDAXTestHelpers.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m5_63 [cluster="System.NotSupportedException.NotSupportedException(string)", file="GDAXTestHelpers.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m5_179 [cluster="System.Collections.Generic.List<T>.ToArray()", file="GDAXTestHelpers.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m5_173 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="315-315"];
m5_174 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXTestHelpers.cs", label=Ticks, span="317-317"];
m5_175 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXTestHelpers.cs", label="var copy = Ticks.ToArray()", span="319-319"];
m5_176 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXTestHelpers.cs", label="Ticks.Clear()", span="320-320"];
m5_177 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXTestHelpers.cs", label="return copy;", span="321-321"];
m5_178 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="315-315"];
m5_54 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
m5_118 [cluster="Unk.ConvertProductId", file="GDAXTestHelpers.cs", label="Entry Unk.ConvertProductId", span=""];
m5_191 [file="GDAXTestHelpers.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m5_192 [file="GDAXTestHelpers.cs", label=item, span=""];
n168 -> n3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n14  [color=red, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n17  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n49  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n50  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n67  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n81  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n83  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n90  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n92  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n114  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n115  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n121  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n123  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n125  [color=red, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n138  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n139  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n144  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n152  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n153  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n162  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n168 -> n163  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
n169 -> n107  [color=darkseagreen4, key=1, label=item, style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=red, key=1, label="QuantConnect.Orders.Order", style=dashed];
n0 -> n9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n0 -> n10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n0 -> n11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n0 -> n12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n0 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n0 -> n14  [color=red, key=1, label="QuantConnect.Orders.Order", style=dashed];
n0 -> n15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n0 -> n17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n0 -> n18  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n0 -> n16  [color=darkorchid, key=3, label="method methodReturn bool PlaceOrder", style=bold];
n0 -> n25  [color=darkorchid, key=3, label="method methodReturn bool PlaceOrder", style=bold];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n21  [key=2, style=dotted];
n1 -> n3  [color=darkseagreen4, key=1, label=req, style=dashed];
n1 -> n4  [color=darkseagreen4, key=1, label=req, style=dashed];
n2 -> n3  [color=red, key=0, style=solid];
n2 -> n22  [color=red, key=2, style=dotted];
n2 -> n23  [color=red, key=2, style=dotted];
n2 -> n24  [color=red, key=2, style=dotted];
n2 -> n25  [color=red, key=2, style=dotted];
n2 -> n26  [color=red, key=2, style=dotted];
n2 -> n27  [color=red, key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n9 -> n31  [key=2, style=dotted];
n10 -> n13  [key=0, style=solid];
n10 -> n32  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n32  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n33  [key=2, style=dotted];
n13 -> n14  [color=red, key=0, style=solid];
n13 -> n34  [key=2, style=dotted];
n13 -> n33  [key=2, style=dotted];
n14 -> n15  [color=red, key=0, style=solid];
n14 -> n35  [color=red, key=2, style=dotted];
n14 -> n36  [color=red, key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n37  [key=2, style=dotted];
n15 -> n38  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n35  [key=2, style=dotted];
n17 -> n36  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n39  [key=2, style=dotted];
n18 -> n40  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n28  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n29  [key=2, style=dotted];
n4 -> n6  [color=darkseagreen4, key=1, label=response, style=dashed];
n4 -> n18  [color=darkseagreen4, key=1, label=response, style=dashed];
n5 -> n6  [key=0, style=solid];
n5 -> n17  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n30  [key=2, style=dotted];
n6 -> n8  [color=darkseagreen4, key=1, label=raw, style=dashed];
n6 -> n14  [color=red, key=1, label=raw, style=dashed];
n7 -> n8  [key=0, style=solid];
n7 -> n14  [color=red, key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
n8 -> n11  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
n16 -> n20  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n20 -> n0  [color=blue, key=0, style=bold];
n41 -> n42  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n42 -> n44  [key=2, style=dotted];
n43 -> n41  [color=blue, key=0, style=bold];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n46 -> n47  [key=0, style=solid];
n46 -> n54  [key=2, style=dotted];
n46 -> n51  [color=darkseagreen4, key=1, label=success, style=dashed];
n46 -> n52  [color=darkseagreen4, key=1, label=success, style=dashed];
n47 -> n48  [key=0, style=solid];
n47 -> n52  [key=0, style=solid];
n51 -> n47  [key=0, style=solid];
n51 -> n32  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n55  [key=2, style=dotted];
n52 -> n56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n48 -> n49  [key=0, style=solid];
n48 -> n21  [key=2, style=dotted];
n48 -> n50  [color=darkseagreen4, key=1, label=req, style=dashed];
n49 -> n50  [key=0, style=solid];
n49 -> n28  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n29  [key=2, style=dotted];
n53 -> n45  [color=blue, key=0, style=bold];
n56 -> n57  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n58 -> n56  [color=blue, key=0, style=bold];
n59 -> n60  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n60 -> n62  [key=2, style=dotted];
n61 -> n59  [color=blue, key=0, style=bold];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n54  [key=2, style=dotted];
n64 -> n85  [color=darkseagreen4, key=1, label=list, style=dashed];
n64 -> n88  [color=darkseagreen4, key=1, label=list, style=dashed];
n64 -> n93  [color=darkseagreen4, key=1, label=list, style=dashed];
n65 -> n66  [key=0, style=solid];
n65 -> n21  [key=2, style=dotted];
n65 -> n67  [color=darkseagreen4, key=1, label=req, style=dashed];
n85 -> n70  [key=0, style=solid];
n85 -> n32  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n93  [key=0, style=solid];
n88 -> n90  [color=darkseagreen4, key=1, label=item, style=dashed];
n88 -> n107  [color=darkseagreen4, key=1, label=item, style=dashed];
n88 -> n92  [color=darkseagreen4, key=1, label=item, style=dashed];
n93 -> n94  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n66 -> n28  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n29  [key=2, style=dotted];
n67 -> n69  [color=darkseagreen4, key=1, label=response, style=dashed];
n68 -> n69  [key=0, style=solid];
n68 -> n86  [key=0, style=solid];
n68 -> n88  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n69 -> n30  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n70 -> n86  [key=0, style=solid];
n70 -> n88  [key=0, style=solid];
n70 -> n72  [color=darkseagreen4, key=1, label=item, style=dashed];
n70 -> n73  [color=darkseagreen4, key=1, label=item, style=dashed];
n70 -> n74  [color=darkseagreen4, key=1, label=item, style=dashed];
n70 -> n75  [color=darkseagreen4, key=1, label=item, style=dashed];
n70 -> n76  [color=darkseagreen4, key=1, label=item, style=dashed];
n70 -> n77  [color=darkseagreen4, key=1, label=item, style=dashed];
n70 -> n78  [color=darkseagreen4, key=1, label=item, style=dashed];
n70 -> n79  [color=darkseagreen4, key=1, label=item, style=dashed];
n70 -> n80  [color=darkseagreen4, key=1, label=item, style=dashed];
n70 -> n81  [color=darkseagreen4, key=1, label=item, style=dashed];
n70 -> n83  [color=darkseagreen4, key=1, label=item, style=dashed];
n70 -> n84  [color=darkseagreen4, key=1, label=item, style=dashed];
n71 -> n72  [key=0, style=solid];
n71 -> n79  [color=darkseagreen4, key=1, label=order, style=dashed];
n71 -> n80  [color=darkseagreen4, key=1, label=order, style=dashed];
n71 -> n81  [color=darkseagreen4, key=1, label=order, style=dashed];
n71 -> n82  [color=darkseagreen4, key=1, label=order, style=dashed];
n71 -> n83  [color=darkseagreen4, key=1, label=order, style=dashed];
n71 -> n84  [color=darkseagreen4, key=1, label=order, style=dashed];
n71 -> n85  [color=darkseagreen4, key=1, label=order, style=dashed];
n71 -> n71  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.Order order", style=bold];
n72 -> n73  [key=0, style=solid];
n72 -> n74  [key=0, style=solid];
n73 -> n79  [key=0, style=solid];
n73 -> n95  [key=2, style=dotted];
n73 -> n80  [color=darkseagreen4, key=1, label=order, style=dashed];
n73 -> n81  [color=darkseagreen4, key=1, label=order, style=dashed];
n73 -> n82  [color=darkseagreen4, key=1, label=order, style=dashed];
n73 -> n83  [color=darkseagreen4, key=1, label=order, style=dashed];
n73 -> n84  [color=darkseagreen4, key=1, label=order, style=dashed];
n73 -> n85  [color=darkseagreen4, key=1, label=order, style=dashed];
n74 -> n75  [key=0, style=solid];
n74 -> n76  [key=0, style=solid];
n75 -> n79  [key=0, style=solid];
n75 -> n96  [key=2, style=dotted];
n75 -> n80  [color=darkseagreen4, key=1, label=order, style=dashed];
n75 -> n81  [color=darkseagreen4, key=1, label=order, style=dashed];
n75 -> n82  [color=darkseagreen4, key=1, label=order, style=dashed];
n75 -> n83  [color=darkseagreen4, key=1, label=order, style=dashed];
n75 -> n84  [color=darkseagreen4, key=1, label=order, style=dashed];
n75 -> n85  [color=darkseagreen4, key=1, label=order, style=dashed];
n76 -> n77  [key=0, style=solid];
n76 -> n78  [key=0, style=solid];
n77 -> n79  [key=0, style=solid];
n77 -> n97  [key=2, style=dotted];
n77 -> n80  [color=darkseagreen4, key=1, label=order, style=dashed];
n77 -> n81  [color=darkseagreen4, key=1, label=order, style=dashed];
n77 -> n82  [color=darkseagreen4, key=1, label=order, style=dashed];
n77 -> n83  [color=darkseagreen4, key=1, label=order, style=dashed];
n77 -> n84  [color=darkseagreen4, key=1, label=order, style=dashed];
n77 -> n85  [color=darkseagreen4, key=1, label=order, style=dashed];
n78 -> n70  [key=0, style=solid];
n78 -> n98  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n80 -> n54  [key=2, style=dotted];
n80 -> n99  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid];
n81 -> n100  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n101  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n87 -> n94  [key=0, style=solid];
n89 -> n90  [key=0, style=solid];
n89 -> n88  [key=0, style=solid];
n89 -> n102  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n103  [key=2, style=dotted];
n90 -> n106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n90 -> n92  [color=darkseagreen4, key=1, label=cached, style=dashed];
n107 -> n108  [key=0, style=solid];
n107 -> n109  [key=2, style=dotted];
n107 -> n110  [key=2, style=dotted];
n107 -> n107  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
n92 -> n88  [key=0, style=solid];
n92 -> n105  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n88  [key=0, style=solid];
n91 -> n104  [key=2, style=dotted];
n106 -> n107  [key=0, style=solid];
n94 -> n63  [color=blue, key=0, style=bold];
n108 -> n106  [color=blue, key=0, style=bold];
n111 -> n112  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n112 -> n54  [key=2, style=dotted];
n112 -> n125  [color=red, key=1, label=list, style=dashed];
n112 -> n126  [color=darkseagreen4, key=1, label=list, style=dashed];
n113 -> n114  [key=0, style=solid];
n113 -> n21  [key=2, style=dotted];
n113 -> n115  [color=darkseagreen4, key=1, label=req, style=dashed];
n125 -> n117  [color=red, key=0, style=solid];
n125 -> n133  [color=red, key=2, style=dotted];
n125 -> n100  [color=red, key=2, style=dotted];
n125 -> n129  [color=red, key=2, style=dotted];
n125 -> n134  [color=red, key=2, style=dotted];
n125 -> n32  [color=red, key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n114 -> n28  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n29  [key=2, style=dotted];
n115 -> n117  [color=darkseagreen4, key=1, label=response, style=dashed];
n116 -> n117  [key=0, style=solid];
n116 -> n126  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n117 -> n126  [key=0, style=solid];
n117 -> n30  [key=2, style=dotted];
n117 -> n119  [color=darkseagreen4, key=1, label=item, style=dashed];
n117 -> n120  [color=darkseagreen4, key=1, label=item, style=dashed];
n117 -> n123  [color=darkseagreen4, key=1, label=item, style=dashed];
n117 -> n125  [color=red, key=1, label=item, style=dashed];
n118 -> n119  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n119 -> n123  [key=0, style=solid];
n119 -> n128  [key=2, style=dotted];
n120 -> n121  [key=0, style=solid];
n120 -> n129  [key=2, style=dotted];
n120 -> n130  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n123 -> n100  [key=2, style=dotted];
n123 -> n132  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n121 -> n131  [key=2, style=dotted];
n121 -> n132  [key=2, style=dotted];
n122 -> n125  [color=red, key=0, style=solid];
n124 -> n125  [color=red, key=0, style=solid];
n127 -> n111  [color=blue, key=0, style=bold];
n135 -> n136  [key=0, style=solid];
n136 -> n137  [key=0, style=solid];
n136 -> n54  [key=2, style=dotted];
n136 -> n143  [color=darkseagreen4, key=1, label=list, style=dashed];
n136 -> n145  [color=darkseagreen4, key=1, label=list, style=dashed];
n136 -> n146  [color=darkseagreen4, key=1, label=list, style=dashed];
n137 -> n138  [key=0, style=solid];
n137 -> n21  [key=2, style=dotted];
n137 -> n139  [color=darkseagreen4, key=1, label=req, style=dashed];
n143 -> n140  [key=0, style=solid];
n143 -> n148  [key=2, style=dotted];
n143 -> n32  [key=2, style=dotted];
n145 -> n140  [key=0, style=solid];
n145 -> n148  [key=2, style=dotted];
n145 -> n134  [key=2, style=dotted];
n145 -> n32  [key=2, style=dotted];
n146 -> n147  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n138 -> n28  [key=2, style=dotted];
n139 -> n140  [key=0, style=solid];
n139 -> n29  [key=2, style=dotted];
n140 -> n141  [key=0, style=solid];
n140 -> n146  [key=0, style=solid];
n140 -> n30  [key=2, style=dotted];
n140 -> n142  [color=darkseagreen4, key=1, label=item, style=dashed];
n140 -> n143  [color=darkseagreen4, key=1, label=item, style=dashed];
n140 -> n144  [color=darkseagreen4, key=1, label=item, style=dashed];
n140 -> n145  [color=darkseagreen4, key=1, label=item, style=dashed];
n141 -> n142  [key=0, style=solid];
n141 -> n140  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n142 -> n144  [key=0, style=solid];
n144 -> n145  [key=0, style=solid];
n144 -> n149  [key=2, style=dotted];
n144 -> n132  [key=2, style=dotted];
n147 -> n135  [color=blue, key=0, style=bold];
n150 -> n151  [key=0, style=solid];
n150 -> n152  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> GetNextTicks", style=bold];
n151 -> n152  [key=0, style=solid];
n152 -> n153  [key=0, style=solid];
n152 -> n156  [key=2, style=dotted];
n152 -> n154  [color=darkseagreen4, key=1, label=copy, style=dashed];
n153 -> n154  [key=0, style=solid];
n153 -> n157  [key=2, style=dotted];
n154 -> n155  [key=0, style=solid];
n155 -> n150  [color=blue, key=0, style=bold];
n158 -> n159  [key=0, style=solid];
n158 -> n160  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n159 -> n160  [key=0, style=solid];
n159 -> n165  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
n159 -> n166  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
n159 -> n159  [color=darkorchid, key=3, label="Local variable decimal totalFee", style=bold];
n160 -> n161  [key=0, style=solid];
n160 -> n166  [key=0, style=solid];
n165 -> n160  [key=0, style=solid];
n165 -> n165  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
n165 -> n166  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
n166 -> n167  [key=0, style=solid];
n161 -> n162  [key=0, style=solid];
n161 -> n21  [key=2, style=dotted];
n161 -> n163  [color=darkseagreen4, key=1, label=req, style=dashed];
n162 -> n163  [key=0, style=solid];
n162 -> n28  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n163 -> n29  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n164 -> n30  [key=2, style=dotted];
n167 -> n158  [color=blue, key=0, style=bold];
m1_5 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [key=2, style=dotted];
m1_8 -> m1_11  [key=2, style=dotted];
m1_9 -> m1_5  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [color=red, key=0, style=solid];
m1_21 -> m1_24  [color=red, key=1, label=string, style=dashed];
m1_22 -> m1_23  [color=red, key=0, style=solid];
m1_24 -> m1_25  [color=red, key=0, style=solid];
m1_24 -> m1_27  [color=red, key=2, style=dotted];
m1_23 -> m1_24  [color=red, key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_21  [color=blue, key=0, style=bold];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_12 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_17  [key=2, style=dotted];
m1_13 -> m1_18  [key=2, style=dotted];
m1_13 -> m1_15  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_19  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> n34  [key=2, style=dotted];
m1_15 -> m1_19  [key=2, style=dotted];
m1_16 -> m1_12  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m2_71 -> m2_37  [color=darkorchid, key=3, label="method methodReturn decimal GetReservedBuyingPowerForPosition", style=bold];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_73 -> m2_71  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m2_30 -> m2_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m2_30 -> m2_101  [key=0, style=solid];
m2_30 -> m2_104  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_30 -> m2_106  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_30 -> m2_113  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_30 -> m2_130  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_30 -> m2_116  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_30 -> m2_121  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_30 -> m2_37  [color=darkorchid, key=3, label="method methodReturn decimal GetOpenOrdersReservedQuantity", style=bold];
m2_30 -> m2_114  [color=darkorchid, key=3, label="method methodReturn decimal GetOpenOrdersReservedQuantity", style=bold];
m2_121 -> m2_29  [key=2, style=dotted];
m2_121 -> m2_121  [color=darkseagreen4, key=1, label=quantityInTargetCurrency, style=dashed];
m2_121 -> m2_122  [key=0, style=solid];
m2_119 -> m2_29  [color=darkorchid, key=3, label="Local variable decimal quantityInTargetCurrency", style=bold];
m2_119 -> m2_121  [color=darkseagreen4, key=1, label=quantityInTargetCurrency, style=dashed];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_122  [color=darkseagreen4, key=1, label=quantityInTargetCurrency, style=dashed];
m2_115 -> m2_121  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m2_115 -> m2_119  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_123  [key=0, style=solid];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_104  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_109  [color=darkseagreen4, key=1, label=targetCurrency, style=dashed];
m2_104 -> m2_111  [color=darkseagreen4, key=1, label=targetCurrency, style=dashed];
m2_104 -> m2_120  [color=darkseagreen4, key=1, label=targetCurrency, style=dashed];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_113  [key=0, style=solid];
m2_106 -> m2_110  [color=darkseagreen4, key=1, label=portfolioSecurity, style=dashed];
m2_106 -> m2_111  [color=darkseagreen4, key=1, label=portfolioSecurity, style=dashed];
m2_106 -> m2_112  [color=darkseagreen4, key=1, label=portfolioSecurity, style=dashed];
m2_113 -> m2_115  [color=darkseagreen4, key=1, label=openOrders, style=dashed];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_127  [key=2, style=dotted];
m2_113 -> m2_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_120  [color=darkseagreen4, key=1, label=orderSecurity, style=dashed];
m2_114 -> m2_23  [color=darkorchid, key=3, label="Local variable decimal openOrdersReservedQuantity", style=bold];
m2_114 -> m2_119  [color=darkorchid, key=3, label="Local variable decimal openOrdersReservedQuantity", style=bold];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_122  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m2_114 -> m2_123  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_122  [key=0, style=solid];
m2_122 -> m2_115  [key=0, style=solid];
m2_122 -> m2_122  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m2_122 -> m2_123  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_115  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_103 -> m2_124  [key=0, style=solid];
m2_102 -> m2_104  [key=0, style=solid];
m2_102 -> m2_103  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_113  [color=darkseagreen4, key=1, label=symbolDirectionPairs, style=dashed];
m2_105 -> m2_130  [color=darkseagreen4, key=1, label=symbolDirectionPairs, style=dashed];
m2_105 -> m2_125  [key=2, style=dotted];
m2_105 -> m2_110  [color=darkseagreen4, key=1, label=symbolDirectionPairs, style=dashed];
m2_105 -> m2_112  [color=darkseagreen4, key=1, label=symbolDirectionPairs, style=dashed];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_111  [key=0, style=solid];
m2_111 -> m2_106  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_110 -> m2_106  [key=0, style=solid];
m2_110 -> m2_126  [key=2, style=dotted];
m2_112 -> m2_106  [key=0, style=solid];
m2_112 -> m2_126  [key=2, style=dotted];
m2_108 -> m2_106  [key=0, style=solid];
m2_108 -> m2_109  [key=0, style=solid];
m2_107 -> m2_109  [color=darkseagreen4, key=1, label=basePortfolioSecurity, style=dashed];
m2_107 -> m2_108  [key=0, style=solid];
m2_117 -> m2_118  [key=0, style=solid];
m2_124 -> m2_30  [color=blue, key=0, style=bold];
m2_128 -> m2_130  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_128 -> m2_129  [key=0, style=solid];
m2_130 -> m2_130  [color=darkseagreen4, key=1, label=dir, style=dashed];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_132  [key=2, style=dotted];
m2_129 -> m2_130  [key=0, style=solid];
m2_131 -> m2_128  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m2_4 -> m2_11  [color=red, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_20  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_5 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_5 -> m2_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_5 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_5 -> m2_14  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_5 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_5 -> m2_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_5 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_5 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_5 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_5 -> m2_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_5 -> m2_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_5 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_5 -> m2_7  [color=darkorchid, key=3, label="method methodReturn bool HasSufficientBuyingPowerForOrder", style=bold];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_6  [key=0, style=solid];
m2_7 -> m2_15  [key=2, style=dotted];
m2_7 -> m2_9  [key=0, style=solid];
m2_11 -> m2_12  [color=red, key=0, style=solid];
m2_11 -> m2_20  [color=red, key=2, style=dotted];
m2_11 -> m2_13  [color=red, key=1, label=brokerage, style=dashed];
m2_11 -> m2_14  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_9  [key=0, style=solid];
m2_6 -> m2_8  [color=darkseagreen4, key=1, label=item, style=dashed];
m2_6 -> m2_14  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_18  [key=2, style=dotted];
m2_9 -> m2_11  [color=red, key=1, label=restClient, style=dashed];
m2_8 -> m2_14  [key=0, style=solid];
m2_8 -> m2_16  [key=2, style=dotted];
m2_8 -> m2_17  [key=2, style=dotted];
m2_8 -> m2_28  [key=0, style=solid];
m2_10 -> m2_11  [color=red, key=0, style=solid];
m2_10 -> m2_19  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_21  [key=2, style=dotted];
m2_12 -> m2_20  [color=green, key=1, label=totalQuantity, style=dashed];
m2_12 -> m2_18  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m2_12 -> m2_27  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_16  [key=0, style=solid];
m2_13 -> m2_29  [key=2, style=dotted];
m2_13 -> m2_18  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m2_13 -> m2_22  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m2_13 -> m2_27  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m2_14 -> m2_4  [color=blue, key=0, style=bold];
m2_14 -> m2_20  [color=green, key=1, label=totalQuantity, style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_18  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m2_14 -> m2_27  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m2_29 -> m2_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m2_29 -> m2_89  [key=0, style=solid];
m2_29 -> m2_90  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_29 -> m2_92  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_29 -> m2_94  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_29 -> m2_96  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_29 -> m2_98  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_29 -> m2_30  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m2_29 -> m2_115  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m2_89 -> m2_23  [color=darkorchid, key=3, label="Local variable decimal orderPrice", style=bold];
m2_89 -> m2_90  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_93  [key=0, style=solid];
m2_90 -> m2_95  [key=0, style=solid];
m2_90 -> m2_97  [key=0, style=solid];
m2_92 -> m2_99  [key=0, style=solid];
m2_94 -> m2_99  [key=0, style=solid];
m2_96 -> m2_99  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_100 -> m2_29  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_2  [color=blue, key=0, style=bold];
m2_18 -> m2_28  [key=0, style=solid];
m2_16 -> m2_20  [color=green, key=1, label=openOrdersReservedQuantity, style=dashed];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_30  [key=2, style=dotted];
m2_16 -> m2_18  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m2_16 -> m2_27  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m2_32 -> m2_20  [color=green, key=3, label="Parameter variable decimal targetPortfolioValue", style=bold];
m2_32 -> m2_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m2_32 -> m2_36  [key=0, style=solid];
m2_32 -> m2_39  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_32 -> m2_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_32 -> m2_41  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_32 -> m2_44  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_32 -> m2_45  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_32 -> m2_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_32 -> m2_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_32 -> m2_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_32 -> m2_60  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_32 -> m2_62  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_32 -> m2_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_32 -> m2_64  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_32 -> m2_37  [color=darkorchid, key=3, label="method methodReturn decimal GetMaximumOrderQuantityForTargetValue", style=bold];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_39  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m2_39 -> m2_31  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_44  [color=darkseagreen4, key=1, label=baseCurrencyPosition, style=dashed];
m2_39 -> m2_45  [color=darkseagreen4, key=1, label=baseCurrencyPosition, style=dashed];
m2_39 -> m2_46  [color=darkseagreen4, key=1, label=baseCurrencyPosition, style=dashed];
m2_40 -> m2_31  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_46  [color=darkseagreen4, key=1, label=quoteCurrencyPosition, style=dashed];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_69  [key=2, style=dotted];
m2_41 -> m2_70  [key=2, style=dotted];
m2_41 -> m2_53  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m2_41 -> m2_61  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> n22  [key=2, style=dotted];
m2_44 -> m2_53  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m2_44 -> m2_66  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_67  [color=darkseagreen4, key=1, label=direction, style=dashed];
m2_54 -> m2_54  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m2_54 -> m2_55  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_69  [key=2, style=dotted];
m2_58 -> m2_60  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_70  [key=2, style=dotted];
m2_59 -> m2_65  [color=darkseagreen4, key=1, label=orderValue, style=dashed];
m2_59 -> m2_66  [color=darkseagreen4, key=1, label=orderValue, style=dashed];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_34  [key=2, style=dotted];
m2_60 -> m2_66  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
m2_62 -> m2_62  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m2_62 -> m2_63  [key=0, style=solid];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_65  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_37 -> m2_39  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_52 -> m2_23  [color=darkorchid, key=3, label="Local variable decimal feeToPriceRatio", style=bold];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_55  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m2_38 -> m2_68  [key=0, style=solid];
m2_43 -> m2_68  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_48 -> m2_68  [key=0, style=solid];
m2_57 -> m2_68  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_66  [color=darkseagreen4, key=1, label=cashRemaining, style=dashed];
m2_42 -> m2_44  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_52  [color=darkorchid, key=3, label="Local variable decimal orderQuantity", style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_66 -> m2_54  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_55 -> m2_58  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m2_55 -> m2_67  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m2_55 -> m2_55  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m2_55 -> m2_56  [key=0, style=solid];
m2_56 -> m2_58  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_68 -> m2_32  [color=blue, key=0, style=bold];
m2_21 -> m2_32  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_29  [key=2, style=dotted];
m2_74 -> m2_37  [color=darkorchid, key=3, label="method methodReturn decimal GetBuyingPower", style=bold];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_78  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_74 -> m2_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_74 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_74 -> m2_83  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m2_74 -> m2_85  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m2_80 -> m2_69  [key=2, style=dotted];
m2_80 -> m2_70  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_84  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_78  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_86  [color=darkseagreen4, key=1, label=baseCurrencyPosition, style=dashed];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_84  [color=darkseagreen4, key=1, label=quoteCurrencyPosition, style=dashed];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_85  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_87  [key=0, style=solid];
m2_81 -> m2_83  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_84 -> m2_88  [key=0, style=solid];
m2_77 -> m2_88  [key=0, style=solid];
m2_86 -> m2_88  [key=0, style=solid];
m2_82 -> m2_88  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_76 -> m2_78  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_88 -> m2_74  [color=blue, key=0, style=bold];
m2_17 -> m2_19  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_20 -> m2_21  [color=green, key=0, style=solid];
m2_20 -> m2_31  [color=green, key=2, style=dotted];
m2_19 -> m2_20  [color=green, key=0, style=solid];
m2_19 -> m2_23  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_18  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m2_15 -> m2_22  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m2_15 -> m2_27  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_27  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_34  [key=2, style=dotted];
m2_26 -> m2_26  [color=darkseagreen4, key=1, label=orderFee, style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_35  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_27  [color=darkseagreen4, key=1, label=orderFee, style=dashed];
m2_23 -> m2_23  [color=darkorchid, key=3, label="Local variable decimal orderFee", style=bold];
m2_22 -> m2_28  [key=0, style=solid];
m2_22 -> n22  [key=2, style=dotted];
m2_28 -> m2_5  [color=blue, key=0, style=bold];
m2_133 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBuyingPowerModel", style=dashed];
m2_134 -> m2_130  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_135 -> m2_130  [color=darkseagreen4, key=1, label=symbolDirectionPairs, style=dashed];
m3_9 -> m3_10  [color=green, key=0, style=solid];
m3_9 -> m3_11  [color=green, key=3, label="method methodReturn bool CanUpdateOrder", style=bold];
m3_10 -> m3_11  [color=green, key=0, style=solid];
m3_10 -> m3_13  [color=green, key=2, style=dotted];
m3_10 -> m3_12  [color=green, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m3_11 -> m3_12  [color=green, key=0, style=solid];
m3_12 -> m3_9  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_2  [color=blue, key=0, style=bold];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_8  [key=2, style=dotted];
m3_7 -> m3_5  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_104  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_92 -> m4_95  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_92 -> m4_82  [color=blue, key=0, style=bold];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_96  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_93 -> m4_103  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_110  [key=2, style=dotted];
m4_98 -> m4_103  [key=0, style=solid];
m4_98 -> m4_120  [key=2, style=dotted];
m4_102 -> m4_102  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_118  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_102 -> m4_119  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m4_102 -> m4_120  [color=darkseagreen4, key=1, label=actualQuantity, style=dashed];
m4_102 -> m4_121  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_102 -> m4_124  [key=2, style=dotted];
m4_103 -> m4_112  [key=2, style=dotted];
m4_103 -> m4_113  [key=2, style=dotted];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_125  [key=2, style=dotted];
m4_105 -> m4_115  [key=2, style=dotted];
m4_105 -> m4_116  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_126  [key=2, style=dotted];
m4_105 -> m4_108  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m4_104 -> m4_115  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_114  [key=2, style=dotted];
m4_94 -> m4_98  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_96  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_96 -> m4_103  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_96 -> m4_96  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_107  [key=2, style=dotted];
m4_96 -> m4_108  [key=2, style=dotted];
m4_96 -> m4_109  [key=2, style=dotted];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_102  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_97 -> m4_121  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_97 -> m4_97  [color=darkorchid, key=3, label="Local variable decimal orderQuantity", style=bold];
m4_97 -> m4_103  [key=0, style=solid];
m4_97 -> m4_119  [key=2, style=dotted];
m4_99 -> m4_102  [color=darkseagreen4, key=1, label=raised, style=dashed];
m4_99 -> m4_104  [color=darkseagreen4, key=1, label=raised, style=dashed];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_111  [key=2, style=dotted];
m4_99 -> m4_124  [color=darkseagreen4, key=1, label=raised, style=dashed];
m4_99 -> m4_63  [key=2, style=dotted];
m4_99 -> m4_121  [key=2, style=dotted];
m4_99 -> m4_122  [key=2, style=dotted];
m4_99 -> m4_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_99 -> m4_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_99 -> m4_101  [color=darkseagreen4, key=1, label=securityUniverse, style=dashed];
m4_100 -> m4_102  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m4_100 -> m4_100  [color=darkorchid, key=3, label="Local variable decimal actualFee", style=bold];
m4_100 -> m4_101  [key=0, style=solid];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_100  [color=darkorchid, key=3, label="Local variable decimal actualQuantity", style=bold];
m4_101 -> m4_123  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_97  [key=0, style=solid];
m4_95 -> m4_98  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_95 -> m4_99  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_95 -> m4_141  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_95 -> m4_101  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_95 -> m4_102  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_95 -> m4_103  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_95 -> m4_105  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_95 -> m4_109  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_95 -> m4_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_95 -> m4_112  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_95 -> m4_116  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_106 -> m4_92  [color=blue, key=0, style=bold];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_127  [key=2, style=dotted];
m4_106 -> m4_108  [color=darkseagreen4, key=1, label=universeSymbol, style=dashed];
m4_106 -> m4_113  [color=darkseagreen4, key=1, label=universeSymbol, style=dashed];
m4_106 -> m4_117  [color=darkseagreen4, key=1, label=universeSymbol, style=dashed];
m4_213 -> m4_214  [key=0, style=solid];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_38  [key=2, style=dotted];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_181  [key=2, style=dotted];
m4_215 -> m4_182  [key=2, style=dotted];
m4_215 -> m4_183  [key=2, style=dotted];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_223  [key=2, style=dotted];
m4_216 -> m4_218  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_216 -> m4_219  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_216 -> m4_220  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_216 -> m4_221  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_217 -> m4_185  [key=2, style=dotted];
m4_217 -> m4_115  [key=2, style=dotted];
m4_217 -> m4_218  [key=0, style=solid];
m4_218 -> m4_115  [key=2, style=dotted];
m4_218 -> m4_116  [key=2, style=dotted];
m4_218 -> m4_219  [key=0, style=solid];
m4_219 -> m4_115  [key=2, style=dotted];
m4_219 -> m4_116  [key=2, style=dotted];
m4_219 -> m4_220  [key=0, style=solid];
m4_220 -> m4_115  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_186  [key=2, style=dotted];
m4_221 -> m4_115  [key=2, style=dotted];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_186  [key=2, style=dotted];
m4_222 -> m4_213  [color=blue, key=0, style=bold];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_75  [key=2, style=dotted];
m4_73 -> m4_0  [key=2, style=dotted];
m4_12 -> m4_13  [color=green, key=0, style=solid];
m4_12 -> m4_17  [color=green, key=2, style=dotted];
m4_12 -> m4_19  [color=green, key=2, style=dotted];
m4_12 -> m4_35  [color=green, key=1, label="lambda expression", style=dashed];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_7  [key=2, style=dotted];
m4_13 -> m4_0  [color=blue, key=0, style=bold];
m4_14 -> m4_12  [color=blue, key=0, style=bold];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_50  [key=2, style=dotted];
m4_61 -> m4_51  [key=2, style=dotted];
m4_61 -> m4_63  [key=2, style=dotted];
m4_61 -> m4_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_62 -> m4_17  [key=2, style=dotted];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_67  [key=2, style=dotted];
m4_62 -> m4_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_62 -> m4_60  [color=blue, key=0, style=bold];
m4_63 -> m4_17  [key=2, style=dotted];
m4_63 -> m4_19  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_68  [key=2, style=dotted];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_69  [key=2, style=dotted];
m4_65 -> m4_44  [key=2, style=dotted];
m4_66 -> m4_61  [color=blue, key=0, style=bold];
m4_66 -> m4_64  [color=blue, key=0, style=bold];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_28  [key=2, style=dotted];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_130  [key=2, style=dotted];
m4_143 -> m4_53  [key=2, style=dotted];
m4_143 -> m4_144  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_56  [color=darkseagreen4, key=1, label=dataTimeZone, style=dashed];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_15  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=2, style=dotted];
m4_5 -> m4_15  [key=2, style=dotted];
m4_6 -> m4_4  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_15  [key=2, style=dotted];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_131  [key=2, style=dotted];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_112  [key=0, style=solid];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_132  [key=2, style=dotted];
m4_112 -> m4_133  [key=2, style=dotted];
m4_112 -> m4_134  [key=2, style=dotted];
m4_112 -> m4_114  [color=darkseagreen4, key=1, label=universe, style=dashed];
m4_116 -> m4_118  [key=0, style=solid];
m4_116 -> m4_135  [key=2, style=dotted];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_129  [key=2, style=dotted];
m4_108 -> m4_110  [color=darkseagreen4, key=1, label=uconfig, style=dashed];
m4_108 -> m4_111  [color=darkseagreen4, key=1, label=uconfig, style=dashed];
m4_108 -> m4_112  [color=darkseagreen4, key=1, label=uconfig, style=dashed];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_114  [key=0, style=solid];
m4_107 -> m4_128  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_3  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_136  [key=2, style=dotted];
m4_117 -> m4_121  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_117 -> m4_119  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_117 -> m4_120  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_116  [color=darkseagreen4, key=1, label=userDefinedUniverse, style=dashed];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_117  [key=0, style=solid];
m4_118 -> m4_95  [color=blue, key=0, style=bold];
m4_118 -> m4_115  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_252 -> m4_253  [color=green, key=0, style=solid];
m4_253 -> m4_253  [color=green, key=3, label="Local variable string actual", style=bold];
m4_253 -> m4_254  [color=green, key=0, style=solid];
m4_253 -> m4_255  [color=green, key=3, label="Local variable string actual", style=bold];
m4_254 -> m4_254  [color=green, key=3, label="Local variable string expected", style=bold];
m4_254 -> m4_255  [color=green, key=0, style=solid];
m4_254 -> m4_258  [color=green, key=1, label=expected, style=dashed];
m4_255 -> m4_256  [color=green, key=0, style=solid];
m4_255 -> m4_17  [color=green, key=2, style=dotted];
m4_255 -> m4_23  [color=green, key=2, style=dotted];
m4_255 -> m4_267  [color=green, key=1, label="lambda expression", style=dashed];
m4_255 -> m4_271  [color=green, key=1, label="lambda expression", style=dashed];
m4_255 -> m4_258  [color=green, key=1, label=actual, style=dashed];
m4_258 -> m4_259  [color=green, key=0, style=solid];
m4_258 -> m4_266  [color=green, key=2, style=dotted];
m4_256 -> m4_257  [color=green, key=0, style=solid];
m4_256 -> m4_264  [color=green, key=2, style=dotted];
m4_257 -> m4_258  [color=green, key=0, style=solid];
m4_257 -> m4_23  [color=green, key=2, style=dotted];
m4_257 -> m4_16  [color=green, key=2, style=dotted];
m4_257 -> m4_265  [color=green, key=2, style=dotted];
m4_259 -> m4_260  [color=green, key=0, style=solid];
m4_259 -> m4_185  [color=green, key=2, style=dotted];
m4_259 -> m4_115  [color=green, key=2, style=dotted];
m4_260 -> m4_261  [color=green, key=0, style=solid];
m4_260 -> m4_116  [color=green, key=2, style=dotted];
m4_260 -> m4_115  [color=green, key=2, style=dotted];
m4_261 -> m4_262  [color=green, key=0, style=solid];
m4_261 -> m4_116  [color=green, key=2, style=dotted];
m4_261 -> m4_115  [color=green, key=2, style=dotted];
m4_262 -> m4_263  [color=green, key=0, style=solid];
m4_262 -> m4_116  [color=green, key=2, style=dotted];
m4_262 -> m4_115  [color=green, key=2, style=dotted];
m4_263 -> m4_252  [color=blue, key=0, style=bold];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_28  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_11  [key=2, style=dotted];
m4_34 -> m4_32  [color=blue, key=0, style=bold];
m4_35 -> m4_33  [color=blue, key=0, style=bold];
m4_35 -> m4_36  [color=green, key=0, style=solid];
m4_194 -> m4_195  [key=0, style=solid];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_38  [key=2, style=dotted];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_205  [key=2, style=dotted];
m4_196 -> m4_198  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_196 -> m4_199  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_197 -> m4_185  [key=2, style=dotted];
m4_197 -> m4_115  [key=2, style=dotted];
m4_197 -> m4_198  [key=0, style=solid];
m4_200 -> m4_115  [key=2, style=dotted];
m4_200 -> m4_201  [key=0, style=solid];
m4_201 -> m4_115  [key=2, style=dotted];
m4_201 -> m4_202  [key=0, style=solid];
m4_202 -> m4_115  [key=2, style=dotted];
m4_202 -> m4_203  [key=0, style=solid];
m4_203 -> m4_115  [key=2, style=dotted];
m4_203 -> m4_204  [key=0, style=solid];
m4_198 -> m4_200  [color=darkseagreen4, key=1, label=usd, style=dashed];
m4_198 -> m4_201  [color=darkseagreen4, key=1, label=usd, style=dashed];
m4_198 -> m4_199  [key=0, style=solid];
m4_198 -> m4_206  [key=2, style=dotted];
m4_198 -> m4_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_199 -> m4_200  [key=0, style=solid];
m4_199 -> m4_202  [color=darkseagreen4, key=1, label=btc, style=dashed];
m4_199 -> m4_203  [color=darkseagreen4, key=1, label=btc, style=dashed];
m4_199 -> m4_206  [key=2, style=dotted];
m4_199 -> m4_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_204 -> m4_194  [color=blue, key=0, style=bold];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_17  [key=2, style=dotted];
m4_79 -> m4_19  [key=2, style=dotted];
m4_79 -> m4_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_82  [key=2, style=dotted];
m4_80 -> m4_68  [key=2, style=dotted];
m4_81 -> m4_79  [color=blue, key=0, style=bold];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_84  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_127  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_54  [key=2, style=dotted];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_3  [color=red, key=2, style=dotted];
m4_1 -> m4_14  [color=green, key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_15  [key=2, style=dotted];
m4_18 -> m4_19  [color=red, key=0, style=solid];
m4_19 -> m4_20  [color=red, key=0, style=solid];
m4_19 -> m4_7  [color=red, key=2, style=dotted];
m4_20 -> m4_18  [color=blue, key=0, style=bold];
m4_20 -> m4_21  [key=0, style=solid];
m4_125 -> m4_117  [color=blue, key=0, style=bold];
m4_70 -> m4_71  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_40  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m4_38 -> m4_16  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m4_7 -> m4_36  [key=0, style=solid];
m4_7 -> m4_39  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_7 -> m4_40  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_7 -> m4_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UniverseSettings", style=dashed];
m4_7 -> m4_48  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>", style=dashed];
m4_7 -> m4_5  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m4_7 -> m4_30  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>> selector", style=bold];
m4_7 -> m4_4  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>> selector", style=bold];
m4_7 -> m4_12  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>> selector", style=bold];
m4_7 -> m4_18  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>> selector", style=bold];
m4_7 -> m4_24  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>> selector", style=bold];
m4_7 -> m4_8  [color=green, key=0, style=solid];
m4_7 -> m4_15  [key=2, style=dotted];
m4_36 -> m4_37  [color=green, key=0, style=solid];
m4_36 -> m4_43  [key=2, style=dotted];
m4_36 -> m4_38  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_44  [key=2, style=dotted];
m4_39 -> m4_17  [key=2, style=dotted];
m4_39 -> m4_19  [key=2, style=dotted];
m4_39 -> m4_18  [key=2, style=dotted];
m4_39 -> m4_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_45  [key=2, style=dotted];
m4_40 -> m4_38  [color=blue, key=0, style=bold];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_46  [key=2, style=dotted];
m4_41 -> m4_0  [key=2, style=dotted];
m4_41 -> m4_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_40  [color=darkseagreen4, key=1, label=dataTimeZone, style=dashed];
m4_37 -> m4_35  [color=blue, key=0, style=bold];
m4_42 -> m4_7  [color=blue, key=0, style=bold];
m4_42 -> m4_23  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_24  [key=2, style=dotted];
m4_42 -> m4_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_67 -> m4_68  [key=0, style=solid];
m4_224 -> m4_225  [key=0, style=solid];
m4_224 -> m4_226  [color=darkseagreen4, key=1, label="System.Net.HttpStatusCode", style=dashed];
m4_224 -> m4_228  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_225 -> m4_17  [key=2, style=dotted];
m4_225 -> m4_19  [key=2, style=dotted];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_18  [key=2, style=dotted];
m4_225 -> m4_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_226 -> m4_17  [key=2, style=dotted];
m4_226 -> m4_19  [key=2, style=dotted];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_18  [key=2, style=dotted];
m4_226 -> m4_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_230  [key=2, style=dotted];
m4_227 -> m4_182  [key=2, style=dotted];
m4_227 -> m4_231  [key=2, style=dotted];
m4_228 -> m4_115  [key=2, style=dotted];
m4_228 -> m4_229  [key=0, style=solid];
m4_229 -> m4_224  [color=blue, key=0, style=bold];
m4_148 -> m4_61  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m4_134 -> m4_128  [color=blue, key=0, style=bold];
m4_166 -> m4_167  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_50  [key=2, style=dotted];
m4_48 -> m4_51  [key=2, style=dotted];
m4_48 -> m4_17  [key=2, style=dotted];
m4_48 -> m4_19  [key=2, style=dotted];
m4_48 -> m4_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_47 -> m4_48  [key=0, style=solid];
m4_49 -> m4_47  [color=blue, key=0, style=bold];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_53  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_58  [color=blue, key=0, style=bold];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_143  [key=2, style=dotted];
m4_141 -> m4_151  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_141 -> m4_153  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_141 -> m4_154  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_141 -> m4_155  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_139  [color=darkseagreen4, key=1, label="System.Net.HttpStatusCode", style=dashed];
m4_137 -> m4_141  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_137 -> m4_156  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_137 -> m4_142  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_137 -> m4_151  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m4_137 -> m4_152  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_137 -> m4_155  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_137 -> m4_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_111  [key=2, style=dotted];
m4_140 -> m4_157  [color=darkseagreen4, key=1, label=raised, style=dashed];
m4_140 -> m4_144  [color=darkseagreen4, key=1, label=raised, style=dashed];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_138  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m4_139 -> m4_137  [color=blue, key=0, style=bold];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_146  [key=2, style=dotted];
m4_139 -> m4_147  [key=2, style=dotted];
m4_142 -> m4_140  [color=blue, key=0, style=bold];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_148  [key=2, style=dotted];
m4_142 -> m4_149  [key=2, style=dotted];
m4_267 -> m4_268  [color=green, key=0, style=solid];
m4_271 -> m4_272  [color=green, key=0, style=solid];
m4_268 -> m4_269  [color=green, key=0, style=solid];
m4_268 -> m4_23  [color=green, key=2, style=dotted];
m4_268 -> m4_270  [color=green, key=2, style=dotted];
m4_269 -> m4_267  [color=blue, key=0, style=bold];
m4_272 -> m4_273  [color=green, key=0, style=solid];
m4_273 -> m4_271  [color=blue, key=0, style=bold];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_160  [key=2, style=dotted];
m4_156 -> m4_161  [key=2, style=dotted];
m4_156 -> m4_53  [key=2, style=dotted];
m4_156 -> m4_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_249 -> m4_250  [key=0, style=solid];
m4_249 -> m4_230  [key=2, style=dotted];
m4_249 -> m4_251  [key=2, style=dotted];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_27  [color=blue, key=0, style=bold];
m4_21 -> m4_23  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_24  [key=2, style=dotted];
m4_21 -> m4_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_30 -> m4_23  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_24  [key=2, style=dotted];
m4_30 -> m4_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_233 -> m4_23  [key=2, style=dotted];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_24  [key=2, style=dotted];
m4_233 -> m4_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_240 -> m4_23  [key=2, style=dotted];
m4_240 -> m4_241  [key=0, style=solid];
m4_240 -> m4_24  [key=2, style=dotted];
m4_240 -> m4_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_121 -> m4_115  [key=2, style=dotted];
m4_121 -> m4_122  [key=0, style=solid];
m4_123 -> m4_115  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_126  [key=2, style=dotted];
m4_122 -> m4_115  [key=2, style=dotted];
m4_122 -> m4_123  [key=0, style=solid];
m4_151 -> m4_115  [key=2, style=dotted];
m4_151 -> m4_152  [key=0, style=solid];
m4_153 -> m4_115  [key=2, style=dotted];
m4_153 -> m4_154  [key=0, style=solid];
m4_154 -> m4_115  [key=2, style=dotted];
m4_154 -> m4_155  [key=0, style=solid];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_44  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_11  [color=blue, key=0, style=bold];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_71  [color=blue, key=0, style=bold];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_83  [color=blue, key=0, style=bold];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_44  [key=2, style=dotted];
m4_119 -> m4_123  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m4_119 -> m4_119  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m4_119 -> m4_120  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_122  [color=darkseagreen4, key=1, label=actualQuantity, style=dashed];
m4_120 -> m4_120  [color=darkseagreen4, key=1, label=actualQuantity, style=dashed];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_159  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_127  [key=2, style=dotted];
m4_162 -> m4_163  [key=0, style=solid];
m4_232 -> m4_233  [key=0, style=solid];
m4_239 -> m4_240  [key=0, style=solid];
m4_248 -> m4_249  [key=0, style=solid];
m4_250 -> m4_248  [color=blue, key=0, style=bold];
m4_31 -> m4_29  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_7  [key=2, style=dotted];
m4_22 -> m4_20  [color=blue, key=0, style=bold];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_11  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_7  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_30  [color=blue, key=0, style=bold];
m4_43 -> m4_41  [color=blue, key=0, style=bold];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_44  [color=darkorchid, key=3, label="Field variable string _brokerId", style=bold];
m4_234 -> m4_232  [color=blue, key=0, style=bold];
m4_235 -> m4_236  [key=0, style=solid];
m4_241 -> m4_239  [color=blue, key=0, style=bold];
m4_242 -> m4_243  [key=0, style=solid];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_153  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_150 -> m4_154  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_150 -> m4_155  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_157  [key=0, style=solid];
m4_57 -> m4_55  [color=blue, key=0, style=bold];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_59  [key=2, style=dotted];
m4_57 -> m4_0  [key=2, style=dotted];
m4_57 -> m4_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_45  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_72 -> m4_70  [color=blue, key=0, style=bold];
m4_72 -> m4_73  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_73  [key=2, style=dotted];
m4_76 -> m4_74  [color=blue, key=0, style=bold];
m4_76 -> m4_77  [key=0, style=solid];
m4_75 -> m4_76  [key=0, style=solid];
m4_87 -> m4_85  [color=blue, key=0, style=bold];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_90  [color=darkseagreen4, key=1, label=dataTimeZone, style=dashed];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_88  [key=2, style=dotted];
m4_86 -> m4_43  [key=2, style=dotted];
m4_91 -> m4_89  [color=blue, key=0, style=bold];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_93  [key=2, style=dotted];
m4_91 -> m4_94  [key=2, style=dotted];
m4_91 -> m4_0  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_45  [key=2, style=dotted];
m4_158 -> m4_150  [color=blue, key=0, style=bold];
m4_164 -> m4_162  [color=blue, key=0, style=bold];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_163  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m4_163 -> m4_165  [key=2, style=dotted];
m4_163 -> m4_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_207 -> m4_208  [key=0, style=solid];
m4_210 -> m4_211  [key=0, style=solid];
m4_27 -> m4_25  [color=blue, key=0, style=bold];
m4_27 -> m4_28  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_28  [key=2, style=dotted];
m4_26 -> m4_24  [color=blue, key=0, style=bold];
m4_46 -> m4_44  [color=blue, key=0, style=bold];
m4_237 -> m4_235  [color=blue, key=0, style=bold];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_238  [key=2, style=dotted];
m4_244 -> m4_242  [color=blue, key=0, style=bold];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_238  [key=2, style=dotted];
m4_209 -> m4_207  [color=blue, key=0, style=bold];
m4_208 -> m4_209  [key=0, style=solid];
m4_212 -> m4_210  [color=blue, key=0, style=bold];
m4_211 -> m4_212  [key=0, style=solid];
m4_167 -> m4_168  [key=0, style=solid];
m4_168 -> m4_166  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [color=green, key=0, style=solid];
m4_8 -> m4_15  [color=green, key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_16  [key=2, style=dotted];
m4_9 -> m4_11  [key=2, style=dotted];
m4_11 -> m4_12  [color=green, key=0, style=solid];
m4_11 -> m4_15  [key=2, style=dotted];
m4_11 -> m4_17  [key=2, style=dotted];
m4_11 -> m4_18  [key=2, style=dotted];
m4_11 -> m4_19  [key=2, style=dotted];
m4_11 -> m4_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_11 -> m4_52  [key=0, style=solid];
m4_11 -> m4_55  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_11 -> m4_56  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_11 -> m4_57  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_11 -> m4_61  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_11 -> m4_65  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_11 -> m4_5  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m4_11 -> m4_33  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m4_11 -> m4_8  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m4_11 -> m4_21  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m4_11 -> m4_27  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m4_3 -> m4_15  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_10 -> m4_15  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_17  [key=2, style=dotted];
m4_10 -> m4_19  [key=2, style=dotted];
m4_10 -> m4_18  [key=2, style=dotted];
m4_10 -> m4_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_10 -> m4_8  [color=blue, key=0, style=bold];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_70  [key=2, style=dotted];
m4_68 -> m4_0  [key=2, style=dotted];
m4_50 -> m4_17  [key=2, style=dotted];
m4_50 -> m4_19  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_245 -> m4_246  [key=0, style=solid];
m4_246 -> m4_23  [key=2, style=dotted];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_247 -> m4_245  [color=blue, key=0, style=bold];
m4_130 -> m4_54  [key=2, style=dotted];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_136  [key=2, style=dotted];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_135  [key=2, style=dotted];
m4_129 -> m4_131  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_129 -> m4_132  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_129 -> m4_133  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_15 -> m4_16  [color=red, key=0, style=solid];
m4_16 -> m4_17  [color=red, key=0, style=solid];
m4_16 -> m4_11  [color=red, key=2, style=dotted];
m4_17 -> m4_15  [color=blue, key=0, style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_11  [key=2, style=dotted];
m4_69 -> m4_67  [color=blue, key=0, style=bold];
m4_132 -> m4_115  [key=2, style=dotted];
m4_132 -> m4_133  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_56  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_43  [key=2, style=dotted];
m4_52 -> m4_54  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m4_52 -> m4_47  [color=blue, key=0, style=bold];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_75  [key=2, style=dotted];
m4_77 -> m4_0  [key=2, style=dotted];
m4_78 -> m4_76  [color=blue, key=0, style=bold];
m4_78 -> m4_17  [key=2, style=dotted];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_67  [key=2, style=dotted];
m4_78 -> m4_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_90  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m4_82 -> m4_86  [key=0, style=solid];
m4_82 -> m4_89  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_82 -> m4_90  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_82 -> m4_91  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_82 -> m4_5  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m4_82 -> m4_79  [color=darkorchid, key=3, label="Parameter variable System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m4_82 -> m4_83  [color=darkorchid, key=3, label="Parameter variable System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m4_82 -> m4_69  [key=2, style=dotted];
m4_149 -> m4_149  [color=darkorchid, key=3, label="Field variable string _brokerId", style=bold];
m4_149 -> m4_141  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_187 -> m4_188  [key=0, style=solid];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_193  [key=2, style=dotted];
m4_188 -> m4_190  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_188 -> m4_191  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_189 -> m4_115  [key=2, style=dotted];
m4_189 -> m4_190  [key=0, style=solid];
m4_190 -> m4_115  [key=2, style=dotted];
m4_190 -> m4_191  [key=0, style=solid];
m4_191 -> m4_115  [key=2, style=dotted];
m4_191 -> m4_192  [key=0, style=solid];
m4_192 -> m4_187  [color=blue, key=0, style=bold];
m4_144 -> m4_53  [key=2, style=dotted];
m4_144 -> m4_114  [key=2, style=dotted];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_1  [color=red, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_16  [color=red, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_19  [color=red, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_68  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_107  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_112  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_144 -> m4_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_145 -> m4_137  [color=blue, key=0, style=bold];
m4_145 -> m4_48  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>", style=dashed];
m4_83 -> m4_77  [color=blue, key=0, style=bold];
m4_83 -> m4_84  [key=0, style=solid];
m4_128 -> m4_129  [key=0, style=solid];
m4_133 -> m4_115  [key=2, style=dotted];
m4_133 -> m4_134  [key=0, style=solid];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_54  [key=2, style=dotted];
m4_131 -> m4_136  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_82  [key=2, style=dotted];
m4_147 -> m4_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_147 -> m4_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_146 -> m4_61  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_146 -> m4_65  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_23 -> m4_21  [color=blue, key=0, style=bold];
m4_169 -> m4_170  [key=0, style=solid];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_38  [key=2, style=dotted];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_181  [key=2, style=dotted];
m4_171 -> m4_182  [key=2, style=dotted];
m4_171 -> m4_183  [key=2, style=dotted];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> n63  [key=2, style=dotted];
m4_172 -> m4_174  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_172 -> m4_175  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_172 -> m4_176  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_172 -> m4_177  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_172 -> m4_178  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_172 -> m4_179  [color=darkseagreen4, key=1, label=actual, style=dashed];
m4_173 -> m4_185  [key=2, style=dotted];
m4_173 -> m4_115  [key=2, style=dotted];
m4_173 -> m4_174  [key=0, style=solid];
m4_174 -> m4_115  [key=2, style=dotted];
m4_174 -> m4_116  [key=2, style=dotted];
m4_174 -> m4_175  [key=0, style=solid];
m4_175 -> m4_115  [key=2, style=dotted];
m4_175 -> m4_116  [key=2, style=dotted];
m4_175 -> m4_176  [key=0, style=solid];
m4_176 -> m4_115  [key=2, style=dotted];
m4_176 -> m4_116  [key=2, style=dotted];
m4_176 -> m4_177  [key=0, style=solid];
m4_177 -> m4_115  [key=2, style=dotted];
m4_177 -> m4_178  [key=0, style=solid];
m4_177 -> m4_186  [key=2, style=dotted];
m4_178 -> m4_115  [key=2, style=dotted];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_186  [key=2, style=dotted];
m4_179 -> m4_115  [key=2, style=dotted];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_186  [key=2, style=dotted];
m4_180 -> m4_169  [color=blue, key=0, style=bold];
m4_274 -> m4_275  [color=green, key=0, style=solid];
m4_275 -> m4_276  [color=green, key=0, style=solid];
m4_276 -> m4_277  [color=green, key=0, style=solid];
m4_276 -> m4_112  [color=green, key=2, style=dotted];
m4_276 -> m4_113  [color=green, key=2, style=dotted];
m4_277 -> m4_278  [color=green, key=0, style=solid];
m4_277 -> m4_116  [color=green, key=2, style=dotted];
m4_277 -> m4_280  [color=green, key=1, label=actual, style=dashed];
m4_277 -> m4_281  [color=green, key=1, label=actual, style=dashed];
m4_278 -> m4_279  [color=green, key=0, style=solid];
m4_278 -> m4_115  [color=green, key=2, style=dotted];
m4_280 -> m4_281  [color=green, key=0, style=solid];
m4_280 -> m4_115  [color=green, key=2, style=dotted];
m4_281 -> m4_282  [color=green, key=0, style=solid];
m4_281 -> m4_115  [color=green, key=2, style=dotted];
m4_279 -> m4_280  [color=green, key=0, style=solid];
m4_279 -> m4_116  [color=green, key=2, style=dotted];
m4_279 -> m4_115  [color=green, key=2, style=dotted];
m4_282 -> m4_274  [color=blue, key=0, style=bold];
m4_283 -> m4_1  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_8  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_12  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_255  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_256  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_257  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_259  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_260  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_261  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_262  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_275  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_276  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_277  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_279  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_9  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_39  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_48  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_62  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_63  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_64  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_65  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_78  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_79  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_80  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_81  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_82  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_93  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_98  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_102  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_103  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_105  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_129  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_139  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_141  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_156  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_142  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_170  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_171  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_172  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_188  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_195  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_196  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_214  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_215  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_216  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_225  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_226  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_227  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_246  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_283 -> m4_249  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m4_289 -> m4_156  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_289 -> m4_152  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_286 -> m4_121  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_288 -> m4_151  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m4_284 -> m4_119  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m4_285 -> m4_120  [color=darkseagreen4, key=1, label=actualQuantity, style=dashed];
m4_290 -> m4_155  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_291 -> m4_157  [color=darkseagreen4, key=1, label=raised, style=dashed];
m4_287 -> m4_124  [color=darkseagreen4, key=1, label=raised, style=dashed];
m5_124 -> m5_125  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_77 -> m5_75  [color=blue, key=0, style=bold];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_127  [key=2, style=dotted];
m5_125 -> m5_128  [key=2, style=dotted];
m5_125 -> m5_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m5_126 -> m5_124  [color=blue, key=0, style=bold];
m5_60 -> m5_61  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_63  [key=2, style=dotted];
m5_62 -> m5_60  [color=blue, key=0, style=bold];
m5_82 -> m5_83  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_73  [key=2, style=dotted];
m5_83 -> m5_104  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_83 -> m5_107  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_83 -> m5_112  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_37  [key=2, style=dotted];
m5_84 -> m5_86  [color=darkseagreen4, key=1, label=req, style=dashed];
m5_104 -> m5_89  [key=0, style=solid];
m5_104 -> m5_51  [key=2, style=dotted];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_112  [key=0, style=solid];
m5_107 -> m5_109  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_107 -> m5_125  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_107 -> m5_111  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_112 -> m5_113  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_45  [key=2, style=dotted];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_46  [key=2, style=dotted];
m5_86 -> m5_88  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_86 -> m5_97  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_105  [key=0, style=solid];
m5_87 -> m5_107  [key=0, style=solid];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_47  [key=2, style=dotted];
m5_97 -> m5_89  [key=0, style=solid];
m5_97 -> m5_48  [key=2, style=dotted];
m5_97 -> m5_49  [key=2, style=dotted];
m5_105 -> m5_106  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_105  [key=0, style=solid];
m5_89 -> m5_107  [key=0, style=solid];
m5_89 -> m5_91  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_89 -> m5_92  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_89 -> m5_93  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_89 -> m5_94  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_89 -> m5_95  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_89 -> m5_96  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_89 -> m5_97  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_89 -> m5_98  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_89 -> m5_99  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_89 -> m5_100  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_89 -> m5_102  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_89 -> m5_103  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_98  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_90 -> m5_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_90 -> m5_100  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_90 -> m5_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_90 -> m5_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_90 -> m5_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_90 -> m5_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_93  [key=0, style=solid];
m5_92 -> m5_98  [key=0, style=solid];
m5_92 -> m5_114  [key=2, style=dotted];
m5_92 -> m5_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_92 -> m5_100  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_92 -> m5_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_92 -> m5_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_92 -> m5_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_92 -> m5_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_95  [key=0, style=solid];
m5_94 -> m5_98  [key=0, style=solid];
m5_94 -> m5_115  [key=2, style=dotted];
m5_94 -> m5_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_94 -> m5_100  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_94 -> m5_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_94 -> m5_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_94 -> m5_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_94 -> m5_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_97  [key=0, style=solid];
m5_96 -> m5_98  [key=0, style=solid];
m5_96 -> m5_116  [key=2, style=dotted];
m5_96 -> m5_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_96 -> m5_100  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_96 -> m5_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_96 -> m5_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_96 -> m5_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_96 -> m5_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_98 -> m5_99  [key=0, style=solid];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_73  [key=2, style=dotted];
m5_99 -> m5_117  [key=2, style=dotted];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_118  [key=2, style=dotted];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_119  [key=2, style=dotted];
m5_103 -> m5_104  [key=0, style=solid];
m5_101 -> m5_102  [key=0, style=solid];
m5_106 -> m5_113  [key=0, style=solid];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_107  [key=0, style=solid];
m5_108 -> m5_120  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_121  [key=2, style=dotted];
m5_109 -> m5_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_109 -> m5_111  [color=darkseagreen4, key=1, label=cached, style=dashed];
m5_111 -> m5_107  [key=0, style=solid];
m5_111 -> m5_123  [key=2, style=dotted];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_107  [key=0, style=solid];
m5_110 -> m5_122  [key=2, style=dotted];
m5_113 -> m5_82  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_7  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_25  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_26  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_29  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_30  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_32  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_0 -> m5_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_37  [key=2, style=dotted];
m5_1 -> m5_10  [color=darkseagreen4, key=1, label=req, style=dashed];
m5_1 -> m5_11  [color=darkseagreen4, key=1, label=req, style=dashed];
m5_1 -> m5_12  [color=darkseagreen4, key=1, label=req, style=dashed];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_39  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_40  [key=2, style=dotted];
m5_4 -> m5_41  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_42  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_43  [key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_21  [key=0, style=solid];
m5_19 -> m5_50  [key=2, style=dotted];
m5_20 -> m5_23  [key=0, style=solid];
m5_20 -> m5_51  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_51  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_52  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_25  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_53  [key=2, style=dotted];
m5_24 -> m5_52  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_54  [key=2, style=dotted];
m5_25 -> m5_55  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_30  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_54  [key=2, style=dotted];
m5_27 -> m5_55  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_56  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_57  [key=2, style=dotted];
m5_30 -> m5_58  [key=2, style=dotted];
m5_30 -> m5_49  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_54  [key=2, style=dotted];
m5_32 -> m5_55  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_59  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_38  [key=2, style=dotted];
m5_2 -> m5_4  [color=darkseagreen4, key=1, label=payload, style=dashed];
m5_2 -> m5_5  [color=darkseagreen4, key=1, label=payload, style=dashed];
m5_2 -> m5_6  [color=darkseagreen4, key=1, label=payload, style=dashed];
m5_2 -> m5_7  [color=darkseagreen4, key=1, label=payload, style=dashed];
m5_2 -> m5_9  [color=darkseagreen4, key=1, label=payload, style=dashed];
m5_2 -> m5_10  [color=darkseagreen4, key=1, label=payload, style=dashed];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_44  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_45  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_46  [key=2, style=dotted];
m5_12 -> m5_14  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_12 -> m5_16  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_12 -> m5_33  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_9 -> m5_10  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_32  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_47  [key=2, style=dotted];
m5_14 -> m5_18  [color=darkseagreen4, key=1, label=raw, style=dashed];
m5_14 -> m5_27  [color=darkseagreen4, key=1, label=raw, style=dashed];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_48  [key=2, style=dotted];
m5_16 -> m5_49  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m5_18 -> m5_21  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m5_17 -> m5_36  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_31 -> m5_36  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_57  [key=2, style=dotted];
m5_34 -> m5_49  [key=2, style=dotted];
m5_35 -> m5_36  [key=0, style=solid];
m5_36 -> m5_0  [color=blue, key=0, style=bold];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_66  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_73  [key=2, style=dotted];
m5_65 -> m5_70  [color=darkseagreen4, key=1, label=success, style=dashed];
m5_65 -> m5_71  [color=darkseagreen4, key=1, label=success, style=dashed];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_71  [key=0, style=solid];
m5_70 -> m5_66  [key=0, style=solid];
m5_70 -> m5_51  [key=2, style=dotted];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_74  [key=2, style=dotted];
m5_71 -> m5_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_37  [key=2, style=dotted];
m5_67 -> m5_69  [color=darkseagreen4, key=1, label=req, style=dashed];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_45  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_46  [key=2, style=dotted];
m5_72 -> m5_64  [color=blue, key=0, style=bold];
m5_129 -> m5_130  [key=0, style=solid];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_73  [key=2, style=dotted];
m5_130 -> m5_143  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_130 -> m5_144  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_37  [key=2, style=dotted];
m5_131 -> m5_133  [color=darkseagreen4, key=1, label=req, style=dashed];
m5_143 -> m5_135  [key=0, style=solid];
m5_143 -> m5_151  [key=2, style=dotted];
m5_143 -> m5_118  [key=2, style=dotted];
m5_143 -> m5_147  [key=2, style=dotted];
m5_143 -> m5_152  [key=2, style=dotted];
m5_143 -> m5_51  [key=2, style=dotted];
m5_144 -> m5_145  [key=0, style=solid];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_45  [key=2, style=dotted];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_46  [key=2, style=dotted];
m5_133 -> m5_135  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_144  [key=0, style=solid];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_144  [key=0, style=solid];
m5_135 -> m5_47  [key=2, style=dotted];
m5_135 -> m5_137  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_135 -> m5_138  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_135 -> m5_141  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_135 -> m5_143  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_136 -> m5_137  [key=0, style=solid];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_141  [key=0, style=solid];
m5_137 -> m5_146  [key=2, style=dotted];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_147  [key=2, style=dotted];
m5_138 -> n130  [key=2, style=dotted];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_118  [key=2, style=dotted];
m5_141 -> m5_150  [key=2, style=dotted];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_149  [key=2, style=dotted];
m5_139 -> m5_150  [key=2, style=dotted];
m5_140 -> m5_143  [key=0, style=solid];
m5_142 -> m5_143  [key=0, style=solid];
m5_145 -> m5_129  [color=blue, key=0, style=bold];
m5_78 -> m5_79  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_81  [key=2, style=dotted];
m5_80 -> m5_78  [color=blue, key=0, style=bold];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_183  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_182 -> m5_183  [key=0, style=solid];
m5_182 -> m5_188  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m5_182 -> m5_189  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m5_183 -> m5_184  [key=0, style=solid];
m5_183 -> m5_189  [key=0, style=solid];
m5_188 -> m5_183  [key=0, style=solid];
m5_188 -> m5_188  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m5_188 -> m5_189  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m5_189 -> m5_190  [key=0, style=solid];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_37  [key=2, style=dotted];
m5_184 -> m5_186  [color=darkseagreen4, key=1, label=req, style=dashed];
m5_185 -> m5_186  [key=0, style=solid];
m5_185 -> m5_45  [key=2, style=dotted];
m5_186 -> m5_187  [key=0, style=solid];
m5_186 -> m5_46  [key=2, style=dotted];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_47  [key=2, style=dotted];
m5_190 -> m5_181  [color=blue, key=0, style=bold];
m5_153 -> m5_154  [key=0, style=solid];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_73  [key=2, style=dotted];
m5_154 -> m5_161  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_154 -> m5_164  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_154 -> m5_166  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_154 -> m5_167  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_37  [key=2, style=dotted];
m5_155 -> m5_157  [color=darkseagreen4, key=1, label=req, style=dashed];
m5_161 -> m5_158  [key=0, style=solid];
m5_161 -> m5_169  [key=2, style=dotted];
m5_161 -> m5_51  [key=2, style=dotted];
m5_164 -> m5_158  [key=0, style=solid];
m5_164 -> m5_169  [key=2, style=dotted];
m5_164 -> m5_152  [key=2, style=dotted];
m5_164 -> m5_51  [key=2, style=dotted];
m5_166 -> m5_158  [key=0, style=solid];
m5_166 -> m5_169  [key=2, style=dotted];
m5_166 -> m5_152  [key=2, style=dotted];
m5_166 -> m5_51  [key=2, style=dotted];
m5_167 -> m5_168  [key=0, style=solid];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_45  [key=2, style=dotted];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_46  [key=2, style=dotted];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_167  [key=0, style=solid];
m5_158 -> m5_47  [key=2, style=dotted];
m5_158 -> m5_160  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_158 -> m5_161  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_158 -> m5_162  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_158 -> m5_163  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_158 -> m5_164  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_158 -> m5_165  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_158 -> m5_166  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_158  [key=0, style=solid];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_162  [key=0, style=solid];
m5_162 -> m5_163  [key=0, style=solid];
m5_162 -> m5_165  [key=0, style=solid];
m5_162 -> m5_170  [key=2, style=dotted];
m5_163 -> m5_164  [key=0, style=solid];
m5_163 -> m5_171  [key=2, style=dotted];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_172  [key=2, style=dotted];
m5_165 -> m5_150  [key=2, style=dotted];
m5_168 -> m5_153  [color=blue, key=0, style=bold];
m5_173 -> m5_174  [key=0, style=solid];
m5_174 -> m5_175  [key=0, style=solid];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_179  [key=2, style=dotted];
m5_175 -> m5_177  [color=darkseagreen4, key=1, label=copy, style=dashed];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_180  [key=2, style=dotted];
m5_177 -> m5_178  [key=0, style=solid];
m5_178 -> m5_173  [color=blue, key=0, style=bold];
m5_191 -> m5_8  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_16  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_19  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_20  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_25  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_34  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_68  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_69  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_79  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_85  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_86  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_97  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_102  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_109  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_111  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_132  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_133  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_139  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_141  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_143  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_156  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_163  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_165  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_174  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_175  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_176  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_185  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_191 -> m5_186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m5_192 -> m5_125  [color=darkseagreen4, key=1, label=item, style=dashed];
}
