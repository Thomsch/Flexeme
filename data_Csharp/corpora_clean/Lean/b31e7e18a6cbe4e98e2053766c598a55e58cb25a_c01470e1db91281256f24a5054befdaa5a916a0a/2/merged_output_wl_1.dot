digraph  {
m0_456 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1135-1135"];
m0_457 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ULTOSC({0},{1},{2})'', period1, period2, period3), resolution)", span="1137-1137"];
m0_459 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, ultosc, resolution, selector)", span="1139-1139"];
m0_458 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var ultosc = new UltimateOscillator(name, period1, period2, period3)", span="1138-1138"];
m0_460 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return ultosc;", span="1140-1140"];
m0_461 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1135-1135"];
m0_10 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Assert.IsNull(newTradeBar)", span="53-53"];
m0_11 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="var bar3 = new Tick\r\n            {\r\n                Symbol = Symbols.SPY,\r\n                Time = reference.AddHours(2),\r\n                Value = 1,\r\n                Quantity = 10\r\n            }", span="54-60"];
m0_13 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Assert.IsNull(newTradeBar)", span="62-62"];
m0_12 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="consolidator.Update(bar3)", span="61-61"];
m0_14 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="var bar4 = new Tick\r\n            {\r\n                Symbol = Symbols.SPY,\r\n                Time = reference.AddHours(3),\r\n                Value = 9,\r\n                Quantity = 20\r\n            }", span="64-70"];
m0_15 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="consolidator.Update(bar4)", span="71-71"];
m0_92 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.IsNotNull(consolidated)", span="159-159"];
m0_547 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1348-1348"];
m0_548 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="1351-1351"];
m0_549 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1348-1348"];
m0_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="304-304"];
m0_184 [cluster="QuantConnect.Indicators.Identity.Identity(string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27"];
m0_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1085-1085"];
m0_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''TR'', resolution)", span="1087-1087"];
m0_438 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, tr, resolution, selector)", span="1089-1089"];
m0_437 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var tr = new TrueRange(name)", span="1088-1088"];
m0_439 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return tr;", span="1090-1090"];
m0_440 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1085-1085"];
m0_354 [cluster="QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", span="69-69"];
m0_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.MASS(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MASS(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="676-676"];
m0_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.MASS(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''MII'' + emaPeriod + sumPeriod, resolution)", span="678-678"];
m0_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.MASS(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, mi, resolution, selector)", span="680-680"];
m0_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.MASS(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="var mi = new MassIndex(name, emaPeriod, sumPeriod)", span="679-679"];
m0_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.MASS(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="return mi;", span="681-681"];
m0_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.MASS(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MASS(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="676-676"];
m0_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="475-475"];
m0_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="477-477"];
m0_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, identity, resolution, selector)", span="479-479"];
m0_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="var identity = new Identity(name)", span="478-478"];
m0_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="return identity;", span="480-480"];
m0_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="475-475"];
m0_477 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1186-1186"];
m0_478 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, ''WILR'' + period, resolution)", span="1188-1188"];
m0_480 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, williamspercentr, resolution, selector)", span="1190-1190"];
m0_479 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var williamspercentr = new WilliamsPercentR(name, period)", span="1189-1189"];
m0_481 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return williamspercentr;", span="1191-1191"];
m0_482 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1186-1186"];
m0_403 [cluster="QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", span="54-54"];
m0_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="279-279"];
m0_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="1005-1005"];
m0_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="return STO(symbol, period, period, 3, resolution);", span="1007-1007"];
m0_406 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="1005-1005"];
m0_158 [cluster="QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", span="67-67"];
m0_462 [cluster="QuantConnect.Indicators.UltimateOscillator.UltimateOscillator(string, int, int, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.UltimateOscillator.UltimateOscillator(string, int, int, int)", span="55-55"];
m0_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="891-891"];
m0_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, ''ROC'' + period, resolution)", span="893-893"];
m0_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, rateofchange, resolution, selector)", span="895-895"];
m0_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var rateofchange = new RateOfChange(name, period)", span="894-894"];
m0_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return rateofchange;", span="896-896"];
m0_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="891-891"];
m0_252 [cluster="System.Type.IsAssignableFrom(System.Type)", file="AlgorithmTradingTests.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m0_414 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1037-1037"];
m0_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, ''SWISS'' + period, resolution)", span="1039-1039"];
m0_417 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, swiss, resolution, selector)", span="1041-1041"];
m0_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var swiss = new SwissArmyKnife(name, period, delta, tool)", span="1040-1040"];
m0_418 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return swiss;", span="1042-1042"];
m0_419 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1037-1037"];
m0_413 [cluster="QuantConnect.Indicators.Sum.Sum(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.Sum.Sum(string, int)", span="44-44"];
m0_531 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m0_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="788-788"];
m0_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, ''MOMP'' + period, resolution)", span="790-790"];
m0_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, momentum, resolution, selector)", span="792-792"];
m0_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var momentum = new MomentumPercent(name, period)", span="791-791"];
m0_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return momentum;", span="793-793"];
m0_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="788-788"];
m0_86 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="var consolidator = new TickConsolidator(TimeSpan.FromDays(1))", span="148-148"];
m0_87 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="consolidator.DataConsolidated += (sender, bar) =>\r\n            {\r\n                consolidated = bar;\r\n            }", span="149-152"];
m0_89 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="consolidator.Update(new Tick { Time = reference.AddSeconds(5) })", span="155-155"];
m0_88 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="var reference = new DateTime(2015, 04, 13)", span="154-154"];
m0_90 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.IsNull(consolidated)", span="156-156"];
m0_91 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="consolidator.Update(new Tick { Time = reference.AddDays(1).AddSeconds(15) })", span="158-158"];
m0_539 [cluster="System.Func<T, TResult>.Invoke(T)", file="AlgorithmTradingTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="857-857"];
m0_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''PSAR({0},{1},{2})'', afStart, afIncrement, afMax), resolution)", span="859-859"];
m0_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, psar, resolution, selector)", span="861-861"];
m0_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var psar = new ParabolicStopAndReverse(name, afStart, afIncrement, afMax)", span="860-860"];
m0_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return psar;", span="862-862"];
m0_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="857-857"];
m0_503 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="AlgorithmTradingTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m0_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''AROON({0},{1})'', upPeriod, downPeriod), resolution)", span="174-174"];
m0_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var aroon = new AroonOscillator(name, upPeriod, downPeriod)", span="175-175"];
m0_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, aroon, resolution, selector)", span="176-176"];
m0_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return aroon;", span="177-177"];
m0_64 [cluster="QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", span="61-61"];
m0_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, ''ATR'' + period, resolution)", span="192-192"];
m0_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="190-190"];
m0_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var bb = new BollingerBands(name, period, k, movingAverageType)", span="211-211"];
m0_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="172-172"];
m0_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="190-190"];
m0_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var atr = new AverageTrueRange(name, period, type)", span="193-193"];
m0_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, atr, resolution, selector)", span="194-194"];
m0_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return atr;", span="195-195"];
m0_71 [cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="56-56"];
m0_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="208-208"];
m0_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''BB({0},{1})'', period, k), resolution)", span="210-210"];
m0_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, bb, resolution, selector)", span="212-212"];
m0_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return bb;", span="213-213"];
m0_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="208-208"];
m0_603 [cluster="QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", span="39-39"];
m0_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="924-924"];
m0_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''ROCR'' + period, resolution)", span="926-926"];
m0_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, rocr, resolution, selector)", span="928-928"];
m0_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var rocr = new RateOfChangeRatio(name, period)", span="927-927"];
m0_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return rocr;", span="929-929"];
m0_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="924-924"];
m0_284 [cluster="QuantConnect.Indicators.MidPrice.MidPrice(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.MidPrice.MidPrice(string, int)", span="35-35"];
m0_601 [cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", span="30-30"];
m0_78 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="53-53"];
m0_23 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(bar4.EndTime, newTradeBar.EndTime)", span="80-80"];
m0_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="158-158"];
m0_151 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", span="40-40"];
m0_143 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="consolidated = bar", span="183-183"];
m0_574 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="var subscription = GetSubscription(symbol)", span="1428-1428"];
m0_575 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="!timeSpan.HasValue", span="1431-1431"];
m0_576 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="timeSpan = subscription.Resolution.ToTimeSpan()", span="1433-1433"];
m0_577 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="timeSpan.Value < subscription.Resolution.ToTimeSpan()", span="1438-1438"];
m0_578 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="throw new ArgumentException(string.Format(''Unable to create {0} consolidator because {0} is registered for {1} data. '' +\r\n                                                          ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, subscription.Resolution)\r\n                );", span="1440-1443"];
m0_579 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="1448-1448"];
m0_581 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="typeof(QuoteBar).IsAssignableFrom(subscription.Type)", span="1455-1455"];
m0_583 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="typeof(Tick).IsAssignableFrom(subscription.Type)", span="1462-1462"];
m0_586 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="subscription.TickType", span="1470-1470"];
m0_592 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="typeof(DynamicData).IsAssignableFrom(subscription.Type)", span="1484-1484"];
m0_580 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="return new TradeBarConsolidator(timeSpan.Value);", span="1450-1450"];
m0_582 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="return new QuoteBarConsolidator(timeSpan.Value);", span="1457-1457"];
m0_584 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="timeSpan.Value.Ticks == 0", span="1465-1465"];
m0_588 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="return new OpenInterestConsolidator(timeSpan.Value);", span="1473-1473"];
m0_590 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="return new TickQuoteBarConsolidator(timeSpan.Value);", span="1476-1476"];
m0_591 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="return new TickConsolidator(timeSpan.Value);", span="1479-1479"];
m0_593 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="return new DynamicDataConsolidator(timeSpan.Value);", span="1486-1486"];
m0_594 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="return new BaseDataConsolidator(timeSpan.Value);", span="1490-1490"];
m0_587 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="TickType.OpenInterest", span="1472-1472"];
m0_589 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="TickType.Quote", span="1475-1475"];
m0_585 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="return new IdentityDataConsolidator<Tick>();", span="1467-1467"];
m0_595 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1426-1426"];
m0_58 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="90-93"];
m0_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="86-86"];
m0_599 [cluster="QuantConnect.Data.Consolidators.OpenInterestConsolidator.OpenInterestConsolidator(System.TimeSpan)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Data.Consolidators.OpenInterestConsolidator.OpenInterestConsolidator(System.TimeSpan)", span="43-43"];
m0_46 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInCountModeWithDailyData()", file="AlgorithmTradingTests.cs", label="consolidated = null", span="104-104"];
m0_9 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="consolidator.Update(bar2)", span="52-52"];
m0_596 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", span="44-44"];
m0_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="576-576"];
m0_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, ''LWMA'' + period, resolution)", span="578-578"];
m0_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, lwma, resolution, selector)", span="580-580"];
m0_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var lwma = new LinearWeightedMovingAverage(name, period)", span="579-579"];
m0_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return lwma;", span="581-581"];
m0_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="576-576"];
m0_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1117-1117"];
m0_450 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''TRIX'' + period, resolution)", span="1119-1119"];
m0_452 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, trix, resolution, selector)", span="1121-1121"];
m0_451 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var trix = new Trix(name, period)", span="1120-1120"];
m0_453 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return trix;", span="1122-1122"];
m0_454 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1117-1117"];
m0_319 [cluster="QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", span="38-38"];
m0_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="804-804"];
m0_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''NATR'' + period, resolution)", span="806-806"];
m0_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, natr, resolution, selector)", span="808-808"];
m0_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var natr = new NormalizedAverageTrueRange(name, period)", span="807-807"];
m0_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return natr;", span="809-809"];
m0_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="804-804"];
m0_561 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="1382-1386"];
m0_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var adxr = new AverageDirectionalMovementIndexRating(name, period)", span="105-105"];
m0_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''ADXR'' + period, resolution)", span="104-104"];
m0_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, adxr, resolution, selector)", span="106-106"];
m0_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="158-158"];
m0_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return AROON(symbol, period, period, resolution, selector);", span="160-160"];
m0_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, bop, resolution, selector)", span="228-228"];
m0_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var bop = new BalanceOfPower(name)", span="227-227"];
m0_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return bop;", span="229-229"];
m0_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="293-293"];
m0_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return DCH(symbol, period, period, resolution, selector);", span="295-295"];
m0_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="306-306"];
m0_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", span="374-374"];
m0_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1362-1362"];
m0_513 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="1253-1253"];
m0_519 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="x.Value", span="1273-1273"];
m0_525 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="x.Value", span="1286-1286"];
m0_514 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="x.Symbol == symbol", span="1253-1253"];
m0_563 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="indicator.Update(value)", span="1385-1385"];
m0_537 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value))", span="1309-1309"];
m0_255 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="((TradeBar)x).High", span="640-640"];
m0_297 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="((TradeBar)x).Low", span="737-737"];
m0_515 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="1253-1253"];
m0_518 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="1273-1273"];
m0_520 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="1273-1273"];
m0_524 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="1286-1286"];
m0_526 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="1286-1286"];
m0_533 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="x.Value", span="1300-1300"];
m0_536 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="var value = selector(consolidated)", span="1308-1308"];
m0_559 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="(T)x", span="1366-1366"];
m0_562 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="var value = selector(consolidated)", span="1384-1384"];
m0_564 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="1382-1386"];
m0_535 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="1306-1310"];
m0_538 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="1306-1310"];
m0_254 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="640-640"];
m0_256 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="640-640"];
m0_296 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="737-737"];
m0_298 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="737-737"];
m0_532 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="1300-1300"];
m0_534 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="1300-1300"];
m0_558 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="1366-1366"];
m0_560 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="1366-1366"];
m0_463 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1151-1151"];
m0_464 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''VAR'' + period, resolution)", span="1153-1153"];
m0_466 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, variance, resolution, selector)", span="1155-1155"];
m0_465 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var variance = new Variance(name, period)", span="1154-1154"];
m0_467 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return variance;", span="1156-1156"];
m0_468 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1151-1151"];
m0_8 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="var bar2 = new Tick\r\n            {\r\n                Symbol = Symbols.SPY,\r\n                Time = reference.AddHours(1),\r\n                Value = 10,\r\n                Quantity = 20\r\n            }", span="45-51"];
m0_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="959-959"];
m0_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, ''SMA'' + period, resolution)", span="961-961"];
m0_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, sma, resolution, selector)", span="963-963"];
m0_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var sma = new SimpleMovingAverage(name, period)", span="962-962"];
m0_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return sma;", span="964-964"];
m0_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="959-959"];
m0_198 [cluster="QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", span="39-39"];
m0_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="559-559"];
m0_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''LSMA'' + period, resolution)", span="561-561"];
m0_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, lsma, resolution, selector)", span="563-563"];
m0_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var lsma = new LeastSquaresMovingAverage(name, period)", span="562-562"];
m0_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return lsma;", span="564-564"];
m0_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="559-559"];
m0_263 [cluster="QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", span="78-78"];
m0_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="142-142"];
m0_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="990-990"];
m0_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, ''STO'', resolution)", span="992-992"];
m0_400 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, stoch, resolution)", span="994-994"];
m0_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="var stoch = new Stochastic(name, period, kPeriod, dPeriod)", span="993-993"];
m0_401 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="return stoch;", span="995-995"];
m0_402 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="990-990"];
m0_93 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(TimeSpan.FromDays(1), consolidated.Period)", span="160-160"];
m0_94 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(reference, consolidated.Time)", span="161-161"];
m0_96 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="consolidator.Update(new Tick { Time = reference.AddDays(2).AddMinutes(1) })", span="164-164"];
m0_95 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="consolidated = null", span="162-162"];
m0_97 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.IsNotNull(consolidated)", span="165-165"];
m0_98 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInPeriodModeWithDailyDataAndRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(TimeSpan.FromDays(1), consolidated.Period)", span="166-166"];
m0_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="725-725"];
m0_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''MIN'' + period, resolution)", span="727-727"];
m0_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var subscription = GetSubscription(symbol)", span="733-733"];
m0_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, min, ResolveConsolidator(symbol, resolution), selector)", span="741-741"];
m0_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var min = new Minimum(name, period)", span="728-728"];
m0_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="selector == null", span="731-731"];
m0_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="734-734"];
m0_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="selector = x => ((TradeBar)x).Low", span="737-737"];
m0_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return min;", span="742-742"];
m0_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="725-725"];
m0_396 [cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="44-44"];
m0_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="460-460"];
m0_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="var resolution = GetSubscription(symbol).Resolution", span="462-462"];
m0_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="return Identity(symbol, resolution, selector, fieldName);", span="463-463"];
m0_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="460-460"];
m0_30 [cluster="QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", span="66-66"];
m0_407 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1018-1018"];
m0_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''SUM'' + period, resolution)", span="1020-1020"];
m0_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, sum, resolution, selector)", span="1022-1022"];
m0_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var sum = new Sum(name, period)", span="1021-1021"];
m0_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return sum;", span="1023-1023"];
m0_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1018-1018"];
m0_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="771-771"];
m0_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''MOMERSION({0},{1})'', minPeriod, fullPeriod), resolution)", span="773-773"];
m0_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, momersion, resolution, selector)", span="775-775"];
m0_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var momersion = new MomersionIndicator(name, minPeriod, fullPeriod)", span="774-774"];
m0_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return momersion;", span="776-776"];
m0_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="771-771"];
m0_17 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(Symbols.SPY, newTradeBar.Symbol)", span="74-74"];
m0_18 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(bar1.Time, newTradeBar.Time)", span="75-75"];
m0_20 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(bar2.Value, newTradeBar.High)", span="77-77"];
m0_19 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(bar1.Value, newTradeBar.Open)", span="76-76"];
m0_21 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(bar3.Value, newTradeBar.Low)", span="78-78"];
m0_22 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(bar4.Value, newTradeBar.Close)", span="79-79"];
m0_16 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Assert.IsNotNull(newTradeBar)", span="72-72"];
m0_219 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", span="50-50"];
m0_128 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="var tick4 = new Tick\r\n            {\r\n                Symbol = Symbols.EURUSD,\r\n                Time = reference.AddSeconds(70),\r\n                Value = 1.1015m\r\n            }", span="218-223"];
m0_506 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="subscription = SubscriptionManager.Subscriptions.First(x => x.Symbol == symbol)", span="1253-1253"];
m0_505 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="SubscriptionDataConfig subscription", span="1249-1249"];
m0_507 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label=InvalidOperationException, span="1255-1255"];
m0_509 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="return subscription;", span="1260-1260"];
m0_508 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="throw new Exception(''Please register to receive data for symbol ''' + symbol.ToString() + ''' using the AddSecurity() function.'');", span="1258-1258"];
m0_510 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1247-1247"];
m0_54 [cluster="System.DateTime.AddMilliseconds(double)", file="AlgorithmTradingTests.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m0_240 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", span="48-48"];
m0_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="692-692"];
m0_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''MIDPOINT'' + period, resolution)", span="694-694"];
m0_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, midpoint, resolution, selector)", span="696-696"];
m0_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var midpoint = new MidPoint(name, period)", span="695-695"];
m0_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return midpoint;", span="697-697"];
m0_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="692-692"];
m0_0 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", span="26-26"];
m0_1 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="TradeBar newTradeBar = null", span="28-28"];
m0_3 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="consolidator.DataConsolidated += (sender, tradeBar) =>\r\n            {\r\n                newTradeBar = tradeBar;\r\n            }", span="30-33"];
m0_2 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="var consolidator = new TickConsolidator(4)", span="29-29"];
m0_4 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="var reference = DateTime.Today", span="34-34"];
m0_5 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="var bar1 = new Tick\r\n            {\r\n                Symbol = Symbols.SPY,\r\n                Time = reference,\r\n                Value = 5,\r\n                Quantity = 10\r\n            }", span="35-41"];
m0_45 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInCountModeWithDailyData()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(TimeSpan.FromMilliseconds(1), consolidated.Period)", span="103-103"];
m0_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="974-974"];
m0_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''STD'' + period, resolution)", span="976-976"];
m0_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, std, resolution, selector)", span="978-978"];
m0_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var std = new StandardDeviation(name, period)", span="977-977"];
m0_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return std;", span="979-979"];
m0_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="974-974"];
m0_116 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="var tick1 = new Tick\r\n            {\r\n                Symbol = Symbols.EURUSD,\r\n                Time = reference.AddSeconds(3),\r\n                Value = 1.1000m\r\n            }", span="187-192"];
m0_233 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", span="66-66"];
m0_277 [cluster="QuantConnect.Indicators.MidPoint.MidPoint(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.MidPoint.MidPoint(string, int)", span="33-33"];
m0_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''BOP'', resolution)", span="226-226"];
m0_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="224-224"];
m0_85 [cluster="QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", span="30-30"];
m0_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''DCH'', resolution)", span="278-278"];
m0_99 [cluster="QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", span="44-44"];
m0_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return donchianChannel;", span="281-281"];
m0_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="276-276"];
m0_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var donchianChannel = new DonchianChannel(name, upperPeriod, lowerPeriod)", span="279-279"];
m0_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, donchianChannel, resolution, selector)", span="280-280"];
m0_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="276-276"];
m0_421 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1054-1054"];
m0_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''T3({0},{1})'', period, volumeFactor), resolution)", span="1056-1056"];
m0_424 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, t3, resolution, selector)", span="1058-1058"];
m0_423 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var t3 = new T3MovingAverage(name, period, volumeFactor)", span="1057-1057"];
m0_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return t3;", span="1059-1059"];
m0_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1054-1054"];
m0_205 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="79-79"];
m0_295 [cluster="QuantConnect.Indicators.Minimum.Minimum(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.Minimum.Minimum(string, int)", span="51-51"];
m0_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="839-839"];
m0_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''PPO({0},{1})'', fastPeriod, slowPeriod), resolution)", span="841-841"];
m0_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, ppo, resolution, selector)", span="843-843"];
m0_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var ppo = new PercentagePriceOscillator(name, fastPeriod, slowPeriod, movingAverageType)", span="842-842"];
m0_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return ppo;", span="844-844"];
m0_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="839-839"];
m0_375 [cluster="QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", span="29-29"];
m0_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return averageDirectionalIndex;", span="91-91"];
m0_448 [cluster="QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", span="34-34"];
m0_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="595-595"];
m0_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''MACD({0},{1})'', fastPeriod, slowPeriod), resolution)", span="597-597"];
m0_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, macd, resolution, selector)", span="599-599"];
m0_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var macd = new MovingAverageConvergenceDivergence(name, fastPeriod, slowPeriod, signalPeriod, type)", span="598-598"];
m0_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return macd;", span="600-600"];
m0_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="595-595"];
m0_504 [cluster="QuantConnect.Symbol.ToString()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m0_340 [cluster="QuantConnect.Indicators.PercentagePriceOscillator.PercentagePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.PercentagePriceOscillator.PercentagePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", span="31-31"];
m0_469 [cluster="QuantConnect.Indicators.Variance.Variance(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.Variance.Variance(string, int)", span="39-39"];
m0_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="392-392"];
m0_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''FRAMA'' + period, resolution)", span="394-394"];
m0_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, frama, resolution, selector)", span="396-396"];
m0_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var frama = new FractalAdaptiveMovingAverage(name, period, longPeriod)", span="395-395"];
m0_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return frama;", span="397-397"];
m0_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="392-392"];
m0_111 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", span="177-177"];
m0_113 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="var consolidator = new TickConsolidator(TimeSpan.FromMinutes(1))", span="180-180"];
m0_112 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="TradeBar consolidated = null", span="179-179"];
m0_114 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="consolidator.DataConsolidated += (sender, bar) =>\r\n            {\r\n                consolidated = bar;\r\n            }", span="181-184"];
m0_115 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="var reference = new DateTime(2015, 06, 02)", span="186-186"];
m0_212 [cluster="QuantConnect.Indicators.LogReturn.LogReturn(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.LogReturn.LogReturn(string, int)", span="31-31"];
m0_512 [cluster="System.Exception.Exception(string)", file="AlgorithmTradingTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="628-628"];
m0_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''MAX'' + period, resolution)", span="630-630"];
m0_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var subscription = GetSubscription(symbol)", span="636-636"];
m0_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, max, ResolveConsolidator(symbol, resolution), selector)", span="644-644"];
m0_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var max = new Maximum(name, period)", span="631-631"];
m0_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="selector == null", span="634-634"];
m0_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="637-637"];
m0_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="selector = x => ((TradeBar)x).High", span="640-640"];
m0_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return max;", span="645-645"];
m0_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="628-628"];
m0_106 [cluster="System.DateTime.AddSeconds(double)", file="AlgorithmTradingTests.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m0_542 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1320-1320"];
m0_543 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution))", span="1323-1323"];
m0_544 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1320-1320"];
m0_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="942-942"];
m0_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''RSI'' + period, resolution)", span="944-944"];
m0_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, rsi, resolution, selector)", span="946-946"];
m0_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var rsi = new RelativeStrengthIndex(name, period, movingAverageType)", span="945-945"];
m0_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return rsi;", span="947-947"];
m0_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="942-942"];
m0_117 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="consolidator.Update(tick1)", span="193-193"];
m0_118 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.IsNull(consolidated)", span="194-194"];
m0_120 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="consolidator.Update(tick2)", span="202-202"];
m0_119 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="var tick2 = new Tick\r\n            {\r\n                Symbol = Symbols.EURUSD,\r\n                Time = reference.AddSeconds(10),\r\n                Value = 1.1005m\r\n            }", span="196-201"];
m0_121 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.IsNull(consolidated)", span="203-203"];
m0_122 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="var tick3 = new Tick\r\n            {\r\n                Symbol = Symbols.EURUSD,\r\n                Time = reference.AddSeconds(61),\r\n                Value = 1.1010m\r\n            }", span="205-210"];
m0_557 [cluster="System.ArgumentException.ArgumentException(string)", file="AlgorithmTradingTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m0_124 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.IsNotNull(consolidated)", span="212-212"];
m0_125 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(consolidated.Time, reference)", span="214-214"];
m0_126 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(consolidated.Open, tick1.Value)", span="215-215"];
m0_127 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="Assert.AreEqual(consolidated.Close, tick2.Value)", span="216-216"];
m0_7 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTradeBarsProperly()", file="AlgorithmTradingTests.cs", label="Assert.IsNull(newTradeBar)", span="43-43"];
m0_485 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="resolution = GetSubscription(symbol).Resolution", span="1205-1205"];
m0_484 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="!resolution.HasValue", span="1203-1203"];
m0_487 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label=resolution, span="1208-1208"];
m0_501 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="return string.Format(''{0}({1}{2})'', type, symbol.ToString(), res);", span="1238-1238"];
m0_486 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="string res", span="1207-1207"];
m0_500 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="throw new ArgumentOutOfRangeException(''resolution'');", span="1235-1235"];
m0_488 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Resolution.Tick", span="1210-1210"];
m0_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Resolution.Second", span="1214-1214"];
m0_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Resolution.Minute", span="1218-1218"];
m0_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Resolution.Hour", span="1222-1222"];
m0_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Resolution.Daily", span="1226-1226"];
m0_498 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label=null, span="1230-1230"];
m0_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="res = ''_tick''", span="1211-1211"];
m0_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="res = ''_sec''", span="1215-1215"];
m0_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="res = ''_min''", span="1219-1219"];
m0_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="res = ''_hr''", span="1223-1223"];
m0_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="res = ''_day''", span="1227-1227"];
m0_499 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="res = string.Empty", span="1231-1231"];
m0_502 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1201-1201"];
m0_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="423-423"];
m0_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''HMA'' + period, resolution)", span="425-425"];
m0_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, hma, resolution, selector)", span="427-427"];
m0_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var hma = new HullMovingAverage(name, period)", span="426-426"];
m0_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return hma;", span="428-428"];
m0_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="423-423"];
m0_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1070-1070"];
m0_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", color=green, community=0, file="AlgorithmTradingTests.cs", label="0: var name = CreateIndicatorName(symbol, ''TEMA'' + period, resolution)", span="1072-1072"];
m0_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var tema = new TripleExponentialMovingAverage(name, period)", span="1073-1073"];
m0_431 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, tema, resolution, selector)", span="1074-1074"];
m0_432 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return tema;", span="1075-1075"];
m0_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1070-1070"];
m0_32 [cluster="Unk.AreEqual", file="AlgorithmTradingTests.cs", label="Entry Unk.AreEqual", span=""];
m0_36 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInCountModeWithDailyData()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInCountModeWithDailyData()", span="86-86"];
m0_37 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesPeriodInCountModeWithDailyData()", file="AlgorithmTradingTests.cs", label="TradeBar consolidated = null", span="88-88"];
m0_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="224-224"];
m0_135 [cluster="QuantConnect.Tests.Common.Data.TickConsolidatorTests.AggregatesNewTicksInPeriodWithRoundedTime()", file="AlgorithmTradingTests.cs", label="consolidator.Update(tick6)", span="242-242"];
m0_123 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", span="30-30"];
m0_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", span="356-356"];
m0_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="AlgorithmTradingTests.cs", label="RegisterIndicator<IBaseData>(symbol, filteredIdentity, resolution, selector)", span="360-360"];
m0_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="AlgorithmTradingTests.cs", label="var filteredIdentity = new FilteredIdentity(name, filter)", span="359-359"];
m0_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", span="356-356"];
m0_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", span="374-374"];
m0_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="AlgorithmTradingTests.cs", label="string name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="376-376"];
m0_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="358-358"];
m0_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="AlgorithmTradingTests.cs", label="var filteredIdentity = new FilteredIdentity(name, filter)", span="377-377"];
m0_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="AlgorithmTradingTests.cs", label="return filteredIdentity;", span="361-361"];
m0_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1334-1334"];
m0_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="AlgorithmTradingTests.cs", label="RegisterIndicator<IBaseData>(symbol, filteredIdentity, ResolveConsolidator(symbol, resolution), selector)", span="378-378"];
m0_541 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m0_6 [cluster="string.Format(string, object, object)", file="AlgorithmTradingTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="86-86"];
m0_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''ADX'', resolution)", span="88-88"];
m0_470 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="1168-1168"];
m0_471 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''VWAP'' + period, resolution)", span="1170-1170"];
m0_473 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, vwap, resolution, selector)", span="1172-1172"];
m0_472 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="var vwap = new VolumeWeightedAveragePriceIndicator(name, period)", span="1171-1171"];
m0_474 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="return vwap;", span="1173-1173"];
m0_475 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="1168-1168"];
m0_389 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m0_38 [cluster="QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", span="36-36"];
m0_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="124-124"];
m0_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var alma = new ArnaudLegouxMovingAverage(name, period, sigma, offset)", span="127-127"];
m0_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return alma;", span="129-129"];
m0_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1271-1271"];
m0_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''APO({0},{1})'', fastPeriod, slowPeriod), resolution)", span="144-144"];
m0_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ALMA_{0}_{1}_{2}'', period, sigma, offset), resolution)", span="126-126"];
m0_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, alma, resolution, selector)", span="128-128"];
m0_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="124-124"];
m0_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="142-142"];
m0_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var apo = new AbsolutePriceOscillator(name, fastPeriod, slowPeriod, movingAverageType)", span="145-145"];
m0_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, apo, resolution, selector)", span="146-146"];
m0_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return apo;", span="147-147"];
m0_347 [cluster="QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", span="43-43"];
m0_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="657-657"];
m0_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''MFI'' + period, resolution)", span="659-659"];
m0_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, mfi, resolution, selector)", span="661-661"];
m0_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="var mfi = new MoneyFlowIndex(name, period)", span="660-660"];
m0_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="return mfi;", span="662-662"];
m0_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="657-657"];
m0_551 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="1369-1369"];
m0_550 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="selector = selector ?? (x => (T)x)", span="1366-1366"];
m0_552 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="var type = typeof(T)", span="1372-1372"];
m0_554 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="throw new ArgumentException(string.Format(''Type mismatch found between consolidator and indicator for symbol: {0}.'' +\r\n                                                          ''Consolidator outputs type {1} but indicator expects input type {2}'',\r\n                    symbol, consolidator.OutputType.Name, type.Name)\r\n                );", span="1375-1378"];
m0_553 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="!type.IsAssignableFrom(consolidator.OutputType)", span="1373-1373"];
m0_555 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(value);\r\n            }", span="1382-1386"];
m0_556 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1362-1362"];
m0_476 [cluster="QuantConnect.Indicators.VolumeWeightedAveragePriceIndicator.VolumeWeightedAveragePriceIndicator(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.VolumeWeightedAveragePriceIndicator.VolumeWeightedAveragePriceIndicator(string, int)", span="48-48"];
m0_333 [cluster="QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", span="34-34"];
m0_516 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="1273-1273"];
m0_517 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1271-1271"];
m0_361 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", span="37-37"];
m0_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="293-293"];
m0_305 [cluster="QuantConnect.Indicators.Momentum.Momentum(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.Momentum.Momentum(string, int)", span="37-37"];
m0_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var averageDirectionalIndex = new AverageDirectionalIndex(name, period)", span="89-89"];
m0_483 [cluster="QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", span="59-59"];
m0_511 [cluster="Unk.First", file="AlgorithmTradingTests.cs", label="Entry Unk.First", span=""];
m0_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, averageDirectionalIndex, resolution, selector)", span="90-90"];
m0_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1297-1297"];
m0_528 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="1303-1303"];
m0_527 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="selector = selector ?? (x => x.Value)", span="1300-1300"];
m0_529 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value));\r\n            }", span="1306-1310"];
m0_530 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1297-1297"];
m0_573 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m0_368 [cluster="QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", span="37-37"];
m0_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="543-543"];
m0_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, ''LOGR'', resolution)", span="545-545"];
m0_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, logr, resolution, selector)", span="547-547"];
m0_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var logr = new LogReturn(name, period)", span="546-546"];
m0_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return logr;", span="548-548"];
m0_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="543-543"];
m0_270 [cluster="QuantConnect.Indicators.MassIndex.MassIndex(string, int, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.MassIndex.MassIndex(string, int, int)", span="23-23"];
m0_427 [cluster="QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", span="38-38"];
m0_597 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(System.TimeSpan)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(System.TimeSpan)", span="29-29"];
m0_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="611-611"];
m0_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''MAD'' + period, resolution)", span="613-613"];
m0_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, mad, resolution, selector)", span="615-615"];
m0_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var mad = new MeanAbsoluteDeviation(name, period)", span="614-614"];
m0_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return mad;", span="616-616"];
m0_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="611-611"];
m0_141 [cluster="System.TimeSpan.FromMinutes(double)", file="AlgorithmTradingTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m0_441 [cluster="QuantConnect.Indicators.TrueRange.TrueRange(string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.TrueRange.TrueRange(string)", span="35-35"];
m0_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="874-874"];
m0_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''RC({0},{1})'', period, k), resolution)", span="876-876"];
m0_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, rc, resolution, selector)", span="878-878"];
m0_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var rc = new RegressionChannel(name, period, k)", span="877-877"];
m0_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return rc;", span="879-879"];
m0_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="874-874"];
m0_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="708-708"];
m0_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''MIDPRICE'' + period, resolution)", span="710-710"];
m0_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, midprice, resolution, selector)", span="712-712"];
m0_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var midprice = new MidPrice(name, period)", span="711-711"];
m0_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return midprice;", span="713-713"];
m0_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="708-708"];
m0_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="407-407"];
m0_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''HA'', resolution)", span="409-409"];
m0_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, ha, resolution, selector)", span="411-411"];
m0_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="var ha = new HeikinAshi(name)", span="410-410"];
m0_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="return ha;", span="412-412"];
m0_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="407-407"];
m0_598 [cluster="QuantConnect.Data.Consolidators.IdentityDataConsolidator<T>.IdentityDataConsolidator()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Data.Consolidators.IdentityDataConsolidator<T>.IdentityDataConsolidator()", span="25-25"];
m0_602 [cluster="QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", span="30-30"];
m0_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="754-754"];
m0_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, ''MOM'' + period, resolution)", span="756-756"];
m0_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, momentum, resolution, selector)", span="758-758"];
m0_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var momentum = new Momentum(name, period)", span="757-757"];
m0_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return momentum;", span="759-759"];
m0_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="754-754"];
m0_382 [cluster="QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55"];
m0_251 [cluster="QuantConnect.Indicators.Maximum.Maximum(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.Maximum.Maximum(string, int)", span="51-51"];
m0_545 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="1337-1337"];
m0_546 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1334-1334"];
m0_420 [cluster="QuantConnect.Indicators.SwissArmyKnife.SwissArmyKnife(string, int, double, QuantConnect.Indicators.SwissArmyKnifeTool)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.SwissArmyKnife.SwissArmyKnife(string, int, double, QuantConnect.Indicators.SwissArmyKnifeTool)", span="86-86"];
m0_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="492-492"];
m0_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, identity, ResolveConsolidator(symbol, resolution), selector)", span="496-496"];
m0_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="var identity = new Identity(name)", span="495-495"];
m0_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="return identity;", span="497-497"];
m0_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="string name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="494-494"];
m0_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="492-492"];
m0_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="444-444"];
m0_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ICHIMOKU({0},{1})'', tenkanPeriod, kijunPeriod), resolution)", span="446-446"];
m0_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, ichimoku, resolution)", span="448-448"];
m0_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="var ichimoku = new IchimokuKinkoHyo(name, tenkanPeriod, kijunPeriod, senkouAPeriod, senkouBPeriod, senkouADelayPeriod, senkouBDelayPeriod)", span="447-447"];
m0_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="return ichimoku;", span="449-449"];
m0_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="444-444"];
m0_455 [cluster="QuantConnect.Indicators.Trix.Trix(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.Trix.Trix(string, int)", span="35-35"];
m0_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="821-821"];
m0_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''OBV'', resolution)", span="823-823"];
m0_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, onBalanceVolume, resolution, selector)", span="825-825"];
m0_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="var onBalanceVolume = new OnBalanceVolume(name)", span="824-824"];
m0_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="return onBalanceVolume;", span="826-826"];
m0_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="821-821"];
m0_540 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52"];
m0_434 [cluster="QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", span="37-37"];
m0_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1284-1284"];
m0_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="1286-1286"];
m0_523 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1284-1284"];
m0_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="908-908"];
m0_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="string name = CreateIndicatorName(symbol, ''ROCP'' + period, resolution)", span="910-910"];
m0_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, rateofchangepercent, resolution, selector)", span="912-912"];
m0_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var rateofchangepercent = new RateOfChangePercent(name, period)", span="911-911"];
m0_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return rateofchangepercent;", span="913-913"];
m0_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="908-908"];
m0_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="508-508"];
m0_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''KAMA'' + period, resolution)", span="510-510"];
m0_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, kama, resolution, selector)", span="512-512"];
m0_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var kama = new KaufmanAdaptiveMovingAverage(name, period)", span="511-511"];
m0_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return kama;", span="513-513"];
m0_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="508-508"];
m0_226 [cluster="QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", span="41-41"];
m0_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="527-527"];
m0_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''KCH'', resolution)", span="529-529"];
m0_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, keltnerChannels, resolution, selector)", span="531-531"];
m0_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="var keltnerChannels = new KeltnerChannels(name, period, k, movingAverageType)", span="530-530"];
m0_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="return keltnerChannels;", span="532-532"];
m0_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="527-527"];
m0_326 [cluster="QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", span="36-36"];
m0_600 [cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(System.TimeSpan)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(System.TimeSpan)", span="30-30"];
m0_172 [cluster="QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", span="99-99"];
m0_312 [cluster="QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", span="52-52"];
m0_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1395-1395"];
m0_565 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="var subscription = GetSubscription(symbol)", span="1397-1397"];
m0_571 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="return ResolveConsolidator(symbol, timeSpan);", span="1417-1417"];
m0_566 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="!resolution.HasValue", span="1400-1400"];
m0_567 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="resolution = subscription.Resolution", span="1402-1402"];
m0_569 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="timeSpan < subscription.Resolution.ToTimeSpan()", span="1409-1409"];
m0_570 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="throw new ArgumentException(string.Format(''Unable to create {0} {1} consolidator because {0} is registered for {2} data. '' +\r\n                                                          ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, resolution.Value, subscription.Resolution)\r\n                );", span="1411-1414"];
m0_568 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="var timeSpan = resolution.Value.ToTimeSpan()", span="1405-1405"];
m0_572 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1395-1395"];
m0_165 [cluster="QuantConnect.Indicators.HullMovingAverage.HullMovingAverage(string, int)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Indicators.HullMovingAverage.HullMovingAverage(string, int)", span="34-34"];
m0_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1101-1101"];
m0_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var name = CreateIndicatorName(symbol, ''TRIMA'' + period, resolution)", span="1103-1103"];
m0_445 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="RegisterIndicator(symbol, trima, resolution, selector)", span="1105-1105"];
m0_444 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="var trima = new TriangularMovingAverage(name, period)", span="1104-1104"];
m0_446 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="return trima;", span="1106-1106"];
m0_447 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1101-1101"];
m0_604 [file="AlgorithmTradingTests.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m0_605 [file="AlgorithmTradingTests.cs", label="QuantConnect.Symbol", span=""];
m0_609 [file="AlgorithmTradingTests.cs", label="QuantConnect.Indicators.IndicatorBase<T>", span=""];
m0_607 [file="AlgorithmTradingTests.cs", label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", span=""];
m0_606 [file="AlgorithmTradingTests.cs", label="System.Func<QuantConnect.Data.IBaseData, decimal>", span=""];
m0_608 [file="AlgorithmTradingTests.cs", label="System.Func<QuantConnect.Data.IBaseData, T>", span=""];
m3_9 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", span="38-38"];
m3_10 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", file="BacktestingSetupHandler.cs", label="return new StopLimitOrder(Symbol, Math.Abs(quantity), _highLimit, _lowLimit, DateTime.Now);", span="40-40"];
m3_11 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", span="38-38"];
m3_26 [cluster="System.Math.Max(decimal, decimal)", file="BacktestingSetupHandler.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m3_4 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", span="33-33"];
m3_5 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", file="BacktestingSetupHandler.cs", label="return new StopLimitOrder(Symbol, -Math.Abs(quantity), _lowLimit, _highLimit, DateTime.Now);", span="35-35"];
m3_6 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", span="33-33"];
m3_27 [cluster="System.Math.Min(decimal, decimal)", file="BacktestingSetupHandler.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m3_7 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="64-64"];
m3_12 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43"];
m3_13 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="var stop = (StopLimitOrder) order", span="45-45"];
m3_15 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="order.Quantity > 0", span="47-47"];
m3_16 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice/2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="50-50"];
m3_17 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="order.SecurityType == SecurityType.Forex || order.SecurityType == SecurityType.Crypto", span="53-53"];
m3_18 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice / 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="55-55"];
m3_19 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="61-61"];
m3_20 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="order.SecurityType == SecurityType.Forex || order.SecurityType == SecurityType.Crypto", span="65-65"];
m3_21 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="67-67"];
m3_14 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="var previousStop = stop.StopPrice", span="46-46"];
m3_22 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="stop.LimitPrice = stop.StopPrice", span="70-70"];
m3_23 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="return stop.StopPrice != previousStop;", span="71-71"];
m3_24 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43"];
m3_25 [cluster="System.Math.Round(decimal, int, System.MidpointRounding)", file="BacktestingSetupHandler.cs", label="Entry System.Math.Round(decimal, int, System.MidpointRounding)", span="0-0"];
m3_0 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26"];
m3_1 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="BacktestingSetupHandler.cs", label="_highLimit = highLimit", span="29-29"];
m3_2 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", color=red, community=0, file="BacktestingSetupHandler.cs", label="0: _lowLimit = lowLimit", span="30-30"];
m3_3 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26"];
m3_8 [cluster="System.Math.Abs(int)", file="BacktestingSetupHandler.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m3_28 [file="BacktestingSetupHandler.cs", label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", span=""];
m4_85 [cluster="Unk.GetEntry", file="Cash.cs", label="Entry Unk.GetEntry", span=""];
m4_132 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Cash.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_73 [cluster="Unk.Where", file="Cash.cs", label="Entry Unk.Where", span=""];
m4_123 [cluster="decimal.RoundToSignificantDigits(int)", file="Cash.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
m4_90 [cluster="Unk.Trace", file="Cash.cs", label="Entry Unk.Trace", span=""];
m4_79 [cluster="Unk.Concat", file="Cash.cs", label="Entry Unk.Concat", span=""];
m4_9 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="80-80"];
m4_10 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label=_isBaseCurrency, span="82-82"];
m4_13 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label=_invertRealTimePrice, span="85-85"];
m4_15 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="ConversionRate = rate", span="89-89"];
m4_11 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="return;", span="82-82"];
m4_12 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="var rate = data.Value", span="84-84"];
m4_14 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="rate = 1/rate", span="87-87"];
m4_16 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="80-80"];
m4_17 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="98-98"];
m4_18 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label=_locker, span="100-100"];
m4_19 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Amount += amount", span="102-102"];
m4_20 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="return Amount;", span="103-103"];
m4_21 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.AddAmount(decimal)", span="98-98"];
m4_83 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="Cash.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m4_118 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.ToString()", span="222-222"];
m4_119 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="var rate = ConversionRate", span="225-225"];
m4_121 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="return $''{Symbol}: {Currencies.GetCurrencySymbol(Symbol)}{Amount,15:0.00} @ {rate,10:0.00####} = ${Math.Round(ValueInAccountCurrency, 2)}'';", span="227-227"];
m4_120 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="rate = rate < 1000 ? rate.RoundToSignificantDigits(5) : Math.Round(rate, 2)", span="226-226"];
m4_122 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.ToString()", span="222-222"];
m4_81 [cluster="Unk.Min", file="Cash.cs", label="Entry Unk.Min", span=""];
m4_112 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="173-173"];
m4_106 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, fx, markets, SecurityType.Forex)", span="171-171"];
m4_110 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)", span="172-172"];
m4_113 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)", span="173-173"];
m4_115 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="175-175"];
m4_92 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="143-144"];
m4_95 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="161-161"];
m4_98 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="161-161"];
m4_101 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="161-161"];
m4_105 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="171-171"];
m4_109 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="172-172"];
m4_107 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="171-171"];
m4_111 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="172-172"];
m4_114 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="173-173"];
m4_117 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="175-175"];
m4_116 [cluster="lambda expression", file="Cash.cs", label="x.Resolution", span="175-175"];
m4_94 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="143-144"];
m4_93 [cluster="lambda expression", file="Cash.cs", label="config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto", span="143-144"];
m4_97 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="161-161"];
m4_96 [cluster="lambda expression", file="Cash.cs", label="x.SecurityType", span="161-161"];
m4_100 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="161-161"];
m4_99 [cluster="lambda expression", file="Cash.cs", label="x.Key", span="161-161"];
m4_102 [cluster="lambda expression", file="Cash.cs", label="y.First().ID.Market", span="161-161"];
m4_103 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="161-161"];
m4_125 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Cash.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="299-299"];
m4_89 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="Cash.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m4_86 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m4_76 [cluster="Unk.ContainsKey", file="Cash.cs", label="Entry Unk.ContainsKey", span=""];
m4_82 [cluster="Unk.GetSymbolProperties", file="Cash.cs", label="Entry Unk.GetSymbolProperties", span=""];
m4_133 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Cash.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m4_88 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m4_126 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="230-230"];
m4_127 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", color=green, community=0, file="Cash.cs", label="0: string market", span="232-232"];
m4_128 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", color=green, community=0, file="Cash.cs", label="0: !markets.TryGetValue(securityType, out market)", span="233-233"];
m4_129 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", color=green, community=0, file="Cash.cs", label="0: market = marketMap[securityType]", span="235-235"];
m4_130 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="return QuantConnect.Symbol.Create(crypto, securityType, market);", span="238-238"];
m4_131 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="230-230"];
m4_7 [cluster="System.ArgumentException.ArgumentException(string)", file="Cash.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m4_22 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="111-111"];
m4_23 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label=_locker, span="113-113"];
m4_24 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Amount = amount", span="115-115"];
m4_25 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.SetAmount(decimal)", span="111-111"];
m4_77 [cluster="Unk.Add", file="Cash.cs", label="Entry Unk.Add", span=""];
m4_8 [cluster="string.ToUpper()", file="Cash.cs", label="Entry string.ToUpper()", span="0-0"];
m4_87 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m4_124 [cluster="System.Math.Round(decimal, int)", file="Cash.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m4_84 [cluster="Exception.cstr", file="Cash.cs", label="Entry Exception.cstr", span=""];
m4_74 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Cash.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m4_108 [cluster="Unk.CreateSymbol", file="Cash.cs", label="Entry Unk.CreateSymbol", span=""];
m4_0 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="65-65"];
m4_3 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Amount = amount", span="71-71"];
m4_4 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="ConversionRate = conversionRate", span="72-72"];
m4_5 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Symbol = symbol.ToUpper()", span="73-73"];
m4_2 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="throw new ArgumentException(''Cash symbols must be exactly 3 characters.'');", span="69-69"];
m4_1 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="symbol == null || symbol.Length != 3", span="67-67"];
m4_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="65-65"];
m4_91 [cluster="string.Format(string, object, object)", file="Cash.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_26 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="130-130"];
m4_59 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="Cash.cs", label="0: var exchangeHours = marketHoursDbEntry.ExchangeHours", span="190-190"];
m4_58 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="189-189"];
m4_60 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var config = subscriptions.Add(objectType, TickType.Quote, symbol, minimumResolution, marketHoursDbEntry.DataTimeZone, exchangeHours.TimeZone, false, true, false, true)", span="192-192"];
m4_64 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Cfd.Cfd(exchangeHours, quoteCash, config, symbolProperties)", span="198-198"];
m4_66 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Crypto.Crypto(exchangeHours, quoteCash, config, symbolProperties)", span="202-202"];
m4_67 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Forex.Forex(exchangeHours, quoteCash, config, symbolProperties)", span="206-206"];
m4_56 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="!cashBook.TryGetValue(symbolProperties.QuoteCurrency, out quoteCash)", span="185-185"];
m4_50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label=potentials, span="177-177"];
m4_48 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var minimumResolution = subscriptions.Subscriptions.Select(x => x.Resolution).DefaultIfEmpty(Resolution.Minute).Min()", span="175-175"];
m4_49 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (QuoteBar)", span="176-176"];
m4_61 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = config.Symbol", span="193-193"];
m4_68 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securities.Add(config.Symbol, security)", span="208-208"];
m4_54 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, securityType, Symbol)", span="183-183"];
m4_63 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securityType == SecurityType.Cfd", span="196-196"];
m4_70 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return security;", span="210-210"];
m4_65 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securityType == SecurityType.Crypto", span="200-200"];
m4_27 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Symbol == CashBook.AccountCurrency", span="132-132"];
m4_34 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="subscriptions.Subscriptions.Where(config => config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto)", span="143-144"];
m4_42 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var markets = securities.Keys.GroupBy(x => x.SecurityType).ToDictionary(x => x.Key, y => y.First().ID.Market)", span="161-161"];
m4_47 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var potentials = Currencies.CurrencyPairs.Select(fx => CreateSymbol(marketMap, fx, markets, SecurityType.Forex))\r\n                .Concat(Currencies.CfdCurrencyPairs.Select(cfd => CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)))\r\n                .Concat(Currencies.CryptoCurrencyPairs.Select(crypto => CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)))", span="171-173"];
m4_31 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="137-137"];
m4_62 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Security security", span="195-195"];
m4_55 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Cash quoteCash", span="184-184"];
m4_57 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="throw new Exception(''Unable to resolve quote cash: '' + symbolProperties.QuoteCurrency + ''. This is required to add conversion feed: '' + symbol.Value);", span="187-187"];
m4_51 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="symbol.Value == normal || symbol.Value == invert", span="179-179"];
m4_71 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", span="215-215"];
m4_52 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_invertRealTimePrice = symbol.Value == invert", span="181-181"];
m4_53 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var securityType = symbol.ID.SecurityType", span="182-182"];
m4_69 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol.Value + '' for cash '' + Symbol + '' currency feed'')", span="209-209"];
m4_44 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.Add(SecurityType.Forex, markets[SecurityType.Cfd])", span="164-164"];
m4_46 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.Add(SecurityType.Cfd, markets[SecurityType.Forex])", span="168-168"];
m4_37 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="149-149"];
m4_41 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="155-155"];
m4_28 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = QuantConnect.Symbol.Empty", span="134-134"];
m4_32 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="string normal = Symbol + CashBook.AccountCurrency", span="141-141"];
m4_33 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="string invert = CashBook.AccountCurrency + Symbol", span="142-142"];
m4_38 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="config.Symbol.Value == invert", span="151-151"];
m4_35 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="config.Symbol.Value == normal", span="146-146"];
m4_36 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = config.Symbol", span="148-148"];
m4_39 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = config.Symbol", span="153-153"];
m4_43 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.ContainsKey(SecurityType.Cfd) && !markets.ContainsKey(SecurityType.Forex)", span="162-162"];
m4_45 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.ContainsKey(SecurityType.Forex) && !markets.ContainsKey(SecurityType.Cfd)", span="166-166"];
m4_30 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="ConversionRate = 1.0m", span="136-136"];
m4_29 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_isBaseCurrency = true", span="135-135"];
m4_40 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_invertRealTimePrice = true", span="154-154"];
m4_72 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="130-130"];
m4_104 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Cash.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m4_78 [cluster="Unk.Select", file="Cash.cs", label="Entry Unk.Select", span=""];
m4_75 [cluster="Unk.ToDictionary", file="Cash.cs", label="Entry Unk.ToDictionary", span=""];
m4_80 [cluster="Unk.DefaultIfEmpty", file="Cash.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m4_134 [file="Cash.cs", label="QuantConnect.Securities.Cash", span=""];
m4_135 [file="Cash.cs", label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", span=""];
m4_136 [file="Cash.cs", label=markets, span=""];
m5_23 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m5_5 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Market.Add(string, int)", span="120-120"];
m5_6 [cluster="QuantConnect.Market.Add(string, int)", color=red, community=0, file="CollectionSubscriptionDataSourceReader.cs", label="0: identifier >= MaxMarketIdentifier", span="122-122"];
m5_9 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="market = market.ToLower()", span="128-128"];
m5_12 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="Markets.TryGetValue(market, out marketIdentifier) && identifier != marketIdentifier", span="134-134"];
m5_15 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="ReverseMarkets.TryGetValue(identifier, out existingMarket)", span="140-140"];
m5_17 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="Markets[market] = identifier", span="146-146"];
m5_18 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="ReverseMarkets[identifier] = market", span="147-147"];
m5_7 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="var message = string.Format(''The market identifier is limited to positive values less than {0}.'', MaxMarketIdentifier)", span="124-124"];
m5_8 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="throw new ArgumentOutOfRangeException(''identifier'', message);", span="125-125"];
m5_10 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label=_lock, span="131-131"];
m5_13 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="throw new ArgumentException(''Attempted to add an already added market with a different identifier. Market: '' + market);", span="136-136"];
m5_16 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="throw new ArgumentException(''Attempted to add a market identifier that is already in use. New Market: '' + market + '' Existing Market: '' + existingMarket);", span="142-142"];
m5_11 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="int marketIdentifier", span="133-133"];
m5_14 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="string existingMarket", span="139-139"];
m5_19 [cluster="QuantConnect.Market.Add(string, int)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Market.Add(string, int)", span="120-120"];
m5_25 [cluster="QuantConnect.Market.Encode(string)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Market.Encode(string)", span="156-156"];
m5_26 [cluster="QuantConnect.Market.Encode(string)", file="CollectionSubscriptionDataSourceReader.cs", label=_lock, span="158-158"];
m5_28 [cluster="QuantConnect.Market.Encode(string)", file="CollectionSubscriptionDataSourceReader.cs", label="return !Markets.TryGetValue(market, out code) ? (int?) null : code;", span="161-161"];
m5_27 [cluster="QuantConnect.Market.Encode(string)", file="CollectionSubscriptionDataSourceReader.cs", label="int code", span="160-160"];
m5_29 [cluster="QuantConnect.Market.Encode(string)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Market.Encode(string)", span="156-156"];
m5_20 [cluster="string.Format(string, object)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_21 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m5_30 [cluster="QuantConnect.Market.Decode(int)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Market.Decode(int)", span="170-170"];
m5_31 [cluster="QuantConnect.Market.Decode(int)", file="CollectionSubscriptionDataSourceReader.cs", label=_lock, span="172-172"];
m5_33 [cluster="QuantConnect.Market.Decode(int)", file="CollectionSubscriptionDataSourceReader.cs", label="return !ReverseMarkets.TryGetValue(code, out market) ? null : market;", span="175-175"];
m5_32 [cluster="QuantConnect.Market.Decode(int)", file="CollectionSubscriptionDataSourceReader.cs", label="string market", span="174-174"];
m5_34 [cluster="QuantConnect.Market.Decode(int)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Market.Decode(int)", span="170-170"];
m5_22 [cluster="string.ToLower()", file="CollectionSubscriptionDataSourceReader.cs", label="Entry string.ToLower()", span="0-0"];
m5_0 [cluster="QuantConnect.Market.Market()", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Market.Market()", span="48-48"];
m5_1 [cluster="QuantConnect.Market.Market()", file="CollectionSubscriptionDataSourceReader.cs", label=HardcodedMarkets, span="51-51"];
m5_2 [cluster="QuantConnect.Market.Market()", file="CollectionSubscriptionDataSourceReader.cs", label="Markets[market.Item1] = market.Item2", span="53-53"];
m5_3 [cluster="QuantConnect.Market.Market()", file="CollectionSubscriptionDataSourceReader.cs", label="ReverseMarkets[market.Item2] = market.Item1", span="54-54"];
m5_4 [cluster="QuantConnect.Market.Market()", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Market.Market()", span="48-48"];
m5_24 [cluster="System.ArgumentException.ArgumentException(string)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m6_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.ToString()", file="CommissionReportEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.ToString()", span="41-41"];
m6_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.ToString()", color=red, community=0, file="CommissionReportEventArgs.cs", label="0: return $''ExecId: {CommissionReport.ExecId}, Commission: {CommissionReport.Commission}, Currency: {CommissionReport.Currency}'';", span="43-43"];
m6_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.ToString()", file="CommissionReportEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.ToString()", span="41-41"];
m6_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33"];
m6_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="CommissionReport = commissionReport", span="35-35"];
m6_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33"];
m6_6 [file="CommissionReportEventArgs.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs", span=""];
m8_9 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", file="Controls.cs", label="Entry QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", span="85-85"];
m8_10 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", color=red, community=0, file="Controls.cs", label="0: resolution", span="87-87"];
m8_11 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", color=red, community=0, file="Controls.cs", label="0: Resolution.Tick", span="89-89"];
m8_13 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", color=red, community=0, file="Controls.cs", label="0: Resolution.Second", span="92-92"];
m8_15 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", color=red, community=0, file="Controls.cs", label="0: Resolution.Minute", span="95-95"];
m8_12 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", color=red, community=0, file="Controls.cs", label="0: return TickLimit;", span="90-90"];
m8_14 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", color=red, community=0, file="Controls.cs", label="0: return SecondLimit;", span="93-93"];
m8_16 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", color=red, community=0, file="Controls.cs", label="0: Resolution.Hour", span="96-96"];
m8_17 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", color=red, community=0, file="Controls.cs", label="0: Resolution.Daily", span="97-97"];
m8_18 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", color=red, community=0, file="Controls.cs", label="0: return MinuteLimit;", span="99-99"];
m8_19 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", file="Controls.cs", label="Exit QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", span="85-85"];
m8_0 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="Entry QuantConnect.Packets.Controls.Controls()", span="71-71"];
m8_1 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="MinuteLimit = 500", span="73-73"];
m8_2 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="SecondLimit = 100", span="74-74"];
m8_3 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="TickLimit = 30", span="75-75"];
m8_4 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="RamAllocation = 1024", span="76-76"];
m8_5 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="BacktestLogLimit = 10000", span="77-77"];
m8_6 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="DailyLogLimit = 3000000", span="78-78"];
m8_7 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="RemainingLogAllowance = 10000", span="79-79"];
m8_8 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="Exit QuantConnect.Packets.Controls.Controls()", span="71-71"];
m8_20 [file="Controls.cs", label="QuantConnect.Packets.Controls", span=""];
m9_773 [cluster="QuantConnect.Holding.Holding()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Holding.Holding()", span="78-78"];
m9_54 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", span="187-187"];
m9_55 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="T response = default(T)", span="189-189"];
m9_60 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="DateTime.Now < _rateLimitNextRequest[type]", span="199-199"];
m9_62 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="_rateLimitNextRequest[type] = DateTime.Now + _rateLimitPeriod[type]", span="200-200"];
m9_63 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="var raw = client.Execute(request)", span="203-203"];
m9_65 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="rootName != ''''", span="208-208"];
m9_66 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="response = DeserializeRemoveRoot<T>(raw.Content, rootName)", span="210-210"];
m9_75 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="Log.Error(''TradierBrokerage.Execute.'' + request.Resource + ''(): '' + raw.Content)", span="248-248"];
m9_56 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label=_lockAccessCredentials, span="191-191"];
m9_57 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="var client = new RestClient(RequestEndpoint)", span="193-193"];
m9_58 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="client.AddDefaultHeader(''Accept'', ''application/json'')", span="194-194"];
m9_59 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="client.AddDefaultHeader(''Authorization'', ''Bearer '' + AccessToken)", span="195-195"];
m9_61 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="Thread.Sleep(10)", span="199-199"];
m9_64 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="_previousRequestRaw = raw.Content", span="204-204"];
m9_67 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="response = JsonConvert.DeserializeObject<T>(raw.Content)", span="214-214"];
m9_70 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="fault = JsonConvert.DeserializeObject<TradierFaultContainer>(raw.Content)", span="228-228"];
m9_73 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="raw.Content.Contains(''order already in finalized state: filled'')", span="243-243"];
m9_76 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''Unknown'', raw.Content))", span="249-249"];
m9_77 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="raw.ErrorException != null", span="253-253"];
m9_79 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="throw new ApplicationException(message, raw.ErrorException);", span="256-256"];
m9_68 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="response == null", span="223-223"];
m9_80 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="return response;", span="260-260"];
m9_69 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="TradierFaultContainer fault = null", span="225-225"];
m9_71 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="fault != null", span="235-235"];
m9_72 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''JsonError'', fault.Fault.Description))", span="238-238"];
m9_74 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="return default(T);", span="245-245"];
m9_78 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="string message = ''Error retrieving response.  Check inner details for more info.''", span="255-255"];
m9_81 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", span="187-187"];
m9_364 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", span="790-790"];
m9_365 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="DefaultMarginCallModel.cs", label="var handler = SessionRefreshed", span="792-792"];
m9_367 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="DefaultMarginCallModel.cs", label="handler(this, e)", span="793-793"];
m9_366 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="DefaultMarginCallModel.cs", label="handler != null", span="793-793"];
m9_368 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", span="790-790"];
m9_840 [cluster="System.Collections.Generic.Queue<T>.Queue(System.Collections.Generic.IEnumerable<T>)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.Queue<T>.Queue(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m9_122 [cluster="int.ToString()", file="DefaultMarginCallModel.cs", label="Entry int.ToString()", span="0-0"];
m9_350 [cluster="object.GetType()", file="DefaultMarginCallModel.cs", label="Entry object.GetType()", span="0-0"];
m9_334 [cluster="System.Net.WebHeaderCollection.Add(string, string)", file="DefaultMarginCallModel.cs", label="Entry System.Net.WebHeaderCollection.Add(string, string)", span="0-0"];
m9_502 [cluster="Unk.SingleOrDefault", file="DefaultMarginCallModel.cs", label="Entry Unk.SingleOrDefault", span=""];
m9_583 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m9_455 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", span="1748-1748"];
m9_846 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="DefaultMarginCallModel.cs", label="QCOrder = order", span="1750-1750"];
m9_847 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="DefaultMarginCallModel.cs", label="Classification = classification", span="1751-1751"];
m9_848 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="DefaultMarginCallModel.cs", label="Symbol = order.Symbol", span="1752-1752"];
m9_849 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="DefaultMarginCallModel.cs", label="Direction = ConvertDirection(order.Direction, holdingQuantity)", span="1753-1753"];
m9_850 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="DefaultMarginCallModel.cs", label="Quantity = Math.Abs(order.Quantity)", span="1754-1754"];
m9_851 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="DefaultMarginCallModel.cs", label="Price = GetLimitPrice(order)", span="1755-1755"];
m9_852 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="DefaultMarginCallModel.cs", label="Stop = GetStopPrice(order)", span="1756-1756"];
m9_853 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="DefaultMarginCallModel.cs", label="Type = ConvertOrderType(order)", span="1757-1757"];
m9_854 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="DefaultMarginCallModel.cs", label="Duration = GetOrderDuration(order.Duration)", span="1758-1758"];
m9_855 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", span="1748-1748"];
m9_337 [cluster="System.IO.Stream.Write(byte[], int, int)", file="DefaultMarginCallModel.cs", label="Entry System.IO.Stream.Write(byte[], int, int)", span="0-0"];
m9_17 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m9_274 [cluster="bool.ToString()", file="DefaultMarginCallModel.cs", label="Entry bool.ToString()", span="0-0"];
m9_121 [cluster="RestRequest.cstr", file="DefaultMarginCallModel.cs", label="Entry RestRequest.cstr", span=""];
m9_363 [cluster="Unk.ToString", file="DefaultMarginCallModel.cs", label="Entry Unk.ToString", span=""];
m9_456 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", span="1607-1607"];
m9_795 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var holdingQuantity = _holdingsProvider.GetHoldingsQuantity(order.Symbol)", span="1609-1609"];
m9_796 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="holdingQuantity > 0 && order.Quantity < 0", span="1612-1612"];
m9_797 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="(holdingQuantity + order.Quantity) < 0", span="1614-1614"];
m9_799 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="holdingQuantity < 0 && order.Quantity > 0", span="1620-1620"];
m9_800 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="(holdingQuantity + order.Quantity) > 0", span="1622-1622"];
m9_798 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return true;", span="1617-1617"];
m9_802 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return false;", span="1628-1628"];
m9_801 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return true;", span="1625-1625"];
m9_803 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", span="1607-1607"];
m9_544 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", span="1086-1086"];
m9_545 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", span="1086-1086"];
m9_601 [cluster="Unk.ContainsKey", file="DefaultMarginCallModel.cs", label="Entry Unk.ContainsKey", span=""];
m9_246 [cluster="System.DateTime.ToString(string)", file="DefaultMarginCallModel.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m9_204 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", span="750-750"];
m9_344 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="DefaultMarginCallModel.cs", label="var fi = value.GetType().GetField(value.ToString())", span="753-753"];
m9_348 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="DefaultMarginCallModel.cs", label="return value.ToString();", span="762-762"];
m9_345 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="DefaultMarginCallModel.cs", label="var attributes = (EnumMemberAttribute[]) fi.GetCustomAttributes(typeof (EnumMemberAttribute), false)", span="754-754"];
m9_346 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="DefaultMarginCallModel.cs", label="attributes.Length > 0", span="756-756"];
m9_347 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="DefaultMarginCallModel.cs", label="return attributes[0].Value;", span="758-758"];
m9_349 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", span="750-750"];
m9_597 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m9_399 [cluster="Unk.ToList", file="DefaultMarginCallModel.cs", label="Entry Unk.ToList", span=""];
m9_87 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m9_370 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", span="813-813"];
m9_371 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="var orders = new List<Order>()", span="815-815"];
m9_372 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="var openOrders = GetIntradayAndPendingOrders().Where(OrderIsOpen)", span="816-816"];
m9_377 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="orders.Add(ConvertOrder(openOrder, out task))", span="824-824"];
m9_381 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="return orders;", span="834-834"];
m9_373 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="var tasks = new List<Task>()", span="818-818"];
m9_374 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label=openOrders, span="819-819"];
m9_379 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="tasks.Add(task)", span="827-827"];
m9_380 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="Task.WaitAll(tasks.ToArray())", span="832-832"];
m9_375 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="_cachedOpenOrdersByTradierOrderID[openOrder.Id] = openOrder", span="822-822"];
m9_376 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="Task task", span="823-823"];
m9_378 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="task != null", span="825-825"];
m9_382 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", span="813-813"];
m9_339 [cluster="System.Net.HttpWebResponse.GetResponseStream()", file="DefaultMarginCallModel.cs", label="Entry System.Net.HttpWebResponse.GetResponseStream()", span="0-0"];
m9_20 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", span="156-156"];
m9_21 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="AccessToken = accessToken", span="158-158"];
m9_22 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="RefreshToken = refreshToken", span="159-159"];
m9_23 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="_issuedAt = issuedAt", span="160-160"];
m9_24 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="_lifeSpan = lifeSpan", span="161-161"];
m9_25 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="UserId = userId", span="162-162"];
m9_26 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="_refreshTimer != null", span="164-164"];
m9_27 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="_refreshTimer.Dispose()", span="166-166"];
m9_28 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="_orderFillTimer != null", span="168-168"];
m9_29 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="_orderFillTimer.Dispose()", span="170-170"];
m9_30 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="var dueTime = ExpectedExpiry - DateTime.Now", span="173-173"];
m9_31 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="dueTime < TimeSpan.Zero", span="174-174"];
m9_34 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="_refreshTimer = new Timer(state => RefreshSession(), null, dueTime, period)", span="176-176"];
m9_32 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="dueTime = TimeSpan.Zero", span="174-174"];
m9_33 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="var period = TimeSpan.FromDays(1).Subtract(TimeSpan.FromMinutes(-1))", span="175-175"];
m9_35 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="double orderPollingIntervalInSeconds = Config.GetDouble(''tradier-order-poll-interval'', 1.0)", span="179-179"];
m9_36 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="var interval = (int)(1000*orderPollingIntervalInSeconds)", span="180-180"];
m9_37 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="_orderFillTimer = new Timer(state => CheckForFills(), null, interval, interval)", span="181-181"];
m9_38 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", span="156-156"];
m9_409 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", span="861-861"];
m9_410 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", file="DefaultMarginCallModel.cs", label="return new List<Cash>\r\n            {\r\n                new Cash(''USD'', GetBalanceDetails(_accountID).TotalCash, 1.0m)\r\n            };", span="863-866"];
m9_411 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", span="861-861"];
m9_596 [cluster="string.Format(string, object)", file="DefaultMarginCallModel.cs", label="Entry string.Format(string, object)", span="0-0"];
m9_460 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="124-124"];
m9_501 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m9_585 [cluster="Unk.Join", file="DefaultMarginCallModel.cs", label="Entry Unk.Join", span=""];
m9_85 [cluster="Unk.Execute", file="DefaultMarginCallModel.cs", label="Entry Unk.Execute", span=""];
m9_513 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m9_340 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="DefaultMarginCallModel.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m9_774 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", span="1561-1561"];
m9_775 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="holdingQuantity == 0", span="1566-1566"];
m9_776 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label=direction, span="1569-1569"];
m9_781 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="holdingQuantity > 0", span="1577-1577"];
m9_782 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label=direction, span="1579-1579"];
m9_787 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="holdingQuantity < 0", span="1589-1589"];
m9_788 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label=direction, span="1591-1591"];
m9_777 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="OrderDirection.Buy", span="1571-1571"];
m9_779 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="OrderDirection.Sell", span="1573-1573"];
m9_778 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="return TradierOrderDirection.Buy;", span="1572-1572"];
m9_780 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="return TradierOrderDirection.SellShort;", span="1574-1574"];
m9_783 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="OrderDirection.Buy", span="1581-1581"];
m9_785 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="OrderDirection.Sell", span="1584-1584"];
m9_784 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="return TradierOrderDirection.Buy;", span="1583-1583"];
m9_786 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="return TradierOrderDirection.Sell;", span="1586-1586"];
m9_793 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="return TradierOrderDirection.None;", span="1601-1601"];
m9_789 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="OrderDirection.Buy", span="1593-1593"];
m9_791 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="OrderDirection.Sell", span="1596-1596"];
m9_790 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="return TradierOrderDirection.BuyToCover;", span="1595-1595"];
m9_792 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="return TradierOrderDirection.SellShort;", span="1598-1598"];
m9_794 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", span="1561-1561"];
m9_563 [cluster="string.Format(string, params object[])", file="DefaultMarginCallModel.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m9_335 [cluster="System.Text.Encoding.GetBytes(string)", file="DefaultMarginCallModel.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m9_171 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", span="423-423"];
m9_172 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''accounts/{accountId}/orders'')", span="425-425"];
m9_173 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="DefaultMarginCallModel.cs", label="request.AddUrlSegment(''accountId'', _accountID.ToString())", span="426-426"];
m9_174 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="DefaultMarginCallModel.cs", label="var ordersContainer = Execute<TradierOrdersContainer>(request, TradierApiRequestType.Standard)", span="427-427"];
m9_175 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="DefaultMarginCallModel.cs", label="ordersContainer.Orders == null", span="429-429"];
m9_178 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="DefaultMarginCallModel.cs", label="return ordersContainer.Orders.Orders;", span="436-436"];
m9_176 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="DefaultMarginCallModel.cs", label="Log.Trace(''Tradier.FetchOrders(): No orders found'')", span="432-432"];
m9_177 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="DefaultMarginCallModel.cs", label="return new List<TradierOrder>();", span="433-433"];
m9_179 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", span="423-423"];
m9_385 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_384 [cluster="Unk.ConvertOrder", file="DefaultMarginCallModel.cs", label="Entry Unk.ConvertOrder", span=""];
m9_627 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1329-1329"];
m9_642 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="return !OrderIsOpen(order);", span="1331-1331"];
m9_643 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1329-1329"];
m9_413 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="874-874"];
m9_414 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var cachedOpenOrder = _cachedOpenOrdersByTradierOrderID.FirstOrDefault(x => x.Value.Symbol == order.Symbol).Value", span="877-877"];
m9_424 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var holdingQuantity = _holdingsProvider.GetHoldingsQuantity(order.Symbol)", span="900-900"];
m9_425 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var orderRequest = new TradierPlaceOrderRequest(order, TradierOrderClass.Equity,  holdingQuantity)", span="902-902"];
m9_426 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="bool crossesZero = OrderCrossesZero(order)", span="905-905"];
m9_429 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var secondOrderQuantity = order.Quantity - firstOrderQuantity", span="910-910"];
m9_431 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var restOfOrder = new TradierPlaceOrderRequest(order, TradierOrderClass.Equity, 0) {Quantity = Math.Abs(secondOrderQuantity)}", span="917-917"];
m9_433 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="_contingentOrdersByQCOrderID.AddOrUpdate(order.Id, new ContingentOrderQueue(order, restOfOrder))", span="920-920"];
m9_438 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="_contingentOrdersByQCOrderID.TryRemove(order.Id, out contingent)", span="929-929"];
m9_441 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="order.BrokerId.Add(closingOrderID)", span="934-934"];
m9_446 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="order.BrokerId.Add(response.Order.Id)", span="944-944"];
m9_415 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="cachedOpenOrder != null", span="878-878"];
m9_416 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var qcOrder = _orderMapping.GetOrderByBrokerageId((int) cachedOpenOrder.Id)", span="880-880"];
m9_420 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="_cachedOpenOrdersByTradierOrderID.TryRemove(cachedOpenOrder.Id, out tradierOrder)", span="886-886"];
m9_417 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="qcOrder == null", span="881-881"];
m9_422 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="_contingentOrdersByQCOrderID.TryRemove(qcOrder.Id, out contingent)", span="892-892"];
m9_423 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="CancelOrder(qcOrder)", span="896-896"];
m9_418 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="TradierOrder tradierOrder", span="884-884"];
m9_421 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="ContingentOrderQueue contingent", span="891-891"];
m9_419 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Log.Error(''TradierBrokerage.PlaceOrder(): Unable to locate existing QC Order when verifying single outstanding order per symbol.'')", span="885-885"];
m9_428 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var firstOrderQuantity = -holdingQuantity", span="909-909"];
m9_430 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="orderRequest.Quantity = Math.Abs(firstOrderQuantity)", span="912-912"];
m9_434 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var response = TradierPlaceOrder(orderRequest)", span="923-923"];
m9_443 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var response = TradierPlaceOrder(orderRequest)", span="939-939"];
m9_427 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label=crossesZero, span="906-906"];
m9_432 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="restOfOrder.ConvertStopOrderTypes()", span="918-918"];
m9_435 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="bool success = response.Errors.Errors.IsNullOrEmpty()", span="924-924"];
m9_440 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var closingOrderID = response.Order.Id", span="933-933"];
m9_436 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="!success", span="925-925"];
m9_437 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="ContingentOrderQueue contingent", span="928-928"];
m9_439 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return false;", span="930-930"];
m9_442 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return true;", span="935-935"];
m9_444 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="!response.Errors.Errors.IsNullOrEmpty()", span="940-940"];
m9_445 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return false;", span="942-942"];
m9_447 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return true;", span="945-945"];
m9_448 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="874-874"];
m9_19 [cluster="System.TimeSpan.FromMilliseconds(double)", file="DefaultMarginCallModel.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m9_180 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", span="442-442"];
m9_181 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''accounts/{accountId}/orders/'' + orderId)", span="444-444"];
m9_182 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="DefaultMarginCallModel.cs", label="request.AddUrlSegment(''accountId'', _accountID.ToString())", span="445-445"];
m9_183 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="DefaultMarginCallModel.cs", label="var detailsParent = Execute<TradierOrderDetailedContainer>(request, TradierApiRequestType.Standard)", span="446-446"];
m9_184 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="DefaultMarginCallModel.cs", label="return detailsParent.DetailedOrder;", span="447-447"];
m9_185 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", span="442-442"];
m9_856 [cluster="System.Math.Abs(int)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m9_123 [cluster="Unk.AddParameter", file="DefaultMarginCallModel.cs", label="Entry Unk.AddParameter", span=""];
m9_457 [cluster="System.Math.Abs(decimal)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m9_383 [cluster="Unk.Where", file="DefaultMarginCallModel.cs", label="Entry Unk.Where", span=""];
m9_83 [cluster="Unk.AddDefaultHeader", file="DefaultMarginCallModel.cs", label="Entry Unk.AddDefaultHeader", span=""];
m9_532 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="110-110"];
m9_539 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", span="1077-1077"];
m9_540 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="DefaultMarginCallModel.cs", label=IsConnected, span="1079-1079"];
m9_541 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="DefaultMarginCallModel.cs", label="return;", span="1079-1079"];
m9_542 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="DefaultMarginCallModel.cs", label="RefreshSession()", span="1080-1080"];
m9_543 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", span="1077-1077"];
m9_150 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_505 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1407-1407"];
m9_700 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label=type, span="1409-1409"];
m9_709 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label="throw new ArgumentOutOfRangeException(''type'', type, null);", span="1424-1424"];
m9_701 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label="OrderType.Market", span="1411-1411"];
m9_703 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label="OrderType.Limit", span="1414-1414"];
m9_705 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label="OrderType.StopMarket", span="1417-1417"];
m9_707 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label="OrderType.StopLimit", span="1420-1420"];
m9_702 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label="return TradierOrderType.Market;", span="1412-1412"];
m9_704 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label="return TradierOrderType.Limit;", span="1415-1415"];
m9_706 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label="return TradierOrderType.StopMarket;", span="1418-1418"];
m9_708 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label="return TradierOrderType.StopLimit;", span="1421-1421"];
m9_710 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1407-1407"];
m9_686 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m9_626 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", span="1725-1725"];
m9_841 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="DefaultMarginCallModel.cs", label="Contingents.Count == 0", span="1727-1727"];
m9_842 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="DefaultMarginCallModel.cs", label="return null;", span="1729-1729"];
m9_843 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="DefaultMarginCallModel.cs", label="return Contingents.Dequeue();", span="1731-1731"];
m9_844 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", span="1725-1725"];
m9_282 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", span="628-628"];
m9_283 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''markets/events/session'', Method.POST)", span="630-630"];
m9_284 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", file="DefaultMarginCallModel.cs", label="return Execute<TradierStreamSession>(request, TradierApiRequestType.Data, ''stream'');", span="631-631"];
m9_285 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", span="628-628"];
m9_697 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="1379-1379"];
m9_46 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="176-176"];
m9_47 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="RefreshSession()", span="176-176"];
m9_48 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="176-176"];
m9_50 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="181-181"];
m9_51 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="CheckForFills()", span="181-181"];
m9_52 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="181-181"];
m9_403 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="844-844"];
m9_406 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="845-845"];
m9_404 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Symbol", span="844-844"];
m9_405 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="844-844"];
m9_407 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Symbol", span="845-845"];
m9_408 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="845-845"];
m9_464 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Value.Symbol == order.Symbol", span="877-877"];
m9_463 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="877-877"];
m9_465 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="877-877"];
m9_510 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="966-966"];
m9_514 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="966-966"];
m9_511 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="_cachedOpenOrdersByTradierOrderID.ContainsKey(x)", span="966-966"];
m9_512 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="966-966"];
m9_515 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="_cachedOpenOrdersByTradierOrderID[x]", span="966-966"];
m9_516 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="966-966"];
m9_586 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="1180-1180"];
m9_589 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="1202-1216"];
m9_590 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="var updatedOrderLocal = GetOrder(cachedOrderLocal.Key)", span="1204-1204"];
m9_598 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="1220-1220"];
m9_603 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="1223-1223"];
m9_587 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Id", span="1180-1180"];
m9_588 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="1180-1180"];
m9_591 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="updatedOrderLocal == null", span="1205-1205"];
m9_592 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Log.Error(string.Format(''TradierBrokerage.CheckForFills(): Unable to locate order {0} in cached open orders.'', cachedOrderLocal.Key))", span="1207-1207"];
m9_593 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="ProcessPotentiallyUpdatedOrder(cachedOrderLocal.Value, updatedOrderLocal)", span="1211-1211"];
m9_594 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="_reentranceGuardByTradierOrderID.Remove(cachedOrderLocal.Key)", span="1215-1215"];
m9_595 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="1202-1216"];
m9_599 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="!_cachedOpenOrdersByTradierOrderID.ContainsKey(x.Key) && OrderIsOpen(x.Value)", span="1220-1220"];
m9_600 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="1220-1220"];
m9_604 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Key", span="1223-1223"];
m9_605 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="1223-1223"];
m9_634 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="var message = string.Format(''{0} Failed submitting contingent order for QC id: {1} Filled Tradier Order id: {2}'', qcOrder.Symbol, qcOrder.Id, updatedOrder.Id)", span="1292-1292"];
m9_629 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Log.Trace(''TradierBrokerage.SubmitContingentOrder(): Submitting contingent order for QC id: '' + qcOrder.Id)", span="1279-1279"];
m9_632 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="qcOrder.BrokerId.Add(response.Order.Id)", span="1285-1285"];
m9_636 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="_contingentReentranceGuardByQCOrderID.Remove(qcOrder.Id)", span="1295-1295"];
m9_630 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="var response = TradierPlaceOrder(order)", span="1281-1281"];
m9_628 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="1277-1296"];
m9_631 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="response.Errors.Errors.IsNullOrEmpty()", span="1282-1282"];
m9_633 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Log.Error(''TradierBrokerage.SubmitContingentOrder(): Failed to submit contingent order.'')", span="1291-1291"];
m9_635 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ContingentOrderFailed'', message))", span="1293-1293"];
m9_637 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="1277-1296"];
m9_695 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="((StopMarketOrder)qcOrder).StopPrice = GetOrder(order.Id).StopPrice", span="1375-1375"];
m9_698 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="((StopLimitOrder) qcOrder).StopPrice = GetOrder(order.Id).StopPrice", span="1379-1379"];
m9_694 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="1375-1375"];
m9_696 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="1375-1375"];
m9_699 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="1379-1379"];
m9_658 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="DefaultMarginCallModel.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m9_237 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", span="551-551"];
m9_238 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''markets/timesales'', Method.GET)", span="554-554"];
m9_239 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''symbol'', symbol, ParameterType.QueryString)", span="555-555"];
m9_240 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''interval'', GetEnumDescription(interval), ParameterType.QueryString)", span="556-556"];
m9_241 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''start'', start.ToString(''yyyy-MM-dd HH:mm''), ParameterType.QueryString)", span="557-557"];
m9_242 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''end'', end.ToString(''yyyy-MM-dd HH:mm''), ParameterType.QueryString)", span="558-558"];
m9_243 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="DefaultMarginCallModel.cs", label="var dataContainer = Execute<TradierTimeSeriesContainer>(request, TradierApiRequestType.Data, ''series'')", span="559-559"];
m9_244 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="DefaultMarginCallModel.cs", label="return dataContainer.TimeSeries;", span="560-560"];
m9_245 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", span="551-551"];
m9_531 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", span="103-103"];
m9_354 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", span="769-769"];
m9_355 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="DefaultMarginCallModel.cs", label="var obj = default(T)", span="771-771"];
m9_356 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="DefaultMarginCallModel.cs", label="dynamic dynDeserialized = JsonConvert.DeserializeObject(json)", span="776-776"];
m9_357 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="DefaultMarginCallModel.cs", label="obj = JsonConvert.DeserializeObject<T>(dynDeserialized[rootName].ToString())", span="777-777"];
m9_359 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="DefaultMarginCallModel.cs", label="Log.Error(''Tradier.DeserializeRemoveRoot(): Root Name ('' + rootName + ''): '' + err.Message)", span="781-781"];
m9_358 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="DefaultMarginCallModel.cs", label=Exception, span="779-779"];
m9_360 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="DefaultMarginCallModel.cs", label="return obj;", span="784-784"];
m9_361 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", span="769-769"];
m9_91 [cluster="BrokerageMessageEvent.cstr", file="DefaultMarginCallModel.cs", label="Entry BrokerageMessageEvent.cstr", span=""];
m9_687 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="27-27"];
m9_161 [cluster="Unk.AddUrlSegment", file="DefaultMarginCallModel.cs", label="Entry Unk.AddUrlSegment", span=""];
m9_127 [cluster="Unk.BuildUri", file="DefaultMarginCallModel.cs", label="Entry Unk.BuildUri", span=""];
m9_351 [cluster="System.Enum.ToString()", file="DefaultMarginCallModel.cs", label="Entry System.Enum.ToString()", span="0-0"];
m9_343 [cluster="Unk.Read", file="DefaultMarginCallModel.cs", label="Entry Unk.Read", span=""];
m9_584 [cluster="System.Threading.Tasks.Task.Run(System.Action)", file="DefaultMarginCallModel.cs", label="Entry System.Threading.Tasks.Task.Run(System.Action)", span="0-0"];
m9_336 [cluster="System.Net.HttpWebRequest.GetRequestStream()", file="DefaultMarginCallModel.cs", label="Entry System.Net.HttpWebRequest.GetRequestStream()", span="0-0"];
m9_186 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="454-454"];
m9_187 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''accounts/{accountId}/orders'')", span="466-466"];
m9_188 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="467-467"];
m9_189 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''class'', GetEnumDescription(classification))", span="470-470"];
m9_190 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''symbol'', symbol)", span="471-471"];
m9_191 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''duration'', GetEnumDescription(duration))", span="472-472"];
m9_192 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''type'', GetEnumDescription(type))", span="473-473"];
m9_193 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''quantity'', quantity)", span="474-474"];
m9_194 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''side'', GetEnumDescription(direction))", span="475-475"];
m9_195 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="price > 0", span="478-478"];
m9_196 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''price'', Math.Round(price, 2))", span="478-478"];
m9_197 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="stop > 0", span="479-479"];
m9_198 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''stop'', Math.Round(stop, 2))", span="479-479"];
m9_199 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="optionSymbol != ''''", span="480-480"];
m9_200 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''option_symbol'', optionSymbol)", span="480-480"];
m9_201 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="request.Method = Method.POST", span="483-483"];
m9_202 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="return Execute<TradierOrderResponse>(request, TradierApiRequestType.Orders);", span="485-485"];
m9_203 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="454-454"];
m9_458 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", span="1761-1761"];
m9_857 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="DefaultMarginCallModel.cs", label="Type == TradierOrderType.StopMarket", span="1764-1764"];
m9_858 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="DefaultMarginCallModel.cs", label="Type = TradierOrderType.Market", span="1766-1766"];
m9_860 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="DefaultMarginCallModel.cs", label="Type == TradierOrderType.StopLimit", span="1769-1769"];
m9_859 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="DefaultMarginCallModel.cs", label="Stop = 0m", span="1767-1767"];
m9_861 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="DefaultMarginCallModel.cs", label="Type = TradierOrderType.Limit", span="1771-1771"];
m9_862 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="DefaultMarginCallModel.cs", label="Stop = 0m", span="1772-1772"];
m9_863 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", span="1761-1761"];
m9_462 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="43-43"];
m9_92 [cluster="ApplicationException.cstr", file="DefaultMarginCallModel.cs", label="Entry ApplicationException.cstr", span=""];
m9_638 [cluster="string.Format(string, object, object, object)", file="DefaultMarginCallModel.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m9_412 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="61-61"];
m9_44 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Configuration.Config.GetDouble(string, double)", span="145-145"];
m9_149 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129"];
m9_538 [cluster="QuantConnect.Securities.Equity.EquityExchange.DateTimeIsOpen(System.DateTime)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.Equity.EquityExchange.DateTimeIsOpen(System.DateTime)", span="93-93"];
m9_18 [cluster="System.DateTime.DateTime()", file="DefaultMarginCallModel.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m9_398 [cluster="Unk.Select", file="DefaultMarginCallModel.cs", label="Entry Unk.Select", span=""];
m9_401 [cluster="Unk.ToDictionary", file="DefaultMarginCallModel.cs", label="Entry Unk.ToDictionary", span=""];
m9_639 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1318-1318"];
m9_640 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="return order.Status != TradierOrderStatus.Filled\r\n                && order.Status != TradierOrderStatus.Canceled\r\n                && order.Status != TradierOrderStatus.Expired\r\n                && order.Status != TradierOrderStatus.Rejected;", span="1320-1323"];
m9_641 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1318-1318"];
m9_450 [cluster="QuantConnect.Securities.IOrderMapping.GetOrderByBrokerageId(int)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.IOrderMapping.GetOrderByBrokerageId(int)", span="35-35"];
m9_466 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="954-954"];
m9_467 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Log.Trace(''TradierBrokerage.UpdateOrder(): '' + order)", span="956-956"];
m9_468 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="!order.BrokerId.Any()", span="958-958"];
m9_471 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var activeOrder = order.BrokerId.Where(x => _cachedOpenOrdersByTradierOrderID.ContainsKey(x)).Select(x => _cachedOpenOrdersByTradierOrderID[x]).SingleOrDefault()", span="966-966"];
m9_473 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Log.Trace(''Unable to locate active Tradier order for QC order id: '' + order.Id + '' with Tradier ids: '' + string.Join('', '', order.BrokerId))", span="969-969"];
m9_477 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="_contingentOrdersByQCOrderID.TryGetValue(order.Id, out contingent)", span="977-977"];
m9_479 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="quantity != order.AbsoluteQuantity", span="982-982"];
m9_483 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var orderType = ConvertOrderType(order.Type)", span="991-991"];
m9_484 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var orderDuration = GetOrderDuration(order.Duration)", span="992-992"];
m9_485 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var limitPrice = GetLimitPrice(order)", span="993-993"];
m9_486 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var stopPrice = GetStopPrice(order)", span="994-994"];
m9_469 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Log.Trace(''TradierBrokerage.UpdateOrder(): Unable to update order without BrokerId.'')", span="961-961"];
m9_470 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return false;", span="962-962"];
m9_472 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="activeOrder == null", span="967-967"];
m9_475 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="decimal quantity = activeOrder.Quantity", span="973-973"];
m9_487 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var response = ChangeOrder(_accountID, activeOrder.Id,\r\n                orderType,\r\n                orderDuration,\r\n                limitPrice,\r\n                stopPrice\r\n                )", span="995-1000"];
m9_490 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''UpdateFailed'', ''Failed to update Tradier order id: '' + activeOrder.Id + ''. '' + errors))", span="1005-1005"];
m9_474 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return false;", span="970-970"];
m9_476 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="ContingentOrderQueue contingent", span="976-976"];
m9_478 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="quantity = contingent.QCOrder.AbsoluteQuantity", span="979-979"];
m9_492 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="contingent != null", span="1010-1010"];
m9_493 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="contingent.Contingents", span="1012-1012"];
m9_480 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Log.Trace(''TradierBrokerage.UpdateOrder(): Unable to update order quantity.'')", span="984-984"];
m9_481 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''UpdateRejected'', ''Unable to modify Tradier order quantities.''))", span="985-985"];
m9_482 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return false;", span="986-986"];
m9_494 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="orderRequest.Type = orderType", span="1014-1014"];
m9_495 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="orderRequest.Duration = orderDuration", span="1015-1015"];
m9_496 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="orderRequest.Price = limitPrice", span="1016-1016"];
m9_497 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="orderRequest.Stop = stopPrice", span="1017-1017"];
m9_488 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="!response.Errors.Errors.IsNullOrEmpty()", span="1002-1002"];
m9_489 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="string errors = string.Join('', '', response.Errors.Errors)", span="1004-1004"];
m9_491 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return false;", span="1006-1006"];
m9_499 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return true;", span="1022-1022"];
m9_498 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="orderRequest.ConvertStopOrderTypes()", span="1018-1018"];
m9_500 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="954-954"];
m9_736 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", span="1479-1479"];
m9_737 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label=status, span="1481-1481"];
m9_753 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="throw new ArgumentOutOfRangeException(''status'', status, null);", span="1506-1506"];
m9_738 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="OrderStatus.New", span="1483-1483"];
m9_740 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="OrderStatus.Update", span="1486-1486"];
m9_743 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="OrderStatus.PartiallyFilled", span="1490-1490"];
m9_745 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="OrderStatus.Filled", span="1493-1493"];
m9_747 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="OrderStatus.Canceled", span="1496-1496"];
m9_749 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="OrderStatus.None", span="1499-1499"];
m9_751 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="OrderStatus.Invalid", span="1502-1502"];
m9_739 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="return TradierOrderStatus.Pending;", span="1484-1484"];
m9_741 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="OrderStatus.Submitted", span="1487-1487"];
m9_742 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="return TradierOrderStatus.Submitted;", span="1488-1488"];
m9_744 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="return TradierOrderStatus.PartiallyFilled;", span="1491-1491"];
m9_746 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="return TradierOrderStatus.Filled;", span="1494-1494"];
m9_748 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="return TradierOrderStatus.Canceled;", span="1497-1497"];
m9_750 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="return TradierOrderStatus.Pending;", span="1500-1500"];
m9_752 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="return TradierOrderStatus.Rejected;", span="1503-1503"];
m9_754 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", span="1479-1479"];
m9_453 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="1030-1030"];
m9_517 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Log.Trace(''TradierBrokerage.CancelOrder(): '' + order)", span="1032-1032"];
m9_518 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="!order.BrokerId.Any()", span="1034-1034"];
m9_521 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="order.BrokerId", span="1040-1040"];
m9_528 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="OnOrderEvent(new OrderEvent(order, ''Tradier Fill Event''){Status = OrderStatus.Canceled})", span="1052-1052"];
m9_519 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Log.Trace(''TradierBrokerage.CancelOrder(): Unable to cancel order without BrokerId.'')", span="1036-1036"];
m9_520 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return false;", span="1037-1037"];
m9_522 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var response = CancelOrder(_accountID, orderID)", span="1042-1042"];
m9_529 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return true;", span="1056-1056"];
m9_527 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="_cachedOpenOrdersByTradierOrderID.TryRemove(orderID, out tradierOrder)", span="1051-1051"];
m9_523 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="response == null", span="1043-1043"];
m9_525 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="response.Errors.Errors.IsNullOrEmpty() && response.Order.Status == ''ok''", span="1048-1048"];
m9_524 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return false;", span="1046-1046"];
m9_526 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="TradierOrder tradierOrder", span="1050-1050"];
m9_530 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="1030-1030"];
m9_90 [cluster="Unk.Error", file="DefaultMarginCallModel.cs", label="Entry Unk.Error", span=""];
m9_125 [cluster="Unk.Trace", file="DefaultMarginCallModel.cs", label="Entry Unk.Trace", span=""];
m9_624 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", span="1447-1447"];
m9_719 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label=status, span="1449-1449"];
m9_720 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="TradierOrderStatus.Filled", span="1451-1451"];
m9_722 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="TradierOrderStatus.Canceled", span="1454-1454"];
m9_724 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="TradierOrderStatus.Open", span="1457-1457"];
m9_727 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="TradierOrderStatus.Expired", span="1461-1461"];
m9_730 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="TradierOrderStatus.Pending", span="1465-1465"];
m9_732 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="TradierOrderStatus.PartiallyFilled", span="1468-1468"];
m9_734 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="throw new ArgumentOutOfRangeException();", span="1472-1472"];
m9_721 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="return OrderStatus.Filled;", span="1452-1452"];
m9_723 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="return OrderStatus.Canceled;", span="1455-1455"];
m9_725 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="TradierOrderStatus.Submitted", span="1458-1458"];
m9_726 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="return OrderStatus.Submitted;", span="1459-1459"];
m9_728 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="TradierOrderStatus.Rejected", span="1462-1462"];
m9_729 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="return OrderStatus.Invalid;", span="1463-1463"];
m9_731 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="return OrderStatus.New;", span="1466-1466"];
m9_733 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="return OrderStatus.PartiallyFilled;", span="1469-1469"];
m9_735 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", span="1447-1447"];
m9_387 [cluster="System.Threading.Tasks.Task.WaitAll(params System.Threading.Tasks.Task[])", file="DefaultMarginCallModel.cs", label="Entry System.Threading.Tasks.Task.WaitAll(params System.Threading.Tasks.Task[])", span="0-0"];
m9_260 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", span="592-592"];
m9_261 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''markets/calendar'', Method.GET)", span="594-594"];
m9_262 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''month'', month.ToString())", span="595-595"];
m9_263 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''year'', year.ToString())", span="596-596"];
m9_264 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="DefaultMarginCallModel.cs", label="var calendarContainer = Execute<TradierCalendarStatus>(request, TradierApiRequestType.Data, ''calendar'')", span="597-597"];
m9_265 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="DefaultMarginCallModel.cs", label="return calendarContainer.Days.Days;", span="598-598"];
m9_266 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", span="592-592"];
m9_286 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", span="639-639"];
m9_287 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="bool success", span="641-641"];
m9_292 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="yield break;", span="648-648"];
m9_314 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="yield break;", span="696-696"];
m9_325 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="yield break;", span="723-723"];
m9_331 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="yield return tsd;", span="741-741"];
m9_288 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var symbolJoined = String.Join('','', symbols)", span="642-642"];
m9_289 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var session = CreateStreamSession()", span="643-643"];
m9_299 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var postData = ''symbols='' + symbolJoined + ''&sessionid='' + session.SessionId", span="665-665"];
m9_290 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="session == null || session.SessionId == null || session.Url == null", span="645-645"];
m9_293 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="Log.Trace(''Tradier.Stream(): Created Stream Session Id: '' + session.SessionId + '' Url:'' + session.Url, true)", span="650-650"];
m9_296 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="request = (HttpWebRequest) WebRequest.Create(session.Url)", span="658-658"];
m9_291 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="Log.Error(''Tradier.Stream(): Failed to Created Stream Session'', true)", span="647-647"];
m9_294 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="HttpWebRequest request", span="653-653"];
m9_295 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="success = true", span="657-657"];
m9_297 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="request.Accept = ''application/json''", span="661-661"];
m9_298 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="request.Headers.Add(''Authorization'', ''Bearer '' + AccessToken)", span="662-662"];
m9_301 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="request.Method = ''POST''", span="670-670"];
m9_302 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="request.ContentType = ''application/x-www-form-urlencoded''", span="671-671"];
m9_303 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="request.ContentLength = encodedData.Length", span="672-672"];
m9_304 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var postStream = request.GetRequestStream()", span="677-677"];
m9_311 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var response = (HttpWebResponse) request.GetResponse()", span="692-692"];
m9_300 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var encodedData = Encoding.ASCII.GetBytes(postData)", span="667-667"];
m9_305 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="postStream.Write(encodedData, 0, encodedData.Length)", span="679-679"];
m9_306 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label=Exception, span="682-682"];
m9_309 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="!success", span="688-688"];
m9_307 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="Log.Error(''Tradier.Stream(): Failed to write session parameters to URL: '' + err.Message + '' >>  ST >>'' + err.StackTrace, true)", span="684-684"];
m9_308 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="success = false", span="685-685"];
m9_310 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="Log.Trace(''Tradier.Stream(): Session Created, Reading Stream...'', true)", span="691-691"];
m9_312 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var tradierStream = response.GetResponseStream()", span="693-693"];
m9_313 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="tradierStream == null", span="694-694"];
m9_315 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var sr = new StreamReader(tradierStream)", span="699-699"];
m9_316 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var jsonReader = new JsonTextReader(sr)", span="700-700"];
m9_317 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var serializer = new JsonSerializer()", span="702-702"];
m9_318 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="jsonReader.SupportMultipleContent = true", span="703-703"];
m9_327 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="tsd = serializer.Deserialize<TradierStreamData>(jsonReader)", span="730-730"];
m9_319 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label=true, span="706-706"];
m9_321 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="successfulRead = jsonReader.Read()", span="712-712"];
m9_320 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="bool successfulRead", span="708-708"];
m9_322 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label=Exception, span="714-714"];
m9_324 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="!successfulRead", span="720-720"];
m9_323 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="Log.Error(''TradierBrokerage.Stream(): '' + err.Message)", span="716-716"];
m9_326 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="TradierStreamData tsd = null", span="727-727"];
m9_328 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label=Exception, span="732-732"];
m9_330 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="tsd != null", span="739-739"];
m9_329 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="Log.Error(''TradierBrokerage.Stream(): '' + err.Message)", span="735-735"];
m9_332 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", span="639-639"];
m9_503 [cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="DefaultMarginCallModel.cs", label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m9_124 [cluster="Unk.FromSeconds", file="DefaultMarginCallModel.cs", label="Entry Unk.FromSeconds", span=""];
m9_691 [cluster="System.NotImplementedException.NotImplementedException(string)", file="DefaultMarginCallModel.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m9_402 [cluster="Unk.TryGetValue", file="DefaultMarginCallModel.cs", label="Entry Unk.TryGetValue", span=""];
m9_43 [cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", span="0-0"];
m9_508 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", span="1668-1668"];
m9_821 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var stopm = order as StopMarketOrder", span="1670-1670"];
m9_824 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var stopl = order as StopLimitOrder", span="1675-1675"];
m9_822 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="stopm != null", span="1671-1671"];
m9_823 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return stopm.StopPrice;", span="1673-1673"];
m9_825 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="stopl != null", span="1676-1676"];
m9_826 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return stopl.StopPrice;", span="1678-1678"];
m9_827 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return 0;", span="1680-1680"];
m9_828 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", span="1668-1668"];
m9_845 [cluster="System.Collections.Generic.Queue<T>.Dequeue()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0"];
m9_126 [cluster="Unk.OnSessionRefreshed", file="DefaultMarginCallModel.cs", label="Entry Unk.OnSessionRefreshed", span=""];
m9_582 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", span="1233-1233"];
m9_606 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="updatedOrder.RemainingQuantity != cachedOrder.RemainingQuantity \r\n             || ConvertStatus(updatedOrder.Status) != ConvertStatus(cachedOrder.Status)", span="1236-1237"];
m9_607 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="var qcOrder = _orderMapping.GetOrderByBrokerageId((int)updatedOrder.Id)", span="1239-1239"];
m9_608 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="var fill = new OrderEvent(qcOrder, ''Tradier Fill Event'')\r\n                {\r\n                    Status = ConvertStatus(updatedOrder.Status),\r\n                    // this is guaranteed to be wrong in the event we have multiple fills within our polling interval,\r\n                    // we're able to partially cope with the fill quantity by diffing the previous info vs current info\r\n                    // but the fill price will always be the most recent fill, so if we have two fills with 1/10 of a second\r\n                    // we'll get the latter fill price, so for large orders this can lead to inconsistent state\r\n                    FillPrice = updatedOrder.LastFillPrice,\r\n                    FillQuantity = (int)(updatedOrder.QuantityExecuted - cachedOrder.QuantityExecuted)\r\n                }", span="1240-1249"];
m9_609 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="IsShort(updatedOrder.Direction)", span="1252-1252"];
m9_619 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="Task.Run(() =>\r\n                            {\r\n                                Log.Trace(''TradierBrokerage.SubmitContingentOrder(): Submitting contingent order for QC id: '' + qcOrder.Id);\r\n                                \r\n                                var response = TradierPlaceOrder(order);\r\n                                if (response.Errors.Errors.IsNullOrEmpty())\r\n                                {\r\n                                    // add the new brokerage id for retrieval later\r\n                                    qcOrder.BrokerId.Add(response.Order.Id);\r\n                                }\r\n                                else\r\n                                {\r\n                                    // if we failed to place this order I don't know what to do, we've filled the first part\r\n                                    // and failed to place the second... strange.\r\n                                    Log.Error(''TradierBrokerage.SubmitContingentOrder(): Failed to submit contingent order.'');\r\n                                    var message = string.Format(''{0} Failed submitting contingent order for QC id: {1} Filled Tradier Order id: {2}'', qcOrder.Symbol, qcOrder.Id, updatedOrder.Id);\r\n                                    OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ContingentOrderFailed'', message));\r\n                                }\r\n                                _contingentReentranceGuardByQCOrderID.Remove(qcOrder.Id);\r\n                            })", span="1277-1296"];
m9_621 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="OrderIsClosed(updatedOrder)", span="1305-1305"];
m9_622 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="_cachedOpenOrdersByTradierOrderID.TryRemove(updatedOrder.Id, out cachedOrder)", span="1307-1307"];
m9_612 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="fill.Status == OrderStatus.Filled && _contingentOrdersByQCOrderID.TryGetValue(qcOrder.Id, out contingent)", span="1259-1259"];
m9_613 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="_contingentReentranceGuardByQCOrderID.Add(qcOrder.Id)", span="1262-1262"];
m9_616 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="_contingentOrdersByQCOrderID.TryRemove(qcOrder.Id, out contingent)", span="1268-1268"];
m9_610 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="fill.FillQuantity *= -1", span="1254-1254"];
m9_618 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="fill.Status = OrderStatus.PartiallyFilled", span="1275-1275"];
m9_620 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="OnOrderEvent(fill)", span="1301-1301"];
m9_611 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="ContingentOrderQueue contingent", span="1258-1258"];
m9_614 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="var order = contingent.Next()", span="1264-1264"];
m9_615 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="order == null || contingent.Contingents.Count == 0", span="1265-1265"];
m9_617 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="order != null", span="1271-1271"];
m9_623 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", span="1233-1233"];
m9_353 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="DefaultMarginCallModel.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m9_452 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m9_388 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", span="841-841"];
m9_389 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="DefaultMarginCallModel.cs", label="var holdings = GetPositions().Select(ConvertHolding).ToList()", span="843-843"];
m9_390 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="DefaultMarginCallModel.cs", label="var symbols = holdings.Select(x => x.Symbol).ToList()", span="844-844"];
m9_392 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="DefaultMarginCallModel.cs", label=holdings, span="846-846"];
m9_396 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="DefaultMarginCallModel.cs", label="return holdings;", span="854-854"];
m9_391 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="DefaultMarginCallModel.cs", label="var quotes = GetQuotes(symbols).ToDictionary(x => x.Symbol)", span="845-845"];
m9_394 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="DefaultMarginCallModel.cs", label="quotes.TryGetValue(holding.Symbol, out quote)", span="849-849"];
m9_393 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="DefaultMarginCallModel.cs", label="TradierQuote quote", span="848-848"];
m9_395 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="DefaultMarginCallModel.cs", label="holding.MarketPrice = quote.Last", span="851-851"];
m9_397 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", span="841-841"];
m9_659 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", span="1361-1361"];
m9_660 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="task = null", span="1363-1363"];
m9_662 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="order.Type", span="1365-1365"];
m9_664 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder = new LimitOrder {LimitPrice = order.Price}", span="1368-1368"];
m9_669 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="task = Task.Run(() => ((StopMarketOrder)qcOrder).StopPrice = GetOrder(order.Id).StopPrice)", span="1375-1375"];
m9_671 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder = new StopLimitOrder {LimitPrice = order.Price}", span="1378-1378"];
m9_672 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="task = Task.Run(() => ((StopLimitOrder) qcOrder).StopPrice = GetOrder(order.Id).StopPrice)", span="1379-1379"];
m9_673 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="throw new NotImplementedException(''The Tradier order type '' + order.Type + '' is not implemented.'');", span="1386-1386"];
m9_674 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder.Symbol = order.Symbol", span="1388-1388"];
m9_675 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder.Quantity = ConvertQuantity(order)", span="1389-1389"];
m9_677 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder.Status = ConvertStatus(order.Status)", span="1391-1391"];
m9_678 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder.BrokerId.Add(order.Id)", span="1392-1392"];
m9_679 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder.Duration = ConvertDuration(order.Duration)", span="1394-1394"];
m9_680 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="var orderByBrokerageId = _orderMapping.GetOrderByBrokerageId((int) order.Id)", span="1395-1395"];
m9_683 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder.Time = order.TransactionDate", span="1400-1400"];
m9_661 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="Order qcOrder", span="1364-1364"];
m9_663 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="TradierOrderType.Limit", span="1367-1367"];
m9_665 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="TradierOrderType.Market", span="1370-1370"];
m9_667 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="TradierOrderType.StopMarket", span="1373-1373"];
m9_670 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="TradierOrderType.StopLimit", span="1377-1377"];
m9_666 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder = new MarketOrder()", span="1371-1371"];
m9_668 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder = new StopMarketOrder()", span="1374-1374"];
m9_676 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder.SecurityType = SecurityType.Equity", span="1390-1390"];
m9_682 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="qcOrder.Id = orderByBrokerageId.Id", span="1398-1398"];
m9_684 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="return qcOrder;", span="1401-1401"];
m9_681 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="orderByBrokerageId != null", span="1396-1396"];
m9_685 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", span="1361-1361"];
m9_13 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m9_219 [cluster="decimal.ToString(System.IFormatProvider)", file="DefaultMarginCallModel.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m9_459 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", span="1716-1716"];
m9_837 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="DefaultMarginCallModel.cs", label="QCOrder = qcOrder", span="1718-1718"];
m9_838 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="DefaultMarginCallModel.cs", label="Contingents = new Queue<TradierPlaceOrderRequest>(contingents)", span="1719-1719"];
m9_839 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", span="1716-1716"];
m9_602 [cluster="Unk.OrderIsOpen", file="DefaultMarginCallModel.cs", label="Entry Unk.OrderIsOpen", span=""];
m9_247 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", span="566-566"];
m9_248 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''markets/history'', Method.GET)", span="571-571"];
m9_249 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''symbol'', symbol, ParameterType.QueryString)", span="572-572"];
m9_250 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''start'', start.ToString(''yyyy-MM-dd''), ParameterType.QueryString)", span="573-573"];
m9_251 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''end'', end.ToString(''yyyy-MM-dd''), ParameterType.QueryString)", span="574-574"];
m9_252 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''interval'', GetEnumDescription(interval))", span="575-575"];
m9_253 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="DefaultMarginCallModel.cs", label="var dataContainer = Execute<TradierHistoryDataContainer>(request, TradierApiRequestType.Data, ''history'')", span="576-576"];
m9_254 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="DefaultMarginCallModel.cs", label="return dataContainer.Data;", span="577-577"];
m9_255 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", span="566-566"];
m9_40 [cluster="System.TimeSpan.FromDays(double)", file="DefaultMarginCallModel.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m9_449 [cluster="Unk.FirstOrDefault", file="DefaultMarginCallModel.cs", label="Entry Unk.FirstOrDefault", span=""];
m9_88 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="167-167"];
m9_581 [cluster="System.Threading.Monitor.TryEnter(object)", file="DefaultMarginCallModel.cs", label="Entry System.Threading.Monitor.TryEnter(object)", span="0-0"];
m9_809 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", span="1648-1648"];
m9_810 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="order.Type", span="1650-1650"];
m9_811 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="OrderType.Market", span="1652-1652"];
m9_813 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="OrderType.Limit", span="1654-1654"];
m9_815 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="OrderType.StopMarket", span="1656-1656"];
m9_817 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="OrderType.StopLimit", span="1658-1658"];
m9_819 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="throw new ArgumentOutOfRangeException();", span="1661-1661"];
m9_812 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return TradierOrderType.Market;", span="1653-1653"];
m9_814 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return TradierOrderType.Limit;", span="1655-1655"];
m9_816 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return TradierOrderType.StopMarket;", span="1657-1657"];
m9_818 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return TradierOrderType.StopLimit;", span="1659-1659"];
m9_820 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", span="1648-1648"];
m9_205 [cluster="System.Math.Round(decimal, int)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m9_49 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", span="266-266"];
m9_93 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="var raw = ''''", span="271-271"];
m9_94 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="bool success", span="272-272"];
m9_95 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label=_lockAccessCredentials, span="273-273"];
m9_96 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="var client = new RestClient(''https://www.quantconnect.com/terminal/'')", span="278-278"];
m9_97 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''processTradier'', Method.GET)", span="281-281"];
m9_101 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="var result = client.Execute(request)", span="287-287"];
m9_112 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="Log.Error(''Tradier.RefreshSession(): Error Refreshing Session: URL: '' + client.BuildUri(request) + '' Response: '' + result.Content)", span="305-305"];
m9_98 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="request.AddParameter(''uid'', UserId.ToString(), ParameterType.GetOrPost)", span="282-282"];
m9_99 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="request.AddParameter(''accessToken'', AccessToken, ParameterType.GetOrPost)", span="283-283"];
m9_100 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="request.AddParameter(''refreshToken'', RefreshToken, ParameterType.GetOrPost)", span="284-284"];
m9_102 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="raw = result.Content", span="288-288"];
m9_103 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="var newTokens = JsonConvert.DeserializeObject<TokenResponse>(result.Content)", span="291-291"];
m9_109 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="Log.Trace(''SESSION REFRESHED: Access: '' + AccessToken + '' Refresh: '' + RefreshToken + '' Issued At: '' + _lifeSpan + '' JSON>>''\r\n                            + result.Content)", span="298-299"];
m9_115 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="Log.Error(''Tradier.RefreshSession(): '' + err.Message + '' >> '' + raw)", span="311-311"];
m9_104 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="newTokens != null && newTokens.Success", span="292-292"];
m9_105 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="AccessToken = newTokens.AccessToken", span="294-294"];
m9_106 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="RefreshToken = newTokens.RefreshToken", span="295-295"];
m9_107 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="_issuedAt = newTokens.IssuedAt", span="296-296"];
m9_108 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="_lifeSpan = TimeSpan.FromSeconds(newTokens.ExpiresIn)", span="297-297"];
m9_110 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="OnSessionRefreshed(newTokens)", span="300-300"];
m9_111 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="success = true", span="301-301"];
m9_113 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="success = false", span="306-306"];
m9_114 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label=Exception, span="309-309"];
m9_117 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="!success", span="316-316"];
m9_116 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="success = false", span="312-312"];
m9_119 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="return success;", span="322-322"];
m9_118 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''RefreshSession'', ''Failed to refresh access token.''))", span="319-319"];
m9_120 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", span="266-266"];
m9_151 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", span="383-383"];
m9_152 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''accounts/{accountId}/history'', Method.GET)", span="385-385"];
m9_153 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="DefaultMarginCallModel.cs", label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="386-386"];
m9_154 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="DefaultMarginCallModel.cs", label="var eventContainer = Execute<TradierEventContainer>(request, TradierApiRequestType.Standard)", span="388-388"];
m9_155 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="DefaultMarginCallModel.cs", label="eventContainer.TradierEvents == null || eventContainer.TradierEvents.Events == null", span="390-390"];
m9_158 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="DefaultMarginCallModel.cs", label="return eventContainer.TradierEvents.Events;", span="397-397"];
m9_156 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="DefaultMarginCallModel.cs", label="Log.Trace(''Tradier.GetAccountEvents(): No events found'')", span="393-393"];
m9_157 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="DefaultMarginCallModel.cs", label="return new List<TradierEvent>();", span="394-394"];
m9_159 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", span="383-383"];
m9_369 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="DefaultMarginCallModel.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m9_506 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", span="1634-1634"];
m9_804 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="DefaultMarginCallModel.cs", label=duration, span="1636-1636"];
m9_805 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="DefaultMarginCallModel.cs", label="OrderDuration.GTC", span="1638-1638"];
m9_807 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="DefaultMarginCallModel.cs", label="throw new ArgumentOutOfRangeException();", span="1641-1641"];
m9_806 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="DefaultMarginCallModel.cs", label="return TradierOrderDuration.GTC;", span="1639-1639"];
m9_808 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", span="1634-1634"];
m9_256 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", span="583-583"];
m9_257 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''markets/clock'', Method.GET)", span="585-585"];
m9_258 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="DefaultMarginCallModel.cs", label="return Execute<TradierMarketStatus>(request, TradierApiRequestType.Data, ''clock'');", span="586-586"];
m9_259 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", span="583-583"];
m9_15 [cluster="System.Enum.GetValues(System.Type)", file="DefaultMarginCallModel.cs", label="Entry System.Enum.GetValues(System.Type)", span="0-0"];
m9_45 [cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, int, int)", file="DefaultMarginCallModel.cs", label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, int, int)", span="0-0"];
m9_507 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", span="1688-1688"];
m9_829 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var limit = order as LimitOrder", span="1690-1690"];
m9_832 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="var stopl = order as StopLimitOrder", span="1695-1695"];
m9_830 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="limit != null", span="1691-1691"];
m9_831 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return limit.LimitPrice;", span="1693-1693"];
m9_833 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="stopl != null", span="1696-1696"];
m9_834 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return stopl.LimitPrice;", span="1698-1698"];
m9_835 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return 0;", span="1700-1700"];
m9_836 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", span="1688-1688"];
m9_362 [cluster="Unk.DeserializeObject", file="DefaultMarginCallModel.cs", label="Entry Unk.DeserializeObject", span=""];
m9_692 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1517-1517"];
m9_755 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="order.Direction", span="1519-1519"];
m9_760 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="return (int) order.Quantity;", span="1525-1525"];
m9_765 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="return -(int) order.Quantity;", span="1531-1531"];
m9_756 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.Buy", span="1521-1521"];
m9_761 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.SellShort", span="1527-1527"];
m9_766 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.None", span="1533-1533"];
m9_768 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="throw new ArgumentOutOfRangeException();", span="1537-1537"];
m9_757 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.BuyToCover", span="1522-1522"];
m9_758 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.BuyToClose", span="1523-1523"];
m9_759 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.BuyToOpen", span="1524-1524"];
m9_762 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.Sell", span="1528-1528"];
m9_763 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.SellToOpen", span="1529-1529"];
m9_764 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.SellToClose", span="1530-1530"];
m9_767 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="return 0;", span="1534-1534"];
m9_769 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1517-1517"];
m9_718 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="DefaultMarginCallModel.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m9_562 [cluster="string.Format(string, object, object)", file="DefaultMarginCallModel.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m9_689 [cluster="System.Threading.Tasks.Task.Run<TResult>(System.Func<TResult>)", file="DefaultMarginCallModel.cs", label="Entry System.Threading.Tasks.Task.Run<TResult>(System.Func<TResult>)", span="0-0"];
m9_461 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", span="1091-1091"];
m9_546 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="TradierOrderClass classification = TradierOrderClass.Equity", span="1093-1093"];
m9_548 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="order.Price != 0 || order.Stop != 0", span="1096-1096"];
m9_549 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="stopLimit = string.Format('' at{0}{1}'', \r\n                    order.Stop == 0 ? '''' : '' stop '' + order.Stop, \r\n                    order.Price == 0 ? '''' : '' limit '' + order.Price\r\n                    )", span="1098-1101"];
m9_550 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="Log.Trace(string.Format(''TradierBrokerage.TradierPlaceOrder(): {0} to {1} {2} units of {3}{4}'', \r\n                order.Type, order.Direction, order.Quantity, order.Symbol, stopLimit)\r\n                )", span="1104-1106"];
m9_551 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="var response = PlaceOrder(_accountID, \r\n                order.Classification,\r\n                order.Direction,\r\n                order.Symbol,\r\n                order.Quantity,\r\n                order.Price,\r\n                order.Stop,\r\n                order.OptionSymbol,\r\n                order.Type,\r\n                order.Duration\r\n                )", span="1108-1118"];
m9_553 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="OnOrderEvent(new OrderEvent(order.QCOrder){Status = OrderStatus.Submitted})", span="1124-1124"];
m9_554 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="_cachedOpenOrdersByTradierOrderID.AddOrUpdate(response.Order.Id, new TradierOrderDetailed\r\n                {\r\n                    Id = response.Order.Id,\r\n                    Quantity = order.Quantity,\r\n                    Status = TradierOrderStatus.Submitted,\r\n                    Symbol = order.Symbol,\r\n                    Type = order.Type,\r\n                    TransactionDate = DateTime.Now,\r\n                    AverageFillPrice = 0m,\r\n                    Class = classification,\r\n                    CreatedDate = DateTime.Now,\r\n                    Direction = order.Direction,\r\n                    Duration = order.Duration,\r\n                    LastFillPrice = 0m,\r\n                    LastFillQuantity = 0m,\r\n                    Legs = new List<TradierOrderLeg>(),\r\n                    NumberOfLegs = 0,\r\n                    Price = order.Price,\r\n                    QuantityExecuted = 0m,\r\n                    RemainingQuantity = order.Quantity,\r\n                    StopPrice = order.Stop\r\n                })", span="1127-1148"];
m9_555 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="OnOrderEvent(new OrderEvent(order.QCOrder) {Status = OrderStatus.Invalid})", span="1153-1153"];
m9_556 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="var message = ''Order '' + order.QCOrder.Id + '': '' + string.Join(Environment.NewLine, response.Errors.Errors)", span="1155-1155"];
m9_557 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="string.IsNullOrEmpty(order.QCOrder.Tag)", span="1156-1156"];
m9_558 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="order.QCOrder.Tag = message", span="1158-1158"];
m9_547 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="string stopLimit = string.Empty", span="1095-1095"];
m9_552 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="response.Errors.Errors.IsNullOrEmpty()", span="1121-1121"];
m9_560 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="return response;", span="1164-1164"];
m9_559 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''OrderError'', message))", span="1161-1161"];
m9_561 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", span="1091-1091"];
m9_220 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", span="517-517"];
m9_221 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''accounts/{accountId}/orders/{orderId}'')", span="520-520"];
m9_222 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="DefaultMarginCallModel.cs", label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="521-521"];
m9_223 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="DefaultMarginCallModel.cs", label="request.AddUrlSegment(''orderId'', orderId.ToString())", span="522-522"];
m9_224 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="DefaultMarginCallModel.cs", label="request.Method = Method.DELETE", span="523-523"];
m9_225 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="DefaultMarginCallModel.cs", label="return Execute<TradierOrderResponse>(request, TradierApiRequestType.Orders);", span="526-526"];
m9_226 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", span="517-517"];
m9_454 [cluster="QuantConnect.Securities.IHoldingsProvider.GetHoldingsQuantity(string)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.IHoldingsProvider.GetHoldingsQuantity(string)", span="41-41"];
m9_16 [cluster="System.TimeSpan.FromSeconds(double)", file="DefaultMarginCallModel.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m9_533 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="1064-1064"];
m9_534 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="!Exchange.DateTimeIsOpen(DateTime.Now)", span="1067-1067"];
m9_536 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="return order.SecurityType == SecurityType.Equity;", span="1071-1071"];
m9_535 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ExtendedMarket'', ''Tradier does not support extended market hours trading.  Your order will be processed at market open.''))", span="1069-1069"];
m9_537 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="1064-1064"];
m9_206 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", span="491-491"];
m9_207 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''accounts/{accountId}/orders/{orderId}'')", span="499-499"];
m9_208 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="500-500"];
m9_209 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="request.AddUrlSegment(''orderId'', orderId.ToString())", span="501-501"];
m9_211 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''type'', GetEnumDescription(type))", span="505-505"];
m9_212 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''duration'', GetEnumDescription(duration))", span="506-506"];
m9_213 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="price != 0", span="507-507"];
m9_214 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''price'', Math.Round(price, 2).ToString(CultureInfo.InvariantCulture))", span="507-507"];
m9_215 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="stop != 0", span="508-508"];
m9_216 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''stop'', Math.Round(stop, 2).ToString(CultureInfo.InvariantCulture))", span="508-508"];
m9_210 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="request.Method = Method.PUT", span="502-502"];
m9_217 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="return Execute<TradierOrderResponse>(request, TradierApiRequestType.Orders);", span="511-511"];
m9_218 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", span="491-491"];
m9_333 [cluster="System.Net.WebRequest.Create(string)", file="DefaultMarginCallModel.cs", label="Entry System.Net.WebRequest.Create(string)", span="0-0"];
m9_564 [cluster="QuantConnect.Brokerages.Tradier.TradierOrderDetailed.TradierOrderDetailed()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierOrderDetailed.TradierOrderDetailed()", span="198-198"];
m9_341 [cluster="JsonTextReader.cstr", file="DefaultMarginCallModel.cs", label="Entry JsonTextReader.cstr", span=""];
m9_342 [cluster="JsonSerializer.cstr", file="DefaultMarginCallModel.cs", label="Entry JsonSerializer.cstr", span=""];
m9_236 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultMarginCallModel.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m9_770 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", span="1544-1544"];
m9_771 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", file="DefaultMarginCallModel.cs", label="return new Holding\r\n            {\r\n                Symbol = position.Symbol,\r\n                Type = SecurityType.Equity,\r\n                AveragePrice = position.CostBasis/position.Quantity,\r\n                ConversionRate = 1.0m,\r\n                CurrencySymbol = ''$'',\r\n                MarketPrice = 0m, //--> GetAccountHoldings does a call to GetQuotes to fill this data in\r\n                Quantity = position.Quantity\r\n            };", span="1546-1555"];
m9_772 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", span="1544-1544"];
m9_509 [cluster="Unk.ChangeOrder", file="DefaultMarginCallModel.cs", label="Entry Unk.ChangeOrder", span=""];
m9_400 [cluster="Unk.GetQuotes", file="DefaultMarginCallModel.cs", label="Entry Unk.GetQuotes", span=""];
m9_128 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m9_129 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", span="332-332"];
m9_130 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''user/profile'', Method.GET)", span="334-334"];
m9_131 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="DefaultMarginCallModel.cs", label="var userContainer = Execute<TradierUserContainer>(request, TradierApiRequestType.Standard)", span="335-335"];
m9_132 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="DefaultMarginCallModel.cs", label="return userContainer.Profile;", span="336-336"];
m9_133 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", span="332-332"];
m9_134 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", span="346-346"];
m9_135 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''accounts/{accountId}/balances'', Method.GET)", span="348-348"];
m9_136 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''accountId'', accountId, ParameterType.UrlSegment)", span="349-349"];
m9_137 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="DefaultMarginCallModel.cs", label="var balContainer = Execute<TradierBalance>(request, TradierApiRequestType.Standard)", span="350-350"];
m9_138 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="DefaultMarginCallModel.cs", label="return balContainer.Balances;", span="351-351"];
m9_139 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", span="346-346"];
m9_41 [cluster="System.TimeSpan.FromMinutes(double)", file="DefaultMarginCallModel.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m9_82 [cluster="RestClient.cstr", file="DefaultMarginCallModel.cs", label="Entry RestClient.cstr", span=""];
m9_162 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", span="403-403"];
m9_163 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''accounts/{accountId}/gainloss'')", span="405-405"];
m9_164 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="DefaultMarginCallModel.cs", label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="406-406"];
m9_165 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="DefaultMarginCallModel.cs", label="var gainLossContainer = Execute<TradierGainLossContainer>(request, TradierApiRequestType.Standard)", span="408-408"];
m9_166 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="DefaultMarginCallModel.cs", label="gainLossContainer.GainLossClosed == null || gainLossContainer.GainLossClosed.ClosedPositions == null", span="410-410"];
m9_169 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="DefaultMarginCallModel.cs", label="return gainLossContainer.GainLossClosed.ClosedPositions;", span="417-417"];
m9_167 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="DefaultMarginCallModel.cs", label="Log.Trace(''Tradier.GetGainLoss(): No gain loss found'')", span="413-413"];
m9_168 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="DefaultMarginCallModel.cs", label="return new List<TradierGainLoss>();", span="414-414"];
m9_170 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", span="403-403"];
m9_338 [cluster="System.Net.HttpWebRequest.GetResponse()", file="DefaultMarginCallModel.cs", label="Entry System.Net.HttpWebRequest.GetResponse()", span="0-0"];
m9_160 [cluster="long.ToString()", file="DefaultMarginCallModel.cs", label="Entry long.ToString()", span="0-0"];
m9_451 [cluster="Unk.TryRemove", file="DefaultMarginCallModel.cs", label="Entry Unk.TryRemove", span=""];
m9_86 [cluster="Unk.>", file="DefaultMarginCallModel.cs", label="Entry Unk.>", span=""];
m9_504 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m9_53 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", span="1170-1170"];
m9_566 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="!Monitor.TryEnter(_fillLock)", span="1173-1173"];
m9_567 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="return;", span="1175-1175"];
m9_568 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="var updatedOrders = GetIntradayAndPendingOrders().ToDictionary(x => x.Id)", span="1180-1180"];
m9_569 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label=_cachedOpenOrdersByTradierOrderID, span="1183-1183"];
m9_571 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="updatedOrders.TryGetValue(cachedOrder.Key, out updatedOrder)", span="1186-1186"];
m9_576 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="var unknownOrderIDs = updatedOrders.Where(x => !_cachedOpenOrdersByTradierOrderID.ContainsKey(x.Key) && OrderIsOpen(x.Value)).ToList()", span="1220-1220"];
m9_570 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="TradierOrder updatedOrder", span="1185-1185"];
m9_572 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="ProcessPotentiallyUpdatedOrder(cachedOrder.Value, updatedOrder)", span="1189-1189"];
m9_573 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="!_reentranceGuardByTradierOrderID.Add(cachedOrder.Key)", span="1195-1195"];
m9_574 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="var cachedOrderLocal = cachedOrder", span="1201-1201"];
m9_575 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="Task.Run(() =>\r\n                    {\r\n                        var updatedOrderLocal = GetOrder(cachedOrderLocal.Key);\r\n                        if (updatedOrderLocal == null)\r\n                        {\r\n                            Log.Error(string.Format(''TradierBrokerage.CheckForFills(): Unable to locate order {0} in cached open orders.'', cachedOrderLocal.Key));\r\n                        }\r\n                        else\r\n                        {\r\n                            ProcessPotentiallyUpdatedOrder(cachedOrderLocal.Value, updatedOrderLocal);\r\n                        }\r\n\r\n                        // signal that we've left the task\r\n                        _reentranceGuardByTradierOrderID.Remove(cachedOrderLocal.Key);\r\n                    })", span="1202-1216"];
m9_577 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="unknownOrderIDs.Count != 0", span="1221-1221"];
m9_578 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="var ids = string.Join('', '', unknownOrderIDs.Select(x => x.Key))", span="1223-1223"];
m9_579 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''UnknownOrder'', ''Received unknown Tradier order id(s): '' + ids))", span="1224-1224"];
m9_580 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", span="1170-1170"];
m9_42 [cluster="System.TimeSpan.Subtract(System.TimeSpan)", file="DefaultMarginCallModel.cs", label="Entry System.TimeSpan.Subtract(System.TimeSpan)", span="0-0"];
m9_625 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", span="1337-1337"];
m9_644 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label=direction, span="1339-1339"];
m9_656 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="throw new ArgumentOutOfRangeException(''direction'', direction, null);", span="1353-1353"];
m9_645 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.Sell", span="1341-1341"];
m9_650 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.Buy", span="1346-1346"];
m9_646 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.SellShort", span="1342-1342"];
m9_647 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.SellToOpen", span="1343-1343"];
m9_648 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.SellToClose", span="1344-1344"];
m9_649 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="return true;", span="1345-1345"];
m9_651 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.BuyToCover", span="1347-1347"];
m9_652 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.BuyToClose", span="1348-1348"];
m9_653 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.BuyToOpen", span="1349-1349"];
m9_654 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="TradierOrderDirection.None", span="1350-1350"];
m9_655 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="return false;", span="1351-1351"];
m9_657 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", span="1337-1337"];
m9_267 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", span="604-604"];
m9_268 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''markets/search'', Method.GET)", span="606-606"];
m9_269 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''q'', query)", span="607-607"];
m9_270 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''indexes'', includeIndexes.ToString())", span="608-608"];
m9_271 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="DefaultMarginCallModel.cs", label="var searchContainer = Execute<TradierSearchContainer>(request, TradierApiRequestType.Data, ''securities'')", span="609-609"];
m9_272 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="DefaultMarginCallModel.cs", label="return searchContainer.Results;", span="610-610"];
m9_273 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", span="604-604"];
m9_275 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", span="616-616"];
m9_276 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''markets/lookup'', Method.GET)", span="618-618"];
m9_277 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''q'', query)", span="619-619"];
m9_278 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''indexes'', includeIndexes.ToString())", span="620-620"];
m9_279 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="DefaultMarginCallModel.cs", label="var searchContainer = Execute<TradierSearchContainer>(request, TradierApiRequestType.Data, ''securities'')", span="621-621"];
m9_280 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="DefaultMarginCallModel.cs", label="return searchContainer.Results;", span="622-622"];
m9_281 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", span="616-616"];
m9_84 [cluster="System.Threading.Thread.Sleep(int)", file="DefaultMarginCallModel.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m9_690 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="50-50"];
m9_688 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="40-40"];
m9_14 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m9_693 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="1431-1431"];
m9_711 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label=duration, span="1433-1433"];
m9_712 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="TradierOrderDuration.GTC", span="1435-1435"];
m9_714 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="TradierOrderDuration.Day", span="1437-1437"];
m9_716 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="throw new ArgumentOutOfRangeException();", span="1440-1440"];
m9_713 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="return OrderDuration.GTC;", span="1436-1436"];
m9_715 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="return (OrderDuration) 1;", span="1438-1438"];
m9_717 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="1431-1431"];
m9_140 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", span="361-361"];
m9_141 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''accounts/{accountId}/positions'', Method.GET)", span="363-363"];
m9_142 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="DefaultMarginCallModel.cs", label="request.AddParameter(''accountId'', _accountID, ParameterType.UrlSegment)", span="364-364"];
m9_143 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="DefaultMarginCallModel.cs", label="var positionContainer = Execute<TradierPositionsContainer>(request, TradierApiRequestType.Standard)", span="365-365"];
m9_144 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="DefaultMarginCallModel.cs", label="positionContainer.TradierPositions == null || positionContainer.TradierPositions.Positions == null", span="367-367"];
m9_147 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="DefaultMarginCallModel.cs", label="return positionContainer.TradierPositions.Positions;", span="374-374"];
m9_145 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="DefaultMarginCallModel.cs", label="Log.Trace(''Tradier.Positions(): No positions found'')", span="370-370"];
m9_146 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="DefaultMarginCallModel.cs", label="return new List<TradierPosition>();", span="371-371"];
m9_148 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", span="361-361"];
m9_89 [cluster="Unk.Contains", file="DefaultMarginCallModel.cs", label="Entry Unk.Contains", span=""];
m9_0 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", span="120-120"];
m9_1 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="_orderMapping = orderMapping", span="123-123"];
m9_2 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="_holdingsProvider = holdingsProvider", span="124-124"];
m9_3 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="_accountID = accountID", span="125-125"];
m9_4 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="_cachedOpenOrdersByTradierOrderID = new ConcurrentDictionary<long, TradierOrder>()", span="127-127"];
m9_5 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="_rateLimitPeriod = new Dictionary<TradierApiRequestType, TimeSpan>()", span="130-130"];
m9_6 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="_rateLimitNextRequest = new Dictionary<TradierApiRequestType, DateTime>()", span="131-131"];
m9_7 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="Enum.GetValues(typeof(TradierApiRequestType))", span="134-134"];
m9_8 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="_rateLimitPeriod.Add(requestType, TimeSpan.FromSeconds(1))", span="137-137"];
m9_10 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="_rateLimitPeriod[TradierApiRequestType.Standard] = TimeSpan.FromMilliseconds(500)", span="142-142"];
m9_9 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="_rateLimitNextRequest.Add(requestType, new DateTime())", span="138-138"];
m9_11 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="_rateLimitPeriod[TradierApiRequestType.Data] = TimeSpan.FromMilliseconds(500)", span="143-143"];
m9_12 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", span="120-120"];
m9_565 [cluster="string.IsNullOrEmpty(string)", file="DefaultMarginCallModel.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_386 [cluster="System.Collections.Generic.List<T>.ToArray()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m9_39 [cluster="System.Threading.Timer.Dispose()", file="DefaultMarginCallModel.cs", label="Entry System.Threading.Timer.Dispose()", span="0-0"];
m9_227 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", span="532-532"];
m9_228 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="symbols.Count == 0", span="534-534"];
m9_231 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var csvSymbols = String.Join('','', symbols)", span="541-541"];
m9_229 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="return new List<TradierQuote>();", span="536-536"];
m9_230 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var request = new RestRequest(''markets/quotes'', Method.GET)", span="540-540"];
m9_232 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="request.AddParameter(''symbols'', csvSymbols, ParameterType.QueryString)", span="542-542"];
m9_233 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="var dataContainer = Execute<TradierQuoteContainer>(request, TradierApiRequestType.Data, ''quotes'')", span="544-544"];
m9_234 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="return dataContainer.Quotes;", span="545-545"];
m9_235 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", span="532-532"];
m9_352 [cluster="System.Type.GetField(string)", file="DefaultMarginCallModel.cs", label="Entry System.Type.GetField(string)", span="0-0"];
m9_864 [file="DefaultMarginCallModel.cs", label="QuantConnect.Brokerages.Tradier.TradierBrokerage", span=""];
m9_865 [file="DefaultMarginCallModel.cs", label="QuantConnect.Orders.Order", span=""];
m9_866 [file="DefaultMarginCallModel.cs", label=cachedOrderLocal, span=""];
m9_867 [file="DefaultMarginCallModel.cs", label=qcOrder, span=""];
m9_868 [file="DefaultMarginCallModel.cs", label=order, span=""];
m9_869 [file="DefaultMarginCallModel.cs", label="QuantConnect.Brokerages.Tradier.TradierOrder", span=""];
m9_870 [file="DefaultMarginCallModel.cs", label="QuantConnect.Brokerages.Tradier.TradierOrder", span=""];
m9_871 [file="DefaultMarginCallModel.cs", label=qcOrder, span=""];
m9_872 [file="DefaultMarginCallModel.cs", label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue", span=""];
m9_873 [file="DefaultMarginCallModel.cs", label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", span=""];
m10_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m10_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="RequestId = requestId", span="45-45"];
m10_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Contract = contract", span="46-46"];
m10_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Execution = execution", span="47-47"];
m10_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m10_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="ExecutionDetailsEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m10_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", color=green, community=0, file="ExecutionDetailsEventArgs.cs", label="0: return $''RequestId: {RequestId}, Symbol: {Contract.Symbol}, OrderId: {Execution.OrderId}, Time: {Execution.Time}, Side: {Execution.Side}, Shares: {Execution.Shares}, Price: {Execution.Price}, CumQty: {Execution.CumQty}, PermId: {Execution.PermId}, Account: {Execution.AcctNumber}, ExecId: {Execution.ExecId}'';", span="55-55"];
m10_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="ExecutionDetailsEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m10_8 [file="ExecutionDetailsEventArgs.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", span=""];
m11_307 [cluster="Unk.ToDateTimeUtc", file="Extensions.cs", label="Entry Unk.ToDateTimeUtc", span=""];
m11_371 [cluster="System.TimeSpan.FromHours(double)", file="Extensions.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m11_86 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="Extensions.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m11_20 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="Extensions.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m11_315 [cluster="System.Timers.Timer.Stop()", file="Extensions.cs", label="Entry System.Timers.Timer.Stop()", span="0-0"];
m11_281 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Entry QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="567-567"];
m11_282 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="d == TimeSpan.Zero", span="569-569"];
m11_283 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="return time;", span="572-572"];
m11_284 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="return new DateTime(((time.Ticks + d.Ticks - 1) / d.Ticks) * d.Ticks);", span="574-574"];
m11_285 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Exit QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="567-567"];
m11_233 [cluster="System.IO.StreamWriter.Flush()", file="Extensions.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m11_279 [cluster="System.DateTime.DateTime(long)", file="Extensions.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m11_425 [cluster="Unk.SingleOrDefault", file="Extensions.cs", label="Entry Unk.SingleOrDefault", span=""];
m11_157 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToInt64(string)", span="313-313"];
m11_158 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="long value = 0", span="315-315"];
m11_160 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="i < str.Length", span="316-316"];
m11_161 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="value = value * 10 + (str[i] - '0')", span="318-318"];
m11_159 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="var i = 0", span="316-316"];
m11_163 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="return value;", span="320-320"];
m11_162 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="i++", span="316-316"];
m11_164 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToInt64(string)", span="313-313"];
m11_203 [cluster="string.Trim(params char[])", file="Extensions.cs", label="Entry string.Trim(params char[])", span="0-0"];
m11_0 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="45-45"];
m11_1 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="var oItem = list[oldIndex]", span="47-47"];
m11_2 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="list.RemoveAt(oldIndex)", span="48-48"];
m11_3 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="newIndex > oldIndex", span="49-49"];
m11_4 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="newIndex--", span="49-49"];
m11_5 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="list.Insert(newIndex, oItem)", span="50-50"];
m11_6 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="45-45"];
m11_337 [cluster="System.Type.GetGenericTypeDefinition()", file="Extensions.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m11_94 [cluster="System.Math.Log10(double)", file="Extensions.cs", label="Entry System.Math.Log10(double)", span="0-0"];
m11_434 [cluster="string.ToLower()", file="Extensions.cs", label="Entry string.ToLower()", span="0-0"];
m11_390 [cluster="System.Type.IsAssignableFrom(System.Type)", file="Extensions.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m11_389 [cluster="System.Enum.Parse(System.Type, string)", file="Extensions.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m11_209 [cluster="QuantConnect.Extensions.GetDecimalEpsilon()", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetDecimalEpsilon()", span="400-400"];
m11_210 [cluster="QuantConnect.Extensions.GetDecimalEpsilon()", file="Extensions.cs", label="return new decimal(1, 0, 0, false, 27);", span="402-402"];
m11_211 [cluster="QuantConnect.Extensions.GetDecimalEpsilon()", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetDecimalEpsilon()", span="400-400"];
m11_53 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="Extensions.cs", label="Entry QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="134-134"];
m11_54 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="Extensions.cs", label="dictionary.AddOrUpdate(key, value, (oldkey, oldvalue) => value)", span="136-136"];
m11_55 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="Extensions.cs", label="Exit QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="134-134"];
m11_399 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", file="Extensions.cs", label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", span="808-808"];
m11_400 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", file="Extensions.cs", label="return waitHandle.WaitOne((int) timeout.TotalMilliseconds, cancellationToken);", span="810-810"];
m11_401 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", file="Extensions.cs", label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", span="808-808"];
m11_258 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", span="513-513"];
m11_259 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="interval == TimeSpan.Zero", span="516-516"];
m11_260 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="return dateTime;", span="516-516"];
m11_261 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="var rounded = dateTime.RoundDown(interval)", span="518-518"];
m11_262 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="!exchangeHours.IsOpen(rounded, rounded + interval, extendedMarket)", span="519-519"];
m11_263 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="rounded -= interval", span="521-521"];
m11_264 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="return rounded;", span="523-523"];
m11_265 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", span="513-513"];
m11_40 [cluster="System.Text.StringBuilder.Append(string)", file="Extensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m11_256 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m11_124 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToDecimal(string)", span="248-248"];
m11_125 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="long value = 0", span="250-250"];
m11_129 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var length = str.Length", span="254-254"];
m11_130 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="index < length && char.IsWhiteSpace(str[index])", span="256-256"];
m11_132 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var isNegative = index < length && str[index] == '-'", span="261-261"];
m11_136 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var ch = str[index++]", span="269-269"];
m11_126 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var decimalPlaces = 0", span="251-251"];
m11_141 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="value = value * 10 + (ch - '0')", span="281-281"];
m11_143 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var lo = (int)value", span="286-286"];
m11_144 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var mid = (int)(value >> 32)", span="287-287"];
m11_127 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var hasDecimals = false", span="252-252"];
m11_142 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="decimalPlaces++", span="282-282"];
m11_145 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="return new decimal(lo, mid, 0, isNegative, (byte)(hasDecimals ? decimalPlaces : 0));", span="288-288"];
m11_128 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var index = 0", span="253-253"];
m11_131 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="index++", span="258-258"];
m11_134 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="index++", span="264-264"];
m11_135 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="index < length", span="267-267"];
m11_133 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label=isNegative, span="262-262"];
m11_137 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="ch == '.'", span="270-270"];
m11_140 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="char.IsWhiteSpace(ch)", span="275-275"];
m11_138 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="hasDecimals = true", span="272-272"];
m11_139 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="decimalPlaces = 0", span="273-273"];
m11_146 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToDecimal(string)", span="248-248"];
m11_348 [cluster="Unk.Join", file="Extensions.cs", label="Entry Unk.Join", span=""];
m11_35 [cluster="System.Text.StringBuilder.StringBuilder()", file="Extensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m11_7 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m11_461 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="Extensions.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m11_37 [cluster="System.Text.Encoding.GetBytes(string)", file="Extensions.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m11_68 [cluster="System.Func<T, TResult>.Invoke(T)", file="Extensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m11_183 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m11_231 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="Extensions.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m11_16 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="71-71"];
m11_17 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="Extensions.cs", label="T item", span="73-73"];
m11_18 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="Extensions.cs", label="queue.TryDequeue(out item)", span="74-74"];
m11_19 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="71-71"];
m11_373 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Extensions.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m11_42 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToSHA256(string)", span="113-113"];
m11_43 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="var crypt = new SHA256Managed()", span="115-115"];
m11_45 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="var crypto = crypt.ComputeHash(Encoding.UTF8.GetBytes(data), 0, Encoding.UTF8.GetByteCount(data))", span="117-117"];
m11_44 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="var hash = new StringBuilder()", span="116-116"];
m11_47 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="hash.Append(theByte.ToString(''x2''))", span="120-120"];
m11_48 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="return hash.ToString();", span="122-122"];
m11_46 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label=crypto, span="118-118"];
m11_49 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToSHA256(string)", span="113-113"];
m11_234 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="442-442"];
m11_235 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="Extensions.cs", label="roundingInterval == TimeSpan.Zero", span="444-444"];
m11_236 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="Extensions.cs", label="return time;", span="447-447"];
m11_237 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="Extensions.cs", label="return new TimeSpan(\r\n                Convert.ToInt64(Math.Round(\r\n                    time.Ticks / (decimal)roundingInterval.Ticks,\r\n                    roundingType\r\n                )) * roundingInterval.Ticks\r\n            );", span="450-455"];
m11_238 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="442-442"];
m11_410 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)", file="Extensions.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)", span="0-0"];
m11_38 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", file="Extensions.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", span="0-0"];
m11_219 [cluster="System.Math.Max(int, int)", file="Extensions.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m11_349 [cluster="Unk.Replace", file="Extensions.cs", label="Entry Unk.Replace", span=""];
m11_104 [cluster="System.Math.Abs(decimal)", file="Extensions.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m11_317 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.MatchesTypeName(System.Type, string)", span="653-653"];
m11_318 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="type.AssemblyQualifiedName == typeName", span="655-655"];
m11_320 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="type.FullName == typeName", span="659-659"];
m11_322 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="type.Name == typeName", span="663-663"];
m11_319 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="return true;", span="657-657"];
m11_321 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="return true;", span="661-661"];
m11_323 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="return true;", span="665-665"];
m11_324 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="return false;", span="667-667"];
m11_325 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.MatchesTypeName(System.Type, string)", span="653-653"];
m11_298 [cluster="Unk.AtLeniently", file="Extensions.cs", label="Entry Unk.AtLeniently", span=""];
m11_93 [cluster="System.Math.Abs(double)", file="Extensions.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m11_115 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="Entry QuantConnect.Extensions.SafeDecimalCast(double)", span="227-227"];
m11_116 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="input <= (double) decimal.MinValue", span="229-229"];
m11_118 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="input >= (double) decimal.MaxValue", span="230-230"];
m11_120 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="return (decimal) input;", span="231-231"];
m11_117 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="return decimal.MinValue;", span="229-229"];
m11_119 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="return decimal.MaxValue;", span="230-230"];
m11_121 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="Exit QuantConnect.Extensions.SafeDecimalCast(double)", span="227-227"];
m11_52 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", file="Extensions.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", span="0-0"];
m11_275 [cluster="System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="Entry System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", span="494-494"];
m11_338 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetBetterTypeName(System.Type)", span="705-705"];
m11_339 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="string name = type.Name", span="707-707"];
m11_340 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="type.IsGenericType", span="708-708"];
m11_341 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="var genericArguments = type.GetGenericArguments()", span="710-710"];
m11_343 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="name = name.Replace(toBeReplaced, ''<'' + string.Join('', '', genericArguments.Select(x => x.GetBetterTypeName())) + ''>'')", span="712-712"];
m11_344 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="return name;", span="714-714"];
m11_342 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="var toBeReplaced = ''`'' + (genericArguments.Length)", span="711-711"];
m11_345 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetBetterTypeName(System.Type)", span="705-705"];
m11_266 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", file="Extensions.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", span="141-141"];
m11_462 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="Extensions.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="118-118"];
m11_220 [cluster="System.Collections.Generic.List<T>.List()", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_426 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="871-871"];
m11_58 [cluster="lambda expression", file="Extensions.cs", label=value, span="136-136"];
m11_57 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="136-136"];
m11_59 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="136-136"];
m11_66 [cluster="lambda expression", file="Extensions.cs", label="addValueFactory(key)", span="150-150"];
m11_70 [cluster="lambda expression", file="Extensions.cs", label="new Lazy<TValue>(() => updateValueFactory(key2, old.Value))", span="150-150"];
m11_73 [cluster="lambda expression", file="Extensions.cs", label="updateValueFactory(key2, old.Value)", span="150-150"];
m11_69 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="150-150"];
m11_65 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="150-150"];
m11_67 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="150-150"];
m11_71 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="150-150"];
m11_72 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="150-150"];
m11_74 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="150-150"];
m11_350 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="712-712"];
m11_351 [cluster="lambda expression", file="Extensions.cs", label="x.GetBetterTypeName()", span="712-712"];
m11_352 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="712-712"];
m11_427 [cluster="lambda expression", file="Extensions.cs", label="x.Contains(''.'' + algorithmTypeName)", span="871-871"];
m11_428 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="871-871"];
m11_377 [cluster="string.ConvertTo(System.Type)", file="Extensions.cs", label="Entry string.ConvertTo(System.Type)", span="759-759"];
m11_96 [cluster="System.Math.Pow(double, double)", file="Extensions.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m11_239 [cluster="System.TimeSpan.TimeSpan(long)", file="Extensions.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m11_267 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", span="537-537"];
m11_268 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="interval == TimeSpan.Zero", span="540-540"];
m11_269 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="return dateTime;", span="540-540"];
m11_270 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="var rounded = dateTime.RoundDownInTimeZone(interval, exchangeHours.TimeZone, roundingTimeZone)", span="542-542"];
m11_271 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="!exchangeHours.IsOpen(rounded, rounded + interval, extendedMarket)", span="543-543"];
m11_272 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="rounded = (rounded - interval).RoundDownInTimeZone(interval, exchangeHours.TimeZone, roundingTimeZone)", span="545-545"];
m11_273 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="return rounded;", span="547-547"];
m11_274 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", span="537-537"];
m11_26 [cluster="System.Text.Encoding.GetString(byte[])", file="Extensions.cs", label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
m11_232 [cluster="System.IO.StreamWriter.Write(string)", file="Extensions.cs", label="Entry System.IO.StreamWriter.Write(string)", span="0-0"];
m11_75 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="Extensions.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m11_406 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="837-837"];
m11_407 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Extensions.cs", label="var md5 = MD5.Create()", span="839-839"];
m11_408 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Extensions.cs", label="return md5.ComputeHash(stream);", span="841-841"];
m11_409 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="837-837"];
m11_297 [cluster="Unk.ToDateTimeUnspecified", file="Extensions.cs", label="Entry Unk.ToDateTimeUnspecified", span=""];
m11_433 [cluster="System.Enum.ToString()", file="Extensions.cs", label="Entry System.Enum.ToString()", span="0-0"];
m11_398 [cluster="System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", file="Extensions.cs", label="Entry System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", span="827-827"];
m11_242 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="465-465"];
m11_243 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="Extensions.cs", label="return Round(time, roundingInterval, MidpointRounding.ToEven);", span="467-467"];
m11_244 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="465-465"];
m11_421 [cluster="QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", span="867-867"];
m11_422 [cluster="QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", file="Extensions.cs", label="return names.Count == 1 ? names.Single() : names.SingleOrDefault(x => x.Contains(''.'' + algorithmTypeName));", span="871-871"];
m11_423 [cluster="QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", span="867-867"];
m11_418 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="Extensions.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m11_294 [cluster="Unk.FromDateTime", file="Extensions.cs", label="Entry Unk.FromDateTime", span=""];
m11_205 [cluster="QuantConnect.Extensions.IsNaNOrZero(double)", file="Extensions.cs", label="Entry QuantConnect.Extensions.IsNaNOrZero(double)", span="391-391"];
m11_206 [cluster="QuantConnect.Extensions.IsNaNOrZero(double)", file="Extensions.cs", label="return double.IsNaN(value) || Math.Abs(value) < double.Epsilon;", span="393-393"];
m11_207 [cluster="QuantConnect.Extensions.IsNaNOrZero(double)", file="Extensions.cs", label="Exit QuantConnect.Extensions.IsNaNOrZero(double)", span="391-391"];
m11_208 [cluster="double.IsNaN(double)", file="Extensions.cs", label="Entry double.IsNaN(double)", span="0-0"];
m11_393 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="Extensions.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m11_405 [cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", file="Extensions.cs", label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", span="0-0"];
m11_212 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetExtension(string)", span="410-410"];
m11_213 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="var ext = str.Substring(Math.Max(0, str.Length - 4))", span="411-411"];
m11_214 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="var allowedExt = new List<string>() { ''.zip'', ''.csv'', ''.json'' }", span="412-412"];
m11_215 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="!allowedExt.Contains(ext)", span="413-413"];
m11_217 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="return ext;", span="417-417"];
m11_216 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="ext = ''.custom''", span="415-415"];
m11_218 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetExtension(string)", span="410-410"];
m11_293 [cluster="Unk.ReferenceEquals", file="Extensions.cs", label="Entry Unk.ReferenceEquals", span=""];
m11_463 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="Extensions.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="194-194"];
m11_347 [cluster="Unk.Select", file="Extensions.cs", label="Entry Unk.Select", span=""];
m11_51 [cluster="System.Text.Encoding.GetByteCount(string)", file="Extensions.cs", label="Entry System.Text.Encoding.GetByteCount(string)", span="0-0"];
m11_429 [cluster="string.Contains(string)", file="Extensions.cs", label="Entry string.Contains(string)", span="0-0"];
m11_296 [cluster="Unk.WithZone", file="Extensions.cs", label="Entry Unk.WithZone", span=""];
m11_149 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToInt32(string)", span="297-297"];
m11_150 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="int value = 0", span="299-299"];
m11_152 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="i < str.Length", span="300-300"];
m11_153 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="value = value * 10 + (str[i] - '0')", span="302-302"];
m11_151 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="var i = 0", span="300-300"];
m11_155 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="return value;", span="304-304"];
m11_154 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="i++", span="300-300"];
m11_156 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToInt32(string)", span="297-297"];
m11_395 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", file="Extensions.cs", label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", span="790-790"];
m11_396 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", file="Extensions.cs", label="return waitHandle.WaitOne(Timeout.Infinite, cancellationToken);", span="792-792"];
m11_397 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", file="Extensions.cs", label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", span="790-790"];
m11_60 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="Extensions.cs", label="Entry QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", span="148-148"];
m11_61 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="Extensions.cs", label="var result = dictionary.AddOrUpdate(key, new Lazy<TValue>(() => addValueFactory(key)), (key2, old) => new Lazy<TValue>(() => updateValueFactory(key2, old.Value)))", span="150-150"];
m11_62 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="Extensions.cs", label="return result.Value;", span="151-151"];
m11_63 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="Extensions.cs", label="Exit QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", span="148-148"];
m11_435 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", span="890-890"];
m11_436 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var limitPrice = 0m", span="892-892"];
m11_438 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="order.Type", span="895-895"];
m11_440 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var limitOrder = order as LimitOrder", span="898-898"];
m11_443 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var stopMarketOrder = order as StopMarketOrder", span="902-902"];
m11_446 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var stopLimitOrder = order as StopLimitOrder", span="906-906"];
m11_453 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="limitPrice = order.Price", span="914-914"];
m11_454 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="stopPrice = order.Price", span="915-915"];
m11_456 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", color=red, community=0, file="Extensions.cs", label="0: var submitOrderRequest = new SubmitOrderRequest(order.Type,\r\n                order.SecurityType,\r\n                order.Symbol,\r\n                order.Quantity,\r\n                stopPrice,\r\n                limitPrice,\r\n                order.Time,\r\n                order.Tag,\r\n                order.Properties)", span="921-929"];
m11_457 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="submitOrderRequest.SetOrderId(order.Id)", span="931-931"];
m11_458 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="return new OrderTicket(transactionManager, submitOrderRequest);", span="933-933"];
m11_437 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var stopPrice = 0m", span="893-893"];
m11_439 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.Limit", span="897-897"];
m11_442 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.StopMarket", span="901-901"];
m11_445 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.StopLimit", span="905-905"];
m11_449 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.OptionExercise", span="910-910"];
m11_455 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="throw new ArgumentOutOfRangeException();", span="918-918"];
m11_441 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="limitPrice = limitOrder.LimitPrice", span="899-899"];
m11_444 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="stopPrice = stopMarketOrder.StopPrice", span="903-903"];
m11_447 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="stopPrice = stopLimitOrder.StopPrice", span="907-907"];
m11_448 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="limitPrice = stopLimitOrder.LimitPrice", span="908-908"];
m11_450 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.Market", span="911-911"];
m11_451 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.MarketOnOpen", span="912-912"];
m11_452 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.MarketOnClose", span="913-913"];
m11_459 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", span="890-890"];
m11_41 [cluster="System.Text.StringBuilder.ToString()", file="Extensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m11_98 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="Entry QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", span="195-195"];
m11_99 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="d == 0", span="197-197"];
m11_101 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="var scale = (decimal)Math.Pow(10, Math.Floor(Math.Log10((double) Math.Abs(d))) + 1)", span="198-198"];
m11_102 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="return scale * Math.Round(d / scale, digits);", span="199-199"];
m11_100 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="return 0;", span="197-197"];
m11_103 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="Exit QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", span="195-195"];
m11_36 [cluster="System.Security.Cryptography.MD5.Create()", file="Extensions.cs", label="Entry System.Security.Cryptography.MD5.Create()", span="0-0"];
m11_308 [cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", file="Extensions.cs", label="Entry QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", span="631-631"];
m11_309 [cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", file="Extensions.cs", label="return (date.DayOfWeek != DayOfWeek.Saturday && date.DayOfWeek != DayOfWeek.Sunday);", span="633-633"];
m11_310 [cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", file="Extensions.cs", label="Exit QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", span="631-631"];
m11_147 [cluster="char.IsWhiteSpace(char)", file="Extensions.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m11_83 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Extensions.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m11_424 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Extensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m11_346 [cluster="System.Type.GetGenericArguments()", file="Extensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m11_85 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="Extensions.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m11_222 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToStream(string)", span="425-425"];
m11_223 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="var stream = new MemoryStream()", span="427-427"];
m11_225 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="writer.Write(str)", span="429-429"];
m11_224 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="var writer = new StreamWriter(stream)", span="428-428"];
m11_227 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="stream.Position = 0", span="431-431"];
m11_228 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="return stream;", span="432-432"];
m11_226 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="writer.Flush()", span="430-430"];
m11_229 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToStream(string)", span="425-425"];
m11_245 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Entry QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="476-476"];
m11_246 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="interval == TimeSpan.Zero", span="478-478"];
m11_247 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="return dateTime;", span="481-481"];
m11_248 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="return dateTime.AddTicks(-(dateTime.Ticks % interval.Ticks));", span="483-483"];
m11_249 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Exit QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="476-476"];
m11_241 [cluster="System.Convert.ToInt64(decimal)", file="Extensions.cs", label="Entry System.Convert.ToInt64(decimal)", span="0-0"];
m11_106 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="Entry QuantConnect.Extensions.SmartRounding(decimal)", span="206-206"];
m11_107 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="input = Normalize(input)", span="208-208"];
m11_108 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="input > 1000", span="211-211"];
m11_109 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="return Math.Round(input, 4);", span="213-213"];
m11_110 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="var d = (double)input", span="217-217"];
m11_111 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="return (decimal)d.RoundToSignificantDigits(7);", span="218-218"];
m11_112 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="Exit QuantConnect.Extensions.SmartRounding(decimal)", span="206-206"];
m11_316 [cluster="System.Timers.Timer.Start()", file="Extensions.cs", label="Entry System.Timers.Timer.Start()", span="0-0"];
m11_302 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", span="616-616"];
m11_303 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label=strict, span="618-618"];
m11_304 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="return from.AtStrictly(LocalDateTime.FromDateTime(time)).ToDateTimeUtc();", span="620-620"];
m11_305 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="return from.AtLeniently(LocalDateTime.FromDateTime(time)).ToDateTimeUtc();", span="623-623"];
m11_306 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", span="616-616"];
m11_114 [cluster="double.RoundToSignificantDigits(int)", file="Extensions.cs", label="Entry double.RoundToSignificantDigits(int)", span="182-182"];
m11_251 [cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="Entry QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", span="494-494"];
m11_252 [cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="var dateTimeInRoundingTimeZone = dateTime.ConvertTo(sourceTimeZone, roundingTimeZone)", span="496-496"];
m11_253 [cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="var roundedDateTimeInRoundingTimeZone = dateTimeInRoundingTimeZone.RoundDown(roundingInterval)", span="497-497"];
m11_254 [cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="return roundedDateTimeInRoundingTimeZone.ConvertTo(roundingTimeZone, sourceTimeZone);", span="498-498"];
m11_255 [cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="Exit QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", span="494-494"];
m11_299 [cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", span="604-604"];
m11_300 [cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="return time.ConvertTo(TimeZones.Utc, to, strict);", span="606-606"];
m11_301 [cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", span="604-604"];
m11_165 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToCsv(string, int)", span="329-329"];
m11_166 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="int last = 0", span="331-331"];
m11_167 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="var csv = new List<string>(size)", span="332-332"];
m11_169 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="i < str.Length", span="333-333"];
m11_170 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="str[i] == ','", span="335-335"];
m11_173 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="csv.Add(str.Substring(last, i - last))", span="338-338"];
m11_178 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="csv.Add(str.Substring(last))", span="343-343"];
m11_171 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="last != 0", span="337-337"];
m11_172 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="last = last + 1", span="337-337"];
m11_176 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="last != 0", span="342-342"];
m11_177 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="last = last + 1", span="342-342"];
m11_168 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="int i = 0", span="333-333"];
m11_179 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="return csv;", span="344-344"];
m11_174 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="last = i", span="339-339"];
m11_175 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="i++", span="333-333"];
m11_180 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToCsv(string, int)", span="329-329"];
m11_221 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m11_372 [cluster="System.TimeSpan.FromDays(double)", file="Extensions.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m11_8 [cluster="System.Collections.Generic.List<T>.Insert(int, T)", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.Insert(int, T)", span="0-0"];
m11_27 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToMD5(string)", span="97-97"];
m11_28 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="var builder = new StringBuilder()", span="99-99"];
m11_30 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="var data = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(str))", span="102-102"];
m11_29 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="var md5Hash = MD5.Create()", span="100-100"];
m11_32 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="builder.Append(t.ToString(''x2''))", span="103-103"];
m11_33 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="return builder.ToString();", span="105-105"];
m11_31 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label=data, span="103-103"];
m11_34 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToMD5(string)", span="97-97"];
m11_148 [cluster="decimal.Decimal(int, int, int, bool, byte)", file="Extensions.cs", label="Entry decimal.Decimal(int, int, int, bool, byte)", span="0-0"];
m11_184 [cluster="string.Substring(int)", file="Extensions.cs", label="Entry string.Substring(int)", span="0-0"];
m11_353 [cluster="System.Type.GetBetterTypeName()", file="Extensions.cs", label="Entry System.Type.GetBetterTypeName()", span="705-705"];
m11_326 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="Entry QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", span="677-677"];
m11_327 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="type != null && type != typeof(object)", span="679-679"];
m11_329 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="type.IsGenericType && possibleSuperType.IsGenericTypeDefinition", span="682-682"];
m11_330 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="cur = type.GetGenericTypeDefinition()", span="684-684"];
m11_331 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="cur = type", span="688-688"];
m11_332 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="possibleSuperType == cur", span="690-690"];
m11_334 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="type = type.BaseType", span="694-694"];
m11_328 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="Type cur", span="681-681"];
m11_335 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="return false;", span="696-696"];
m11_333 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="return true;", span="692-692"];
m11_336 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="Exit QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", span="677-677"];
m11_105 [cluster="System.Math.Round(decimal, int)", file="Extensions.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m11_368 [cluster="System.TimeSpan.FromTicks(long)", file="Extensions.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m11_402 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", file="Extensions.cs", label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", span="827-827"];
m11_403 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", file="Extensions.cs", label="return WaitHandle.WaitAny(new[] { waitHandle, cancellationToken.WaitHandle }, millisecondsTimeout) == 0;", span="829-829"];
m11_404 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", file="Extensions.cs", label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", span="827-827"];
m11_460 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="Extensions.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m11_394 [cluster="Unk.DeserializeObject", file="Extensions.cs", label="Entry Unk.DeserializeObject", span=""];
m11_50 [cluster="System.Security.Cryptography.SHA256Managed.SHA256Managed()", file="Extensions.cs", label="Entry System.Security.Cryptography.SHA256Managed.SHA256Managed()", span="0-0"];
m11_430 [cluster="QuantConnect.Extensions.ToLower(System.Enum)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToLower(System.Enum)", span="879-879"];
m11_431 [cluster="QuantConnect.Extensions.ToLower(System.Enum)", file="Extensions.cs", label="return @enum.ToString().ToLower();", span="881-881"];
m11_432 [cluster="QuantConnect.Extensions.ToLower(System.Enum)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToLower(System.Enum)", span="879-879"];
m11_39 [cluster="byte.ToString(string)", file="Extensions.cs", label="Entry byte.ToString(string)", span="0-0"];
m11_374 [cluster="QuantConnect.Extensions.ConvertTo<T>(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ConvertTo<T>(string)", span="748-748"];
m11_375 [cluster="QuantConnect.Extensions.ConvertTo<T>(string)", file="Extensions.cs", label="return (T) value.ConvertTo(typeof (T));", span="750-750"];
m11_376 [cluster="QuantConnect.Extensions.ConvertTo<T>(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ConvertTo<T>(string)", span="748-748"];
m11_391 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="Extensions.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m11_369 [cluster="System.TimeSpan.FromSeconds(double)", file="Extensions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m11_230 [cluster="System.IO.MemoryStream.MemoryStream()", file="Extensions.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m11_87 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="Entry QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="182-182"];
m11_88 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="d == 0", span="184-184"];
m11_90 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="var scale = Math.Pow(10, Math.Floor(Math.Log10(Math.Abs(d))) + 1)", span="185-185"];
m11_91 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="return scale * Math.Round(d / scale, digits);", span="186-186"];
m11_89 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="return 0;", span="184-184"];
m11_92 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="Exit QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="182-182"];
m11_9 [cluster="QuantConnect.Extensions.GetBytes(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetBytes(string)", span="58-58"];
m11_10 [cluster="QuantConnect.Extensions.GetBytes(string)", file="Extensions.cs", label="var bytes = new byte[str.Length * sizeof(char)]", span="60-60"];
m11_11 [cluster="QuantConnect.Extensions.GetBytes(string)", file="Extensions.cs", label="Buffer.BlockCopy(str.ToCharArray(), 0, bytes, 0, bytes.Length)", span="61-61"];
m11_12 [cluster="QuantConnect.Extensions.GetBytes(string)", file="Extensions.cs", label="return bytes;", span="62-62"];
m11_13 [cluster="QuantConnect.Extensions.GetBytes(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetBytes(string)", span="58-58"];
m11_14 [cluster="string.ToCharArray()", file="Extensions.cs", label="Entry string.ToCharArray()", span="0-0"];
m11_181 [cluster="System.Collections.Generic.List<T>.List(int)", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m11_182 [cluster="string.Substring(int, int)", file="Extensions.cs", label="Entry string.Substring(int, int)", span="0-0"];
m11_76 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="164-164"];
m11_77 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="TCollection list", span="167-167"];
m11_78 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="!dictionary.TryGetValue(key, out list)", span="168-168"];
m11_80 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="dictionary.Add(key, list)", span="171-171"];
m11_81 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="list.Add(element)", span="173-173"];
m11_79 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="list = new TCollection()", span="170-170"];
m11_82 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="164-164"];
m11_378 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ConvertTo(string, System.Type)", span="759-759"];
m11_379 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="type.IsEnum", span="761-761"];
m11_380 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="return Enum.Parse(type, value);", span="763-763"];
m11_381 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="typeof (IConvertible).IsAssignableFrom(type)", span="766-766"];
m11_382 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="return Convert.ChangeType(value, type, CultureInfo.InvariantCulture);", span="768-768"];
m11_383 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="var parse = type.GetMethod(''Parse'', new[] {typeof (string)})", span="772-772"];
m11_385 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="var result = parse.Invoke(null, new object[] {value})", span="775-775"];
m11_387 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="return JsonConvert.DeserializeObject(value, type);", span="779-779"];
m11_384 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="parse != null", span="773-773"];
m11_386 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="return result;", span="776-776"];
m11_388 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ConvertTo(string, System.Type)", span="759-759"];
m11_411 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", span="850-850"];
m11_412 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="var regx = new Regex(''http(s)?://([\\w+?\\.\\w+])+([a-zA-Z0-9\\~\\!\\@\\#\\$\\%\\^\\&amp;\\*\\(\\)_\\-\\=\\+\\\\\\/\\?\\.\\:\\;\\'\\,]*([a-zA-Z0-9\\?\\#\\=\\/]){1})?'', RegexOptions.IgnoreCase)", span="852-852"];
m11_413 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="var matches = regx.Matches(source)", span="853-853"];
m11_415 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="source = source.Replace(match.Value, ''<a href=''' + match.Value + ''' target='blank'>'' + match.Value + ''</a>'')", span="856-856"];
m11_416 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="return source;", span="858-858"];
m11_414 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label=matches, span="854-854"];
m11_417 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", span="850-850"];
m11_370 [cluster="System.TimeSpan.FromMinutes(double)", file="Extensions.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m11_84 [cluster="TCollection.cstr", file="Extensions.cs", label="Entry TCollection.cstr", span=""];
m11_250 [cluster="System.DateTime.AddTicks(long)", file="Extensions.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m11_419 [cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="Extensions.cs", label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0"];
m11_257 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="Extensions.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m11_295 [cluster="Unk.AtStrictly", file="Extensions.cs", label="Entry Unk.AtStrictly", span=""];
m11_64 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="Extensions.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m11_280 [cluster="System.TimeSpan.Round(System.TimeSpan)", file="Extensions.cs", label="Entry System.TimeSpan.Round(System.TimeSpan)", span="465-465"];
m11_113 [cluster="QuantConnect.Extensions.Normalize(decimal)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Normalize(decimal)", span="234-234"];
m11_122 [cluster="QuantConnect.Extensions.Normalize(decimal)", file="Extensions.cs", label="return input / 1.000000000000000000000000000000000m;", span="237-237"];
m11_123 [cluster="QuantConnect.Extensions.Normalize(decimal)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Normalize(decimal)", span="234-234"];
m11_185 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToCsvData(string, int)", span="353-353"];
m11_186 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="var csv = new List<string>(size)", span="355-355"];
m11_190 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="i < str.Length", span="360-360"];
m11_191 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="str[i]", span="362-362"];
m11_196 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="csv.Add(str.Substring(last + 1, (i - last)).Trim(' ', ','))", span="370-370"];
m11_199 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="last != str.Length - 1", span="379-379"];
m11_200 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="csv.Add(str.Substring(last + 1).Trim())", span="381-381"];
m11_187 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="int last = -1", span="357-357"];
m11_201 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="return csv;", span="384-384"];
m11_188 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="bool textDataField = false", span="358-358"];
m11_189 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="var i = 0", span="360-360"];
m11_193 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="textDataField = !textDataField", span="365-365"];
m11_197 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="last = i", span="371-371"];
m11_198 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="i++", span="360-360"];
m11_192 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="''''", span="364-364"];
m11_194 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="','", span="367-367"];
m11_195 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="!textDataField", span="368-368"];
m11_202 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToCsvData(string, int)", span="353-353"];
m11_420 [cluster="string.Replace(string, string)", file="Extensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m11_15 [cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="Extensions.cs", label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0"];
m11_354 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", span="722-722"];
m11_355 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label=resolution, span="724-724"];
m11_356 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Resolution.Tick", span="726-726"];
m11_358 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Resolution.Second", span="729-729"];
m11_360 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Resolution.Minute", span="731-731"];
m11_362 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Resolution.Hour", span="733-733"];
m11_364 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Resolution.Daily", span="735-735"];
m11_366 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="throw new ArgumentOutOfRangeException(''resolution'');", span="738-738"];
m11_357 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="return TimeSpan.FromTicks(0);", span="728-728"];
m11_359 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="return TimeSpan.FromSeconds(1);", span="730-730"];
m11_361 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="return TimeSpan.FromMinutes(1);", span="732-732"];
m11_363 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="return TimeSpan.FromHours(1);", span="734-734"];
m11_365 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="return TimeSpan.FromDays(1);", span="736-736"];
m11_367 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", span="722-722"];
m11_97 [cluster="System.Math.Round(double, int)", file="Extensions.cs", label="Entry System.Math.Round(double, int)", span="0-0"];
m11_311 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Reset(System.Timers.Timer)", span="640-640"];
m11_312 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="Extensions.cs", label="timer.Stop()", span="642-642"];
m11_313 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="Extensions.cs", label="timer.Start()", span="643-643"];
m11_314 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Reset(System.Timers.Timer)", span="640-640"];
m11_95 [cluster="System.Math.Floor(double)", file="Extensions.cs", label="Entry System.Math.Floor(double)", span="0-0"];
m11_392 [cluster="System.Type.GetMethod(string, System.Type[])", file="Extensions.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m11_204 [cluster="string.Trim()", file="Extensions.cs", label="Entry string.Trim()", span="0-0"];
m11_21 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="85-85"];
m11_22 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="Extensions.cs", label="encoding == null", span="87-87"];
m11_24 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="Extensions.cs", label="return encoding.GetString(bytes);", span="89-89"];
m11_23 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="Extensions.cs", label="encoding = Encoding.ASCII", span="87-87"];
m11_25 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="85-85"];
m11_56 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="Extensions.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m11_286 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", span="585-585"];
m11_287 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="ReferenceEquals(from, to)", span="587-587"];
m11_288 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="return time;", span="587-587"];
m11_289 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label=strict, span="589-589"];
m11_290 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="return from.AtStrictly(LocalDateTime.FromDateTime(time)).WithZone(to).ToDateTimeUnspecified();", span="591-591"];
m11_291 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="return from.AtLeniently(LocalDateTime.FromDateTime(time)).WithZone(to).ToDateTimeUnspecified();", span="594-594"];
m11_292 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", span="585-585"];
m11_276 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="556-556"];
m11_277 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="return new DateTime((datetime - DateTime.MinValue).Round(roundingInterval).Ticks);", span="558-558"];
m11_278 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="556-556"];
m11_240 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="Extensions.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m11_464 [file="Extensions.cs", label=V, span=""];
m11_465 [file="Extensions.cs", label=TKey, span=""];
m11_466 [file="Extensions.cs", label="System.Func<TKey, TValue>", span=""];
m11_467 [file="Extensions.cs", label="System.Func<TKey, TValue, TValue>", span=""];
m11_468 [file="Extensions.cs", label=TKey, span=""];
m11_469 [file="Extensions.cs", label="System.Lazy<TValue>", span=""];
m11_470 [file="Extensions.cs", label=string, span=""];
m12_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="210-210"];
m12_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="158-158"];
m12_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="595-595"];
m12_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1568-1568"];
m12_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="959-959"];
m12_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="754-754"];
m12_35 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="215-215"];
m12_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="628-628"];
m12_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="725-725"];
m12_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="942-942"];
m12_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m12_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="323-323"];
m12_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="460-460"];
m12_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1624-1624"];
m12_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="397-397"];
m12_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
m12_72 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.IBaseData)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.IBaseData)", span="202-202"];
m12_73 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.IBaseData)", file="FinancialAdvisorConfiguration.cs", label="var bar = (TradeBar)baseData", span="204-204"];
m12_74 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.IBaseData)", file="FinancialAdvisorConfiguration.cs", label="return new TradeBar\r\n            {\r\n                Close = 2 * bar.Close,\r\n                DataType = bar.DataType,\r\n                High = 2 * bar.High,\r\n                Low = 2 * bar.Low,\r\n                Open = 2 * bar.Open,\r\n                Symbol = bar.Symbol,\r\n                Time = bar.Time,\r\n                Value = 2 * bar.Value,\r\n                Volume = 2 * bar.Volume,\r\n                Period = bar.Period\r\n            };", span="205-217"];
m12_75 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.IBaseData)", file="FinancialAdvisorConfiguration.cs", label="Exit QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.IBaseData)", span="202-202"];
m12_0 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", span="48-48"];
m12_1 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: SetStartDate(2013, 1, 1)", span="51-51"];
m12_2 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: SetEndDate(2014, 12, 31)", span="52-52"];
m12_3 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: SetCash(25000)", span="53-53"];
m12_4 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: AddSecurity(SecurityType.Equity, _symbol, Resolution.Daily)", span="56-56"];
m12_5 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: AddData<Bitcoin>(''BTC'')", span="59-59"];
m12_6 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: _indicators = new Indicators\r\n            {\r\n                BB = BB(_symbol, 20, 1, MovingAverageType.Simple, Resolution.Daily),\r\n                RSI = RSI(_symbol, 14, MovingAverageType.Simple, Resolution.Daily),\r\n                ATR = ATR(_symbol, 14, MovingAverageType.Simple, Resolution.Daily),\r\n                EMA = EMA(_symbol, 14, Resolution.Daily),\r\n                SMA = SMA(_symbol, 14, Resolution.Daily),\r\n                MACD = MACD(_symbol, 12, 26, 9, MovingAverageType.Simple, Resolution.Daily),\r\n                AROON = AROON(_symbol, 20, Resolution.Daily),\r\n                MOM = MOM(_symbol, 20, Resolution.Daily),\r\n                MOMP = MOMP(_symbol, 20, Resolution.Daily),\r\n                STD = STD(_symbol, 20, Resolution.Daily),\r\n                MIN = MIN(_symbol, 14, Resolution.Daily), // by default if the symbol is a tradebar type then it will be the min of the low property\r\n                MAX = MAX(_symbol, 14, Resolution.Daily)  // by default if the symbol is a tradebar type then it will be the max of the high property\r\n            }", span="62-76"];
m12_7 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: _selectorIndicators = new Indicators\r\n            {\r\n                BB = BB(_symbol, 20, 1, MovingAverageType.Simple, Resolution.Daily, Field.Low),\r\n                RSI = RSI(_symbol, 14, MovingAverageType.Simple, Resolution.Daily, Field.Low),\r\n                EMA = EMA(_symbol, 14, Resolution.Daily, Field.Low),\r\n                SMA = SMA(_symbol, 14, Resolution.Daily, Field.Low),\r\n                MACD = MACD(_symbol, 12, 26, 9, MovingAverageType.Simple, Resolution.Daily, Field.Low),\r\n                MOM = MOM(_symbol, 20, Resolution.Daily, Field.Low),\r\n                MOMP = MOMP(_symbol, 20, Resolution.Daily, Field.Low),\r\n                STD = STD(_symbol, 20, Resolution.Daily, Field.Low),\r\n                MIN = MIN(_symbol, 14, Resolution.Daily, Field.High), // this will find the 14 day min of the high property\r\n                MAX = MAX(_symbol, 14, Resolution.Daily, Field.Low),  // this will find the 14 day max of the low property\r\n\r\n                // ATR and AROON are special in that they accept a TradeBar instance instead of a decimal, we could easily project and/or transform the input TradeBar\r\n                // before it gets sent to the ATR/AROON indicator, here we use a function that will multiply the input trade bar by a factor of two\r\n                ATR = ATR(_symbol, 14, MovingAverageType.Simple, Resolution.Daily, SelectorDoubleTradeBar),\r\n                AROON = AROON(_symbol, 20, Resolution.Daily, SelectorDoubleTradeBar)\r\n            }", span="85-102"];
m12_8 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: _rsiCustom = RSI(_customSymbol, 14, MovingAverageType.Simple, Resolution.Daily)", span="105-105"];
m12_9 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: _minCustom = MIN(_customSymbol, 14, Resolution.Daily)", span="106-106"];
m12_10 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: _maxCustom = MAX(_customSymbol, 14, Resolution.Daily)", span="107-107"];
m12_11 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: var spyClose = Identity(_symbol)", span="112-112"];
m12_12 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: var btcClose = Identity(_customSymbol)", span="113-113"];
m12_13 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: _ratio = btcClose.Over(spyClose)", span="115-115"];
m12_14 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: PlotIndicator(''Ratio'', _ratio)", span="117-117"];
m12_15 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", file="FinancialAdvisorConfiguration.cs", label="Exit QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Initialize()", span="48-48"];
m12_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="198-198"];
m12_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m12_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="788-788"];
m12_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m12_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="190-190"];
m12_21 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Indicators.Indicators()", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.Indicators.Indicators()", span="183-183"];
m12_50 [cluster="System.DateTime.ToShortDateString()", file="FinancialAdvisorConfiguration.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m12_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="208-208"];
m12_37 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Algorithm.CSharp.Bitcoin)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Algorithm.CSharp.Bitcoin)", span="124-124"];
m12_38 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Algorithm.CSharp.Bitcoin)", file="FinancialAdvisorConfiguration.cs", label="Exit QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Algorithm.CSharp.Bitcoin)", span="124-124"];
m12_48 [cluster="System.Math.Floor(decimal)", file="FinancialAdvisorConfiguration.cs", label="Entry System.Math.Floor(decimal)", span="0-0"];
m12_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151"];
m12_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="974-974"];
m12_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m12_76 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m12_39 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="132-132"];
m12_40 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: !_indicators.BB.IsReady || !_indicators.RSI.IsReady", span="134-134"];
m12_42 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: _price = data[''SPY''].Close", span="136-136"];
m12_44 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: int quantity = (int)Math.Floor(Portfolio.Cash / data[_symbol].Close)", span="140-140"];
m12_41 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: return;", span="134-134"];
m12_43 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: !Portfolio.HoldStock", span="138-138"];
m12_45 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: Order(_symbol, quantity)", span="143-143"];
m12_46 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: Debug(''Purchased SPY on '' + Time.ToShortDateString())", span="146-146"];
m12_47 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FinancialAdvisorConfiguration.cs", label="Exit QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="132-132"];
m12_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="383-383"];
m12_52 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", span="153-153"];
m12_53 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: !_indicators.BB.IsReady", span="155-155"];
m12_54 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: return;", span="155-155"];
m12_55 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: Plot(''BB'', ''Price'', _price)", span="157-157"];
m12_56 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: Plot(''BB'', _indicators.BB.UpperBand, _indicators.BB.MiddleBand, _indicators.BB.LowerBand)", span="158-158"];
m12_57 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", color=red, community=0, file="FinancialAdvisorConfiguration.cs", label="0: Plot(''RSI'', _indicators.RSI)", span="160-160"];
m12_58 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="FinancialAdvisorConfiguration.cs", label="Plot(''RSI-BTC'', _rsiCustom)", span="163-163"];
m12_59 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="FinancialAdvisorConfiguration.cs", label="Plot(''ATR'', _indicators.ATR)", span="165-165"];
m12_60 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="FinancialAdvisorConfiguration.cs", label="Plot(''STD'', _indicators.STD)", span="167-167"];
m12_61 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="FinancialAdvisorConfiguration.cs", label="Plot(''AROON'', _indicators.AROON.AroonUp, _indicators.AROON.AroonDown)", span="169-169"];
m12_62 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="FinancialAdvisorConfiguration.cs", label="Plot(''MOM'', _indicators.MOM)", span="171-171"];
m12_63 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="FinancialAdvisorConfiguration.cs", label="Plot(''MOMP'', _indicators.MOMP)", span="172-172"];
m12_64 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="FinancialAdvisorConfiguration.cs", label="Plot(''MACD'', ''Price'', _price)", span="174-174"];
m12_65 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="FinancialAdvisorConfiguration.cs", label="Plot(''MACD'', _indicators.MACD.Fast, _indicators.MACD.Slow, _indicators.MACD.Signal)", span="175-175"];
m12_66 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="FinancialAdvisorConfiguration.cs", label="Plot(''Averages'', _indicators.EMA, _indicators.SMA)", span="177-177"];
m12_67 [cluster="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", file="FinancialAdvisorConfiguration.cs", label="Exit QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm.OnEndOfDay()", span="153-153"];
m12_77 [file="FinancialAdvisorConfiguration.cs", label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", span=""];
m13_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1350-1350"];
m13_0 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", span="34-34"];
m13_1 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorDemoAlgorithm.cs", label="0: SetStartDate(2013, 10, 07)", span="36-36"];
m13_2 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorDemoAlgorithm.cs", label="0: SetEndDate(2013, 10, 11)", span="37-37"];
m13_3 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorDemoAlgorithm.cs", label="0: SetCash(100000)", span="38-38"];
m13_4 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", color=red, community=0, file="FinancialAdvisorDemoAlgorithm.cs", label="0: _symbol = AddEquity(''SPY'').Symbol", span="40-40"];
m13_5 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", color=red, community=1, file="FinancialAdvisorDemoAlgorithm.cs", label="0: DefaultOrderProperties = new InteractiveBrokersOrderProperties\r\n            {\r\n                // account group created manually in IB/TWS\r\n                FaGroup = ''TestGroupEQ'',\r\n                // supported allocation methods are: EqualQuantity, NetLiq, AvailableEquity, PctChange\r\n                FaMethod = ''EqualQuantity''\r\n            }", span="46-52"];
m13_6 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", file="FinancialAdvisorDemoAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", span="34-34"];
m13_11 [cluster="QuantConnect.Orders.InteractiveBrokersOrderProperties.InteractiveBrokersOrderProperties()", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Orders.InteractiveBrokersOrderProperties.InteractiveBrokersOrderProperties()", span="22-22"];
m13_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1101-1101"];
m13_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1076-1076"];
m13_12 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.OnData(QuantConnect.Data.Slice)", span="73-73"];
m13_13 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0, file="FinancialAdvisorDemoAlgorithm.cs", label="0: !Portfolio.Invested", span="75-75"];
m13_14 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0, file="FinancialAdvisorDemoAlgorithm.cs", label="0: SetHoldings(_symbol, 1)", span="79-79"];
m13_15 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="FinancialAdvisorDemoAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.OnData(QuantConnect.Data.Slice)", span="73-73"];
m13_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1025-1025"];
m13_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m13_17 [file="FinancialAdvisorDemoAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm", span=""];
m14_20 [cluster="QuantConnect.Data.Custom.DailyFx.ToString()", file="Future.cs", label="Entry QuantConnect.Data.Custom.DailyFx.ToString()", span="233-233"];
m14_21 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="Future.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m14_10 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", file="Future.cs", label="Entry QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", span="40-40"];
m14_11 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", file="Future.cs", label="var result = slice.Get<DailyFx>()", span="42-42"];
m14_12 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", file="Future.cs", label="Console.WriteLine(''SLICE >> {0} : {1}'', _sliceCount++, result)", span="43-43"];
m14_13 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", file="Future.cs", label="Exit QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", span="40-40"];
m14_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="Future.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m14_0 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", file="Future.cs", label="Entry QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", span="31-31"];
m14_1 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", file="Future.cs", label="SetStartDate(2016, 05, 26)", span="33-33"];
m14_2 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", file="Future.cs", label="SetEndDate(2016, 05, 27)", span="34-34"];
m14_3 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", file="Future.cs", label="SetCash(100000)", span="35-35"];
m14_4 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", file="Future.cs", label="AddData<DailyFx>(''DFX'', Resolution.Second, DateTimeZone.Utc)", span="36-36"];
m14_5 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", file="Future.cs", label="Exit QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", span="31-31"];
m14_14 [cluster="QuantConnect.Data.Slice.Get<T>()", file="Future.cs", label="Entry QuantConnect.Data.Slice.Get<T>()", span="244-244"];
m14_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="Future.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m14_9 [cluster="Unk.>", file="Future.cs", label="Entry Unk.>", span=""];
m14_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="Future.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014"];
m14_15 [cluster="System.Console.WriteLine(string, object, object)", file="Future.cs", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
m14_16 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", file="Future.cs", label="Entry QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", span="51-51"];
m14_17 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", file="Future.cs", label="_uniqueConfirmation.Add(calendar.ToString(), calendar)", span="53-53"];
m14_18 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", file="Future.cs", label="Console.WriteLine(''ONDATA >> {0}: {1}'', _eventCount++, calendar)", span="54-54"];
m14_19 [cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", file="Future.cs", label="Exit QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", span="51-51"];
m14_22 [file="Future.cs", label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm", span=""];
m15_2 [cluster="QuantConnect.Securities.IOrderIDMapping.GetOrderByBrokerageId(int)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.IOrderIDMapping.GetOrderByBrokerageId(int)", span="35-35"];
m15_3 [cluster="QuantConnect.Securities.IOrderIDMapping.GetOrderByBrokerageId(int)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.IOrderIDMapping.GetOrderByBrokerageId(int)", span="35-35"];
m15_0 [cluster="QuantConnect.Securities.IOrderIDMapping.GetOrderById(int)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.IOrderIDMapping.GetOrderById(int)", span="28-28"];
m15_1 [cluster="QuantConnect.Securities.IOrderIDMapping.GetOrderById(int)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.IOrderIDMapping.GetOrderById(int)", span="28-28"];
m16_4 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="59-59"];
m16_57 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="20-20"];
m16_35 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", span="87-87"];
m16_36 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="89-89"];
m16_39 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(isValidSecurityType, _unit.CanSubmitOrder(GDAXTestsHelpers.GetSecurity(1.0m, securityType), order.Object, out message))", span="93-93"];
m16_37 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="var order = new Mock<QuantConnect.Orders.Order>()", span="90-90"];
m16_38 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.Quantity = 10.0m", span="91-91"];
m16_40 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", span="87-87"];
m16_17 [cluster="Unk.CanUpdateOrder", file="GDAXBrokerageModelTests.cs", label="Entry Unk.CanUpdateOrder", span=""];
m16_15 [cluster="QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", span="54-54"];
m16_62 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", span="123-123"];
m16_63 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", color=red, community=0, file="GDAXBrokerageModelTests.cs", label="0: var security = GDAXTestsHelpers.GetSecurity()", span="125-125"];
m16_64 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", color=red, community=0, file="GDAXBrokerageModelTests.cs", label="0: security.FeeModel = new GDAXFeeModel()", span="126-126"];
m16_65 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", color=red, community=0, file="GDAXBrokerageModelTests.cs", label="0: security.SetMarketPrice(new TradeBar { Symbol = security.Symbol, Close = 5000m })", span="127-127"];
m16_66 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", color=red, community=0, file="GDAXBrokerageModelTests.cs", label="0: var orderFee = security.FeeModel.GetOrderFee(security, new LimitOrder(security.Symbol, 1, 5000m, DateTime.MinValue))", span="128-128"];
m16_67 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", color=red, community=0, file="GDAXBrokerageModelTests.cs", label="0: Assert.AreEqual(0, orderFee)", span="130-130"];
m16_68 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", span="123-123"];
m16_69 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="55-55"];
m16_27 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerageModelTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_11 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", span="46-46"];
m16_12 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="48-48"];
m16_13 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(false, _unit.CanUpdateOrder(GDAXTestsHelpers.GetSecurity(), Mock.Of<QuantConnect.Orders.Order>(),\r\n                new QuantConnect.Orders.UpdateOrderRequest(DateTime.UtcNow, 1, new QuantConnect.Orders.UpdateOrderFields()), out message))", span="49-50"];
m16_14 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", span="46-46"];
m16_48 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="268-268"];
m16_3 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", span="12-12"];
m16_16 [cluster="QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", span="20-20"];
m16_59 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
m16_6 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", span="40-40"];
m16_7 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", file="GDAXBrokerageModelTests.cs", label="Assert.IsInstanceOf<GDAXFeeModel>(_unit.GetFeeModel(GDAXTestsHelpers.GetSecurity()))", span="42-42"];
m16_8 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", span="40-40"];
m16_10 [cluster="Unk.>", file="GDAXBrokerageModelTests.cs", label="Entry Unk.>", span=""];
m16_26 [cluster="Mock<QuantConnect.Orders.Order>.cstr", file="GDAXBrokerageModelTests.cs", label="Entry Mock<QuantConnect.Orders.Order>.cstr", span=""];
m16_18 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", span="55-55"];
m16_19 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="57-57"];
m16_22 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label=isUpdate, span="61-61"];
m16_24 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(!isUpdate, _unit.CanSubmitOrder(GDAXTestsHelpers.GetSecurity(), order.Object, out message))", span="66-66"];
m16_20 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="var order = new Mock<QuantConnect.Orders.Order>()", span="58-58"];
m16_21 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.Quantity = 10.0m", span="59-59"];
m16_23 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.BrokerId = new List<string>() {''abc123''}", span="63-63"];
m16_25 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", span="55-55"];
m16_5 [cluster="Unk.AreEqual", file="GDAXBrokerageModelTests.cs", label="Entry Unk.AreEqual", span=""];
m16_9 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="69-69"];
m16_50 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", span="112-112"];
m16_51 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", color=red, community=0, file="GDAXBrokerageModelTests.cs", label="0: var security = GDAXTestsHelpers.GetSecurity()", span="114-114"];
m16_52 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", color=red, community=0, file="GDAXBrokerageModelTests.cs", label="0: security.FeeModel = new GDAXFeeModel()", span="115-115"];
m16_53 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", color=red, community=0, file="GDAXBrokerageModelTests.cs", label="0: security.SetMarketPrice(new TradeBar { Symbol = security.Symbol, Close = 5000m })", span="116-116"];
m16_54 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", color=red, community=0, file="GDAXBrokerageModelTests.cs", label="0: var orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(security.Symbol, 1, DateTime.MinValue))", span="117-117"];
m16_55 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", color=red, community=0, file="GDAXBrokerageModelTests.cs", label="0: Assert.AreEqual(12.5m, orderFee)", span="119-119"];
m16_56 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", span="112-112"];
m16_60 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m16_61 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m16_47 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m16_49 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="95-95"];
m16_28 [cluster="Unk.CanSubmitOrder", file="GDAXBrokerageModelTests.cs", label="Entry Unk.CanSubmitOrder", span=""];
m16_29 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", span="71-71"];
m16_30 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="73-73"];
m16_32 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.Quantity = orderQuantity", span="76-76"];
m16_33 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(isValidOrderQuantity, _unit.CanSubmitOrder(GDAXTestsHelpers.GetSecurity(), order.Object, out message))", span="78-78"];
m16_31 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="var order = new Mock<QuantConnect.Orders.Order>()", span="74-74"];
m16_34 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", span="71-71"];
m16_41 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", span="102-102"];
m16_42 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="104-104"];
m16_44 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="var order = Order.CreateOrder(new SubmitOrderRequest(orderType, SecurityType.Crypto, security.Symbol, 10.0m, 1.0m, 10.0m, DateTime.Now, ''Test Order''))", span="106-106"];
m16_45 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(isValidOrderType, _unit.CanSubmitOrder(security, order, out message))", span="108-108"];
m16_43 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="var security = GDAXTestsHelpers.GetSecurity()", span="105-105"];
m16_46 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", span="102-102"];
m16_58 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m16_0 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", span="34-34"];
m16_1 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(3, _unit.GetLeverage(GDAXTestsHelpers.GetSecurity()))", span="36-36"];
m16_2 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", span="34-34"];
m16_70 [file="GDAXBrokerageModelTests.cs", label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", span=""];
m17_0 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="28-28"];
m17_1 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="order.Type == OrderType.Limit", span="31-31"];
m17_4 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="decimal fee = security.Price * (order.Quantity < 0 ? (order.Quantity * -1) : order.Quantity) * divisor", span="39-39"];
m17_2 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="return 0m;", span="33-33"];
m17_3 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="GDAXFeeModel.cs", label="3: var divisor = 0.0025m", span="37-37"];
m17_5 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="return fee;", span="40-40"];
m17_6 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="Exit QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="28-28"];
m19_6 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="InteractiveBrokersAccountData.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m19_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.FinancialAdvisor.FinancialAdvisorConfiguration.Clear()", file="InteractiveBrokersAccountData.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.FinancialAdvisor.FinancialAdvisorConfiguration.Clear()", span="53-53"];
m19_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", file="InteractiveBrokersAccountData.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", span="48-48"];
m19_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", color=red, community=0, file="InteractiveBrokersAccountData.cs", label="0: AccountProperties.Clear()", span="50-50"];
m19_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", color=red, community=0, file="InteractiveBrokersAccountData.cs", label="0: CashBalances.Clear()", span="51-51"];
m19_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", color=red, community=0, file="InteractiveBrokersAccountData.cs", label="0: AccountHoldings.Clear()", span="52-52"];
m19_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", color=red, community=0, file="InteractiveBrokersAccountData.cs", label="0: FinancialAdvisorConfiguration.Clear()", span="53-53"];
m19_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", file="InteractiveBrokersAccountData.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", span="48-48"];
m19_8 [file="InteractiveBrokersAccountData.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData", span=""];
m20_2 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateShortOrder(int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateShortOrder(int)", span="28-28"];
m20_3 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateShortOrder(int)", file="InteractiveBrokersBrokerage.cs", label="return new MarketOrder(Symbol, -Math.Abs(quantity), DateTime.Now);", span="30-30"];
m20_4 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateShortOrder(int)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateShortOrder(int)", span="28-28"];
m20_10 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Brokerages.MarketOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="38-38"];
m20_11 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="InteractiveBrokersBrokerage.cs", label="return false;", span="42-42"];
m20_12 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Brokerages.MarketOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="38-38"];
m20_5 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m20_7 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateLongOrder(int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateLongOrder(int)", span="33-33"];
m20_8 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateLongOrder(int)", file="InteractiveBrokersBrokerage.cs", label="return new MarketOrder(Symbol, Math.Abs(quantity), DateTime.Now);", span="35-35"];
m20_9 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateLongOrder(int)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateLongOrder(int)", span="33-33"];
m20_0 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.MarketOrderTestParameters(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Brokerages.MarketOrderTestParameters.MarketOrderTestParameters(QuantConnect.Symbol)", span="23-23"];
m20_1 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.MarketOrderTestParameters(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Brokerages.MarketOrderTestParameters.MarketOrderTestParameters(QuantConnect.Symbol)", span="23-23"];
m20_6 [cluster="System.Math.Abs(int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m20_13 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Tests.Brokerages.MarketOrderTestParameters", span=""];
m21_0 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="35-35"];
m21_1 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="order.Type == OrderType.Limit", span="38-38"];
m21_4 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=red, community=0, file="InteractiveBrokersBrokerageTests.cs", label="0: decimal fee = security.Price * (order.Quantity < 0 ? (order.Quantity * -1) : order.Quantity) * divisor", span="46-46"];
m21_2 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="return 0m;", span="40-40"];
m21_3 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=red, community=0, file="InteractiveBrokersBrokerageTests.cs", label="3: decimal divisor = 0.025m", span="44-44"];
m21_5 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="return fee;", span="47-47"];
m21_6 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="35-35"];
m22_3 [cluster="object.MemberwiseClone()", file="InteractiveBrokersOrderProperties.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m22_0 [cluster="QuantConnect.Orders.InteractiveBrokersOrderProperties.Clone()", file="InteractiveBrokersOrderProperties.cs", label="Entry QuantConnect.Orders.InteractiveBrokersOrderProperties.Clone()", span="53-53"];
m22_1 [cluster="QuantConnect.Orders.InteractiveBrokersOrderProperties.Clone()", color=red, community=0, file="InteractiveBrokersOrderProperties.cs", label="0: return (InteractiveBrokersOrderProperties)MemberwiseClone();", span="55-55"];
m22_2 [cluster="QuantConnect.Orders.InteractiveBrokersOrderProperties.Clone()", file="InteractiveBrokersOrderProperties.cs", label="Exit QuantConnect.Orders.InteractiveBrokersOrderProperties.Clone()", span="53-53"];
m22_4 [file="InteractiveBrokersOrderProperties.cs", label="QuantConnect.Orders.InteractiveBrokersOrderProperties", span=""];
m23_0 [cluster="QuantConnect.Interfaces.IOrderProperties.Clone()", file="IOrderProperties.cs", label="Entry QuantConnect.Interfaces.IOrderProperties.Clone()", span="25-25"];
m23_1 [cluster="QuantConnect.Interfaces.IOrderProperties.Clone()", file="IOrderProperties.cs", label="Exit QuantConnect.Interfaces.IOrderProperties.Clone()", span="25-25"];
m24_49 [cluster="Unk.IsFalse", file="LeanData.cs", label="Entry Unk.IsFalse", span=""];
m24_16 [cluster="System.TimeSpan.FromSeconds(double)", file="LeanData.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m24_50 [cluster="Unk.IsNull", file="LeanData.cs", label="Entry Unk.IsNull", span=""];
m24_38 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", file="LeanData.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", span="88-88"];
m24_39 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", color=red, community=0, file="LeanData.cs", label="0: var start = new DateTime(2015, 10, 10, 13, 0, 0)", span="90-90"];
m24_40 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", color=red, community=0, file="LeanData.cs", label="0: var data = new List<Tick>\r\n            {\r\n                new Tick {Time = start.AddSeconds(0)}\r\n            }", span="91-94"];
m24_41 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", color=red, community=0, file="LeanData.cs", label="0: var timeProvider = new ManualTimeProvider(start, TimeZones.Utc)", span="96-96"];
m24_42 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", color=red, community=0, file="LeanData.cs", label="0: var fastForward = new FastForwardEnumerator(data.GetEnumerator(), timeProvider, TimeZones.Utc, TimeSpan.FromSeconds(0.5))", span="97-97"];
m24_43 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", color=red, community=0, file="LeanData.cs", label="0: Assert.IsTrue(fastForward.MoveNext())", span="99-99"];
m24_44 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", color=red, community=0, file="LeanData.cs", label="0: Assert.IsNotNull(fastForward.Current)", span="100-100"];
m24_45 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", color=red, community=0, file="LeanData.cs", label="0: Assert.IsFalse(fastForward.MoveNext())", span="102-102"];
m24_46 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", color=red, community=0, file="LeanData.cs", label="0: Assert.IsNull(fastForward.Current)", span="103-103"];
m24_47 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", file="LeanData.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.CurrentIsNullWhenEnumeratorReturnsFalse()", span="88-88"];
m24_19 [cluster="Unk.AreEqual", file="LeanData.cs", label="Entry Unk.AreEqual", span=""];
m24_15 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m24_11 [cluster="System.DateTime.AddMinutes(double)", file="LeanData.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m24_20 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="LeanData.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", span="47-47"];
m24_21 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="LeanData.cs", label="var start = new DateTime(2015, 10, 10, 13, 0, 0)", span="49-49"];
m24_22 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="LeanData.cs", label="var data = new List<Tick>\r\n            {\r\n                new Tick {Time = start.AddMinutes(-1)},\r\n                new Tick {Time = start.AddSeconds(-1)},\r\n                new Tick {Time = start.AddSeconds(0)},\r\n                new Tick {Time = start.AddSeconds(1)},\r\n            }", span="50-56"];
m24_23 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="LeanData.cs", label="var timeProvider = new ManualTimeProvider(start, TimeZones.Utc)", span="58-58"];
m24_26 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="LeanData.cs", label="Assert.AreEqual(start.AddSeconds(-1), fastForward.Current.Time)", span="62-62"];
m24_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="LeanData.cs", label="var fastForward = new FastForwardEnumerator(data.GetEnumerator(), timeProvider, TimeZones.Utc, TimeSpan.FromSeconds(1))", span="59-59"];
m24_25 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="LeanData.cs", label="Assert.IsTrue(fastForward.MoveNext())", span="61-61"];
m24_27 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="LeanData.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", span="47-47"];
m24_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.ManualTimeProvider(System.DateTime, DateTimeZone)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.ManualTimeProvider(System.DateTime, DateTimeZone)", span="47-47"];
m24_28 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="LeanData.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", span="65-65"];
m24_29 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="LeanData.cs", label="var start = new DateTime(2015, 10, 10, 13, 0, 0)", span="67-67"];
m24_30 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="LeanData.cs", label="var data = new List<Tick>\r\n            {\r\n                new Tick {Time = start.AddMinutes(-1)},\r\n                new Tick {Time = start.AddSeconds(-1)},\r\n                new Tick {Time = start.AddSeconds(1)},\r\n                new Tick {Time = start.AddSeconds(0)},\r\n                new Tick {Time = start.AddSeconds(2)}\r\n            }", span="68-75"];
m24_31 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", color=red, community=0, file="LeanData.cs", label="0: var timeProvider = new ManualTimeProvider(start, TimeZones.Utc)", span="77-77"];
m24_34 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", color=red, community=0, file="LeanData.cs", label="0: Assert.AreEqual(start.AddSeconds(1), fastForward.Current.Time)", span="81-81"];
m24_36 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", color=red, community=0, file="LeanData.cs", label="0: Assert.AreEqual(start.AddSeconds(2), fastForward.Current.Time)", span="84-84"];
m24_32 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", color=red, community=0, file="LeanData.cs", label="0: var fastForward = new FastForwardEnumerator(data.GetEnumerator(), timeProvider, TimeZones.Utc, TimeSpan.FromSeconds(0.5))", span="78-78"];
m24_33 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", color=red, community=0, file="LeanData.cs", label="0: Assert.IsTrue(fastForward.MoveNext())", span="80-80"];
m24_35 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", color=red, community=0, file="LeanData.cs", label="0: Assert.IsTrue(fastForward.MoveNext())", span="83-83"];
m24_37 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="LeanData.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", span="65-65"];
m24_48 [cluster="Unk.IsNotNull", file="LeanData.cs", label="Entry Unk.IsNotNull", span=""];
m24_18 [cluster="Unk.IsTrue", file="LeanData.cs", label="Entry Unk.IsTrue", span=""];
m24_9 [cluster="System.Collections.Generic.List<T>.List()", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m24_10 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanData.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m24_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", span="43-43"];
m24_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", span="57-57"];
m24_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="LeanData.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", span="29-29"];
m24_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="LeanData.cs", label="var start = new DateTime(2015, 10, 10, 13, 0, 0)", span="31-31"];
m24_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="LeanData.cs", label="var data = new List<Tick>\r\n            {\r\n                new Tick {Time = start.AddMinutes(-1)},\r\n                new Tick {Time = start.AddSeconds(-1)},\r\n                new Tick {Time = start.AddSeconds(0)},\r\n                new Tick {Time = start.AddSeconds(1)},\r\n            }", span="32-38"];
m24_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="LeanData.cs", label="var timeProvider = new ManualTimeProvider(start, TimeZones.Utc)", span="40-40"];
m24_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="LeanData.cs", label="Assert.AreEqual(start, fastForward.Current.Time)", span="44-44"];
m24_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="LeanData.cs", label="var fastForward = new FastForwardEnumerator(data.GetEnumerator(), timeProvider, TimeZones.Utc, TimeSpan.FromSeconds(0.5))", span="41-41"];
m24_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="LeanData.cs", label="Assert.IsTrue(fastForward.MoveNext())", span="43-43"];
m24_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="LeanData.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", span="29-29"];
m24_12 [cluster="System.DateTime.AddSeconds(double)", file="LeanData.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m24_8 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="LeanData.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m26_29 [cluster="QuantConnect.Data.Consolidators.DataConsolidatedHandler.Invoke(object, QuantConnect.Data.IBaseData)", file="LeanDataWriter.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidatedHandler.Invoke(object, QuantConnect.Data.IBaseData)", span="24-24"];
m26_8 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LeanDataWriter.cs", label="Entry QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", span="107-107"];
m26_9 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LeanDataWriter.cs", label="!second.InputType.IsAssignableFrom(first.OutputType)", span="109-109"];
m26_11 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LeanDataWriter.cs", label="First = first", span="113-113"];
m26_12 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LeanDataWriter.cs", label="Second = second", span="114-114"];
m26_13 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LeanDataWriter.cs", label="first.DataConsolidated += (sender, consolidated) => second.Update(consolidated)", span="117-117"];
m26_14 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LeanDataWriter.cs", label="second.DataConsolidated += (sender, consolidated) => OnDataConsolidated(consolidated)", span="121-121"];
m26_10 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LeanDataWriter.cs", label="throw new ArgumentException(''first.OutputType must equal second.OutputType!'');", span="111-111"];
m26_15 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LeanDataWriter.cs", label="Exit QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", span="107-107"];
m26_24 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.IBaseData)", file="LeanDataWriter.cs", label="Entry QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.IBaseData)", span="129-129"];
m26_25 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.IBaseData)", file="LeanDataWriter.cs", label="var handler = DataConsolidated", span="131-131"];
m26_27 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.IBaseData)", file="LeanDataWriter.cs", label="handler(this, consolidated)", span="132-132"];
m26_26 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.IBaseData)", file="LeanDataWriter.cs", label="handler != null", span="132-132"];
m26_28 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.IBaseData)", file="LeanDataWriter.cs", label="Exit QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.IBaseData)", span="129-129"];
m26_3 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", file="LeanDataWriter.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
m26_7 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", file="LeanDataWriter.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
m26_4 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.Scan(System.DateTime)", file="LeanDataWriter.cs", label="Entry QuantConnect.Data.Consolidators.SequentialConsolidator.Scan(System.DateTime)", span="91-91"];
m26_5 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.Scan(System.DateTime)", file="LeanDataWriter.cs", label="First.Scan(currentLocalTime)", span="93-93"];
m26_6 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.Scan(System.DateTime)", file="LeanDataWriter.cs", label="Exit QuantConnect.Data.Consolidators.SequentialConsolidator.Scan(System.DateTime)", span="91-91"];
m26_0 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.Update(QuantConnect.Data.IBaseData)", file="LeanDataWriter.cs", label="Entry QuantConnect.Data.Consolidators.SequentialConsolidator.Update(QuantConnect.Data.IBaseData)", span="82-82"];
m26_1 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.Update(QuantConnect.Data.IBaseData)", file="LeanDataWriter.cs", label="First.Update(data)", span="84-84"];
m26_2 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.Update(QuantConnect.Data.IBaseData)", file="LeanDataWriter.cs", label="Exit QuantConnect.Data.Consolidators.SequentialConsolidator.Update(QuantConnect.Data.IBaseData)", span="82-82"];
m26_17 [cluster="System.ArgumentException.ArgumentException(string)", file="LeanDataWriter.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m26_16 [cluster="System.Type.IsAssignableFrom(System.Type)", file="LeanDataWriter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m26_21 [cluster="lambda expression", file="LeanDataWriter.cs", label="Entry lambda expression", span="121-121"];
m26_19 [cluster="lambda expression", file="LeanDataWriter.cs", label="second.Update(consolidated)", span="117-117"];
m26_22 [cluster="lambda expression", file="LeanDataWriter.cs", label="OnDataConsolidated(consolidated)", span="121-121"];
m26_18 [cluster="lambda expression", file="LeanDataWriter.cs", label="Entry lambda expression", span="117-117"];
m26_20 [cluster="lambda expression", file="LeanDataWriter.cs", label="Exit lambda expression", span="117-117"];
m26_23 [cluster="lambda expression", file="LeanDataWriter.cs", label="Exit lambda expression", span="121-121"];
m26_30 [file="LeanDataWriter.cs", label="QuantConnect.Data.Consolidators.SequentialConsolidator", span=""];
m26_31 [file="LeanDataWriter.cs", label="QuantConnect.Data.Consolidators.IDataConsolidator", span=""];
m27_10 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="51-51"];
m27_11 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="LimitOrder.cs", label="0: _previous.Date == Time.Date", span="54-54"];
m27_23 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="Plot(_symbol, ''Open'', data[_symbol].Open)", span="77-77"];
m27_12 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="LimitOrder.cs", label="0: return;", span="54-54"];
m27_13 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="LimitOrder.cs", label="0: !_macd.IsReady", span="56-56"];
m27_14 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="LimitOrder.cs", label="0: return;", span="56-56"];
m27_15 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="var holding = Portfolio[_symbol]", span="58-58"];
m27_16 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="var signalDeltaPercent = (_macd - _macd.Signal)/_macd.Fast", span="60-60"];
m27_18 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="holding.Quantity <= 0 && signalDeltaPercent > tolerance", span="64-64"];
m27_20 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="holding.Quantity >= 0 && signalDeltaPercent < -tolerance", span="70-70"];
m27_17 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="var tolerance = 0.0025m", span="61-61"];
m27_19 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="SetHoldings(_symbol, 1.0)", span="67-67"];
m27_21 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="Liquidate(_symbol)", span="72-72"];
m27_22 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="Plot(''MACD'', _macd, _macd.Signal)", span="76-76"];
m27_24 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="Plot(_symbol, _macd.Fast, _macd.Slow)", span="78-78"];
m27_25 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="_previous = Time", span="80-80"];
m27_26 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitOrder.cs", label="Exit QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="51-51"];
m27_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m27_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m27_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="198-198"];
m27_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151"];
m27_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095"];
m27_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262"];
m27_0 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", span="36-36"];
m27_1 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="LimitOrder.cs", label="SetStartDate(2004, 01, 01)", span="38-38"];
m27_2 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="LimitOrder.cs", label="SetEndDate(2015, 01, 01)", span="39-39"];
m27_3 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="LimitOrder.cs", label="AddSecurity(SecurityType.Equity, _symbol, Resolution.Daily)", span="41-41"];
m27_4 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="LimitOrder.cs", label="_macd = MACD(_symbol, 9, 26, 9, MovingAverageType.Exponential, Resolution.Daily)", span="44-44"];
m27_5 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="LimitOrder.cs", label="Exit QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", span="36-36"];
m27_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070"];
m27_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="595-595"];
m27_31 [file="LimitOrder.cs", label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", span=""];
m28_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="247-247"];
m28_0 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="37-37"];
m28_1 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="37-37"];
m28_2 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m28_3 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m28_7 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.Clone()", span="67-67"];
m28_8 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="var order = new MarketOnCloseOrder()", span="69-69"];
m28_9 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="CopyTo(order)", span="70-70"];
m28_10 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="return order;", span="71-71"];
m28_11 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.Clone()", span="67-67"];
m28_4 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="58-58"];
m28_5 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnCloseOrder.cs", label="return Quantity*security.Price;", span="60-60"];
m28_6 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="58-58"];
m28_13 [file="MarketOnCloseOrder.cs", label="QuantConnect.Orders.MarketOnCloseOrder", span=""];
m29_0 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.Initialize()", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.Initialize()", span="23-23"];
m29_1 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.Initialize()", file="MarketOnOpenOrder.cs", label="SetStartDate(2005, 2, 25)", span="25-25"];
m29_2 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.Initialize()", file="MarketOnOpenOrder.cs", label="SetEndDate(2005, 2, 28)", span="26-26"];
m29_3 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.Initialize()", file="MarketOnOpenOrder.cs", label="SetCash(100000)", span="27-27"];
m29_4 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.Initialize()", file="MarketOnOpenOrder.cs", label="SetBenchmark(x => 0)", span="28-28"];
m29_5 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.Initialize()", file="MarketOnOpenOrder.cs", label="_symbol = AddEquity(''AAPL'', Resolution.Hour).Symbol", span="30-30"];
m29_6 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.Initialize()", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.Initialize()", span="23-23"];
m29_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1339-1339"];
m29_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m29_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m29_22 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m29_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="981-981"];
m29_15 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="33-33"];
m29_16 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOrder.cs", label="TradeBar bar", span="35-35"];
m29_17 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOrder.cs", label="!tradeBars.TryGetValue(_symbol, out bar)", span="36-36"];
m29_18 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOrder.cs", label="return;", span="36-36"];
m29_19 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOrder.cs", label="!Portfolio.Invested && Time.Date == EndDate.Date", span="38-38"];
m29_20 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOrder.cs", label="Buy(_symbol, 1)", span="40-40"];
m29_21 [cluster="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="33-33"];
m29_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m29_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014"];
m29_12 [cluster="lambda expression", file="MarketOnOpenOrder.cs", label="Entry lambda expression", span="28-28"];
m29_13 [cluster="lambda expression", file="MarketOnOpenOrder.cs", label=0, span="28-28"];
m29_14 [cluster="lambda expression", file="MarketOnOpenOrder.cs", label="Exit lambda expression", span="28-28"];
m29_24 [file="MarketOnOpenOrder.cs", label="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm", span=""];
m30_7 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.Clone()", span="67-67"];
m30_8 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="var order = new MarketOrder()", span="69-69"];
m30_9 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="CopyTo(order)", span="70-70"];
m30_10 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="return order;", span="71-71"];
m30_11 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.Clone()", span="67-67"];
m30_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="247-247"];
m30_2 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m30_3 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m30_0 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29"];
m30_1 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29"];
m30_4 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="58-58"];
m30_5 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="return Quantity*security.Price;", span="60-60"];
m30_6 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="58-58"];
m30_13 [file="MarketOrder.cs", label="QuantConnect.Orders.MarketOrder", span=""];
m31_337 [cluster="QuantConnect.Holding.Holding()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m31_124 [cluster="Oanda.RestV20.Session.TransactionStreamSession.TransactionStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Session.TransactionStreamSession.TransactionStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20)", span="30-30"];
m31_118 [cluster="Oanda.RestV20.Api.DefaultApi.CancelOrder(string, string, string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.CancelOrder(string, string, string, string)", span="1979-1979"];
m31_138 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", span="306-306"];
m31_139 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="OandaRestApiV20.cs", label="_ratesSession != null", span="308-308"];
m31_140 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="OandaRestApiV20.cs", label="_ratesSession.DataReceived -= OnPricingDataReceived", span="310-310"];
m31_141 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="OandaRestApiV20.cs", label="_ratesSession.StopSession()", span="311-311"];
m31_142 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", span="306-306"];
m31_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m31_7 [cluster="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.Initialize()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.Initialize()", span="35-35"];
m31_218 [cluster="Oanda.RestV20.Api.DefaultApi.GetBasePath()", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetBasePath()", span="1911-1911"];
m31_44 [cluster="Oanda.RestV20.Api.DefaultApi.GetPrices(string, string, System.Collections.Generic.List<string>, string, string, bool?)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetPrices(string, string, System.Collections.Generic.List<string>, string, string, bool?)", span="4286-4286"];
m31_198 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m31_164 [cluster="Unk.ToString", file="OandaRestApiV20.cs", label="Entry Unk.ToString", span=""];
m31_277 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m31_260 [cluster="System.DateTime.ToString(string)", file="OandaRestApiV20.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m31_30 [cluster="Oanda.RestV20.Api.DefaultApi.ListOpenPositions(string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.ListOpenPositions(string, string)", span="5475-5475"];
m31_31 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", span="119-119"];
m31_33 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", color=green, community=0, file="OandaRestApiV20.cs", label="0: return new List<Cash>\r\n            {\r\n                new Cash(response.Account.Currency,\r\n                    response.Account.Balance.ToDecimal(),\r\n                    GetUsdConversion(response.Account.Currency))\r\n            };", span="123-128"];
m31_32 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", file="OandaRestApiV20.cs", label="var response = _apiRest.GetAccountSummary(Authorization, AccountId)", span="121-121"];
m31_34 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", span="119-119"];
m31_15 [cluster="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OandaRestApiV20.cs", label="return;", span="50-50"];
m31_0 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", span="63-63"];
m31_1 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", color=green, community=1, file="OandaRestApiV20.cs", label="0: var basePathRest = environment == Environment.Trade ?\r\n                ''https://api-fxtrade.oanda.com/v3'' :\r\n                ''https://api-fxpractice.oanda.com/v3''", span="66-68"];
m31_2 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", color=green, community=1, file="OandaRestApiV20.cs", label="0: var basePathStreaming = environment == Environment.Trade ?\r\n                ''https://stream-fxtrade.oanda.com/v3'' :\r\n                ''https://stream-fxpractice.oanda.com/v3''", span="70-72"];
m31_3 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="OandaRestApiV20.cs", label="_apiRest = new DefaultApi(basePathRest)", span="74-74"];
m31_4 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="OandaRestApiV20.cs", label="_apiRest.Configuration.AddDefaultHeader(OandaAgentKey, Agent)", span="75-75"];
m31_5 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="OandaRestApiV20.cs", label="_apiStreaming = new DefaultApi(basePathStreaming)", span="77-77"];
m31_6 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", span="63-63"];
m31_194 [cluster="Unk.GetTickDateTimeFromString", file="OandaRestApiV20.cs", label="Entry Unk.GetTickDateTimeFromString", span=""];
m31_9 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", span="83-83"];
m31_105 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m31_192 [cluster="Unk.GetBrokerageSecurityType", file="OandaRestApiV20.cs", label="Entry Unk.GetBrokerageSecurityType", span=""];
m31_39 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiBase.GetUsdConversion(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiBase.GetUsdConversion(string)", span="466-466"];
m31_10 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="OandaRestApiV20.cs", label="var response = _apiRest.GetAccountInstruments(Authorization, AccountId)", span="85-85"];
m31_223 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="OandaRestApiV20.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m31_80 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m31_375 [cluster="Oanda.RestV20.Model.MarketIfTouchedOrderRequest.MarketIfTouchedOrderRequest(Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Model.MarketIfTouchedOrderRequest.MarketIfTouchedOrderRequest(Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="246-246"];
m31_318 [cluster="NotSupportedException.cstr", file="OandaRestApiV20.cs", label="Entry NotSupportedException.cstr", span=""];
m31_79 [cluster="Oanda.RestV20.Api.DefaultApi.CreateOrder(string, string, string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.CreateOrder(string, string, string, string)", span="96-96"];
m31_24 [cluster="Oanda.RestV20.Api.DefaultApi.ListPendingOrdersAsJson(string, string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.ListPendingOrdersAsJson(string, string, string)", span="34-34"];
m31_81 [cluster="System.Convert.ToDecimal(string)", file="OandaRestApiV20.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m31_106 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m31_108 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", span="252-252"];
m31_114 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="_apiRest.CancelOrder(Authorization, AccountId, orderId)", span="264-264"];
m31_115 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''Oanda Cancel Order Event'') { Status = OrderStatus.Canceled })", span="265-265"];
m31_113 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.BrokerId", span="262-262"];
m31_109 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Log.Trace(''OandaBrokerage.CancelOrder(): '' + order)", span="254-254"];
m31_110 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="!order.BrokerId.Any()", span="256-256"];
m31_116 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return true;", span="268-268"];
m31_112 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return false;", span="259-259"];
m31_111 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Log.Trace(''OandaBrokerage.CancelOrder(): Unable to cancel order without BrokerId.'')", span="258-258"];
m31_117 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", span="252-252"];
m31_143 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", span="319-319"];
m31_144 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="OandaRestApiV20.cs", label="return OandaBrokerage.GetDateTimeFromString(time.Remove(25, 3));", span="322-322"];
m31_145 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", span="319-319"];
m31_137 [cluster="Oanda.RestV20.Session.PricingStreamSession.PricingStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20, System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Session.PricingStreamSession.PricingStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20, System.Collections.Generic.List<string>)", span="34-34"];
m31_377 [cluster="System.NotSupportedException.NotSupportedException(string)", file="OandaRestApiV20.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m31_21 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="OandaRestApiV20.cs", label="var response = (JObject)JsonConvert.DeserializeObject(json)", span="99-99"];
m31_226 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", span="451-451"];
m31_227 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="var requestString = _apiStreaming.GetBasePath() + ''/accounts/'' + AccountId + ''/transactions/stream''", span="453-453"];
m31_230 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="request.Headers[HttpRequestHeader.Authorization] = Authorization", span="457-457"];
m31_231 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="request.Headers[OandaAgentKey] = Agent", span="458-458"];
m31_228 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="var request = WebRequest.CreateHttp(requestString)", span="455-455"];
m31_229 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="request.Method = ''GET''", span="456-456"];
m31_232 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="return request.GetResponse();", span="462-462"];
m31_235 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="throw;", span="468-468"];
m31_238 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="throw new Exception(reader.ReadToEnd());", span="474-474"];
m31_234 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="ex.Response == null", span="466-466"];
m31_237 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="var reader = new StreamReader(stream)", span="472-472"];
m31_233 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label=WebException, span="464-464"];
m31_236 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="var stream = GetResponseStream(ex.Response)", span="471-471"];
m31_239 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", span="451-451"];
m31_86 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m31_225 [cluster="System.IO.StreamReader.ReadToEnd()", file="OandaRestApiV20.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m31_36 [cluster="System.Collections.Generic.List<T>.List()", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m31_315 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42"];
m31_82 [cluster="System.Convert.ToInt32(string)", file="OandaRestApiV20.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m31_46 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Entry lambda expression", span="142-142"];
m31_50 [cluster="lambda expression", file="OandaRestApiV20.cs", label="new Tick { BidPrice = x.Bids.Last().Price.ToDecimal(), AskPrice = x.Asks.Last().Price.ToDecimal() }", span="143-143"];
m31_49 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Entry lambda expression", span="143-143"];
m31_51 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Exit lambda expression", span="143-143"];
m31_87 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Entry lambda expression", span="180-180"];
m31_16 [cluster="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OandaRestApiV20.cs", label="Fast > Slow*1.001m", span="52-52"];
m31_88 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Convert.ToInt32(trade.Units)", span="180-180"];
m31_89 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Exit lambda expression", span="180-180"];
m31_18 [cluster="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OandaRestApiV20.cs", label="Fast < Slow*0.999m", span="56-56"];
m31_17 [cluster="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OandaRestApiV20.cs", label="SetHoldings(''SPY'', 1)", span="54-54"];
m31_47 [cluster="lambda expression", file="OandaRestApiV20.cs", label="x.Instrument", span="142-142"];
m31_48 [cluster="lambda expression", file="OandaRestApiV20.cs", label="Exit lambda expression", span="142-142"];
m31_263 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", span="689-689"];
m31_338 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="CandlestickGranularity interval", span="691-691"];
m31_339 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label=resolution, span="693-693"];
m31_348 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="throw new ArgumentException(''Unsupported resolution: '' + resolution);", span="712-712"];
m31_349 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="return interval;", span="715-715"];
m31_340 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Resolution.Second", span="695-695"];
m31_342 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Resolution.Minute", span="699-699"];
m31_344 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Resolution.Hour", span="703-703"];
m31_346 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Resolution.Daily", span="707-707"];
m31_341 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="interval = CandlestickGranularity.S5", span="696-696"];
m31_343 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="interval = CandlestickGranularity.M1", span="700-700"];
m31_345 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="interval = CandlestickGranularity.H1", span="704-704"];
m31_347 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="interval = CandlestickGranularity.D", span="708-708"];
m31_350 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", span="689-689"];
m31_278 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m31_148 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", span="329-329"];
m31_153 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label=LockerConnectionMonitor, span="337-337"];
m31_154 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="339-339"];
m31_157 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="var order = OrderProvider.GetOrderByBrokerageId(transaction.OrderID)", span="346-346"];
m31_160 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="order.PriceCurrency = SecurityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="351-351"];
m31_162 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee, ''Oanda Fill Event'')\r\n                        {\r\n                            Status = OrderStatus.Filled,\r\n                            FillPrice = transaction.Price.ToDecimal(),\r\n                            FillQuantity = Convert.ToInt32(transaction.Units)\r\n                        })", span="354-359"];
m31_152 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="''HEARTBEAT''", span="336-336"];
m31_156 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="var transaction = obj.ToObject<OrderFillTransaction>()", span="344-344"];
m31_158 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="order != null && (order.Type != OrderType.Market || order.Status != OrderStatus.Filled)", span="347-347"];
m31_159 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="order.Status = OrderStatus.Filled", span="349-349"];
m31_161 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="int orderFee = 0", span="353-353"];
m31_151 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label=type, span="334-334"];
m31_149 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(json)", span="331-331"];
m31_155 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="''ORDER_FILL''", span="343-343"];
m31_150 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="var type = obj[''type''].ToString()", span="332-332"];
m31_163 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", span="329-329"];
m31_19 [cluster="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OandaRestApiV20.cs", label="Liquidate(''SPY'')", span="58-58"];
m31_20 [cluster="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="47-47"];
m31_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m31_23 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="OandaRestApiV20.cs", label="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm", span=""];
m31_131 [cluster="Oanda.RestV20.Session.StreamSession.StopSession()", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Session.StreamSession.StopSession()", span="73-73"];
m31_13 [cluster="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="47-47"];
m31_54 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", span="152-152"];
m31_70 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="OandaRestApiV20.cs", label="0: order.Type != OrderType.Market", span="186-186"];
m31_69 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="int orderFee = 0", span="185-185"];
m31_71 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.PriceCurrency = SecurityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="188-188"];
m31_73 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="OandaRestApiV20.cs", label="0: order.Type == OrderType.Market && order.Status != OrderStatus.Filled", span="192-192"];
m31_72 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="OandaRestApiV20.cs", label="0: OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee) { Status = OrderStatus.Submitted })", span="189-189"];
m31_74 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.Status = OrderStatus.Filled", span="194-194"];
m31_76 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return true;", span="205-205"];
m31_55 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var request = GenerateOrderRequest(order)", span="154-154"];
m31_56 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var response = _apiRest.CreateOrder(Authorization, AccountId, request)", span="155-155"];
m31_75 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee, ''Oanda Fill Event'')\r\n                {\r\n                    Status = OrderStatus.Filled,\r\n                    FillPrice = marketOrderFillPrice,\r\n                    FillQuantity = marketOrderFillQuantity\r\n                })", span="197-202"];
m31_57 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.BrokerId.Add(response.Data.OrderCreateTransaction.Id)", span="157-157"];
m31_61 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.Type == OrderType.Market", span="164-164"];
m31_67 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="fill.TradesClosed != null && fill.TradesClosed.Count > 0", span="178-178"];
m31_68 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="marketOrderFillQuantity += fill.TradesClosed.Sum(trade => Convert.ToInt32(trade.Units))", span="180-180"];
m31_60 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var marketOrderFillQuantity = 0", span="162-162"];
m31_58 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var fill = response.Data.OrderFillTransaction", span="160-160"];
m31_59 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var marketOrderFillPrice = 0m", span="161-161"];
m31_62 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="marketOrderFillPrice = Convert.ToDecimal(fill.Price)", span="166-166"];
m31_64 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="marketOrderFillQuantity = Convert.ToInt32(fill.TradeOpened.Units)", span="170-170"];
m31_66 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="marketOrderFillQuantity = Convert.ToInt32(fill.TradeReduced.Units)", span="175-175"];
m31_65 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="fill.TradeReduced != null && fill.TradeReduced.TradeID.Length > 0", span="173-173"];
m31_63 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="fill.TradeOpened != null && fill.TradeOpened.TradeID.Length > 0", span="168-168"];
m31_77 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", span="152-152"];
m31_317 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29"];
m31_319 [cluster="Unk.Add", file="OandaRestApiV20.cs", label="Entry Unk.Add", span=""];
m31_40 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", span="136-136"];
m31_41 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var response = _apiRest.GetPrices(Authorization, AccountId, instruments)", span="138-138"];
m31_42 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="return response.Prices\r\n                .ToDictionary(\r\n                    x => x.Instrument,\r\n                    x => new Tick { BidPrice = x.Bids.Last().Price.ToDecimal(), AskPrice = x.Asks.Last().Price.ToDecimal() }\r\n                );", span="140-144"];
m31_43 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", span="136-136"];
m31_222 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", span="479-479"];
m31_240 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="var stream = response.GetResponseStream()", span="481-481"];
m31_241 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="response.Headers[''Content-Encoding''] == ''gzip''", span="482-482"];
m31_244 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="return stream;", span="487-487"];
m31_242 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="stream != null", span="485-485"];
m31_243 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="stream = new GZipStream(stream, CompressionMode.Decompress)", span="485-485"];
m31_245 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", span="479-479"];
m31_264 [cluster="System.Enum.ToString()", file="OandaRestApiV20.cs", label="Entry System.Enum.ToString()", span="0-0"];
m31_200 [cluster="Unk.Last", file="OandaRestApiV20.cs", label="Entry Unk.Last", span=""];
m31_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1257-1257"];
m31_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="323-323"];
m31_168 [cluster="Unk.ToInt32", file="OandaRestApiV20.cs", label="Entry Unk.ToInt32", span=""];
m31_201 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m31_376 [cluster="Oanda.RestV20.Model.StopOrderRequest.StopOrderRequest(Oanda.RestV20.Model.StopOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.StopOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.StopOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.StopOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Model.StopOrderRequest.StopOrderRequest(Oanda.RestV20.Model.StopOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.StopOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.StopOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.StopOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="246-246"];
m31_146 [cluster="string.Remove(int, int)", file="OandaRestApiV20.cs", label="Entry string.Remove(int, int)", span="0-0"];
m31_37 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="65-65"];
m31_126 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", span="284-284"];
m31_127 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession != null", span="286-286"];
m31_128 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession.DataReceived -= OnTransactionDataReceived", span="288-288"];
m31_129 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession.StopSession()", span="289-289"];
m31_130 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", span="284-284"];
m31_104 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m31_335 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSecurityType(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSecurityType(string)", span="936-936"];
m31_14 [cluster="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OandaRestApiV20.cs", label="!Fast.IsReady || !Slow.IsReady", span="50-50"];
m31_45 [cluster="Unk.ToDictionary", file="OandaRestApiV20.cs", label="Entry Unk.ToDictionary", span=""];
m31_266 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m31_265 [cluster="Oanda.RestV20.Api.DefaultApi.GetInstrumentCandles(string, string, string, string, string, int?, string, string, bool?, bool?, int?, string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetInstrumentCandles(string, string, string, string, string, int?, string, string, bool?, bool?, int?, string, string)", span="3732-3732"];
m31_199 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="OandaRestApiV20.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m31_195 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m31_147 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerage.GetDateTimeFromString(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaBrokerage.GetDateTimeFromString(string)", span="256-256"];
m31_196 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m31_166 [cluster="Unk.GetOrderByBrokerageId", file="OandaRestApiV20.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m31_107 [cluster="Oanda.RestV20.Api.DefaultApi.ReplaceOrder(string, string, string, string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.ReplaceOrder(string, string, string, string, string)", span="167-167"];
m31_224 [cluster="System.Exception.Exception(string)", file="OandaRestApiV20.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m31_267 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="536-536"];
m31_268 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var oandaSymbol = SymbolMapper.GetBrokerageSymbol(symbol)", span="538-538"];
m31_271 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var response = _apiRest.GetInstrumentCandles(Authorization, oandaSymbol, null, ''BA'', ToGranularity(resolution).ToString(), OandaBrokerage.MaxBarsPerRequest, startUtc)", span="544-544"];
m31_275 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="yield return new QuoteBar(\r\n                    time.ConvertFromUtc(requestedTimeZone),\r\n                    symbol,\r\n                    new Bar(\r\n                        candle.Bid.O.ToDecimal(),\r\n                        candle.Bid.H.ToDecimal(),\r\n                        candle.Bid.L.ToDecimal(),\r\n                        candle.Bid.C.ToDecimal()\r\n                    ),\r\n                    0,\r\n                    new Bar(\r\n                        candle.Ask.O.ToDecimal(),\r\n                        candle.Ask.H.ToDecimal(),\r\n                        candle.Ask.L.ToDecimal(),\r\n                        candle.Ask.C.ToDecimal()\r\n                    ),\r\n                    0,\r\n                    period);", span="551-568"];
m31_269 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var startUtc = startTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="539-539"];
m31_270 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var period = resolution == Resolution.Second ? TimeSpan.FromSeconds(5) : resolution.ToTimeSpan()", span="542-542"];
m31_272 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="response.Candles", span="545-545"];
m31_274 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="time > endTimeUtc", span="548-548"];
m31_273 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var time = GetTickDateTimeFromString(candle.Time)", span="547-547"];
m31_276 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="536-536"];
m31_336 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="914-914"];
m31_351 [cluster="System.ArgumentException.ArgumentException(string)", file="OandaRestApiV20.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m31_370 [cluster="Oanda.RestV20.Model.MarketOrderRequest.MarketOrderRequest(Oanda.RestV20.Model.MarketOrderRequest.TypeEnum?, string, string, Oanda.RestV20.Model.MarketOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Model.MarketOrderRequest.MarketOrderRequest(Oanda.RestV20.Model.MarketOrderRequest.TypeEnum?, string, string, Oanda.RestV20.Model.MarketOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="192-192"];
m31_374 [cluster="decimal.ToString(System.IFormatProvider)", file="OandaRestApiV20.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m31_248 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="499-499"];
m31_249 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var oandaSymbol = SymbolMapper.GetBrokerageSymbol(symbol)", span="501-501"];
m31_253 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var response = _apiRest.GetInstrumentCandles(Authorization, oandaSymbol, null, ''M'', ToGranularity(resolution).ToString(), null, startUtc, endUtc)", span="508-508"];
m31_257 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="yield return new TradeBar(\r\n                    time.ConvertFromUtc(requestedTimeZone),\r\n                    symbol,\r\n                    candle.Bid.O.ToDecimal(),\r\n                    candle.Bid.H.ToDecimal(),\r\n                    candle.Bid.L.ToDecimal(),\r\n                    candle.Bid.C.ToDecimal(),\r\n                    0,\r\n                    period);", span="515-523"];
m31_250 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var startUtc = startTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="502-502"];
m31_251 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var endUtc = endTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="503-503"];
m31_252 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var period = resolution == Resolution.Second ? TimeSpan.FromSeconds(5) : resolution.ToTimeSpan()", span="506-506"];
m31_254 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="response.Candles", span="509-509"];
m31_256 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="time > endTimeUtc", span="512-512"];
m31_255 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="var time = GetTickDateTimeFromString(candle.Time)", span="511-511"];
m31_258 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="499-499"];
m31_197 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m31_78 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", span="723-723"];
m31_352 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var instrument = SymbolMapper.GetBrokerageSymbol(order.Symbol)", span="725-725"];
m31_353 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="string request", span="727-727"];
m31_356 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var marketOrderRequest = new MarketOrderRequest\r\n                    {\r\n                        Type = MarketOrderRequest.TypeEnum.MARKET,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString()\r\n                    }", span="731-736"];
m31_359 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var limitOrderRequest = new LimitOrderRequest\r\n                    {\r\n                        Type = LimitOrderRequest.TypeEnum.LIMIT,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((LimitOrder)order).LimitPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="741-747"];
m31_362 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var marketIfTouchedOrderRequest = new MarketIfTouchedOrderRequest\r\n                    {\r\n                        Type = MarketIfTouchedOrderRequest.TypeEnum.MARKETIFTOUCHED,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((StopMarketOrder)order).StopPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="752-758"];
m31_365 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var stopOrderRequest = new StopOrderRequest\r\n                    {\r\n                        Type = StopOrderRequest.TypeEnum.STOP,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((StopLimitOrder)order).StopPrice.ToString(CultureInfo.InvariantCulture),\r\n                        PriceBound = ((StopLimitOrder)order).LimitPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="763-770"];
m31_354 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.Type", span="728-728"];
m31_367 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="throw new NotSupportedException(''The order type '' + order.Type + '' is not supported.'');", span="775-775"];
m31_355 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OrderType.Market", span="730-730"];
m31_357 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="request = JsonConvert.SerializeObject(new { order = marketOrderRequest })", span="737-737"];
m31_358 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OrderType.Limit", span="740-740"];
m31_360 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="request = JsonConvert.SerializeObject(new { order = limitOrderRequest })", span="748-748"];
m31_361 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OrderType.StopMarket", span="751-751"];
m31_363 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="request = JsonConvert.SerializeObject(new { order = marketIfTouchedOrderRequest })", span="759-759"];
m31_364 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OrderType.StopLimit", span="762-762"];
m31_366 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="request = JsonConvert.SerializeObject(new { order = stopOrderRequest })", span="771-771"];
m31_368 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return request;", span="778-778"];
m31_369 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", span="723-723"];
m31_247 [cluster="System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)", file="OandaRestApiV20.cs", label="Entry System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)", span="0-0"];
m31_320 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", span="652-652"];
m31_321 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(position.Instrument)", span="654-654"];
m31_322 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="var symbol = SymbolMapper.GetLeanSymbol(position.Instrument, securityType, Market.Oanda)", span="655-655"];
m31_328 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="averagePrice = position._Long.AveragePrice.ToDecimal()", span="664-664"];
m31_331 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="averagePrice = position._Short.AveragePrice.ToDecimal()", span="669-669"];
m31_333 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="return new Holding\r\n            {\r\n                Symbol = symbol,\r\n                Type = securityType,\r\n                AveragePrice = averagePrice,\r\n                ConversionRate = 1.0m,\r\n                CurrencySymbol = ''$'',\r\n                Quantity = quantity\r\n            };", span="673-681"];
m31_323 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="var longUnits = Convert.ToInt32(position._Long.Units)", span="657-657"];
m31_327 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="longUnits > 0", span="662-662"];
m31_329 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="quantity = longUnits", span="665-665"];
m31_330 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="shortUnits < 0", span="667-667"];
m31_332 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="quantity = shortUnits", span="670-670"];
m31_325 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="decimal averagePrice = 0", span="660-660"];
m31_326 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="var quantity = 0", span="661-661"];
m31_324 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="var shortUnits = Convert.ToInt32(position._Short.Units)", span="658-658"];
m31_334 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", span="652-652"];
m31_25 [cluster="Unk.DeserializeObject", file="OandaRestApiV20.cs", label="Entry Unk.DeserializeObject", span=""];
m31_52 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m31_262 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m31_169 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", span="369-369"];
m31_174 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label=LockerConnectionMonitor, span="377-377"];
m31_175 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="379-379"];
m31_178 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(data.Instrument)", span="386-386"];
m31_179 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var symbol = SymbolMapper.GetLeanSymbol(data.Instrument, securityType, Market.Oanda)", span="387-387"];
m31_180 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var time = GetTickDateTimeFromString(data.Time)", span="388-388"];
m31_182 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="!_symbolExchangeTimeZones.TryGetValue(symbol, out exchangeTimeZone)", span="392-392"];
m31_184 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="_symbolExchangeTimeZones.Add(symbol, exchangeTimeZone)", span="395-395"];
m31_189 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label=Ticks, span="403-403"];
m31_190 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="Ticks.Add(tick)", span="405-405"];
m31_173 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="''HEARTBEAT''", span="376-376"];
m31_177 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var data = obj.ToObject<Price>()", span="384-384"];
m31_183 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(Market.Oanda, symbol, securityType).TimeZone", span="394-394"];
m31_188 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var tick = new Tick(time, symbol, bidPrice, askPrice)", span="401-401"];
m31_181 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="DateTimeZone exchangeTimeZone", span="391-391"];
m31_185 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="time = time.ConvertFromUtc(exchangeTimeZone)", span="397-397"];
m31_186 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var bidPrice = Convert.ToDecimal(data.Bids.Last().Price)", span="399-399"];
m31_187 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var askPrice = Convert.ToDecimal(data.Asks.Last().Price)", span="400-400"];
m31_172 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label=type, span="374-374"];
m31_170 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(json)", span="371-371"];
m31_176 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="''PRICE''", span="383-383"];
m31_171 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="var type = obj[''type''].ToString()", span="372-372"];
m31_191 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", span="369-369"];
m31_90 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", span="213-213"];
m31_95 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var request = GenerateOrderRequest(order)", span="224-224"];
m31_97 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var response = _apiRest.ReplaceOrder(Authorization, AccountId, orderId, request)", span="227-227"];
m31_101 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee, ''Oanda Fill Event'')\r\n                {\r\n                    Status = OrderStatus.Filled,\r\n                    FillPrice = response.Data.OrderFillTransaction.Price.ToDecimal(),\r\n                    FillQuantity = Convert.ToInt32(response.Data.OrderFillTransaction.Units)\r\n                })", span="236-241"];
m31_92 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="!order.BrokerId.Any()", span="217-217"];
m31_96 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="var orderId = order.BrokerId.First()", span="226-226"];
m31_98 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="order.BrokerId[0] = response.Data.OrderCreateTransaction.Id", span="230-230"];
m31_99 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="response.Data.OrderFillTransaction != null", span="233-233"];
m31_100 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="int orderFee = 0", span="235-235"];
m31_102 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return true;", span="244-244"];
m31_91 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Log.Trace(''OandaBrokerage.UpdateOrder(): '' + order)", span="215-215"];
m31_94 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="return false;", span="221-221"];
m31_93 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Log.Trace(''OandaBrokerage.UpdateOrder(): Unable to update order without BrokerId.'')", span="220-220"];
m31_103 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", span="213-213"];
m31_261 [cluster="System.TimeSpan.FromSeconds(double)", file="OandaRestApiV20.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m31_85 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m31_220 [cluster="System.Net.WebRequest.CreateHttp(string)", file="OandaRestApiV20.cs", label="Entry System.Net.WebRequest.CreateHttp(string)", span="0-0"];
m31_84 [cluster="QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="27-27"];
m31_35 [cluster="Oanda.RestV20.Api.DefaultApi.GetAccountSummary(string, string, string)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetAccountSummary(string, string, string)", span="3406-3406"];
m31_217 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="OandaRestApiV20.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m31_372 [cluster="Unk.SerializeObject", file="OandaRestApiV20.cs", label="Entry Unk.SerializeObject", span=""];
m31_53 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m31_26 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", span="108-108"];
m31_27 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="OandaRestApiV20.cs", label="var response = _apiRest.ListOpenPositions(Authorization, AccountId)", span="110-110"];
m31_28 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="OandaRestApiV20.cs", label="return response.Positions.Select(ConvertHolding).ToList();", span="112-112"];
m31_29 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", span="108-108"];
m31_246 [cluster="System.Net.WebResponse.GetResponseStream()", file="OandaRestApiV20.cs", label="Entry System.Net.WebResponse.GetResponseStream()", span="0-0"];
m31_279 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", span="580-580"];
m31_299 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(instrument)", span="626-626"];
m31_300 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Symbol = SymbolMapper.GetLeanSymbol(instrument, securityType, Market.Oanda)", span="627-627"];
m31_301 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Time = GetTickDateTimeFromString(createTime)", span="628-628"];
m31_305 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var orderByBrokerageId = OrderProvider.GetOrderByBrokerageId(id)", span="633-633"];
m31_311 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.DurationValue = GetTickDateTimeFromString(gtdTime.ToString())", span="643-643"];
m31_295 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var instrument = order[''instrument''].ToString()", span="621-621"];
m31_298 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var createTime = order[''createTime''].ToString()", span="624-624"];
m31_293 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder = new MarketOrder()", span="613-613"];
m31_302 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Quantity = units", span="629-629"];
m31_296 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var id = order[''id''].ToString()", span="622-622"];
m31_304 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.BrokerId.Add(id)", span="631-631"];
m31_306 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="orderByBrokerageId != null", span="634-634"];
m31_307 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Id = orderByBrokerageId.Id", span="636-636"];
m31_308 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var gtdTime = order[''gtdTime'']", span="639-639"];
m31_310 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Duration = OrderDuration.Custom", span="642-642"];
m31_312 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="return qcOrder;", span="646-646"];
m31_285 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder = new StopMarketOrder\r\n                    {\r\n                        StopPrice = stopOrder.Price.ToDecimal()\r\n                    }", span="589-592"];
m31_288 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder = new LimitOrder\r\n                    {\r\n                        LimitPrice = limitOrder.Price.ToDecimal()\r\n                    }", span="597-600"];
m31_291 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder = new StopLimitOrder\r\n                    {\r\n                        Price = Convert.ToDecimal(stopLimitOrder.Price),\r\n                        LimitPrice = Convert.ToDecimal(stopLimitOrder.PriceBound)\r\n                    }", span="605-609"];
m31_297 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var units = Convert.ToInt32(order[''units''])", span="623-623"];
m31_292 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="''MARKET''", span="612-612"];
m31_303 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="qcOrder.Status = OrderStatus.None", span="630-630"];
m31_309 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="gtdTime != null", span="640-640"];
m31_280 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var type = order[''type''].ToString()", span="582-582"];
m31_284 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var stopOrder = order.ToObject<MarketIfTouchedOrder>()", span="588-588"];
m31_287 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var limitOrder = order.ToObject<OandaLimitOrder>()", span="596-596"];
m31_290 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="var stopLimitOrder = order.ToObject<StopOrder>()", span="604-604"];
m31_281 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="Order qcOrder", span="584-584"];
m31_282 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label=type, span="585-585"];
m31_294 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="throw new NotSupportedException(\r\n                        ''An existing '' + type + '' working order was found and is currently unsupported. Please manually cancel the order before restarting the algorithm.'');", span="617-618"];
m31_283 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="''MARKET_IF_TOUCHED''", span="587-587"];
m31_286 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="''LIMIT''", span="595-595"];
m31_289 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="''STOP''", span="603-603"];
m31_313 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", span="580-580"];
m31_119 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", span="274-274"];
m31_120 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession = new TransactionStreamSession(this)", span="276-276"];
m31_121 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession.DataReceived += OnTransactionDataReceived", span="277-277"];
m31_122 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="OandaRestApiV20.cs", label="_eventsSession.StartSession()", span="278-278"];
m31_123 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", span="274-274"];
m31_167 [cluster="Unk.ToDecimal", file="OandaRestApiV20.cs", label="Entry Unk.ToDecimal", span=""];
m31_221 [cluster="System.Net.HttpWebRequest.GetResponse()", file="OandaRestApiV20.cs", label="Entry System.Net.HttpWebRequest.GetResponse()", span="0-0"];
m31_373 [cluster="Oanda.RestV20.Model.LimitOrderRequest.LimitOrderRequest(Oanda.RestV20.Model.LimitOrderRequest.TypeEnum?, string, string, string, Oanda.RestV20.Model.LimitOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.LimitOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.LimitOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Model.LimitOrderRequest.LimitOrderRequest(Oanda.RestV20.Model.LimitOrderRequest.TypeEnum?, string, string, string, Oanda.RestV20.Model.LimitOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.LimitOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.LimitOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="245-245"];
m31_165 [cluster="Unk.>", file="OandaRestApiV20.cs", label="Entry Unk.>", span=""];
m31_83 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", file="OandaRestApiV20.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0"];
m31_125 [cluster="Oanda.RestV20.Session.StreamSession.StartSession()", file="OandaRestApiV20.cs", label="Entry Oanda.RestV20.Session.StreamSession.StartSession()", span="49-49"];
m31_316 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="52-52"];
m31_202 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", span="416-416"];
m31_204 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var requestString = _apiStreaming.GetBasePath() + ''/accounts/'' + AccountId + ''/pricing/stream'' +\r\n                ''?instruments='' + Uri.EscapeDataString(instrumentList)", span="420-421"];
m31_207 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="request.Headers[HttpRequestHeader.Authorization] = Authorization", span="425-425"];
m31_208 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="request.Headers[OandaAgentKey] = Agent", span="426-426"];
m31_203 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var instrumentList = string.Join('','', instruments)", span="418-418"];
m31_205 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var request = WebRequest.CreateHttp(requestString)", span="423-423"];
m31_206 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="request.Method = ''GET''", span="424-424"];
m31_209 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="return request.GetResponse();", span="430-430"];
m31_212 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="throw;", span="436-436"];
m31_215 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="throw new Exception(reader.ReadToEnd());", span="442-442"];
m31_211 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="ex.Response == null", span="434-434"];
m31_214 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var reader = new StreamReader(stream)", span="440-440"];
m31_210 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label=WebException, span="432-432"];
m31_213 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="var stream = GetResponseStream(ex.Response)", span="439-439"];
m31_216 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", span="416-416"];
m31_219 [cluster="System.Uri.EscapeDataString(string)", file="OandaRestApiV20.cs", label="Entry System.Uri.EscapeDataString(string)", span="0-0"];
m31_193 [cluster="Unk.GetLeanSymbol", file="OandaRestApiV20.cs", label="Entry Unk.GetLeanSymbol", span=""];
m31_314 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="42-42"];
m31_132 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", span="296-296"];
m31_133 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="_ratesSession = new PricingStreamSession(this, instruments)", span="298-298"];
m31_134 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="_ratesSession.DataReceived += OnPricingDataReceived", span="299-299"];
m31_135 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="_ratesSession.StartSession()", span="300-300"];
m31_136 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", span="296-296"];
m31_38 [cluster="string.ToDecimal()", file="OandaRestApiV20.cs", label="Entry string.ToDecimal()", span="248-248"];
m31_371 [cluster="decimal.ToString()", file="OandaRestApiV20.cs", label="Entry decimal.ToString()", span="0-0"];
m31_259 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="888-888"];
m31_378 [file="OandaRestApiV20.cs", label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", span=""];
m32_94 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="213-213"];
m32_196 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="295-295"];
m32_197 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="int id = 0", span="297-297"];
m32_198 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="298-298"];
m32_202 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="var order = new LimitOrder(Symbols.USDJPY, -buyQuantity, limitPrice, DateTime.UtcNow) {Id = ++id}", span="310-310"];
m32_199 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="bool filled = false", span="300-300"];
m32_200 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    filled = true;\r\n                }\r\n            }", span="301-307"];
m32_204 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="312-312"];
m32_209 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="ib.UpdateOrder(order)", span="320-320"];
m32_201 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="decimal limitPrice = 10000m", span="309-309"];
m32_206 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="!filled && stopwatch.Elapsed.TotalSeconds < 10", span="315-315"];
m32_210 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="Assert.IsTrue(filled)", span="323-323"];
m32_203 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="311-311"];
m32_208 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="order.LimitPrice = order.LimitPrice/2", span="319-319"];
m32_205 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="var stopwatch = Stopwatch.StartNew()", span="314-314"];
m32_207 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="Thread.Sleep(1000)", span="318-318"];
m32_211 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="295-295"];
m32_48 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="325-325"];
m32_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="126-126"];
m32_237 [cluster="Unk.IsNull", file="OptionExerciseOrder.cs", label="Entry Unk.IsNull", span=""];
m32_49 [cluster="Unk.Where", file="OptionExerciseOrder.cs", label="Entry Unk.Where", span=""];
m32_315 [cluster="Unk.Single", file="OptionExerciseOrder.cs", label="Entry Unk.Single", span=""];
m32_351 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="502-502"];
m32_352 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="504-504"];
m32_353 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="decimal balance = ib.GetCashBalance().Single(x => x.Symbol == ''USD'').Amount", span="506-506"];
m32_355 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="ib.AccountChanged += (sender, orderEvent) => manualResetEvent.Set()", span="510-510"];
m32_358 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="514-514"];
m32_360 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="decimal balanceAfterTrade = ib.GetCashBalance().Single(x => x.Symbol == ''USD'').Amount", span="518-518"];
m32_354 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="509-509"];
m32_361 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="Assert.AreNotEqual(balance, balanceAfterTrade)", span="520-520"];
m32_359 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="manualResetEvent.WaitOneAssertFail(1500, ''Didn't receive account changed event'')", span="516-516"];
m32_356 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="512-512"];
m32_357 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="513-513"];
m32_362 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="502-502"];
m32_52 [cluster="Unk.Trace", file="OptionExerciseOrder.cs", label="Entry Unk.Trace", span=""];
m32_164 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="250-250"];
m32_165 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="bool orderFilled = false", span="252-252"];
m32_166 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="253-253"];
m32_167 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="254-254"];
m32_170 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                orderFilled = true;\r\n                fillPrice = args.FillPrice;\r\n                delta = 0.02m;\r\n                manualResetEvent.Set();\r\n            }", span="258-264"];
m32_175 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="manualResetEvent.WaitOne(2000)", span="272-272"];
m32_176 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="manualResetEvent.Reset()", span="273-273"];
m32_185 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="manualResetEvent.WaitOne(1000)", span="288-288"];
m32_168 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="decimal fillPrice = 100m", span="256-256"];
m32_174 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="270-270"];
m32_181 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="282-282"];
m32_184 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="286-286"];
m32_186 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="290-290"];
m32_169 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="decimal delta = 85.0m", span="257-257"];
m32_171 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="int id = 0", span="267-267"];
m32_172 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="Order order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow) { Id = ++id }", span="268-268"];
m32_173 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="269-269"];
m32_179 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="order = new StopMarketOrder(Symbols.USDJPY, buyQuantity, fillPrice - delta, DateTime.UtcNow) { Id = ++id }", span="280-280"];
m32_177 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="Assert.IsTrue(orderFilled)", span="274-274"];
m32_178 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="orderFilled = false", span="276-276"];
m32_180 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="281-281"];
m32_182 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="order = new StopMarketOrder(Symbols.USDJPY, -buyQuantity, fillPrice + delta, DateTime.UtcNow) { Id = ++id }", span="284-284"];
m32_183 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="285-285"];
m32_187 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="Assert.AreEqual(OrderType.StopMarket, orderFromIB.Type)", span="291-291"];
m32_188 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="250-250"];
m32_133 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="205-205"];
m32_134 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="bool orderFilled = false", span="207-207"];
m32_135 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="208-208"];
m32_136 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="209-209"];
m32_139 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n                price = orderEvent.FillPrice;\r\n                delta = 0.02m;\r\n            }", span="213-222"];
m32_144 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="manualResetEvent.WaitOne(2000)", span="230-230"];
m32_145 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="manualResetEvent.Reset()", span="231-231"];
m32_152 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="manualResetEvent.WaitOne(1000)", span="243-243"];
m32_137 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="decimal price = 100m", span="211-211"];
m32_143 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="228-228"];
m32_148 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="237-237"];
m32_151 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="241-241"];
m32_153 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="245-245"];
m32_138 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="decimal delta = 85.0m", span="212-212"];
m32_140 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="int id = 0", span="225-225"];
m32_141 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="Order order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow) { Id = ++id }", span="226-226"];
m32_142 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="227-227"];
m32_146 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="order = new LimitOrder(Symbols.USDJPY, buyQuantity, price - delta, DateTime.UtcNow, null) { Id = ++id }", span="235-235"];
m32_147 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="236-236"];
m32_149 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="order = new LimitOrder(Symbols.USDJPY, -buyQuantity, price + delta, DateTime.UtcNow, null) { Id = ++id }", span="239-239"];
m32_150 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="240-240"];
m32_154 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="Assert.AreEqual(OrderType.Limit, orderFromIB.Type)", span="246-246"];
m32_155 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="205-205"];
m32_156 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m32_451 [cluster="Unk.Pass", file="OptionExerciseOrder.cs", label="Entry Unk.Pass", span=""];
m32_8 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m32_342 [cluster="System.Collections.Generic.List<T>.List()", file="OptionExerciseOrder.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m32_387 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="373-373"];
m32_53 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="587-587"];
m32_322 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="463-463"];
m32_323 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="465-465"];
m32_324 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="var orderEventFired = new ManualResetEvent(false)", span="467-467"];
m32_325 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="468-474"];
m32_328 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="ib.AccountChanged += (sender, args) =>\r\n            {\r\n                cashBalanceUpdates.Add(args.CashBalance);\r\n                accountChangedFired.Set();\r\n            }", span="478-482"];
m32_334 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="489-489"];
m32_335 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="orderEventFired.WaitOneAssertFail(1500, ''Didnt receive order event #'' + i)", span="491-491"];
m32_336 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="orderEventFired.Reset()", span="492-492"];
m32_326 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="var cashBalanceUpdates = new List<decimal>()", span="476-476"];
m32_327 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="var accountChangedFired = new ManualResetEvent(false)", span="477-477"];
m32_340 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="Assert.AreEqual(orderCount, cashBalanceUpdates.Count)", span="498-498"];
m32_337 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="accountChangedFired.WaitOneAssertFail(1500, ''Didnt receive account event #'' + i)", span="494-494"];
m32_338 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="accountChangedFired.Reset()", span="495-495"];
m32_329 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="int orderCount = 3", span="484-484"];
m32_330 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="int i = 0", span="485-485"];
m32_331 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="i < orderCount", span="485-485"];
m32_332 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity*(i + 1), new DateTime()) {Id = i + 1}", span="487-487"];
m32_339 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="i++", span="485-485"];
m32_333 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="488-488"];
m32_341 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="463-463"];
m32_45 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="255-255"];
m32_455 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="622-622"];
m32_58 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="canceledResetEvent.Set()", span="80-80"];
m32_56 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="filledResetEvent.Set()", span="76-76"];
m32_55 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderEvent.Status == OrderStatus.Filled", span="74-74"];
m32_57 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderEvent.Status == OrderStatus.Canceled", span="78-78"];
m32_61 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="100-100"];
m32_64 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="108-108"];
m32_68 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="112-112"];
m32_71 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="112-112"];
m32_54 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="72-82"];
m32_59 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="72-82"];
m32_62 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x.Quantity != 0", span="100-100"];
m32_63 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="100-100"];
m32_65 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x.Symbol.ToString() + '' '' + x.Quantity", span="108-108"];
m32_66 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="108-108"];
m32_69 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x.Quantity != 0", span="112-112"];
m32_70 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="112-112"];
m32_72 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x.Symbol.ToString() + '' '' + x.Quantity", span="112-112"];
m32_73 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="112-112"];
m32_114 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="manualResetEvent.Set()", span="163-163"];
m32_112 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderEvent.Status == OrderStatus.Filled", span="160-160"];
m32_111 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="158-165"];
m32_113 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderFilled = true", span="162-162"];
m32_115 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="158-165"];
m32_131 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="manualResetEvent.Set()", span="189-189"];
m32_129 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderEvent.Status == OrderStatus.Filled", span="186-186"];
m32_128 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="184-191"];
m32_130 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderFilled = true", span="188-188"];
m32_132 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="184-191"];
m32_160 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="manualResetEvent.Set()", span="218-218"];
m32_158 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderEvent.Status == OrderStatus.Filled", span="215-215"];
m32_161 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="price = orderEvent.FillPrice", span="220-220"];
m32_157 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="213-222"];
m32_159 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderFilled = true", span="217-217"];
m32_163 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="213-222"];
m32_162 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="delta = 0.02m", span="221-221"];
m32_194 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="manualResetEvent.Set()", span="263-263"];
m32_192 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="fillPrice = args.FillPrice", span="261-261"];
m32_190 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="258-264"];
m32_191 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderFilled = true", span="260-260"];
m32_195 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="258-264"];
m32_193 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="delta = 0.02m", span="262-262"];
m32_216 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="args.Status == OrderStatus.Filled", span="303-303"];
m32_215 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="301-307"];
m32_217 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="filled = true", span="305-305"];
m32_218 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="301-307"];
m32_240 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderedResetEvent.Set()", span="338-338"];
m32_242 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="canceledResetEvent.Set()", span="342-342"];
m32_239 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderEvent.Status == OrderStatus.Submitted", span="336-336"];
m32_241 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderEvent.Status == OrderStatus.Canceled", span="340-340"];
m32_245 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x.BrokerId.Contains(order.BrokerId[0])", span="359-359"];
m32_244 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="359-359"];
m32_238 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="334-344"];
m32_243 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="334-344"];
m32_246 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="359-359"];
m32_265 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="order.Status = fill.Status", span="382-382"];
m32_264 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderFilledResetEvent.Set()", span="378-378"];
m32_262 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="fill.Status == OrderStatus.Filled", span="375-375"];
m32_263 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderFilledEventCount++", span="377-377"];
m32_261 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="373-383"];
m32_266 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="373-383"];
m32_293 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="402-402"];
m32_298 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderResetEvent.Set()", span="417-417"];
m32_297 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="fill.Status == OrderStatus.Filled", span="417-417"];
m32_300 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="432-432"];
m32_294 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x.Symbol", span="402-402"];
m32_295 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="402-402"];
m32_296 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="415-418"];
m32_299 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="415-418"];
m32_301 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x.Symbol", span="432-432"];
m32_302 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="432-432"];
m32_316 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="451-451"];
m32_319 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="457-457"];
m32_317 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x.Symbol == ''USD''", span="451-451"];
m32_318 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="451-451"];
m32_320 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x.Symbol == ''USD''", span="457-457"];
m32_321 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="457-457"];
m32_345 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderEventFired.Set()", span="472-472"];
m32_344 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="args.Status == OrderStatus.Filled", span="470-470"];
m32_348 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="cashBalanceUpdates.Add(args.CashBalance)", span="480-480"];
m32_349 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="accountChangedFired.Set()", span="481-481"];
m32_343 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="468-474"];
m32_346 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="468-474"];
m32_347 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="478-482"];
m32_350 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="478-482"];
m32_363 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="506-506"];
m32_367 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="manualResetEvent.Set()", span="510-510"];
m32_369 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="518-518"];
m32_364 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x.Symbol == ''USD''", span="506-506"];
m32_365 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="506-506"];
m32_366 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="510-510"];
m32_368 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="510-510"];
m32_370 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x.Symbol == ''USD''", span="518-518"];
m32_371 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="518-518"];
m32_392 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderEventFired.Set()", span="533-533"];
m32_391 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="args.Status == OrderStatus.Filled", span="531-531"];
m32_395 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="order.BrokerId.Any(id => executions.Any(e => e.Execution.OrderId == int.Parse(id)))", span="549-549"];
m32_398 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="executions.Any(e => e.Execution.OrderId == int.Parse(id))", span="549-549"];
m32_394 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="549-549"];
m32_390 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="529-535"];
m32_393 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="529-535"];
m32_396 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="549-549"];
m32_397 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="549-549"];
m32_401 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="e.Execution.OrderId == int.Parse(id)", span="549-549"];
m32_399 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="549-549"];
m32_400 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="549-549"];
m32_402 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="549-549"];
m32_418 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="orderEventFired.Set()", span="562-562"];
m32_417 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="args.Status == OrderStatus.Submitted", span="560-560"];
m32_416 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="558-564"];
m32_419 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="558-564"];
m32_453 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="order.BrokerId.Any(x => x == id)", span="622-622"];
m32_452 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Entry lambda expression", span="622-622"];
m32_456 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="x == id", span="622-622"];
m32_454 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="622-622"];
m32_457 [cluster="lambda expression", file="OptionExerciseOrder.cs", label="Exit lambda expression", span="622-622"];
m32_47 [cluster="System.Threading.EventWaitHandle.Reset()", file="OptionExerciseOrder.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m32_13 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161"];
m32_10 [cluster="QuantConnect.Tests.Brokerages.SecurityProvider.SecurityProvider()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.SecurityProvider.SecurityProvider()", span="33-33"];
m32_67 [cluster="QuantConnect.Symbol.ToString()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m32_95 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="OptionExerciseOrder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m32_214 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="234-234"];
m32_248 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="364-364"];
m32_249 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="366-366"];
m32_250 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, new DateTime()) {Id = 1}", span="368-368"];
m32_254 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilledEventCount++;\r\n                    orderFilledResetEvent.Set();\r\n                }\r\n\r\n                // mimic what the transaction handler would do\r\n                order.Status = fill.Status;\r\n            }", span="373-383"];
m32_255 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="385-385"];
m32_251 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="369-369"];
m32_252 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="int orderFilledEventCount = 0", span="371-371"];
m32_253 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="var orderFilledResetEvent = new ManualResetEvent(false)", span="372-372"];
m32_256 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="orderFilledResetEvent.WaitOneAssertFail(2500, ''Didnt fire order filled event'')", span="387-387"];
m32_258 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="Assert.AreEqual(1, orderFilledEventCount)", span="392-392"];
m32_257 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="Thread.Sleep(2000)", span="390-390"];
m32_259 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="364-364"];
m32_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="425-425"];
m32_97 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="152-152"];
m32_98 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="bool orderFilled = false", span="154-154"];
m32_99 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="155-155"];
m32_100 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="156-156"];
m32_101 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="158-165"];
m32_105 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="manualResetEvent.WaitOne(2500)", span="171-171"];
m32_104 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="169-169"];
m32_106 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="172-172"];
m32_102 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow) {Id = 1}", span="167-167"];
m32_103 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="168-168"];
m32_107 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="173-173"];
m32_108 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="152-152"];
m32_43 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="OptionExerciseOrder.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m32_388 [cluster="System.Diagnostics.Stopwatch.Stop()", file="OptionExerciseOrder.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m32_439 [cluster="System.TimeSpan.FromMinutes(double)", file="OptionExerciseOrder.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m32_440 [cluster="System.Console.WriteLine(string)", file="OptionExerciseOrder.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m32_74 [cluster="Unk.ToString", file="OptionExerciseOrder.cs", label="Entry Unk.ToString", span=""];
m32_92 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m32_189 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m32_79 [cluster="Unk.IsTrue", file="OptionExerciseOrder.cs", label="Entry Unk.IsTrue", span=""];
m32_292 [cluster="Unk.ContainsKey", file="OptionExerciseOrder.cs", label="Entry Unk.ContainsKey", span=""];
m32_75 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", span="126-126"];
m32_76 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="128-128"];
m32_77 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="OptionExerciseOrder.cs", label="Assert.IsTrue(ib.IsConnected)", span="129-129"];
m32_78 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", span="126-126"];
m32_372 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="524-524"];
m32_373 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="526-526"];
m32_374 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="var orderEventFired = new ManualResetEvent(false)", span="528-528"];
m32_375 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="529-535"];
m32_378 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="539-539"];
m32_381 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="var executions = ib.GetExecutions(null, null, null, DateTime.UtcNow.AddDays(-1), null)", span="544-544"];
m32_379 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="orderEventFired.WaitOne(1500)", span="540-540"];
m32_376 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="var order = new MarketOrder(Symbols.USDJPY, -buyQuantity, new DateTime())", span="537-537"];
m32_377 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="538-538"];
m32_384 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="Assert.IsTrue(executions.Any(x => order.BrokerId.Any(id => executions.Any(e => e.Execution.OrderId == int.Parse(id)))))", span="549-549"];
m32_380 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="var stopwatch = Stopwatch.StartNew()", span="542-542"];
m32_382 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="stopwatch.Stop()", span="546-546"];
m32_383 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="Console.WriteLine(''Total executions fetched: {0}, elapsed time: {1} ms'', executions.Count, stopwatch.ElapsedMilliseconds)", span="547-547"];
m32_385 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="524-524"];
m32_17 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.OrderProvider(System.Collections.Generic.IList<QuantConnect.Orders.Order>)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.OrderProvider(System.Collections.Generic.IList<QuantConnect.Orders.Order>)", span="32-32"];
m32_420 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", span="580-580"];
m32_421 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="582-582"];
m32_422 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Assert.IsTrue(ib.IsConnected)", span="583-583"];
m32_427 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="ib.IsConnected", span="592-592"];
m32_434 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="!ib.IsConnected && stopwatch.Elapsed < tenMinutes", span="605-605"];
m32_437 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Assert.IsTrue(ib.IsConnected)", span="611-611"];
m32_423 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="var tenMinutes = TimeSpan.FromMinutes(10)", span="585-585"];
m32_424 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Console.WriteLine(''------'')", span="587-587"];
m32_425 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Console.WriteLine(''Waiting for internet disconnection '')", span="588-588"];
m32_426 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Console.WriteLine(''------'')", span="589-589"];
m32_428 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Thread.Sleep(2500)", span="594-594"];
m32_430 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="var stopwatch = Stopwatch.StartNew()", span="598-598"];
m32_429 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Console.Write(''.'')", span="595-595"];
m32_431 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Console.WriteLine(''------'')", span="600-600"];
m32_432 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Console.WriteLine(''Trying to reconnect '')", span="601-601"];
m32_433 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Console.WriteLine(''------'')", span="602-602"];
m32_435 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Thread.Sleep(2500)", span="607-607"];
m32_436 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Console.Write(''.'')", span="608-608"];
m32_438 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", span="580-580"];
m32_389 [cluster="System.Console.WriteLine(string, object, object)", file="OptionExerciseOrder.cs", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
m32_260 [cluster="System.DateTime.DateTime()", file="OptionExerciseOrder.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m32_219 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="327-327"];
m32_220 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="var orderedResetEvent = new ManualResetEvent(false)", span="329-329"];
m32_221 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="var canceledResetEvent = new ManualResetEvent(false)", span="330-330"];
m32_223 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderedResetEvent.Set();\r\n                }\r\n                if (orderEvent.Status == OrderStatus.Canceled)\r\n                {\r\n                    canceledResetEvent.Set();\r\n                }\r\n            }", span="334-344"];
m32_227 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="orderedResetEvent.WaitOneAssertFail(2500, ''Limit order failed to be submitted.'')", span="350-350"];
m32_222 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="332-332"];
m32_230 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="canceledResetEvent.WaitOneAssertFail(2500, ''Canceled event did not fire.'')", span="356-356"];
m32_226 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="349-349"];
m32_229 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="ib.CancelOrder(order)", span="354-354"];
m32_231 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="var openOrders = ib.GetOpenOrders()", span="358-358"];
m32_224 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="var order = new LimitOrder(Symbols.USDJPY, -buyQuantity, 100000, DateTime.UtcNow, null)", span="347-347"];
m32_225 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="348-348"];
m32_232 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="var cancelledOrder = openOrders.FirstOrDefault(x => x.BrokerId.Contains(order.BrokerId[0]))", span="359-359"];
m32_228 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="Thread.Sleep(500)", span="352-352"];
m32_233 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="Assert.IsNull(cancelledOrder)", span="360-360"];
m32_234 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="327-327"];
m32_267 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="396-396"];
m32_268 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="398-398"];
m32_269 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="Thread.Sleep(500)", span="400-400"];
m32_270 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="var previousHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="402-402"];
m32_276 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled) orderResetEvent.Set();\r\n            }", span="415-418"];
m32_280 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="424-424"];
m32_283 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="var newHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="432-432"];
m32_271 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label=previousHoldings, span="404-404"];
m32_273 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="Log.Trace(''Quantity: '' + previousHoldings[Symbols.USDJPY].Quantity)", span="409-409"];
m32_274 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="bool hasSymbol = previousHoldings.ContainsKey(Symbols.USDJPY)", span="411-411"];
m32_286 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="Assert.AreEqual(previousHoldings[Symbols.USDJPY].Quantity, newHoldings[Symbols.USDJPY].Quantity - quantity)", span="437-437"];
m32_272 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="Console.WriteLine(holding.Value)", span="406-406"];
m32_275 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="var orderResetEvent = new ManualResetEvent(false)", span="414-414"];
m32_285 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label=hasSymbol, span="435-435"];
m32_281 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="orderResetEvent.WaitOneAssertFail(3000, ''Didn't receive order event'')", span="427-427"];
m32_277 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="int quantity = -buyQuantity", span="421-421"];
m32_278 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="var order = new MarketOrder(Symbols.USDJPY, quantity, DateTime.UtcNow)", span="422-422"];
m32_288 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="Assert.AreEqual(newHoldings[Symbols.USDJPY].Quantity, quantity)", span="442-442"];
m32_279 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="423-423"];
m32_282 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="Thread.Sleep(5000)", span="430-430"];
m32_284 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="Log.Trace(''New Quantity: '' + newHoldings[Symbols.USDJPY].Quantity)", span="433-433"];
m32_287 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="Assert.IsTrue(newHoldings.ContainsKey(Symbols.USDJPY))", span="441-441"];
m32_289 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="396-396"];
m32_303 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="447-447"];
m32_304 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="449-449"];
m32_305 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OptionExerciseOrder.cs", label="var cashBalance = ib.GetCashBalance()", span="450-450"];
m32_306 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OptionExerciseOrder.cs", label="Assert.IsTrue(cashBalance.Any(x => x.Symbol == ''USD''))", span="451-451"];
m32_307 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OptionExerciseOrder.cs", label=cashBalance, span="452-452"];
m32_310 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OptionExerciseOrder.cs", label="Assert.AreNotEqual(0m, cashBalance.Single(x => x.Symbol == ''USD''))", span="457-457"];
m32_308 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OptionExerciseOrder.cs", label="Console.WriteLine(cash)", span="454-454"];
m32_309 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OptionExerciseOrder.cs", label="cash.Symbol == ''USD''", span="455-455"];
m32_311 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="447-447"];
m32_314 [cluster="System.Console.WriteLine(object)", file="OptionExerciseOrder.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m32_386 [cluster="System.DateTime.AddDays(double)", file="OptionExerciseOrder.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m32_403 [cluster="int.Parse(string)", file="OptionExerciseOrder.cs", label="Entry int.Parse(string)", span="0-0"];
m32_404 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="553-553"];
m32_405 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="555-555"];
m32_406 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="var orderEventFired = new ManualResetEvent(false)", span="557-557"];
m32_407 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="558-564"];
m32_410 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="568-568"];
m32_413 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="var openOrders = ib.GetOpenOrders()", span="574-574"];
m32_411 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="orderEventFired.WaitOne(1500)", span="570-570"];
m32_408 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="var order = new LimitOrder(Symbols.USDJPY, buyQuantity, 0.01m, DateTime.UtcNow)", span="566-566"];
m32_409 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="567-567"];
m32_412 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="Thread.Sleep(250)", span="572-572"];
m32_414 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="Assert.AreNotEqual(0, openOrders.Count)", span="576-576"];
m32_415 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="553-553"];
m32_12 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m32_0 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", span="41-41"];
m32_1 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", color=red, community=0, file="OptionExerciseOrder.cs", label="0: InteractiveBrokersGatewayRunner.Start(Config.Get(''ib-controller-dir''), \r\n                Config.Get(''ib-tws-dir''), \r\n                Config.Get(''ib-user-name''), \r\n                Config.Get(''ib-password''),\r\n                Config.Get(''ib-trading-mode''),\r\n                Config.GetBool(''ib-use-tws'')\r\n                )", span="43-49"];
m32_2 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OptionExerciseOrder.cs", label="var securityProvider = new SecurityProvider()", span="52-52"];
m32_3 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OptionExerciseOrder.cs", label="securityProvider[Symbols.USDJPY] = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork),\r\n                new SubscriptionDataConfig(typeof(TradeBar), Symbols.USDJPY, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, false, false, false),\r\n                new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="53-55"];
m32_4 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OptionExerciseOrder.cs", label="_interactiveBrokersBrokerage = new InteractiveBrokersBrokerage(new OrderProvider(_orders), securityProvider)", span="57-57"];
m32_5 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OptionExerciseOrder.cs", label="_interactiveBrokersBrokerage.Connect()", span="58-58"];
m32_6 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", span="41-41"];
m32_110 [cluster="Unk.AreEqual", file="OptionExerciseOrder.cs", label="Entry Unk.AreEqual", span=""];
m32_116 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="177-177"];
m32_117 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="bool orderFilled = false", span="179-179"];
m32_118 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="180-180"];
m32_119 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="182-182"];
m32_120 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="184-191"];
m32_124 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="manualResetEvent.WaitOne(2500)", span="198-198"];
m32_123 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="196-196"];
m32_125 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="200-200"];
m32_121 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="var order = new MarketOrder(Symbols.USDJPY, -buyQuantity, DateTime.UtcNow)", span="194-194"];
m32_122 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="195-195"];
m32_126 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="201-201"];
m32_127 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="177-177"];
m32_236 [cluster="Unk.FirstOrDefault", file="OptionExerciseOrder.cs", label="Entry Unk.FirstOrDefault", span=""];
m32_247 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="OptionExerciseOrder.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m32_441 [cluster="System.Console.Write(string)", file="OptionExerciseOrder.cs", label="Entry System.Console.Write(string)", span="0-0"];
m32_450 [cluster="Unk.Fail", file="OptionExerciseOrder.cs", label="Entry Unk.Fail", span=""];
m32_213 [cluster="System.Threading.Thread.Sleep(int)", file="OptionExerciseOrder.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m32_11 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m32_313 [cluster="Unk.Any", file="OptionExerciseOrder.cs", label="Entry Unk.Any", span=""];
m32_212 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="OptionExerciseOrder.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m32_51 [cluster="Unk.Join", file="OptionExerciseOrder.cs", label="Entry Unk.Join", span=""];
m32_235 [cluster="System.Threading.WaitHandle.WaitOneAssertFail(int, string)", file="OptionExerciseOrder.cs", label="Entry System.Threading.WaitHandle.WaitOneAssertFail(int, string)", span="32-32"];
m32_291 [cluster="Unk.WriteLine", file="OptionExerciseOrder.cs", label="Entry Unk.WriteLine", span=""];
m32_15 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m32_19 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", span="62-62"];
m32_20 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="Log.Trace(''-----'')", span="66-66"];
m32_21 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Starting teardown...'')", span="67-67"];
m32_22 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="Log.Trace(''-----'')", span="68-68"];
m32_23 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="var canceledResetEvent = new ManualResetEvent(false)", span="70-70"];
m32_24 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="var filledResetEvent = new ManualResetEvent(false)", span="71-71"];
m32_25 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="_interactiveBrokersBrokerage.OrderStatusChanged += (sender, orderEvent) =>\r\n                {\r\n                    if (orderEvent.Status == OrderStatus.Filled)\r\n                    {\r\n                        filledResetEvent.Set();\r\n                    }\r\n                    if (orderEvent.Status == OrderStatus.Canceled)\r\n                    {\r\n                        canceledResetEvent.Set();\r\n                    }\r\n                }", span="72-82"];
m32_30 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="canceledResetEvent.WaitOne(3000)", span="92-92"];
m32_31 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="canceledResetEvent.Reset()", span="93-93"];
m32_26 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Canceling open orders...'')", span="86-86"];
m32_27 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="var orders = _interactiveBrokersBrokerage.GetOpenOrders()", span="88-88"];
m32_28 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label=orders, span="89-89"];
m32_29 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="_interactiveBrokersBrokerage.CancelOrder(order)", span="91-91"];
m32_32 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Liquidating open positions...'')", span="96-96"];
m32_33 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="var holdings = _interactiveBrokersBrokerage.GetAccountHoldings()", span="99-99"];
m32_34 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="holdings.Where(x => x.Quantity != 0)", span="100-100"];
m32_35 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="var openOrdersText = _interactiveBrokersBrokerage.GetOpenOrders().Select(x => x.Symbol.ToString() + '' '' + x.Quantity)", span="108-108"];
m32_36 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Open orders: '' + string.Join('', '', openOrdersText))", span="109-109"];
m32_37 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="var holdingsText = _interactiveBrokersBrokerage.GetAccountHoldings().Where(x => x.Quantity != 0).Select(x => x.Symbol.ToString() + '' '' + x.Quantity)", span="112-112"];
m32_38 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Account holdings: '' + string.Join('', '', holdingsText))", span="113-113"];
m32_39 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="_interactiveBrokersBrokerage.Dispose()", span="116-116"];
m32_40 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="_interactiveBrokersBrokerage = null", span="117-117"];
m32_41 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", span="62-62"];
m32_93 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionExerciseOrder.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m32_14 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m32_96 [cluster="Unk.AreNotEqual", file="OptionExerciseOrder.cs", label="Entry Unk.AreNotEqual", span=""];
m32_312 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="362-362"];
m32_42 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m32_109 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="614-614"];
m32_442 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="!orderFilled", span="617-617"];
m32_443 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="ib.GetOpenOrders()", span="620-620"];
m32_444 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="openOrder.BrokerId.Any(id => order.BrokerId.Any(x => x == id))", span="622-622"];
m32_447 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="Assert.Pass(''The order was successfully filled!'')", span="630-630"];
m32_446 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="Assert.Fail(''The order was not filled and was unable to be located via GetOpenOrders()'')", span="627-627"];
m32_445 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="return openOrder;", span="624-624"];
m32_448 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="return null;", span="631-631"];
m32_449 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="614-614"];
m32_290 [cluster="Unk.ToDictionary", file="OptionExerciseOrder.cs", label="Entry Unk.ToDictionary", span=""];
m32_46 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="OptionExerciseOrder.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m32_50 [cluster="Unk.Select", file="OptionExerciseOrder.cs", label="Entry Unk.Select", span=""];
m32_60 [cluster="System.Threading.EventWaitHandle.Set()", file="OptionExerciseOrder.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m32_7 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m32_44 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="285-285"];
m32_80 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", span="133-133"];
m32_81 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="var ib = _interactiveBrokersBrokerage", span="135-135"];
m32_82 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="137-137"];
m32_84 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="139-139"];
m32_89 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="ib.PlaceOrder(order)", span="146-146"];
m32_83 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="138-138"];
m32_85 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="var brokerageID = order.BrokerId.Single()", span="141-141"];
m32_86 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="Assert.AreNotEqual(0, brokerageID)", span="142-142"];
m32_90 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="Assert.AreNotEqual(brokerageID, order.BrokerId.Single())", span="148-148"];
m32_87 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="144-144"];
m32_88 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="_orders.Add(order)", span="145-145"];
m32_91 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", span="133-133"];
m32_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m32_458 [file="OptionExerciseOrder.cs", label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", span=""];
m32_459 [file="OptionExerciseOrder.cs", label=filledResetEvent, span=""];
m32_460 [file="OptionExerciseOrder.cs", label=canceledResetEvent, span=""];
m32_461 [file="OptionExerciseOrder.cs", label=manualResetEvent, span=""];
m32_462 [file="OptionExerciseOrder.cs", label=manualResetEvent, span=""];
m32_463 [file="OptionExerciseOrder.cs", label=manualResetEvent, span=""];
m32_464 [file="OptionExerciseOrder.cs", label=manualResetEvent, span=""];
m32_465 [file="OptionExerciseOrder.cs", label=orderedResetEvent, span=""];
m32_466 [file="OptionExerciseOrder.cs", label=canceledResetEvent, span=""];
m32_467 [file="OptionExerciseOrder.cs", label=order, span=""];
m32_468 [file="OptionExerciseOrder.cs", label=orderFilledEventCount, span=""];
m32_469 [file="OptionExerciseOrder.cs", label=orderFilledResetEvent, span=""];
m32_470 [file="OptionExerciseOrder.cs", label=order, span=""];
m32_471 [file="OptionExerciseOrder.cs", label=orderResetEvent, span=""];
m32_472 [file="OptionExerciseOrder.cs", label=orderEventFired, span=""];
m32_473 [file="OptionExerciseOrder.cs", label=cashBalanceUpdates, span=""];
m32_474 [file="OptionExerciseOrder.cs", label=accountChangedFired, span=""];
m32_475 [file="OptionExerciseOrder.cs", label=manualResetEvent, span=""];
m32_476 [file="OptionExerciseOrder.cs", label=orderEventFired, span=""];
m32_477 [file="OptionExerciseOrder.cs", label=order, span=""];
m32_478 [file="OptionExerciseOrder.cs", label=executions, span=""];
m32_479 [file="OptionExerciseOrder.cs", label=string, span=""];
m32_480 [file="OptionExerciseOrder.cs", label=orderEventFired, span=""];
m32_481 [file="OptionExerciseOrder.cs", label="QuantConnect.Orders.Order", span=""];
m32_482 [file="OptionExerciseOrder.cs", label=string, span=""];
m34_196 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="295-295"];
m34_198 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="298-298"];
m34_203 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="_orders.Add(order)", span="311-311"];
m34_197 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="int id = 0", span="297-297"];
m34_199 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="bool filled = false", span="300-300"];
m34_200 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    filled = true;\r\n                }\r\n            }", span="301-307"];
m34_204 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="312-312"];
m34_209 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="ib.UpdateOrder(order)", span="320-320"];
m34_202 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="var order = new LimitOrder(Symbols.USDJPY, -buyQuantity, limitPrice, DateTime.UtcNow) {Id = ++id}", span="310-310"];
m34_210 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="Assert.IsTrue(filled)", span="323-323"];
m34_201 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="decimal limitPrice = 10000m", span="309-309"];
m34_206 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="!filled && stopwatch.Elapsed.TotalSeconds < 10", span="315-315"];
m34_205 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="var stopwatch = Stopwatch.StartNew()", span="314-314"];
m34_208 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="order.LimitPrice = order.LimitPrice/2", span="319-319"];
m34_207 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="Thread.Sleep(1000)", span="318-318"];
m34_211 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="295-295"];
m34_55 [cluster="lambda expression", color=green, community=0, file="OrderEvent.cs", label="0: orderEvent.Status == OrderStatus.Filled", span="74-74"];
m34_451 [cluster="Unk.Pass", file="OrderEvent.cs", label="Entry Unk.Pass", span=""];
m34_33 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderEvent.cs", label="var holdings = _interactiveBrokersBrokerage.GetAccountHoldings()", span="99-99"];
m34_53 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.MaxTime(QuantConnect.Indicators.IndicatorDataPoint)", file="OrderEvent.cs", label="Exit QuantConnect.Indicators.CompositeIndicator<T>.MaxTime(QuantConnect.Indicators.IndicatorDataPoint)", span="179-179"];
m34_54 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="72-82"];
m34_13 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", file="OrderEvent.cs", label="Entry QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", span="99-99"];
m34_440 [cluster="System.Console.WriteLine(string)", file="OrderEvent.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m34_74 [cluster="Unk.ToString", file="OrderEvent.cs", label="Entry Unk.ToString", span=""];
m34_292 [cluster="Unk.ContainsKey", file="OrderEvent.cs", label="Entry Unk.ContainsKey", span=""];
m34_79 [cluster="Unk.IsTrue", file="OrderEvent.cs", label="Entry Unk.IsTrue", span=""];
m34_75 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", span="126-126"];
m34_76 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", color=green, community=0, file="OrderEvent.cs", label="0: var ib = _interactiveBrokersBrokerage", span="128-128"];
m34_77 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="OrderEvent.cs", label="Assert.IsTrue(ib.IsConnected)", span="129-129"];
m34_78 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", span="126-126"];
m34_420 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", span="580-580"];
m34_421 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="582-582"];
m34_422 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Assert.IsTrue(ib.IsConnected)", span="583-583"];
m34_427 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="ib.IsConnected", span="592-592"];
m34_434 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="!ib.IsConnected && stopwatch.Elapsed < tenMinutes", span="605-605"];
m34_437 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Assert.IsTrue(ib.IsConnected)", span="611-611"];
m34_423 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="var tenMinutes = TimeSpan.FromMinutes(10)", span="585-585"];
m34_426 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Console.WriteLine(''------'')", span="589-589"];
m34_429 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Console.Write(''.'')", span="595-595"];
m34_428 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Thread.Sleep(2500)", span="594-594"];
m34_430 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="var stopwatch = Stopwatch.StartNew()", span="598-598"];
m34_433 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Console.WriteLine(''------'')", span="602-602"];
m34_436 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Console.Write(''.'')", span="608-608"];
m34_435 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Thread.Sleep(2500)", span="607-607"];
m34_424 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Console.WriteLine(''------'')", span="587-587"];
m34_425 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Console.WriteLine(''Waiting for internet disconnection '')", span="588-588"];
m34_431 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Console.WriteLine(''------'')", span="600-600"];
m34_432 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Console.WriteLine(''Trying to reconnect '')", span="601-601"];
m34_438 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", span="580-580"];
m34_219 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="327-327"];
m34_222 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="332-332"];
m34_225 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="_orders.Add(order)", span="348-348"];
m34_220 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="var orderedResetEvent = new ManualResetEvent(false)", span="329-329"];
m34_221 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="var canceledResetEvent = new ManualResetEvent(false)", span="330-330"];
m34_223 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderedResetEvent.Set();\r\n                }\r\n                if (orderEvent.Status == OrderStatus.Canceled)\r\n                {\r\n                    canceledResetEvent.Set();\r\n                }\r\n            }", span="334-344"];
m34_226 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="349-349"];
m34_229 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="ib.CancelOrder(order)", span="354-354"];
m34_231 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="var openOrders = ib.GetOpenOrders()", span="358-358"];
m34_224 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="var order = new LimitOrder(Symbols.USDJPY, -buyQuantity, 100000, DateTime.UtcNow, null)", span="347-347"];
m34_227 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="orderedResetEvent.WaitOneAssertFail(2500, ''Limit order failed to be submitted.'')", span="350-350"];
m34_230 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="canceledResetEvent.WaitOneAssertFail(2500, ''Canceled event did not fire.'')", span="356-356"];
m34_228 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="Thread.Sleep(500)", span="352-352"];
m34_232 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="var cancelledOrder = openOrders.FirstOrDefault(x => x.BrokerId.Contains(order.BrokerId[0]))", span="359-359"];
m34_233 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="Assert.IsNull(cancelledOrder)", span="360-360"];
m34_234 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="327-327"];
m34_12 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ConfigureEventHandlers()", file="OrderEvent.cs", label="Entry QuantConnect.Indicators.CompositeIndicator<T>.ConfigureEventHandlers()", span="137-137"];
m34_313 [cluster="Unk.Any", file="OrderEvent.cs", label="Entry Unk.Any", span=""];
m34_51 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="164-176"];
m34_291 [cluster="Unk.WriteLine", file="OrderEvent.cs", label="Entry Unk.WriteLine", span=""];
m34_42 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="OrderEvent.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m34_93 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OrderEvent.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m34_14 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m34_15 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m34_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="OrderEvent.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="126-126"];
m34_17 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.OrderProvider(System.Collections.Generic.IList<QuantConnect.Orders.Order>)", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.OrderProvider(System.Collections.Generic.IList<QuantConnect.Orders.Order>)", span="32-32"];
m34_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="OrderEvent.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="425-425"];
m34_312 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="OrderEvent.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="362-362"];
m34_46 [cluster="lambda expression", file="OrderEvent.cs", label="newRightData = updated", span="166-166"];
m34_237 [cluster="Unk.IsNull", file="OrderEvent.cs", label="Entry Unk.IsNull", span=""];
m34_49 [cluster="lambda expression", color=red, community=0, file="OrderEvent.cs", label="0: newLeftData = null", span="173-173"];
m34_156 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="OrderEvent.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m34_342 [cluster="System.Collections.Generic.List<T>.List()", file="OrderEvent.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m34_400 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="549-549"];
m34_47 [cluster="System.Threading.EventWaitHandle.Reset()", file="OrderEvent.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m34_37 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderEvent.cs", label="var holdingsText = _interactiveBrokersBrokerage.GetAccountHoldings().Where(x => x.Quantity != 0).Select(x => x.Symbol.ToString() + '' '' + x.Quantity)", span="112-112"];
m34_36 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderEvent.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Open orders: '' + string.Join('', '', openOrdersText))", span="109-109"];
m34_38 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderEvent.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Account holdings: '' + string.Join('', '', holdingsText))", span="113-113"];
m34_48 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", color=red, community=0, file="OrderEvent.cs", label="0: Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="325-325"];
m34_35 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderEvent.cs", label="var openOrdersText = _interactiveBrokersBrokerage.GetOpenOrders().Select(x => x.Symbol.ToString() + '' '' + x.Quantity)", span="108-108"];
m34_41 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", span="62-62"];
m34_39 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderEvent.cs", label="_interactiveBrokersBrokerage.Dispose()", span="116-116"];
m34_40 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderEvent.cs", label="_interactiveBrokersBrokerage = null", span="117-117"];
m34_45 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="OrderEvent.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="255-255"];
m34_50 [cluster="Unk.Select", file="OrderEvent.cs", label="Entry Unk.Select", span=""];
m34_58 [cluster="lambda expression", color=green, community=0, file="OrderEvent.cs", label="0: newRightData", span=""];
m34_56 [cluster="lambda expression", file="OrderEvent.cs", label="QuantConnect.Indicators.CompositeIndicator<T>", span=""];
m34_57 [cluster="lambda expression", file="OrderEvent.cs", label=rightIsConstant, span=""];
m34_59 [cluster="lambda expression", file="OrderEvent.cs", label=leftIsConstant, span=""];
m34_114 [cluster="lambda expression", file="OrderEvent.cs", label="manualResetEvent.Set()", span="163-163"];
m34_131 [cluster="lambda expression", file="OrderEvent.cs", label="manualResetEvent.Set()", span="189-189"];
m34_160 [cluster="lambda expression", file="OrderEvent.cs", label="manualResetEvent.Set()", span="218-218"];
m34_194 [cluster="lambda expression", file="OrderEvent.cs", label="manualResetEvent.Set()", span="263-263"];
m34_240 [cluster="lambda expression", file="OrderEvent.cs", label="orderedResetEvent.Set()", span="338-338"];
m34_242 [cluster="lambda expression", file="OrderEvent.cs", label="canceledResetEvent.Set()", span="342-342"];
m34_264 [cluster="lambda expression", file="OrderEvent.cs", label="orderFilledResetEvent.Set()", span="378-378"];
m34_298 [cluster="lambda expression", file="OrderEvent.cs", label="orderResetEvent.Set()", span="417-417"];
m34_345 [cluster="lambda expression", file="OrderEvent.cs", label="orderEventFired.Set()", span="472-472"];
m34_349 [cluster="lambda expression", file="OrderEvent.cs", label="accountChangedFired.Set()", span="481-481"];
m34_367 [cluster="lambda expression", file="OrderEvent.cs", label="manualResetEvent.Set()", span="510-510"];
m34_392 [cluster="lambda expression", file="OrderEvent.cs", label="orderEventFired.Set()", span="533-533"];
m34_418 [cluster="lambda expression", file="OrderEvent.cs", label="orderEventFired.Set()", span="562-562"];
m34_112 [cluster="lambda expression", file="OrderEvent.cs", label="orderEvent.Status == OrderStatus.Filled", span="160-160"];
m34_113 [cluster="lambda expression", file="OrderEvent.cs", label="orderFilled = true", span="162-162"];
m34_115 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="158-165"];
m34_129 [cluster="lambda expression", file="OrderEvent.cs", label="orderEvent.Status == OrderStatus.Filled", span="186-186"];
m34_130 [cluster="lambda expression", file="OrderEvent.cs", label="orderFilled = true", span="188-188"];
m34_132 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="184-191"];
m34_64 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="108-108"];
m34_68 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="112-112"];
m34_71 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="112-112"];
m34_159 [cluster="lambda expression", file="OrderEvent.cs", label="orderFilled = true", span="217-217"];
m34_161 [cluster="lambda expression", file="OrderEvent.cs", label="price = orderEvent.FillPrice", span="220-220"];
m34_193 [cluster="lambda expression", file="OrderEvent.cs", label="delta = 0.02m", span="262-262"];
m34_195 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="258-264"];
m34_239 [cluster="lambda expression", file="OrderEvent.cs", label="orderEvent.Status == OrderStatus.Submitted", span="336-336"];
m34_241 [cluster="lambda expression", file="OrderEvent.cs", label="orderEvent.Status == OrderStatus.Canceled", span="340-340"];
m34_243 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="334-344"];
m34_263 [cluster="lambda expression", file="OrderEvent.cs", label="orderFilledEventCount++", span="377-377"];
m34_265 [cluster="lambda expression", file="OrderEvent.cs", label="order.Status = fill.Status", span="382-382"];
m34_297 [cluster="lambda expression", file="OrderEvent.cs", label="fill.Status == OrderStatus.Filled", span="417-417"];
m34_299 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="415-418"];
m34_344 [cluster="lambda expression", file="OrderEvent.cs", label="args.Status == OrderStatus.Filled", span="470-470"];
m34_346 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="468-474"];
m34_348 [cluster="lambda expression", file="OrderEvent.cs", label="cashBalanceUpdates.Add(args.CashBalance)", span="480-480"];
m34_350 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="478-482"];
m34_366 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="510-510"];
m34_368 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="510-510"];
m34_391 [cluster="lambda expression", file="OrderEvent.cs", label="args.Status == OrderStatus.Filled", span="531-531"];
m34_393 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="529-535"];
m34_417 [cluster="lambda expression", file="OrderEvent.cs", label="args.Status == OrderStatus.Submitted", span="560-560"];
m34_419 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="558-564"];
m34_111 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="158-165"];
m34_453 [cluster="lambda expression", file="OrderEvent.cs", label="order.BrokerId.Any(x => x == id)", span="622-622"];
m34_128 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="184-191"];
m34_61 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="100-100"];
m34_66 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="108-108"];
m34_65 [cluster="lambda expression", file="OrderEvent.cs", label="x.Symbol.ToString() + '' '' + x.Quantity", span="108-108"];
m34_70 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="112-112"];
m34_69 [cluster="lambda expression", file="OrderEvent.cs", label="x.Quantity != 0", span="112-112"];
m34_73 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="112-112"];
m34_72 [cluster="lambda expression", file="OrderEvent.cs", label="x.Symbol.ToString() + '' '' + x.Quantity", span="112-112"];
m34_158 [cluster="lambda expression", file="OrderEvent.cs", label="orderEvent.Status == OrderStatus.Filled", span="215-215"];
m34_162 [cluster="lambda expression", file="OrderEvent.cs", label="delta = 0.02m", span="221-221"];
m34_192 [cluster="lambda expression", file="OrderEvent.cs", label="fillPrice = args.FillPrice", span="261-261"];
m34_216 [cluster="lambda expression", file="OrderEvent.cs", label="args.Status == OrderStatus.Filled", span="303-303"];
m34_245 [cluster="lambda expression", file="OrderEvent.cs", label="x.BrokerId.Contains(order.BrokerId[0])", span="359-359"];
m34_262 [cluster="lambda expression", file="OrderEvent.cs", label="fill.Status == OrderStatus.Filled", span="375-375"];
m34_293 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="402-402"];
m34_300 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="432-432"];
m34_363 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="506-506"];
m34_369 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="518-518"];
m34_395 [cluster="lambda expression", file="OrderEvent.cs", label="order.BrokerId.Any(id => executions.Any(e => e.Execution.OrderId == int.Parse(id)))", span="549-549"];
m34_398 [cluster="lambda expression", file="OrderEvent.cs", label="executions.Any(e => e.Execution.OrderId == int.Parse(id))", span="549-549"];
m34_163 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="213-222"];
m34_157 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="213-222"];
m34_191 [cluster="lambda expression", file="OrderEvent.cs", label="orderFilled = true", span="260-260"];
m34_190 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="258-264"];
m34_238 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="334-344"];
m34_266 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="373-383"];
m34_261 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="373-383"];
m34_296 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="415-418"];
m34_343 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="468-474"];
m34_347 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="478-482"];
m34_390 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="529-535"];
m34_416 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="558-564"];
m34_217 [cluster="lambda expression", file="OrderEvent.cs", label="filled = true", span="305-305"];
m34_316 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="451-451"];
m34_394 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="549-549"];
m34_452 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="622-622"];
m34_454 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="622-622"];
m34_455 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="622-622"];
m34_63 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="100-100"];
m34_62 [cluster="lambda expression", file="OrderEvent.cs", label="x.Quantity != 0", span="100-100"];
m34_215 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="301-307"];
m34_218 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="301-307"];
m34_244 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="359-359"];
m34_246 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="359-359"];
m34_295 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="402-402"];
m34_294 [cluster="lambda expression", file="OrderEvent.cs", label="x.Symbol", span="402-402"];
m34_302 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="432-432"];
m34_301 [cluster="lambda expression", file="OrderEvent.cs", label="x.Symbol", span="432-432"];
m34_319 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="457-457"];
m34_365 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="506-506"];
m34_364 [cluster="lambda expression", file="OrderEvent.cs", label="x.Symbol == ''USD''", span="506-506"];
m34_371 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="518-518"];
m34_370 [cluster="lambda expression", file="OrderEvent.cs", label="x.Symbol == ''USD''", span="518-518"];
m34_396 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="549-549"];
m34_397 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="549-549"];
m34_399 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="549-549"];
m34_318 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="451-451"];
m34_317 [cluster="lambda expression", file="OrderEvent.cs", label="x.Symbol == ''USD''", span="451-451"];
m34_456 [cluster="lambda expression", file="OrderEvent.cs", label="x == id", span="622-622"];
m34_457 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="622-622"];
m34_321 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="457-457"];
m34_320 [cluster="lambda expression", file="OrderEvent.cs", label="x.Symbol == ''USD''", span="457-457"];
m34_401 [cluster="lambda expression", file="OrderEvent.cs", label="e.Execution.OrderId == int.Parse(id)", span="549-549"];
m34_402 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="549-549"];
m34_351 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="502-502"];
m34_352 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="504-504"];
m34_357 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="_orders.Add(order)", span="513-513"];
m34_354 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="509-509"];
m34_353 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="decimal balance = ib.GetCashBalance().Single(x => x.Symbol == ''USD'').Amount", span="506-506"];
m34_355 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="ib.AccountChanged += (sender, orderEvent) => manualResetEvent.Set()", span="510-510"];
m34_358 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="514-514"];
m34_360 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="decimal balanceAfterTrade = ib.GetCashBalance().Single(x => x.Symbol == ''USD'').Amount", span="518-518"];
m34_356 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="512-512"];
m34_359 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="manualResetEvent.WaitOneAssertFail(1500, ''Didn't receive account changed event'')", span="516-516"];
m34_361 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="Assert.AreNotEqual(balance, balanceAfterTrade)", span="520-520"];
m34_362 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="502-502"];
m34_214 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="OrderEvent.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="234-234"];
m34_388 [cluster="System.Diagnostics.Stopwatch.Stop()", file="OrderEvent.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m34_97 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="152-152"];
m34_99 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", color=green, community=0, file="OrderEvent.cs", label="0: var manualResetEvent = new ManualResetEvent(false)", span="155-155"];
m34_98 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderEvent.cs", label="bool orderFilled = false", span="154-154"];
m34_100 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", color=green, community=0, file="OrderEvent.cs", label="0: var ib = _interactiveBrokersBrokerage", span="156-156"];
m34_101 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderEvent.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="158-165"];
m34_105 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderEvent.cs", label="manualResetEvent.WaitOne(2500)", span="171-171"];
m34_104 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="169-169"];
m34_106 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderEvent.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="172-172"];
m34_103 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderEvent.cs", label="_orders.Add(order)", span="168-168"];
m34_102 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderEvent.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow) {Id = 1}", span="167-167"];
m34_107 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderEvent.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="173-173"];
m34_108 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="152-152"];
m34_43 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.MaxTime(QuantConnect.Indicators.IndicatorDataPoint)", file="OrderEvent.cs", label="Entry QuantConnect.Indicators.CompositeIndicator<T>.MaxTime(QuantConnect.Indicators.IndicatorDataPoint)", span="179-179"];
m34_22 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", color=green, community=0, file="OrderEvent.cs", label="0: Log.Trace(''-----'')", span="68-68"];
m34_5 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", color=green, community=0, file="OrderEvent.cs", label="0: _interactiveBrokersBrokerage.Connect()", span="58-58"];
m34_314 [cluster="System.Console.WriteLine(object)", file="OrderEvent.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m34_403 [cluster="int.Parse(string)", file="OrderEvent.cs", label="Entry int.Parse(string)", span="0-0"];
m34_116 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="177-177"];
m34_118 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", color=green, community=0, file="OrderEvent.cs", label="0: var manualResetEvent = new ManualResetEvent(false)", span="180-180"];
m34_117 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderEvent.cs", label="bool orderFilled = false", span="179-179"];
m34_119 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="182-182"];
m34_120 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderEvent.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="184-191"];
m34_124 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderEvent.cs", label="manualResetEvent.WaitOne(2500)", span="198-198"];
m34_122 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderEvent.cs", label="_orders.Add(order)", span="195-195"];
m34_123 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="196-196"];
m34_125 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderEvent.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="200-200"];
m34_121 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderEvent.cs", label="var order = new MarketOrder(Symbols.USDJPY, -buyQuantity, DateTime.UtcNow)", span="194-194"];
m34_126 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderEvent.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="201-201"];
m34_127 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="177-177"];
m34_441 [cluster="System.Console.Write(string)", file="OrderEvent.cs", label="Entry System.Console.Write(string)", span="0-0"];
m34_11 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", file="OrderEvent.cs", label="Exit QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", span="83-83"];
m34_19 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ValidateAndComputeNextValue(T)", file="OrderEvent.cs", label="Entry QuantConnect.Indicators.CompositeIndicator<T>.ValidateAndComputeNextValue(T)", span="114-114"];
m34_21 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ValidateAndComputeNextValue(T)", file="OrderEvent.cs", label="Exit QuantConnect.Indicators.CompositeIndicator<T>.ValidateAndComputeNextValue(T)", span="114-114"];
m34_23 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ComputeNextValue(T)", color=green, community=0, file="OrderEvent.cs", label="1: Entry QuantConnect.Indicators.CompositeIndicator<T>.ComputeNextValue(T)", span="127-127"];
m34_24 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ComputeNextValue(T)", color=green, community=0, file="OrderEvent.cs", label="0: return _composer.Invoke(Left, Right).Value;", span="130-130"];
m34_25 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ComputeNextValue(T)", color=green, community=0, file="OrderEvent.cs", label="0: Exit QuantConnect.Indicators.CompositeIndicator<T>.ComputeNextValue(T)", span="127-127"];
m34_30 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ConfigureEventHandlers()", color=green, community=0, file="OrderEvent.cs", label="0: Left.Updated += (sender, updated) =>\r\n            {\r\n                newLeftData = updated;\r\n\r\n                // if we have left and right data (or if right is a constant) then we need to update\r\n                if (newRightData != null || rightIsConstant)\r\n                {\r\n                    Update(new T {Time = MaxTime(updated)});\r\n                    // reset these to null after each update\r\n                    newLeftData = null;\r\n                    newRightData = null;\r\n                }\r\n            }", span="150-162"];
m34_31 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ConfigureEventHandlers()", color=red, community=0, file="OrderEvent.cs", label="0: Right.Updated += (sender, updated) =>\r\n            {\r\n                newRightData = updated;\r\n\r\n                // if we have left and right data (or if left is a constant) then we need to update\r\n                if (newLeftData != null || leftIsConstant)\r\n                {\r\n                    Update(new T {Time = MaxTime(updated)});\r\n                    // reset these to null after each update\r\n                    newLeftData = null;\r\n                    newRightData = null;\r\n                }\r\n            }", span="164-176"];
m34_26 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ConfigureEventHandlers()", file="OrderEvent.cs", label="bool leftIsConstant = Left.GetType().IsSubclassOfGeneric(typeof (ConstantIndicator<>))", span="140-140"];
m34_29 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ConfigureEventHandlers()", file="OrderEvent.cs", label="IndicatorDataPoint newRightData = null", span="149-149"];
m34_27 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ConfigureEventHandlers()", file="OrderEvent.cs", label="bool rightIsConstant = Right.GetType().IsSubclassOfGeneric(typeof (ConstantIndicator<>))", span="141-141"];
m34_20 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ValidateAndComputeNextValue(T)", color=red, community=0, file="OrderEvent.cs", label="0: return _composer.Invoke(Left, Right);", span="116-116"];
m34_32 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ConfigureEventHandlers()", file="OrderEvent.cs", label="Exit QuantConnect.Indicators.CompositeIndicator<T>.ConfigureEventHandlers()", span="137-137"];
m34_28 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.ConfigureEventHandlers()", file="OrderEvent.cs", label="IndicatorDataPoint newLeftData = null", span="148-148"];
m34_34 [cluster="System.Type.IsSubclassOfGeneric(System.Type)", file="OrderEvent.cs", label="Entry System.Type.IsSubclassOfGeneric(System.Type)", span="677-677"];
m34_52 [cluster="Unk.Trace", file="OrderEvent.cs", label="Entry Unk.Trace", span=""];
m34_260 [cluster="System.DateTime.DateTime()", file="OrderEvent.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m34_386 [cluster="System.DateTime.AddDays(double)", file="OrderEvent.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m34_290 [cluster="Unk.ToDictionary", file="OrderEvent.cs", label="Entry Unk.ToDictionary", span=""];
m34_60 [cluster="System.Threading.EventWaitHandle.Set()", file="OrderEvent.cs", label=newLeftData, span=""];
m34_7 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", file="OrderEvent.cs", label="_composer = composer", span="86-86"];
m34_6 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", span="41-41"];
m34_8 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="OrderEvent.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m34_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="OrderEvent.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m34_10 [cluster="QuantConnect.Tests.Brokerages.SecurityProvider.SecurityProvider()", color=red, community=0, file="OrderEvent.cs", label="0: Entry QuantConnect.Tests.Brokerages.SecurityProvider.SecurityProvider()", span="33-33"];
m34_67 [cluster="QuantConnect.Symbol.ToString()", file="OrderEvent.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m34_95 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="OrderEvent.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m34_389 [cluster="System.Console.WriteLine(string, object, object)", file="OrderEvent.cs", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
m34_110 [cluster="Unk.AreEqual", file="OrderEvent.cs", label="Entry Unk.AreEqual", span=""];
m34_236 [cluster="Unk.FirstOrDefault", file="OrderEvent.cs", label="Entry Unk.FirstOrDefault", span=""];
m34_247 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="OrderEvent.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m34_450 [cluster="Unk.Fail", file="OrderEvent.cs", label="Entry Unk.Fail", span=""];
m34_44 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="OrderEvent.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="285-285"];
m34_212 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="OrderEvent.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m34_92 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="OrderEvent.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m34_80 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", span="133-133"];
m34_81 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="135-135"];
m34_83 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="_orders.Add(order)", span="138-138"];
m34_88 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="_orders.Add(order)", span="145-145"];
m34_82 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="137-137"];
m34_84 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="139-139"];
m34_89 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="146-146"];
m34_87 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="144-144"];
m34_85 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="var brokerageID = order.BrokerId.Single()", span="141-141"];
m34_90 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="Assert.AreNotEqual(brokerageID, order.BrokerId.Single())", span="148-148"];
m34_86 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="Assert.AreNotEqual(0, brokerageID)", span="142-142"];
m34_91 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", span="133-133"];
m34_94 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="OrderEvent.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="213-213"];
m34_315 [cluster="Unk.Single", file="OrderEvent.cs", label="Entry Unk.Single", span=""];
m34_164 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="250-250"];
m34_167 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="254-254"];
m34_173 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="_orders.Add(order)", span="269-269"];
m34_180 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="_orders.Add(order)", span="281-281"];
m34_183 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="_orders.Add(order)", span="285-285"];
m34_166 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="253-253"];
m34_175 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="manualResetEvent.WaitOne(2000)", span="272-272"];
m34_185 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="manualResetEvent.WaitOne(1000)", span="288-288"];
m34_168 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="decimal fillPrice = 100m", span="256-256"];
m34_170 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                orderFilled = true;\r\n                fillPrice = args.FillPrice;\r\n                delta = 0.02m;\r\n                manualResetEvent.Set();\r\n            }", span="258-264"];
m34_174 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="270-270"];
m34_181 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="282-282"];
m34_184 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="286-286"];
m34_186 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="290-290"];
m34_172 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="Order order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow) { Id = ++id }", span="268-268"];
m34_179 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="order = new StopMarketOrder(Symbols.USDJPY, buyQuantity, fillPrice - delta, DateTime.UtcNow) { Id = ++id }", span="280-280"];
m34_182 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="order = new StopMarketOrder(Symbols.USDJPY, -buyQuantity, fillPrice + delta, DateTime.UtcNow) { Id = ++id }", span="284-284"];
m34_165 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="bool orderFilled = false", span="252-252"];
m34_176 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="manualResetEvent.Reset()", span="273-273"];
m34_177 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="Assert.IsTrue(orderFilled)", span="274-274"];
m34_169 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="decimal delta = 85.0m", span="257-257"];
m34_171 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="int id = 0", span="267-267"];
m34_178 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="orderFilled = false", span="276-276"];
m34_187 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="Assert.AreEqual(OrderType.StopMarket, orderFromIB.Type)", span="291-291"];
m34_188 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="250-250"];
m34_133 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="205-205"];
m34_136 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="209-209"];
m34_142 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="_orders.Add(order)", span="227-227"];
m34_147 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="_orders.Add(order)", span="236-236"];
m34_150 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="_orders.Add(order)", span="240-240"];
m34_135 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="208-208"];
m34_144 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="manualResetEvent.WaitOne(2000)", span="230-230"];
m34_152 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="manualResetEvent.WaitOne(1000)", span="243-243"];
m34_137 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="decimal price = 100m", span="211-211"];
m34_139 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n                price = orderEvent.FillPrice;\r\n                delta = 0.02m;\r\n            }", span="213-222"];
m34_143 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="228-228"];
m34_148 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="237-237"];
m34_151 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="241-241"];
m34_153 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="245-245"];
m34_141 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="Order order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow) { Id = ++id }", span="226-226"];
m34_146 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="order = new LimitOrder(Symbols.USDJPY, buyQuantity, price - delta, DateTime.UtcNow, null) { Id = ++id }", span="235-235"];
m34_149 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="order = new LimitOrder(Symbols.USDJPY, -buyQuantity, price + delta, DateTime.UtcNow, null) { Id = ++id }", span="239-239"];
m34_134 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="bool orderFilled = false", span="207-207"];
m34_145 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="manualResetEvent.Reset()", span="231-231"];
m34_138 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="decimal delta = 85.0m", span="212-212"];
m34_140 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="int id = 0", span="225-225"];
m34_154 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="Assert.AreEqual(OrderType.Limit, orderFromIB.Type)", span="246-246"];
m34_155 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="205-205"];
m34_387 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="OrderEvent.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="373-373"];
m34_322 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="463-463"];
m34_323 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="465-465"];
m34_333 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="_orders.Add(order)", span="488-488"];
m34_324 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="var orderEventFired = new ManualResetEvent(false)", span="467-467"];
m34_327 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="var accountChangedFired = new ManualResetEvent(false)", span="477-477"];
m34_325 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="468-474"];
m34_328 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="ib.AccountChanged += (sender, args) =>\r\n            {\r\n                cashBalanceUpdates.Add(args.CashBalance);\r\n                accountChangedFired.Set();\r\n            }", span="478-482"];
m34_334 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="489-489"];
m34_332 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity*(i + 1), new DateTime()) {Id = i + 1}", span="487-487"];
m34_335 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="orderEventFired.WaitOneAssertFail(1500, ''Didnt receive order event #'' + i)", span="491-491"];
m34_336 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="orderEventFired.Reset()", span="492-492"];
m34_326 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="var cashBalanceUpdates = new List<decimal>()", span="476-476"];
m34_337 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="accountChangedFired.WaitOneAssertFail(1500, ''Didnt receive account event #'' + i)", span="494-494"];
m34_338 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="accountChangedFired.Reset()", span="495-495"];
m34_329 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="int orderCount = 3", span="484-484"];
m34_330 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="int i = 0", span="485-485"];
m34_331 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="i < orderCount", span="485-485"];
m34_340 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="Assert.AreEqual(orderCount, cashBalanceUpdates.Count)", span="498-498"];
m34_339 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="i++", span="485-485"];
m34_341 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="463-463"];
m34_248 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="364-364"];
m34_249 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="366-366"];
m34_251 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="_orders.Add(order)", span="369-369"];
m34_253 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="var orderFilledResetEvent = new ManualResetEvent(false)", span="372-372"];
m34_250 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, new DateTime()) {Id = 1}", span="368-368"];
m34_254 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilledEventCount++;\r\n                    orderFilledResetEvent.Set();\r\n                }\r\n\r\n                // mimic what the transaction handler would do\r\n                order.Status = fill.Status;\r\n            }", span="373-383"];
m34_255 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="385-385"];
m34_252 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="int orderFilledEventCount = 0", span="371-371"];
m34_256 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="orderFilledResetEvent.WaitOneAssertFail(2500, ''Didnt fire order filled event'')", span="387-387"];
m34_258 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="Assert.AreEqual(1, orderFilledEventCount)", span="392-392"];
m34_257 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="Thread.Sleep(2000)", span="390-390"];
m34_259 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="364-364"];
m34_439 [cluster="System.TimeSpan.FromMinutes(double)", file="OrderEvent.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m34_189 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="OrderEvent.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m34_372 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="524-524"];
m34_373 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="526-526"];
m34_377 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="_orders.Add(order)", span="538-538"];
m34_374 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="var orderEventFired = new ManualResetEvent(false)", span="528-528"];
m34_379 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="orderEventFired.WaitOne(1500)", span="540-540"];
m34_375 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="529-535"];
m34_378 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="539-539"];
m34_381 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="var executions = ib.GetExecutions(null, null, null, DateTime.UtcNow.AddDays(-1), null)", span="544-544"];
m34_376 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="var order = new MarketOrder(Symbols.USDJPY, -buyQuantity, new DateTime())", span="537-537"];
m34_380 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="var stopwatch = Stopwatch.StartNew()", span="542-542"];
m34_384 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="Assert.IsTrue(executions.Any(x => order.BrokerId.Any(id => executions.Any(e => e.Execution.OrderId == int.Parse(id)))))", span="549-549"];
m34_382 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="stopwatch.Stop()", span="546-546"];
m34_383 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="Console.WriteLine(''Total executions fetched: {0}, elapsed time: {1} ms'', executions.Count, stopwatch.ElapsedMilliseconds)", span="547-547"];
m34_385 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="524-524"];
m34_267 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="396-396"];
m34_268 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="398-398"];
m34_279 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="_orders.Add(order)", span="423-423"];
m34_275 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="var orderResetEvent = new ManualResetEvent(false)", span="414-414"];
m34_269 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="Thread.Sleep(500)", span="400-400"];
m34_270 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="var previousHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="402-402"];
m34_276 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled) orderResetEvent.Set();\r\n            }", span="415-418"];
m34_280 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="424-424"];
m34_283 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="var newHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="432-432"];
m34_278 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="var order = new MarketOrder(Symbols.USDJPY, quantity, DateTime.UtcNow)", span="422-422"];
m34_274 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="bool hasSymbol = previousHoldings.ContainsKey(Symbols.USDJPY)", span="411-411"];
m34_281 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="orderResetEvent.WaitOneAssertFail(3000, ''Didn't receive order event'')", span="427-427"];
m34_287 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="Assert.IsTrue(newHoldings.ContainsKey(Symbols.USDJPY))", span="441-441"];
m34_271 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label=previousHoldings, span="404-404"];
m34_273 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="Log.Trace(''Quantity: '' + previousHoldings[Symbols.USDJPY].Quantity)", span="409-409"];
m34_286 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="Assert.AreEqual(previousHoldings[Symbols.USDJPY].Quantity, newHoldings[Symbols.USDJPY].Quantity - quantity)", span="437-437"];
m34_277 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="int quantity = -buyQuantity", span="421-421"];
m34_282 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="Thread.Sleep(5000)", span="430-430"];
m34_284 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="Log.Trace(''New Quantity: '' + newHoldings[Symbols.USDJPY].Quantity)", span="433-433"];
m34_288 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="Assert.AreEqual(newHoldings[Symbols.USDJPY].Quantity, quantity)", span="442-442"];
m34_285 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label=hasSymbol, span="435-435"];
m34_272 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="Console.WriteLine(holding.Value)", span="406-406"];
m34_289 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="396-396"];
m34_303 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="447-447"];
m34_304 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="449-449"];
m34_305 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderEvent.cs", label="var cashBalance = ib.GetCashBalance()", span="450-450"];
m34_306 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderEvent.cs", label="Assert.IsTrue(cashBalance.Any(x => x.Symbol == ''USD''))", span="451-451"];
m34_307 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderEvent.cs", label=cashBalance, span="452-452"];
m34_310 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderEvent.cs", label="Assert.AreNotEqual(0m, cashBalance.Single(x => x.Symbol == ''USD''))", span="457-457"];
m34_309 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderEvent.cs", label="cash.Symbol == ''USD''", span="455-455"];
m34_308 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderEvent.cs", label="Console.WriteLine(cash)", span="454-454"];
m34_311 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="447-447"];
m34_404 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="553-553"];
m34_405 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="var ib = _interactiveBrokersBrokerage", span="555-555"];
m34_409 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="_orders.Add(order)", span="567-567"];
m34_406 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="var orderEventFired = new ManualResetEvent(false)", span="557-557"];
m34_411 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="orderEventFired.WaitOne(1500)", span="570-570"];
m34_407 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="558-564"];
m34_410 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="ib.PlaceOrder(order)", span="568-568"];
m34_413 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="var openOrders = ib.GetOpenOrders()", span="574-574"];
m34_408 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="var order = new LimitOrder(Symbols.USDJPY, buyQuantity, 0.01m, DateTime.UtcNow)", span="566-566"];
m34_412 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="Thread.Sleep(250)", span="572-572"];
m34_414 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="Assert.AreNotEqual(0, openOrders.Count)", span="576-576"];
m34_415 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="553-553"];
m34_0 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.Reset()", file="OrderEvent.cs", label="Entry QuantConnect.Indicators.CompositeIndicator<T>.Reset()", span="69-69"];
m34_1 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.Reset()", color=red, community=0, file="OrderEvent.cs", label="0: Left.Reset()", span="70-70"];
m34_2 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.Reset()", file="OrderEvent.cs", label="Right.Reset()", span="71-71"];
m34_3 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.Reset()", color=green, community=0, file="OrderEvent.cs", label="0: base.Reset()", span="72-72"];
m34_4 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.Reset()", file="OrderEvent.cs", label="Exit QuantConnect.Indicators.CompositeIndicator<T>.Reset()", span="69-69"];
m34_213 [cluster="System.Threading.Thread.Sleep(int)", file="OrderEvent.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m34_235 [cluster="System.Threading.WaitHandle.WaitOneAssertFail(int, string)", file="OrderEvent.cs", label="Entry System.Threading.WaitHandle.WaitOneAssertFail(int, string)", span="32-32"];
m34_96 [cluster="Unk.AreNotEqual", file="OrderEvent.cs", label="Entry Unk.AreNotEqual", span=""];
m34_109 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="614-614"];
m34_442 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="!orderFilled", span="617-617"];
m34_443 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="ib.GetOpenOrders()", span="620-620"];
m34_444 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="openOrder.BrokerId.Any(id => order.BrokerId.Any(x => x == id))", span="622-622"];
m34_445 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="return openOrder;", span="624-624"];
m34_448 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="return null;", span="631-631"];
m34_447 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="Assert.Pass(''The order was successfully filled!'')", span="630-630"];
m34_446 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="Assert.Fail(''The order was not filled and was unable to be located via GetOpenOrders()'')", span="627-627"];
m34_449 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="614-614"];
m34_458 [file="OrderEvent.cs", label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", span=""];
m34_460 [file="OrderEvent.cs", label=canceledResetEvent, span=""];
m34_459 [file="OrderEvent.cs", label=filledResetEvent, span=""];
m34_461 [file="OrderEvent.cs", label=manualResetEvent, span=""];
m34_462 [file="OrderEvent.cs", label=manualResetEvent, span=""];
m34_463 [file="OrderEvent.cs", label=manualResetEvent, span=""];
m34_464 [file="OrderEvent.cs", label=manualResetEvent, span=""];
m34_465 [file="OrderEvent.cs", label=orderedResetEvent, span=""];
m34_466 [file="OrderEvent.cs", label=canceledResetEvent, span=""];
m34_469 [file="OrderEvent.cs", label=orderFilledResetEvent, span=""];
m34_471 [file="OrderEvent.cs", label=orderResetEvent, span=""];
m34_472 [file="OrderEvent.cs", label=orderEventFired, span=""];
m34_474 [file="OrderEvent.cs", label=accountChangedFired, span=""];
m34_475 [file="OrderEvent.cs", label=manualResetEvent, span=""];
m34_476 [file="OrderEvent.cs", label=orderEventFired, span=""];
m34_480 [file="OrderEvent.cs", label=orderEventFired, span=""];
m34_468 [file="OrderEvent.cs", label=orderFilledEventCount, span=""];
m34_470 [file="OrderEvent.cs", label=order, span=""];
m34_473 [file="OrderEvent.cs", label=cashBalanceUpdates, span=""];
m34_481 [file="OrderEvent.cs", label="QuantConnect.Orders.Order", span=""];
m34_467 [file="OrderEvent.cs", label=order, span=""];
m34_477 [file="OrderEvent.cs", label=order, span=""];
m34_478 [file="OrderEvent.cs", label=executions, span=""];
m34_482 [file="OrderEvent.cs", label=string, span=""];
m34_479 [file="OrderEvent.cs", label=string, span=""];
m35_33 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="PandasConverter.cs", label="Entry QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="158-158"];
m35_40 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", color=green, community=0, file="PandasConverter.cs", label="0: var value = Get(key)", span="160-160"];
m35_41 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="PandasConverter.cs", label="string.IsNullOrEmpty(value)", span="161-161"];
m35_46 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="PandasConverter.cs", label="return (T) Enum.Parse(type, value);", span="170-170"];
m35_47 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", color=green, community=0, file="PandasConverter.cs", label="0: return (T)Convert.ChangeType(value, type);", span="172-172"];
m35_42 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", color=green, community=0, file="PandasConverter.cs", label="0: Log.Trace(''Config.GetValue(): '' + key + '' - Using default value: '' + defaultValue)", span="163-163"];
m35_43 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="PandasConverter.cs", label="return defaultValue;", span="164-164"];
m35_44 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="PandasConverter.cs", label="var type = typeof (T)", span="167-167"];
m35_45 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", color=green, community=0, file="PandasConverter.cs", label="0: type.IsEnum", span="168-168"];
m35_48 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="PandasConverter.cs", label="Exit QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="158-158"];
m35_34 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="PandasConverter.cs", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="134-134"];
m35_35 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", color=green, community=0, file="PandasConverter.cs", label="0: return GetValue(key, defaultValue);", span="136-136"];
m35_36 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="PandasConverter.cs", label="Exit QuantConnect.Configuration.Config.GetInt(string, int)", span="134-134"];
m35_26 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="PandasConverter.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m35_50 [cluster="System.Enum.Parse(System.Type, string)", file="PandasConverter.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m35_10 [cluster="System.IO.File.ReadAllText(string)", file="PandasConverter.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m35_24 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="PandasConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m35_9 [cluster="System.IO.File.Exists(string)", file="PandasConverter.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m35_37 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="PandasConverter.cs", label="Entry QuantConnect.Configuration.Config.GetDouble(string, double)", span="145-145"];
m35_38 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="PandasConverter.cs", label="return GetValue(key, defaultValue);", span="147-147"];
m35_39 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="PandasConverter.cs", label="Exit QuantConnect.Configuration.Config.GetDouble(string, double)", span="145-145"];
m35_49 [cluster="string.IsNullOrEmpty(string)", file="PandasConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m35_30 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="PandasConverter.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="123-123"];
m35_31 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", color=green, community=0, file="PandasConverter.cs", label="0: return GetValue(key, defaultValue);", span="125-125"];
m35_32 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="PandasConverter.cs", label="Exit QuantConnect.Configuration.Config.GetBool(string, bool)", span="123-123"];
m35_25 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="PandasConverter.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129"];
m35_51 [cluster="System.Convert.ChangeType(object, System.Type)", file="PandasConverter.cs", label="Entry System.Convert.ChangeType(object, System.Type)", span="0-0"];
m35_11 [cluster="Unk.>", file="PandasConverter.cs", label="Entry Unk.>", span=""];
m35_12 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="PandasConverter.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="83-83"];
m35_13 [cluster="QuantConnect.Configuration.Config.Get(string, string)", color=green, community=0, file="PandasConverter.cs", label="0: var value = ''''", span="85-85"];
m35_14 [cluster="QuantConnect.Configuration.Config.Get(string, string)", color=green, community=0, file="PandasConverter.cs", label="0: !_loaded", span="88-88"];
m35_16 [cluster="QuantConnect.Configuration.Config.Get(string, string)", color=green, community=0, file="PandasConverter.cs", label="0: _settings != null && _settings.ContainsKey(key)", span="90-90"];
m35_15 [cluster="QuantConnect.Configuration.Config.Get(string, string)", color=green, community=0, file="PandasConverter.cs", label="0: Initialize()", span="88-88"];
m35_17 [cluster="QuantConnect.Configuration.Config.Get(string, string)", color=green, community=0, file="PandasConverter.cs", label="0: value = _settings[key]", span="92-92"];
m35_18 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="PandasConverter.cs", label="value = defaultValue", span="96-96"];
m35_20 [cluster="QuantConnect.Configuration.Config.Get(string, string)", color=green, community=0, file="PandasConverter.cs", label="0: Exception", span="100-100"];
m35_22 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="PandasConverter.cs", label="return value;", span="104-104"];
m35_19 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="PandasConverter.cs", label="Log.Trace(''Config.Get(): Configuration key not found. Key: '' + key)", span="97-97"];
m35_21 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="PandasConverter.cs", label="Log.Error(''Config.Get(): '' + err.Message)", span="102-102"];
m35_23 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="PandasConverter.cs", label="Exit QuantConnect.Configuration.Config.Get(string, string)", span="83-83"];
m35_27 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="PandasConverter.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="112-112"];
m35_28 [cluster="QuantConnect.Configuration.Config.Set(string, string)", color=green, community=0, file="PandasConverter.cs", label="0: _settings[key] = value", span="114-114"];
m35_29 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="PandasConverter.cs", label="Exit QuantConnect.Configuration.Config.Set(string, string)", span="112-112"];
m35_0 [cluster="QuantConnect.Configuration.Config.Initialize()", file="PandasConverter.cs", label="Entry QuantConnect.Configuration.Config.Initialize()", span="61-61"];
m35_1 [cluster="QuantConnect.Configuration.Config.Initialize()", color=green, community=0, file="PandasConverter.cs", label="0: var file = ''''", span="63-63"];
m35_2 [cluster="QuantConnect.Configuration.Config.Initialize()", color=green, community=0, file="PandasConverter.cs", label="0: _loaded", span="65-65"];
m35_3 [cluster="QuantConnect.Configuration.Config.Initialize()", color=green, community=0, file="PandasConverter.cs", label="0: return;", span="65-65"];
m35_4 [cluster="QuantConnect.Configuration.Config.Initialize()", color=green, community=0, file="PandasConverter.cs", label="0: File.Exists(_config)", span="68-68"];
m35_5 [cluster="QuantConnect.Configuration.Config.Initialize()", file="PandasConverter.cs", label="file = File.ReadAllText(_config)", span="70-70"];
m35_7 [cluster="QuantConnect.Configuration.Config.Initialize()", file="PandasConverter.cs", label="_loaded = true", span="74-74"];
m35_6 [cluster="QuantConnect.Configuration.Config.Initialize()", color=green, community=0, file="PandasConverter.cs", label="0: _settings = JsonConvert.DeserializeObject<Dictionary<string, string>>(file)", span="71-71"];
m35_8 [cluster="QuantConnect.Configuration.Config.Initialize()", file="PandasConverter.cs", label="Exit QuantConnect.Configuration.Config.Initialize()", span="61-61"];
m36_24 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="PandasConverterTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="113-113"];
m36_10 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.CreateBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.CreateBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider)", span="50-50"];
m36_11 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.CreateBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider)", color=red, community=0, file="PandasConverterTests.cs", label="0: !_gatewayLaunched", span="52-52"];
m36_14 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.CreateBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider)", color=red, community=0, file="PandasConverterTests.cs", label="0: return new InteractiveBrokersBrokerage(orderMapping);", span="62-62"];
m36_12 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.CreateBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider)", color=red, community=0, file="PandasConverterTests.cs", label="0: _gatewayLaunched = true", span="54-54"];
m36_13 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.CreateBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider)", color=red, community=0, file="PandasConverterTests.cs", label="0: InteractiveBrokersGatewayRunner.Start(Config.Get(''ib-controller-dir''),\r\n                    Config.Get(''ib-tws-dir''),\r\n                    Config.Get(''ib-user-name''),\r\n                    Config.Get(''ib-password''),\r\n                    Config.GetBool(''ib-use-tws'')\r\n                    )", span="55-60"];
m36_15 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.CreateBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.CreateBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider)", span="50-50"];
m36_2 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.DisposeBrokerage()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.DisposeBrokerage()", span="20-20"];
m36_3 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.DisposeBrokerage()", color=red, community=0, file="PandasConverterTests.cs", label="0: InteractiveBrokersGatewayRunner.Stop()", span="22-22"];
m36_4 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.DisposeBrokerage()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.DisposeBrokerage()", span="20-20"];
m36_20 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", span="65-65"];
m36_21 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", color=red, community=0, file="PandasConverterTests.cs", label="0: brokerage != null", span="67-67"];
m36_22 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", color=red, community=0, file="PandasConverterTests.cs", label="0: brokerage.Disconnect()", span="69-69"];
m36_23 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", span="65-65"];
m36_9 [cluster="System.NotImplementedException.NotImplementedException()", file="PandasConverterTests.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m36_17 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="PandasConverterTests.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="123-123"];
m36_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping)", span="89-89"];
m36_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", span="45-45"];
m36_6 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.GetAskPrice(string, QuantConnect.SecurityType)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.GetAskPrice(string, QuantConnect.SecurityType)", span="45-45"];
m36_7 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.GetAskPrice(string, QuantConnect.SecurityType)", color=red, community=0, file="PandasConverterTests.cs", label="0: throw new System.NotImplementedException();", span="47-47"];
m36_8 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.GetAskPrice(string, QuantConnect.SecurityType)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.GetAskPrice(string, QuantConnect.SecurityType)", span="45-45"];
m36_0 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.InitializeBrokerage()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.InitializeBrokerage()", span="15-15"];
m36_1 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.InitializeBrokerage()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersForexOrderTests.InitializeBrokerage()", span="15-15"];
m36_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="77-77"];
m36_16 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="PandasConverterTests.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="83-83"];
m37_6 [cluster="Unk.Serialize", file="Program.cs", label="Entry Unk.Serialize", span=""];
m37_17 [cluster="QuantConnect.Util.SingleValueListConverter<T>.CanConvert(System.Type)", file="Program.cs", label="Entry QuantConnect.Util.SingleValueListConverter<T>.CanConvert(System.Type)", span="69-69"];
m37_18 [cluster="QuantConnect.Util.SingleValueListConverter<T>.CanConvert(System.Type)", color=red, community=0, file="Program.cs", label="0: return objectType == typeof(T) || objectType == typeof(List<T>);", span="71-71"];
m37_19 [cluster="QuantConnect.Util.SingleValueListConverter<T>.CanConvert(System.Type)", file="Program.cs", label="Exit QuantConnect.Util.SingleValueListConverter<T>.CanConvert(System.Type)", span="69-69"];
m37_0 [cluster="QuantConnect.Util.SingleValueListConverter<T>.WriteJson(JsonWriter, object, JsonSerializer)", file="Program.cs", label="Entry QuantConnect.Util.SingleValueListConverter<T>.WriteJson(JsonWriter, object, JsonSerializer)", span="33-33"];
m37_1 [cluster="QuantConnect.Util.SingleValueListConverter<T>.WriteJson(JsonWriter, object, JsonSerializer)", color=red, community=0, file="Program.cs", label="3: value is T", span="35-35"];
m37_2 [cluster="QuantConnect.Util.SingleValueListConverter<T>.WriteJson(JsonWriter, object, JsonSerializer)", color=red, community=0, file="Program.cs", label="0: value = new List<T> {(T)value}", span="37-37"];
m37_3 [cluster="QuantConnect.Util.SingleValueListConverter<T>.WriteJson(JsonWriter, object, JsonSerializer)", color=red, community=0, file="Program.cs", label="0: serializer.Serialize(writer, value)", span="39-39"];
m37_4 [cluster="QuantConnect.Util.SingleValueListConverter<T>.WriteJson(JsonWriter, object, JsonSerializer)", file="Program.cs", label="Exit QuantConnect.Util.SingleValueListConverter<T>.WriteJson(JsonWriter, object, JsonSerializer)", span="33-33"];
m37_5 [cluster="System.Collections.Generic.List<T>.List()", file="Program.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m37_7 [cluster="QuantConnect.Util.SingleValueListConverter<T>.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="Program.cs", label="Entry QuantConnect.Util.SingleValueListConverter<T>.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="51-51"];
m37_8 [cluster="QuantConnect.Util.SingleValueListConverter<T>.ReadJson(JsonReader, System.Type, object, JsonSerializer)", color=red, community=0, file="Program.cs", label="0: reader.TokenType", span="53-53"];
m37_10 [cluster="QuantConnect.Util.SingleValueListConverter<T>.ReadJson(JsonReader, System.Type, object, JsonSerializer)", color=red, community=0, file="Program.cs", label="0: return new List<T> {serializer.Deserialize<T>(reader)};", span="56-56"];
m37_12 [cluster="QuantConnect.Util.SingleValueListConverter<T>.ReadJson(JsonReader, System.Type, object, JsonSerializer)", color=red, community=0, file="Program.cs", label="0: return serializer.Deserialize<List<T>>(reader);", span="58-58"];
m37_9 [cluster="QuantConnect.Util.SingleValueListConverter<T>.ReadJson(JsonReader, System.Type, object, JsonSerializer)", color=red, community=0, file="Program.cs", label="0: JsonToken.StartObject", span="55-55"];
m37_11 [cluster="QuantConnect.Util.SingleValueListConverter<T>.ReadJson(JsonReader, System.Type, object, JsonSerializer)", color=red, community=0, file="Program.cs", label="0: JsonToken.StartArray", span="57-57"];
m37_13 [cluster="QuantConnect.Util.SingleValueListConverter<T>.ReadJson(JsonReader, System.Type, object, JsonSerializer)", color=red, community=0, file="Program.cs", label="0: throw new ArgumentException(''The JsonReader is expected to point at a JsonToken.StartObject or JsonToken.StartArray.'');", span="60-60"];
m37_14 [cluster="QuantConnect.Util.SingleValueListConverter<T>.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="Program.cs", label="Exit QuantConnect.Util.SingleValueListConverter<T>.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="51-51"];
m37_15 [cluster="Unk.>", file="Program.cs", label="Entry Unk.>", span=""];
m37_16 [cluster="System.ArgumentException.ArgumentException(string)", file="Program.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m38_0 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m38_1 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="QCAlgorithm.cs", label="Type = type", span="45-45"];
m38_2 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="QCAlgorithm.cs", label="Code = code.ToString()", span="46-46"];
m38_3 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="QCAlgorithm.cs", label="Message = message", span="47-47"];
m38_4 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m38_14 [cluster="string.Format(string, object, object, object)", file="QCAlgorithm.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m38_11 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.ToString()", file="QCAlgorithm.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.ToString()", span="70-70"];
m38_12 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.ToString()", file="QCAlgorithm.cs", label="return string.Format(''{0} - Code: {1} - {2}'', Type, Code, Message);", span="72-72"];
m38_13 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.ToString()", file="QCAlgorithm.cs", label="Exit QuantConnect.Brokerages.BrokerageMessageEvent.ToString()", span="70-70"];
m38_5 [cluster="int.ToString()", file="QCAlgorithm.cs", label="Entry int.ToString()", span="0-0"];
m38_6 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m38_7 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="QCAlgorithm.cs", label="Type = type", span="58-58"];
m38_8 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="QCAlgorithm.cs", label="Code = code", span="59-59"];
m38_9 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="QCAlgorithm.cs", label="Message = message", span="60-60"];
m38_10 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m38_15 [file="QCAlgorithm.cs", label="QuantConnect.Brokerages.BrokerageMessageEvent", span=""];
m39_0 [cluster="QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", span="30-30"];
m39_1 [cluster="QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", span="30-30"];
m39_2 [cluster="QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", span="150-150"];
m39_3 [cluster="QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", file="QCAlgorithm.Plotting.cs", label="return $''{UserId}-{ProjectId}-{AlgorithmId}'';", span="152-152"];
m39_4 [cluster="QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", span="150-150"];
m39_5 [file="QCAlgorithm.Plotting.cs", label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
m42_44 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="703-703"];
m42_45 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="703-703"];
m42_46 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="703-703"];
m42_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38"];
m42_0 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m42_1 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="27-27"];
m42_2 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="29-29"];
m42_6 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.Language)", span="37-37"];
m42_3 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="32-32"];
m42_4 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="33-33"];
m42_5 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="34-34"];
m42_7 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m42_41 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m42_49 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="714-714"];
m42_50 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="715-715"];
m42_51 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="716-716"];
m42_52 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m42_48 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m42_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m42_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63"];
m42_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86"];
m42_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                //new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="640-703"];
m42_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109"];
m42_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132"];
m42_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155"];
m42_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178"];
m42_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201"];
m42_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224"];
m42_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247"];
m42_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270"];
m42_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293"];
m42_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316"];
m42_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339"];
m42_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362"];
m42_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.27''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''-0.002''},\r\n                {''Beta'', ''0.411''},\r\n                {''Annual Standard Deviation'', ''0.112''},\r\n                {''Annual Variance'', ''0.013''},\r\n                {''Information Ratio'', ''-0.352''},\r\n                {''Tracking Error'', ''0.134''},\r\n                {''Treynor Ratio'', ''0.073''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="364-385"];
m42_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408"];
m42_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431"];
m42_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454"];
m42_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477"];
m42_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500"];
m42_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523"];
m42_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="525-546"];
m42_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="548-569"];
m42_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="571-592"];
m42_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="RegressionTests.cs", label="0: var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.53%''},\r\n                {''Average Loss'', ''-2.00%''},\r\n                {''Compounding Annual Return'', ''65.652%''},\r\n                {''Drawdown'', ''5.000%''},\r\n                {''Expectancy'', ''-0.158''},\r\n                {''Net Profit'', ''0.555%''},\r\n                {''Sharpe Ratio'', ''0.731''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.26''},\r\n                {''Alpha'', ''-1.237''},\r\n                {''Beta'', ''1.189''},\r\n                {''Annual Standard Deviation'', ''0.544''},\r\n                {''Annual Variance'', ''0.296''},\r\n                {''Information Ratio'', ''-8.473''},\r\n                {''Tracking Error'', ''0.115''},\r\n                {''Treynor Ratio'', ''0.335''},\r\n                {''Total Fees'', ''$2023.72''}\r\n            }", span="594-615"];
m42_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638"];
m42_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m42_40 [cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m42_47 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m42_42 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m42_43 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m42_8 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="RegressionTests.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m42_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m42_53 [file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m43_88 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m43_124 [cluster="Unk.Where", file="SecurityPortfolioManager.cs", label="Entry Unk.Where", span=""];
m43_212 [cluster="decimal.RoundToSignificantDigits(int)", file="SecurityPortfolioManager.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
m43_173 [cluster="QuantConnect.Securities.Security.GetLastData()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="585-585"];
m43_62 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="245-245"];
m43_63 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="return Securities.Select(x => new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)).GetEnumerator();", span="247-247"];
m43_64 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="245-245"];
m43_229 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m43_47 [cluster="TestCaseData.cstr", file="SecurityPortfolioManager.cs", label="Entry TestCaseData.cstr", span=""];
m43_49 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SecurityPortfolioManager.cs", label="Algorithm = algorithm", span="714-714"];
m43_48 [cluster="Unk.SetName", file="SecurityPortfolioManager.cs", label="Entry Unk.SetName", span=""];
m43_50 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SecurityPortfolioManager.cs", label="Statistics = statistics", span="715-715"];
m43_51 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SecurityPortfolioManager.cs", label="Language = language", span="716-716"];
m43_52 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m43_0 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", span="66-66"];
m43_1 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="SecurityPortfolioManager.cs", label="Securities = securityManager", span="68-68"];
m43_2 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", color=green, community=0, file="SecurityPortfolioManager.cs", label="0: Transactions = transactions", span="69-69"];
m43_6 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts = new List<UnsettledCashAmount>()", span="74-74"];
m43_3 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="SecurityPortfolioManager.cs", label="MarginCallModel = new DefaultMarginCallModel(this, defaultOrderProperties)", span="70-70"];
m43_4 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="SecurityPortfolioManager.cs", label="CashBook = new CashBook()", span="72-72"];
m43_5 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="SecurityPortfolioManager.cs", label="UnsettledCashBook = new CashBook()", span="73-73"];
m43_7 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash = CashBook[CashBook.AccountCurrency]", span="76-76"];
m43_46 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="703-703"];
m43_144 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", span="689-689"];
m43_175 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionSecurities = Securities\r\n                                   .Where(x => x.Value.Type == SecurityType.Option && split.Symbol == x.Key.Underlying && x.Value.Holdings.Invested)\r\n                                   .ToList()", span="692-694"];
m43_182 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var newSymbol = GetSplitAdjustedSymbol(symbol, splitFactor)", span="709-709"];
m43_184 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Securities.Remove(symbol)", span="713-713"];
m43_185 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionHoldings = new Option.OptionHolding(Securities[newSymbol], (Option.OptionHolding)security.Holdings)", span="714-714"];
m43_187 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Securities[newSymbol].Holdings = optionHoldings", span="716-716"];
m43_176 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label=optionSecurities, span="696-696"];
m43_181 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var splitFactor = split.SplitFactor", span="708-708"];
m43_177 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var symbol = securityKV.Key", span="698-698"];
m43_183 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="newSymbol != null", span="711-711"];
m43_178 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var security = securityKV.Value", span="699-699"];
m43_186 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="optionHoldings.SplitUnderlying(splitFactor)", span="715-715"];
m43_180 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="mode != DataNormalizationMode.Raw", span="703-703"];
m43_189 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="optionHoldings.SplitUnderlying(splitFactor)", span="721-721"];
m43_188 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionHoldings = (Option.OptionHolding)security.Holdings", span="720-720"];
m43_179 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var mode = security.DataNormalizationMode", span="702-702"];
m43_190 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", span="689-689"];
m43_40 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="var i = 0", span="179-179"];
m43_199 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", span="726-726"];
m43_210 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="return Securities\r\n                    .Select(x => x.Key)\r\n                    .Where(symbolIsFound)\r\n                    .FirstOrDefault();", span="767-770"];
m43_203 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Func<Symbol, bool> symbolIsFound = x =>\r\n            {\r\n                var rootSymbol = newRootSymbol ?? symbol.Underlying.Value;\r\n                var strike = newStrike != 0.0m ? newStrike : symbol.ID.StrikePrice;\r\n\r\n                return x.HasUnderlying == true &&\r\n                        x.Underlying.Value == rootSymbol &&\r\n                        x.ID.Date == symbol.ID.Date &&\r\n                        x.ID.OptionRight == symbol.ID.OptionRight &&\r\n                        x.ID.Market == symbol.ID.Market &&\r\n                        x.ID.OptionStyle == symbol.ID.OptionStyle &&\r\n                        x.ID.StrikePrice == strike;\r\n            }", span="733-745"];
m43_207 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newStrike = Math.Round(symbol.ID.StrikePrice / inverseFactor, 2)", span="758-758"];
m43_209 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newRootSymbol = symbol.Underlying.Value + ''1''", span="764-764"];
m43_202 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="string newRootSymbol = null", span="731-731"];
m43_201 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="decimal newStrike = 0.0m", span="730-730"];
m43_204 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="splitFactor > 1.0m", span="748-748"];
m43_200 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var inverseFactor = 1.0m / splitFactor", span="728-728"];
m43_206 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="inverseFactor.RoundToSignificantDigits(5) % 1 == 0", span="755-755"];
m43_208 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newStrike = Math.Round(symbol.ID.StrikePrice / inverseFactor, 2)", span="763-763"];
m43_205 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newRootSymbol = symbol.Underlying.Value + ''1''", span="751-751"];
m43_211 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", span="726-726"];
m43_138 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="98-98"];
m43_43 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="array[i] = new KeyValuePair<Symbol, SecurityHolding>(asset.Key, asset.Value.Holdings)", span="184-184"];
m43_87 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m43_192 [cluster="Unk.GetSplitAdjustedSymbol", file="SecurityPortfolioManager.cs", label="Entry Unk.GetSplitAdjustedSymbol", span=""];
m43_8 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="SecurityPortfolioManager.cs", label="_baseCurrencyUnsettledCash = UnsettledCashBook[CashBook.AccountCurrency]", span="77-77"];
m43_131 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="596-596"];
m43_132 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var security = Securities[dividend.Symbol]", span="598-598"];
m43_136 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.AddAmount(total)", span="608-608"];
m43_133 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var mode = security.DataNormalizationMode", span="601-601"];
m43_135 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var total = security.Holdings.Quantity*dividend.Distribution", span="605-605"];
m43_134 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="mode == DataNormalizationMode.Raw || mode == DataNormalizationMode.SplitAdjusted", span="602-602"];
m43_137 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="596-596"];
m43_215 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="733-745"];
m43_44 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="i++", span="186-186"];
m43_45 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", span="176-176"];
m43_59 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="237-237"];
m43_65 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="247-247"];
m43_128 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="577-577"];
m43_196 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="693-693"];
m43_220 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="768-768"];
m43_61 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="237-237"];
m43_60 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)", span="237-237"];
m43_67 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="247-247"];
m43_66 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)", span="247-247"];
m43_130 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="577-577"];
m43_129 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Holdings.Quantity != 0 && x.Price != 0", span="577-577"];
m43_197 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Value.Type == SecurityType.Option && split.Symbol == x.Key.Underlying && x.Value.Holdings.Invested", span="693-693"];
m43_198 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="693-693"];
m43_218 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="return x.HasUnderlying == true &&\r\n                        x.Underlying.Value == rootSymbol &&\r\n                        x.ID.Date == symbol.ID.Date &&\r\n                        x.ID.OptionRight == symbol.ID.OptionRight &&\r\n                        x.ID.Market == symbol.ID.Market &&\r\n                        x.ID.OptionStyle == symbol.ID.OptionStyle &&\r\n                        x.ID.StrikePrice == strike;", span="738-744"];
m43_222 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="768-768"];
m43_221 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Key", span="768-768"];
m43_216 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="var rootSymbol = newRootSymbol ?? symbol.Underlying.Value", span="735-735"];
m43_217 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="var strike = newStrike != 0.0m ? newStrike : symbol.ID.StrikePrice", span="736-736"];
m43_219 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="733-745"];
m43_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m43_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m43_41 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m43_42 [cluster="Unk.Select", file="SecurityPortfolioManager.cs", label="Entry Unk.Select", span=""];
m43_251 [cluster="System.Collections.Generic.List<T>.Remove(T)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0"];
m43_223 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="782-782"];
m43_225 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Transactions.TransactionRecord.ContainsKey(clone)", span="785-785"];
m43_227 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Transactions.TransactionRecord.Add(clone, transactionProfitLoss)", span="789-789"];
m43_224 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="var clone = time", span="784-784"];
m43_226 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="clone = clone.AddMilliseconds(1)", span="787-787"];
m43_228 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="782-782"];
m43_195 [cluster="QuantConnect.Securities.Option.OptionHolding.SplitUnderlying(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Option.OptionHolding.SplitUnderlying(decimal)", span="48-48"];
m43_230 [cluster="System.DateTime.AddMilliseconds(double)", file="SecurityPortfolioManager.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m43_174 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
m43_231 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m43_80 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="484-484"];
m43_82 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="CashBook.TryGetValue(symbol, out item)", span="487-487"];
m43_85 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="CashBook.Add(symbol, cash, conversionRate)", span="494-494"];
m43_81 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Cash item", span="486-486"];
m43_83 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="item.SetAmount(cash)", span="489-489"];
m43_84 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="item.ConversionRate = conversionRate", span="490-490"];
m43_86 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="484-484"];
m43_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SecurityPortfolioManager.cs", label="0: var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86"];
m43_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38"];
m43_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m43_102 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="542-542"];
m43_104 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var totalMarginUsed = TotalMarginUsed", span="546-546"];
m43_107 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var averageHoldingsLeverage = TotalAbsoluteHoldingsCost/totalMarginUsed", span="555-555"];
m43_110 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginRemaining = MarginRemaining", span="561-561"];
m43_111 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var totalPortfolioValue = TotalPortfolioValue", span="564-564"];
m43_116 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="Securities.Values.Where(x => x.Holdings.Quantity != 0 && x.Price != 0)", span="577-577"];
m43_118 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginCallOrder = MarginCallModel.GenerateMarginCallOrder(security, totalPortfolioValue, totalMarginUsed, maintenanceMarginRequirement)", span="580-580"];
m43_103 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="issueMarginCallWarning = false", span="544-544"];
m43_105 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="totalMarginUsed <= 0", span="549-549"];
m43_108 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="averageHoldingsLeverage <= 1.0m", span="556-556"];
m43_112 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginRemaining <= totalPortfolioValue*0.05m", span="565-565"];
m43_115 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginRemaining <= 0", span="574-574"];
m43_120 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginCallOrders.Add(marginCallOrder)", span="583-583"];
m43_119 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginCallOrder != null && marginCallOrder.Quantity != 0", span="581-581"];
m43_117 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var maintenanceMarginRequirement = security.MarginModel.GetMaintenanceMarginRequirement(security)", span="579-579"];
m43_121 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="issueMarginCallWarning = marginCallOrders.Count > 0", span="586-586"];
m43_106 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="return new List<SubmitOrderRequest>();", span="551-551"];
m43_109 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="return new List<SubmitOrderRequest>();", span="558-558"];
m43_113 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="issueMarginCallWarning = true", span="567-567"];
m43_114 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginCallOrders = new List<SubmitOrderRequest>()", span="571-571"];
m43_122 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="return marginCallOrders;", span="589-589"];
m43_123 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="542-542"];
m43_58 [cluster="Unk.GetEnumerator", file="SecurityPortfolioManager.cs", label="Entry Unk.GetEnumerator", span=""];
m43_238 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", span="813-813"];
m43_239 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label=_unsettledCashAmountsLocker, span="815-815"];
m43_240 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts.Add(item)", span="817-817"];
m43_241 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", span="813-813"];
m43_191 [cluster="Unk.ToList", file="SecurityPortfolioManager.cs", label="Entry Unk.ToList", span=""];
m43_143 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", span="626-626"];
m43_145 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var security = Securities[split.Symbol]", span="628-628"];
m43_155 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.AddAmount(extraCash)", span="650-650"];
m43_146 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.Type != SecurityType.Equity", span="631-631"];
m43_148 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var mode = security.DataNormalizationMode", span="637-637"];
m43_151 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var quantity = security.Holdings.Quantity / split.SplitFactor", span="644-644"];
m43_152 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var avgPrice = security.Holdings.AveragePrice * split.SplitFactor", span="645-645"];
m43_156 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.Holdings.SetHoldings(avgPrice, (int)quantity)", span="652-652"];
m43_157 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var next = security.GetLastData()", span="655-655"];
m43_170 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.SetMarketPrice(next)", span="683-683"];
m43_154 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var extraCash = leftOver * split.ReferencePrice", span="649-649"];
m43_160 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="next.Value *= split.SplitFactor", span="664-664"];
m43_163 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.Open *= split.SplitFactor", span="670-670"];
m43_164 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.High *= split.SplitFactor", span="671-671"];
m43_165 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.Low *= split.SplitFactor", span="672-672"];
m43_168 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick.AskPrice *= split.SplitFactor", span="679-679"];
m43_169 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick.BidPrice *= split.SplitFactor", span="680-680"];
m43_147 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="return;", span="633-633"];
m43_149 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="mode != DataNormalizationMode.Raw", span="638-638"];
m43_153 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var leftOver = quantity - (int)quantity", span="648-648"];
m43_158 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="next == null", span="656-656"];
m43_161 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var tradeBar = next as TradeBar", span="667-667"];
m43_166 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var tick = next as Tick", span="676-676"];
m43_167 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick != null", span="677-677"];
m43_150 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="return;", span="640-640"];
m43_159 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="return;", span="662-662"];
m43_162 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar != null", span="668-668"];
m43_171 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", span="626-626"];
m43_89 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="504-504"];
m43_90 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="var security = Securities[symbol]", span="506-506"];
m43_91 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="return security.MarginModel.GetMarginRemaining(this, security, direction);", span="507-507"];
m43_92 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="504-504"];
m43_139 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="616-616"];
m43_140 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="ApplySplitToEquities(split)", span="618-618"];
m43_141 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="ApplySplitToOptions(split)", span="619-619"];
m43_142 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="616-616"];
m43_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''1.29%''},\r\n                {''Average Loss'', ''0.0%''},\r\n                {''Compounding Annual Return'', ''920.568%''},\r\n                {''Drawdown'', ''3.300%''},\r\n                {''Expectancy'', ''-0.333''},\r\n                {''Net Profit'', ''2.578%''},\r\n                {''Sharpe Ratio'', ''3.031''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.001''},\r\n                {''Beta'', ''0.995''},\r\n                {''Annual Standard Deviation'', ''0.451''},\r\n                {''Annual Variance'', ''0.203''},\r\n                {''Information Ratio'', ''-3.42''},\r\n                {''Tracking Error'', ''0.002''},\r\n                {''Treynor Ratio'', ''1.374''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="594-615"];
m43_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SecurityPortfolioManager.cs", label="2: var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638"];
m43_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SecurityPortfolioManager.cs", label="0: return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                //new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                //new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                //new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                //new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                //new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="640-703"];
m43_194 [cluster="QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Option.OptionHolding)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Option.OptionHolding)", span="39-39"];
m43_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132"];
m43_54 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="235-235"];
m43_55 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="return Securities.Select(x => new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)).GetEnumerator();", span="237-237"];
m43_56 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="235-235"];
m43_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SecurityPortfolioManager.cs", label="0: var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523"];
m43_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SecurityPortfolioManager.cs", label="0: var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="525-546"];
m43_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="548-569"];
m43_94 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="517-517"];
m43_95 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="return GetMarginRemaining(symbol, direction);", span="519-519"];
m43_96 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="517-517"];
m43_97 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="530-530"];
m43_98 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="var security = Securities[fill.Symbol]", span="532-532"];
m43_99 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="security.PortfolioModel.ProcessFill(this, security, fill)", span="533-533"];
m43_100 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="530-530"];
m43_242 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="824-824"];
m43_243 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label=_unsettledCashAmountsLocker, span="826-826"];
m43_244 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts.ToList()", span="828-828"];
m43_246 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts.Remove(item)", span="834-834"];
m43_247 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="UnsettledCashBook[item.Currency].AddAmount(-item.Amount)", span="837-837"];
m43_248 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="CashBook[item.Currency].AddAmount(item.Amount)", span="840-840"];
m43_245 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="timeUtc >= item.SettlementTimeUtc", span="831-831"];
m43_249 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="824-824"];
m43_101 [cluster="QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="30-30"];
m43_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63"];
m43_53 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m43_232 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="797-797"];
m43_234 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Securities.TryGetValue(symbol, out security)", span="801-801"];
m43_233 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Security security", span="799-799"];
m43_235 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="return security;", span="803-803"];
m43_236 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="return null;", span="806-806"];
m43_237 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="797-797"];
m43_214 [cluster="Unk.FirstOrDefault", file="SecurityPortfolioManager.cs", label="Entry Unk.FirstOrDefault", span=""];
m43_250 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m43_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="571-592"];
m43_93 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63"];
m43_125 [cluster="Unk.GetMaintenanceMarginRequirement", file="SecurityPortfolioManager.cs", label="Entry Unk.GetMaintenanceMarginRequirement", span=""];
m43_213 [cluster="System.Math.Round(decimal, int)", file="SecurityPortfolioManager.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m43_77 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="473-473"];
m43_78 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.SetAmount(cash)", span="475-475"];
m43_79 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="473-473"];
m43_127 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m43_172 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m43_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109"];
m43_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155"];
m43_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178"];
m43_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201"];
m43_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224"];
m43_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247"];
m43_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270"];
m43_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SecurityPortfolioManager.cs", label="0: var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293"];
m43_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316"];
m43_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SecurityPortfolioManager.cs", label="0: var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339"];
m43_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362"];
m43_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SecurityPortfolioManager.cs", label="0: var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''127''},\r\n                {''Average Win'', ''3.65%''},\r\n                {''Average Loss'', ''-2.38%''},\r\n                {''Compounding Annual Return'', ''2.295%''},\r\n                {''Drawdown'', ''31.900%''},\r\n                {''Expectancy'', ''0.209''},\r\n                {''Net Profit'', ''28.377%''},\r\n                {''Sharpe Ratio'', ''0.226''},\r\n                {''Loss Rate'', ''52%''},\r\n                {''Win Rate'', ''48%''},\r\n                {''Profit-Loss Ratio'', ''1.54''},\r\n                {''Alpha'', ''-0.006''},\r\n                {''Beta'', ''0.394''},\r\n                {''Annual Standard Deviation'', ''0.108''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''-0.392''},\r\n                {''Tracking Error'', ''0.135''},\r\n                {''Treynor Ratio'', ''0.062''},\r\n                {''Total Fees'', ''$604.31''},\r\n            }", span="364-385"];
m43_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SecurityPortfolioManager.cs", label="0: var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408"];
m43_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431"];
m43_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454"];
m43_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SecurityPortfolioManager.cs", label="0: var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477"];
m43_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SecurityPortfolioManager.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500"];
m43_126 [cluster="Unk.GenerateMarginCallOrder", file="SecurityPortfolioManager.cs", label="Entry Unk.GenerateMarginCallOrder", span=""];
m43_193 [cluster="Unk.Remove", file="SecurityPortfolioManager.cs", label="Entry Unk.Remove", span=""];
m43_252 [file="SecurityPortfolioManager.cs", label="QuantConnect.Securities.SecurityPortfolioManager", span=""];
m43_253 [file="SecurityPortfolioManager.cs", label="QuantConnect.Data.Market.Split", span=""];
m43_254 [file="SecurityPortfolioManager.cs", label="QuantConnect.Symbol", span=""];
m43_255 [file="SecurityPortfolioManager.cs", label=newRootSymbol, span=""];
m43_256 [file="SecurityPortfolioManager.cs", label=newStrike, span=""];
m44_37 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="247-247"];
m44_9 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="83-83"];
m44_10 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Quantity < 0", span="86-86"];
m44_11 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return Quantity*Math.Max(LimitPrice, security.Price);", span="88-88"];
m44_13 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return Quantity*Math.Min(LimitPrice, security.Price);", span="94-94"];
m44_12 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Quantity > 0", span="92-92"];
m44_14 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return 0m;", span="97-97"];
m44_15 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="83-83"];
m44_31 [cluster="string.Format(string, object, object, object)", file="StopLimitOrder.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m44_16 [cluster="System.Math.Max(decimal, decimal)", file="StopLimitOrder.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m44_2 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="66-66"];
m44_3 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="StopLimitOrder.cs", label="StopPrice = stopPrice", span="69-69"];
m44_4 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="StopLimitOrder.cs", label="LimitPrice = limitPrice", span="70-70"];
m44_5 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="StopLimitOrder.cs", label="tag == ''''", span="72-72"];
m44_6 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="StopLimitOrder.cs", label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'') + '' Limit Price: '' + limitPrice.ToString(''C'')", span="75-75"];
m44_7 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="66-66"];
m44_29 [cluster="QuantConnect.Orders.Order.ToString()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="232-232"];
m44_17 [cluster="System.Math.Min(decimal, decimal)", file="StopLimitOrder.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m44_32 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.Clone()", span="133-133"];
m44_33 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="var order = new StopLimitOrder {StopPrice = StopPrice, LimitPrice = LimitPrice}", span="135-135"];
m44_34 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="CopyTo(order)", span="136-136"];
m44_35 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="return order;", span="137-137"];
m44_36 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.Clone()", span="133-133"];
m44_25 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="209-209"];
m44_0 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="52-52"];
m44_1 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="52-52"];
m44_26 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.ToString()", span="124-124"];
m44_27 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="return string.Format(''{0} at stop {1} limit {2}'', base.ToString(), StopPrice.SmartRounding(), LimitPrice.SmartRounding());", span="126-126"];
m44_28 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.ToString()", span="124-124"];
m44_18 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="104-104"];
m44_19 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="base.ApplyUpdateOrderRequest(request)", span="106-106"];
m44_20 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="request.StopPrice.HasValue", span="107-107"];
m44_21 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="StopPrice = request.StopPrice.Value", span="109-109"];
m44_22 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="request.LimitPrice.HasValue", span="111-111"];
m44_23 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="LimitPrice = request.LimitPrice.Value", span="113-113"];
m44_24 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="104-104"];
m44_8 [cluster="decimal.ToString(string)", file="StopLimitOrder.cs", label="Entry decimal.ToString(string)", span="0-0"];
m44_30 [cluster="decimal.SmartRounding()", file="StopLimitOrder.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m44_38 [file="StopLimitOrder.cs", label="QuantConnect.Orders.StopLimitOrder", span=""];
m46_17 [cluster="string.Format(string, params object[])", file="SubmitOrderRequest.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m46_12 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.ToString()", span="130-130"];
m46_13 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="var proxy = Order.CreateOrder(this)", span="133-133"];
m46_14 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="return string.Format(''{0} UTC: Submit Order: ({1}) - {2} {3}'', Time, OrderId, proxy, Tag) + '' Status: '' + Status;", span="134-134"];
m46_15 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.ToString()", span="130-130"];
m46_9 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="118-118"];
m46_10 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="SubmitOrderRequest.cs", label="OrderId = orderId", span="120-120"];
m46_11 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="118-118"];
m46_16 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="268-268"];
m46_0 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m46_1 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="SubmitOrderRequest.cs", label="SecurityType = securityType", span="105-105"];
m46_2 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="SubmitOrderRequest.cs", label="Symbol = symbol", span="106-106"];
m46_3 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="SubmitOrderRequest.cs", label="OrderType = orderType", span="107-107"];
m46_4 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="SubmitOrderRequest.cs", label="Quantity = quantity", span="108-108"];
m46_5 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="SubmitOrderRequest.cs", label="LimitPrice = limitPrice", span="109-109"];
m46_6 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="SubmitOrderRequest.cs", label="StopPrice = stopPrice", span="110-110"];
m46_7 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", color=red, community=0, file="SubmitOrderRequest.cs", label="0: OrderProperties = properties", span="111-111"];
m46_8 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m46_18 [file="SubmitOrderRequest.cs", label="QuantConnect.Orders.SubmitOrderRequest", span=""];
m47_31 [cluster="int.ToString()", file="SubscriptionManager.cs", label="Entry int.ToString()", span="0-0"];
m47_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.AdvanceSeconds(double)", file="SubscriptionManager.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.AdvanceSeconds(double)", span="95-95"];
m47_27 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.CreateSymbol(int)", file="SubscriptionManager.cs", label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", span=""];
m47_28 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.CreateSymbol(int)", file="SubscriptionManager.cs", label="return new Symbol(SecurityIdentifier.GenerateBase(x.ToString(), Market.USA), x.ToString());", span="53-53"];
m47_29 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.CreateSymbol(int)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.CreateSymbol(int)", span="51-51"];
m47_23 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SubscriptionManager.cs", label="Debug($''Purchased Stock: {orderEvent.Symbol}'')", span="63-63"];
m47_24 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SubscriptionManager.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="59-59"];
m47_25 [cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="SubscriptionManager.cs", label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50"];
m47_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.GetUtcNow()", file="SubscriptionManager.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.GetUtcNow()", span="57-57"];
m47_22 [cluster="Unk.AreEqual", file="SubscriptionManager.cs", label="Entry Unk.AreEqual", span=""];
m47_17 [cluster="RateLimitEnumerator<BaseData>.cstr", file="SubscriptionManager.cs", label="Entry RateLimitEnumerator<BaseData>.cstr", span=""];
m47_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="SubscriptionManager.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="55-55"];
m47_19 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", file="SubscriptionManager.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", span="26-26"];
m47_15 [cluster="Unk.Select", file="SubscriptionManager.cs", label="Entry Unk.Select", span=""];
m47_11 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", span="30-30"];
m47_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", span="30-30"];
m47_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", color=green, community=0, file="SubscriptionManager.cs", label="0: var rateLimit = new RateLimitEnumerator<BaseData>(data, timeProvider, Time.OneSecond)", span="35-35"];
m47_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="SubscriptionManager.cs", label="var data = Enumerable.Range(0, 100).Select(x => new Tick {Symbol = CreateSymbol(x)}).GetEnumerator()", span="34-34"];
m47_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="SubscriptionManager.cs", label="Assert.IsTrue(rateLimit.MoveNext())", span="37-37"];
m47_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="SubscriptionManager.cs", label="var currentTime = new DateTime(2015, 10, 10, 13, 6, 0)", span="32-32"];
m47_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="SubscriptionManager.cs", label="var timeProvider = new ManualTimeProvider(currentTime, TimeZones.Utc)", span="33-33"];
m47_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="SubscriptionManager.cs", label="rateLimit.MoveNext() && rateLimit.Current == null", span="39-39"];
m47_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="SubscriptionManager.cs", label="timeProvider.AdvanceSeconds(0.1)", span="41-41"];
m47_8 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", color=red, community=0, file="SubscriptionManager.cs", label="0: var delta = (timeProvider.GetUtcNow() - currentTime).TotalSeconds", span="44-44"];
m47_9 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="SubscriptionManager.cs", label="Assert.AreEqual(1, delta)", span="46-46"];
m47_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="SubscriptionManager.cs", label="Assert.AreEqual(''1'', data.Current.Symbol.Value)", span="48-48"];
m47_26 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m47_14 [cluster="System.Linq.Enumerable.Range(int, int)", file="SubscriptionManager.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m47_12 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="SubscriptionManager.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m47_18 [cluster="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.EqualWeightingPortfolioConstructionModel()", file="SubscriptionManager.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.EqualWeightingPortfolioConstructionModel()", span="29-29"];
m47_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.ManualTimeProvider(System.DateTime, DateTimeZone)", file="SubscriptionManager.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.ManualTimeProvider(System.DateTime, DateTimeZone)", span="47-47"];
m47_30 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="SubscriptionManager.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m47_32 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="SubscriptionManager.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m48_24 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", span="78-78"];
m48_26 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(3, types.Count)", span="82-82"];
m48_27 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[0].Item1)", span="83-83"];
m48_28 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Quote, types[0].Item2)", span="84-84"];
m48_29 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[1].Item1)", span="85-85"];
m48_30 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Trade, types[1].Item2)", span="86-86"];
m48_31 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[2].Item1)", span="87-87"];
m48_32 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.OpenInterest, types[2].Item2)", span="88-88"];
m48_25 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="80-80"];
m48_33 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", span="78-78"];
m48_52 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m48_7 [cluster="Unk.AreEqual", file="SubscriptionManagerTests.cs", label="Entry Unk.AreEqual", span=""];
m48_50 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m48_49 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m48_14 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", span="62-62"];
m48_16 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(3, types.Count)", span="66-66"];
m48_17 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(QuoteBar), types[0].Item1)", span="67-67"];
m48_18 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Quote, types[0].Item2)", span="68-68"];
m48_19 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(TradeBar), types[1].Item1)", span="69-69"];
m48_20 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Trade, types[1].Item2)", span="70-70"];
m48_21 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(OpenInterest), types[2].Item1)", span="71-71"];
m48_22 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.OpenInterest, types[2].Item2)", span="72-72"];
m48_15 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="64-64"];
m48_23 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", span="62-62"];
m48_8 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m48_11 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedDataType, types[0].Item1)", span="55-55"];
m48_12 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedTickType, types[0].Item2)", span="56-56"];
m48_10 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(1, types.Count)", span="54-54"];
m48_9 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution, true)", span="52-52"];
m48_13 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m48_51 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m48_6 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="115-115"];
m48_45 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="var timeKeeper = new TimeKeeper(DateTime.UtcNow)", span="117-117"];
m48_47 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="return subscriptionManager.LookupSubscriptionConfigDataTypes(securityType, resolution, isCanonical);", span="119-119"];
m48_46 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="var subscriptionManager = new SubscriptionManager(new AlgorithmSettings(), timeKeeper)", span="118-118"];
m48_48 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="115-115"];
m48_34 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", span="94-94"];
m48_40 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=green, community=0, file="SubscriptionManagerTests.cs", label="0: Assert.AreEqual(typeof(TradeBar), types[0].Item1)", span="107-107"];
m48_35 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(SecurityType.Crypto, resolution)", span="96-96"];
m48_37 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="resolution == Resolution.Tick", span="100-100"];
m48_41 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=green, community=0, file="SubscriptionManagerTests.cs", label="0: Assert.AreEqual(typeof(QuoteBar), types[1].Item1)", span="108-108"];
m48_42 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=green, community=0, file="SubscriptionManagerTests.cs", label="0: Assert.AreEqual(TickType.Trade, types[0].Item2)", span="111-111"];
m48_39 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[1].Item1)", span="103-103"];
m48_43 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=green, community=0, file="SubscriptionManagerTests.cs", label="0: Assert.AreEqual(TickType.Quote, types[1].Item2)", span="112-112"];
m48_36 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(2, types.Count)", span="98-98"];
m48_38 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[0].Item1)", span="102-102"];
m48_44 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", span="94-94"];
m48_0 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="36-36"];
m48_3 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedDataType, types[0].Item1)", span="41-41"];
m48_4 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedTickType, types[0].Item2)", span="42-42"];
m48_2 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(1, types.Count)", span="40-40"];
m48_1 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="38-38"];
m48_5 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="36-36"];
m49_550 [cluster="QuantConnect.Holding.Holding()", file="Tick.cs", label="Entry QuantConnect.Holding.Holding()", span="78-78"];
m49_573 [cluster="System.TimeSpan.FromHours(double)", file="Tick.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m49_146 [cluster="IB.ExecutionFilter.cstr", file="Tick.cs", label="Entry IB.ExecutionFilter.cstr", span=""];
m49_246 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", span="549-549"];
m49_247 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="IB.ContractDetails details = null", span="551-551"];
m49_250 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails = (sender, args) =>\r\n            {\r\n                // ignore other requests\r\n                if (args.RequestId != requestID) return;\r\n                details = args.ContractDetails;\r\n                _contractDetails.TryAdd(contract.Symbol, details);\r\n                manualResetEvent.Set();\r\n            }", span="557-564"];
m49_252 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="_client.RequestContractDetails(requestID, contract)", span="569-569"];
m49_248 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="var requestID = GetNextRequestID()", span="552-552"];
m49_249 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="554-554"];
m49_253 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="manualResetEvent.WaitOne(1000)", span="572-572"];
m49_251 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="_client.ContractDetails += clientOnContractDetails", span="566-566"];
m49_254 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="_client.ContractDetails -= clientOnContractDetails", span="575-575"];
m49_255 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="return details;", span="577-577"];
m49_256 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", span="549-549"];
m49_101 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Tick.cs", label="Entry QuantConnect.Util.ObjectActivator.Clone(object)", span="92-92"];
m49_147 [cluster="Unk.Connect", file="Tick.cs", label="Entry Unk.Connect", span=""];
m49_96 [cluster="Unk.ToArray", file="Tick.cs", label="Entry Unk.ToArray", span=""];
m49_204 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="474-474"];
m49_205 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="Tick.cs", label="_client != null", span="476-476"];
m49_206 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="Tick.cs", label="_client.Disconnect()", span="478-478"];
m49_207 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="Tick.cs", label="_client.Dispose()", span="479-479"];
m49_208 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="474-474"];
m49_414 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", span="848-848"];
m49_415 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="Order order", span="855-855"];
m49_416 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="var mappedSymbol = MapSymbol(contract)", span="856-856"];
m49_417 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="var orderType = ConvertOrderType(ibOrder.OrderType)", span="857-857"];
m49_420 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="order = new MarketOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        new DateTime() // not sure how to get this data\r\n                        )", span="861-864"];
m49_422 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="order = new LimitOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        ibOrder.LimitPrice,\r\n                        new DateTime()\r\n                        )", span="867-871"];
m49_424 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="order = new StopMarketOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        ibOrder.AuxPrice,\r\n                        new DateTime()\r\n                        )", span="874-878"];
m49_426 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="order = new StopLimitOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        ibOrder.AuxPrice,\r\n                        ibOrder.LimitPrice,\r\n                        new DateTime()\r\n                        )", span="881-886"];
m49_428 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="order.SecurityType = ConvertSecurityType(contract.SecurityType)", span="892-892"];
m49_429 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="order.BrokerId.Add(ibOrder.OrderId)", span="893-893"];
m49_418 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label=orderType, span="858-858"];
m49_427 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="throw new InvalidEnumArgumentException(''orderType'', (int) orderType, typeof (OrderType));", span="889-889"];
m49_419 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="OrderType.Market", span="860-860"];
m49_421 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="OrderType.Limit", span="866-866"];
m49_423 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="OrderType.StopMarket", span="873-873"];
m49_425 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="OrderType.StopLimit", span="880-880"];
m49_430 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="return order;", span="895-895"];
m49_431 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", span="848-848"];
m49_588 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="Tick.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m49_294 [cluster="System.Collections.ObjectModel.Collection<T>.Collection()", file="Tick.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Collection()", span="0-0"];
m49_522 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", span="1043-1043"];
m49_523 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label=type, span="1045-1045"];
m49_524 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.Stock", span="1047-1047"];
m49_526 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.Option", span="1050-1050"];
m49_528 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.Commodity", span="1053-1053"];
m49_530 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.Cash", span="1056-1056"];
m49_532 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.Future", span="1059-1059"];
m49_534 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.Index", span="1063-1063"];
m49_542 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="throw new ArgumentOutOfRangeException(''type'');", span="1073-1073"];
m49_525 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="return SecurityType.Equity;", span="1048-1048"];
m49_527 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="return SecurityType.Option;", span="1051-1051"];
m49_529 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="return SecurityType.Commodity;", span="1054-1054"];
m49_531 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="return SecurityType.Forex;", span="1057-1057"];
m49_533 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="return SecurityType.Future;", span="1060-1060"];
m49_535 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.FutureOption", span="1064-1064"];
m49_536 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.Bag", span="1065-1065"];
m49_537 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.Bond", span="1066-1066"];
m49_538 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.Warrant", span="1067-1067"];
m49_539 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.Bill", span="1068-1068"];
m49_540 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="IB.SecurityType.Undefined", span="1069-1069"];
m49_541 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="return SecurityType.Base;", span="1070-1070"];
m49_543 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", span="1043-1043"];
m49_338 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="691-691"];
m49_339 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="Tick.cs", label="_disconnected1100Fired && !IsWithinScheduledServerResetTimes()", span="695-695"];
m49_340 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="Tick.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, ''Connection with Interactive Brokers lost. '' +\r\n                    ''This could be because of internet connectivity issues or a log in from another location.''\r\n                    ))", span="698-700"];
m49_341 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="Tick.cs", label="_disconnected1100Fired && IsWithinScheduledServerResetTimes()", span="702-702"];
m49_342 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="Tick.cs", label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Within server reset times, trying to wait for reconnect...'')", span="704-704"];
m49_343 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="Tick.cs", label="Task.Delay(TimeSpan.FromMinutes(1)).ContinueWith(_ => TryWaitForReconnect())", span="706-706"];
m49_344 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="691-691"];
m49_94 [cluster="Unk.ToList", file="Tick.cs", label="Entry Unk.ToList", span=""];
m49_203 [cluster="Unk.Disconnect", file="Tick.cs", label="Entry Unk.Disconnect", span=""];
m49_112 [cluster="Unk.Substring", file="Tick.cs", label="Entry Unk.Substring", span=""];
m49_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", span="123-123"];
m49_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_orderMapping = orderMapping", span="126-126"];
m49_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_account = account", span="127-127"];
m49_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_host = host", span="128-128"];
m49_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_port = port", span="129-129"];
m49_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_agentDescription = agentDescription", span="131-131"];
m49_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_clientID = IncrementClientID()", span="130-130"];
m49_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_client = new IB.IBClient()", span="132-132"];
m49_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_client.UpdatePortfolio += HandlePortfolioUpdates", span="135-135"];
m49_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_client.OrderStatus += HandleOrderStatusUpdates", span="136-136"];
m49_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_client.UpdateAccountValue += HandleUpdateAccountValue", span="137-137"];
m49_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_client.Error += HandleError", span="138-138"];
m49_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="_client.NextValidId += (sender, e) =>\r\n            {\r\n                // only grab this id when we initialize, and we'll manually increment it here to avoid threading issues\r\n                if (_nextValidID == 0)\r\n                {\r\n                    _nextValidID = e.OrderId;\r\n                    _waitForNextValidID.Set();\r\n                }\r\n                Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId);\r\n            }", span="141-150"];
m49_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", span="123-123"];
m49_231 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", span="1117-1117"];
m49_556 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="Tick.cs", label="_nextValidID == 0", span="1121-1121"];
m49_557 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="Tick.cs", label="Thread.Yield()", span="1121-1121"];
m49_558 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="Tick.cs", label="return Interlocked.Increment(ref _nextValidID);", span="1123-1123"];
m49_559 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", span="1117-1117"];
m49_232 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Tick.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m49_257 [cluster="Unk.RequestContractDetails", file="Tick.cs", label="Entry Unk.RequestContractDetails", span=""];
m49_413 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="941-941"];
m49_463 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Tick.cs", label=type, span="943-943"];
m49_470 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Tick.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(OrderType));", span="949-949"];
m49_464 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Tick.cs", label="OrderType.Market", span="945-945"];
m49_466 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Tick.cs", label="OrderType.Limit", span="946-946"];
m49_468 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Tick.cs", label="OrderType.StopMarket", span="947-947"];
m49_465 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Tick.cs", label="return IB.OrderType.Market;", span="945-945"];
m49_467 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Tick.cs", label="return IB.OrderType.Limit;", span="946-946"];
m49_469 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Tick.cs", label="return IB.OrderType.Stop;", span="947-947"];
m49_471 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="941-941"];
m49_551 [cluster="Unk.MapSymbol", file="Tick.cs", label="Entry Unk.MapSymbol", span=""];
m49_158 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Tick.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m49_544 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Tick.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m49_325 [cluster="Unk.Format", file="Tick.cs", label="Entry Unk.Format", span=""];
m49_82 [cluster="Unk.ConvertOrder", file="Tick.cs", label="Entry Unk.ConvertOrder", span=""];
m49_437 [cluster="StopMarketOrder.cstr", file="Tick.cs", label="Entry StopMarketOrder.cstr", span=""];
m49_359 [cluster="Unk.Parse", file="Tick.cs", label="Entry Unk.Parse", span=""];
m49_121 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="320-320"];
m49_122 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="Tick.cs", label="return _cashBalances.Select(x => new Cash(x.Key, x.Value, GetUsdConversion(x.Key))).ToList();", span="322-322"];
m49_123 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="320-320"];
m49_410 [cluster="IB.Order.cstr", file="Tick.cs", label="Entry IB.Order.cstr", span=""];
m49_77 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="Tick.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m49_363 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", span="738-738"];
m49_364 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="update.Status == IB.OrderStatus.PreSubmitted\r\n                 || update.Status == IB.OrderStatus.PendingSubmit", span="742-743"];
m49_366 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="var status = ConvertOrderStatus(update.Status)", span="748-748"];
m49_371 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ERROR -- '' + update.OrderId)", span="761-761"];
m49_372 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="var order = _orderMapping.GetOrderByBrokerageId(update.OrderId)", span="764-764"];
m49_374 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Unable to locate order with BrokerageID '' + update.OrderId)", span="767-767"];
m49_376 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="var fillQuantity = order.Direction == OrderDirection.Buy ? update.Filled : -update.Filled", span="772-772"];
m49_377 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="var orderEvent = new OrderEvent(order, ''Interactive Brokers Fill Event'')\r\n                {\r\n                    Status = status,\r\n                    FillPrice = update.AverageFillPrice,\r\n                    FillQuantity = fillQuantity\r\n                }", span="773-778"];
m49_378 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="update.Remaining != 0", span="779-779"];
m49_379 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="orderEvent.Message += '' - '' + update.Remaining + '' remaining''", span="781-781"];
m49_383 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Unable to resolve executions for BrokerageID: '' + update.OrderId + '' - '' + err.Message)", span="793-793"];
m49_365 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="return;", span="745-745"];
m49_367 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="status != OrderStatus.PartiallyFilled &&\r\n                    status != OrderStatus.Filled &&\r\n                    status != OrderStatus.Canceled &&\r\n                    status != OrderStatus.Submitted &&\r\n                    status != OrderStatus.Invalid", span="749-753"];
m49_368 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Status: '' + status)", span="755-755"];
m49_370 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="status == OrderStatus.Invalid", span="759-759"];
m49_369 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="return;", span="756-756"];
m49_373 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="order == null", span="765-765"];
m49_375 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="return;", span="768-768"];
m49_380 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="_recentOrderEvents.Add(orderEvent.ToString())", span="786-786"];
m49_381 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="OnOrderEvent(orderEvent)", span="788-788"];
m49_382 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label=InvalidOperationException, span="791-791"];
m49_384 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label=Exception, span="795-795"];
m49_385 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + err.Message)", span="797-797"];
m49_386 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", span="738-738"];
m49_472 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", span="956-956"];
m49_473 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="Tick.cs", label=type, span="958-958"];
m49_480 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="Tick.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(OrderType));", span="964-964"];
m49_474 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="Tick.cs", label="IB.OrderType.Market", span="960-960"];
m49_476 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="Tick.cs", label="IB.OrderType.Limit", span="961-961"];
m49_478 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="Tick.cs", label="IB.OrderType.Stop", span="962-962"];
m49_475 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="Tick.cs", label="return OrderType.Market;", span="960-960"];
m49_477 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="Tick.cs", label="return OrderType.Limit;", span="961-961"];
m49_479 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="Tick.cs", label="return OrderType.StopMarket;", span="962-962"];
m49_481 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", span="956-956"];
m49_324 [cluster="Unk.Replace", file="Tick.cs", label="Entry Unk.Replace", span=""];
m49_433 [cluster="Unk.ConvertOrderType", file="Tick.cs", label="Entry Unk.ConvertOrderType", span=""];
m49_113 [cluster="System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", file="Tick.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", span="0-0"];
m49_412 [cluster="System.Math.Abs(int)", file="Tick.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m49_387 [cluster="Unk.ConvertOrderStatus", file="Tick.cs", label="Entry Unk.ConvertOrderStatus", span=""];
m49_95 [cluster="Unk.Where", file="Tick.cs", label="Entry Unk.Where", span=""];
m49_332 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Tick.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="110-110"];
m49_390 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", span="1199-1199"];
m49_581 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="Tick.cs", label="_hash.Add(item)", span="1201-1201"];
m49_582 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="Tick.cs", label="_queue.Enqueue(item)", span="1203-1203"];
m49_586 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="Tick.cs", label="return false;", span="1210-1210"];
m49_583 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="Tick.cs", label="_queue.Count > _size", span="1204-1204"];
m49_584 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="Tick.cs", label="_queue.Dequeue()", span="1206-1206"];
m49_585 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="Tick.cs", label="return true;", span="1208-1208"];
m49_587 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", span="1199-1199"];
m49_74 [cluster="System.Collections.Generic.List<T>.List()", file="Tick.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m49_295 [cluster="Unk.RequestMarketData", file="Tick.cs", label="Entry Unk.RequestMarketData", span=""];
m49_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", span="1139-1139"];
m49_566 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", file="Tick.cs", label="return Interlocked.Increment(ref _nextClientID);", span="1141-1141"];
m49_567 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", span="1139-1139"];
m49_350 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", span="713-713"];
m49_351 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="Tick.cs", label="_accountProperties[e.Currency + '':'' + e.Key] = e.Value", span="719-719"];
m49_352 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="Tick.cs", label="e.Key == AccountValueKeys.NetLiquidationByCurrency && e.Currency != ''BASE''", span="722-722"];
m49_353 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="Tick.cs", label="var cashBalance = decimal.Parse(e.Value)", span="724-724"];
m49_354 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="Tick.cs", label="_cashBalances.AddOrUpdate(e.Currency, cashBalance)", span="725-725"];
m49_355 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="Tick.cs", label="OnAccountChanged(new AccountEvent(e.Currency, cashBalance))", span="726-726"];
m49_356 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="Tick.cs", label=Exception, span="729-729"];
m49_357 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="Tick.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleUpdateAccountValue(): '' + err.Message)", span="731-731"];
m49_358 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", span="713-713"];
m49_234 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", span="815-815"];
m49_401 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="Tick.cs", label="var ibOrder = new IB.Order\r\n            {\r\n                ClientId = _clientID,\r\n                OrderId = ibOrderID,\r\n                Action = ConvertOrderDirection(order.Direction),\r\n                TotalQuantity = Math.Abs(order.Quantity),\r\n                OrderType = ConvertOrderType(order.Type),\r\n                AllOrNone = false,\r\n                Tif = IB.TimeInForce.GoodTillCancel,\r\n                Transmit = true,\r\n                Rule80A = _agentDescription\r\n            }", span="817-828"];
m49_402 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="Tick.cs", label="var limitOrder = order as LimitOrder", span="830-830"];
m49_403 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="Tick.cs", label="var stopMarketOrder = order as StopMarketOrder", span="831-831"];
m49_405 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="Tick.cs", label="ibOrder.LimitPrice = limitOrder.LimitPrice", span="834-834"];
m49_407 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="Tick.cs", label="ibOrder.AuxPrice = stopMarketOrder.StopPrice", span="838-838"];
m49_408 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="Tick.cs", label="return ibOrder;", span="845-845"];
m49_404 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="Tick.cs", label="limitOrder != null", span="832-832"];
m49_406 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="Tick.cs", label="stopMarketOrder != null", span="836-836"];
m49_409 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", span="815-815"];
m49_347 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="706-706"];
m49_22 [cluster="lambda expression", file="Tick.cs", label="_nextValidID = e.OrderId", span="146-146"];
m49_24 [cluster="lambda expression", file="Tick.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId)", span="149-149"];
m49_20 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="141-150"];
m49_21 [cluster="lambda expression", file="Tick.cs", label="_nextValidID == 0", span="144-144"];
m49_23 [cluster="lambda expression", file="Tick.cs", label="_waitForNextValidID.Set()", span="147-147"];
m49_25 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="141-150"];
m49_80 [cluster="lambda expression", file="Tick.cs", label="orders.Add(ConvertOrder(args.Order, args.Contract))", span="255-255"];
m49_85 [cluster="lambda expression", color=red, community=0, file="Tick.cs", label="0: manualResetEvent.Set()", span="260-260"];
m49_79 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="252-256"];
m49_81 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="252-256"];
m49_84 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="257-261"];
m49_86 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="257-261"];
m49_98 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="287-287"];
m49_102 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="290-309"];
m49_118 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="309-309"];
m49_99 [cluster="lambda expression", file="Tick.cs", label="(Holding) ObjectActivator.Clone(x.Value)", span="287-287"];
m49_100 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="287-287"];
m49_103 [cluster="lambda expression", file="Tick.cs", label="local.Type != SecurityType.Forex", span="293-293"];
m49_104 [cluster="lambda expression", file="Tick.cs", label="local.ConversionRate = 1m", span="296-296"];
m49_106 [cluster="lambda expression", file="Tick.cs", label="string currency = local.Symbol.Substring(3)", span="300-300"];
m49_108 [cluster="lambda expression", file="Tick.cs", label="local.ConversionRate = 1m", span="303-303"];
m49_110 [cluster="lambda expression", file="Tick.cs", label="return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));", span="308-308"];
m49_105 [cluster="lambda expression", file="Tick.cs", label="return null;", span="297-297"];
m49_107 [cluster="lambda expression", file="Tick.cs", label="currency == ''USD''", span="301-301"];
m49_115 [cluster="lambda expression", file="Tick.cs", label="local.ConversionRate = GetUsdConversion(currency)", span="308-308"];
m49_109 [cluster="lambda expression", file="Tick.cs", label="return null;", span="304-304"];
m49_111 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="290-309"];
m49_114 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="308-308"];
m49_116 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="308-308"];
m49_119 [cluster="lambda expression", file="Tick.cs", label="x != null", span="309-309"];
m49_120 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="309-309"];
m49_124 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="322-322"];
m49_125 [cluster="lambda expression", file="Tick.cs", label="new Cash(x.Key, x.Value, GetUsdConversion(x.Key))", span="322-322"];
m49_126 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="322-322"];
m49_156 [cluster="lambda expression", file="Tick.cs", label="details.Add(args)", span="358-358"];
m49_152 [cluster="lambda expression", file="Tick.cs", label="manualResetEvent.Set()", span="354-354"];
m49_151 [cluster="lambda expression", file="Tick.cs", label="args.RequestId == requestID", span="354-354"];
m49_155 [cluster="lambda expression", file="Tick.cs", label="args.RequestId == requestID", span="358-358"];
m49_150 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="352-355"];
m49_153 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="352-355"];
m49_154 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="356-359"];
m49_157 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="356-359"];
m49_192 [cluster="lambda expression", file="Tick.cs", label="Log.Trace(''InteractiveBrokersBrokerage.AccountDownloadEnd(): Finished account download for '' + args.AccountName)", span="426-426"];
m49_196 [cluster="lambda expression", file="Tick.cs", label="firstAccountUpdateReceived.Set()", span="436-436"];
m49_191 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="424-428"];
m49_193 [cluster="lambda expression", file="Tick.cs", label="_accountHoldingsResetEvent.Set()", span="427-427"];
m49_194 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="424-428"];
m49_195 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="434-437"];
m49_197 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="434-437"];
m49_262 [cluster="lambda expression", file="Tick.cs", label="_contractDetails.TryAdd(contract.Symbol, details)", span="562-562"];
m49_259 [cluster="lambda expression", file="Tick.cs", label="args.RequestId != requestID", span="560-560"];
m49_263 [cluster="lambda expression", file="Tick.cs", label="manualResetEvent.Set()", span="563-563"];
m49_261 [cluster="lambda expression", file="Tick.cs", label="details = args.ContractDetails", span="561-561"];
m49_258 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="557-564"];
m49_260 [cluster="lambda expression", file="Tick.cs", label="return;", span="560-560"];
m49_264 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="557-564"];
m49_297 [cluster="lambda expression", file="Tick.cs", label="x == invertedSymbol || x == normalSymbol", span="594-594"];
m49_296 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="594-594"];
m49_300 [cluster="lambda expression", file="Tick.cs", label="args.TickerId == ticker && args.TickType == IB.TickType.AskPrice", span="618-618"];
m49_302 [cluster="lambda expression", file="Tick.cs", label="manualResetEvent.Set()", span="621-621"];
m49_301 [cluster="lambda expression", file="Tick.cs", label="rate = args.Price", span="620-620"];
m49_298 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="594-594"];
m49_299 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="616-623"];
m49_303 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="616-623"];
m49_335 [cluster="lambda expression", file="Tick.cs", label="Entry lambda expression", span="666-666"];
m49_336 [cluster="lambda expression", file="Tick.cs", label="TryWaitForReconnect()", span="666-666"];
m49_337 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="666-666"];
m49_348 [cluster="lambda expression", file="Tick.cs", label="TryWaitForReconnect()", span="706-706"];
m49_349 [cluster="lambda expression", file="Tick.cs", label="Exit lambda expression", span="706-706"];
m49_39 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="187-187"];
m49_40 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Log.Trace(''InteractiveBrokersBrokerage.UpdateOrder(): Symbol: '' + order.Symbol + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="191-191"];
m49_41 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="IBPlaceOrder(order, false)", span="193-193"];
m49_42 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Tick.cs", label=Exception, span="195-195"];
m49_45 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="return true;", span="200-200"];
m49_43 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Log.Error(''InteractiveBrokersBrokerage.UpdateOrder(): '' + err.Message)", span="197-197"];
m49_44 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="return false;", span="198-198"];
m49_46 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="187-187"];
m49_331 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", file="Tick.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", span="103-103"];
m49_482 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", span="971-971"];
m49_483 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label=status, span="973-973"];
m49_505 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="throw new InvalidEnumArgumentException(''status'', (int)status, typeof(IB.OrderStatus));", span="1006-1006"];
m49_484 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.ApiPending", span="975-975"];
m49_488 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.ApiCancelled", span="980-980"];
m49_492 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.Submitted", span="985-985"];
m49_494 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.Filled", span="988-988"];
m49_496 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.PartiallyFilled", span="991-991"];
m49_498 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.Error", span="994-994"];
m49_500 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.Inactive", span="997-997"];
m49_503 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.None", span="1001-1001"];
m49_485 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.PendingSubmit", span="976-976"];
m49_486 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.PreSubmitted", span="977-977"];
m49_487 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="return OrderStatus.New;", span="978-978"];
m49_489 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.PendingCancel", span="981-981"];
m49_490 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="IB.OrderStatus.Canceled", span="982-982"];
m49_491 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="return OrderStatus.Canceled;", span="983-983"];
m49_493 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="return OrderStatus.Submitted;", span="986-986"];
m49_495 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="return OrderStatus.Filled;", span="989-989"];
m49_497 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="return OrderStatus.PartiallyFilled;", span="992-992"];
m49_499 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="return OrderStatus.Invalid;", span="995-995"];
m49_501 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="Log.Error(''InteractiveBrokersBrokerage.ConvertOrderStatus(): Inactive order'')", span="998-998"];
m49_502 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="return OrderStatus.None;", span="999-999"];
m49_504 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="return OrderStatus.None;", span="1002-1002"];
m49_506 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", span="971-971"];
m49_75 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="Tick.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m49_333 [cluster="BrokerageMessageEvent.cstr", file="Tick.cs", label="Entry BrokerageMessageEvent.cstr", span=""];
m49_345 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1144-1144"];
m49_568 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="Tick.cs", label="var time = DateTime.Now.TimeOfDay", span="1147-1147"];
m49_569 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="Tick.cs", label="var result = time < TimeSpan.FromHours(0.45) || time > TimeSpan.FromHours(23.65)", span="1148-1148"];
m49_570 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="Tick.cs", label="Log.Trace(''InteractiveBrokersBrokerage.IsWithinScheduledServerRestTimes(): '' + result)", span="1150-1150"];
m49_571 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="Tick.cs", label="return result;", span="1152-1152"];
m49_572 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1144-1144"];
m49_292 [cluster="Unk.CreateContract", file="Tick.cs", label="Entry Unk.CreateContract", span=""];
m49_432 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", span="1103-1103"];
m49_552 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="contract.SecurityType == IB.SecurityType.Cash", span="1105-1105"];
m49_553 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="return contract.Symbol + contract.Currency;", span="1108-1108"];
m49_554 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="return contract.Symbol;", span="1110-1110"];
m49_555 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", span="1103-1103"];
m49_326 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="Tick.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m49_83 [cluster="Unk.Add", file="Tick.cs", label="Entry Unk.Add", span=""];
m49_434 [cluster="MarketOrder.cstr", file="Tick.cs", label="Entry MarketOrder.cstr", span=""];
m49_198 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="464-464"];
m49_199 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="Tick.cs", label="!IsConnected", span="466-466"];
m49_200 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="Tick.cs", label="return;", span="466-466"];
m49_201 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="Tick.cs", label="_client.Disconnect()", span="468-468"];
m49_202 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="464-464"];
m49_209 [cluster="Unk.Dispose", file="Tick.cs", label="Entry Unk.Dispose", span=""];
m49_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string)", span="105-105"];
m49_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string)", span="105-105"];
m49_361 [cluster="AccountEvent.cstr", file="Tick.cs", label="Entry AccountEvent.cstr", span=""];
m49_57 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="235-235"];
m49_58 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="return order.SecurityType != SecurityType.Base;", span="238-238"];
m49_59 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="235-235"];
m49_362 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="Tick.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="148-148"];
m49_561 [cluster="System.Threading.Interlocked.Increment(ref int)", file="Tick.cs", label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0"];
m49_127 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="61-61"];
m49_438 [cluster="StopLimitOrder.cstr", file="Tick.cs", label="Entry StopLimitOrder.cstr", span=""];
m49_36 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Tick.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129"];
m49_435 [cluster="System.DateTime.DateTime()", file="Tick.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m49_93 [cluster="Unk.Select", file="Tick.cs", label="Entry Unk.Select", span=""];
m49_188 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="Tick.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m49_78 [cluster="System.TimeoutException.TimeoutException(string)", file="Tick.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m49_26 [cluster="System.Threading.EventWaitHandle.Set()", file="Tick.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m49_574 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", span="1189-1189"];
m49_575 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="Tick.cs", label="_size = size", span="1191-1191"];
m49_576 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="Tick.cs", label="_queue = new Queue<T>(size)", span="1192-1192"];
m49_577 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="Tick.cs", label="_hash = new HashSet<T>()", span="1193-1193"];
m49_578 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", span="1189-1189"];
m49_560 [cluster="System.Threading.Thread.Yield()", file="Tick.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m49_87 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="285-285"];
m49_88 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="Tick.cs", label="var holdings = _accountHoldings.Select(x => (Holding) ObjectActivator.Clone(x.Value)).ToList()", span="287-287"];
m49_89 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="Tick.cs", label="var tasks = holdings.Select(local =>\r\n            {\r\n                // we need to resolve the conversion rate for non-USD currencies\r\n                if (local.Type != SecurityType.Forex)\r\n                {\r\n                    // this assumes all non-forex are us denominated, we should add the currency to 'holding'\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n                // if quote currency is in USD don't bother making the request\r\n                string currency = local.Symbol.Substring(3);\r\n                if (currency == ''USD'')\r\n                {\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n\r\n                // this will allow us to do this in parallel\r\n                return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));\r\n            }).Where(x => x != null).ToArray()", span="290-309"];
m49_91 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="Tick.cs", label="return holdings;", span="313-313"];
m49_90 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="Tick.cs", label="Task.WaitAll(tasks, 5000)", span="311-311"];
m49_92 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="285-285"];
m49_329 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="Tick.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m49_388 [cluster="Unk.Error", file="Tick.cs", label="Entry Unk.Error", span=""];
m49_27 [cluster="Unk.Trace", file="Tick.cs", label="Entry Unk.Trace", span=""];
m49_439 [cluster="System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", file="Tick.cs", label="Entry System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", span="0-0"];
m49_117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="584-584"];
m49_266 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="currency == ''USD''", span="586-586"];
m49_268 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="string invertedSymbol = ''USD'' + currency", span="592-592"];
m49_269 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="string normalSymbol = currency + ''USD''", span="593-593"];
m49_277 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): Unable to resolve conversion for currency: '' + currency)", span="606-606"];
m49_267 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="return 1m;", span="588-588"];
m49_270 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="var currencyPair = Forex.CurrencyPairs.FirstOrDefault(x => x == invertedSymbol || x == normalSymbol)", span="594-594"];
m49_273 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="bool inverted = invertedSymbol == currencyPair", span="601-601"];
m49_271 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="currencyPair == null", span="595-595"];
m49_274 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="var contract = CreateContract(currencyPair, SecurityType.Forex)", span="602-602"];
m49_272 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="return 1m;", span="597-597"];
m49_287 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label=inverted, span="631-631"];
m49_275 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="var details = GetContractDetails(contract)", span="603-603"];
m49_285 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="_client.RequestMarketData(ticker, contract, priceTick, true, false)", span="627-627"];
m49_276 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="details == null", span="604-604"];
m49_279 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="int ticker = GetNextTickerID()", span="609-609"];
m49_278 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="return 1m;", span="607-607"];
m49_280 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="decimal rate = 1m", span="610-610"];
m49_283 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="EventHandler<IB.TickPriceEventArgs> clientOnTickPrice = (sender, args) =>\r\n            {\r\n                if (args.TickerId == ticker && args.TickType == IB.TickType.AskPrice)\r\n                {\r\n                    rate = args.Price;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="616-623"];
m49_281 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="611-611"];
m49_282 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="var priceTick = new Collection<IB.GenericTickType>()", span="613-613"];
m49_286 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="manualResetEvent.WaitOne(2500)", span="629-629"];
m49_284 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="_client.TickPrice += clientOnTickPrice", span="625-625"];
m49_288 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="return 1/rate;", span="633-633"];
m49_289 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="return rate;", span="635-635"];
m49_290 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="584-584"];
m49_293 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerID()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerID()", span="1131-1131"];
m49_564 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerID()", file="Tick.cs", label="return Interlocked.Increment(ref _nextTickerID);", span="1133-1133"];
m49_565 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerID()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerID()", span="1131-1131"];
m49_450 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1013-1013"];
m49_507 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label=type, span="1015-1015"];
m49_520 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(SecurityType));", span="1036-1036"];
m49_508 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="SecurityType.Equity", span="1017-1017"];
m49_510 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="SecurityType.Option", span="1020-1020"];
m49_512 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="SecurityType.Commodity", span="1023-1023"];
m49_514 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="SecurityType.Forex", span="1026-1026"];
m49_516 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="SecurityType.Future", span="1029-1029"];
m49_518 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="SecurityType.Base", span="1032-1032"];
m49_509 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="return IB.SecurityType.Stock;", span="1018-1018"];
m49_511 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="return IB.SecurityType.Option;", span="1021-1021"];
m49_513 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="return IB.SecurityType.Commodity;", span="1024-1024"];
m49_515 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="return IB.SecurityType.Cash;", span="1027-1027"];
m49_517 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="return IB.SecurityType.Future;", span="1030-1030"];
m49_519 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="throw new ArgumentException(''InteractiveBrokers does not support SecurityType.Base'');", span="1033-1033"];
m49_521 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1013-1013"];
m49_47 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="208-208"];
m49_48 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CancelOrder(): Symbol: '' + order.Symbol + '' Quantity: '' + order.Quantity)", span="212-212"];
m49_49 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="order.BrokerId", span="215-215"];
m49_52 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Log.Error(''InteractiveBrokersBrokerage.CancelOrder(): OrderID: '' + order.Id + '' - '' + err.Message)", span="224-224"];
m49_50 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="_client.CancelOrder((int) id)", span="217-217"];
m49_51 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Tick.cs", label=Exception, span="222-222"];
m49_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="return true;", span="227-227"];
m49_53 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="return false;", span="225-225"];
m49_55 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="208-208"];
m49_245 [cluster="Unk.TryGetValue", file="Tick.cs", label="Entry Unk.TryGetValue", span=""];
m49_330 [cluster="Unk.GetOrderByBrokerageId", file="Tick.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m49_397 [cluster="System.Threading.EventWaitHandle.Reset()", file="Tick.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m49_580 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="Tick.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m49_210 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="486-486"];
m49_211 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="Tick.cs", label="return new Dictionary<string, string>(_accountProperties);", span="488-488"];
m49_212 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="486-486"];
m49_590 [cluster="System.Collections.Generic.Queue<T>.Dequeue()", file="Tick.cs", label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0"];
m49_360 [cluster="Unk.AddOrUpdate", file="Tick.cs", label="Entry Unk.AddOrUpdate", span=""];
m49_579 [cluster="System.Collections.Generic.Queue<T>.Queue(int)", file="Tick.cs", label="Entry System.Collections.Generic.Queue<T>.Queue(int)", span="0-0"];
m49_233 [cluster="System.ArgumentException.ArgumentException(string)", file="Tick.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m49_291 [cluster="Unk.FirstOrDefault", file="Tick.cs", label="Entry Unk.FirstOrDefault", span=""];
m49_334 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="Tick.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="167-167"];
m49_453 [cluster="string.Substring(int)", file="Tick.cs", label="Entry string.Substring(int)", span="0-0"];
m49_76 [cluster="Unk.RequestOpenOrders", file="Tick.cs", label="Entry Unk.RequestOpenOrders", span=""];
m49_265 [cluster="Unk.TryAdd", file="Tick.cs", label="Entry Unk.TryAdd", span=""];
m49_37 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="497-497"];
m49_214 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="Connect()", span="500-500"];
m49_217 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="var contract = CreateContract(order.Symbol, order.SecurityType, exchange)", span="507-507"];
m49_219 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label=needsNewID, span="510-510"];
m49_221 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="order.BrokerId.Add(id)", span="514-514"];
m49_223 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="order.BrokerId.Any()", span="517-517"];
m49_224 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="ibOrderID = (int)order.BrokerId[0]", span="520-520"];
m49_226 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="var ibOrder = ConvertOrder(order, ibOrderID)", span="527-527"];
m49_215 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="!IsConnected", span="502-502"];
m49_216 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="throw new InvalidOperationException(''InteractiveBrokersBrokerage.IBPlaceOrder(): Unable to place order while not connected.'');", span="504-504"];
m49_218 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="int ibOrderID = 0", span="509-509"];
m49_227 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="_client.PlaceOrder(ibOrder.OrderId, contract, ibOrder)", span="528-528"];
m49_220 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="int id = GetNextBrokerageOrderID()", span="513-513"];
m49_222 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="ibOrderID = id", span="515-515"];
m49_225 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="throw new ArgumentException(''Expected order with populated BrokerId for updating orders.'');", span="524-524"];
m49_228 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="497-497"];
m49_97 [cluster="Unk.WaitAll", file="Tick.cs", label="Entry Unk.WaitAll", span=""];
m49_589 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="Tick.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m49_391 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="804-804"];
m49_392 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="_accountHoldingsResetEvent.Reset()", span="806-806"];
m49_393 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="var holding = CreateHolding(e)", span="807-807"];
m49_395 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="OnPortfolioChanged(new SecurityEvent(holding.Symbol, e.Position, e.AverageCost))", span="809-809"];
m49_394 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="_accountHoldings[holding.Symbol] = holding", span="808-808"];
m49_396 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="804-804"];
m49_213 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Tick.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m49_60 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="245-245"];
m49_61 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="Tick.cs", label="var orders = new List<Order>()", span="247-247"];
m49_62 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="Tick.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="249-249"];
m49_63 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", color=red, community=0, file="Tick.cs", label="0: EventHandler<IB.OpenOrderEventArgs> clientOnOpenOrder = (sender, args) =>\r\n            {\r\n                // convert IB order objects returned from RequestOpenOrders\r\n                orders.Add(ConvertOrder(args.Order, args.Contract));\r\n            }", span="252-256"];
m49_72 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", color=red, community=0, file="Tick.cs", label="0: return orders;", span="278-278"];
m49_64 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", color=red, community=0, file="Tick.cs", label="0: EventHandler<EventArgs> clientOnOpenOrderEnd = (sender, args) =>\r\n            {\r\n                // this signals the end of our RequestOpenOrders call\r\n                manualResetEvent.Set();\r\n            }", span="257-261"];
m49_68 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", color=red, community=0, file="Tick.cs", label="0: !manualResetEvent.WaitOne(5000)", span="269-269"];
m49_65 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", color=red, community=0, file="Tick.cs", label="0: _client.OpenOrder += clientOnOpenOrder", span="263-263"];
m49_70 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", color=red, community=0, file="Tick.cs", label="0: _client.OpenOrder -= clientOnOpenOrder", span="275-275"];
m49_66 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", color=red, community=0, file="Tick.cs", label="0: _client.OpenOrderEnd += clientOnOpenOrderEnd", span="264-264"];
m49_71 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", color=red, community=0, file="Tick.cs", label="0: _client.OpenOrderEnd -= clientOnOpenOrderEnd", span="276-276"];
m49_67 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", color=red, community=0, file="Tick.cs", label="0: _client.RequestOpenOrders()", span="266-266"];
m49_69 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", color=red, community=0, file="Tick.cs", label="1: throw new TimeoutException(''InteractiveBrokersBrokerage.GetOpenOrders(): Operation took longer than 1 second.'');", span="271-271"];
m49_73 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="245-245"];
m49_28 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="166-166"];
m49_29 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Log.Trace(''InteractiveBrokersBrokerage.PlaceOrder(): Symbol: '' + order.Symbol + '' Quantity: '' + order.Quantity)", span="170-170"];
m49_30 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="IBPlaceOrder(order, true)", span="172-172"];
m49_31 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="return true;", span="173-173"];
m49_32 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Tick.cs", label=Exception, span="175-175"];
m49_33 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Log.Error(''InteractiveBrokersBrokerage.PlaceOrder(): '' + err.Message)", span="177-177"];
m49_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="return false;", span="178-178"];
m49_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="166-166"];
m49_128 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", span="329-329"];
m49_129 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="var filter = new IB.ExecutionFilter\r\n            {\r\n                AcctCode = _account,\r\n                ClientId = _clientID,\r\n                Exchange = exchange,\r\n                SecurityType = type ?? IB.SecurityType.Undefined,\r\n                Symbol = symbol,\r\n                Time = timeSince ?? DateTime.MinValue,\r\n                Side = side ?? IB.ActionSide.Undefined\r\n            }", span="331-340"];
m49_130 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="var details = new List<IB.ExecDetailsEventArgs>()", span="342-342"];
m49_139 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="client.RequestExecutions(requestID, filter)", span="365-365"];
m49_131 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="var client = new IB.IBClient()", span="343-343"];
m49_136 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="EventHandler<IB.ExecDetailsEventArgs> clientOnExecDetails = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == requestID) details.Add(args);\r\n                }", span="356-359"];
m49_144 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="return details;", span="377-377"];
m49_132 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="client.Connect(_host, _port, IncrementClientID())", span="345-345"];
m49_137 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", color=red, community=0, file="Tick.cs", label="0: client.ExecDetails += clientOnExecDetails", span="361-361"];
m49_133 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="347-347"];
m49_134 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="int requestID = GetNextRequestID()", span="349-349"];
m49_135 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="EventHandler<IB.ExecutionDataEndEventArgs> clientOnExecutionDataEnd = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == requestID) manualResetEvent.Set();\r\n                }", span="352-355"];
m49_140 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="!manualResetEvent.WaitOne(5000)", span="367-367"];
m49_138 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="client.ExecutionDataEnd += clientOnExecutionDataEnd", span="362-362"];
m49_143 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="client.ExecutionDataEnd -= clientOnExecutionDataEnd", span="374-374"];
m49_142 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="client.ExecDetails -= clientOnExecDetails", span="373-373"];
m49_141 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetExecutions(): Operation took longer than 1 second.'');", span="369-369"];
m49_145 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", span="329-329"];
m49_190 [cluster="Unk.RequestAccountUpdates", file="Tick.cs", label="Entry Unk.RequestAccountUpdates", span=""];
m49_235 [cluster="Unk.PlaceOrder", file="Tick.cs", label="Entry Unk.PlaceOrder", span=""];
m49_328 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="Tick.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m49_452 [cluster="string.Substring(int, int)", file="Tick.cs", label="Entry string.Substring(int, int)", span="0-0"];
m49_398 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="1080-1080"];
m49_545 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="string currencySymbol", span="1082-1082"];
m49_546 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="!Forex.CurrencySymbols.TryGetValue(e.Contract.Currency, out currencySymbol)", span="1083-1083"];
m49_548 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="return new Holding\r\n            {\r\n                Symbol = MapSymbol(e.Contract),\r\n                Type = ConvertSecurityType(e.Contract.SecurityType),\r\n                Quantity = e.Position,\r\n                AveragePrice = e.AverageCost,\r\n                MarketPrice = e.MarketPrice,\r\n                ConversionRate = 1m, // this will be overwritten when GetAccountHoldings is called to ensure fresh values\r\n                CurrencySymbol =  currencySymbol\r\n            };", span="1088-1097"];
m49_547 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="currencySymbol = ''$''", span="1085-1085"];
m49_549 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="1080-1080"];
m49_38 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Tick.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m49_436 [cluster="LimitOrder.cstr", file="Tick.cs", label="Entry LimitOrder.cstr", span=""];
m49_399 [cluster="SecurityEvent.cstr", file="Tick.cs", label="Entry SecurityEvent.cstr", span=""];
m49_327 [cluster="System.TimeSpan.FromMinutes(double)", file="Tick.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m49_411 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="926-926"];
m49_454 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="Tick.cs", label=direction, span="928-928"];
m49_461 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="Tick.cs", label="throw new InvalidEnumArgumentException(''direction'', (int) direction, typeof (OrderDirection));", span="934-934"];
m49_455 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="Tick.cs", label="OrderDirection.Buy", span="930-930"];
m49_457 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="Tick.cs", label="OrderDirection.Sell", span="931-931"];
m49_459 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="Tick.cs", label="OrderDirection.Hold", span="932-932"];
m49_456 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="Tick.cs", label="return IB.ActionSide.Buy;", span="930-930"];
m49_458 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="Tick.cs", label="return IB.ActionSide.Sell;", span="931-931"];
m49_460 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="Tick.cs", label="return IB.ActionSide.Undefined;", span="932-932"];
m49_462 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="926-926"];
m49_159 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="383-383"];
m49_160 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label=IsConnected, span="385-385"];
m49_161 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="return;", span="385-385"];
m49_162 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="_accountHoldings.Clear()", span="388-388"];
m49_163 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="_accountProperties.Clear()", span="389-389"];
m49_164 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="int attempt = 1", span="391-391"];
m49_165 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label=true, span="392-392"];
m49_166 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Attempting to connect ('' + attempt + ''/10) ...'')", span="396-396"];
m49_169 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="attempt++ < 10", span="405-405"];
m49_173 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="!_waitForNextValidID.WaitOne(5000)", span="418-418"];
m49_167 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="_client.Connect(_host, _port, _clientID)", span="399-399"];
m49_168 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label=Exception, span="402-402"];
m49_170 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="Thread.Sleep(5000)", span="407-407"];
m49_171 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="Log.Error(''InteractiveBrokersBrokerage.Connect(): '' + err.Message)", span="412-412"];
m49_172 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="throw;", span="413-413"];
m49_174 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 5 seconds.'');", span="420-420"];
m49_175 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="EventHandler<IB.AccountDownloadEndEventArgs> clientOnAccountDownloadEnd = (sender, args) =>\r\n            {\r\n                Log.Trace(''InteractiveBrokersBrokerage.AccountDownloadEnd(): Finished account download for '' + args.AccountName);\r\n                _accountHoldingsResetEvent.Set();\r\n            }", span="424-428"];
m49_176 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="_client.AccountDownloadEnd += clientOnAccountDownloadEnd", span="429-429"];
m49_185 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", span="457-457"];
m49_177 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="var firstAccountUpdateReceived = new ManualResetEvent(false)", span="433-433"];
m49_178 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="EventHandler<IB.UpdateAccountValueEventArgs> clientOnUpdateAccountValue = (sender, args) =>\r\n            {\r\n                firstAccountUpdateReceived.Set();\r\n            }", span="434-437"];
m49_181 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="firstAccountUpdateReceived.WaitOne(2500)", span="445-445"];
m49_179 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="_client.UpdateAccountValue += clientOnUpdateAccountValue", span="439-439"];
m49_186 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", span="458-458"];
m49_180 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="_client.RequestAccountUpdates(true, _account)", span="442-442"];
m49_182 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="Thread.Sleep(2500)", span="449-449"];
m49_183 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="!_accountHoldingsResetEvent.WaitOne(5000)", span="451-451"];
m49_184 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetAccountHoldings(): Operation took longer than 5 seconds.'');", span="453-453"];
m49_187 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="383-383"];
m49_400 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.SecurityEvent)", file="Tick.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.SecurityEvent)", span="129-129"];
m49_304 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", span="641-641"];
m49_305 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="e.ErrorMsg = e.ErrorMsg.Replace(''\r\n'', ''. '').Replace(''\r'', ''. '').Replace(''\n'', ''. '')", span="646-646"];
m49_306 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="Log.Trace(string.Format(''InteractiveBrokersBrokerage.HandleError(): Order: {0} ErrorCode: {1} - {2}'', e.TickerId, e.ErrorCode, e.ErrorMsg))", span="647-647"];
m49_308 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="ErrorCodes.Contains((int) e.ErrorCode)", span="651-651"];
m49_310 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="WarningCodes.Contains((int) e.ErrorCode)", span="655-655"];
m49_312 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="(int) e.ErrorCode == 1100 && !_disconnected1100Fired", span="661-661"];
m49_315 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="(int) e.ErrorCode == 1102", span="668-668"];
m49_317 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="InvalidatingCodes.Contains((int)e.ErrorCode)", span="674-674"];
m49_318 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="Log.Trace(string.Format(''InteractiveBrokersBrokerage.HandleError.InvalidateOrder(): Order: {0} ErrorCode: {1} - {2}'', e.TickerId, e.ErrorCode, e.ErrorMsg))", span="676-676"];
m49_319 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="var order = _orderMapping.GetOrderByBrokerageId(e.TickerId)", span="679-679"];
m49_322 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, (int) e.ErrorCode, e.ErrorMsg))", span="684-684"];
m49_307 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="var brokerageMessageType = BrokerageMessageType.Information", span="650-650"];
m49_309 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="brokerageMessageType = BrokerageMessageType.Error", span="653-653"];
m49_311 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="brokerageMessageType = BrokerageMessageType.Warning", span="657-657"];
m49_313 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="_disconnected1100Fired = true", span="663-663"];
m49_314 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="Task.Delay(TimeSpan.FromMinutes(1)).ContinueWith(task => TryWaitForReconnect())", span="666-666"];
m49_316 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="_disconnected1100Fired = false", span="671-671"];
m49_320 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="var orderEvent = new OrderEvent(order) {Status = OrderStatus.Invalid}", span="680-680"];
m49_321 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="OnOrderEvent(orderEvent)", span="681-681"];
m49_323 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", span="641-641"];
m49_236 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", span="531-531"];
m49_237 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="IB.ContractDetails details", span="533-533"];
m49_238 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="_contractDetails.TryGetValue(contract.Symbol, out details)", span="534-534"];
m49_240 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="details = GetContractDetails(contract)", span="539-539"];
m49_239 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="return details.Summary.PrimaryExchange;", span="536-536"];
m49_241 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="details == null", span="540-540"];
m49_243 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="return details.Summary.PrimaryExchange;", span="546-546"];
m49_242 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="return null;", span="543-543"];
m49_244 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", span="531-531"];
m49_56 [cluster="Unk.CancelOrder", file="Tick.cs", label="Entry Unk.CancelOrder", span=""];
m49_440 [cluster="Unk.ConvertSecurityType", file="Tick.cs", label="Entry Unk.ConvertSecurityType", span=""];
m49_19 [cluster="IB.IBClient.cstr", file="Tick.cs", label="Entry IB.IBClient.cstr", span=""];
m49_229 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Tick.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m49_148 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestID()", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestID()", span="1126-1126"];
m49_562 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestID()", file="Tick.cs", label="return Interlocked.Increment(ref _nextRequestID);", span="1128-1128"];
m49_563 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestID()", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestID()", span="1126-1126"];
m49_189 [cluster="System.Threading.Thread.Sleep(int)", file="Tick.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m49_149 [cluster="Unk.RequestExecutions", file="Tick.cs", label="Entry Unk.RequestExecutions", span=""];
m49_346 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="Tick.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m49_230 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", span="905-905"];
m49_441 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="Tick.cs", label="var securityType = ConvertSecurityType(type)", span="907-907"];
m49_442 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="Tick.cs", label="var contract = new IB.Contract(symbol, exchange ?? ''Smart'', securityType, ''USD'')", span="908-908"];
m49_443 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="Tick.cs", label="type == SecurityType.Forex", span="909-909"];
m49_445 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="Tick.cs", label="contract.Symbol = symbol.Substring(0, 3)", span="913-913"];
m49_446 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="Tick.cs", label="contract.Currency = symbol.Substring(3)", span="914-914"];
m49_444 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="Tick.cs", label="contract.Exchange = ''IDEALPRO''", span="912-912"];
m49_447 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="Tick.cs", label="contract.PrimaryExchange = GetPrimaryExchange(contract)", span="918-918"];
m49_448 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="Tick.cs", label="return contract;", span="920-920"];
m49_449 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", span="905-905"];
m49_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping)", file="Tick.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping)", span="89-89"];
m49_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping)", file="Tick.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping)", span="89-89"];
m49_389 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="Tick.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="122-122"];
m49_451 [cluster="IB.Contract.cstr", file="Tick.cs", label="Entry IB.Contract.cstr", span=""];
m49_591 [file="Tick.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", span=""];
m49_592 [file="Tick.cs", label=orders, span=""];
m49_593 [file="Tick.cs", label=manualResetEvent, span=""];
m49_594 [file="Tick.cs", label="?", span=""];
m49_595 [file="Tick.cs", label=currency, span=""];
m49_596 [file="Tick.cs", label=requestID, span=""];
m49_597 [file="Tick.cs", label=manualResetEvent, span=""];
m49_598 [file="Tick.cs", label=details, span=""];
m49_599 [file="Tick.cs", label=firstAccountUpdateReceived, span=""];
m49_600 [file="Tick.cs", label=requestID, span=""];
m49_601 [file="Tick.cs", label="Krs.Ats.IBNet.Contract", span=""];
m49_602 [file="Tick.cs", label=manualResetEvent, span=""];
m49_603 [file="Tick.cs", label=invertedSymbol, span=""];
m49_604 [file="Tick.cs", label=normalSymbol, span=""];
m49_605 [file="Tick.cs", label=ticker, span=""];
m49_606 [file="Tick.cs", label=manualResetEvent, span=""];
m49_607 [file="Tick.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", span=""];
m50_6 [cluster="QuantConnect.Indicators.WilderMovingAverage.WilderMovingAverage(int)", file="Time.cs", label="Entry QuantConnect.Indicators.WilderMovingAverage.WilderMovingAverage(int)", span="44-44"];
m50_7 [cluster="QuantConnect.Indicators.WilderMovingAverage.WilderMovingAverage(int)", file="Time.cs", label="Exit QuantConnect.Indicators.WilderMovingAverage.WilderMovingAverage(int)", span="44-44"];
m50_14 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="Time.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m50_5 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="Time.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m50_8 [cluster="QuantConnect.Indicators.WilderMovingAverage.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Time.cs", label="Entry QuantConnect.Indicators.WilderMovingAverage.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="59-59"];
m50_9 [cluster="QuantConnect.Indicators.WilderMovingAverage.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Time.cs", label="!IsReady", span="61-61"];
m50_10 [cluster="QuantConnect.Indicators.WilderMovingAverage.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Time.cs", label="_sma.Update(input)", span="63-63"];
m50_12 [cluster="QuantConnect.Indicators.WilderMovingAverage.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Time.cs", label="return input*_k + Current*(1 - _k);", span="66-66"];
m50_11 [cluster="QuantConnect.Indicators.WilderMovingAverage.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Time.cs", label="return _sma;", span="64-64"];
m50_13 [cluster="QuantConnect.Indicators.WilderMovingAverage.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Time.cs", label="Exit QuantConnect.Indicators.WilderMovingAverage.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="59-59"];
m50_0 [cluster="QuantConnect.Indicators.WilderMovingAverage.WilderMovingAverage(string, int)", file="Time.cs", label="Entry QuantConnect.Indicators.WilderMovingAverage.WilderMovingAverage(string, int)", span="32-32"];
m50_1 [cluster="QuantConnect.Indicators.WilderMovingAverage.WilderMovingAverage(string, int)", file="Time.cs", label="_period = period", span="35-35"];
m50_2 [cluster="QuantConnect.Indicators.WilderMovingAverage.WilderMovingAverage(string, int)", file="Time.cs", label="_k = 1m / period", span="36-36"];
m50_3 [cluster="QuantConnect.Indicators.WilderMovingAverage.WilderMovingAverage(string, int)", file="Time.cs", label="_sma = new SimpleMovingAverage(name + ''_SMA'', period)", span="37-37"];
m50_4 [cluster="QuantConnect.Indicators.WilderMovingAverage.WilderMovingAverage(string, int)", file="Time.cs", label="Exit QuantConnect.Indicators.WilderMovingAverage.WilderMovingAverage(string, int)", span="32-32"];
m50_15 [file="Time.cs", label="QuantConnect.Indicators.WilderMovingAverage", span=""];
m0_456 -> m0_457  [key=0, style=solid];
m0_456 -> m0_459  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_456 -> m0_458  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_457 -> m0_7  [key=2, style=dotted];
m0_457 -> m0_458  [key=0, style=solid];
m0_457 -> m0_45  [key=2, style=dotted];
m0_459 -> m0_460  [key=0, style=solid];
m0_459 -> m0_31  [key=2, style=dotted];
m0_458 -> m0_459  [key=0, style=solid];
m0_458 -> m0_462  [key=2, style=dotted];
m0_458 -> m0_460  [color=darkseagreen4, key=1, label=ultosc, style=dashed];
m0_460 -> m0_461  [key=0, style=solid];
m0_461 -> m0_456  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_13  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_10 -> m0_29  [key=2, style=dotted];
m0_11 -> m0_7  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_27  [key=2, style=dotted];
m0_11 -> m0_30  [key=2, style=dotted];
m0_11 -> m0_21  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m0_11 -> m0_24  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_9  [key=2, style=dotted];
m0_13 -> m0_29  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_16  [key=2, style=dotted];
m0_12 -> m0_14  [color=darkseagreen4, key=1, label=ad, style=dashed];
m0_12 -> m0_28  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_27  [key=2, style=dotted];
m0_14 -> m0_30  [key=2, style=dotted];
m0_14 -> m0_22  [color=darkseagreen4, key=1, label=bar4, style=dashed];
m0_14 -> m0_23  [color=darkseagreen4, key=1, label=bar4, style=dashed];
m0_14 -> m0_24  [color=darkseagreen4, key=1, label=bar4, style=dashed];
m0_15 -> m0_10  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_28  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_31  [key=2, style=dotted];
m0_547 -> m0_548  [key=0, style=solid];
m0_548 -> m0_549  [key=0, style=solid];
m0_548 -> m0_143  [key=2, style=dotted];
m0_548 -> m0_144  [key=2, style=dotted];
m0_549 -> m0_547  [color=blue, key=0, style=bold];
m0_435 -> m0_436  [key=0, style=solid];
m0_435 -> m0_438  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_436 -> m0_7  [key=2, style=dotted];
m0_436 -> m0_437  [key=0, style=solid];
m0_438 -> m0_439  [key=0, style=solid];
m0_438 -> m0_31  [key=2, style=dotted];
m0_437 -> m0_438  [key=0, style=solid];
m0_437 -> m0_441  [key=2, style=dotted];
m0_437 -> m0_439  [color=darkseagreen4, key=1, label=tr, style=dashed];
m0_439 -> m0_440  [key=0, style=solid];
m0_440 -> m0_435  [color=blue, key=0, style=bold];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_267  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_264 -> m0_266  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_265 -> m0_7  [key=2, style=dotted];
m0_265 -> m0_266  [key=0, style=solid];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_9  [key=2, style=dotted];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_270  [key=2, style=dotted];
m0_266 -> m0_268  [color=darkseagreen4, key=1, label=mi, style=dashed];
m0_268 -> m0_269  [key=0, style=solid];
m0_269 -> m0_264  [color=blue, key=0, style=bold];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_181  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_179 -> m0_7  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_47  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_184  [key=2, style=dotted];
m0_180 -> m0_182  [color=darkseagreen4, key=1, label=identity, style=dashed];
m0_182 -> m0_183  [key=0, style=solid];
m0_183 -> m0_178  [color=blue, key=0, style=bold];
m0_477 -> m0_478  [key=0, style=solid];
m0_477 -> m0_480  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_477 -> m0_479  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_478 -> m0_7  [key=2, style=dotted];
m0_478 -> m0_479  [key=0, style=solid];
m0_480 -> m0_481  [key=0, style=solid];
m0_480 -> m0_31  [key=2, style=dotted];
m0_479 -> m0_480  [key=0, style=solid];
m0_479 -> m0_483  [key=2, style=dotted];
m0_479 -> m0_481  [color=darkseagreen4, key=1, label=williamspercentr, style=dashed];
m0_481 -> m0_482  [key=0, style=solid];
m0_482 -> m0_477  [color=blue, key=0, style=bold];
m0_404 -> m0_405  [key=0, style=solid];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_397  [key=2, style=dotted];
m0_406 -> m0_404  [color=blue, key=0, style=bold];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_358  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_355 -> m0_357  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_356 -> m0_7  [key=2, style=dotted];
m0_356 -> m0_357  [key=0, style=solid];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_47  [key=2, style=dotted];
m0_357 -> m0_358  [key=0, style=solid];
m0_357 -> m0_361  [key=2, style=dotted];
m0_357 -> m0_359  [color=darkseagreen4, key=1, label=rateofchange, style=dashed];
m0_359 -> m0_360  [key=0, style=solid];
m0_360 -> m0_355  [color=blue, key=0, style=bold];
m0_414 -> m0_415  [key=0, style=solid];
m0_414 -> m0_417  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_414 -> m0_416  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_415 -> m0_7  [key=2, style=dotted];
m0_415 -> m0_416  [key=0, style=solid];
m0_417 -> m0_418  [key=0, style=solid];
m0_417 -> m0_47  [key=2, style=dotted];
m0_416 -> m0_417  [key=0, style=solid];
m0_416 -> m0_420  [key=2, style=dotted];
m0_416 -> m0_418  [color=darkseagreen4, key=1, label=swiss, style=dashed];
m0_418 -> m0_419  [key=0, style=solid];
m0_419 -> m0_414  [color=blue, key=0, style=bold];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_316  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_313 -> m0_315  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_314 -> m0_7  [key=2, style=dotted];
m0_314 -> m0_315  [key=0, style=solid];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_47  [key=2, style=dotted];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_319  [key=2, style=dotted];
m0_315 -> m0_317  [color=darkseagreen4, key=1, label=momentum, style=dashed];
m0_317 -> m0_318  [key=0, style=solid];
m0_318 -> m0_313  [color=blue, key=0, style=bold];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_89  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_86 -> m0_88  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_86 -> m0_78  [key=2, style=dotted];
m0_86 -> m0_79  [key=2, style=dotted];
m0_86 -> m0_91  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_86 -> m0_96  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_86 -> m0_101  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_87 -> m0_7  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_109  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_31  [key=2, style=dotted];
m0_89 -> m0_27  [key=2, style=dotted];
m0_89 -> m0_106  [key=2, style=dotted];
m0_89 -> m0_28  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_92  [key=2, style=dotted];
m0_88 -> m0_90  [color=darkseagreen4, key=1, label=cci, style=dashed];
m0_88 -> m0_53  [key=2, style=dotted];
m0_88 -> m0_91  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_88 -> m0_94  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_88 -> m0_96  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_88 -> m0_99  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_88 -> m0_101  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_88 -> m0_104  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_29  [key=2, style=dotted];
m0_91 -> m0_86  [color=blue, key=0, style=bold];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_27  [key=2, style=dotted];
m0_91 -> m0_80  [key=2, style=dotted];
m0_91 -> m0_106  [key=2, style=dotted];
m0_91 -> m0_28  [key=2, style=dotted];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_344  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_341 -> m0_343  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m0_342 -> m0_7  [key=2, style=dotted];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_45  [key=2, style=dotted];
m0_344 -> m0_345  [key=0, style=solid];
m0_344 -> m0_31  [key=2, style=dotted];
m0_343 -> m0_344  [key=0, style=solid];
m0_343 -> m0_347  [key=2, style=dotted];
m0_343 -> m0_345  [color=darkseagreen4, key=1, label=psar, style=dashed];
m0_345 -> m0_346  [key=0, style=solid];
m0_346 -> m0_341  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_7  [key=2, style=dotted];
m0_59 -> m0_6  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_64  [key=2, style=dotted];
m0_60 -> m0_62  [color=darkseagreen4, key=1, label=aroon, style=dashed];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_78  [key=2, style=dotted];
m0_61 -> m0_79  [key=2, style=dotted];
m0_61 -> m0_64  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_61 -> m0_66  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_61 -> m0_70  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_61 -> m0_74  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_61 -> m0_31  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_82  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_27  [key=2, style=dotted];
m0_64 -> m0_28  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_27  [key=2, style=dotted];
m0_66 -> m0_80  [key=2, style=dotted];
m0_66 -> m0_28  [key=2, style=dotted];
m0_66 -> m0_7  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_27  [key=2, style=dotted];
m0_70 -> m0_80  [key=2, style=dotted];
m0_70 -> m0_28  [key=2, style=dotted];
m0_70 -> m0_65  [color=blue, key=0, style=bold];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_27  [key=2, style=dotted];
m0_74 -> m0_80  [key=2, style=dotted];
m0_74 -> m0_28  [key=2, style=dotted];
m0_74 -> m0_78  [key=2, style=dotted];
m0_74 -> m0_76  [color=darkseagreen4, key=1, label=bb, style=dashed];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_53  [key=2, style=dotted];
m0_63 -> m0_66  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_63 -> m0_70  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_63 -> m0_74  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_63 -> m0_58  [color=blue, key=0, style=bold];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_29  [key=2, style=dotted];
m0_65 -> m0_68  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_65 -> m0_67  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_31  [key=2, style=dotted];
m0_67 -> m0_71  [key=2, style=dotted];
m0_67 -> m0_69  [color=darkseagreen4, key=1, label=atr, style=dashed];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_79  [key=2, style=dotted];
m0_68 -> m0_32  [key=2, style=dotted];
m0_68 -> m0_31  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_69 -> m0_72  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_31  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_79  [key=2, style=dotted];
m0_72 -> m0_32  [key=2, style=dotted];
m0_72 -> m0_75  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_72 -> m0_74  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_73 -> m0_76  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_73 -> m0_7  [key=2, style=dotted];
m0_73 -> m0_6  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_31  [key=2, style=dotted];
m0_75 -> m0_47  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_79  [key=2, style=dotted];
m0_76 -> m0_32  [key=2, style=dotted];
m0_77 -> m0_59  [color=blue, key=0, style=bold];
m0_77 -> m0_72  [color=blue, key=0, style=bold];
m0_369 -> m0_370  [key=0, style=solid];
m0_369 -> m0_372  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_369 -> m0_371  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_370 -> m0_7  [key=2, style=dotted];
m0_370 -> m0_371  [key=0, style=solid];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_47  [key=2, style=dotted];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_375  [key=2, style=dotted];
m0_371 -> m0_373  [color=darkseagreen4, key=1, label=rocr, style=dashed];
m0_373 -> m0_374  [key=0, style=solid];
m0_374 -> m0_369  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_32  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_143 -> m0_574  [key=0, style=solid];
m0_143 -> m0_575  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_143 -> m0_577  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_143 -> m0_578  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_143 -> m0_580  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_143 -> m0_582  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_143 -> m0_584  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_143 -> m0_588  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_143 -> m0_590  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_143 -> m0_591  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_143 -> m0_593  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_143 -> m0_594  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_118  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_143 -> m0_121  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_143 -> m0_124  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_143 -> m0_125  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_143 -> m0_126  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_143 -> m0_127  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_143 -> m0_130  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_143 -> m0_133  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_143 -> m0_136  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_143 -> m0_137  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_143 -> m0_138  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_143 -> m0_139  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_574 -> m0_575  [key=0, style=solid];
m0_574 -> m0_128  [key=2, style=dotted];
m0_574 -> m0_576  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m0_574 -> m0_577  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m0_574 -> m0_578  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m0_574 -> m0_579  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m0_574 -> m0_581  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m0_574 -> m0_583  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m0_574 -> m0_586  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m0_574 -> m0_592  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m0_575 -> m0_576  [key=0, style=solid];
m0_575 -> m0_577  [key=0, style=solid];
m0_576 -> m0_577  [key=0, style=solid];
m0_576 -> m0_573  [key=2, style=dotted];
m0_576 -> m0_580  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_576 -> m0_582  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_576 -> m0_584  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_576 -> m0_588  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_576 -> m0_590  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_576 -> m0_591  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_576 -> m0_593  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_576 -> m0_594  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m0_577 -> m0_578  [key=0, style=solid];
m0_577 -> m0_579  [key=0, style=solid];
m0_577 -> m0_573  [key=2, style=dotted];
m0_578 -> m0_6  [key=2, style=dotted];
m0_578 -> m0_595  [key=0, style=solid];
m0_578 -> m0_557  [key=2, style=dotted];
m0_579 -> m0_580  [key=0, style=solid];
m0_579 -> m0_581  [key=0, style=solid];
m0_579 -> m0_252  [key=2, style=dotted];
m0_581 -> m0_582  [key=0, style=solid];
m0_581 -> m0_583  [key=0, style=solid];
m0_581 -> m0_252  [key=2, style=dotted];
m0_583 -> m0_584  [key=0, style=solid];
m0_583 -> m0_592  [key=0, style=solid];
m0_583 -> m0_252  [key=2, style=dotted];
m0_586 -> m0_587  [key=0, style=solid];
m0_586 -> m0_589  [key=0, style=solid];
m0_586 -> m0_591  [key=0, style=solid];
m0_592 -> m0_593  [key=0, style=solid];
m0_592 -> m0_594  [key=0, style=solid];
m0_592 -> m0_252  [key=2, style=dotted];
m0_580 -> m0_595  [key=0, style=solid];
m0_580 -> m0_596  [key=2, style=dotted];
m0_582 -> m0_595  [key=0, style=solid];
m0_582 -> m0_597  [key=2, style=dotted];
m0_584 -> m0_586  [key=0, style=solid];
m0_584 -> m0_585  [key=0, style=solid];
m0_588 -> m0_595  [key=0, style=solid];
m0_588 -> m0_599  [key=2, style=dotted];
m0_590 -> m0_595  [key=0, style=solid];
m0_590 -> m0_600  [key=2, style=dotted];
m0_591 -> m0_595  [key=0, style=solid];
m0_591 -> m0_601  [key=2, style=dotted];
m0_593 -> m0_595  [key=0, style=solid];
m0_593 -> m0_602  [key=2, style=dotted];
m0_594 -> m0_595  [key=0, style=solid];
m0_594 -> m0_603  [key=2, style=dotted];
m0_587 -> m0_588  [key=0, style=solid];
m0_589 -> m0_590  [key=0, style=solid];
m0_585 -> m0_595  [key=0, style=solid];
m0_585 -> m0_598  [key=2, style=dotted];
m0_595 -> m0_143  [color=blue, key=0, style=bold];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_61  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_58 -> m0_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_58 -> m0_56  [color=blue, key=0, style=bold];
m0_29 -> m0_24  [color=blue, key=0, style=bold];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_46 -> m0_50  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_46 -> m0_51  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_28  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_223  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_220 -> m0_222  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_221 -> m0_7  [key=2, style=dotted];
m0_221 -> m0_222  [key=0, style=solid];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_47  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_226  [key=2, style=dotted];
m0_222 -> m0_224  [color=darkseagreen4, key=1, label=lwma, style=dashed];
m0_224 -> m0_225  [key=0, style=solid];
m0_225 -> m0_220  [color=blue, key=0, style=bold];
m0_449 -> m0_450  [key=0, style=solid];
m0_449 -> m0_452  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_449 -> m0_451  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_450 -> m0_7  [key=2, style=dotted];
m0_450 -> m0_451  [key=0, style=solid];
m0_452 -> m0_453  [key=0, style=solid];
m0_452 -> m0_47  [key=2, style=dotted];
m0_451 -> m0_452  [key=0, style=solid];
m0_451 -> m0_455  [key=2, style=dotted];
m0_451 -> m0_453  [color=darkseagreen4, key=1, label=trix, style=dashed];
m0_453 -> m0_454  [key=0, style=solid];
m0_454 -> m0_449  [color=blue, key=0, style=bold];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_323  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_320 -> m0_322  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_321 -> m0_7  [key=2, style=dotted];
m0_321 -> m0_322  [key=0, style=solid];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_31  [key=2, style=dotted];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_326  [key=2, style=dotted];
m0_322 -> m0_324  [color=darkseagreen4, key=1, label=natr, style=dashed];
m0_324 -> m0_325  [key=0, style=solid];
m0_325 -> m0_320  [color=blue, key=0, style=bold];
m0_561 -> m0_562  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_7  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_10  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_13  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_16  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_17  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_18  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_19  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_20  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_21  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_22  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_23  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_24  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m0_34 -> m0_38  [key=2, style=dotted];
m0_34 -> m0_36  [color=darkseagreen4, key=1, label=adxr, style=dashed];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_7  [key=2, style=dotted];
m0_35 -> m0_33  [color=blue, key=0, style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_31  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_42  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_57 -> m0_44  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_57 -> m0_45  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_57 -> m0_55  [color=blue, key=0, style=bold];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_58  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_65  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_82 -> m0_67  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_82 -> m0_68  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_82 -> m0_31  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_85  [key=2, style=dotted];
m0_81 -> m0_83  [color=darkseagreen4, key=1, label=bop, style=dashed];
m0_83 -> m0_81  [color=blue, key=0, style=bold];
m0_83 -> m0_84  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_90  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_109 -> m0_92  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_109 -> m0_93  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_109 -> m0_94  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_109 -> m0_107  [color=blue, key=0, style=bold];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_100  [key=2, style=dotted];
m0_110 -> m0_108  [color=blue, key=0, style=bold];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_113  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_110 -> m0_112  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_137  [color=blue, key=0, style=bold];
m0_144 -> m0_142  [color=blue, key=0, style=bold];
m0_144 -> m0_551  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_144 -> m0_550  [key=0, style=solid];
m0_144 -> m0_553  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m0_144 -> m0_554  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_144 -> m0_555  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m0_144 -> m0_563  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m0_513 -> m0_514  [key=0, style=solid];
m0_519 -> m0_520  [key=0, style=solid];
m0_525 -> m0_526  [key=0, style=solid];
m0_514 -> m0_515  [key=0, style=solid];
m0_563 -> m0_564  [key=0, style=solid];
m0_563 -> m0_541  [key=2, style=dotted];
m0_537 -> m0_538  [key=0, style=solid];
m0_537 -> m0_540  [key=2, style=dotted];
m0_537 -> m0_541  [key=2, style=dotted];
m0_255 -> m0_256  [key=0, style=solid];
m0_297 -> m0_298  [key=0, style=solid];
m0_515 -> m0_513  [color=blue, key=0, style=bold];
m0_518 -> m0_519  [key=0, style=solid];
m0_520 -> m0_518  [color=blue, key=0, style=bold];
m0_524 -> m0_525  [key=0, style=solid];
m0_526 -> m0_524  [color=blue, key=0, style=bold];
m0_533 -> m0_534  [key=0, style=solid];
m0_536 -> m0_537  [key=0, style=solid];
m0_536 -> m0_539  [key=2, style=dotted];
m0_559 -> m0_560  [key=0, style=solid];
m0_562 -> m0_563  [key=0, style=solid];
m0_562 -> m0_539  [key=2, style=dotted];
m0_564 -> m0_561  [color=blue, key=0, style=bold];
m0_535 -> m0_537  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_535 -> m0_536  [key=0, style=solid];
m0_538 -> m0_535  [color=blue, key=0, style=bold];
m0_254 -> m0_255  [key=0, style=solid];
m0_256 -> m0_254  [color=blue, key=0, style=bold];
m0_296 -> m0_297  [key=0, style=solid];
m0_298 -> m0_296  [color=blue, key=0, style=bold];
m0_532 -> m0_533  [key=0, style=solid];
m0_534 -> m0_532  [color=blue, key=0, style=bold];
m0_558 -> m0_559  [key=0, style=solid];
m0_560 -> m0_558  [color=blue, key=0, style=bold];
m0_463 -> m0_464  [key=0, style=solid];
m0_463 -> m0_466  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_463 -> m0_465  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_464 -> m0_7  [key=2, style=dotted];
m0_464 -> m0_465  [key=0, style=solid];
m0_466 -> m0_467  [key=0, style=solid];
m0_466 -> m0_47  [key=2, style=dotted];
m0_465 -> m0_466  [key=0, style=solid];
m0_465 -> m0_469  [key=2, style=dotted];
m0_465 -> m0_467  [color=darkseagreen4, key=1, label=variance, style=dashed];
m0_467 -> m0_468  [key=0, style=solid];
m0_468 -> m0_463  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_27  [key=2, style=dotted];
m0_8 -> m0_30  [key=2, style=dotted];
m0_8 -> m0_20  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m0_8 -> m0_24  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m0_383 -> m0_384  [key=0, style=solid];
m0_383 -> m0_386  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_383 -> m0_385  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_384 -> m0_7  [key=2, style=dotted];
m0_384 -> m0_385  [key=0, style=solid];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_47  [key=2, style=dotted];
m0_385 -> m0_386  [key=0, style=solid];
m0_385 -> m0_389  [key=2, style=dotted];
m0_385 -> m0_387  [color=darkseagreen4, key=1, label=sma, style=dashed];
m0_387 -> m0_388  [key=0, style=solid];
m0_388 -> m0_383  [color=blue, key=0, style=bold];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_216  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_213 -> m0_215  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_214 -> m0_7  [key=2, style=dotted];
m0_214 -> m0_215  [key=0, style=solid];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_47  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_219  [key=2, style=dotted];
m0_215 -> m0_217  [color=darkseagreen4, key=1, label=lsma, style=dashed];
m0_217 -> m0_218  [key=0, style=solid];
m0_218 -> m0_213  [color=blue, key=0, style=bold];
m0_53 -> m0_48  [color=blue, key=0, style=bold];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_400  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_397 -> m0_399  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_398 -> m0_7  [key=2, style=dotted];
m0_398 -> m0_399  [key=0, style=solid];
m0_400 -> m0_401  [key=0, style=solid];
m0_400 -> m0_173  [key=2, style=dotted];
m0_399 -> m0_400  [key=0, style=solid];
m0_399 -> m0_403  [key=2, style=dotted];
m0_399 -> m0_401  [color=darkseagreen4, key=1, label=stoch, style=dashed];
m0_401 -> m0_402  [key=0, style=solid];
m0_402 -> m0_397  [color=blue, key=0, style=bold];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_96  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_93 -> m0_95  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_93 -> m0_79  [key=2, style=dotted];
m0_93 -> m0_32  [key=2, style=dotted];
m0_94 -> m0_7  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_32  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_47  [key=2, style=dotted];
m0_96 -> m0_27  [key=2, style=dotted];
m0_96 -> m0_80  [key=2, style=dotted];
m0_96 -> m0_107  [key=2, style=dotted];
m0_96 -> m0_28  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_99  [key=2, style=dotted];
m0_95 -> m0_97  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_95 -> m0_98  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_31  [key=2, style=dotted];
m0_98 -> m0_93  [color=blue, key=0, style=bold];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_79  [key=2, style=dotted];
m0_98 -> m0_32  [key=2, style=dotted];
m0_285 -> m0_286  [key=0, style=solid];
m0_285 -> m0_289  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_285 -> m0_292  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_285 -> m0_287  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_285 -> m0_288  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, decimal>", style=dashed];
m0_286 -> m0_7  [key=2, style=dotted];
m0_286 -> m0_287  [key=0, style=solid];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_128  [key=2, style=dotted];
m0_292 -> m0_293  [key=0, style=solid];
m0_292 -> m0_253  [key=2, style=dotted];
m0_292 -> m0_191  [key=2, style=dotted];
m0_287 -> m0_292  [color=darkseagreen4, key=1, label=min, style=dashed];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_295  [key=2, style=dotted];
m0_287 -> m0_293  [color=darkseagreen4, key=1, label=min, style=dashed];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_292  [key=0, style=solid];
m0_290 -> m0_292  [key=0, style=solid];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_252  [key=2, style=dotted];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_297  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_293 -> m0_294  [key=0, style=solid];
m0_294 -> m0_285  [color=blue, key=0, style=bold];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_176  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_128  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_178  [key=2, style=dotted];
m0_177 -> m0_174  [color=blue, key=0, style=bold];
m0_407 -> m0_408  [key=0, style=solid];
m0_407 -> m0_410  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_407 -> m0_409  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_408 -> m0_7  [key=2, style=dotted];
m0_408 -> m0_409  [key=0, style=solid];
m0_410 -> m0_411  [key=0, style=solid];
m0_410 -> m0_47  [key=2, style=dotted];
m0_409 -> m0_410  [key=0, style=solid];
m0_409 -> m0_413  [key=2, style=dotted];
m0_409 -> m0_411  [color=darkseagreen4, key=1, label=sum, style=dashed];
m0_411 -> m0_412  [key=0, style=solid];
m0_412 -> m0_407  [color=blue, key=0, style=bold];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_309  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_306 -> m0_308  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_307 -> m0_7  [key=2, style=dotted];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_6  [key=2, style=dotted];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_47  [key=2, style=dotted];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_312  [key=2, style=dotted];
m0_308 -> m0_310  [color=darkseagreen4, key=1, label=momersion, style=dashed];
m0_310 -> m0_311  [key=0, style=solid];
m0_311 -> m0_306  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_20  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_17 -> m0_32  [key=2, style=dotted];
m0_18 -> m0_7  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_6  [key=2, style=dotted];
m0_18 -> m0_32  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_9  [key=2, style=dotted];
m0_20 -> m0_32  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_23  [key=2, style=dotted];
m0_19 -> m0_21  [color=darkseagreen4, key=1, label=adOsc, style=dashed];
m0_19 -> m0_32  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_32  [key=2, style=dotted];
m0_22 -> m0_17  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_32  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_31  [key=2, style=dotted];
m0_128 -> m0_506  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_128 -> m0_505  [key=0, style=solid];
m0_128 -> m0_514  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_128 -> m0_508  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_27  [key=2, style=dotted];
m0_128 -> m0_106  [key=2, style=dotted];
m0_506 -> m0_507  [key=0, style=solid];
m0_506 -> m0_509  [key=0, style=solid];
m0_506 -> m0_511  [key=2, style=dotted];
m0_506 -> m0_513  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_505 -> m0_506  [key=0, style=solid];
m0_507 -> m0_508  [key=0, style=solid];
m0_509 -> m0_510  [key=0, style=solid];
m0_508 -> m0_504  [key=2, style=dotted];
m0_508 -> m0_510  [key=0, style=solid];
m0_508 -> m0_512  [key=2, style=dotted];
m0_510 -> m0_128  [color=blue, key=0, style=bold];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_274  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_271 -> m0_273  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_272 -> m0_7  [key=2, style=dotted];
m0_272 -> m0_273  [key=0, style=solid];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_47  [key=2, style=dotted];
m0_273 -> m0_274  [key=0, style=solid];
m0_273 -> m0_277  [key=2, style=dotted];
m0_273 -> m0_275  [color=darkseagreen4, key=1, label=midpoint, style=dashed];
m0_275 -> m0_276  [key=0, style=solid];
m0_276 -> m0_271  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_1 -> m0_7  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_4  [color=darkseagreen4, key=1, label=abands, style=dashed];
m0_2 -> m0_26  [key=2, style=dotted];
m0_2 -> m0_6  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_2 -> m0_9  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_2 -> m0_12  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_2 -> m0_15  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_8  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_4 -> m0_11  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_4 -> m0_14  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_27  [key=2, style=dotted];
m0_5 -> m0_18  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m0_5 -> m0_19  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m0_5 -> m0_24  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_55  [key=2, style=dotted];
m0_45 -> m0_32  [key=2, style=dotted];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_393  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_390 -> m0_392  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_391 -> m0_7  [key=2, style=dotted];
m0_391 -> m0_392  [key=0, style=solid];
m0_393 -> m0_394  [key=0, style=solid];
m0_393 -> m0_47  [key=2, style=dotted];
m0_392 -> m0_393  [key=0, style=solid];
m0_392 -> m0_396  [key=2, style=dotted];
m0_392 -> m0_394  [color=darkseagreen4, key=1, label=std, style=dashed];
m0_394 -> m0_395  [key=0, style=solid];
m0_395 -> m0_390  [color=blue, key=0, style=bold];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_27  [key=2, style=dotted];
m0_116 -> m0_106  [key=2, style=dotted];
m0_116 -> m0_126  [color=darkseagreen4, key=1, label=tick1, style=dashed];
m0_80 -> m0_7  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_79  [color=blue, key=0, style=bold];
m0_85 -> m0_86  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_27  [key=2, style=dotted];
m0_101 -> m0_80  [key=2, style=dotted];
m0_101 -> m0_107  [key=2, style=dotted];
m0_101 -> m0_28  [key=2, style=dotted];
m0_101 -> m0_7  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_80  [key=2, style=dotted];
m0_99 -> m0_32  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_80  [key=2, style=dotted];
m0_104 -> m0_32  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_100 -> m0_103  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_100 -> m0_104  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_31  [key=2, style=dotted];
m0_102 -> m0_106  [key=2, style=dotted];
m0_102 -> m0_104  [color=darkseagreen4, key=1, label=donchianChannel, style=dashed];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_79  [key=2, style=dotted];
m0_103 -> m0_32  [key=2, style=dotted];
m0_103 -> m0_31  [key=2, style=dotted];
m0_105 -> m0_84  [color=blue, key=0, style=bold];
m0_105 -> m0_100  [color=blue, key=0, style=bold];
m0_421 -> m0_422  [key=0, style=solid];
m0_421 -> m0_424  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_421 -> m0_423  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_422 -> m0_7  [key=2, style=dotted];
m0_422 -> m0_423  [key=0, style=solid];
m0_422 -> m0_6  [key=2, style=dotted];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_47  [key=2, style=dotted];
m0_423 -> m0_424  [key=0, style=solid];
m0_423 -> m0_427  [key=2, style=dotted];
m0_423 -> m0_425  [color=darkseagreen4, key=1, label=t3, style=dashed];
m0_425 -> m0_426  [key=0, style=solid];
m0_426 -> m0_421  [color=blue, key=0, style=bold];
m0_334 -> m0_335  [key=0, style=solid];
m0_334 -> m0_337  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_334 -> m0_336  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_335 -> m0_7  [key=2, style=dotted];
m0_335 -> m0_336  [key=0, style=solid];
m0_335 -> m0_6  [key=2, style=dotted];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_47  [key=2, style=dotted];
m0_336 -> m0_337  [key=0, style=solid];
m0_336 -> m0_340  [key=2, style=dotted];
m0_336 -> m0_338  [color=darkseagreen4, key=1, label=ppo, style=dashed];
m0_338 -> m0_339  [key=0, style=solid];
m0_339 -> m0_334  [color=blue, key=0, style=bold];
m0_28 -> m0_29  [key=0, style=solid];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_230  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_227 -> m0_229  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_228 -> m0_7  [key=2, style=dotted];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_6  [key=2, style=dotted];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_47  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_233  [key=2, style=dotted];
m0_229 -> m0_231  [color=darkseagreen4, key=1, label=macd, style=dashed];
m0_231 -> m0_232  [key=0, style=solid];
m0_232 -> m0_227  [color=blue, key=0, style=bold];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_148  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_145 -> m0_147  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_146 -> m0_7  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_31  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_151  [key=2, style=dotted];
m0_147 -> m0_149  [color=darkseagreen4, key=1, label=frama, style=dashed];
m0_149 -> m0_150  [key=0, style=solid];
m0_150 -> m0_145  [color=blue, key=0, style=bold];
m0_111 -> m0_7  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_47  [key=2, style=dotted];
m0_113 -> m0_78  [key=2, style=dotted];
m0_113 -> m0_141  [key=2, style=dotted];
m0_113 -> m0_117  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_113 -> m0_120  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_113 -> m0_123  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_113 -> m0_129  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_113 -> m0_132  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_113 -> m0_135  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_116  [key=2, style=dotted];
m0_112 -> m0_114  [color=darkseagreen4, key=1, label=dema, style=dashed];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_143  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m0_115 -> m0_110  [color=blue, key=0, style=bold];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_53  [key=2, style=dotted];
m0_115 -> m0_119  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_115 -> m0_122  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_115 -> m0_125  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_115 -> m0_128  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_115 -> m0_131  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_115 -> m0_134  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_115 -> m0_137  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_245  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_241 -> m0_248  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_241 -> m0_243  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_241 -> m0_244  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, decimal>", style=dashed];
m0_242 -> m0_7  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_128  [key=2, style=dotted];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_253  [key=2, style=dotted];
m0_248 -> m0_191  [key=2, style=dotted];
m0_243 -> m0_248  [color=darkseagreen4, key=1, label=max, style=dashed];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_251  [key=2, style=dotted];
m0_243 -> m0_249  [color=darkseagreen4, key=1, label=max, style=dashed];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_248  [key=0, style=solid];
m0_246 -> m0_248  [key=0, style=solid];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_252  [key=2, style=dotted];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_255  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_249 -> m0_250  [key=0, style=solid];
m0_250 -> m0_241  [color=blue, key=0, style=bold];
m0_542 -> m0_543  [key=0, style=solid];
m0_543 -> m0_544  [key=0, style=solid];
m0_543 -> m0_253  [key=2, style=dotted];
m0_543 -> m0_144  [key=2, style=dotted];
m0_544 -> m0_542  [color=blue, key=0, style=bold];
m0_376 -> m0_377  [key=0, style=solid];
m0_376 -> m0_379  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_376 -> m0_378  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_377 -> m0_7  [key=2, style=dotted];
m0_377 -> m0_378  [key=0, style=solid];
m0_379 -> m0_380  [key=0, style=solid];
m0_379 -> m0_47  [key=2, style=dotted];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_382  [key=2, style=dotted];
m0_378 -> m0_380  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m0_380 -> m0_381  [key=0, style=solid];
m0_381 -> m0_376  [color=blue, key=0, style=bold];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_120  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_117 -> m0_119  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_117 -> m0_28  [key=2, style=dotted];
m0_118 -> m0_7  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_29  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_47  [key=2, style=dotted];
m0_120 -> m0_28  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_123  [key=2, style=dotted];
m0_119 -> m0_121  [color=darkseagreen4, key=1, label=ema, style=dashed];
m0_119 -> m0_27  [key=2, style=dotted];
m0_119 -> m0_106  [key=2, style=dotted];
m0_119 -> m0_127  [color=darkseagreen4, key=1, label=tick2, style=dashed];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_29  [key=2, style=dotted];
m0_122 -> m0_117  [color=blue, key=0, style=bold];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_27  [key=2, style=dotted];
m0_122 -> m0_106  [key=2, style=dotted];
m0_122 -> m0_138  [color=darkseagreen4, key=1, label=tick3, style=dashed];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_126  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_124 -> m0_31  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_128  [key=2, style=dotted];
m0_125 -> m0_32  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_129  [key=2, style=dotted];
m0_126 -> m0_32  [key=2, style=dotted];
m0_127 -> m0_124  [color=blue, key=0, style=bold];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_32  [key=2, style=dotted];
m0_7 -> m0_484  [key=0, style=solid];
m0_7 -> m0_485  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_7 -> m0_487  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m0_7 -> m0_501  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_29  [key=2, style=dotted];
m0_485 -> m0_486  [key=0, style=solid];
m0_485 -> m0_128  [key=2, style=dotted];
m0_485 -> m0_487  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m0_484 -> m0_485  [key=0, style=solid];
m0_484 -> m0_486  [key=0, style=solid];
m0_487 -> m0_488  [key=0, style=solid];
m0_487 -> m0_490  [key=0, style=solid];
m0_487 -> m0_492  [key=0, style=solid];
m0_487 -> m0_494  [key=0, style=solid];
m0_487 -> m0_496  [key=0, style=solid];
m0_487 -> m0_498  [key=0, style=solid];
m0_487 -> m0_500  [key=0, style=solid];
m0_501 -> m0_502  [key=0, style=solid];
m0_501 -> m0_504  [key=2, style=dotted];
m0_501 -> m0_45  [key=2, style=dotted];
m0_486 -> m0_487  [key=0, style=solid];
m0_500 -> m0_502  [key=0, style=solid];
m0_500 -> m0_503  [key=2, style=dotted];
m0_488 -> m0_489  [key=0, style=solid];
m0_490 -> m0_491  [key=0, style=solid];
m0_492 -> m0_493  [key=0, style=solid];
m0_494 -> m0_495  [key=0, style=solid];
m0_496 -> m0_497  [key=0, style=solid];
m0_498 -> m0_499  [key=0, style=solid];
m0_489 -> m0_501  [key=0, style=solid];
m0_491 -> m0_501  [key=0, style=solid];
m0_493 -> m0_501  [key=0, style=solid];
m0_495 -> m0_501  [key=0, style=solid];
m0_497 -> m0_501  [key=0, style=solid];
m0_499 -> m0_501  [key=0, style=solid];
m0_502 -> m0_7  [color=blue, key=0, style=bold];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_162  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_159 -> m0_161  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_160 -> m0_7  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_47  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_165  [key=2, style=dotted];
m0_161 -> m0_163  [color=darkseagreen4, key=1, label=hma, style=dashed];
m0_163 -> m0_164  [key=0, style=solid];
m0_164 -> m0_159  [color=blue, key=0, style=bold];
m0_428 -> m0_429  [color=green, key=0, style=solid];
m0_428 -> m0_430  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_428 -> m0_431  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_429 -> m0_430  [color=green, key=0, style=solid];
m0_429 -> m0_7  [color=green, key=2, style=dotted];
m0_430 -> m0_431  [key=0, style=solid];
m0_430 -> m0_434  [key=2, style=dotted];
m0_430 -> m0_432  [color=darkseagreen4, key=1, label=tema, style=dashed];
m0_431 -> m0_432  [key=0, style=solid];
m0_431 -> m0_47  [key=2, style=dotted];
m0_432 -> m0_433  [key=0, style=solid];
m0_433 -> m0_428  [color=blue, key=0, style=bold];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_35  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_32 -> m0_34  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_36 -> m0_37  [key=0, style=solid];
m0_37 -> m0_32  [color=blue, key=0, style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_82  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_28  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_28  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_28  [key=2, style=dotted];
m0_129 -> m0_132  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_129 -> m0_131  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, bool>", style=dashed];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_28  [key=2, style=dotted];
m0_132 -> m0_136  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_27  [key=2, style=dotted];
m0_131 -> m0_106  [key=2, style=dotted];
m0_131 -> m0_139  [color=darkseagreen4, key=1, label=tick5, style=dashed];
m0_131 -> m0_135  [key=2, style=dotted];
m0_131 -> m0_133  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_27  [key=2, style=dotted];
m0_134 -> m0_106  [key=2, style=dotted];
m0_134 -> m0_129  [color=blue, key=0, style=bold];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_106  [key=2, style=dotted];
m0_137 -> m0_32  [key=2, style=dotted];
m0_137 -> m0_140  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_137 -> m0_139  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, bool>", style=dashed];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_32  [key=2, style=dotted];
m0_138 -> m0_45  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_31  [key=2, style=dotted];
m0_130 -> m0_7  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_32  [key=2, style=dotted];
m0_139 -> m0_135  [key=2, style=dotted];
m0_139 -> m0_141  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_31  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_31  [key=2, style=dotted];
m0_136 -> m0_545  [key=0, style=solid];
m0_140 -> m0_111  [color=blue, key=0, style=bold];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_143  [key=2, style=dotted];
m0_140 -> m0_144  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_28  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_32  [key=2, style=dotted];
m0_24 -> m0_27  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_25 -> m0_0  [color=blue, key=0, style=bold];
m0_25 -> m0_7  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.Market.TradeBar consolidated", style=bold];
m0_470 -> m0_471  [key=0, style=solid];
m0_470 -> m0_473  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_470 -> m0_472  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_471 -> m0_7  [key=2, style=dotted];
m0_471 -> m0_472  [key=0, style=solid];
m0_473 -> m0_474  [key=0, style=solid];
m0_473 -> m0_9  [key=2, style=dotted];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_476  [key=2, style=dotted];
m0_472 -> m0_474  [color=darkseagreen4, key=1, label=vwap, style=dashed];
m0_474 -> m0_475  [key=0, style=solid];
m0_475 -> m0_470  [color=blue, key=0, style=bold];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_26  [key=2, style=dotted];
m0_38 -> m0_41  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_38 -> m0_43  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_38 -> m0_47  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_38 -> m0_49  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m0_39 -> m0_42  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_39 -> m0_41  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_27  [key=2, style=dotted];
m0_41 -> m0_28  [key=2, style=dotted];
m0_41 -> m0_46  [key=2, style=dotted];
m0_41 -> m0_43  [color=darkseagreen4, key=1, label=alma, style=dashed];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_27  [key=2, style=dotted];
m0_43 -> m0_54  [key=2, style=dotted];
m0_43 -> m0_28  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_27  [key=2, style=dotted];
m0_47 -> m0_54  [key=2, style=dotted];
m0_47 -> m0_28  [key=2, style=dotted];
m0_47 -> m0_516  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_27  [key=2, style=dotted];
m0_49 -> m0_54  [key=2, style=dotted];
m0_49 -> m0_28  [key=2, style=dotted];
m0_49 -> m0_7  [key=2, style=dotted];
m0_49 -> m0_6  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_53  [key=2, style=dotted];
m0_40 -> m0_43  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_40 -> m0_47  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_40 -> m0_49  [color=darkseagreen4, key=1, label=reference, style=dashed];
m0_40 -> m0_7  [key=2, style=dotted];
m0_40 -> m0_45  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_29  [key=2, style=dotted];
m0_42 -> m0_47  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_31  [key=2, style=dotted];
m0_44 -> m0_39  [color=blue, key=0, style=bold];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_29  [key=2, style=dotted];
m0_48 -> m0_51  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_48 -> m0_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_31  [key=2, style=dotted];
m0_50 -> m0_54  [key=2, style=dotted];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label=apo, style=dashed];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_55  [key=2, style=dotted];
m0_51 -> m0_32  [key=2, style=dotted];
m0_51 -> m0_47  [key=2, style=dotted];
m0_52 -> m0_36  [color=blue, key=0, style=bold];
m0_52 -> m0_53  [key=0, style=solid];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_260  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_257 -> m0_259  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_258 -> m0_7  [key=2, style=dotted];
m0_258 -> m0_259  [key=0, style=solid];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_9  [key=2, style=dotted];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_263  [key=2, style=dotted];
m0_259 -> m0_261  [color=darkseagreen4, key=1, label=mfi, style=dashed];
m0_261 -> m0_262  [key=0, style=solid];
m0_262 -> m0_257  [color=blue, key=0, style=bold];
m0_551 -> m0_552  [key=0, style=solid];
m0_551 -> m0_531  [key=2, style=dotted];
m0_550 -> m0_551  [key=0, style=solid];
m0_550 -> m0_550  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, T>", style=dashed];
m0_550 -> m0_559  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_550 -> m0_555  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, T>", style=dashed];
m0_550 -> m0_562  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, T>", style=dashed];
m0_552 -> m0_553  [key=0, style=solid];
m0_552 -> m0_554  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_554 -> m0_45  [key=2, style=dotted];
m0_554 -> m0_556  [key=0, style=solid];
m0_554 -> m0_557  [key=2, style=dotted];
m0_553 -> m0_554  [key=0, style=solid];
m0_553 -> m0_555  [key=0, style=solid];
m0_553 -> m0_252  [key=2, style=dotted];
m0_555 -> m0_556  [key=0, style=solid];
m0_555 -> m0_562  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_556 -> m0_144  [color=blue, key=0, style=bold];
m0_516 -> m0_517  [key=0, style=solid];
m0_516 -> m0_253  [key=2, style=dotted];
m0_516 -> m0_191  [key=2, style=dotted];
m0_516 -> m0_519  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_517 -> m0_47  [color=blue, key=0, style=bold];
m0_107 -> m0_108  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_30  [key=2, style=dotted];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=averageDirectionalIndex, style=dashed];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_31  [key=2, style=dotted];
m0_191 -> m0_528  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_191 -> m0_527  [key=0, style=solid];
m0_191 -> m0_529  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m0_191 -> m0_537  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m0_528 -> m0_529  [key=0, style=solid];
m0_528 -> m0_531  [key=2, style=dotted];
m0_527 -> m0_528  [key=0, style=solid];
m0_527 -> m0_527  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, decimal>", style=dashed];
m0_527 -> m0_533  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_527 -> m0_529  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, decimal>", style=dashed];
m0_527 -> m0_536  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, decimal>", style=dashed];
m0_529 -> m0_530  [key=0, style=solid];
m0_529 -> m0_536  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_529 -> m0_537  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_530 -> m0_191  [color=blue, key=0, style=bold];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_209  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_206 -> m0_208  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_207 -> m0_7  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_47  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_212  [key=2, style=dotted];
m0_208 -> m0_210  [color=darkseagreen4, key=1, label=logr, style=dashed];
m0_210 -> m0_211  [key=0, style=solid];
m0_211 -> m0_206  [color=blue, key=0, style=bold];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_237  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_234 -> m0_236  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_235 -> m0_7  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_47  [key=2, style=dotted];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_240  [key=2, style=dotted];
m0_236 -> m0_238  [color=darkseagreen4, key=1, label=mad, style=dashed];
m0_238 -> m0_239  [key=0, style=solid];
m0_239 -> m0_234  [color=blue, key=0, style=bold];
m0_141 -> m0_142  [key=0, style=solid];
m0_348 -> m0_349  [key=0, style=solid];
m0_348 -> m0_351  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_348 -> m0_350  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_349 -> m0_7  [key=2, style=dotted];
m0_349 -> m0_350  [key=0, style=solid];
m0_349 -> m0_6  [key=2, style=dotted];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_47  [key=2, style=dotted];
m0_350 -> m0_351  [key=0, style=solid];
m0_350 -> m0_354  [key=2, style=dotted];
m0_350 -> m0_352  [color=darkseagreen4, key=1, label=rc, style=dashed];
m0_352 -> m0_353  [key=0, style=solid];
m0_353 -> m0_348  [color=blue, key=0, style=bold];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_281  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_278 -> m0_280  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_279 -> m0_7  [key=2, style=dotted];
m0_279 -> m0_280  [key=0, style=solid];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_31  [key=2, style=dotted];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_284  [key=2, style=dotted];
m0_280 -> m0_282  [color=darkseagreen4, key=1, label=midprice, style=dashed];
m0_282 -> m0_283  [key=0, style=solid];
m0_283 -> m0_278  [color=blue, key=0, style=bold];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_155  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_153 -> m0_7  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_9  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_158  [key=2, style=dotted];
m0_154 -> m0_156  [color=darkseagreen4, key=1, label=ha, style=dashed];
m0_156 -> m0_157  [key=0, style=solid];
m0_157 -> m0_152  [color=blue, key=0, style=bold];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_302  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_299 -> m0_301  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_300 -> m0_7  [key=2, style=dotted];
m0_300 -> m0_301  [key=0, style=solid];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_47  [key=2, style=dotted];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_305  [key=2, style=dotted];
m0_301 -> m0_303  [color=darkseagreen4, key=1, label=momentum, style=dashed];
m0_303 -> m0_304  [key=0, style=solid];
m0_304 -> m0_299  [color=blue, key=0, style=bold];
m0_545 -> m0_546  [key=0, style=solid];
m0_545 -> m0_253  [key=2, style=dotted];
m0_545 -> m0_144  [key=2, style=dotted];
m0_546 -> m0_136  [color=blue, key=0, style=bold];
m0_185 -> m0_188  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_185 -> m0_186  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_143  [key=2, style=dotted];
m0_188 -> m0_191  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_184  [key=2, style=dotted];
m0_187 -> m0_189  [color=darkseagreen4, key=1, label=identity, style=dashed];
m0_189 -> m0_190  [key=0, style=solid];
m0_186 -> m0_45  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_190 -> m0_185  [color=blue, key=0, style=bold];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_169  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_166 -> m0_168  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_167 -> m0_7  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_6  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_173  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_172  [key=2, style=dotted];
m0_168 -> m0_170  [color=darkseagreen4, key=1, label=ichimoku, style=dashed];
m0_170 -> m0_171  [key=0, style=solid];
m0_171 -> m0_166  [color=blue, key=0, style=bold];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_330  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_328 -> m0_7  [key=2, style=dotted];
m0_328 -> m0_329  [key=0, style=solid];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_9  [key=2, style=dotted];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_333  [key=2, style=dotted];
m0_329 -> m0_331  [color=darkseagreen4, key=1, label=onBalanceVolume, style=dashed];
m0_331 -> m0_332  [key=0, style=solid];
m0_332 -> m0_327  [color=blue, key=0, style=bold];
m0_521 -> m0_522  [key=0, style=solid];
m0_522 -> m0_523  [key=0, style=solid];
m0_522 -> m0_143  [key=2, style=dotted];
m0_522 -> m0_191  [key=2, style=dotted];
m0_522 -> m0_525  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m0_523 -> m0_521  [color=blue, key=0, style=bold];
m0_362 -> m0_363  [key=0, style=solid];
m0_362 -> m0_365  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_362 -> m0_364  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_363 -> m0_7  [key=2, style=dotted];
m0_363 -> m0_364  [key=0, style=solid];
m0_365 -> m0_366  [key=0, style=solid];
m0_365 -> m0_47  [key=2, style=dotted];
m0_364 -> m0_365  [key=0, style=solid];
m0_364 -> m0_368  [key=2, style=dotted];
m0_364 -> m0_366  [color=darkseagreen4, key=1, label=rateofchangepercent, style=dashed];
m0_366 -> m0_367  [key=0, style=solid];
m0_367 -> m0_362  [color=blue, key=0, style=bold];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_195  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_192 -> m0_194  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_193 -> m0_7  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_47  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_198  [key=2, style=dotted];
m0_194 -> m0_196  [color=darkseagreen4, key=1, label=kama, style=dashed];
m0_196 -> m0_197  [key=0, style=solid];
m0_197 -> m0_192  [color=blue, key=0, style=bold];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_202  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_199 -> m0_201  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_200 -> m0_7  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_31  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_205  [key=2, style=dotted];
m0_201 -> m0_203  [color=darkseagreen4, key=1, label=keltnerChannels, style=dashed];
m0_203 -> m0_204  [key=0, style=solid];
m0_204 -> m0_199  [color=blue, key=0, style=bold];
m0_253 -> m0_565  [key=0, style=solid];
m0_253 -> m0_571  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_253 -> m0_566  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m0_253 -> m0_568  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m0_253 -> m0_570  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_565 -> m0_566  [key=0, style=solid];
m0_565 -> m0_128  [key=2, style=dotted];
m0_565 -> m0_567  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m0_565 -> m0_569  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m0_565 -> m0_570  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m0_571 -> m0_572  [key=0, style=solid];
m0_571 -> m0_143  [key=2, style=dotted];
m0_566 -> m0_567  [key=0, style=solid];
m0_566 -> m0_568  [key=0, style=solid];
m0_567 -> m0_568  [key=0, style=solid];
m0_567 -> m0_570  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m0_569 -> m0_571  [key=0, style=solid];
m0_569 -> m0_570  [key=0, style=solid];
m0_569 -> m0_573  [key=2, style=dotted];
m0_570 -> m0_45  [key=2, style=dotted];
m0_570 -> m0_572  [key=0, style=solid];
m0_570 -> m0_557  [key=2, style=dotted];
m0_568 -> m0_571  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m0_568 -> m0_569  [key=0, style=solid];
m0_568 -> m0_573  [key=2, style=dotted];
m0_572 -> m0_253  [color=blue, key=0, style=bold];
m0_442 -> m0_443  [key=0, style=solid];
m0_442 -> m0_445  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_442 -> m0_444  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_443 -> m0_7  [key=2, style=dotted];
m0_443 -> m0_444  [key=0, style=solid];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_47  [key=2, style=dotted];
m0_444 -> m0_445  [key=0, style=solid];
m0_444 -> m0_448  [key=2, style=dotted];
m0_444 -> m0_446  [color=darkseagreen4, key=1, label=trima, style=dashed];
m0_446 -> m0_447  [key=0, style=solid];
m0_447 -> m0_442  [color=blue, key=0, style=bold];
m0_604 -> m0_429  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_56  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_66  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_68  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_75  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_96  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_101  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_108  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_118  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_120  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_140  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_146  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_148  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_155  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_162  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_169  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_175  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_176  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_179  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_193  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_195  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_200  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_202  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_207  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_209  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_214  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_221  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_223  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_228  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_230  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_235  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_237  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_242  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_245  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_248  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_258  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_260  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_265  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_267  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_272  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_274  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_279  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_281  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_286  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_289  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_292  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_300  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_302  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_307  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_309  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_314  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_316  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_321  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_323  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_328  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_330  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_335  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_337  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_342  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_344  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_349  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_351  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_356  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_358  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_363  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_365  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_370  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_372  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_377  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_379  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_384  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_386  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_391  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_393  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_398  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_400  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_405  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_408  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_410  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_415  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_417  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_422  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_424  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_431  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_436  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_438  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_443  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_445  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_450  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_452  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_457  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_459  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_464  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_466  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_471  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_473  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_478  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_480  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_485  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_506  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_516  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_522  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_528  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_543  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_545  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_548  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_551  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_565  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_571  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_604 -> m0_574  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m0_605 -> m0_514  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_609 -> m0_563  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m0_607 -> m0_537  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m0_606 -> m0_536  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, decimal>", style=dashed];
m0_608 -> m0_562  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.IBaseData, T>", style=dashed];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_7  [key=2, style=dotted];
m3_10 -> m3_8  [key=2, style=dotted];
m3_11 -> m3_9  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_5 -> m3_8  [key=2, style=dotted];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_12 -> m3_16  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_12 -> m3_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_12 -> m3_18  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_12 -> m3_19  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_12 -> m3_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_12 -> m3_21  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_16  [color=darkseagreen4, key=1, label=stop, style=dashed];
m3_13 -> m3_18  [color=darkseagreen4, key=1, label=stop, style=dashed];
m3_13 -> m3_19  [color=darkseagreen4, key=1, label=stop, style=dashed];
m3_13 -> m3_21  [color=darkseagreen4, key=1, label=stop, style=dashed];
m3_13 -> m3_22  [color=darkseagreen4, key=1, label=stop, style=dashed];
m3_13 -> m3_23  [color=darkseagreen4, key=1, label=stop, style=dashed];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_19  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_25  [key=2, style=dotted];
m3_16 -> m3_26  [key=2, style=dotted];
m3_16 -> m3_27  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_22  [key=0, style=solid];
m3_18 -> m3_22  [key=0, style=solid];
m3_18 -> m3_25  [key=2, style=dotted];
m3_18 -> m3_26  [key=2, style=dotted];
m3_18 -> m3_27  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_25  [key=2, style=dotted];
m3_19 -> m3_27  [key=2, style=dotted];
m3_19 -> m3_26  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_25  [key=2, style=dotted];
m3_21 -> m3_27  [key=2, style=dotted];
m3_21 -> m3_26  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_23  [color=darkseagreen4, key=1, label=previousStop, style=dashed];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_12  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=red, key=1, label=decimal, style=dashed];
m3_1 -> m3_2  [color=red, key=0, style=solid];
m3_2 -> m3_3  [color=red, key=0, style=solid];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_28 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", style=dashed];
m3_28 -> m3_2  [color=red, key=1, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", style=dashed];
m3_28 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", style=dashed];
m3_28 -> m3_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_11 -> m4_16  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_12 -> m4_14  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_14  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_16 -> m4_9  [color=blue, key=0, style=bold];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_17  [color=blue, key=0, style=bold];
m4_118 -> m4_119  [key=0, style=solid];
m4_119 -> m4_120  [key=0, style=solid];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_125  [key=2, style=dotted];
m4_121 -> m4_124  [key=2, style=dotted];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_120  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_120 -> m4_123  [key=2, style=dotted];
m4_120 -> m4_124  [key=2, style=dotted];
m4_122 -> m4_118  [color=blue, key=0, style=bold];
m4_112 -> m4_113  [key=0, style=solid];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_108  [key=2, style=dotted];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_108  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_108  [key=2, style=dotted];
m4_115 -> m4_116  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_95 -> m4_96  [key=0, style=solid];
m4_98 -> m4_99  [key=0, style=solid];
m4_101 -> m4_102  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_109 -> m4_110  [key=0, style=solid];
m4_107 -> m4_105  [color=blue, key=0, style=bold];
m4_111 -> m4_109  [color=blue, key=0, style=bold];
m4_114 -> m4_112  [color=blue, key=0, style=bold];
m4_117 -> m4_115  [color=blue, key=0, style=bold];
m4_116 -> m4_117  [key=0, style=solid];
m4_94 -> m4_92  [color=blue, key=0, style=bold];
m4_93 -> m4_94  [key=0, style=solid];
m4_97 -> m4_95  [color=blue, key=0, style=bold];
m4_96 -> m4_97  [key=0, style=solid];
m4_100 -> m4_98  [color=blue, key=0, style=bold];
m4_99 -> m4_100  [key=0, style=solid];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_104  [key=2, style=dotted];
m4_103 -> m4_101  [color=blue, key=0, style=bold];
m4_126 -> m4_127  [color=green, key=0, style=solid];
m4_126 -> m4_128  [color=green, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_126 -> m4_129  [color=green, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_126 -> m4_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_127 -> m4_128  [color=green, key=0, style=solid];
m4_128 -> m4_129  [color=green, key=0, style=solid];
m4_128 -> m4_130  [color=green, key=0, style=solid];
m4_128 -> m4_132  [color=green, key=2, style=dotted];
m4_129 -> m4_130  [color=green, key=0, style=solid];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_133  [key=2, style=dotted];
m4_131 -> m4_126  [color=blue, key=0, style=bold];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_24  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_23 -> m4_24  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_25 -> m4_22  [color=blue, key=0, style=bold];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_0 -> m4_4  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_8  [key=2, style=dotted];
m4_2 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_6  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_6 -> m4_0  [color=blue, key=0, style=bold];
m4_26 -> m4_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.MarketHoursDatabase", style=dashed];
m4_26 -> m4_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m4_26 -> m4_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_26 -> m4_47  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_26 -> m4_106  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_26 -> m4_110  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_26 -> m4_113  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_26 -> m4_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m4_26 -> m4_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolPropertiesDatabase", style=dashed];
m4_26 -> m4_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m4_26 -> m4_68  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_26 -> m4_31  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security EnsureCurrencyDataFeed", style=bold];
m4_26 -> m4_62  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security EnsureCurrencyDataFeed", style=bold];
m4_59 -> m4_60  [color=green, key=0, style=solid];
m4_59 -> m4_64  [color=green, key=1, label=exchangeHours, style=dashed];
m4_59 -> m4_66  [color=green, key=1, label=exchangeHours, style=dashed];
m4_59 -> m4_67  [color=green, key=1, label=exchangeHours, style=dashed];
m4_58 -> m4_59  [color=green, key=0, style=solid];
m4_58 -> m4_85  [key=2, style=dotted];
m4_58 -> m4_60  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_77  [key=2, style=dotted];
m4_60 -> m4_64  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_60 -> m4_66  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_60 -> m4_67  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_60 -> m4_68  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_64 -> m4_68  [key=0, style=solid];
m4_64 -> m4_86  [key=2, style=dotted];
m4_64 -> m4_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_66 -> m4_68  [key=0, style=solid];
m4_66 -> m4_87  [key=2, style=dotted];
m4_66 -> m4_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_88  [key=2, style=dotted];
m4_67 -> m4_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_56 -> m4_58  [key=0, style=solid];
m4_56 -> m4_64  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m4_56 -> m4_66  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m4_56 -> m4_67  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_83  [key=2, style=dotted];
m4_50 -> m4_58  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_60  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_71  [key=0, style=solid];
m4_50 -> m4_52  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_53  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_54  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_57  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_69  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_48 -> m4_60  [color=darkseagreen4, key=1, label=minimumResolution, style=dashed];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_78  [key=2, style=dotted];
m4_48 -> m4_80  [key=2, style=dotted];
m4_48 -> m4_81  [key=2, style=dotted];
m4_48 -> m4_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_49 -> m4_60  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m4_49 -> m4_50  [key=0, style=solid];
m4_61 -> m4_62  [key=0, style=solid];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_89  [key=2, style=dotted];
m4_54 -> m4_64  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_54 -> m4_66  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_54 -> m4_67  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_54 -> m4_56  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_82  [key=2, style=dotted];
m4_54 -> m4_57  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_65  [key=0, style=solid];
m4_70 -> m4_72  [key=0, style=solid];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_67  [key=0, style=solid];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_32  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_42  [key=0, style=solid];
m4_34 -> m4_73  [key=2, style=dotted];
m4_34 -> m4_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_34 -> m4_36  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_34 -> m4_38  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_34 -> m4_39  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_74  [key=2, style=dotted];
m4_42 -> m4_75  [key=2, style=dotted];
m4_42 -> m4_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_42 -> m4_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_42 -> m4_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_42 -> m4_44  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_45  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_46  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_47  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_106  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_110  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_113  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_47 -> m4_50  [color=darkseagreen4, key=1, label=potentials, style=dashed];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_78  [key=2, style=dotted];
m4_47 -> m4_79  [key=2, style=dotted];
m4_47 -> m4_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_47 -> m4_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_47 -> m4_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_31 -> m4_72  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_55 -> m4_56  [key=0, style=solid];
m4_57 -> m4_72  [key=0, style=solid];
m4_57 -> m4_84  [key=2, style=dotted];
m4_51 -> m4_50  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_7  [key=2, style=dotted];
m4_71 -> m4_91  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_63  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m4_53 -> m4_65  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_90  [key=2, style=dotted];
m4_44 -> m4_77  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_46 -> m4_77  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_37 -> m4_72  [key=0, style=solid];
m4_41 -> m4_72  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_32 -> m4_51  [color=darkseagreen4, key=1, label=normal, style=dashed];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_35  [color=darkseagreen4, key=1, label=normal, style=dashed];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_51  [color=darkseagreen4, key=1, label=invert, style=dashed];
m4_33 -> m4_52  [color=darkseagreen4, key=1, label=invert, style=dashed];
m4_33 -> m4_38  [color=darkseagreen4, key=1, label=invert, style=dashed];
m4_38 -> m4_34  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_35 -> m4_38  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_45  [key=0, style=solid];
m4_43 -> m4_76  [key=2, style=dotted];
m4_45 -> m4_47  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_76  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_40 -> m4_41  [key=0, style=solid];
m4_72 -> m4_26  [color=blue, key=0, style=bold];
m4_134 -> m4_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_47  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_106  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_110  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_113  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_52  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_69  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_24  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_39  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_119  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_134 -> m4_121  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_135 -> m4_106  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_135 -> m4_110  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_135 -> m4_113  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_136 -> m4_106  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_136 -> m4_110  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_136 -> m4_113  [color=darkseagreen4, key=1, label=markets, style=dashed];
m5_5 -> m5_6  [color=red, key=0, style=solid];
m5_5 -> m5_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_5 -> m5_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_5 -> m5_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_5 -> m5_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_5 -> m5_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_6 -> m5_7  [color=red, key=0, style=solid];
m5_6 -> m5_9  [color=red, key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_22  [key=2, style=dotted];
m5_9 -> m5_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_9 -> m5_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_9 -> m5_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_9 -> m5_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_9 -> m5_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_9 -> m5_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=0, style=solid];
m5_12 -> m5_23  [key=2, style=dotted];
m5_12 -> m5_12  [color=darkseagreen4, key=1, label=marketIdentifier, style=dashed];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_17  [key=0, style=solid];
m5_15 -> m5_23  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_20  [key=2, style=dotted];
m5_8 -> m5_19  [key=0, style=solid];
m5_8 -> m5_21  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_13 -> m5_19  [key=0, style=solid];
m5_13 -> m5_24  [key=2, style=dotted];
m5_16 -> m5_19  [key=0, style=solid];
m5_16 -> m5_24  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_19 -> m5_5  [color=blue, key=0, style=bold];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_26 -> m5_27  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_23  [key=2, style=dotted];
m5_28 -> m5_28  [color=darkseagreen4, key=1, label=code, style=dashed];
m5_27 -> m5_28  [key=0, style=solid];
m5_29 -> m5_25  [color=blue, key=0, style=bold];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_33  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_31 -> m5_32  [key=0, style=solid];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_23  [key=2, style=dotted];
m5_33 -> m5_33  [color=darkseagreen4, key=1, label=market, style=dashed];
m5_32 -> m5_33  [key=0, style=solid];
m5_34 -> m5_30  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_4  [key=0, style=solid];
m5_1 -> m5_3  [color=darkseagreen4, key=1, label=market, style=dashed];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_1  [key=0, style=solid];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m6_3 -> m6_4  [color=red, key=0, style=solid];
m6_4 -> m6_5  [color=red, key=0, style=solid];
m6_5 -> m6_3  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_6 -> m6_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs", style=dashed];
m6_6 -> m6_4  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs", style=dashed];
m8_9 -> m8_10  [color=red, key=0, style=solid];
m8_10 -> m8_11  [color=red, key=0, style=solid];
m8_10 -> m8_13  [color=red, key=0, style=solid];
m8_10 -> m8_15  [color=red, key=0, style=solid];
m8_11 -> m8_12  [color=red, key=0, style=solid];
m8_13 -> m8_14  [color=red, key=0, style=solid];
m8_15 -> m8_16  [color=red, key=0, style=solid];
m8_12 -> m8_19  [color=red, key=0, style=solid];
m8_14 -> m8_19  [color=red, key=0, style=solid];
m8_16 -> m8_17  [color=red, key=0, style=solid];
m8_17 -> m8_18  [color=red, key=0, style=solid];
m8_18 -> m8_19  [color=red, key=0, style=solid];
m8_19 -> m8_9  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_0  [color=blue, key=0, style=bold];
m8_20 -> m8_1  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m8_20 -> m8_2  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m8_20 -> m8_3  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m8_20 -> m8_4  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m8_20 -> m8_5  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m8_20 -> m8_6  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m8_20 -> m8_7  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m8_20 -> m8_12  [color=red, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m8_20 -> m8_14  [color=red, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m8_20 -> m8_18  [color=red, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierApiRequestType", style=dashed];
m9_54 -> m9_62  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierApiRequestType", style=dashed];
m9_54 -> m9_63  [color=darkseagreen4, key=1, label=RestRequest, style=dashed];
m9_54 -> m9_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_54 -> m9_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_54 -> m9_75  [color=darkseagreen4, key=1, label=RestRequest, style=dashed];
m9_55 -> m9_56  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_62  [key=0, style=solid];
m9_62 -> m9_63  [key=0, style=solid];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_85  [key=2, style=dotted];
m9_63 -> m9_66  [color=darkseagreen4, key=1, label=raw, style=dashed];
m9_63 -> m9_67  [color=darkseagreen4, key=1, label=raw, style=dashed];
m9_63 -> m9_70  [color=darkseagreen4, key=1, label=raw, style=dashed];
m9_63 -> m9_73  [color=darkseagreen4, key=1, label=raw, style=dashed];
m9_63 -> m9_75  [color=darkseagreen4, key=1, label=raw, style=dashed];
m9_63 -> m9_76  [color=darkseagreen4, key=1, label=raw, style=dashed];
m9_63 -> m9_77  [color=darkseagreen4, key=1, label=raw, style=dashed];
m9_63 -> m9_79  [color=darkseagreen4, key=1, label=raw, style=dashed];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_67  [key=0, style=solid];
m9_66 -> m9_68  [key=0, style=solid];
m9_66 -> m9_86  [key=2, style=dotted];
m9_66 -> m9_80  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_90  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_82  [key=2, style=dotted];
m9_57 -> m9_59  [color=darkseagreen4, key=1, label=client, style=dashed];
m9_57 -> m9_63  [color=darkseagreen4, key=1, label=client, style=dashed];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_83  [key=2, style=dotted];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_83  [key=2, style=dotted];
m9_61 -> m9_60  [key=0, style=solid];
m9_61 -> m9_84  [key=2, style=dotted];
m9_64 -> m9_65  [key=0, style=solid];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_86  [key=2, style=dotted];
m9_67 -> m9_80  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_86  [key=2, style=dotted];
m9_70 -> m9_72  [color=darkseagreen4, key=1, label=fault, style=dashed];
m9_73 -> m9_74  [key=0, style=solid];
m9_73 -> m9_75  [key=0, style=solid];
m9_73 -> m9_89  [key=2, style=dotted];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_91  [key=2, style=dotted];
m9_76 -> m9_88  [key=2, style=dotted];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_80  [key=0, style=solid];
m9_79 -> m9_81  [key=0, style=solid];
m9_79 -> m9_92  [key=2, style=dotted];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_77  [key=0, style=solid];
m9_80 -> m9_81  [key=0, style=solid];
m9_69 -> m9_70  [key=0, style=solid];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_73  [key=0, style=solid];
m9_72 -> m9_77  [key=0, style=solid];
m9_72 -> m9_87  [key=2, style=dotted];
m9_72 -> m9_88  [key=2, style=dotted];
m9_74 -> m9_81  [key=0, style=solid];
m9_78 -> m9_79  [key=0, style=solid];
m9_81 -> m9_54  [color=blue, key=0, style=bold];
m9_364 -> m9_365  [key=0, style=solid];
m9_364 -> m9_367  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TokenResponse", style=dashed];
m9_365 -> m9_366  [key=0, style=solid];
m9_365 -> m9_367  [color=darkseagreen4, key=1, label=handler, style=dashed];
m9_367 -> m9_368  [key=0, style=solid];
m9_367 -> m9_369  [key=2, style=dotted];
m9_366 -> m9_367  [key=0, style=solid];
m9_366 -> m9_368  [key=0, style=solid];
m9_368 -> m9_364  [color=blue, key=0, style=bold];
m9_455 -> m9_846  [key=0, style=solid];
m9_455 -> m9_847  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderClass", style=dashed];
m9_455 -> m9_848  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_455 -> m9_849  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_455 -> m9_850  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_455 -> m9_851  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_455 -> m9_852  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_455 -> m9_853  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_455 -> m9_854  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_846 -> m9_847  [key=0, style=solid];
m9_847 -> m9_848  [key=0, style=solid];
m9_848 -> m9_849  [key=0, style=solid];
m9_849 -> m9_850  [key=0, style=solid];
m9_849 -> m9_774  [key=2, style=dotted];
m9_850 -> m9_851  [key=0, style=solid];
m9_850 -> m9_856  [key=2, style=dotted];
m9_851 -> m9_852  [key=0, style=solid];
m9_851 -> m9_507  [key=2, style=dotted];
m9_852 -> m9_853  [key=0, style=solid];
m9_852 -> m9_508  [key=2, style=dotted];
m9_853 -> m9_854  [key=0, style=solid];
m9_853 -> m9_809  [key=2, style=dotted];
m9_854 -> m9_855  [key=0, style=solid];
m9_854 -> m9_506  [key=2, style=dotted];
m9_855 -> m9_455  [color=blue, key=0, style=bold];
m9_456 -> m9_795  [key=0, style=solid];
m9_456 -> m9_796  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_456 -> m9_797  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_456 -> m9_799  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_456 -> m9_800  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_795 -> m9_796  [key=0, style=solid];
m9_795 -> m9_454  [key=2, style=dotted];
m9_795 -> m9_797  [color=darkseagreen4, key=1, label=holdingQuantity, style=dashed];
m9_795 -> m9_799  [color=darkseagreen4, key=1, label=holdingQuantity, style=dashed];
m9_795 -> m9_800  [color=darkseagreen4, key=1, label=holdingQuantity, style=dashed];
m9_796 -> m9_797  [key=0, style=solid];
m9_796 -> m9_799  [key=0, style=solid];
m9_797 -> m9_798  [key=0, style=solid];
m9_797 -> m9_802  [key=0, style=solid];
m9_799 -> m9_800  [key=0, style=solid];
m9_799 -> m9_802  [key=0, style=solid];
m9_800 -> m9_801  [key=0, style=solid];
m9_800 -> m9_802  [key=0, style=solid];
m9_798 -> m9_803  [key=0, style=solid];
m9_802 -> m9_803  [key=0, style=solid];
m9_801 -> m9_803  [key=0, style=solid];
m9_803 -> m9_456  [color=blue, key=0, style=bold];
m9_544 -> m9_545  [key=0, style=solid];
m9_545 -> m9_544  [color=blue, key=0, style=bold];
m9_204 -> m9_344  [key=0, style=solid];
m9_204 -> m9_348  [color=darkseagreen4, key=1, label="System.Enum", style=dashed];
m9_344 -> m9_345  [key=0, style=solid];
m9_344 -> m9_350  [key=2, style=dotted];
m9_344 -> m9_351  [key=2, style=dotted];
m9_344 -> m9_352  [key=2, style=dotted];
m9_348 -> m9_349  [key=0, style=solid];
m9_348 -> m9_351  [key=2, style=dotted];
m9_345 -> m9_346  [key=0, style=solid];
m9_345 -> m9_353  [key=2, style=dotted];
m9_345 -> m9_347  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m9_346 -> m9_347  [key=0, style=solid];
m9_346 -> m9_348  [key=0, style=solid];
m9_347 -> m9_349  [key=0, style=solid];
m9_349 -> m9_204  [color=blue, key=0, style=bold];
m9_370 -> m9_371  [key=0, style=solid];
m9_371 -> m9_372  [key=0, style=solid];
m9_371 -> m9_150  [key=2, style=dotted];
m9_371 -> m9_377  [color=darkseagreen4, key=1, label=orders, style=dashed];
m9_371 -> m9_381  [color=darkseagreen4, key=1, label=orders, style=dashed];
m9_372 -> m9_373  [key=0, style=solid];
m9_372 -> m9_171  [key=2, style=dotted];
m9_372 -> m9_383  [key=2, style=dotted];
m9_372 -> m9_374  [color=darkseagreen4, key=1, label=openOrders, style=dashed];
m9_377 -> m9_378  [key=0, style=solid];
m9_377 -> m9_384  [key=2, style=dotted];
m9_377 -> m9_385  [key=2, style=dotted];
m9_377 -> m9_379  [color=darkseagreen4, key=1, label=task, style=dashed];
m9_381 -> m9_382  [key=0, style=solid];
m9_373 -> m9_374  [key=0, style=solid];
m9_373 -> m9_150  [key=2, style=dotted];
m9_373 -> m9_379  [color=darkseagreen4, key=1, label=tasks, style=dashed];
m9_373 -> m9_380  [color=darkseagreen4, key=1, label=tasks, style=dashed];
m9_374 -> m9_375  [key=0, style=solid];
m9_374 -> m9_380  [key=0, style=solid];
m9_374 -> m9_377  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m9_379 -> m9_374  [key=0, style=solid];
m9_379 -> m9_385  [key=2, style=dotted];
m9_380 -> m9_381  [key=0, style=solid];
m9_380 -> m9_386  [key=2, style=dotted];
m9_380 -> m9_387  [key=2, style=dotted];
m9_375 -> m9_376  [key=0, style=solid];
m9_376 -> m9_377  [key=0, style=solid];
m9_378 -> m9_379  [key=0, style=solid];
m9_378 -> m9_374  [key=0, style=solid];
m9_382 -> m9_370  [color=blue, key=0, style=bold];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_20 -> m9_23  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m9_20 -> m9_24  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m9_20 -> m9_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_21 -> m9_22  [key=0, style=solid];
m9_22 -> m9_23  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [key=0, style=solid];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_39  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=0, style=solid];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_39  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_34  [color=darkseagreen4, key=1, label=dueTime, style=dashed];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=0, style=solid];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_43  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_34  [color=darkseagreen4, key=1, label=dueTime, style=dashed];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_40  [key=2, style=dotted];
m9_33 -> m9_41  [key=2, style=dotted];
m9_33 -> m9_42  [key=2, style=dotted];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_44  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_45  [key=2, style=dotted];
m9_38 -> m9_20  [color=blue, key=0, style=bold];
m9_409 -> m9_410  [key=0, style=solid];
m9_410 -> m9_411  [key=0, style=solid];
m9_410 -> m9_150  [key=2, style=dotted];
m9_410 -> m9_412  [key=2, style=dotted];
m9_410 -> m9_134  [key=2, style=dotted];
m9_411 -> m9_409  [color=blue, key=0, style=bold];
m9_774 -> m9_775  [key=0, style=solid];
m9_774 -> m9_776  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m9_774 -> m9_781  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_774 -> m9_782  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m9_774 -> m9_787  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_774 -> m9_788  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m9_775 -> m9_776  [key=0, style=solid];
m9_775 -> m9_781  [key=0, style=solid];
m9_776 -> m9_777  [key=0, style=solid];
m9_776 -> m9_779  [key=0, style=solid];
m9_781 -> m9_782  [key=0, style=solid];
m9_781 -> m9_787  [key=0, style=solid];
m9_782 -> m9_783  [key=0, style=solid];
m9_782 -> m9_785  [key=0, style=solid];
m9_787 -> m9_788  [key=0, style=solid];
m9_787 -> m9_793  [key=0, style=solid];
m9_788 -> m9_789  [key=0, style=solid];
m9_788 -> m9_791  [key=0, style=solid];
m9_777 -> m9_778  [key=0, style=solid];
m9_779 -> m9_780  [key=0, style=solid];
m9_778 -> m9_794  [key=0, style=solid];
m9_780 -> m9_794  [key=0, style=solid];
m9_783 -> m9_784  [key=0, style=solid];
m9_785 -> m9_786  [key=0, style=solid];
m9_784 -> m9_794  [key=0, style=solid];
m9_786 -> m9_794  [key=0, style=solid];
m9_793 -> m9_794  [key=0, style=solid];
m9_789 -> m9_790  [key=0, style=solid];
m9_791 -> m9_792  [key=0, style=solid];
m9_790 -> m9_794  [key=0, style=solid];
m9_792 -> m9_794  [key=0, style=solid];
m9_794 -> m9_774  [color=blue, key=0, style=bold];
m9_171 -> m9_172  [key=0, style=solid];
m9_172 -> m9_173  [key=0, style=solid];
m9_172 -> m9_121  [key=2, style=dotted];
m9_172 -> m9_174  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_173 -> m9_174  [key=0, style=solid];
m9_173 -> m9_160  [key=2, style=dotted];
m9_173 -> m9_161  [key=2, style=dotted];
m9_174 -> m9_175  [key=0, style=solid];
m9_174 -> m9_54  [key=2, style=dotted];
m9_174 -> m9_178  [color=darkseagreen4, key=1, label=ordersContainer, style=dashed];
m9_175 -> m9_176  [key=0, style=solid];
m9_175 -> m9_178  [key=0, style=solid];
m9_178 -> m9_179  [key=0, style=solid];
m9_176 -> m9_177  [key=0, style=solid];
m9_176 -> m9_149  [key=2, style=dotted];
m9_177 -> m9_179  [key=0, style=solid];
m9_177 -> m9_150  [key=2, style=dotted];
m9_179 -> m9_171  [color=blue, key=0, style=bold];
m9_627 -> m9_642  [key=0, style=solid];
m9_642 -> m9_643  [key=0, style=solid];
m9_642 -> m9_639  [key=2, style=dotted];
m9_643 -> m9_627  [color=blue, key=0, style=bold];
m9_413 -> m9_414  [key=0, style=solid];
m9_413 -> m9_464  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_413 -> m9_424  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_413 -> m9_425  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_413 -> m9_426  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_413 -> m9_429  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_413 -> m9_431  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_413 -> m9_433  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_413 -> m9_438  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_413 -> m9_441  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_413 -> m9_446  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_414 -> m9_415  [key=0, style=solid];
m9_414 -> m9_449  [key=2, style=dotted];
m9_414 -> m9_463  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_414 -> m9_416  [color=darkseagreen4, key=1, label=cachedOpenOrder, style=dashed];
m9_414 -> m9_420  [color=darkseagreen4, key=1, label=cachedOpenOrder, style=dashed];
m9_424 -> m9_425  [key=0, style=solid];
m9_424 -> m9_454  [key=2, style=dotted];
m9_424 -> m9_428  [color=darkseagreen4, key=1, label=holdingQuantity, style=dashed];
m9_425 -> m9_426  [key=0, style=solid];
m9_425 -> m9_455  [key=2, style=dotted];
m9_425 -> m9_430  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m9_425 -> m9_434  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m9_425 -> m9_443  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m9_426 -> m9_427  [key=0, style=solid];
m9_426 -> m9_456  [key=2, style=dotted];
m9_429 -> m9_430  [key=0, style=solid];
m9_429 -> m9_431  [color=darkseagreen4, key=1, label=secondOrderQuantity, style=dashed];
m9_431 -> m9_432  [key=0, style=solid];
m9_431 -> m9_455  [key=2, style=dotted];
m9_431 -> m9_457  [key=2, style=dotted];
m9_431 -> m9_433  [color=darkseagreen4, key=1, label=restOfOrder, style=dashed];
m9_433 -> m9_434  [key=0, style=solid];
m9_433 -> m9_459  [key=2, style=dotted];
m9_433 -> m9_460  [key=2, style=dotted];
m9_438 -> m9_439  [key=0, style=solid];
m9_438 -> m9_452  [key=2, style=dotted];
m9_441 -> m9_442  [key=0, style=solid];
m9_441 -> m9_385  [key=2, style=dotted];
m9_446 -> m9_447  [key=0, style=solid];
m9_446 -> m9_385  [key=2, style=dotted];
m9_415 -> m9_416  [key=0, style=solid];
m9_415 -> m9_424  [key=0, style=solid];
m9_416 -> m9_417  [key=0, style=solid];
m9_416 -> m9_450  [key=2, style=dotted];
m9_416 -> m9_422  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_416 -> m9_423  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_420 -> m9_424  [key=0, style=solid];
m9_420 -> m9_451  [key=2, style=dotted];
m9_417 -> m9_418  [key=0, style=solid];
m9_417 -> m9_421  [key=0, style=solid];
m9_422 -> m9_423  [key=0, style=solid];
m9_422 -> m9_452  [key=2, style=dotted];
m9_423 -> m9_424  [key=0, style=solid];
m9_423 -> m9_453  [key=2, style=dotted];
m9_418 -> m9_419  [key=0, style=solid];
m9_421 -> m9_422  [key=0, style=solid];
m9_419 -> m9_420  [key=0, style=solid];
m9_419 -> m9_128  [key=2, style=dotted];
m9_428 -> m9_429  [key=0, style=solid];
m9_428 -> m9_430  [color=darkseagreen4, key=1, label=firstOrderQuantity, style=dashed];
m9_430 -> m9_431  [key=0, style=solid];
m9_430 -> m9_457  [key=2, style=dotted];
m9_434 -> m9_435  [key=0, style=solid];
m9_434 -> m9_461  [key=2, style=dotted];
m9_434 -> m9_440  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_443 -> m9_444  [key=0, style=solid];
m9_443 -> m9_461  [key=2, style=dotted];
m9_443 -> m9_446  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_427 -> m9_428  [key=0, style=solid];
m9_427 -> m9_443  [key=0, style=solid];
m9_432 -> m9_433  [key=0, style=solid];
m9_432 -> m9_458  [key=2, style=dotted];
m9_435 -> m9_436  [key=0, style=solid];
m9_435 -> m9_462  [key=2, style=dotted];
m9_440 -> m9_441  [key=0, style=solid];
m9_436 -> m9_437  [key=0, style=solid];
m9_436 -> m9_440  [key=0, style=solid];
m9_437 -> m9_438  [key=0, style=solid];
m9_439 -> m9_448  [key=0, style=solid];
m9_442 -> m9_448  [key=0, style=solid];
m9_444 -> m9_445  [key=0, style=solid];
m9_444 -> m9_446  [key=0, style=solid];
m9_444 -> m9_462  [key=2, style=dotted];
m9_445 -> m9_448  [key=0, style=solid];
m9_447 -> m9_448  [key=0, style=solid];
m9_448 -> m9_413  [color=blue, key=0, style=bold];
m9_180 -> m9_181  [key=0, style=solid];
m9_181 -> m9_182  [key=0, style=solid];
m9_181 -> m9_121  [key=2, style=dotted];
m9_181 -> m9_183  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_182 -> m9_183  [key=0, style=solid];
m9_182 -> m9_160  [key=2, style=dotted];
m9_182 -> m9_161  [key=2, style=dotted];
m9_183 -> m9_184  [key=0, style=solid];
m9_183 -> m9_54  [key=2, style=dotted];
m9_184 -> m9_185  [key=0, style=solid];
m9_185 -> m9_180  [color=blue, key=0, style=bold];
m9_539 -> m9_540  [key=0, style=solid];
m9_540 -> m9_541  [key=0, style=solid];
m9_540 -> m9_542  [key=0, style=solid];
m9_541 -> m9_543  [key=0, style=solid];
m9_542 -> m9_543  [key=0, style=solid];
m9_542 -> m9_49  [key=2, style=dotted];
m9_543 -> m9_539  [color=blue, key=0, style=bold];
m9_505 -> m9_700  [key=0, style=solid];
m9_505 -> m9_709  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m9_700 -> m9_701  [key=0, style=solid];
m9_700 -> m9_703  [key=0, style=solid];
m9_700 -> m9_705  [key=0, style=solid];
m9_700 -> m9_707  [key=0, style=solid];
m9_700 -> m9_709  [key=0, style=solid];
m9_709 -> m9_710  [key=0, style=solid];
m9_709 -> m9_658  [key=2, style=dotted];
m9_701 -> m9_702  [key=0, style=solid];
m9_703 -> m9_704  [key=0, style=solid];
m9_705 -> m9_706  [key=0, style=solid];
m9_707 -> m9_708  [key=0, style=solid];
m9_702 -> m9_710  [key=0, style=solid];
m9_704 -> m9_710  [key=0, style=solid];
m9_706 -> m9_710  [key=0, style=solid];
m9_708 -> m9_710  [key=0, style=solid];
m9_710 -> m9_505  [color=blue, key=0, style=bold];
m9_626 -> m9_841  [key=0, style=solid];
m9_841 -> m9_842  [key=0, style=solid];
m9_841 -> m9_843  [key=0, style=solid];
m9_842 -> m9_844  [key=0, style=solid];
m9_843 -> m9_844  [key=0, style=solid];
m9_843 -> m9_845  [key=2, style=dotted];
m9_844 -> m9_626  [color=blue, key=0, style=bold];
m9_282 -> m9_283  [key=0, style=solid];
m9_283 -> m9_284  [key=0, style=solid];
m9_283 -> m9_121  [key=2, style=dotted];
m9_284 -> m9_285  [key=0, style=solid];
m9_284 -> m9_54  [key=2, style=dotted];
m9_285 -> m9_282  [color=blue, key=0, style=bold];
m9_697 -> m9_698  [key=0, style=solid];
m9_46 -> m9_47  [key=0, style=solid];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_49  [key=2, style=dotted];
m9_48 -> m9_46  [color=blue, key=0, style=bold];
m9_50 -> m9_51  [key=0, style=solid];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_53  [key=2, style=dotted];
m9_52 -> m9_50  [color=blue, key=0, style=bold];
m9_403 -> m9_404  [key=0, style=solid];
m9_406 -> m9_407  [key=0, style=solid];
m9_404 -> m9_405  [key=0, style=solid];
m9_405 -> m9_403  [color=blue, key=0, style=bold];
m9_407 -> m9_408  [key=0, style=solid];
m9_408 -> m9_406  [color=blue, key=0, style=bold];
m9_464 -> m9_465  [key=0, style=solid];
m9_464 -> m9_464  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<long, QuantConnect.Brokerages.Tradier.TradierOrder>", style=dashed];
m9_463 -> m9_464  [key=0, style=solid];
m9_465 -> m9_463  [color=blue, key=0, style=bold];
m9_510 -> m9_511  [key=0, style=solid];
m9_514 -> m9_515  [key=0, style=solid];
m9_511 -> m9_512  [key=0, style=solid];
m9_511 -> m9_513  [key=2, style=dotted];
m9_512 -> m9_510  [color=blue, key=0, style=bold];
m9_515 -> m9_516  [key=0, style=solid];
m9_516 -> m9_514  [color=blue, key=0, style=bold];
m9_586 -> m9_587  [key=0, style=solid];
m9_589 -> m9_590  [key=0, style=solid];
m9_590 -> m9_591  [key=0, style=solid];
m9_590 -> m9_180  [key=2, style=dotted];
m9_590 -> m9_590  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m9_590 -> m9_592  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m9_590 -> m9_593  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m9_598 -> m9_599  [key=0, style=solid];
m9_603 -> m9_604  [key=0, style=solid];
m9_587 -> m9_588  [key=0, style=solid];
m9_588 -> m9_586  [color=blue, key=0, style=bold];
m9_591 -> m9_592  [key=0, style=solid];
m9_591 -> m9_593  [key=0, style=solid];
m9_592 -> m9_594  [key=0, style=solid];
m9_592 -> m9_596  [key=2, style=dotted];
m9_592 -> m9_128  [key=2, style=dotted];
m9_592 -> m9_592  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m9_593 -> m9_594  [key=0, style=solid];
m9_593 -> m9_582  [key=2, style=dotted];
m9_593 -> m9_593  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m9_594 -> m9_595  [key=0, style=solid];
m9_594 -> m9_597  [key=2, style=dotted];
m9_594 -> m9_594  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m9_595 -> m9_589  [color=blue, key=0, style=bold];
m9_599 -> m9_600  [key=0, style=solid];
m9_599 -> m9_601  [key=2, style=dotted];
m9_599 -> m9_602  [key=2, style=dotted];
m9_600 -> m9_598  [color=blue, key=0, style=bold];
m9_604 -> m9_605  [key=0, style=solid];
m9_605 -> m9_603  [color=blue, key=0, style=bold];
m9_634 -> m9_635  [key=0, style=solid];
m9_634 -> m9_638  [key=2, style=dotted];
m9_629 -> m9_630  [key=0, style=solid];
m9_629 -> m9_149  [key=2, style=dotted];
m9_632 -> m9_636  [key=0, style=solid];
m9_632 -> m9_385  [key=2, style=dotted];
m9_636 -> m9_637  [key=0, style=solid];
m9_636 -> m9_597  [key=2, style=dotted];
m9_630 -> m9_631  [key=0, style=solid];
m9_630 -> m9_461  [key=2, style=dotted];
m9_630 -> m9_632  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_628 -> m9_629  [key=0, style=solid];
m9_631 -> m9_632  [key=0, style=solid];
m9_631 -> m9_633  [key=0, style=solid];
m9_631 -> m9_462  [key=2, style=dotted];
m9_633 -> m9_634  [key=0, style=solid];
m9_633 -> m9_128  [key=2, style=dotted];
m9_635 -> m9_636  [key=0, style=solid];
m9_635 -> m9_87  [key=2, style=dotted];
m9_635 -> m9_88  [key=2, style=dotted];
m9_637 -> m9_628  [color=blue, key=0, style=bold];
m9_695 -> m9_696  [key=0, style=solid];
m9_695 -> m9_180  [key=2, style=dotted];
m9_698 -> m9_699  [key=0, style=solid];
m9_698 -> m9_180  [key=2, style=dotted];
m9_694 -> m9_695  [key=0, style=solid];
m9_696 -> m9_694  [color=blue, key=0, style=bold];
m9_699 -> m9_697  [color=blue, key=0, style=bold];
m9_237 -> m9_238  [key=0, style=solid];
m9_237 -> m9_239  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_237 -> m9_240  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals", style=dashed];
m9_237 -> m9_241  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m9_237 -> m9_242  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m9_238 -> m9_239  [key=0, style=solid];
m9_238 -> m9_121  [key=2, style=dotted];
m9_238 -> m9_240  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_238 -> m9_241  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_238 -> m9_242  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_238 -> m9_243  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_239 -> m9_240  [key=0, style=solid];
m9_239 -> m9_123  [key=2, style=dotted];
m9_240 -> m9_241  [key=0, style=solid];
m9_240 -> m9_204  [key=2, style=dotted];
m9_240 -> m9_123  [key=2, style=dotted];
m9_241 -> m9_242  [key=0, style=solid];
m9_241 -> m9_246  [key=2, style=dotted];
m9_241 -> m9_123  [key=2, style=dotted];
m9_242 -> m9_243  [key=0, style=solid];
m9_242 -> m9_246  [key=2, style=dotted];
m9_242 -> m9_123  [key=2, style=dotted];
m9_243 -> m9_244  [key=0, style=solid];
m9_243 -> m9_54  [key=2, style=dotted];
m9_244 -> m9_245  [key=0, style=solid];
m9_245 -> m9_237  [color=blue, key=0, style=bold];
m9_354 -> m9_355  [key=0, style=solid];
m9_354 -> m9_356  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_354 -> m9_357  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_354 -> m9_359  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_355 -> m9_356  [key=0, style=solid];
m9_356 -> m9_357  [key=0, style=solid];
m9_356 -> m9_362  [key=2, style=dotted];
m9_357 -> m9_358  [key=0, style=solid];
m9_357 -> m9_360  [key=0, style=solid];
m9_357 -> m9_363  [key=2, style=dotted];
m9_357 -> m9_86  [key=2, style=dotted];
m9_359 -> m9_360  [key=0, style=solid];
m9_359 -> m9_128  [key=2, style=dotted];
m9_358 -> m9_359  [key=0, style=solid];
m9_360 -> m9_361  [key=0, style=solid];
m9_361 -> m9_354  [color=blue, key=0, style=bold];
m9_186 -> m9_187  [key=0, style=solid];
m9_186 -> m9_188  [color=darkseagreen4, key=1, label=long, style=dashed];
m9_186 -> m9_189  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderClass", style=dashed];
m9_186 -> m9_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_186 -> m9_191  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderDuration", style=dashed];
m9_186 -> m9_192  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderType", style=dashed];
m9_186 -> m9_193  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_186 -> m9_194  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderDirection", style=dashed];
m9_186 -> m9_195  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_186 -> m9_196  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_186 -> m9_197  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_186 -> m9_198  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_186 -> m9_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_186 -> m9_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_187 -> m9_188  [key=0, style=solid];
m9_187 -> m9_121  [key=2, style=dotted];
m9_187 -> m9_189  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_187 -> m9_190  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_187 -> m9_191  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_187 -> m9_192  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_187 -> m9_193  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_187 -> m9_194  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_187 -> m9_196  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_187 -> m9_198  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_187 -> m9_200  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_187 -> m9_201  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_188 -> m9_189  [key=0, style=solid];
m9_188 -> m9_160  [key=2, style=dotted];
m9_188 -> m9_161  [key=2, style=dotted];
m9_189 -> m9_190  [key=0, style=solid];
m9_189 -> m9_204  [key=2, style=dotted];
m9_189 -> m9_123  [key=2, style=dotted];
m9_190 -> m9_191  [key=0, style=solid];
m9_190 -> m9_123  [key=2, style=dotted];
m9_191 -> m9_192  [key=0, style=solid];
m9_191 -> m9_204  [key=2, style=dotted];
m9_191 -> m9_123  [key=2, style=dotted];
m9_192 -> m9_193  [key=0, style=solid];
m9_192 -> m9_204  [key=2, style=dotted];
m9_192 -> m9_123  [key=2, style=dotted];
m9_193 -> m9_194  [key=0, style=solid];
m9_193 -> m9_123  [key=2, style=dotted];
m9_194 -> m9_195  [key=0, style=solid];
m9_194 -> m9_204  [key=2, style=dotted];
m9_194 -> m9_123  [key=2, style=dotted];
m9_195 -> m9_196  [key=0, style=solid];
m9_195 -> m9_197  [key=0, style=solid];
m9_196 -> m9_197  [key=0, style=solid];
m9_196 -> m9_205  [key=2, style=dotted];
m9_196 -> m9_123  [key=2, style=dotted];
m9_197 -> m9_198  [key=0, style=solid];
m9_197 -> m9_199  [key=0, style=solid];
m9_198 -> m9_199  [key=0, style=solid];
m9_198 -> m9_205  [key=2, style=dotted];
m9_198 -> m9_123  [key=2, style=dotted];
m9_199 -> m9_200  [key=0, style=solid];
m9_199 -> m9_201  [key=0, style=solid];
m9_200 -> m9_201  [key=0, style=solid];
m9_200 -> m9_123  [key=2, style=dotted];
m9_201 -> m9_202  [key=0, style=solid];
m9_201 -> m9_201  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_202 -> m9_203  [key=0, style=solid];
m9_202 -> m9_54  [key=2, style=dotted];
m9_203 -> m9_186  [color=blue, key=0, style=bold];
m9_458 -> m9_857  [key=0, style=solid];
m9_857 -> m9_858  [key=0, style=solid];
m9_857 -> m9_860  [key=0, style=solid];
m9_858 -> m9_859  [key=0, style=solid];
m9_860 -> m9_861  [key=0, style=solid];
m9_860 -> m9_863  [key=0, style=solid];
m9_859 -> m9_863  [key=0, style=solid];
m9_861 -> m9_862  [key=0, style=solid];
m9_862 -> m9_863  [key=0, style=solid];
m9_863 -> m9_458  [color=blue, key=0, style=bold];
m9_639 -> m9_640  [key=0, style=solid];
m9_640 -> m9_641  [key=0, style=solid];
m9_641 -> m9_639  [color=blue, key=0, style=bold];
m9_466 -> m9_467  [key=0, style=solid];
m9_466 -> m9_468  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_466 -> m9_471  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_466 -> m9_473  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_466 -> m9_477  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_466 -> m9_479  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_466 -> m9_483  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_466 -> m9_484  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_466 -> m9_485  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_466 -> m9_486  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_467 -> m9_468  [key=0, style=solid];
m9_467 -> m9_149  [key=2, style=dotted];
m9_468 -> m9_469  [key=0, style=solid];
m9_468 -> m9_471  [key=0, style=solid];
m9_468 -> m9_501  [key=2, style=dotted];
m9_471 -> m9_472  [key=0, style=solid];
m9_471 -> m9_383  [key=2, style=dotted];
m9_471 -> m9_398  [key=2, style=dotted];
m9_471 -> m9_502  [key=2, style=dotted];
m9_471 -> m9_510  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_471 -> m9_514  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_471 -> m9_475  [color=darkseagreen4, key=1, label=activeOrder, style=dashed];
m9_471 -> m9_487  [color=darkseagreen4, key=1, label=activeOrder, style=dashed];
m9_471 -> m9_490  [color=darkseagreen4, key=1, label=activeOrder, style=dashed];
m9_473 -> m9_474  [key=0, style=solid];
m9_473 -> m9_503  [key=2, style=dotted];
m9_473 -> m9_149  [key=2, style=dotted];
m9_477 -> m9_478  [key=0, style=solid];
m9_477 -> m9_479  [key=0, style=solid];
m9_477 -> m9_504  [key=2, style=dotted];
m9_477 -> m9_492  [color=darkseagreen4, key=1, label=contingent, style=dashed];
m9_477 -> m9_493  [color=darkseagreen4, key=1, label=contingent, style=dashed];
m9_479 -> m9_480  [key=0, style=solid];
m9_479 -> m9_483  [key=0, style=solid];
m9_483 -> m9_484  [key=0, style=solid];
m9_483 -> m9_505  [key=2, style=dotted];
m9_483 -> m9_487  [color=darkseagreen4, key=1, label=orderType, style=dashed];
m9_483 -> m9_494  [color=darkseagreen4, key=1, label=orderType, style=dashed];
m9_484 -> m9_485  [key=0, style=solid];
m9_484 -> m9_506  [key=2, style=dotted];
m9_484 -> m9_487  [color=darkseagreen4, key=1, label=orderDuration, style=dashed];
m9_484 -> m9_495  [color=darkseagreen4, key=1, label=orderDuration, style=dashed];
m9_485 -> m9_486  [key=0, style=solid];
m9_485 -> m9_507  [key=2, style=dotted];
m9_485 -> m9_487  [color=darkseagreen4, key=1, label=limitPrice, style=dashed];
m9_485 -> m9_496  [color=darkseagreen4, key=1, label=limitPrice, style=dashed];
m9_486 -> m9_487  [key=0, style=solid];
m9_486 -> m9_508  [key=2, style=dotted];
m9_486 -> m9_497  [color=darkseagreen4, key=1, label=stopPrice, style=dashed];
m9_469 -> m9_470  [key=0, style=solid];
m9_469 -> m9_149  [key=2, style=dotted];
m9_470 -> m9_500  [key=0, style=solid];
m9_472 -> m9_473  [key=0, style=solid];
m9_472 -> m9_475  [key=0, style=solid];
m9_475 -> m9_476  [key=0, style=solid];
m9_475 -> m9_479  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m9_487 -> m9_488  [key=0, style=solid];
m9_487 -> m9_509  [key=2, style=dotted];
m9_487 -> m9_489  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_490 -> m9_491  [key=0, style=solid];
m9_490 -> m9_91  [key=2, style=dotted];
m9_490 -> m9_88  [key=2, style=dotted];
m9_474 -> m9_500  [key=0, style=solid];
m9_476 -> m9_477  [key=0, style=solid];
m9_478 -> m9_479  [key=0, style=solid];
m9_492 -> m9_493  [key=0, style=solid];
m9_492 -> m9_499  [key=0, style=solid];
m9_493 -> m9_494  [key=0, style=solid];
m9_493 -> m9_499  [key=0, style=solid];
m9_493 -> m9_495  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m9_493 -> m9_496  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m9_493 -> m9_497  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m9_493 -> m9_498  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m9_480 -> m9_481  [key=0, style=solid];
m9_480 -> m9_149  [key=2, style=dotted];
m9_481 -> m9_482  [key=0, style=solid];
m9_481 -> m9_87  [key=2, style=dotted];
m9_481 -> m9_88  [key=2, style=dotted];
m9_482 -> m9_500  [key=0, style=solid];
m9_494 -> m9_495  [key=0, style=solid];
m9_495 -> m9_496  [key=0, style=solid];
m9_496 -> m9_497  [key=0, style=solid];
m9_497 -> m9_498  [key=0, style=solid];
m9_488 -> m9_489  [key=0, style=solid];
m9_488 -> m9_492  [key=0, style=solid];
m9_488 -> m9_462  [key=2, style=dotted];
m9_489 -> m9_490  [key=0, style=solid];
m9_489 -> m9_236  [key=2, style=dotted];
m9_491 -> m9_500  [key=0, style=solid];
m9_499 -> m9_500  [key=0, style=solid];
m9_498 -> m9_493  [key=0, style=solid];
m9_498 -> m9_458  [key=2, style=dotted];
m9_500 -> m9_466  [color=blue, key=0, style=bold];
m9_736 -> m9_737  [key=0, style=solid];
m9_736 -> m9_753  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m9_737 -> m9_738  [key=0, style=solid];
m9_737 -> m9_740  [key=0, style=solid];
m9_737 -> m9_743  [key=0, style=solid];
m9_737 -> m9_745  [key=0, style=solid];
m9_737 -> m9_747  [key=0, style=solid];
m9_737 -> m9_749  [key=0, style=solid];
m9_737 -> m9_751  [key=0, style=solid];
m9_737 -> m9_753  [key=0, style=solid];
m9_753 -> m9_754  [key=0, style=solid];
m9_753 -> m9_658  [key=2, style=dotted];
m9_738 -> m9_739  [key=0, style=solid];
m9_740 -> m9_741  [key=0, style=solid];
m9_743 -> m9_744  [key=0, style=solid];
m9_745 -> m9_746  [key=0, style=solid];
m9_747 -> m9_748  [key=0, style=solid];
m9_749 -> m9_750  [key=0, style=solid];
m9_751 -> m9_752  [key=0, style=solid];
m9_739 -> m9_754  [key=0, style=solid];
m9_741 -> m9_742  [key=0, style=solid];
m9_742 -> m9_754  [key=0, style=solid];
m9_744 -> m9_754  [key=0, style=solid];
m9_746 -> m9_754  [key=0, style=solid];
m9_748 -> m9_754  [key=0, style=solid];
m9_750 -> m9_754  [key=0, style=solid];
m9_752 -> m9_754  [key=0, style=solid];
m9_754 -> m9_736  [color=blue, key=0, style=bold];
m9_453 -> m9_517  [key=0, style=solid];
m9_453 -> m9_518  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_453 -> m9_521  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_453 -> m9_528  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_517 -> m9_518  [key=0, style=solid];
m9_517 -> m9_149  [key=2, style=dotted];
m9_518 -> m9_519  [key=0, style=solid];
m9_518 -> m9_521  [key=0, style=solid];
m9_518 -> m9_501  [key=2, style=dotted];
m9_521 -> m9_522  [key=0, style=solid];
m9_521 -> m9_529  [key=0, style=solid];
m9_521 -> m9_527  [color=darkseagreen4, key=1, label=orderID, style=dashed];
m9_528 -> m9_521  [key=0, style=solid];
m9_528 -> m9_531  [key=2, style=dotted];
m9_528 -> m9_532  [key=2, style=dotted];
m9_519 -> m9_520  [key=0, style=solid];
m9_519 -> m9_149  [key=2, style=dotted];
m9_520 -> m9_530  [key=0, style=solid];
m9_522 -> m9_523  [key=0, style=solid];
m9_522 -> m9_220  [key=2, style=dotted];
m9_522 -> m9_525  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_529 -> m9_530  [key=0, style=solid];
m9_527 -> m9_528  [key=0, style=solid];
m9_527 -> m9_452  [key=2, style=dotted];
m9_523 -> m9_524  [key=0, style=solid];
m9_523 -> m9_525  [key=0, style=solid];
m9_525 -> m9_526  [key=0, style=solid];
m9_525 -> m9_521  [key=0, style=solid];
m9_525 -> m9_462  [key=2, style=dotted];
m9_524 -> m9_530  [key=0, style=solid];
m9_526 -> m9_527  [key=0, style=solid];
m9_530 -> m9_453  [color=blue, key=0, style=bold];
m9_624 -> m9_719  [key=0, style=solid];
m9_719 -> m9_720  [key=0, style=solid];
m9_719 -> m9_722  [key=0, style=solid];
m9_719 -> m9_724  [key=0, style=solid];
m9_719 -> m9_727  [key=0, style=solid];
m9_719 -> m9_730  [key=0, style=solid];
m9_719 -> m9_732  [key=0, style=solid];
m9_719 -> m9_734  [key=0, style=solid];
m9_720 -> m9_721  [key=0, style=solid];
m9_722 -> m9_723  [key=0, style=solid];
m9_724 -> m9_725  [key=0, style=solid];
m9_727 -> m9_728  [key=0, style=solid];
m9_730 -> m9_731  [key=0, style=solid];
m9_732 -> m9_733  [key=0, style=solid];
m9_734 -> m9_735  [key=0, style=solid];
m9_734 -> m9_718  [key=2, style=dotted];
m9_721 -> m9_735  [key=0, style=solid];
m9_723 -> m9_735  [key=0, style=solid];
m9_725 -> m9_726  [key=0, style=solid];
m9_726 -> m9_735  [key=0, style=solid];
m9_728 -> m9_729  [key=0, style=solid];
m9_729 -> m9_735  [key=0, style=solid];
m9_731 -> m9_735  [key=0, style=solid];
m9_733 -> m9_735  [key=0, style=solid];
m9_735 -> m9_624  [color=blue, key=0, style=bold];
m9_260 -> m9_261  [key=0, style=solid];
m9_260 -> m9_262  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_260 -> m9_263  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_261 -> m9_262  [key=0, style=solid];
m9_261 -> m9_121  [key=2, style=dotted];
m9_261 -> m9_263  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_261 -> m9_264  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_262 -> m9_263  [key=0, style=solid];
m9_262 -> m9_122  [key=2, style=dotted];
m9_262 -> m9_123  [key=2, style=dotted];
m9_263 -> m9_264  [key=0, style=solid];
m9_263 -> m9_122  [key=2, style=dotted];
m9_263 -> m9_123  [key=2, style=dotted];
m9_264 -> m9_265  [key=0, style=solid];
m9_264 -> m9_54  [key=2, style=dotted];
m9_265 -> m9_266  [key=0, style=solid];
m9_266 -> m9_260  [color=blue, key=0, style=bold];
m9_286 -> m9_287  [key=0, style=solid];
m9_286 -> m9_292  [color=crimson, key=0, style=bold];
m9_286 -> m9_314  [color=crimson, key=0, style=bold];
m9_286 -> m9_325  [color=crimson, key=0, style=bold];
m9_286 -> m9_331  [color=crimson, key=0, style=bold];
m9_286 -> m9_288  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m9_287 -> m9_288  [key=0, style=solid];
m9_292 -> m9_293  [key=0, style=solid];
m9_314 -> m9_315  [key=0, style=solid];
m9_325 -> m9_326  [key=0, style=solid];
m9_331 -> m9_319  [key=0, style=solid];
m9_288 -> m9_289  [key=0, style=solid];
m9_288 -> m9_236  [key=2, style=dotted];
m9_288 -> m9_299  [color=darkseagreen4, key=1, label=symbolJoined, style=dashed];
m9_289 -> m9_290  [key=0, style=solid];
m9_289 -> m9_282  [key=2, style=dotted];
m9_289 -> m9_293  [color=darkseagreen4, key=1, label=session, style=dashed];
m9_289 -> m9_296  [color=darkseagreen4, key=1, label=session, style=dashed];
m9_289 -> m9_299  [color=darkseagreen4, key=1, label=session, style=dashed];
m9_299 -> m9_300  [key=0, style=solid];
m9_290 -> m9_291  [key=0, style=solid];
m9_290 -> m9_293  [key=0, style=solid];
m9_293 -> m9_294  [key=0, style=solid];
m9_293 -> m9_149  [key=2, style=dotted];
m9_296 -> m9_297  [key=0, style=solid];
m9_296 -> m9_333  [key=2, style=dotted];
m9_296 -> m9_298  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_296 -> m9_301  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_296 -> m9_302  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_296 -> m9_303  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_296 -> m9_304  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_296 -> m9_311  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_291 -> m9_292  [key=0, style=solid];
m9_291 -> m9_128  [key=2, style=dotted];
m9_294 -> m9_295  [key=0, style=solid];
m9_295 -> m9_296  [key=0, style=solid];
m9_297 -> m9_298  [key=0, style=solid];
m9_298 -> m9_299  [key=0, style=solid];
m9_298 -> m9_334  [key=2, style=dotted];
m9_301 -> m9_302  [key=0, style=solid];
m9_302 -> m9_303  [key=0, style=solid];
m9_303 -> m9_304  [key=0, style=solid];
m9_304 -> m9_305  [key=0, style=solid];
m9_304 -> m9_336  [key=2, style=dotted];
m9_311 -> m9_312  [key=0, style=solid];
m9_311 -> m9_338  [key=2, style=dotted];
m9_300 -> m9_301  [key=0, style=solid];
m9_300 -> m9_335  [key=2, style=dotted];
m9_300 -> m9_303  [color=darkseagreen4, key=1, label=encodedData, style=dashed];
m9_300 -> m9_305  [color=darkseagreen4, key=1, label=encodedData, style=dashed];
m9_305 -> m9_306  [key=0, style=solid];
m9_305 -> m9_309  [key=0, style=solid];
m9_305 -> m9_337  [key=2, style=dotted];
m9_306 -> m9_307  [key=0, style=solid];
m9_309 -> m9_294  [key=0, style=solid];
m9_309 -> m9_310  [key=0, style=solid];
m9_307 -> m9_308  [key=0, style=solid];
m9_307 -> m9_128  [key=2, style=dotted];
m9_308 -> m9_309  [key=0, style=solid];
m9_310 -> m9_311  [key=0, style=solid];
m9_310 -> m9_149  [key=2, style=dotted];
m9_312 -> m9_313  [key=0, style=solid];
m9_312 -> m9_339  [key=2, style=dotted];
m9_312 -> m9_315  [color=darkseagreen4, key=1, label=tradierStream, style=dashed];
m9_313 -> m9_314  [key=0, style=solid];
m9_313 -> m9_315  [key=0, style=solid];
m9_315 -> m9_316  [key=0, style=solid];
m9_315 -> m9_340  [key=2, style=dotted];
m9_316 -> m9_317  [key=0, style=solid];
m9_316 -> m9_341  [key=2, style=dotted];
m9_316 -> m9_318  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m9_317 -> m9_318  [key=0, style=solid];
m9_317 -> m9_342  [key=2, style=dotted];
m9_317 -> m9_327  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m9_318 -> m9_319  [key=0, style=solid];
m9_318 -> m9_318  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m9_318 -> m9_321  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m9_318 -> m9_327  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m9_327 -> m9_328  [key=0, style=solid];
m9_327 -> m9_330  [key=0, style=solid];
m9_327 -> m9_86  [key=2, style=dotted];
m9_327 -> m9_331  [color=darkseagreen4, key=1, label=tsd, style=dashed];
m9_319 -> m9_320  [key=0, style=solid];
m9_319 -> m9_332  [key=0, style=solid];
m9_321 -> m9_322  [key=0, style=solid];
m9_321 -> m9_324  [key=0, style=solid];
m9_321 -> m9_343  [key=2, style=dotted];
m9_320 -> m9_321  [key=0, style=solid];
m9_322 -> m9_323  [key=0, style=solid];
m9_324 -> m9_325  [key=0, style=solid];
m9_324 -> m9_326  [key=0, style=solid];
m9_323 -> m9_332  [key=0, style=solid];
m9_323 -> m9_128  [key=2, style=dotted];
m9_326 -> m9_327  [key=0, style=solid];
m9_328 -> m9_329  [key=0, style=solid];
m9_330 -> m9_331  [key=0, style=solid];
m9_330 -> m9_319  [key=0, style=solid];
m9_329 -> m9_330  [key=0, style=solid];
m9_329 -> m9_128  [key=2, style=dotted];
m9_332 -> m9_286  [color=blue, key=0, style=bold];
m9_508 -> m9_821  [key=0, style=solid];
m9_508 -> m9_824  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_821 -> m9_822  [key=0, style=solid];
m9_821 -> m9_823  [color=darkseagreen4, key=1, label=stopm, style=dashed];
m9_824 -> m9_825  [key=0, style=solid];
m9_824 -> m9_826  [color=darkseagreen4, key=1, label=stopl, style=dashed];
m9_822 -> m9_823  [key=0, style=solid];
m9_822 -> m9_824  [key=0, style=solid];
m9_823 -> m9_828  [key=0, style=solid];
m9_825 -> m9_826  [key=0, style=solid];
m9_825 -> m9_827  [key=0, style=solid];
m9_826 -> m9_828  [key=0, style=solid];
m9_827 -> m9_828  [key=0, style=solid];
m9_828 -> m9_508  [color=blue, key=0, style=bold];
m9_582 -> m9_606  [key=0, style=solid];
m9_582 -> m9_607  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_582 -> m9_608  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_582 -> m9_609  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_582 -> m9_619  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_582 -> m9_634  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_582 -> m9_621  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_582 -> m9_622  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_606 -> m9_607  [key=0, style=solid];
m9_606 -> m9_621  [key=0, style=solid];
m9_606 -> m9_624  [key=2, style=dotted];
m9_607 -> m9_608  [key=0, style=solid];
m9_607 -> m9_450  [key=2, style=dotted];
m9_607 -> m9_612  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_607 -> m9_613  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_607 -> m9_616  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_607 -> m9_619  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_607 -> m9_629  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_607 -> m9_632  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_607 -> m9_634  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_607 -> m9_636  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_608 -> m9_609  [key=0, style=solid];
m9_608 -> m9_531  [key=2, style=dotted];
m9_608 -> m9_624  [key=2, style=dotted];
m9_608 -> m9_610  [color=darkseagreen4, key=1, label=fill, style=dashed];
m9_608 -> m9_612  [color=darkseagreen4, key=1, label=fill, style=dashed];
m9_608 -> m9_618  [color=darkseagreen4, key=1, label=fill, style=dashed];
m9_608 -> m9_620  [color=darkseagreen4, key=1, label=fill, style=dashed];
m9_609 -> m9_610  [key=0, style=solid];
m9_609 -> m9_611  [key=0, style=solid];
m9_609 -> m9_625  [key=2, style=dotted];
m9_619 -> m9_620  [key=0, style=solid];
m9_619 -> m9_584  [key=2, style=dotted];
m9_619 -> m9_628  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_621 -> m9_622  [key=0, style=solid];
m9_621 -> m9_623  [key=0, style=solid];
m9_621 -> m9_627  [key=2, style=dotted];
m9_622 -> m9_623  [key=0, style=solid];
m9_622 -> m9_452  [key=2, style=dotted];
m9_612 -> m9_613  [key=0, style=solid];
m9_612 -> m9_620  [key=0, style=solid];
m9_612 -> m9_504  [key=2, style=dotted];
m9_612 -> m9_614  [color=darkseagreen4, key=1, label=contingent, style=dashed];
m9_612 -> m9_615  [color=darkseagreen4, key=1, label=contingent, style=dashed];
m9_613 -> m9_614  [key=0, style=solid];
m9_613 -> m9_620  [key=0, style=solid];
m9_613 -> m9_583  [key=2, style=dotted];
m9_616 -> m9_617  [key=0, style=solid];
m9_616 -> m9_452  [key=2, style=dotted];
m9_610 -> m9_611  [key=0, style=solid];
m9_618 -> m9_619  [key=0, style=solid];
m9_620 -> m9_621  [key=0, style=solid];
m9_620 -> m9_532  [key=2, style=dotted];
m9_611 -> m9_612  [key=0, style=solid];
m9_614 -> m9_615  [key=0, style=solid];
m9_614 -> m9_626  [key=2, style=dotted];
m9_614 -> m9_617  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_614 -> m9_619  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_614 -> m9_630  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_615 -> m9_616  [key=0, style=solid];
m9_615 -> m9_617  [key=0, style=solid];
m9_617 -> m9_618  [key=0, style=solid];
m9_617 -> m9_620  [key=0, style=solid];
m9_623 -> m9_582  [color=blue, key=0, style=bold];
m9_388 -> m9_389  [key=0, style=solid];
m9_389 -> m9_390  [key=0, style=solid];
m9_389 -> m9_140  [key=2, style=dotted];
m9_389 -> m9_398  [key=2, style=dotted];
m9_389 -> m9_399  [key=2, style=dotted];
m9_389 -> m9_392  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m9_389 -> m9_396  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m9_390 -> m9_391  [key=0, style=solid];
m9_390 -> m9_398  [key=2, style=dotted];
m9_390 -> m9_399  [key=2, style=dotted];
m9_390 -> m9_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_392 -> m9_393  [key=0, style=solid];
m9_392 -> m9_396  [key=0, style=solid];
m9_392 -> m9_394  [color=darkseagreen4, key=1, label=holding, style=dashed];
m9_392 -> m9_395  [color=darkseagreen4, key=1, label=holding, style=dashed];
m9_396 -> m9_397  [key=0, style=solid];
m9_391 -> m9_392  [key=0, style=solid];
m9_391 -> m9_400  [key=2, style=dotted];
m9_391 -> m9_401  [key=2, style=dotted];
m9_391 -> m9_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_391 -> m9_394  [color=darkseagreen4, key=1, label=quotes, style=dashed];
m9_394 -> m9_395  [key=0, style=solid];
m9_394 -> m9_392  [key=0, style=solid];
m9_394 -> m9_402  [key=2, style=dotted];
m9_393 -> m9_394  [key=0, style=solid];
m9_395 -> m9_392  [key=0, style=solid];
m9_395 -> m9_395  [color=darkseagreen4, key=1, label=holding, style=dashed];
m9_397 -> m9_388  [color=blue, key=0, style=bold];
m9_659 -> m9_660  [key=0, style=solid];
m9_659 -> m9_662  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_664  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_669  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_695  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_671  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_672  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_698  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_673  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_674  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_675  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_677  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_678  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_679  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_680  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_659 -> m9_683  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_660 -> m9_661  [key=0, style=solid];
m9_662 -> m9_663  [key=0, style=solid];
m9_662 -> m9_665  [key=0, style=solid];
m9_662 -> m9_667  [key=0, style=solid];
m9_662 -> m9_670  [key=0, style=solid];
m9_662 -> m9_673  [key=0, style=solid];
m9_664 -> m9_674  [key=0, style=solid];
m9_664 -> m9_686  [key=2, style=dotted];
m9_669 -> m9_674  [key=0, style=solid];
m9_669 -> m9_689  [key=2, style=dotted];
m9_669 -> m9_694  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_671 -> m9_672  [key=0, style=solid];
m9_671 -> m9_690  [key=2, style=dotted];
m9_671 -> m9_698  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_671 -> m9_674  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_671 -> m9_675  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_671 -> m9_676  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_671 -> m9_677  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_671 -> m9_678  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_671 -> m9_679  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_671 -> m9_682  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_671 -> m9_683  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_671 -> m9_684  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_672 -> m9_674  [key=0, style=solid];
m9_672 -> m9_689  [key=2, style=dotted];
m9_672 -> m9_697  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_672 -> m9_685  [color=darkseagreen4, key=1, label="out System.Threading.Tasks.Task", style=dashed];
m9_673 -> m9_685  [key=0, style=solid];
m9_673 -> m9_691  [key=2, style=dotted];
m9_674 -> m9_675  [key=0, style=solid];
m9_675 -> m9_676  [key=0, style=solid];
m9_675 -> m9_692  [key=2, style=dotted];
m9_677 -> m9_678  [key=0, style=solid];
m9_677 -> m9_624  [key=2, style=dotted];
m9_678 -> m9_679  [key=0, style=solid];
m9_678 -> m9_385  [key=2, style=dotted];
m9_679 -> m9_680  [key=0, style=solid];
m9_679 -> m9_693  [key=2, style=dotted];
m9_680 -> m9_681  [key=0, style=solid];
m9_680 -> m9_450  [key=2, style=dotted];
m9_680 -> m9_682  [color=darkseagreen4, key=1, label=orderByBrokerageId, style=dashed];
m9_683 -> m9_684  [key=0, style=solid];
m9_661 -> m9_662  [key=0, style=solid];
m9_663 -> m9_664  [key=0, style=solid];
m9_665 -> m9_666  [key=0, style=solid];
m9_667 -> m9_668  [key=0, style=solid];
m9_670 -> m9_671  [key=0, style=solid];
m9_666 -> m9_674  [key=0, style=solid];
m9_666 -> m9_687  [key=2, style=dotted];
m9_668 -> m9_669  [key=0, style=solid];
m9_668 -> m9_688  [key=2, style=dotted];
m9_668 -> m9_695  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_676 -> m9_677  [key=0, style=solid];
m9_682 -> m9_683  [key=0, style=solid];
m9_684 -> m9_685  [key=0, style=solid];
m9_681 -> m9_682  [key=0, style=solid];
m9_681 -> m9_683  [key=0, style=solid];
m9_685 -> m9_659  [color=blue, key=0, style=bold];
m9_459 -> m9_837  [key=0, style=solid];
m9_459 -> m9_838  [color=darkseagreen4, key=1, label="params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[]", style=dashed];
m9_837 -> m9_838  [key=0, style=solid];
m9_838 -> m9_839  [key=0, style=solid];
m9_838 -> m9_840  [key=2, style=dotted];
m9_839 -> m9_459  [color=blue, key=0, style=bold];
m9_247 -> m9_248  [key=0, style=solid];
m9_247 -> m9_249  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_247 -> m9_250  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m9_247 -> m9_251  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m9_247 -> m9_252  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals", style=dashed];
m9_248 -> m9_249  [key=0, style=solid];
m9_248 -> m9_121  [key=2, style=dotted];
m9_248 -> m9_250  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_248 -> m9_251  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_248 -> m9_252  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_248 -> m9_253  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_249 -> m9_250  [key=0, style=solid];
m9_249 -> m9_123  [key=2, style=dotted];
m9_250 -> m9_251  [key=0, style=solid];
m9_250 -> m9_246  [key=2, style=dotted];
m9_250 -> m9_123  [key=2, style=dotted];
m9_251 -> m9_252  [key=0, style=solid];
m9_251 -> m9_246  [key=2, style=dotted];
m9_251 -> m9_123  [key=2, style=dotted];
m9_252 -> m9_253  [key=0, style=solid];
m9_252 -> m9_204  [key=2, style=dotted];
m9_252 -> m9_123  [key=2, style=dotted];
m9_253 -> m9_254  [key=0, style=solid];
m9_253 -> m9_54  [key=2, style=dotted];
m9_254 -> m9_255  [key=0, style=solid];
m9_255 -> m9_247  [color=blue, key=0, style=bold];
m9_809 -> m9_810  [key=0, style=solid];
m9_810 -> m9_811  [key=0, style=solid];
m9_810 -> m9_813  [key=0, style=solid];
m9_810 -> m9_815  [key=0, style=solid];
m9_810 -> m9_817  [key=0, style=solid];
m9_810 -> m9_819  [key=0, style=solid];
m9_811 -> m9_812  [key=0, style=solid];
m9_813 -> m9_814  [key=0, style=solid];
m9_815 -> m9_816  [key=0, style=solid];
m9_817 -> m9_818  [key=0, style=solid];
m9_819 -> m9_820  [key=0, style=solid];
m9_819 -> m9_718  [key=2, style=dotted];
m9_812 -> m9_820  [key=0, style=solid];
m9_814 -> m9_820  [key=0, style=solid];
m9_816 -> m9_820  [key=0, style=solid];
m9_818 -> m9_820  [key=0, style=solid];
m9_820 -> m9_809  [color=blue, key=0, style=bold];
m9_49 -> m9_93  [key=0, style=solid];
m9_93 -> m9_94  [key=0, style=solid];
m9_94 -> m9_95  [key=0, style=solid];
m9_95 -> m9_96  [key=0, style=solid];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_82  [key=2, style=dotted];
m9_96 -> m9_101  [color=darkseagreen4, key=1, label=client, style=dashed];
m9_96 -> m9_112  [color=darkseagreen4, key=1, label=client, style=dashed];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_121  [key=2, style=dotted];
m9_97 -> m9_99  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_97 -> m9_100  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_97 -> m9_101  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_97 -> m9_112  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_85  [key=2, style=dotted];
m9_101 -> m9_103  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_101 -> m9_109  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_101 -> m9_112  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_127  [key=2, style=dotted];
m9_112 -> m9_90  [key=2, style=dotted];
m9_98 -> m9_99  [key=0, style=solid];
m9_98 -> m9_122  [key=2, style=dotted];
m9_98 -> m9_123  [key=2, style=dotted];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_123  [key=2, style=dotted];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_123  [key=2, style=dotted];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_115  [color=darkseagreen4, key=1, label=raw, style=dashed];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_86  [key=2, style=dotted];
m9_103 -> m9_105  [color=darkseagreen4, key=1, label=newTokens, style=dashed];
m9_103 -> m9_106  [color=darkseagreen4, key=1, label=newTokens, style=dashed];
m9_103 -> m9_107  [color=darkseagreen4, key=1, label=newTokens, style=dashed];
m9_103 -> m9_108  [color=darkseagreen4, key=1, label=newTokens, style=dashed];
m9_103 -> m9_110  [color=darkseagreen4, key=1, label=newTokens, style=dashed];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_125  [key=2, style=dotted];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_128  [key=2, style=dotted];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_112  [key=0, style=solid];
m9_105 -> m9_106  [key=0, style=solid];
m9_106 -> m9_107  [key=0, style=solid];
m9_107 -> m9_108  [key=0, style=solid];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_124  [key=2, style=dotted];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_126  [key=2, style=dotted];
m9_111 -> m9_114  [key=0, style=solid];
m9_111 -> m9_117  [key=0, style=solid];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_117  [key=0, style=solid];
m9_114 -> m9_115  [key=0, style=solid];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_119  [key=0, style=solid];
m9_116 -> m9_117  [key=0, style=solid];
m9_116 -> m9_119  [color=darkseagreen4, key=1, label=success, style=dashed];
m9_119 -> m9_120  [key=0, style=solid];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_87  [key=2, style=dotted];
m9_118 -> m9_88  [key=2, style=dotted];
m9_120 -> m9_49  [color=blue, key=0, style=bold];
m9_151 -> m9_152  [key=0, style=solid];
m9_151 -> m9_153  [color=darkseagreen4, key=1, label=long, style=dashed];
m9_152 -> m9_153  [key=0, style=solid];
m9_152 -> m9_121  [key=2, style=dotted];
m9_152 -> m9_154  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_153 -> m9_154  [key=0, style=solid];
m9_153 -> m9_160  [key=2, style=dotted];
m9_153 -> m9_161  [key=2, style=dotted];
m9_154 -> m9_155  [key=0, style=solid];
m9_154 -> m9_54  [key=2, style=dotted];
m9_154 -> m9_158  [color=darkseagreen4, key=1, label=eventContainer, style=dashed];
m9_155 -> m9_156  [key=0, style=solid];
m9_155 -> m9_158  [key=0, style=solid];
m9_158 -> m9_159  [key=0, style=solid];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_149  [key=2, style=dotted];
m9_157 -> m9_159  [key=0, style=solid];
m9_157 -> m9_150  [key=2, style=dotted];
m9_159 -> m9_151  [color=blue, key=0, style=bold];
m9_506 -> m9_804  [key=0, style=solid];
m9_804 -> m9_805  [key=0, style=solid];
m9_804 -> m9_807  [key=0, style=solid];
m9_805 -> m9_806  [key=0, style=solid];
m9_807 -> m9_808  [key=0, style=solid];
m9_807 -> m9_718  [key=2, style=dotted];
m9_806 -> m9_808  [key=0, style=solid];
m9_808 -> m9_506  [color=blue, key=0, style=bold];
m9_256 -> m9_257  [key=0, style=solid];
m9_257 -> m9_258  [key=0, style=solid];
m9_257 -> m9_121  [key=2, style=dotted];
m9_258 -> m9_259  [key=0, style=solid];
m9_258 -> m9_54  [key=2, style=dotted];
m9_259 -> m9_256  [color=blue, key=0, style=bold];
m9_507 -> m9_829  [key=0, style=solid];
m9_507 -> m9_832  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_829 -> m9_830  [key=0, style=solid];
m9_829 -> m9_831  [color=darkseagreen4, key=1, label=limit, style=dashed];
m9_832 -> m9_833  [key=0, style=solid];
m9_832 -> m9_834  [color=darkseagreen4, key=1, label=stopl, style=dashed];
m9_830 -> m9_831  [key=0, style=solid];
m9_830 -> m9_832  [key=0, style=solid];
m9_831 -> m9_836  [key=0, style=solid];
m9_833 -> m9_834  [key=0, style=solid];
m9_833 -> m9_835  [key=0, style=solid];
m9_834 -> m9_836  [key=0, style=solid];
m9_835 -> m9_836  [key=0, style=solid];
m9_836 -> m9_507  [color=blue, key=0, style=bold];
m9_692 -> m9_755  [key=0, style=solid];
m9_692 -> m9_760  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_692 -> m9_765  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_755 -> m9_756  [key=0, style=solid];
m9_755 -> m9_761  [key=0, style=solid];
m9_755 -> m9_766  [key=0, style=solid];
m9_755 -> m9_768  [key=0, style=solid];
m9_760 -> m9_769  [key=0, style=solid];
m9_765 -> m9_769  [key=0, style=solid];
m9_756 -> m9_757  [key=0, style=solid];
m9_761 -> m9_762  [key=0, style=solid];
m9_766 -> m9_767  [key=0, style=solid];
m9_768 -> m9_769  [key=0, style=solid];
m9_768 -> m9_718  [key=2, style=dotted];
m9_757 -> m9_758  [key=0, style=solid];
m9_758 -> m9_759  [key=0, style=solid];
m9_759 -> m9_760  [key=0, style=solid];
m9_762 -> m9_763  [key=0, style=solid];
m9_763 -> m9_764  [key=0, style=solid];
m9_764 -> m9_765  [key=0, style=solid];
m9_767 -> m9_769  [key=0, style=solid];
m9_769 -> m9_692  [color=blue, key=0, style=bold];
m9_461 -> m9_546  [key=0, style=solid];
m9_461 -> m9_548  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_461 -> m9_549  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_461 -> m9_550  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_461 -> m9_551  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_461 -> m9_553  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_461 -> m9_554  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_461 -> m9_555  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_461 -> m9_556  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_461 -> m9_557  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_461 -> m9_558  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_546 -> m9_547  [key=0, style=solid];
m9_546 -> m9_554  [color=darkseagreen4, key=1, label=classification, style=dashed];
m9_548 -> m9_549  [key=0, style=solid];
m9_548 -> m9_550  [key=0, style=solid];
m9_549 -> m9_550  [key=0, style=solid];
m9_549 -> m9_562  [key=2, style=dotted];
m9_550 -> m9_551  [key=0, style=solid];
m9_550 -> m9_563  [key=2, style=dotted];
m9_550 -> m9_149  [key=2, style=dotted];
m9_551 -> m9_552  [key=0, style=solid];
m9_551 -> m9_186  [key=2, style=dotted];
m9_551 -> m9_554  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_551 -> m9_556  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_551 -> m9_560  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_553 -> m9_554  [key=0, style=solid];
m9_553 -> m9_531  [key=2, style=dotted];
m9_553 -> m9_532  [key=2, style=dotted];
m9_554 -> m9_560  [key=0, style=solid];
m9_554 -> m9_564  [key=2, style=dotted];
m9_554 -> m9_150  [key=2, style=dotted];
m9_554 -> m9_460  [key=2, style=dotted];
m9_555 -> m9_556  [key=0, style=solid];
m9_555 -> m9_531  [key=2, style=dotted];
m9_555 -> m9_532  [key=2, style=dotted];
m9_556 -> m9_557  [key=0, style=solid];
m9_556 -> m9_236  [key=2, style=dotted];
m9_556 -> m9_558  [color=darkseagreen4, key=1, label=message, style=dashed];
m9_556 -> m9_559  [color=darkseagreen4, key=1, label=message, style=dashed];
m9_557 -> m9_558  [key=0, style=solid];
m9_557 -> m9_559  [key=0, style=solid];
m9_557 -> m9_565  [key=2, style=dotted];
m9_558 -> m9_559  [key=0, style=solid];
m9_547 -> m9_548  [key=0, style=solid];
m9_547 -> m9_550  [color=darkseagreen4, key=1, label=stopLimit, style=dashed];
m9_552 -> m9_553  [key=0, style=solid];
m9_552 -> m9_555  [key=0, style=solid];
m9_552 -> m9_462  [key=2, style=dotted];
m9_560 -> m9_561  [key=0, style=solid];
m9_559 -> m9_560  [key=0, style=solid];
m9_559 -> m9_87  [key=2, style=dotted];
m9_559 -> m9_88  [key=2, style=dotted];
m9_561 -> m9_461  [color=blue, key=0, style=bold];
m9_220 -> m9_221  [key=0, style=solid];
m9_220 -> m9_222  [color=darkseagreen4, key=1, label=long, style=dashed];
m9_220 -> m9_223  [color=darkseagreen4, key=1, label=long, style=dashed];
m9_221 -> m9_222  [key=0, style=solid];
m9_221 -> m9_121  [key=2, style=dotted];
m9_221 -> m9_223  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_221 -> m9_224  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_222 -> m9_223  [key=0, style=solid];
m9_222 -> m9_160  [key=2, style=dotted];
m9_222 -> m9_161  [key=2, style=dotted];
m9_223 -> m9_224  [key=0, style=solid];
m9_223 -> m9_160  [key=2, style=dotted];
m9_223 -> m9_161  [key=2, style=dotted];
m9_224 -> m9_225  [key=0, style=solid];
m9_224 -> m9_224  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_225 -> m9_226  [key=0, style=solid];
m9_225 -> m9_54  [key=2, style=dotted];
m9_226 -> m9_220  [color=blue, key=0, style=bold];
m9_533 -> m9_534  [key=0, style=solid];
m9_533 -> m9_536  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_534 -> m9_535  [key=0, style=solid];
m9_534 -> m9_536  [key=0, style=solid];
m9_534 -> m9_538  [key=2, style=dotted];
m9_536 -> m9_537  [key=0, style=solid];
m9_535 -> m9_536  [key=0, style=solid];
m9_535 -> m9_87  [key=2, style=dotted];
m9_535 -> m9_88  [key=2, style=dotted];
m9_537 -> m9_533  [color=blue, key=0, style=bold];
m9_206 -> m9_207  [key=0, style=solid];
m9_206 -> m9_208  [color=darkseagreen4, key=1, label=long, style=dashed];
m9_206 -> m9_209  [color=darkseagreen4, key=1, label=long, style=dashed];
m9_206 -> m9_211  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderType", style=dashed];
m9_206 -> m9_212  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderDuration", style=dashed];
m9_206 -> m9_213  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_206 -> m9_214  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_206 -> m9_215  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_206 -> m9_216  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_207 -> m9_208  [key=0, style=solid];
m9_207 -> m9_121  [key=2, style=dotted];
m9_207 -> m9_209  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_207 -> m9_210  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_208 -> m9_209  [key=0, style=solid];
m9_208 -> m9_160  [key=2, style=dotted];
m9_208 -> m9_161  [key=2, style=dotted];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_160  [key=2, style=dotted];
m9_209 -> m9_161  [key=2, style=dotted];
m9_211 -> m9_212  [key=0, style=solid];
m9_211 -> m9_204  [key=2, style=dotted];
m9_211 -> m9_123  [key=2, style=dotted];
m9_212 -> m9_213  [key=0, style=solid];
m9_212 -> m9_204  [key=2, style=dotted];
m9_212 -> m9_123  [key=2, style=dotted];
m9_213 -> m9_214  [key=0, style=solid];
m9_213 -> m9_215  [key=0, style=solid];
m9_214 -> m9_215  [key=0, style=solid];
m9_214 -> m9_205  [key=2, style=dotted];
m9_214 -> m9_219  [key=2, style=dotted];
m9_214 -> m9_123  [key=2, style=dotted];
m9_215 -> m9_216  [key=0, style=solid];
m9_215 -> m9_217  [key=0, style=solid];
m9_216 -> m9_217  [key=0, style=solid];
m9_216 -> m9_205  [key=2, style=dotted];
m9_216 -> m9_219  [key=2, style=dotted];
m9_216 -> m9_123  [key=2, style=dotted];
m9_210 -> m9_211  [key=0, style=solid];
m9_210 -> m9_210  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_210 -> m9_212  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_210 -> m9_214  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_210 -> m9_216  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_210 -> m9_217  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_217 -> m9_218  [key=0, style=solid];
m9_217 -> m9_54  [key=2, style=dotted];
m9_218 -> m9_206  [color=blue, key=0, style=bold];
m9_770 -> m9_771  [key=0, style=solid];
m9_771 -> m9_772  [key=0, style=solid];
m9_771 -> m9_773  [key=2, style=dotted];
m9_772 -> m9_770  [color=blue, key=0, style=bold];
m9_129 -> m9_130  [key=0, style=solid];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_121  [key=2, style=dotted];
m9_131 -> m9_132  [key=0, style=solid];
m9_131 -> m9_54  [key=2, style=dotted];
m9_132 -> m9_133  [key=0, style=solid];
m9_133 -> m9_129  [color=blue, key=0, style=bold];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_136  [color=darkseagreen4, key=1, label=long, style=dashed];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_121  [key=2, style=dotted];
m9_135 -> m9_137  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_123  [key=2, style=dotted];
m9_137 -> m9_138  [key=0, style=solid];
m9_137 -> m9_54  [key=2, style=dotted];
m9_138 -> m9_139  [key=0, style=solid];
m9_139 -> m9_134  [color=blue, key=0, style=bold];
m9_162 -> m9_163  [key=0, style=solid];
m9_162 -> m9_164  [color=darkseagreen4, key=1, label=long, style=dashed];
m9_163 -> m9_164  [key=0, style=solid];
m9_163 -> m9_121  [key=2, style=dotted];
m9_163 -> m9_165  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_164 -> m9_165  [key=0, style=solid];
m9_164 -> m9_160  [key=2, style=dotted];
m9_164 -> m9_161  [key=2, style=dotted];
m9_165 -> m9_166  [key=0, style=solid];
m9_165 -> m9_54  [key=2, style=dotted];
m9_165 -> m9_169  [color=darkseagreen4, key=1, label=gainLossContainer, style=dashed];
m9_166 -> m9_167  [key=0, style=solid];
m9_166 -> m9_169  [key=0, style=solid];
m9_169 -> m9_170  [key=0, style=solid];
m9_167 -> m9_168  [key=0, style=solid];
m9_167 -> m9_149  [key=2, style=dotted];
m9_168 -> m9_170  [key=0, style=solid];
m9_168 -> m9_150  [key=2, style=dotted];
m9_170 -> m9_162  [color=blue, key=0, style=bold];
m9_53 -> m9_566  [key=0, style=solid];
m9_566 -> m9_567  [key=0, style=solid];
m9_566 -> m9_568  [key=0, style=solid];
m9_566 -> m9_581  [key=2, style=dotted];
m9_567 -> m9_580  [key=0, style=solid];
m9_568 -> m9_569  [key=0, style=solid];
m9_568 -> m9_171  [key=2, style=dotted];
m9_568 -> m9_401  [key=2, style=dotted];
m9_568 -> m9_586  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_568 -> m9_571  [color=darkseagreen4, key=1, label=updatedOrders, style=dashed];
m9_568 -> m9_576  [color=darkseagreen4, key=1, label=updatedOrders, style=dashed];
m9_569 -> m9_570  [key=0, style=solid];
m9_569 -> m9_576  [key=0, style=solid];
m9_569 -> m9_571  [color=darkseagreen4, key=1, label=cachedOrder, style=dashed];
m9_571 -> m9_572  [key=0, style=solid];
m9_571 -> m9_573  [key=0, style=solid];
m9_571 -> m9_402  [key=2, style=dotted];
m9_571 -> m9_571  [color=darkseagreen4, key=1, label=cachedOrder, style=dashed];
m9_576 -> m9_577  [key=0, style=solid];
m9_576 -> m9_383  [key=2, style=dotted];
m9_576 -> m9_399  [key=2, style=dotted];
m9_576 -> m9_598  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_576 -> m9_578  [color=darkseagreen4, key=1, label=unknownOrderIDs, style=dashed];
m9_570 -> m9_571  [key=0, style=solid];
m9_572 -> m9_569  [key=0, style=solid];
m9_572 -> m9_582  [key=2, style=dotted];
m9_572 -> m9_572  [color=darkseagreen4, key=1, label=cachedOrder, style=dashed];
m9_572 -> m9_573  [color=darkseagreen4, key=1, label=cachedOrder, style=dashed];
m9_573 -> m9_574  [key=0, style=solid];
m9_573 -> m9_569  [key=0, style=solid];
m9_573 -> m9_583  [key=2, style=dotted];
m9_573 -> m9_573  [color=darkseagreen4, key=1, label=cachedOrder, style=dashed];
m9_574 -> m9_575  [key=0, style=solid];
m9_575 -> m9_569  [key=0, style=solid];
m9_575 -> m9_584  [key=2, style=dotted];
m9_575 -> m9_589  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_575 -> m9_590  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m9_577 -> m9_578  [key=0, style=solid];
m9_577 -> m9_580  [key=0, style=solid];
m9_578 -> m9_579  [key=0, style=solid];
m9_578 -> m9_398  [key=2, style=dotted];
m9_578 -> m9_585  [key=2, style=dotted];
m9_578 -> m9_603  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_579 -> m9_580  [key=0, style=solid];
m9_579 -> m9_87  [key=2, style=dotted];
m9_579 -> m9_88  [key=2, style=dotted];
m9_580 -> m9_53  [color=blue, key=0, style=bold];
m9_625 -> m9_644  [key=0, style=solid];
m9_625 -> m9_656  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderDirection", style=dashed];
m9_644 -> m9_645  [key=0, style=solid];
m9_644 -> m9_650  [key=0, style=solid];
m9_644 -> m9_656  [key=0, style=solid];
m9_656 -> m9_657  [key=0, style=solid];
m9_656 -> m9_658  [key=2, style=dotted];
m9_645 -> m9_646  [key=0, style=solid];
m9_650 -> m9_651  [key=0, style=solid];
m9_646 -> m9_647  [key=0, style=solid];
m9_647 -> m9_648  [key=0, style=solid];
m9_648 -> m9_649  [key=0, style=solid];
m9_649 -> m9_657  [key=0, style=solid];
m9_651 -> m9_652  [key=0, style=solid];
m9_652 -> m9_653  [key=0, style=solid];
m9_653 -> m9_654  [key=0, style=solid];
m9_654 -> m9_655  [key=0, style=solid];
m9_655 -> m9_657  [key=0, style=solid];
m9_657 -> m9_625  [color=blue, key=0, style=bold];
m9_267 -> m9_268  [key=0, style=solid];
m9_267 -> m9_269  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_267 -> m9_270  [color=darkseagreen4, key=1, label=bool, style=dashed];
m9_268 -> m9_269  [key=0, style=solid];
m9_268 -> m9_121  [key=2, style=dotted];
m9_268 -> m9_270  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_268 -> m9_271  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_269 -> m9_270  [key=0, style=solid];
m9_269 -> m9_123  [key=2, style=dotted];
m9_270 -> m9_271  [key=0, style=solid];
m9_270 -> m9_274  [key=2, style=dotted];
m9_270 -> m9_123  [key=2, style=dotted];
m9_271 -> m9_272  [key=0, style=solid];
m9_271 -> m9_54  [key=2, style=dotted];
m9_272 -> m9_273  [key=0, style=solid];
m9_273 -> m9_267  [color=blue, key=0, style=bold];
m9_275 -> m9_276  [key=0, style=solid];
m9_275 -> m9_277  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_275 -> m9_278  [color=darkseagreen4, key=1, label=bool, style=dashed];
m9_276 -> m9_277  [key=0, style=solid];
m9_276 -> m9_121  [key=2, style=dotted];
m9_276 -> m9_278  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_276 -> m9_279  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_277 -> m9_278  [key=0, style=solid];
m9_277 -> m9_123  [key=2, style=dotted];
m9_278 -> m9_279  [key=0, style=solid];
m9_278 -> m9_274  [key=2, style=dotted];
m9_278 -> m9_123  [key=2, style=dotted];
m9_279 -> m9_280  [key=0, style=solid];
m9_279 -> m9_54  [key=2, style=dotted];
m9_280 -> m9_281  [key=0, style=solid];
m9_281 -> m9_275  [color=blue, key=0, style=bold];
m9_693 -> m9_711  [key=0, style=solid];
m9_711 -> m9_712  [key=0, style=solid];
m9_711 -> m9_714  [key=0, style=solid];
m9_711 -> m9_716  [key=0, style=solid];
m9_712 -> m9_713  [key=0, style=solid];
m9_714 -> m9_715  [key=0, style=solid];
m9_716 -> m9_717  [key=0, style=solid];
m9_716 -> m9_718  [key=2, style=dotted];
m9_713 -> m9_717  [key=0, style=solid];
m9_715 -> m9_717  [key=0, style=solid];
m9_717 -> m9_693  [color=blue, key=0, style=bold];
m9_140 -> m9_141  [key=0, style=solid];
m9_141 -> m9_142  [key=0, style=solid];
m9_141 -> m9_121  [key=2, style=dotted];
m9_141 -> m9_143  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_142 -> m9_143  [key=0, style=solid];
m9_142 -> m9_123  [key=2, style=dotted];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_54  [key=2, style=dotted];
m9_143 -> m9_147  [color=darkseagreen4, key=1, label=positionContainer, style=dashed];
m9_144 -> m9_145  [key=0, style=solid];
m9_144 -> m9_147  [key=0, style=solid];
m9_147 -> m9_148  [key=0, style=solid];
m9_145 -> m9_146  [key=0, style=solid];
m9_145 -> m9_149  [key=2, style=dotted];
m9_146 -> m9_148  [key=0, style=solid];
m9_146 -> m9_150  [key=2, style=dotted];
m9_148 -> m9_140  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IHoldingsProvider", style=dashed];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label=long, style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_13  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_14  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_14  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_10  [key=0, style=solid];
m9_7 -> m9_15  [key=2, style=dotted];
m9_7 -> m9_9  [color=darkseagreen4, key=1, label=requestType, style=dashed];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_16  [key=2, style=dotted];
m9_8 -> m9_17  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_19  [key=2, style=dotted];
m9_9 -> m9_7  [key=0, style=solid];
m9_9 -> m9_18  [key=2, style=dotted];
m9_9 -> m9_17  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_19  [key=2, style=dotted];
m9_12 -> m9_0  [color=blue, key=0, style=bold];
m9_227 -> m9_228  [key=0, style=solid];
m9_227 -> m9_231  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m9_228 -> m9_229  [key=0, style=solid];
m9_228 -> m9_230  [key=0, style=solid];
m9_231 -> m9_232  [key=0, style=solid];
m9_231 -> m9_236  [key=2, style=dotted];
m9_229 -> m9_235  [key=0, style=solid];
m9_229 -> m9_150  [key=2, style=dotted];
m9_230 -> m9_231  [key=0, style=solid];
m9_230 -> m9_121  [key=2, style=dotted];
m9_230 -> m9_232  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_230 -> m9_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_232 -> m9_233  [key=0, style=solid];
m9_232 -> m9_123  [key=2, style=dotted];
m9_233 -> m9_234  [key=0, style=solid];
m9_233 -> m9_54  [key=2, style=dotted];
m9_234 -> m9_235  [key=0, style=solid];
m9_235 -> m9_227  [color=blue, key=0, style=bold];
m9_864 -> m9_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_8  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_23  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_25  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_26  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_34  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_47  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_37  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_51  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_56  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_59  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_62  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_64  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_76  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_95  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_98  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_99  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_105  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_106  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_107  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_108  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_109  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_110  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_118  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_131  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_143  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_154  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_165  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_173  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_174  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_182  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_189  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_191  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_192  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_194  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_202  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_211  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_212  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_217  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_225  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_233  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_240  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_243  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_252  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_253  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_258  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_264  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_271  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_279  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_284  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_289  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_298  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_365  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_367  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_372  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_375  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_377  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_389  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_391  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_410  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_414  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_416  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_420  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_422  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_423  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_424  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_426  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_433  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_434  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_438  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_443  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_471  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_511  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_515  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_477  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_481  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_483  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_487  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_490  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_522  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_527  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_528  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_535  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_540  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_542  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_551  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_553  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_554  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_555  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_559  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_566  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_568  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_569  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_572  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_573  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_575  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_590  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_593  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_594  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_576  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_599  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_579  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_606  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_607  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_608  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_612  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_613  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_616  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_619  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_630  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_635  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_636  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_620  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_622  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_669  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_695  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_672  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_698  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_675  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_677  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_679  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_680  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_864 -> m9_795  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m9_865 -> m9_464  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_866 -> m9_590  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m9_867 -> m9_629  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_867 -> m9_632  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_867 -> m9_634  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_867 -> m9_636  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_868 -> m9_630  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_869 -> m9_634  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_870 -> m9_695  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_870 -> m9_698  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m9_871 -> m9_695  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_871 -> m9_698  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m9_872 -> m9_837  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue", style=dashed];
m9_872 -> m9_838  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue", style=dashed];
m9_872 -> m9_841  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue", style=dashed];
m9_872 -> m9_843  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue", style=dashed];
m9_873 -> m9_846  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_847  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_848  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_849  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_850  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_851  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_852  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_853  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_854  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_857  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_858  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_859  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_860  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_861  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m9_873 -> m9_862  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label=Execution, style=dashed];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_0  [color=blue, key=0, style=bold];
m10_5 -> m10_6  [color=green, key=0, style=solid];
m10_6 -> m10_7  [color=green, key=0, style=solid];
m10_7 -> m10_5  [color=blue, key=0, style=bold];
m10_8 -> m10_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m10_8 -> m10_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m10_8 -> m10_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m10_8 -> m10_6  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m11_281 -> m11_282  [key=0, style=solid];
m11_281 -> m11_283  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_281 -> m11_284  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_281 -> m11_281  [color=darkorchid, key=3, label="method methodReturn System.DateTime RoundUp", style=bold];
m11_282 -> m11_283  [key=0, style=solid];
m11_282 -> m11_284  [key=0, style=solid];
m11_283 -> m11_285  [key=0, style=solid];
m11_284 -> m11_285  [key=0, style=solid];
m11_284 -> m11_279  [key=2, style=dotted];
m11_284 -> m11_284  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_285 -> m11_281  [color=blue, key=0, style=bold];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_157 -> m11_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_161  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_158 -> m11_163  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_158 -> m11_88  [color=darkorchid, key=3, label="Local variable long value", style=bold];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_163  [key=0, style=solid];
m11_160 -> m11_88  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_161 -> m11_162  [key=0, style=solid];
m11_161 -> m11_161  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_161 -> m11_163  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_161  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_159 -> m11_162  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_163 -> m11_164  [key=0, style=solid];
m11_162 -> m11_160  [key=0, style=solid];
m11_162 -> m11_162  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_164 -> m11_157  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
m11_0 -> m11_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_0 -> m11_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_0 -> m11_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_5  [color=darkseagreen4, key=1, label=oItem, style=dashed];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_7  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_5  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_8  [key=2, style=dotted];
m11_6 -> m11_0  [color=blue, key=0, style=bold];
m11_209 -> m11_210  [key=0, style=solid];
m11_210 -> m11_211  [key=0, style=solid];
m11_210 -> m11_148  [key=2, style=dotted];
m11_211 -> m11_209  [color=blue, key=0, style=bold];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_58  [color=darkseagreen4, key=1, label=V, style=dashed];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_56  [key=2, style=dotted];
m11_54 -> m11_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_55 -> m11_53  [color=blue, key=0, style=bold];
m11_399 -> m11_400  [key=0, style=solid];
m11_399 -> m11_398  [color=darkorchid, key=3, label="method methodReturn bool WaitOne", style=bold];
m11_400 -> m11_401  [key=0, style=solid];
m11_400 -> m11_398  [key=2, style=dotted];
m11_400 -> m11_400  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_401 -> m11_399  [color=blue, key=0, style=bold];
m11_258 -> m11_259  [key=0, style=solid];
m11_258 -> m11_260  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_258 -> m11_261  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_258 -> m11_262  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_258 -> m11_263  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_258 -> m11_258  [color=darkorchid, key=3, label="method methodReturn System.DateTime ExchangeRoundDown", style=bold];
m11_259 -> m11_260  [key=0, style=solid];
m11_259 -> m11_261  [key=0, style=solid];
m11_260 -> m11_265  [key=0, style=solid];
m11_261 -> m11_262  [key=0, style=solid];
m11_261 -> m11_257  [key=2, style=dotted];
m11_261 -> m11_263  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m11_261 -> m11_264  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m11_261 -> m11_245  [color=darkorchid, key=3, label="Local variable System.DateTime rounded", style=bold];
m11_261 -> m11_258  [color=darkorchid, key=3, label="Local variable System.DateTime rounded", style=bold];
m11_262 -> m11_263  [key=0, style=solid];
m11_262 -> m11_264  [key=0, style=solid];
m11_262 -> m11_266  [key=2, style=dotted];
m11_263 -> m11_262  [key=0, style=solid];
m11_263 -> m11_263  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m11_263 -> m11_264  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m11_264 -> m11_265  [key=0, style=solid];
m11_265 -> m11_258  [color=blue, key=0, style=bold];
m11_256 -> m11_251  [color=darkorchid, key=3, label="Parameter variable DateTimeZone to", style=bold];
m11_256 -> m11_299  [color=darkorchid, key=3, label="Parameter variable bool strict", style=bold];
m11_256 -> m11_256  [color=darkorchid, key=3, label="method methodReturn System.DateTime ConvertTo", style=bold];
m11_124 -> m11_125  [key=0, style=solid];
m11_124 -> m11_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_124 -> m11_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_124 -> m11_132  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_124 -> m11_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_141  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_125 -> m11_143  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_125 -> m11_144  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_125 -> m11_88  [color=darkorchid, key=3, label="Local variable long value", style=bold];
m11_129 -> m11_130  [key=0, style=solid];
m11_129 -> m11_132  [color=darkseagreen4, key=1, label=length, style=dashed];
m11_129 -> m11_135  [color=darkseagreen4, key=1, label=length, style=dashed];
m11_130 -> m11_131  [key=0, style=solid];
m11_130 -> m11_132  [key=0, style=solid];
m11_130 -> m11_147  [key=2, style=dotted];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_145  [color=darkseagreen4, key=1, label=isNegative, style=dashed];
m11_136 -> m11_137  [key=0, style=solid];
m11_136 -> m11_136  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_136 -> m11_140  [color=darkseagreen4, key=1, label=ch, style=dashed];
m11_136 -> m11_141  [color=darkseagreen4, key=1, label=ch, style=dashed];
m11_126 -> m11_127  [key=0, style=solid];
m11_126 -> m11_142  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m11_126 -> m11_145  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m11_126 -> m11_88  [color=darkorchid, key=3, label="Local variable int decimalPlaces", style=bold];
m11_141 -> m11_142  [key=0, style=solid];
m11_141 -> m11_141  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_141 -> m11_143  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_141 -> m11_144  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_145  [color=darkseagreen4, key=1, label=lo, style=dashed];
m11_144 -> m11_145  [key=0, style=solid];
m11_127 -> m11_128  [key=0, style=solid];
m11_127 -> m11_145  [color=darkseagreen4, key=1, label=hasDecimals, style=dashed];
m11_127 -> m11_127  [color=darkorchid, key=3, label="Local variable bool hasDecimals", style=bold];
m11_142 -> m11_135  [key=0, style=solid];
m11_142 -> m11_142  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m11_142 -> m11_145  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m11_145 -> m11_146  [key=0, style=solid];
m11_145 -> m11_148  [key=2, style=dotted];
m11_128 -> m11_129  [key=0, style=solid];
m11_128 -> m11_130  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_128 -> m11_131  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_128 -> m11_132  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_128 -> m11_134  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_128 -> m11_135  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_128 -> m11_136  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_128 -> m11_88  [color=darkorchid, key=3, label="Local variable int index", style=bold];
m11_131 -> m11_130  [key=0, style=solid];
m11_131 -> m11_131  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_131 -> m11_132  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_131 -> m11_134  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_131 -> m11_135  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_131 -> m11_136  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_134 -> m11_135  [key=0, style=solid];
m11_134 -> m11_134  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_134 -> m11_136  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_135 -> m11_136  [key=0, style=solid];
m11_135 -> m11_143  [key=0, style=solid];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_135  [key=0, style=solid];
m11_137 -> m11_138  [key=0, style=solid];
m11_137 -> m11_140  [key=0, style=solid];
m11_140 -> m11_141  [key=0, style=solid];
m11_140 -> m11_143  [key=0, style=solid];
m11_140 -> m11_147  [key=2, style=dotted];
m11_138 -> m11_139  [key=0, style=solid];
m11_138 -> m11_145  [color=darkseagreen4, key=1, label=hasDecimals, style=dashed];
m11_139 -> m11_135  [key=0, style=solid];
m11_139 -> m11_145  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m11_146 -> m11_124  [color=blue, key=0, style=bold];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_18  [color=darkseagreen4, key=1, label="System.Collections.Concurrent.ConcurrentQueue<T>", style=dashed];
m11_17 -> m11_18  [key=0, style=solid];
m11_18 -> m11_18  [key=0, style=solid];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_20  [key=2, style=dotted];
m11_19 -> m11_16  [color=blue, key=0, style=bold];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_50  [key=2, style=dotted];
m11_43 -> m11_45  [color=darkseagreen4, key=1, label=crypt, style=dashed];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_37  [key=2, style=dotted];
m11_45 -> m11_51  [key=2, style=dotted];
m11_45 -> m11_52  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_35  [key=2, style=dotted];
m11_44 -> m11_47  [color=darkseagreen4, key=1, label=hash, style=dashed];
m11_44 -> m11_48  [color=darkseagreen4, key=1, label=hash, style=dashed];
m11_47 -> m11_46  [key=0, style=solid];
m11_47 -> m11_39  [key=2, style=dotted];
m11_47 -> m11_40  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_41  [key=2, style=dotted];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_48  [key=0, style=solid];
m11_49 -> m11_42  [color=blue, key=0, style=bold];
m11_234 -> m11_235  [key=0, style=solid];
m11_234 -> m11_236  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_234 -> m11_237  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_234 -> m11_234  [color=darkorchid, key=3, label="method methodReturn System.TimeSpan Round", style=bold];
m11_234 -> m11_242  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan roundingInterval", style=bold];
m11_234 -> m11_88  [color=darkorchid, key=3, label="Parameter variable System.MidpointRounding roundingType", style=bold];
m11_235 -> m11_236  [key=0, style=solid];
m11_235 -> m11_237  [key=0, style=solid];
m11_236 -> m11_238  [key=0, style=solid];
m11_237 -> m11_238  [key=0, style=solid];
m11_237 -> m11_239  [key=2, style=dotted];
m11_237 -> m11_240  [key=2, style=dotted];
m11_237 -> m11_241  [key=2, style=dotted];
m11_237 -> m11_237  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_238 -> m11_234  [color=blue, key=0, style=bold];
m11_317 -> m11_318  [key=0, style=solid];
m11_317 -> m11_320  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_317 -> m11_322  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_317 -> m11_319  [color=darkorchid, key=3, label="method methodReturn bool MatchesTypeName", style=bold];
m11_317 -> m11_127  [color=darkorchid, key=3, label="method methodReturn bool MatchesTypeName", style=bold];
m11_318 -> m11_319  [key=0, style=solid];
m11_318 -> m11_320  [key=0, style=solid];
m11_320 -> m11_321  [key=0, style=solid];
m11_320 -> m11_322  [key=0, style=solid];
m11_322 -> m11_323  [key=0, style=solid];
m11_322 -> m11_324  [key=0, style=solid];
m11_319 -> m11_325  [key=0, style=solid];
m11_321 -> m11_325  [key=0, style=solid];
m11_323 -> m11_325  [key=0, style=solid];
m11_324 -> m11_325  [key=0, style=solid];
m11_325 -> m11_317  [color=blue, key=0, style=bold];
m11_115 -> m11_116  [key=0, style=solid];
m11_115 -> m11_118  [color=darkseagreen4, key=1, label=double, style=dashed];
m11_115 -> m11_120  [color=darkseagreen4, key=1, label=double, style=dashed];
m11_115 -> m11_115  [color=darkorchid, key=3, label="method methodReturn decimal SafeDecimalCast", style=bold];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_118  [key=0, style=solid];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_120  [key=0, style=solid];
m11_120 -> m11_121  [key=0, style=solid];
m11_117 -> m11_121  [key=0, style=solid];
m11_119 -> m11_121  [key=0, style=solid];
m11_121 -> m11_115  [color=blue, key=0, style=bold];
m11_338 -> m11_339  [key=0, style=solid];
m11_338 -> m11_340  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_338 -> m11_341  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_339 -> m11_340  [key=0, style=solid];
m11_339 -> m11_343  [color=darkseagreen4, key=1, label=name, style=dashed];
m11_339 -> m11_344  [color=darkseagreen4, key=1, label=name, style=dashed];
m11_340 -> m11_341  [key=0, style=solid];
m11_340 -> m11_344  [key=0, style=solid];
m11_341 -> m11_342  [key=0, style=solid];
m11_341 -> m11_346  [key=2, style=dotted];
m11_341 -> m11_343  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
m11_343 -> m11_344  [key=0, style=solid];
m11_343 -> m11_347  [key=2, style=dotted];
m11_343 -> m11_348  [key=2, style=dotted];
m11_343 -> m11_349  [key=2, style=dotted];
m11_343 -> m11_343  [color=darkseagreen4, key=1, label=name, style=dashed];
m11_343 -> m11_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_344 -> m11_345  [key=0, style=solid];
m11_342 -> m11_343  [key=0, style=solid];
m11_345 -> m11_338  [color=blue, key=0, style=bold];
m11_426 -> m11_427  [key=0, style=solid];
m11_58 -> m11_59  [key=0, style=solid];
m11_57 -> m11_58  [key=0, style=solid];
m11_59 -> m11_57  [color=blue, key=0, style=bold];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_68  [key=2, style=dotted];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_64  [key=2, style=dotted];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_75  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_73  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m11_65 -> m11_66  [key=0, style=solid];
m11_67 -> m11_65  [color=blue, key=0, style=bold];
m11_71 -> m11_69  [color=blue, key=0, style=bold];
m11_72 -> m11_73  [key=0, style=solid];
m11_74 -> m11_72  [color=blue, key=0, style=bold];
m11_350 -> m11_351  [key=0, style=solid];
m11_351 -> m11_352  [key=0, style=solid];
m11_351 -> m11_353  [key=2, style=dotted];
m11_352 -> m11_350  [color=blue, key=0, style=bold];
m11_427 -> m11_428  [key=0, style=solid];
m11_427 -> m11_429  [key=2, style=dotted];
m11_428 -> m11_426  [color=blue, key=0, style=bold];
m11_377 -> m11_385  [color=darkorchid, key=3, label="method methodReturn object ConvertTo", style=bold];
m11_267 -> m11_268  [key=0, style=solid];
m11_267 -> m11_269  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_267 -> m11_270  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_267 -> m11_271  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_267 -> m11_272  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_267 -> m11_267  [color=darkorchid, key=3, label="method methodReturn System.DateTime ExchangeRoundDownInTimeZone", style=bold];
m11_268 -> m11_269  [key=0, style=solid];
m11_268 -> m11_270  [key=0, style=solid];
m11_269 -> m11_274  [key=0, style=solid];
m11_270 -> m11_271  [key=0, style=solid];
m11_270 -> m11_275  [key=2, style=dotted];
m11_270 -> m11_272  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m11_270 -> m11_273  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m11_270 -> m11_251  [color=darkorchid, key=3, label="Local variable System.DateTime rounded", style=bold];
m11_271 -> m11_272  [key=0, style=solid];
m11_271 -> m11_273  [key=0, style=solid];
m11_271 -> m11_266  [key=2, style=dotted];
m11_272 -> m11_271  [key=0, style=solid];
m11_272 -> m11_275  [key=2, style=dotted];
m11_272 -> m11_272  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m11_272 -> m11_273  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m11_273 -> m11_274  [key=0, style=solid];
m11_274 -> m11_267  [color=blue, key=0, style=bold];
m11_406 -> m11_407  [key=0, style=solid];
m11_406 -> m11_408  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m11_407 -> m11_408  [key=0, style=solid];
m11_407 -> m11_36  [key=2, style=dotted];
m11_408 -> m11_409  [key=0, style=solid];
m11_408 -> m11_410  [key=2, style=dotted];
m11_409 -> m11_406  [color=blue, key=0, style=bold];
m11_398 -> m11_187  [color=darkorchid, key=3, label="Parameter variable int millisecondsTimeout", style=bold];
m11_398 -> m11_395  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
m11_398 -> m11_399  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
m11_242 -> m11_243  [key=0, style=solid];
m11_242 -> m11_234  [color=darkorchid, key=3, label="method methodReturn System.TimeSpan Round", style=bold];
m11_242 -> m11_276  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan roundingInterval", style=bold];
m11_243 -> m11_244  [key=0, style=solid];
m11_243 -> m11_234  [key=2, style=dotted];
m11_244 -> m11_242  [color=blue, key=0, style=bold];
m11_421 -> m11_422  [key=0, style=solid];
m11_421 -> m11_427  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_422 -> m11_423  [key=0, style=solid];
m11_422 -> m11_424  [key=2, style=dotted];
m11_422 -> m11_425  [key=2, style=dotted];
m11_422 -> m11_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_423 -> m11_421  [color=blue, key=0, style=bold];
m11_205 -> m11_206  [key=0, style=solid];
m11_206 -> m11_207  [key=0, style=solid];
m11_206 -> m11_208  [key=2, style=dotted];
m11_206 -> m11_93  [key=2, style=dotted];
m11_207 -> m11_205  [color=blue, key=0, style=bold];
m11_212 -> m11_213  [key=0, style=solid];
m11_213 -> m11_214  [key=0, style=solid];
m11_213 -> m11_219  [key=2, style=dotted];
m11_213 -> m11_184  [key=2, style=dotted];
m11_213 -> m11_215  [color=darkseagreen4, key=1, label=ext, style=dashed];
m11_213 -> m11_217  [color=darkseagreen4, key=1, label=ext, style=dashed];
m11_214 -> m11_215  [key=0, style=solid];
m11_214 -> m11_220  [key=2, style=dotted];
m11_215 -> m11_216  [key=0, style=solid];
m11_215 -> m11_217  [key=0, style=solid];
m11_215 -> m11_221  [key=2, style=dotted];
m11_217 -> m11_218  [key=0, style=solid];
m11_216 -> m11_217  [key=0, style=solid];
m11_218 -> m11_212  [color=blue, key=0, style=bold];
m11_149 -> m11_150  [key=0, style=solid];
m11_149 -> m11_152  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_149 -> m11_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_153  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_150 -> m11_155  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_150 -> m11_88  [color=darkorchid, key=3, label="Local variable int value", style=bold];
m11_152 -> m11_153  [key=0, style=solid];
m11_152 -> m11_155  [key=0, style=solid];
m11_152 -> m11_88  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_153  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_153 -> m11_155  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_153  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_151 -> m11_154  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_155 -> m11_156  [key=0, style=solid];
m11_154 -> m11_152  [key=0, style=solid];
m11_154 -> m11_154  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_156 -> m11_149  [color=blue, key=0, style=bold];
m11_395 -> m11_396  [key=0, style=solid];
m11_395 -> m11_398  [color=darkorchid, key=3, label="method methodReturn bool WaitOne", style=bold];
m11_396 -> m11_397  [key=0, style=solid];
m11_396 -> m11_398  [key=2, style=dotted];
m11_397 -> m11_395  [color=blue, key=0, style=bold];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_66  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m11_60 -> m11_70  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
m11_60 -> m11_73  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_64  [key=2, style=dotted];
m11_61 -> m11_56  [key=2, style=dotted];
m11_61 -> m11_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_62 -> m11_63  [key=0, style=solid];
m11_63 -> m11_60  [color=blue, key=0, style=bold];
m11_435 -> m11_436  [key=0, style=solid];
m11_435 -> m11_438  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_435 -> m11_440  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_435 -> m11_443  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_435 -> m11_446  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_435 -> m11_453  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_435 -> m11_454  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_435 -> m11_456  [color=red, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_435 -> m11_457  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_435 -> m11_458  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m11_436 -> m11_437  [key=0, style=solid];
m11_436 -> m11_436  [color=darkorchid, key=3, label="Local variable decimal limitPrice", style=bold];
m11_438 -> m11_439  [key=0, style=solid];
m11_438 -> m11_442  [key=0, style=solid];
m11_438 -> m11_445  [key=0, style=solid];
m11_438 -> m11_449  [key=0, style=solid];
m11_438 -> m11_455  [key=0, style=solid];
m11_440 -> m11_441  [key=0, style=solid];
m11_443 -> m11_444  [key=0, style=solid];
m11_446 -> m11_447  [key=0, style=solid];
m11_446 -> m11_448  [color=darkseagreen4, key=1, label=stopLimitOrder, style=dashed];
m11_453 -> m11_454  [key=0, style=solid];
m11_453 -> m11_456  [color=red, key=1, label=limitPrice, style=dashed];
m11_454 -> m11_456  [color=red, key=0, style=solid];
m11_456 -> m11_457  [color=red, key=0, style=solid];
m11_456 -> m11_461  [color=red, key=2, style=dotted];
m11_456 -> m11_458  [color=red, key=1, label=submitOrderRequest, style=dashed];
m11_457 -> m11_458  [key=0, style=solid];
m11_457 -> m11_462  [key=2, style=dotted];
m11_458 -> m11_459  [key=0, style=solid];
m11_458 -> m11_463  [key=2, style=dotted];
m11_437 -> m11_438  [key=0, style=solid];
m11_437 -> m11_436  [color=darkorchid, key=3, label="Local variable decimal stopPrice", style=bold];
m11_439 -> m11_440  [key=0, style=solid];
m11_442 -> m11_443  [key=0, style=solid];
m11_445 -> m11_446  [key=0, style=solid];
m11_449 -> m11_450  [key=0, style=solid];
m11_455 -> m11_459  [key=0, style=solid];
m11_455 -> m11_460  [key=2, style=dotted];
m11_441 -> m11_456  [color=red, key=0, style=solid];
m11_444 -> m11_456  [color=red, key=0, style=solid];
m11_447 -> m11_448  [key=0, style=solid];
m11_448 -> m11_456  [color=red, key=0, style=solid];
m11_450 -> m11_451  [key=0, style=solid];
m11_451 -> m11_452  [key=0, style=solid];
m11_452 -> m11_453  [key=0, style=solid];
m11_459 -> m11_435  [color=blue, key=0, style=bold];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_101  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_98 -> m11_102  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_98 -> m11_88  [color=darkorchid, key=3, label="method methodReturn decimal RoundToSignificantDigits", style=bold];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_101  [key=0, style=solid];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_104  [key=2, style=dotted];
m11_101 -> m11_94  [key=2, style=dotted];
m11_101 -> m11_95  [key=2, style=dotted];
m11_101 -> m11_96  [key=2, style=dotted];
m11_102 -> m11_103  [key=0, style=solid];
m11_102 -> m11_105  [key=2, style=dotted];
m11_100 -> m11_103  [key=0, style=solid];
m11_103 -> m11_98  [color=blue, key=0, style=bold];
m11_308 -> m11_309  [key=0, style=solid];
m11_309 -> m11_310  [key=0, style=solid];
m11_310 -> m11_308  [color=blue, key=0, style=bold];
m11_222 -> m11_223  [key=0, style=solid];
m11_222 -> m11_225  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_223 -> m11_224  [key=0, style=solid];
m11_223 -> m11_230  [key=2, style=dotted];
m11_223 -> m11_227  [color=darkseagreen4, key=1, label=stream, style=dashed];
m11_223 -> m11_228  [color=darkseagreen4, key=1, label=stream, style=dashed];
m11_225 -> m11_226  [key=0, style=solid];
m11_225 -> m11_232  [key=2, style=dotted];
m11_224 -> m11_225  [key=0, style=solid];
m11_224 -> m11_231  [key=2, style=dotted];
m11_224 -> m11_226  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_227 -> m11_228  [key=0, style=solid];
m11_228 -> m11_229  [key=0, style=solid];
m11_226 -> m11_227  [key=0, style=solid];
m11_226 -> m11_233  [key=2, style=dotted];
m11_229 -> m11_222  [color=blue, key=0, style=bold];
m11_245 -> m11_246  [key=0, style=solid];
m11_245 -> m11_247  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_245 -> m11_248  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_245 -> m11_245  [color=darkorchid, key=3, label="method methodReturn System.DateTime RoundDown", style=bold];
m11_245 -> m11_251  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan interval", style=bold];
m11_245 -> m11_258  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan interval", style=bold];
m11_246 -> m11_247  [key=0, style=solid];
m11_246 -> m11_248  [key=0, style=solid];
m11_247 -> m11_249  [key=0, style=solid];
m11_248 -> m11_249  [key=0, style=solid];
m11_248 -> m11_250  [key=2, style=dotted];
m11_248 -> m11_248  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_249 -> m11_245  [color=blue, key=0, style=bold];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_113  [color=darkorchid, key=3, label="Parameter variable decimal input", style=bold];
m11_106 -> m11_87  [color=darkorchid, key=3, label="method methodReturn decimal SmartRounding", style=bold];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_113  [key=2, style=dotted];
m11_107 -> m11_107  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_107 -> m11_109  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_107 -> m11_110  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_108 -> m11_109  [key=0, style=solid];
m11_108 -> m11_110  [key=0, style=solid];
m11_109 -> m11_112  [key=0, style=solid];
m11_109 -> m11_105  [key=2, style=dotted];
m11_110 -> m11_111  [key=0, style=solid];
m11_111 -> m11_112  [key=0, style=solid];
m11_111 -> m11_114  [key=2, style=dotted];
m11_112 -> m11_106  [color=blue, key=0, style=bold];
m11_302 -> m11_303  [key=0, style=solid];
m11_302 -> m11_304  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_302 -> m11_305  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_303 -> m11_304  [key=0, style=solid];
m11_303 -> m11_305  [key=0, style=solid];
m11_304 -> m11_306  [key=0, style=solid];
m11_304 -> m11_294  [key=2, style=dotted];
m11_304 -> m11_295  [key=2, style=dotted];
m11_304 -> m11_307  [key=2, style=dotted];
m11_305 -> m11_306  [key=0, style=solid];
m11_305 -> m11_294  [key=2, style=dotted];
m11_305 -> m11_298  [key=2, style=dotted];
m11_305 -> m11_307  [key=2, style=dotted];
m11_306 -> m11_302  [color=blue, key=0, style=bold];
m11_251 -> m11_252  [key=0, style=solid];
m11_251 -> m11_253  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_251 -> m11_254  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m11_251 -> m11_256  [color=darkorchid, key=3, label="method methodReturn System.DateTime RoundDownInTimeZone", style=bold];
m11_251 -> m11_267  [color=darkorchid, key=3, label="Parameter variable DateTimeZone roundingTimeZone", style=bold];
m11_252 -> m11_253  [key=0, style=solid];
m11_252 -> m11_256  [key=2, style=dotted];
m11_253 -> m11_254  [key=0, style=solid];
m11_253 -> m11_257  [key=2, style=dotted];
m11_253 -> m11_245  [color=darkorchid, key=3, label="Local variable System.DateTime roundedDateTimeInRoundingTimeZone", style=bold];
m11_254 -> m11_255  [key=0, style=solid];
m11_254 -> m11_256  [key=2, style=dotted];
m11_255 -> m11_251  [color=blue, key=0, style=bold];
m11_299 -> m11_300  [key=0, style=solid];
m11_299 -> m11_256  [color=darkorchid, key=3, label="method methodReturn System.DateTime ConvertFromUtc", style=bold];
m11_300 -> m11_301  [key=0, style=solid];
m11_300 -> m11_256  [key=2, style=dotted];
m11_301 -> m11_299  [color=blue, key=0, style=bold];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_167  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_165 -> m11_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_165 -> m11_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_165 -> m11_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_165 -> m11_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_171  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_166 -> m11_172  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_166 -> m11_173  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_166 -> m11_176  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_166 -> m11_177  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_166 -> m11_178  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_166 -> m11_88  [color=darkorchid, key=3, label="Local variable int last", style=bold];
m11_166 -> m11_169  [color=darkorchid, key=3, label="Local variable int last", style=bold];
m11_167 -> m11_168  [key=0, style=solid];
m11_167 -> m11_181  [key=2, style=dotted];
m11_167 -> m11_173  [color=darkseagreen4, key=1, label=csv, style=dashed];
m11_167 -> m11_178  [color=darkseagreen4, key=1, label=csv, style=dashed];
m11_167 -> m11_179  [color=darkseagreen4, key=1, label=csv, style=dashed];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_176  [key=0, style=solid];
m11_169 -> m11_88  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_170 -> m11_171  [key=0, style=solid];
m11_170 -> m11_175  [key=0, style=solid];
m11_173 -> m11_174  [key=0, style=solid];
m11_173 -> m11_182  [key=2, style=dotted];
m11_173 -> m11_183  [key=2, style=dotted];
m11_178 -> m11_179  [key=0, style=solid];
m11_178 -> m11_184  [key=2, style=dotted];
m11_178 -> m11_183  [key=2, style=dotted];
m11_171 -> m11_172  [key=0, style=solid];
m11_171 -> m11_173  [key=0, style=solid];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_172  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_178  [key=0, style=solid];
m11_177 -> m11_178  [key=0, style=solid];
m11_177 -> m11_177  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_168 -> m11_169  [key=0, style=solid];
m11_168 -> m11_170  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_168 -> m11_173  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_168 -> m11_174  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_168 -> m11_175  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_179 -> m11_180  [key=0, style=solid];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> m11_176  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_174 -> m11_177  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_174 -> m11_178  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_175 -> m11_169  [key=0, style=solid];
m11_175 -> m11_175  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_180 -> m11_165  [color=blue, key=0, style=bold];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_35  [key=2, style=dotted];
m11_28 -> m11_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_28 -> m11_33  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_37  [key=2, style=dotted];
m11_30 -> m11_38  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_36  [key=2, style=dotted];
m11_32 -> m11_31  [key=0, style=solid];
m11_32 -> m11_39  [key=2, style=dotted];
m11_32 -> m11_40  [key=2, style=dotted];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_41  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_33  [key=0, style=solid];
m11_34 -> m11_27  [color=blue, key=0, style=bold];
m11_326 -> m11_327  [key=0, style=solid];
m11_326 -> m11_329  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_326 -> m11_330  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_326 -> m11_331  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_326 -> m11_332  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_326 -> m11_334  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_326 -> m11_319  [color=darkorchid, key=3, label="method methodReturn bool IsSubclassOfGeneric", style=bold];
m11_326 -> m11_127  [color=darkorchid, key=3, label="method methodReturn bool IsSubclassOfGeneric", style=bold];
m11_327 -> m11_328  [key=0, style=solid];
m11_327 -> m11_335  [key=0, style=solid];
m11_329 -> m11_330  [key=0, style=solid];
m11_329 -> m11_331  [key=0, style=solid];
m11_330 -> m11_332  [key=0, style=solid];
m11_330 -> m11_337  [key=2, style=dotted];
m11_331 -> m11_332  [key=0, style=solid];
m11_332 -> m11_333  [key=0, style=solid];
m11_332 -> m11_334  [key=0, style=solid];
m11_334 -> m11_327  [key=0, style=solid];
m11_334 -> m11_334  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_328 -> m11_329  [key=0, style=solid];
m11_328 -> m11_326  [color=darkorchid, key=3, label="Local variable System.Type cur", style=bold];
m11_335 -> m11_336  [key=0, style=solid];
m11_333 -> m11_336  [key=0, style=solid];
m11_336 -> m11_326  [color=blue, key=0, style=bold];
m11_402 -> m11_403  [key=0, style=solid];
m11_403 -> m11_404  [key=0, style=solid];
m11_403 -> m11_405  [key=2, style=dotted];
m11_403 -> m11_403  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m11_404 -> m11_402  [color=blue, key=0, style=bold];
m11_430 -> m11_431  [key=0, style=solid];
m11_431 -> m11_432  [key=0, style=solid];
m11_431 -> m11_433  [key=2, style=dotted];
m11_431 -> m11_434  [key=2, style=dotted];
m11_432 -> m11_430  [color=blue, key=0, style=bold];
m11_374 -> m11_375  [key=0, style=solid];
m11_374 -> m11_377  [color=darkorchid, key=3, label="method methodReturn T ConvertTo", style=bold];
m11_375 -> m11_376  [key=0, style=solid];
m11_375 -> m11_377  [key=2, style=dotted];
m11_376 -> m11_374  [color=blue, key=0, style=bold];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_90  [color=darkseagreen4, key=1, label=double, style=dashed];
m11_87 -> m11_91  [color=darkseagreen4, key=1, label=double, style=dashed];
m11_87 -> m11_111  [color=darkorchid, key=3, label="Parameter variable int digits", style=bold];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_90  [key=0, style=solid];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_93  [key=2, style=dotted];
m11_90 -> m11_94  [key=2, style=dotted];
m11_90 -> m11_95  [key=2, style=dotted];
m11_90 -> m11_96  [key=2, style=dotted];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_97  [key=2, style=dotted];
m11_89 -> m11_92  [key=0, style=solid];
m11_92 -> m11_87  [color=blue, key=0, style=bold];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_12  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_14  [key=2, style=dotted];
m11_11 -> m11_15  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_13 -> m11_9  [color=blue, key=0, style=bold];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_78  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<TKey, TCollection>", style=dashed];
m11_76 -> m11_80  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<TKey, TCollection>", style=dashed];
m11_76 -> m11_81  [color=darkseagreen4, key=1, label=TElement, style=dashed];
m11_77 -> m11_78  [key=0, style=solid];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_81  [key=0, style=solid];
m11_78 -> m11_83  [key=2, style=dotted];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_85  [key=2, style=dotted];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_86  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_84  [key=2, style=dotted];
m11_79 -> m11_81  [color=darkseagreen4, key=1, label=list, style=dashed];
m11_82 -> m11_76  [color=blue, key=0, style=bold];
m11_378 -> m11_379  [key=0, style=solid];
m11_378 -> m11_380  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_378 -> m11_381  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_378 -> m11_382  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_378 -> m11_383  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_378 -> m11_385  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_378 -> m11_387  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_379 -> m11_380  [key=0, style=solid];
m11_379 -> m11_381  [key=0, style=solid];
m11_380 -> m11_388  [key=0, style=solid];
m11_380 -> m11_389  [key=2, style=dotted];
m11_381 -> m11_382  [key=0, style=solid];
m11_381 -> m11_383  [key=0, style=solid];
m11_381 -> m11_390  [key=2, style=dotted];
m11_382 -> m11_388  [key=0, style=solid];
m11_382 -> m11_391  [key=2, style=dotted];
m11_383 -> m11_384  [key=0, style=solid];
m11_383 -> m11_392  [key=2, style=dotted];
m11_383 -> m11_385  [color=darkseagreen4, key=1, label=parse, style=dashed];
m11_385 -> m11_386  [key=0, style=solid];
m11_385 -> m11_393  [key=2, style=dotted];
m11_387 -> m11_388  [key=0, style=solid];
m11_387 -> m11_394  [key=2, style=dotted];
m11_384 -> m11_385  [key=0, style=solid];
m11_384 -> m11_387  [key=0, style=solid];
m11_386 -> m11_388  [key=0, style=solid];
m11_388 -> m11_378  [color=blue, key=0, style=bold];
m11_411 -> m11_412  [key=0, style=solid];
m11_411 -> m11_413  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_411 -> m11_415  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_411 -> m11_416  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_411 -> m11_411  [color=darkorchid, key=3, label="method methodReturn string WithEmbeddedHtmlAnchors", style=bold];
m11_412 -> m11_413  [key=0, style=solid];
m11_412 -> m11_418  [key=2, style=dotted];
m11_413 -> m11_414  [key=0, style=solid];
m11_413 -> m11_419  [key=2, style=dotted];
m11_415 -> m11_414  [key=0, style=solid];
m11_415 -> m11_420  [key=2, style=dotted];
m11_415 -> m11_415  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_415 -> m11_416  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_416 -> m11_417  [key=0, style=solid];
m11_414 -> m11_415  [key=0, style=solid];
m11_414 -> m11_416  [key=0, style=solid];
m11_417 -> m11_411  [color=blue, key=0, style=bold];
m11_113 -> m11_122  [key=0, style=solid];
m11_113 -> m11_106  [color=darkorchid, key=3, label="Parameter variable decimal input", style=bold];
m11_122 -> m11_123  [key=0, style=solid];
m11_123 -> m11_113  [color=blue, key=0, style=bold];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_185 -> m11_191  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_185 -> m11_196  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_185 -> m11_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_185 -> m11_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_186 -> m11_187  [key=0, style=solid];
m11_186 -> m11_181  [key=2, style=dotted];
m11_186 -> m11_196  [color=darkseagreen4, key=1, label=csv, style=dashed];
m11_186 -> m11_200  [color=darkseagreen4, key=1, label=csv, style=dashed];
m11_186 -> m11_201  [color=darkseagreen4, key=1, label=csv, style=dashed];
m11_190 -> m11_191  [key=0, style=solid];
m11_190 -> m11_199  [key=0, style=solid];
m11_190 -> m11_88  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_191 -> m11_192  [key=0, style=solid];
m11_191 -> m11_194  [key=0, style=solid];
m11_191 -> m11_198  [key=0, style=solid];
m11_196 -> m11_197  [key=0, style=solid];
m11_196 -> m11_182  [key=2, style=dotted];
m11_196 -> m11_203  [key=2, style=dotted];
m11_196 -> m11_183  [key=2, style=dotted];
m11_199 -> m11_200  [key=0, style=solid];
m11_199 -> m11_201  [key=0, style=solid];
m11_200 -> m11_201  [key=0, style=solid];
m11_200 -> m11_184  [key=2, style=dotted];
m11_200 -> m11_204  [key=2, style=dotted];
m11_200 -> m11_183  [key=2, style=dotted];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_196  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_187 -> m11_199  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_187 -> m11_200  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_187 -> m11_187  [color=darkorchid, key=3, label="Local variable int last", style=bold];
m11_187 -> m11_190  [color=darkorchid, key=3, label="Local variable int last", style=bold];
m11_201 -> m11_202  [key=0, style=solid];
m11_188 -> m11_189  [key=0, style=solid];
m11_188 -> m11_193  [color=darkseagreen4, key=1, label=textDataField, style=dashed];
m11_188 -> m11_127  [color=darkorchid, key=3, label="Local variable bool textDataField", style=bold];
m11_189 -> m11_190  [key=0, style=solid];
m11_189 -> m11_191  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_189 -> m11_196  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_189 -> m11_197  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_189 -> m11_198  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_193 -> m11_198  [key=0, style=solid];
m11_193 -> m11_193  [color=darkseagreen4, key=1, label=textDataField, style=dashed];
m11_193 -> m11_195  [color=darkseagreen4, key=1, label=textDataField, style=dashed];
m11_197 -> m11_198  [key=0, style=solid];
m11_197 -> m11_199  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_197 -> m11_200  [color=darkseagreen4, key=1, label=last, style=dashed];
m11_198 -> m11_190  [key=0, style=solid];
m11_198 -> m11_198  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_192 -> m11_193  [key=0, style=solid];
m11_194 -> m11_195  [key=0, style=solid];
m11_195 -> m11_196  [key=0, style=solid];
m11_195 -> m11_198  [key=0, style=solid];
m11_202 -> m11_185  [color=blue, key=0, style=bold];
m11_354 -> m11_355  [key=0, style=solid];
m11_355 -> m11_356  [key=0, style=solid];
m11_355 -> m11_358  [key=0, style=solid];
m11_355 -> m11_360  [key=0, style=solid];
m11_355 -> m11_362  [key=0, style=solid];
m11_355 -> m11_364  [key=0, style=solid];
m11_355 -> m11_366  [key=0, style=solid];
m11_356 -> m11_357  [key=0, style=solid];
m11_358 -> m11_359  [key=0, style=solid];
m11_360 -> m11_361  [key=0, style=solid];
m11_362 -> m11_363  [key=0, style=solid];
m11_364 -> m11_365  [key=0, style=solid];
m11_366 -> m11_367  [key=0, style=solid];
m11_366 -> m11_373  [key=2, style=dotted];
m11_357 -> m11_367  [key=0, style=solid];
m11_357 -> m11_368  [key=2, style=dotted];
m11_359 -> m11_367  [key=0, style=solid];
m11_359 -> m11_369  [key=2, style=dotted];
m11_361 -> m11_367  [key=0, style=solid];
m11_361 -> m11_370  [key=2, style=dotted];
m11_363 -> m11_367  [key=0, style=solid];
m11_363 -> m11_371  [key=2, style=dotted];
m11_365 -> m11_367  [key=0, style=solid];
m11_365 -> m11_372  [key=2, style=dotted];
m11_367 -> m11_354  [color=blue, key=0, style=bold];
m11_311 -> m11_312  [key=0, style=solid];
m11_311 -> m11_313  [color=darkseagreen4, key=1, label="System.Timers.Timer", style=dashed];
m11_312 -> m11_313  [key=0, style=solid];
m11_312 -> m11_315  [key=2, style=dotted];
m11_313 -> m11_314  [key=0, style=solid];
m11_313 -> m11_316  [key=2, style=dotted];
m11_314 -> m11_311  [color=blue, key=0, style=bold];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_24  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_24  [key=0, style=solid];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_26  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid];
m11_25 -> m11_21  [color=blue, key=0, style=bold];
m11_286 -> m11_287  [key=0, style=solid];
m11_286 -> m11_288  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_286 -> m11_289  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_286 -> m11_290  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_286 -> m11_291  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_287 -> m11_288  [key=0, style=solid];
m11_287 -> m11_289  [key=0, style=solid];
m11_287 -> m11_293  [key=2, style=dotted];
m11_288 -> m11_292  [key=0, style=solid];
m11_289 -> m11_290  [key=0, style=solid];
m11_289 -> m11_291  [key=0, style=solid];
m11_290 -> m11_292  [key=0, style=solid];
m11_290 -> m11_294  [key=2, style=dotted];
m11_290 -> m11_295  [key=2, style=dotted];
m11_290 -> m11_296  [key=2, style=dotted];
m11_290 -> m11_297  [key=2, style=dotted];
m11_291 -> m11_292  [key=0, style=solid];
m11_291 -> m11_294  [key=2, style=dotted];
m11_291 -> m11_298  [key=2, style=dotted];
m11_291 -> m11_296  [key=2, style=dotted];
m11_291 -> m11_297  [key=2, style=dotted];
m11_292 -> m11_286  [color=blue, key=0, style=bold];
m11_276 -> m11_277  [key=0, style=solid];
m11_277 -> m11_278  [key=0, style=solid];
m11_277 -> m11_279  [key=2, style=dotted];
m11_277 -> m11_280  [key=2, style=dotted];
m11_278 -> m11_276  [color=blue, key=0, style=bold];
m11_464 -> m11_58  [color=darkseagreen4, key=1, label=V, style=dashed];
m11_465 -> m11_66  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m11_466 -> m11_66  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue>", style=dashed];
m11_467 -> m11_70  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
m11_467 -> m11_73  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
m11_468 -> m11_73  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m11_469 -> m11_73  [color=darkseagreen4, key=1, label="System.Lazy<TValue>", style=dashed];
m11_470 -> m11_427  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_72 -> m12_73  [key=0, style=solid];
m12_73 -> m12_74  [key=0, style=solid];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_76  [key=2, style=dotted];
m12_75 -> m12_72  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [color=red, key=0, style=solid];
m12_1 -> m12_2  [color=red, key=0, style=solid];
m12_1 -> m12_16  [color=red, key=2, style=dotted];
m12_2 -> m12_3  [color=red, key=0, style=solid];
m12_2 -> m12_17  [color=red, key=2, style=dotted];
m12_3 -> m12_4  [color=red, key=0, style=solid];
m12_3 -> m12_18  [color=red, key=2, style=dotted];
m12_4 -> m12_5  [color=red, key=0, style=solid];
m12_4 -> m12_19  [color=red, key=2, style=dotted];
m12_5 -> m12_6  [color=red, key=0, style=solid];
m12_5 -> m12_20  [color=red, key=2, style=dotted];
m12_6 -> m12_7  [color=red, key=0, style=solid];
m12_6 -> m12_21  [color=red, key=2, style=dotted];
m12_6 -> m12_22  [color=red, key=2, style=dotted];
m12_6 -> m12_23  [color=red, key=2, style=dotted];
m12_6 -> m12_24  [color=red, key=2, style=dotted];
m12_6 -> m12_25  [color=red, key=2, style=dotted];
m12_6 -> m12_26  [color=red, key=2, style=dotted];
m12_6 -> m12_27  [color=red, key=2, style=dotted];
m12_6 -> m12_28  [color=red, key=2, style=dotted];
m12_6 -> m12_29  [color=red, key=2, style=dotted];
m12_6 -> m12_30  [color=red, key=2, style=dotted];
m12_6 -> m12_31  [color=red, key=2, style=dotted];
m12_6 -> m12_32  [color=red, key=2, style=dotted];
m12_6 -> m12_33  [color=red, key=2, style=dotted];
m12_6 -> m12_6  [color=red, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.ReceiveFaEventArgs> handler", style=bold];
m12_6 -> m12_55  [color=red, key=3, label="method methodReturn bool Load", style=bold];
m12_7 -> m12_8  [color=red, key=0, style=solid];
m12_7 -> m12_21  [color=red, key=2, style=dotted];
m12_7 -> m12_22  [color=red, key=2, style=dotted];
m12_7 -> m12_23  [color=red, key=2, style=dotted];
m12_7 -> m12_25  [color=red, key=2, style=dotted];
m12_7 -> m12_26  [color=red, key=2, style=dotted];
m12_7 -> m12_27  [color=red, key=2, style=dotted];
m12_7 -> m12_29  [color=red, key=2, style=dotted];
m12_7 -> m12_30  [color=red, key=2, style=dotted];
m12_7 -> m12_31  [color=red, key=2, style=dotted];
m12_7 -> m12_32  [color=red, key=2, style=dotted];
m12_7 -> m12_33  [color=red, key=2, style=dotted];
m12_7 -> m12_24  [color=red, key=2, style=dotted];
m12_7 -> m12_28  [color=red, key=2, style=dotted];
m12_8 -> m12_9  [color=red, key=0, style=solid];
m12_8 -> m12_23  [color=red, key=2, style=dotted];
m12_9 -> m12_10  [color=red, key=0, style=solid];
m12_9 -> m12_32  [color=red, key=2, style=dotted];
m12_10 -> m12_11  [color=red, key=0, style=solid];
m12_10 -> m12_33  [color=red, key=2, style=dotted];
m12_11 -> m12_12  [color=red, key=0, style=solid];
m12_11 -> m12_34  [color=red, key=2, style=dotted];
m12_11 -> m12_13  [color=red, key=1, label=spyClose, style=dashed];
m12_12 -> m12_13  [color=red, key=0, style=solid];
m12_12 -> m12_34  [color=red, key=2, style=dotted];
m12_13 -> m12_14  [color=red, key=0, style=solid];
m12_13 -> m12_35  [color=red, key=2, style=dotted];
m12_14 -> m12_15  [color=red, key=0, style=solid];
m12_14 -> m12_36  [color=red, key=2, style=dotted];
m12_15 -> m12_0  [color=blue, key=0, style=bold];
m12_37 -> m12_38  [key=0, style=solid];
m12_38 -> m12_37  [color=blue, key=0, style=bold];
m12_39 -> m12_40  [color=red, key=0, style=solid];
m12_39 -> m12_42  [color=red, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m12_39 -> m12_44  [color=red, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m12_40 -> m12_41  [color=red, key=0, style=solid];
m12_40 -> m12_42  [color=red, key=0, style=solid];
m12_42 -> m12_43  [color=red, key=0, style=solid];
m12_44 -> m12_45  [color=red, key=0, style=solid];
m12_44 -> m12_48  [color=red, key=2, style=dotted];
m12_41 -> m12_47  [color=red, key=0, style=solid];
m12_43 -> m12_44  [color=red, key=0, style=solid];
m12_43 -> m12_47  [color=red, key=0, style=solid];
m12_45 -> m12_46  [color=red, key=0, style=solid];
m12_45 -> m12_49  [color=red, key=2, style=dotted];
m12_46 -> m12_47  [color=red, key=0, style=solid];
m12_46 -> m12_50  [color=red, key=2, style=dotted];
m12_46 -> m12_51  [color=red, key=2, style=dotted];
m12_47 -> m12_39  [color=blue, key=0, style=bold];
m12_52 -> m12_53  [color=red, key=0, style=solid];
m12_53 -> m12_54  [color=red, key=0, style=solid];
m12_53 -> m12_55  [color=red, key=0, style=solid];
m12_54 -> m12_67  [color=red, key=0, style=solid];
m12_55 -> m12_56  [color=red, key=0, style=solid];
m12_55 -> m12_68  [color=red, key=2, style=dotted];
m12_56 -> m12_57  [color=red, key=0, style=solid];
m12_56 -> m12_69  [color=red, key=2, style=dotted];
m12_57 -> m12_58  [color=red, key=0, style=solid];
m12_57 -> m12_70  [color=red, key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_70  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_71  [key=2, style=dotted];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_69  [key=2, style=dotted];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_69  [key=2, style=dotted];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_69  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_69  [key=2, style=dotted];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_68  [key=2, style=dotted];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_69  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_69  [key=2, style=dotted];
m12_67 -> m12_52  [color=blue, key=0, style=bold];
m12_77 -> m12_1  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_2  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_3  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_4  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_5  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_6  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_7  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_8  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_9  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_10  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_11  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_12  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_13  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_14  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_40  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_42  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_43  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_44  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_45  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_46  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_53  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_55  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_56  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_57  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_58  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_64  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m12_77 -> m12_66  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.IndicatorSuiteAlgorithm", style=dashed];
m13_0 -> m13_1  [color=red, key=0, style=solid];
m13_1 -> m13_2  [color=red, key=0, style=solid];
m13_1 -> m13_7  [color=red, key=2, style=dotted];
m13_2 -> m13_3  [color=red, key=0, style=solid];
m13_2 -> m13_8  [color=red, key=2, style=dotted];
m13_3 -> m13_4  [color=red, key=0, style=solid];
m13_3 -> m13_9  [color=red, key=2, style=dotted];
m13_4 -> m13_5  [color=red, key=0, style=solid];
m13_4 -> m13_10  [color=red, key=2, style=dotted];
m13_5 -> m13_6  [color=red, key=0, style=solid];
m13_5 -> m13_11  [color=red, key=2, style=dotted];
m13_6 -> m13_0  [color=blue, key=0, style=bold];
m13_12 -> m13_13  [color=red, key=0, style=solid];
m13_13 -> m13_14  [color=red, key=0, style=solid];
m13_13 -> m13_15  [color=red, key=0, style=solid];
m13_14 -> m13_15  [color=red, key=0, style=solid];
m13_14 -> m13_16  [color=red, key=2, style=dotted];
m13_15 -> m13_12  [color=blue, key=0, style=bold];
m13_17 -> m13_1  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm", style=dashed];
m13_17 -> m13_2  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm", style=dashed];
m13_17 -> m13_3  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm", style=dashed];
m13_17 -> m13_4  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm", style=dashed];
m13_17 -> m13_5  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm", style=dashed];
m13_17 -> m13_13  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm", style=dashed];
m13_17 -> m13_14  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm", style=dashed];
m14_10 -> m14_11  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_14  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_15  [key=2, style=dotted];
m14_13 -> m14_10  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_6  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_7  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_8  [key=2, style=dotted];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_9  [key=2, style=dotted];
m14_5 -> m14_0  [color=blue, key=0, style=bold];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.DailyFx", style=dashed];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_20  [key=2, style=dotted];
m14_17 -> m14_21  [key=2, style=dotted];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_15  [key=2, style=dotted];
m14_19 -> m14_16  [color=blue, key=0, style=bold];
m14_22 -> m14_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm", style=dashed];
m14_22 -> m14_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm", style=dashed];
m14_22 -> m14_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm", style=dashed];
m14_22 -> m14_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm", style=dashed];
m14_22 -> m14_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm", style=dashed];
m14_22 -> m14_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm", style=dashed];
m14_22 -> m14_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm", style=dashed];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_2  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [color=blue, key=0, style=bold];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_39  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m16_36 -> m16_37  [key=0, style=solid];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_3  [key=2, style=dotted];
m16_39 -> m16_28  [key=2, style=dotted];
m16_39 -> m16_5  [key=2, style=dotted];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_26  [key=2, style=dotted];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_38  [color=darkseagreen4, key=1, label=order, style=dashed];
m16_40 -> m16_35  [color=blue, key=0, style=bold];
m16_62 -> m16_63  [color=red, key=0, style=solid];
m16_63 -> m16_64  [color=red, key=0, style=solid];
m16_63 -> m16_3  [color=red, key=2, style=dotted];
m16_63 -> m16_65  [color=red, key=1, label=security, style=dashed];
m16_63 -> m16_66  [color=red, key=1, label=security, style=dashed];
m16_64 -> m16_65  [color=red, key=0, style=solid];
m16_64 -> m16_57  [color=red, key=2, style=dotted];
m16_65 -> m16_66  [color=red, key=0, style=solid];
m16_65 -> m16_58  [color=red, key=2, style=dotted];
m16_65 -> m16_59  [color=red, key=2, style=dotted];
m16_66 -> m16_67  [color=red, key=0, style=solid];
m16_66 -> m16_69  [color=red, key=2, style=dotted];
m16_66 -> m16_61  [color=red, key=2, style=dotted];
m16_67 -> m16_68  [color=red, key=0, style=solid];
m16_67 -> m16_5  [color=red, key=2, style=dotted];
m16_68 -> m16_62  [color=blue, key=0, style=bold];
m16_11 -> m16_12  [key=0, style=solid];
m16_12 -> m16_13  [key=0, style=solid];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_3  [key=2, style=dotted];
m16_13 -> m16_10  [key=2, style=dotted];
m16_13 -> m16_15  [key=2, style=dotted];
m16_13 -> m16_16  [key=2, style=dotted];
m16_13 -> m16_17  [key=2, style=dotted];
m16_13 -> m16_5  [key=2, style=dotted];
m16_14 -> m16_11  [color=blue, key=0, style=bold];
m16_6 -> m16_7  [key=0, style=solid];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_3  [key=2, style=dotted];
m16_7 -> m16_9  [key=2, style=dotted];
m16_7 -> m16_10  [key=2, style=dotted];
m16_8 -> m16_6  [color=blue, key=0, style=bold];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_22  [color=darkseagreen4, key=1, label=bool, style=dashed];
m16_18 -> m16_24  [color=darkseagreen4, key=1, label=bool, style=dashed];
m16_19 -> m16_20  [key=0, style=solid];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_24  [key=0, style=solid];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_3  [key=2, style=dotted];
m16_24 -> m16_28  [key=2, style=dotted];
m16_24 -> m16_5  [key=2, style=dotted];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_26  [key=2, style=dotted];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_21  [color=darkseagreen4, key=1, label=order, style=dashed];
m16_21 -> m16_23  [color=darkseagreen4, key=1, label=order, style=dashed];
m16_21 -> m16_24  [color=darkseagreen4, key=1, label=order, style=dashed];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_27  [key=2, style=dotted];
m16_23 -> m16_23  [color=darkseagreen4, key=1, label=order, style=dashed];
m16_25 -> m16_18  [color=blue, key=0, style=bold];
m16_50 -> m16_51  [color=red, key=0, style=solid];
m16_51 -> m16_52  [color=red, key=0, style=solid];
m16_51 -> m16_3  [color=red, key=2, style=dotted];
m16_51 -> m16_53  [color=red, key=1, label=security, style=dashed];
m16_51 -> m16_54  [color=red, key=1, label=security, style=dashed];
m16_52 -> m16_53  [color=red, key=0, style=solid];
m16_52 -> m16_57  [color=red, key=2, style=dotted];
m16_53 -> m16_54  [color=red, key=0, style=solid];
m16_53 -> m16_58  [color=red, key=2, style=dotted];
m16_53 -> m16_59  [color=red, key=2, style=dotted];
m16_54 -> m16_55  [color=red, key=0, style=solid];
m16_54 -> m16_60  [color=red, key=2, style=dotted];
m16_54 -> m16_61  [color=red, key=2, style=dotted];
m16_55 -> m16_56  [color=red, key=0, style=solid];
m16_55 -> m16_5  [color=red, key=2, style=dotted];
m16_56 -> m16_50  [color=blue, key=0, style=bold];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_32  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m16_29 -> m16_33  [color=darkseagreen4, key=1, label=bool, style=dashed];
m16_30 -> m16_31  [key=0, style=solid];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_3  [key=2, style=dotted];
m16_33 -> m16_28  [key=2, style=dotted];
m16_33 -> m16_5  [key=2, style=dotted];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_26  [key=2, style=dotted];
m16_34 -> m16_29  [color=blue, key=0, style=bold];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_44  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m16_41 -> m16_45  [color=darkseagreen4, key=1, label=bool, style=dashed];
m16_42 -> m16_43  [key=0, style=solid];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_47  [key=2, style=dotted];
m16_44 -> m16_48  [key=2, style=dotted];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_49  [key=2, style=dotted];
m16_45 -> m16_5  [key=2, style=dotted];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_3  [key=2, style=dotted];
m16_43 -> m16_45  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_46 -> m16_41  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=2, style=dotted];
m16_1 -> m16_4  [key=2, style=dotted];
m16_1 -> m16_5  [key=2, style=dotted];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_70 -> m16_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m16_70 -> m16_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m16_70 -> m16_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m16_70 -> m16_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m16_70 -> m16_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m16_70 -> m16_39  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m16_70 -> m16_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m17_0 -> m17_2  [color=darkorchid, key=3, label="method methodReturn decimal GetOrderFee", style=bold];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [color=green, key=0, style=solid];
m17_4 -> m17_5  [key=0, style=solid];
m17_2 -> m17_6  [key=0, style=solid];
m17_3 -> m17_4  [color=green, key=0, style=solid];
m17_3 -> m17_3  [color=green, key=3, label="Local variable decimal divisor", style=bold];
m17_5 -> m17_6  [key=0, style=solid];
m17_6 -> m17_0  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [color=red, key=0, style=solid];
m19_1 -> m19_2  [color=red, key=0, style=solid];
m19_1 -> m19_6  [color=red, key=2, style=dotted];
m19_2 -> m19_3  [color=red, key=0, style=solid];
m19_2 -> m19_6  [color=red, key=2, style=dotted];
m19_3 -> m19_4  [color=red, key=0, style=solid];
m19_3 -> m19_6  [color=red, key=2, style=dotted];
m19_4 -> m19_5  [color=red, key=0, style=solid];
m19_4 -> m19_7  [color=red, key=2, style=dotted];
m19_5 -> m19_0  [color=blue, key=0, style=bold];
m19_8 -> m19_1  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData", style=dashed];
m19_8 -> m19_2  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData", style=dashed];
m19_8 -> m19_3  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData", style=dashed];
m19_8 -> m19_4  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData", style=dashed];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_5  [key=2, style=dotted];
m20_3 -> m20_6  [key=2, style=dotted];
m20_4 -> m20_2  [color=blue, key=0, style=bold];
m20_10 -> m20_11  [key=0, style=solid];
m20_11 -> m20_12  [key=0, style=solid];
m20_12 -> m20_10  [color=blue, key=0, style=bold];
m20_7 -> m20_8  [key=0, style=solid];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_5  [key=2, style=dotted];
m20_8 -> m20_6  [key=2, style=dotted];
m20_9 -> m20_7  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [color=blue, key=0, style=bold];
m20_13 -> m20_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.MarketOrderTestParameters", style=dashed];
m20_13 -> m20_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.MarketOrderTestParameters", style=dashed];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_4  [color=red, key=1, label="QuantConnect.Securities.Security", style=dashed];
m21_0 -> m21_2  [color=darkorchid, key=3, label="method methodReturn decimal GetOrderFee", style=bold];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [color=red, key=0, style=solid];
m21_4 -> m21_5  [color=red, key=0, style=solid];
m21_2 -> m21_6  [key=0, style=solid];
m21_3 -> m21_4  [color=red, key=0, style=solid];
m21_3 -> m21_3  [color=red, key=3, label="Local variable decimal divisor", style=bold];
m21_5 -> m21_6  [key=0, style=solid];
m21_6 -> m21_0  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [color=red, key=0, style=solid];
m22_1 -> m22_2  [color=red, key=0, style=solid];
m22_1 -> m22_3  [color=red, key=2, style=dotted];
m22_2 -> m22_0  [color=blue, key=0, style=bold];
m22_4 -> m22_1  [color=red, key=1, label="QuantConnect.Orders.InteractiveBrokersOrderProperties", style=dashed];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_0  [color=blue, key=0, style=bold];
m24_38 -> m24_39  [color=red, key=0, style=solid];
m24_39 -> m24_40  [color=red, key=0, style=solid];
m24_39 -> m24_8  [color=red, key=2, style=dotted];
m24_39 -> m24_41  [color=red, key=1, label=start, style=dashed];
m24_40 -> m24_41  [color=red, key=0, style=solid];
m24_40 -> m24_9  [color=red, key=2, style=dotted];
m24_40 -> m24_10  [color=red, key=2, style=dotted];
m24_40 -> m24_12  [color=red, key=2, style=dotted];
m24_40 -> m24_42  [color=red, key=1, label=data, style=dashed];
m24_41 -> m24_42  [color=red, key=0, style=solid];
m24_41 -> m24_13  [color=red, key=2, style=dotted];
m24_42 -> m24_43  [color=red, key=0, style=solid];
m24_42 -> m24_14  [color=red, key=2, style=dotted];
m24_42 -> m24_15  [color=red, key=2, style=dotted];
m24_42 -> m24_16  [color=red, key=2, style=dotted];
m24_42 -> m24_44  [color=red, key=1, label=fastForward, style=dashed];
m24_42 -> m24_45  [color=red, key=1, label=fastForward, style=dashed];
m24_42 -> m24_46  [color=red, key=1, label=fastForward, style=dashed];
m24_43 -> m24_44  [color=red, key=0, style=solid];
m24_43 -> m24_17  [color=red, key=2, style=dotted];
m24_43 -> m24_18  [color=red, key=2, style=dotted];
m24_44 -> m24_45  [color=red, key=0, style=solid];
m24_44 -> m24_48  [color=red, key=2, style=dotted];
m24_45 -> m24_46  [color=red, key=0, style=solid];
m24_45 -> m24_17  [color=red, key=2, style=dotted];
m24_45 -> m24_49  [color=red, key=2, style=dotted];
m24_46 -> m24_47  [color=red, key=0, style=solid];
m24_46 -> m24_50  [color=red, key=2, style=dotted];
m24_47 -> m24_38  [color=blue, key=0, style=bold];
m24_20 -> m24_21  [key=0, style=solid];
m24_21 -> m24_22  [key=0, style=solid];
m24_21 -> m24_8  [key=2, style=dotted];
m24_21 -> m24_23  [color=darkseagreen4, key=1, label=start, style=dashed];
m24_21 -> m24_26  [color=darkseagreen4, key=1, label=start, style=dashed];
m24_22 -> m24_23  [key=0, style=solid];
m24_22 -> m24_9  [key=2, style=dotted];
m24_22 -> m24_10  [key=2, style=dotted];
m24_22 -> m24_11  [key=2, style=dotted];
m24_22 -> m24_12  [key=2, style=dotted];
m24_22 -> m24_24  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_23 -> m24_24  [key=0, style=solid];
m24_23 -> m24_13  [key=2, style=dotted];
m24_26 -> m24_27  [key=0, style=solid];
m24_26 -> m24_12  [key=2, style=dotted];
m24_26 -> m24_19  [key=2, style=dotted];
m24_24 -> m24_25  [key=0, style=solid];
m24_24 -> m24_14  [key=2, style=dotted];
m24_24 -> m24_15  [key=2, style=dotted];
m24_24 -> m24_16  [key=2, style=dotted];
m24_24 -> m24_26  [color=darkseagreen4, key=1, label=fastForward, style=dashed];
m24_25 -> m24_26  [key=0, style=solid];
m24_25 -> m24_17  [key=2, style=dotted];
m24_25 -> m24_18  [key=2, style=dotted];
m24_27 -> m24_20  [color=blue, key=0, style=bold];
m24_28 -> m24_29  [key=0, style=solid];
m24_29 -> m24_30  [key=0, style=solid];
m24_29 -> m24_8  [key=2, style=dotted];
m24_29 -> m24_31  [color=red, key=1, label=start, style=dashed];
m24_29 -> m24_34  [color=red, key=1, label=start, style=dashed];
m24_29 -> m24_36  [color=red, key=1, label=start, style=dashed];
m24_30 -> m24_31  [color=red, key=0, style=solid];
m24_30 -> m24_9  [key=2, style=dotted];
m24_30 -> m24_10  [key=2, style=dotted];
m24_30 -> m24_11  [key=2, style=dotted];
m24_30 -> m24_12  [key=2, style=dotted];
m24_30 -> m24_32  [color=red, key=1, label=data, style=dashed];
m24_31 -> m24_32  [color=red, key=0, style=solid];
m24_31 -> m24_13  [color=red, key=2, style=dotted];
m24_34 -> m24_35  [color=red, key=0, style=solid];
m24_34 -> m24_12  [color=red, key=2, style=dotted];
m24_34 -> m24_19  [color=red, key=2, style=dotted];
m24_36 -> m24_37  [color=red, key=0, style=solid];
m24_36 -> m24_12  [color=red, key=2, style=dotted];
m24_36 -> m24_19  [color=red, key=2, style=dotted];
m24_32 -> m24_33  [color=red, key=0, style=solid];
m24_32 -> m24_14  [color=red, key=2, style=dotted];
m24_32 -> m24_15  [color=red, key=2, style=dotted];
m24_32 -> m24_16  [color=red, key=2, style=dotted];
m24_32 -> m24_34  [color=red, key=1, label=fastForward, style=dashed];
m24_32 -> m24_35  [color=red, key=1, label=fastForward, style=dashed];
m24_32 -> m24_36  [color=red, key=1, label=fastForward, style=dashed];
m24_33 -> m24_34  [color=red, key=0, style=solid];
m24_33 -> m24_17  [color=red, key=2, style=dotted];
m24_33 -> m24_18  [color=red, key=2, style=dotted];
m24_35 -> m24_36  [color=red, key=0, style=solid];
m24_35 -> m24_17  [color=red, key=2, style=dotted];
m24_35 -> m24_18  [color=red, key=2, style=dotted];
m24_37 -> m24_28  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_8  [key=2, style=dotted];
m24_1 -> m24_3  [color=darkseagreen4, key=1, label=start, style=dashed];
m24_1 -> m24_6  [color=darkseagreen4, key=1, label=start, style=dashed];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_9  [key=2, style=dotted];
m24_2 -> m24_10  [key=2, style=dotted];
m24_2 -> m24_11  [key=2, style=dotted];
m24_2 -> m24_12  [key=2, style=dotted];
m24_2 -> m24_4  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_13  [key=2, style=dotted];
m24_6 -> m24_7  [key=0, style=solid];
m24_6 -> m24_19  [key=2, style=dotted];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_14  [key=2, style=dotted];
m24_4 -> m24_15  [key=2, style=dotted];
m24_4 -> m24_16  [key=2, style=dotted];
m24_4 -> m24_6  [color=darkseagreen4, key=1, label=fastForward, style=dashed];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_17  [key=2, style=dotted];
m24_5 -> m24_18  [key=2, style=dotted];
m24_7 -> m24_0  [color=blue, key=0, style=bold];
m26_8 -> m26_9  [key=0, style=solid];
m26_8 -> m26_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m26_8 -> m26_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m26_8 -> m26_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m26_8 -> m26_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m26_8 -> m26_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_11  [key=0, style=solid];
m26_9 -> m26_16  [key=2, style=dotted];
m26_11 -> m26_12  [key=0, style=solid];
m26_12 -> m26_13  [key=0, style=solid];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m26_14 -> m26_15  [key=0, style=solid];
m26_14 -> m26_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m26_10 -> m26_15  [key=0, style=solid];
m26_10 -> m26_17  [key=2, style=dotted];
m26_15 -> m26_8  [color=blue, key=0, style=bold];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_27  [color=darkseagreen4, key=1, label=handler, style=dashed];
m26_27 -> m26_28  [key=0, style=solid];
m26_27 -> m26_29  [key=2, style=dotted];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_28  [key=0, style=solid];
m26_28 -> m26_24  [color=blue, key=0, style=bold];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_7  [key=2, style=dotted];
m26_6 -> m26_4  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=2, style=dotted];
m26_2 -> m26_0  [color=blue, key=0, style=bold];
m26_21 -> m26_22  [key=0, style=solid];
m26_19 -> m26_20  [key=0, style=solid];
m26_19 -> m26_3  [key=2, style=dotted];
m26_22 -> m26_23  [key=0, style=solid];
m26_22 -> m26_24  [key=2, style=dotted];
m26_18 -> m26_19  [key=0, style=solid];
m26_20 -> m26_18  [color=blue, key=0, style=bold];
m26_23 -> m26_21  [color=blue, key=0, style=bold];
m26_30 -> m26_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.SequentialConsolidator", style=dashed];
m26_30 -> m26_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.SequentialConsolidator", style=dashed];
m26_30 -> m26_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.SequentialConsolidator", style=dashed];
m26_30 -> m26_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.SequentialConsolidator", style=dashed];
m26_30 -> m26_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.SequentialConsolidator", style=dashed];
m26_30 -> m26_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.SequentialConsolidator", style=dashed];
m26_30 -> m26_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.SequentialConsolidator", style=dashed];
m26_30 -> m26_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.SequentialConsolidator", style=dashed];
m26_31 -> m26_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m27_10 -> m27_11  [color=red, key=0, style=solid];
m27_10 -> m27_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m27_11 -> m27_12  [color=red, key=0, style=solid];
m27_11 -> m27_13  [color=red, key=0, style=solid];
m27_23 -> m27_24  [key=0, style=solid];
m27_23 -> m27_30  [key=2, style=dotted];
m27_12 -> m27_26  [color=red, key=0, style=solid];
m27_13 -> m27_14  [color=red, key=0, style=solid];
m27_13 -> m27_15  [color=red, key=0, style=solid];
m27_14 -> m27_26  [color=red, key=0, style=solid];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_18  [color=darkseagreen4, key=1, label=holding, style=dashed];
m27_15 -> m27_20  [color=darkseagreen4, key=1, label=holding, style=dashed];
m27_16 -> m27_17  [key=0, style=solid];
m27_16 -> m27_18  [color=darkseagreen4, key=1, label=signalDeltaPercent, style=dashed];
m27_16 -> m27_20  [color=darkseagreen4, key=1, label=signalDeltaPercent, style=dashed];
m27_18 -> m27_19  [key=0, style=solid];
m27_18 -> m27_20  [key=0, style=solid];
m27_20 -> m27_21  [key=0, style=solid];
m27_20 -> m27_22  [key=0, style=solid];
m27_17 -> m27_18  [key=0, style=solid];
m27_17 -> m27_20  [color=darkseagreen4, key=1, label=tolerance, style=dashed];
m27_19 -> m27_22  [key=0, style=solid];
m27_19 -> m27_27  [key=2, style=dotted];
m27_21 -> m27_22  [key=0, style=solid];
m27_21 -> m27_28  [key=2, style=dotted];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_29  [key=2, style=dotted];
m27_24 -> m27_25  [key=0, style=solid];
m27_24 -> m27_29  [key=2, style=dotted];
m27_25 -> m27_26  [key=0, style=solid];
m27_26 -> m27_10  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_6  [key=2, style=dotted];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_7  [key=2, style=dotted];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_8  [key=2, style=dotted];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_9  [key=2, style=dotted];
m27_5 -> m27_0  [color=blue, key=0, style=bold];
m27_31 -> m27_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_11  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_13  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m27_31 -> m27_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [color=blue, key=0, style=bold];
m28_2 -> m28_3  [key=0, style=solid];
m28_3 -> m28_2  [color=blue, key=0, style=bold];
m28_7 -> m28_8  [key=0, style=solid];
m28_8 -> m28_9  [key=0, style=solid];
m28_8 -> m28_0  [key=2, style=dotted];
m28_8 -> m28_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m28_9 -> m28_10  [key=0, style=solid];
m28_9 -> m28_12  [key=2, style=dotted];
m28_10 -> m28_11  [key=0, style=solid];
m28_11 -> m28_7  [color=blue, key=0, style=bold];
m28_4 -> m28_5  [key=0, style=solid];
m28_5 -> m28_6  [key=0, style=solid];
m28_6 -> m28_4  [color=blue, key=0, style=bold];
m28_13 -> m28_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m28_13 -> m28_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_7  [key=2, style=dotted];
m29_2 -> m29_3  [key=0, style=solid];
m29_2 -> m29_8  [key=2, style=dotted];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_9  [key=2, style=dotted];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> m29_10  [key=2, style=dotted];
m29_4 -> m29_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_11  [key=2, style=dotted];
m29_6 -> m29_0  [color=blue, key=0, style=bold];
m29_15 -> m29_16  [key=0, style=solid];
m29_15 -> m29_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m29_16 -> m29_17  [key=0, style=solid];
m29_17 -> m29_18  [key=0, style=solid];
m29_17 -> m29_19  [key=0, style=solid];
m29_17 -> m29_22  [key=2, style=dotted];
m29_18 -> m29_21  [key=0, style=solid];
m29_19 -> m29_20  [key=0, style=solid];
m29_19 -> m29_21  [key=0, style=solid];
m29_20 -> m29_21  [key=0, style=solid];
m29_20 -> m29_23  [key=2, style=dotted];
m29_21 -> m29_15  [color=blue, key=0, style=bold];
m29_12 -> m29_13  [key=0, style=solid];
m29_13 -> m29_14  [key=0, style=solid];
m29_14 -> m29_12  [color=blue, key=0, style=bold];
m29_24 -> m29_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm", style=dashed];
m29_24 -> m29_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm", style=dashed];
m29_24 -> m29_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm", style=dashed];
m29_24 -> m29_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm", style=dashed];
m29_24 -> m29_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm", style=dashed];
m29_24 -> m29_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm", style=dashed];
m29_24 -> m29_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm", style=dashed];
m29_24 -> m29_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HourSplitRegressionAlgorithm", style=dashed];
m30_7 -> m30_8  [key=0, style=solid];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_0  [key=2, style=dotted];
m30_8 -> m30_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m30_9 -> m30_10  [key=0, style=solid];
m30_9 -> m30_12  [key=2, style=dotted];
m30_10 -> m30_11  [key=0, style=solid];
m30_11 -> m30_7  [color=blue, key=0, style=bold];
m30_2 -> m30_3  [key=0, style=solid];
m30_3 -> m30_2  [color=blue, key=0, style=bold];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_0  [color=blue, key=0, style=bold];
m30_4 -> m30_5  [key=0, style=solid];
m30_5 -> m30_6  [key=0, style=solid];
m30_6 -> m30_4  [color=blue, key=0, style=bold];
m30_13 -> m30_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
m30_13 -> m30_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
m31_138 -> m31_139  [key=0, style=solid];
m31_139 -> m31_140  [key=0, style=solid];
m31_139 -> m31_142  [key=0, style=solid];
m31_140 -> m31_141  [key=0, style=solid];
m31_141 -> m31_142  [key=0, style=solid];
m31_141 -> m31_131  [key=2, style=dotted];
m31_142 -> m31_138  [color=blue, key=0, style=bold];
m31_7 -> m31_0  [color=blue, key=0, style=bold];
m31_31 -> m31_32  [key=0, style=solid];
m31_33 -> m31_34  [color=green, key=0, style=solid];
m31_33 -> m31_36  [color=green, key=2, style=dotted];
m31_33 -> m31_37  [color=green, key=2, style=dotted];
m31_33 -> m31_38  [color=green, key=2, style=dotted];
m31_33 -> m31_39  [color=green, key=2, style=dotted];
m31_32 -> m31_33  [color=green, key=0, style=solid];
m31_32 -> m31_35  [key=2, style=dotted];
m31_34 -> m31_31  [color=blue, key=0, style=bold];
m31_15 -> m31_20  [key=0, style=solid];
m31_0 -> m31_1  [color=green, key=0, style=solid];
m31_0 -> m31_2  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.Environment", style=dashed];
m31_1 -> m31_2  [color=green, key=0, style=solid];
m31_1 -> m31_8  [key=2, style=dotted];
m31_1 -> m31_3  [color=green, key=1, label=basePathRest, style=dashed];
m31_2 -> m31_3  [color=green, key=0, style=solid];
m31_2 -> m31_9  [key=2, style=dotted];
m31_2 -> m31_5  [color=green, key=1, label=basePathStreaming, style=dashed];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_10  [key=2, style=dotted];
m31_3 -> m31_7  [key=2, style=dotted];
m31_4 -> m31_5  [key=0, style=solid];
m31_4 -> m31_11  [key=2, style=dotted];
m31_4 -> m31_8  [key=2, style=dotted];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_12  [key=2, style=dotted];
m31_5 -> m31_7  [key=2, style=dotted];
m31_6 -> m31_7  [key=0, style=solid];
m31_6 -> m31_12  [key=2, style=dotted];
m31_6 -> m31_0  [color=blue, key=0, style=bold];
m31_9 -> m31_10  [key=0, style=solid];
m31_10 -> m31_11  [key=0, style=solid];
m31_10 -> m31_13  [key=2, style=dotted];
m31_108 -> m31_76  [color=darkorchid, key=3, label="method methodReturn bool CancelOrder", style=bold];
m31_108 -> m31_115  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_108 -> m31_109  [key=0, style=solid];
m31_108 -> m31_110  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_108 -> m31_113  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_108 -> m31_94  [color=darkorchid, key=3, label="method methodReturn bool CancelOrder", style=bold];
m31_114 -> m31_115  [key=0, style=solid];
m31_114 -> m31_118  [key=2, style=dotted];
m31_115 -> m31_85  [key=2, style=dotted];
m31_115 -> m31_86  [key=2, style=dotted];
m31_115 -> m31_113  [key=0, style=solid];
m31_113 -> m31_114  [key=0, style=solid];
m31_113 -> m31_116  [key=0, style=solid];
m31_109 -> m31_110  [key=0, style=solid];
m31_109 -> m31_104  [key=2, style=dotted];
m31_110 -> m31_113  [key=0, style=solid];
m31_110 -> m31_111  [key=0, style=solid];
m31_110 -> m31_105  [key=2, style=dotted];
m31_116 -> m31_117  [key=0, style=solid];
m31_112 -> m31_117  [key=0, style=solid];
m31_111 -> m31_104  [key=2, style=dotted];
m31_111 -> m31_112  [key=0, style=solid];
m31_117 -> m31_108  [color=blue, key=0, style=bold];
m31_143 -> m31_144  [key=0, style=solid];
m31_144 -> m31_145  [key=0, style=solid];
m31_144 -> m31_146  [key=2, style=dotted];
m31_144 -> m31_147  [key=2, style=dotted];
m31_145 -> m31_143  [color=blue, key=0, style=bold];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_25  [key=2, style=dotted];
m31_226 -> m31_227  [key=0, style=solid];
m31_227 -> m31_228  [key=0, style=solid];
m31_227 -> m31_218  [key=2, style=dotted];
m31_230 -> m31_231  [key=0, style=solid];
m31_231 -> m31_232  [key=0, style=solid];
m31_228 -> m31_230  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_228 -> m31_231  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_228 -> m31_229  [key=0, style=solid];
m31_228 -> m31_220  [key=2, style=dotted];
m31_228 -> m31_232  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_229 -> m31_230  [key=0, style=solid];
m31_232 -> m31_239  [key=0, style=solid];
m31_232 -> m31_221  [key=2, style=dotted];
m31_235 -> m31_239  [key=0, style=solid];
m31_238 -> m31_239  [key=0, style=solid];
m31_238 -> m31_224  [key=2, style=dotted];
m31_238 -> m31_225  [key=2, style=dotted];
m31_234 -> m31_235  [key=0, style=solid];
m31_234 -> m31_236  [key=0, style=solid];
m31_237 -> m31_238  [key=0, style=solid];
m31_237 -> m31_223  [key=2, style=dotted];
m31_233 -> m31_234  [key=0, style=solid];
m31_236 -> m31_237  [key=0, style=solid];
m31_236 -> m31_222  [key=2, style=dotted];
m31_239 -> m31_226  [color=blue, key=0, style=bold];
m31_46 -> m31_47  [key=0, style=solid];
m31_50 -> m31_38  [key=2, style=dotted];
m31_50 -> m31_51  [key=0, style=solid];
m31_50 -> m31_52  [key=2, style=dotted];
m31_50 -> m31_53  [key=2, style=dotted];
m31_49 -> m31_50  [key=0, style=solid];
m31_51 -> m31_49  [color=blue, key=0, style=bold];
m31_87 -> m31_88  [key=0, style=solid];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_18  [key=0, style=solid];
m31_88 -> m31_82  [key=2, style=dotted];
m31_88 -> m31_89  [key=0, style=solid];
m31_89 -> m31_87  [color=blue, key=0, style=bold];
m31_18 -> m31_16  [color=blue, key=0, style=bold];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_20  [key=0, style=solid];
m31_18 -> m31_18  [color=darkorchid, key=3, label="Field variable string Ticker", style=bold];
m31_17 -> m31_18  [key=0, style=solid];
m31_17 -> m31_20  [key=0, style=solid];
m31_17 -> m31_21  [key=2, style=dotted];
m31_47 -> m31_48  [key=0, style=solid];
m31_48 -> m31_46  [color=blue, key=0, style=bold];
m31_263 -> m31_248  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m31_263 -> m31_338  [key=0, style=solid];
m31_263 -> m31_339  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m31_263 -> m31_348  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m31_263 -> m31_267  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m31_338 -> m31_339  [key=0, style=solid];
m31_339 -> m31_340  [key=0, style=solid];
m31_339 -> m31_342  [key=0, style=solid];
m31_339 -> m31_344  [key=0, style=solid];
m31_339 -> m31_346  [key=0, style=solid];
m31_339 -> m31_348  [key=0, style=solid];
m31_348 -> m31_350  [key=0, style=solid];
m31_348 -> m31_351  [key=2, style=dotted];
m31_349 -> m31_350  [key=0, style=solid];
m31_340 -> m31_341  [key=0, style=solid];
m31_342 -> m31_343  [key=0, style=solid];
m31_344 -> m31_345  [key=0, style=solid];
m31_346 -> m31_347  [key=0, style=solid];
m31_341 -> m31_349  [key=0, style=solid];
m31_343 -> m31_349  [key=0, style=solid];
m31_345 -> m31_349  [key=0, style=solid];
m31_347 -> m31_349  [key=0, style=solid];
m31_350 -> m31_263  [color=blue, key=0, style=bold];
m31_148 -> m31_149  [key=0, style=solid];
m31_153 -> m31_154  [key=0, style=solid];
m31_154 -> m31_163  [key=0, style=solid];
m31_157 -> m31_158  [key=0, style=solid];
m31_157 -> m31_166  [key=2, style=dotted];
m31_157 -> m31_159  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_157 -> m31_160  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_157 -> m31_162  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_160 -> m31_161  [key=0, style=solid];
m31_160 -> m31_84  [key=2, style=dotted];
m31_162 -> m31_85  [key=2, style=dotted];
m31_162 -> m31_86  [key=2, style=dotted];
m31_162 -> m31_163  [key=0, style=solid];
m31_162 -> m31_167  [key=2, style=dotted];
m31_162 -> m31_168  [key=2, style=dotted];
m31_152 -> m31_153  [key=0, style=solid];
m31_156 -> m31_157  [key=0, style=solid];
m31_156 -> m31_162  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m31_156 -> m31_165  [key=2, style=dotted];
m31_158 -> m31_163  [key=0, style=solid];
m31_158 -> m31_159  [key=0, style=solid];
m31_159 -> m31_160  [key=0, style=solid];
m31_161 -> m31_162  [key=0, style=solid];
m31_161 -> m31_60  [color=darkorchid, key=3, label="Local variable int orderFee", style=bold];
m31_151 -> m31_152  [key=0, style=solid];
m31_151 -> m31_155  [key=0, style=solid];
m31_149 -> m31_156  [color=darkseagreen4, key=1, label=obj, style=dashed];
m31_149 -> m31_25  [key=2, style=dotted];
m31_149 -> m31_150  [key=0, style=solid];
m31_155 -> m31_156  [key=0, style=solid];
m31_150 -> m31_164  [key=2, style=dotted];
m31_150 -> m31_151  [key=0, style=solid];
m31_163 -> m31_148  [color=blue, key=0, style=bold];
m31_19 -> m31_20  [key=0, style=solid];
m31_19 -> m31_22  [key=2, style=dotted];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_24  [key=2, style=dotted];
m31_20 -> m31_13  [color=blue, key=0, style=bold];
m31_22 -> m31_23  [key=0, style=solid];
m31_22 -> m31_14  [key=2, style=dotted];
m31_22 -> m31_15  [key=2, style=dotted];
m31_23 -> m31_19  [color=blue, key=0, style=bold];
m31_23 -> m31_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm", style=dashed];
m31_23 -> m31_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm", style=dashed];
m31_23 -> m31_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm", style=dashed];
m31_23 -> m31_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm", style=dashed];
m31_23 -> m31_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm", style=dashed];
m31_23 -> m31_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm", style=dashed];
m31_23 -> m31_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm", style=dashed];
m31_23 -> m31_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm", style=dashed];
m31_23 -> m31_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm", style=dashed];
m31_23 -> m31_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ParameterizedAlgorithm", style=dashed];
m31_13 -> m31_14  [key=0, style=solid];
m31_54 -> m31_70  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_54 -> m31_72  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_54 -> m31_73  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_54 -> m31_55  [key=0, style=solid];
m31_54 -> m31_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_54 -> m31_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_54 -> m31_71  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_54 -> m31_74  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_54 -> m31_75  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_54 -> m31_76  [color=darkorchid, key=3, label="method methodReturn bool PlaceOrder", style=bold];
m31_70 -> m31_71  [color=green, key=0, style=solid];
m31_70 -> m31_73  [color=green, key=0, style=solid];
m31_69 -> m31_70  [color=green, key=0, style=solid];
m31_69 -> m31_72  [color=green, key=1, label=orderFee, style=dashed];
m31_69 -> m31_75  [color=darkseagreen4, key=1, label=orderFee, style=dashed];
m31_69 -> m31_60  [color=darkorchid, key=3, label="Local variable int orderFee", style=bold];
m31_71 -> m31_72  [color=green, key=0, style=solid];
m31_71 -> m31_84  [key=2, style=dotted];
m31_73 -> m31_74  [color=green, key=0, style=solid];
m31_73 -> m31_76  [color=green, key=0, style=solid];
m31_72 -> m31_73  [color=green, key=0, style=solid];
m31_72 -> m31_85  [color=green, key=2, style=dotted];
m31_72 -> m31_86  [color=green, key=2, style=dotted];
m31_74 -> m31_75  [key=0, style=solid];
m31_76 -> m31_77  [key=0, style=solid];
m31_55 -> m31_56  [key=0, style=solid];
m31_55 -> m31_78  [key=2, style=dotted];
m31_56 -> m31_57  [key=0, style=solid];
m31_56 -> m31_79  [key=2, style=dotted];
m31_56 -> m31_58  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_75 -> m31_85  [key=2, style=dotted];
m31_75 -> m31_86  [key=2, style=dotted];
m31_75 -> m31_76  [key=0, style=solid];
m31_57 -> m31_58  [key=0, style=solid];
m31_57 -> m31_80  [key=2, style=dotted];
m31_61 -> m31_69  [key=0, style=solid];
m31_61 -> m31_62  [key=0, style=solid];
m31_67 -> m31_69  [key=0, style=solid];
m31_67 -> m31_68  [key=0, style=solid];
m31_68 -> m31_69  [key=0, style=solid];
m31_68 -> m31_75  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m31_68 -> m31_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m31_68 -> m31_83  [key=2, style=dotted];
m31_68 -> m31_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_60 -> m31_75  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m31_60 -> m31_61  [key=0, style=solid];
m31_60 -> m31_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m31_60 -> m31_60  [color=darkorchid, key=3, label="Local variable int marketOrderFillQuantity", style=bold];
m31_58 -> m31_67  [color=darkseagreen4, key=1, label=fill, style=dashed];
m31_58 -> m31_68  [color=darkseagreen4, key=1, label=fill, style=dashed];
m31_58 -> m31_59  [key=0, style=solid];
m31_58 -> m31_62  [color=darkseagreen4, key=1, label=fill, style=dashed];
m31_58 -> m31_63  [color=darkseagreen4, key=1, label=fill, style=dashed];
m31_58 -> m31_64  [color=darkseagreen4, key=1, label=fill, style=dashed];
m31_58 -> m31_65  [color=darkseagreen4, key=1, label=fill, style=dashed];
m31_58 -> m31_66  [color=darkseagreen4, key=1, label=fill, style=dashed];
m31_59 -> m31_75  [color=darkseagreen4, key=1, label=marketOrderFillPrice, style=dashed];
m31_59 -> m31_60  [key=0, style=solid];
m31_59 -> m31_59  [color=darkorchid, key=3, label="Local variable decimal marketOrderFillPrice", style=bold];
m31_62 -> m31_75  [color=darkseagreen4, key=1, label=marketOrderFillPrice, style=dashed];
m31_62 -> m31_63  [key=0, style=solid];
m31_62 -> m31_81  [key=2, style=dotted];
m31_64 -> m31_75  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m31_64 -> m31_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m31_64 -> m31_65  [key=0, style=solid];
m31_64 -> m31_82  [key=2, style=dotted];
m31_66 -> m31_75  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m31_66 -> m31_67  [key=0, style=solid];
m31_66 -> m31_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m31_66 -> m31_82  [key=2, style=dotted];
m31_65 -> m31_67  [key=0, style=solid];
m31_65 -> m31_66  [key=0, style=solid];
m31_63 -> m31_64  [key=0, style=solid];
m31_63 -> m31_65  [key=0, style=solid];
m31_77 -> m31_54  [color=blue, key=0, style=bold];
m31_40 -> m31_41  [key=0, style=solid];
m31_41 -> m31_42  [key=0, style=solid];
m31_41 -> m31_44  [key=2, style=dotted];
m31_42 -> m31_43  [key=0, style=solid];
m31_42 -> m31_45  [key=2, style=dotted];
m31_42 -> m31_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_42 -> m31_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_43 -> m31_40  [color=blue, key=0, style=bold];
m31_222 -> m31_240  [key=0, style=solid];
m31_222 -> m31_241  [color=darkseagreen4, key=1, label="System.Net.WebResponse", style=dashed];
m31_240 -> m31_241  [key=0, style=solid];
m31_240 -> m31_246  [key=2, style=dotted];
m31_240 -> m31_242  [color=darkseagreen4, key=1, label=stream, style=dashed];
m31_240 -> m31_243  [color=darkseagreen4, key=1, label=stream, style=dashed];
m31_240 -> m31_244  [color=darkseagreen4, key=1, label=stream, style=dashed];
m31_241 -> m31_242  [key=0, style=solid];
m31_241 -> m31_244  [key=0, style=solid];
m31_244 -> m31_245  [key=0, style=solid];
m31_242 -> m31_244  [key=0, style=solid];
m31_242 -> m31_243  [key=0, style=solid];
m31_243 -> m31_244  [key=0, style=solid];
m31_243 -> m31_243  [color=darkseagreen4, key=1, label=stream, style=dashed];
m31_243 -> m31_247  [key=2, style=dotted];
m31_245 -> m31_222  [color=blue, key=0, style=bold];
m31_11 -> m31_12  [key=0, style=solid];
m31_11 -> m31_14  [key=2, style=dotted];
m31_11 -> m31_15  [key=2, style=dotted];
m31_11 -> m31_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_12 -> m31_9  [color=blue, key=0, style=bold];
m31_126 -> m31_127  [key=0, style=solid];
m31_127 -> m31_128  [key=0, style=solid];
m31_127 -> m31_130  [key=0, style=solid];
m31_128 -> m31_129  [key=0, style=solid];
m31_129 -> m31_130  [key=0, style=solid];
m31_129 -> m31_131  [key=2, style=dotted];
m31_130 -> m31_126  [color=blue, key=0, style=bold];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_16  [key=0, style=solid];
m31_267 -> m31_268  [key=0, style=solid];
m31_267 -> m31_271  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m31_267 -> m31_275  [color=crimson, key=0, style=bold];
m31_267 -> m31_269  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m31_267 -> m31_270  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m31_267 -> m31_274  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m31_268 -> m31_269  [key=0, style=solid];
m31_268 -> m31_259  [key=2, style=dotted];
m31_268 -> m31_271  [color=darkseagreen4, key=1, label=oandaSymbol, style=dashed];
m31_271 -> m31_272  [key=0, style=solid];
m31_271 -> m31_263  [key=2, style=dotted];
m31_271 -> m31_264  [key=2, style=dotted];
m31_271 -> m31_265  [key=2, style=dotted];
m31_275 -> m31_38  [key=2, style=dotted];
m31_275 -> m31_272  [key=0, style=solid];
m31_275 -> m31_277  [key=2, style=dotted];
m31_275 -> m31_199  [key=2, style=dotted];
m31_275 -> m31_278  [key=2, style=dotted];
m31_269 -> m31_271  [color=darkseagreen4, key=1, label=startUtc, style=dashed];
m31_269 -> m31_270  [key=0, style=solid];
m31_269 -> m31_260  [key=2, style=dotted];
m31_270 -> m31_271  [key=0, style=solid];
m31_270 -> m31_275  [color=darkseagreen4, key=1, label=period, style=dashed];
m31_270 -> m31_261  [key=2, style=dotted];
m31_270 -> m31_262  [key=2, style=dotted];
m31_272 -> m31_275  [color=darkseagreen4, key=1, label=candle, style=dashed];
m31_272 -> m31_273  [key=0, style=solid];
m31_272 -> m31_276  [key=0, style=solid];
m31_274 -> m31_275  [key=0, style=solid];
m31_274 -> m31_276  [key=0, style=solid];
m31_273 -> m31_275  [color=darkseagreen4, key=1, label=time, style=dashed];
m31_273 -> m31_274  [key=0, style=solid];
m31_273 -> m31_143  [key=2, style=dotted];
m31_276 -> m31_267  [color=blue, key=0, style=bold];
m31_248 -> m31_249  [key=0, style=solid];
m31_248 -> m31_253  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m31_248 -> m31_257  [color=crimson, key=0, style=bold];
m31_248 -> m31_250  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m31_248 -> m31_251  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m31_248 -> m31_252  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m31_248 -> m31_256  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m31_249 -> m31_250  [key=0, style=solid];
m31_249 -> m31_259  [key=2, style=dotted];
m31_249 -> m31_253  [color=darkseagreen4, key=1, label=oandaSymbol, style=dashed];
m31_253 -> m31_254  [key=0, style=solid];
m31_253 -> m31_263  [key=2, style=dotted];
m31_253 -> m31_264  [key=2, style=dotted];
m31_253 -> m31_265  [key=2, style=dotted];
m31_257 -> m31_38  [key=2, style=dotted];
m31_257 -> m31_254  [key=0, style=solid];
m31_257 -> m31_266  [key=2, style=dotted];
m31_257 -> m31_199  [key=2, style=dotted];
m31_250 -> m31_253  [color=darkseagreen4, key=1, label=startUtc, style=dashed];
m31_250 -> m31_251  [key=0, style=solid];
m31_250 -> m31_260  [key=2, style=dotted];
m31_251 -> m31_253  [color=darkseagreen4, key=1, label=endUtc, style=dashed];
m31_251 -> m31_252  [key=0, style=solid];
m31_251 -> m31_260  [key=2, style=dotted];
m31_252 -> m31_253  [key=0, style=solid];
m31_252 -> m31_257  [color=darkseagreen4, key=1, label=period, style=dashed];
m31_252 -> m31_261  [key=2, style=dotted];
m31_252 -> m31_262  [key=2, style=dotted];
m31_254 -> m31_257  [color=darkseagreen4, key=1, label=candle, style=dashed];
m31_254 -> m31_255  [key=0, style=solid];
m31_254 -> m31_258  [key=0, style=solid];
m31_256 -> m31_257  [key=0, style=solid];
m31_256 -> m31_258  [key=0, style=solid];
m31_255 -> m31_257  [color=darkseagreen4, key=1, label=time, style=dashed];
m31_255 -> m31_256  [key=0, style=solid];
m31_255 -> m31_143  [key=2, style=dotted];
m31_258 -> m31_248  [color=blue, key=0, style=bold];
m31_78 -> m31_54  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m31_78 -> m31_352  [key=0, style=solid];
m31_78 -> m31_354  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_78 -> m31_356  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_78 -> m31_359  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_78 -> m31_362  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_78 -> m31_365  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_78 -> m31_367  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_78 -> m31_90  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m31_78 -> m31_353  [color=darkorchid, key=3, label="method methodReturn string GenerateOrderRequest", style=bold];
m31_352 -> m31_353  [key=0, style=solid];
m31_352 -> m31_259  [key=2, style=dotted];
m31_352 -> m31_356  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m31_352 -> m31_359  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m31_352 -> m31_362  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m31_352 -> m31_365  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m31_353 -> m31_354  [key=0, style=solid];
m31_356 -> m31_357  [key=0, style=solid];
m31_356 -> m31_370  [key=2, style=dotted];
m31_356 -> m31_371  [key=2, style=dotted];
m31_359 -> m31_360  [key=0, style=solid];
m31_359 -> m31_373  [key=2, style=dotted];
m31_359 -> m31_371  [key=2, style=dotted];
m31_359 -> m31_374  [key=2, style=dotted];
m31_362 -> m31_363  [key=0, style=solid];
m31_362 -> m31_375  [key=2, style=dotted];
m31_362 -> m31_371  [key=2, style=dotted];
m31_362 -> m31_374  [key=2, style=dotted];
m31_365 -> m31_366  [key=0, style=solid];
m31_365 -> m31_376  [key=2, style=dotted];
m31_365 -> m31_371  [key=2, style=dotted];
m31_365 -> m31_374  [key=2, style=dotted];
m31_354 -> m31_355  [key=0, style=solid];
m31_354 -> m31_358  [key=0, style=solid];
m31_354 -> m31_361  [key=0, style=solid];
m31_354 -> m31_364  [key=0, style=solid];
m31_354 -> m31_367  [key=0, style=solid];
m31_367 -> m31_369  [key=0, style=solid];
m31_367 -> m31_377  [key=2, style=dotted];
m31_355 -> m31_356  [key=0, style=solid];
m31_357 -> m31_368  [key=0, style=solid];
m31_357 -> m31_372  [key=2, style=dotted];
m31_358 -> m31_359  [key=0, style=solid];
m31_360 -> m31_368  [key=0, style=solid];
m31_360 -> m31_372  [key=2, style=dotted];
m31_361 -> m31_362  [key=0, style=solid];
m31_363 -> m31_368  [key=0, style=solid];
m31_363 -> m31_372  [key=2, style=dotted];
m31_364 -> m31_365  [key=0, style=solid];
m31_366 -> m31_368  [key=0, style=solid];
m31_366 -> m31_372  [key=2, style=dotted];
m31_368 -> m31_369  [key=0, style=solid];
m31_369 -> m31_78  [color=blue, key=0, style=bold];
m31_320 -> m31_321  [key=0, style=solid];
m31_320 -> m31_322  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m31_320 -> m31_328  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m31_320 -> m31_331  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m31_320 -> m31_323  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m31_320 -> m31_324  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m31_321 -> m31_322  [key=0, style=solid];
m31_321 -> m31_335  [key=2, style=dotted];
m31_321 -> m31_333  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m31_322 -> m31_323  [key=0, style=solid];
m31_322 -> m31_336  [key=2, style=dotted];
m31_322 -> m31_333  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m31_328 -> m31_38  [key=2, style=dotted];
m31_328 -> m31_329  [key=0, style=solid];
m31_328 -> m31_333  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m31_331 -> m31_38  [key=2, style=dotted];
m31_331 -> m31_332  [key=0, style=solid];
m31_331 -> m31_333  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m31_333 -> m31_334  [key=0, style=solid];
m31_333 -> m31_337  [key=2, style=dotted];
m31_323 -> m31_82  [key=2, style=dotted];
m31_323 -> m31_324  [key=0, style=solid];
m31_323 -> m31_327  [color=darkseagreen4, key=1, label=longUnits, style=dashed];
m31_323 -> m31_329  [color=darkseagreen4, key=1, label=longUnits, style=dashed];
m31_327 -> m31_328  [key=0, style=solid];
m31_327 -> m31_330  [key=0, style=solid];
m31_329 -> m31_333  [key=0, style=solid];
m31_330 -> m31_331  [key=0, style=solid];
m31_330 -> m31_333  [key=0, style=solid];
m31_332 -> m31_333  [key=0, style=solid];
m31_325 -> m31_60  [color=darkorchid, key=3, label="Local variable decimal averagePrice", style=bold];
m31_325 -> m31_333  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m31_325 -> m31_326  [key=0, style=solid];
m31_326 -> m31_60  [color=darkorchid, key=3, label="Local variable int quantity", style=bold];
m31_326 -> m31_333  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m31_326 -> m31_323  [color=darkorchid, key=3, label="Local variable int quantity", style=bold];
m31_326 -> m31_327  [key=0, style=solid];
m31_326 -> m31_324  [color=darkorchid, key=3, label="Local variable int quantity", style=bold];
m31_324 -> m31_82  [key=2, style=dotted];
m31_324 -> m31_330  [color=darkseagreen4, key=1, label=shortUnits, style=dashed];
m31_324 -> m31_332  [color=darkseagreen4, key=1, label=shortUnits, style=dashed];
m31_324 -> m31_325  [key=0, style=solid];
m31_334 -> m31_320  [color=blue, key=0, style=bold];
m31_169 -> m31_170  [key=0, style=solid];
m31_174 -> m31_175  [key=0, style=solid];
m31_175 -> m31_191  [key=0, style=solid];
m31_178 -> m31_179  [key=0, style=solid];
m31_178 -> m31_192  [key=2, style=dotted];
m31_178 -> m31_183  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m31_179 -> m31_180  [key=0, style=solid];
m31_179 -> m31_193  [key=2, style=dotted];
m31_179 -> m31_182  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m31_179 -> m31_183  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m31_179 -> m31_184  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m31_179 -> m31_188  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m31_180 -> m31_181  [key=0, style=solid];
m31_180 -> m31_194  [key=2, style=dotted];
m31_180 -> m31_185  [color=darkseagreen4, key=1, label=time, style=dashed];
m31_182 -> m31_183  [key=0, style=solid];
m31_182 -> m31_185  [key=0, style=solid];
m31_182 -> m31_195  [key=2, style=dotted];
m31_184 -> m31_185  [key=0, style=solid];
m31_184 -> m31_198  [key=2, style=dotted];
m31_189 -> m31_190  [key=0, style=solid];
m31_190 -> m31_191  [key=0, style=solid];
m31_190 -> m31_80  [key=2, style=dotted];
m31_173 -> m31_174  [key=0, style=solid];
m31_177 -> m31_178  [key=0, style=solid];
m31_177 -> m31_179  [color=darkseagreen4, key=1, label=data, style=dashed];
m31_177 -> m31_180  [color=darkseagreen4, key=1, label=data, style=dashed];
m31_177 -> m31_165  [key=2, style=dotted];
m31_177 -> m31_186  [color=darkseagreen4, key=1, label=data, style=dashed];
m31_177 -> m31_187  [color=darkseagreen4, key=1, label=data, style=dashed];
m31_183 -> m31_184  [key=0, style=solid];
m31_183 -> m31_196  [key=2, style=dotted];
m31_183 -> m31_197  [key=2, style=dotted];
m31_183 -> m31_185  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m31_188 -> m31_189  [key=0, style=solid];
m31_188 -> m31_190  [color=darkseagreen4, key=1, label=tick, style=dashed];
m31_188 -> m31_201  [key=2, style=dotted];
m31_181 -> m31_182  [key=0, style=solid];
m31_185 -> m31_188  [color=darkseagreen4, key=1, label=time, style=dashed];
m31_185 -> m31_185  [color=darkseagreen4, key=1, label=time, style=dashed];
m31_185 -> m31_186  [key=0, style=solid];
m31_185 -> m31_199  [key=2, style=dotted];
m31_186 -> m31_167  [key=2, style=dotted];
m31_186 -> m31_188  [color=darkseagreen4, key=1, label=bidPrice, style=dashed];
m31_186 -> m31_187  [key=0, style=solid];
m31_186 -> m31_200  [key=2, style=dotted];
m31_187 -> m31_167  [key=2, style=dotted];
m31_187 -> m31_188  [key=0, style=solid];
m31_187 -> m31_200  [key=2, style=dotted];
m31_172 -> m31_173  [key=0, style=solid];
m31_172 -> m31_176  [key=0, style=solid];
m31_170 -> m31_177  [color=darkseagreen4, key=1, label=obj, style=dashed];
m31_170 -> m31_25  [key=2, style=dotted];
m31_170 -> m31_171  [key=0, style=solid];
m31_176 -> m31_177  [key=0, style=solid];
m31_171 -> m31_164  [key=2, style=dotted];
m31_171 -> m31_172  [key=0, style=solid];
m31_191 -> m31_169  [color=blue, key=0, style=bold];
m31_90 -> m31_76  [color=darkorchid, key=3, label="method methodReturn bool UpdateOrder", style=bold];
m31_90 -> m31_95  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_90 -> m31_101  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_90 -> m31_91  [key=0, style=solid];
m31_90 -> m31_92  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_90 -> m31_96  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_90 -> m31_98  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_90 -> m31_94  [color=darkorchid, key=3, label="method methodReturn bool UpdateOrder", style=bold];
m31_95 -> m31_96  [key=0, style=solid];
m31_95 -> m31_78  [key=2, style=dotted];
m31_95 -> m31_97  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_97 -> m31_98  [key=0, style=solid];
m31_97 -> m31_107  [key=2, style=dotted];
m31_97 -> m31_99  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_97 -> m31_101  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_101 -> m31_38  [key=2, style=dotted];
m31_101 -> m31_85  [key=2, style=dotted];
m31_101 -> m31_86  [key=2, style=dotted];
m31_101 -> m31_102  [key=0, style=solid];
m31_101 -> m31_82  [key=2, style=dotted];
m31_92 -> m31_95  [key=0, style=solid];
m31_92 -> m31_93  [key=0, style=solid];
m31_92 -> m31_105  [key=2, style=dotted];
m31_96 -> m31_97  [key=0, style=solid];
m31_96 -> m31_106  [key=2, style=dotted];
m31_98 -> m31_99  [key=0, style=solid];
m31_99 -> m31_100  [key=0, style=solid];
m31_99 -> m31_102  [key=0, style=solid];
m31_100 -> m31_101  [key=0, style=solid];
m31_100 -> m31_60  [color=darkorchid, key=3, label="Local variable int orderFee", style=bold];
m31_102 -> m31_103  [key=0, style=solid];
m31_91 -> m31_92  [key=0, style=solid];
m31_91 -> m31_104  [key=2, style=dotted];
m31_94 -> m31_103  [key=0, style=solid];
m31_93 -> m31_94  [key=0, style=solid];
m31_93 -> m31_104  [key=2, style=dotted];
m31_103 -> m31_90  [color=blue, key=0, style=bold];
m31_26 -> m31_27  [key=0, style=solid];
m31_27 -> m31_28  [key=0, style=solid];
m31_27 -> m31_30  [key=2, style=dotted];
m31_28 -> m31_29  [key=0, style=solid];
m31_28 -> m31_14  [key=2, style=dotted];
m31_28 -> m31_15  [key=2, style=dotted];
m31_29 -> m31_26  [color=blue, key=0, style=bold];
m31_279 -> m31_295  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m31_279 -> m31_298  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m31_279 -> m31_296  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m31_279 -> m31_308  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m31_279 -> m31_297  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m31_279 -> m31_280  [key=0, style=solid];
m31_279 -> m31_284  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m31_279 -> m31_287  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m31_279 -> m31_290  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m31_279 -> m31_281  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.Order ConvertOrder", style=bold];
m31_299 -> m31_300  [key=0, style=solid];
m31_299 -> m31_192  [key=2, style=dotted];
m31_300 -> m31_301  [key=0, style=solid];
m31_300 -> m31_193  [key=2, style=dotted];
m31_301 -> m31_302  [key=0, style=solid];
m31_301 -> m31_194  [key=2, style=dotted];
m31_305 -> m31_306  [key=0, style=solid];
m31_305 -> m31_166  [key=2, style=dotted];
m31_305 -> m31_307  [color=darkseagreen4, key=1, label=orderByBrokerageId, style=dashed];
m31_311 -> m31_312  [key=0, style=solid];
m31_311 -> m31_164  [key=2, style=dotted];
m31_311 -> m31_194  [key=2, style=dotted];
m31_295 -> m31_299  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m31_295 -> m31_300  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m31_295 -> m31_296  [key=0, style=solid];
m31_295 -> m31_164  [key=2, style=dotted];
m31_298 -> m31_299  [key=0, style=solid];
m31_298 -> m31_301  [color=darkseagreen4, key=1, label=createTime, style=dashed];
m31_298 -> m31_164  [key=2, style=dotted];
m31_293 -> m31_300  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m31_293 -> m31_301  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m31_293 -> m31_311  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m31_293 -> m31_295  [key=0, style=solid];
m31_293 -> m31_317  [key=2, style=dotted];
m31_293 -> m31_302  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m31_293 -> m31_303  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m31_293 -> m31_304  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m31_293 -> m31_307  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m31_293 -> m31_310  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m31_293 -> m31_312  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m31_302 -> m31_303  [key=0, style=solid];
m31_296 -> m31_305  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_296 -> m31_297  [key=0, style=solid];
m31_296 -> m31_164  [key=2, style=dotted];
m31_296 -> m31_304  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_304 -> m31_305  [key=0, style=solid];
m31_304 -> m31_319  [key=2, style=dotted];
m31_306 -> m31_307  [key=0, style=solid];
m31_306 -> m31_308  [key=0, style=solid];
m31_307 -> m31_308  [key=0, style=solid];
m31_308 -> m31_311  [color=darkseagreen4, key=1, label=gtdTime, style=dashed];
m31_308 -> m31_309  [key=0, style=solid];
m31_310 -> m31_311  [key=0, style=solid];
m31_312 -> m31_313  [key=0, style=solid];
m31_285 -> m31_167  [key=2, style=dotted];
m31_285 -> m31_295  [key=0, style=solid];
m31_285 -> m31_314  [key=2, style=dotted];
m31_288 -> m31_167  [key=2, style=dotted];
m31_288 -> m31_295  [key=0, style=solid];
m31_288 -> m31_315  [key=2, style=dotted];
m31_291 -> m31_167  [key=2, style=dotted];
m31_291 -> m31_295  [key=0, style=solid];
m31_291 -> m31_316  [key=2, style=dotted];
m31_297 -> m31_168  [key=2, style=dotted];
m31_297 -> m31_298  [key=0, style=solid];
m31_297 -> m31_302  [color=darkseagreen4, key=1, label=units, style=dashed];
m31_292 -> m31_293  [key=0, style=solid];
m31_303 -> m31_304  [key=0, style=solid];
m31_309 -> m31_310  [key=0, style=solid];
m31_309 -> m31_312  [key=0, style=solid];
m31_280 -> m31_164  [key=2, style=dotted];
m31_280 -> m31_281  [key=0, style=solid];
m31_280 -> m31_282  [color=darkseagreen4, key=1, label=type, style=dashed];
m31_280 -> m31_294  [color=darkseagreen4, key=1, label=type, style=dashed];
m31_284 -> m31_165  [key=2, style=dotted];
m31_284 -> m31_285  [key=0, style=solid];
m31_287 -> m31_165  [key=2, style=dotted];
m31_287 -> m31_288  [key=0, style=solid];
m31_290 -> m31_165  [key=2, style=dotted];
m31_290 -> m31_291  [key=0, style=solid];
m31_281 -> m31_282  [key=0, style=solid];
m31_282 -> m31_292  [key=0, style=solid];
m31_282 -> m31_283  [key=0, style=solid];
m31_282 -> m31_286  [key=0, style=solid];
m31_282 -> m31_289  [key=0, style=solid];
m31_282 -> m31_294  [key=0, style=solid];
m31_294 -> m31_313  [key=0, style=solid];
m31_294 -> m31_318  [key=2, style=dotted];
m31_283 -> m31_284  [key=0, style=solid];
m31_286 -> m31_287  [key=0, style=solid];
m31_289 -> m31_290  [key=0, style=solid];
m31_313 -> m31_279  [color=blue, key=0, style=bold];
m31_119 -> m31_120  [key=0, style=solid];
m31_120 -> m31_121  [key=0, style=solid];
m31_120 -> m31_124  [key=2, style=dotted];
m31_121 -> m31_122  [key=0, style=solid];
m31_122 -> m31_123  [key=0, style=solid];
m31_122 -> m31_125  [key=2, style=dotted];
m31_123 -> m31_119  [color=blue, key=0, style=bold];
m31_202 -> m31_203  [key=0, style=solid];
m31_204 -> m31_205  [key=0, style=solid];
m31_204 -> m31_218  [key=2, style=dotted];
m31_204 -> m31_219  [key=2, style=dotted];
m31_207 -> m31_208  [key=0, style=solid];
m31_208 -> m31_209  [key=0, style=solid];
m31_203 -> m31_204  [key=0, style=solid];
m31_203 -> m31_217  [key=2, style=dotted];
m31_205 -> m31_207  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_205 -> m31_208  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_205 -> m31_206  [key=0, style=solid];
m31_205 -> m31_220  [key=2, style=dotted];
m31_205 -> m31_209  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_206 -> m31_207  [key=0, style=solid];
m31_209 -> m31_216  [key=0, style=solid];
m31_209 -> m31_221  [key=2, style=dotted];
m31_212 -> m31_216  [key=0, style=solid];
m31_215 -> m31_216  [key=0, style=solid];
m31_215 -> m31_224  [key=2, style=dotted];
m31_215 -> m31_225  [key=2, style=dotted];
m31_211 -> m31_212  [key=0, style=solid];
m31_211 -> m31_213  [key=0, style=solid];
m31_214 -> m31_215  [key=0, style=solid];
m31_214 -> m31_223  [key=2, style=dotted];
m31_210 -> m31_211  [key=0, style=solid];
m31_213 -> m31_214  [key=0, style=solid];
m31_213 -> m31_222  [key=2, style=dotted];
m31_216 -> m31_202  [color=blue, key=0, style=bold];
m31_132 -> m31_133  [key=0, style=solid];
m31_133 -> m31_134  [key=0, style=solid];
m31_133 -> m31_137  [key=2, style=dotted];
m31_134 -> m31_135  [key=0, style=solid];
m31_135 -> m31_136  [key=0, style=solid];
m31_135 -> m31_125  [key=2, style=dotted];
m31_136 -> m31_132  [color=blue, key=0, style=bold];
m31_378 -> m31_33  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_72  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_20  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_41  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_56  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_71  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_75  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_95  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_97  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_101  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_114  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_115  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_120  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_121  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_122  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_127  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_128  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_129  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_133  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_134  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_135  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_139  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_140  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_141  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_153  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_154  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_160  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_162  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_174  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_175  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_178  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_179  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_180  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_182  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_184  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_189  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_190  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_204  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_207  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_208  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_227  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_230  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_231  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_249  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_253  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_268  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_271  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_299  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_300  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_301  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_305  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_311  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_321  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_322  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m31_378 -> m31_352  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m32_196 -> m32_197  [key=0, style=solid];
m32_197 -> m32_198  [key=0, style=solid];
m32_197 -> m32_202  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_197 -> m32_140  [color=darkorchid, key=3, label="Local variable int id", style=bold];
m32_198 -> m32_199  [key=0, style=solid];
m32_198 -> m32_200  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_198 -> m32_204  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_198 -> m32_209  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_202 -> m32_203  [key=0, style=solid];
m32_202 -> m32_156  [key=2, style=dotted];
m32_202 -> m32_202  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_202 -> m32_204  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_202 -> m32_208  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_202 -> m32_209  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_199 -> m32_200  [key=0, style=solid];
m32_199 -> m32_98  [color=darkorchid, key=3, label="Local variable bool filled", style=bold];
m32_200 -> m32_201  [key=0, style=solid];
m32_200 -> m32_216  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_200 -> m32_206  [color=darkseagreen4, key=1, label=filled, style=dashed];
m32_200 -> m32_210  [color=darkseagreen4, key=1, label=filled, style=dashed];
m32_204 -> m32_205  [key=0, style=solid];
m32_204 -> m32_94  [key=2, style=dotted];
m32_209 -> m32_206  [key=0, style=solid];
m32_209 -> m32_214  [key=2, style=dotted];
m32_201 -> m32_202  [key=0, style=solid];
m32_201 -> m32_201  [color=darkorchid, key=3, label="Local variable decimal limitPrice", style=bold];
m32_206 -> m32_207  [key=0, style=solid];
m32_206 -> m32_210  [key=0, style=solid];
m32_210 -> m32_211  [key=0, style=solid];
m32_210 -> m32_79  [key=2, style=dotted];
m32_203 -> m32_204  [key=0, style=solid];
m32_203 -> m32_93  [key=2, style=dotted];
m32_208 -> m32_209  [key=0, style=solid];
m32_205 -> m32_206  [key=0, style=solid];
m32_205 -> m32_212  [key=2, style=dotted];
m32_207 -> m32_208  [key=0, style=solid];
m32_207 -> m32_213  [key=2, style=dotted];
m32_211 -> m32_196  [color=blue, key=0, style=bold];
m32_351 -> m32_352  [key=0, style=solid];
m32_352 -> m32_353  [key=0, style=solid];
m32_352 -> m32_355  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_352 -> m32_358  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_352 -> m32_360  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_353 -> m32_354  [key=0, style=solid];
m32_353 -> m32_312  [key=2, style=dotted];
m32_353 -> m32_315  [key=2, style=dotted];
m32_353 -> m32_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_353 -> m32_361  [color=darkseagreen4, key=1, label=balance, style=dashed];
m32_355 -> m32_356  [key=0, style=solid];
m32_358 -> m32_359  [key=0, style=solid];
m32_358 -> m32_94  [key=2, style=dotted];
m32_360 -> m32_361  [key=0, style=solid];
m32_360 -> m32_312  [key=2, style=dotted];
m32_360 -> m32_315  [key=2, style=dotted];
m32_360 -> m32_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_354 -> m32_355  [key=0, style=solid];
m32_354 -> m32_43  [key=2, style=dotted];
m32_354 -> m32_367  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_354 -> m32_359  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_361 -> m32_362  [key=0, style=solid];
m32_361 -> m32_96  [key=2, style=dotted];
m32_359 -> m32_360  [key=0, style=solid];
m32_359 -> m32_235  [key=2, style=dotted];
m32_356 -> m32_357  [key=0, style=solid];
m32_356 -> m32_92  [key=2, style=dotted];
m32_356 -> m32_358  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_357 -> m32_358  [key=0, style=solid];
m32_357 -> m32_93  [key=2, style=dotted];
m32_362 -> m32_351  [color=blue, key=0, style=bold];
m32_164 -> m32_165  [key=0, style=solid];
m32_165 -> m32_166  [key=0, style=solid];
m32_165 -> m32_98  [color=darkorchid, key=3, label="Local variable bool orderFilled", style=bold];
m32_166 -> m32_167  [key=0, style=solid];
m32_166 -> m32_43  [key=2, style=dotted];
m32_166 -> m32_170  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_166 -> m32_194  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_166 -> m32_175  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_166 -> m32_176  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_166 -> m32_185  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_167 -> m32_168  [key=0, style=solid];
m32_167 -> m32_170  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_167 -> m32_174  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_167 -> m32_181  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_167 -> m32_184  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_167 -> m32_186  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_170 -> m32_171  [key=0, style=solid];
m32_170 -> m32_192  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_175 -> m32_176  [key=0, style=solid];
m32_175 -> m32_46  [key=2, style=dotted];
m32_176 -> m32_177  [key=0, style=solid];
m32_176 -> m32_47  [key=2, style=dotted];
m32_185 -> m32_186  [key=0, style=solid];
m32_185 -> m32_46  [key=2, style=dotted];
m32_168 -> m32_169  [key=0, style=solid];
m32_168 -> m32_137  [color=darkorchid, key=3, label="Local variable decimal fillPrice", style=bold];
m32_174 -> m32_175  [key=0, style=solid];
m32_174 -> m32_94  [key=2, style=dotted];
m32_181 -> m32_182  [key=0, style=solid];
m32_181 -> m32_94  [key=2, style=dotted];
m32_184 -> m32_185  [key=0, style=solid];
m32_184 -> m32_94  [key=2, style=dotted];
m32_186 -> m32_187  [key=0, style=solid];
m32_186 -> m32_109  [key=2, style=dotted];
m32_169 -> m32_170  [key=0, style=solid];
m32_169 -> m32_138  [color=darkorchid, key=3, label="Local variable decimal delta", style=bold];
m32_171 -> m32_172  [key=0, style=solid];
m32_171 -> m32_140  [color=darkorchid, key=3, label="Local variable int id", style=bold];
m32_172 -> m32_173  [key=0, style=solid];
m32_172 -> m32_92  [key=2, style=dotted];
m32_172 -> m32_172  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_172 -> m32_174  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_172 -> m32_179  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_173 -> m32_174  [key=0, style=solid];
m32_173 -> m32_93  [key=2, style=dotted];
m32_179 -> m32_180  [key=0, style=solid];
m32_179 -> m32_189  [key=2, style=dotted];
m32_179 -> m32_179  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_179 -> m32_181  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_179 -> m32_182  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_177 -> m32_178  [key=0, style=solid];
m32_177 -> m32_79  [key=2, style=dotted];
m32_178 -> m32_179  [key=0, style=solid];
m32_178 -> m32_186  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_180 -> m32_181  [key=0, style=solid];
m32_180 -> m32_93  [key=2, style=dotted];
m32_182 -> m32_183  [key=0, style=solid];
m32_182 -> m32_189  [key=2, style=dotted];
m32_182 -> m32_182  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_182 -> m32_184  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_182 -> m32_186  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_183 -> m32_184  [key=0, style=solid];
m32_183 -> m32_93  [key=2, style=dotted];
m32_187 -> m32_188  [key=0, style=solid];
m32_187 -> m32_110  [key=2, style=dotted];
m32_188 -> m32_164  [color=blue, key=0, style=bold];
m32_133 -> m32_134  [key=0, style=solid];
m32_134 -> m32_135  [key=0, style=solid];
m32_134 -> m32_98  [color=darkorchid, key=3, label="Local variable bool orderFilled", style=bold];
m32_135 -> m32_136  [key=0, style=solid];
m32_135 -> m32_43  [key=2, style=dotted];
m32_135 -> m32_139  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_135 -> m32_160  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_135 -> m32_144  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_135 -> m32_145  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_135 -> m32_152  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_136 -> m32_137  [key=0, style=solid];
m32_136 -> m32_139  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_136 -> m32_143  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_136 -> m32_148  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_136 -> m32_151  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_136 -> m32_153  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_139 -> m32_140  [key=0, style=solid];
m32_139 -> m32_158  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_139 -> m32_161  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_139 -> m32_153  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_144 -> m32_145  [key=0, style=solid];
m32_144 -> m32_46  [key=2, style=dotted];
m32_145 -> m32_146  [key=0, style=solid];
m32_145 -> m32_47  [key=2, style=dotted];
m32_152 -> m32_153  [key=0, style=solid];
m32_152 -> m32_46  [key=2, style=dotted];
m32_137 -> m32_138  [key=0, style=solid];
m32_137 -> m32_137  [color=darkorchid, key=3, label="Local variable decimal price", style=bold];
m32_143 -> m32_144  [key=0, style=solid];
m32_143 -> m32_94  [key=2, style=dotted];
m32_148 -> m32_149  [key=0, style=solid];
m32_148 -> m32_94  [key=2, style=dotted];
m32_151 -> m32_152  [key=0, style=solid];
m32_151 -> m32_94  [key=2, style=dotted];
m32_153 -> m32_154  [key=0, style=solid];
m32_153 -> m32_109  [key=2, style=dotted];
m32_138 -> m32_139  [key=0, style=solid];
m32_138 -> m32_138  [color=darkorchid, key=3, label="Local variable decimal delta", style=bold];
m32_140 -> m32_141  [key=0, style=solid];
m32_140 -> m32_140  [color=darkorchid, key=3, label="Local variable int id", style=bold];
m32_141 -> m32_142  [key=0, style=solid];
m32_141 -> m32_92  [key=2, style=dotted];
m32_141 -> m32_141  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_141 -> m32_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_141 -> m32_146  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_142 -> m32_143  [key=0, style=solid];
m32_142 -> m32_93  [key=2, style=dotted];
m32_146 -> m32_147  [key=0, style=solid];
m32_146 -> m32_156  [key=2, style=dotted];
m32_146 -> m32_146  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_146 -> m32_148  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_146 -> m32_149  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_147 -> m32_148  [key=0, style=solid];
m32_147 -> m32_93  [key=2, style=dotted];
m32_149 -> m32_150  [key=0, style=solid];
m32_149 -> m32_156  [key=2, style=dotted];
m32_149 -> m32_149  [color=darkseagreen4, key=1, label=id, style=dashed];
m32_149 -> m32_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_149 -> m32_153  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_150 -> m32_151  [key=0, style=solid];
m32_150 -> m32_93  [key=2, style=dotted];
m32_154 -> m32_155  [key=0, style=solid];
m32_154 -> m32_110  [key=2, style=dotted];
m32_155 -> m32_133  [color=blue, key=0, style=bold];
m32_322 -> m32_323  [key=0, style=solid];
m32_323 -> m32_324  [key=0, style=solid];
m32_323 -> m32_325  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_323 -> m32_328  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_323 -> m32_334  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_324 -> m32_325  [key=0, style=solid];
m32_324 -> m32_43  [key=2, style=dotted];
m32_324 -> m32_345  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m32_324 -> m32_335  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m32_324 -> m32_336  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m32_325 -> m32_326  [key=0, style=solid];
m32_325 -> m32_344  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_328 -> m32_329  [key=0, style=solid];
m32_328 -> m32_348  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m32_334 -> m32_335  [key=0, style=solid];
m32_334 -> m32_94  [key=2, style=dotted];
m32_335 -> m32_336  [key=0, style=solid];
m32_335 -> m32_235  [key=2, style=dotted];
m32_336 -> m32_337  [key=0, style=solid];
m32_336 -> m32_47  [key=2, style=dotted];
m32_326 -> m32_327  [key=0, style=solid];
m32_326 -> m32_342  [key=2, style=dotted];
m32_326 -> m32_328  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m32_326 -> m32_348  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m32_326 -> m32_340  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m32_327 -> m32_328  [key=0, style=solid];
m32_327 -> m32_43  [key=2, style=dotted];
m32_327 -> m32_349  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m32_327 -> m32_337  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m32_327 -> m32_338  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m32_340 -> m32_341  [key=0, style=solid];
m32_340 -> m32_110  [key=2, style=dotted];
m32_337 -> m32_338  [key=0, style=solid];
m32_337 -> m32_235  [key=2, style=dotted];
m32_338 -> m32_339  [key=0, style=solid];
m32_338 -> m32_47  [key=2, style=dotted];
m32_329 -> m32_330  [key=0, style=solid];
m32_329 -> m32_331  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m32_329 -> m32_340  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m32_329 -> m32_329  [color=darkorchid, key=3, label="Local variable int orderCount", style=bold];
m32_330 -> m32_331  [key=0, style=solid];
m32_330 -> m32_332  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_330 -> m32_335  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_330 -> m32_337  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_330 -> m32_339  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_330 -> m32_140  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m32_331 -> m32_332  [key=0, style=solid];
m32_331 -> m32_340  [key=0, style=solid];
m32_332 -> m32_333  [key=0, style=solid];
m32_332 -> m32_92  [key=2, style=dotted];
m32_332 -> m32_260  [key=2, style=dotted];
m32_332 -> m32_334  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_339 -> m32_331  [key=0, style=solid];
m32_339 -> m32_339  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_333 -> m32_334  [key=0, style=solid];
m32_333 -> m32_93  [key=2, style=dotted];
m32_341 -> m32_322  [color=blue, key=0, style=bold];
m32_455 -> m32_456  [key=0, style=solid];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_60  [key=2, style=dotted];
m32_56 -> m32_57  [key=0, style=solid];
m32_56 -> m32_60  [key=2, style=dotted];
m32_55 -> m32_56  [key=0, style=solid];
m32_55 -> m32_57  [key=0, style=solid];
m32_57 -> m32_58  [key=0, style=solid];
m32_57 -> m32_59  [key=0, style=solid];
m32_61 -> m32_62  [key=0, style=solid];
m32_64 -> m32_65  [key=0, style=solid];
m32_68 -> m32_69  [key=0, style=solid];
m32_71 -> m32_72  [key=0, style=solid];
m32_54 -> m32_55  [key=0, style=solid];
m32_54 -> m32_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_59 -> m32_54  [color=blue, key=0, style=bold];
m32_62 -> m32_63  [key=0, style=solid];
m32_63 -> m32_61  [color=blue, key=0, style=bold];
m32_65 -> m32_66  [key=0, style=solid];
m32_65 -> m32_67  [key=2, style=dotted];
m32_66 -> m32_64  [color=blue, key=0, style=bold];
m32_69 -> m32_70  [key=0, style=solid];
m32_70 -> m32_68  [color=blue, key=0, style=bold];
m32_72 -> m32_73  [key=0, style=solid];
m32_72 -> m32_74  [key=2, style=dotted];
m32_73 -> m32_71  [color=blue, key=0, style=bold];
m32_114 -> m32_115  [key=0, style=solid];
m32_114 -> m32_60  [key=2, style=dotted];
m32_112 -> m32_113  [key=0, style=solid];
m32_112 -> m32_115  [key=0, style=solid];
m32_111 -> m32_112  [key=0, style=solid];
m32_113 -> m32_114  [key=0, style=solid];
m32_113 -> m32_106  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_113 -> m32_115  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_115 -> m32_111  [color=blue, key=0, style=bold];
m32_131 -> m32_132  [key=0, style=solid];
m32_131 -> m32_60  [key=2, style=dotted];
m32_129 -> m32_130  [key=0, style=solid];
m32_129 -> m32_132  [key=0, style=solid];
m32_128 -> m32_129  [key=0, style=solid];
m32_130 -> m32_131  [key=0, style=solid];
m32_130 -> m32_125  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_130 -> m32_132  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_132 -> m32_128  [color=blue, key=0, style=bold];
m32_160 -> m32_161  [key=0, style=solid];
m32_160 -> m32_60  [key=2, style=dotted];
m32_158 -> m32_159  [key=0, style=solid];
m32_158 -> m32_161  [key=0, style=solid];
m32_161 -> m32_162  [key=0, style=solid];
m32_161 -> m32_146  [color=darkseagreen4, key=1, label=price, style=dashed];
m32_161 -> m32_149  [color=darkseagreen4, key=1, label=price, style=dashed];
m32_161 -> m32_163  [color=darkseagreen4, key=1, label=price, style=dashed];
m32_157 -> m32_158  [key=0, style=solid];
m32_157 -> m32_161  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_159 -> m32_160  [key=0, style=solid];
m32_159 -> m32_153  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_159 -> m32_163  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_163 -> m32_157  [color=blue, key=0, style=bold];
m32_162 -> m32_163  [key=0, style=solid];
m32_162 -> m32_146  [color=darkseagreen4, key=1, label=delta, style=dashed];
m32_162 -> m32_149  [color=darkseagreen4, key=1, label=delta, style=dashed];
m32_194 -> m32_195  [key=0, style=solid];
m32_194 -> m32_60  [key=2, style=dotted];
m32_192 -> m32_193  [key=0, style=solid];
m32_192 -> m32_179  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m32_192 -> m32_182  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m32_192 -> m32_195  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m32_190 -> m32_191  [key=0, style=solid];
m32_190 -> m32_192  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_191 -> m32_192  [key=0, style=solid];
m32_191 -> m32_177  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_191 -> m32_195  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_195 -> m32_190  [color=blue, key=0, style=bold];
m32_193 -> m32_194  [key=0, style=solid];
m32_193 -> m32_179  [color=darkseagreen4, key=1, label=delta, style=dashed];
m32_193 -> m32_182  [color=darkseagreen4, key=1, label=delta, style=dashed];
m32_193 -> m32_195  [color=darkseagreen4, key=1, label=delta, style=dashed];
m32_216 -> m32_217  [key=0, style=solid];
m32_216 -> m32_218  [key=0, style=solid];
m32_215 -> m32_216  [key=0, style=solid];
m32_217 -> m32_218  [key=0, style=solid];
m32_217 -> m32_206  [color=darkseagreen4, key=1, label=filled, style=dashed];
m32_217 -> m32_210  [color=darkseagreen4, key=1, label=filled, style=dashed];
m32_218 -> m32_215  [color=blue, key=0, style=bold];
m32_240 -> m32_241  [key=0, style=solid];
m32_240 -> m32_60  [key=2, style=dotted];
m32_242 -> m32_243  [key=0, style=solid];
m32_242 -> m32_60  [key=2, style=dotted];
m32_239 -> m32_240  [key=0, style=solid];
m32_239 -> m32_241  [key=0, style=solid];
m32_241 -> m32_242  [key=0, style=solid];
m32_241 -> m32_243  [key=0, style=solid];
m32_245 -> m32_246  [key=0, style=solid];
m32_245 -> m32_247  [key=2, style=dotted];
m32_244 -> m32_245  [key=0, style=solid];
m32_238 -> m32_239  [key=0, style=solid];
m32_238 -> m32_241  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_243 -> m32_238  [color=blue, key=0, style=bold];
m32_246 -> m32_244  [color=blue, key=0, style=bold];
m32_265 -> m32_266  [key=0, style=solid];
m32_264 -> m32_265  [key=0, style=solid];
m32_264 -> m32_60  [key=2, style=dotted];
m32_262 -> m32_263  [key=0, style=solid];
m32_262 -> m32_265  [key=0, style=solid];
m32_263 -> m32_264  [key=0, style=solid];
m32_263 -> m32_263  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m32_263 -> m32_258  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m32_263 -> m32_266  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m32_261 -> m32_262  [key=0, style=solid];
m32_261 -> m32_265  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_266 -> m32_261  [color=blue, key=0, style=bold];
m32_293 -> m32_294  [key=0, style=solid];
m32_298 -> m32_299  [key=0, style=solid];
m32_298 -> m32_60  [key=2, style=dotted];
m32_297 -> m32_298  [key=0, style=solid];
m32_297 -> m32_299  [key=0, style=solid];
m32_300 -> m32_301  [key=0, style=solid];
m32_294 -> m32_295  [key=0, style=solid];
m32_295 -> m32_293  [color=blue, key=0, style=bold];
m32_296 -> m32_297  [key=0, style=solid];
m32_299 -> m32_296  [color=blue, key=0, style=bold];
m32_301 -> m32_302  [key=0, style=solid];
m32_302 -> m32_300  [color=blue, key=0, style=bold];
m32_316 -> m32_317  [key=0, style=solid];
m32_319 -> m32_320  [key=0, style=solid];
m32_317 -> m32_318  [key=0, style=solid];
m32_318 -> m32_316  [color=blue, key=0, style=bold];
m32_320 -> m32_321  [key=0, style=solid];
m32_321 -> m32_319  [color=blue, key=0, style=bold];
m32_345 -> m32_346  [key=0, style=solid];
m32_345 -> m32_60  [key=2, style=dotted];
m32_344 -> m32_345  [key=0, style=solid];
m32_344 -> m32_346  [key=0, style=solid];
m32_348 -> m32_349  [key=0, style=solid];
m32_348 -> m32_93  [key=2, style=dotted];
m32_349 -> m32_350  [key=0, style=solid];
m32_349 -> m32_60  [key=2, style=dotted];
m32_343 -> m32_344  [key=0, style=solid];
m32_346 -> m32_343  [color=blue, key=0, style=bold];
m32_347 -> m32_348  [key=0, style=solid];
m32_350 -> m32_347  [color=blue, key=0, style=bold];
m32_363 -> m32_364  [key=0, style=solid];
m32_367 -> m32_368  [key=0, style=solid];
m32_367 -> m32_60  [key=2, style=dotted];
m32_369 -> m32_370  [key=0, style=solid];
m32_364 -> m32_365  [key=0, style=solid];
m32_365 -> m32_363  [color=blue, key=0, style=bold];
m32_366 -> m32_367  [key=0, style=solid];
m32_368 -> m32_366  [color=blue, key=0, style=bold];
m32_370 -> m32_371  [key=0, style=solid];
m32_371 -> m32_369  [color=blue, key=0, style=bold];
m32_392 -> m32_393  [key=0, style=solid];
m32_392 -> m32_60  [key=2, style=dotted];
m32_391 -> m32_392  [key=0, style=solid];
m32_391 -> m32_393  [key=0, style=solid];
m32_395 -> m32_396  [key=0, style=solid];
m32_395 -> m32_313  [key=2, style=dotted];
m32_395 -> m32_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_398 -> m32_399  [key=0, style=solid];
m32_398 -> m32_313  [key=2, style=dotted];
m32_398 -> m32_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_394 -> m32_395  [key=0, style=solid];
m32_390 -> m32_391  [key=0, style=solid];
m32_393 -> m32_390  [color=blue, key=0, style=bold];
m32_396 -> m32_394  [color=blue, key=0, style=bold];
m32_397 -> m32_398  [key=0, style=solid];
m32_397 -> m32_401  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_401 -> m32_402  [key=0, style=solid];
m32_401 -> m32_403  [key=2, style=dotted];
m32_399 -> m32_397  [color=blue, key=0, style=bold];
m32_400 -> m32_401  [key=0, style=solid];
m32_402 -> m32_400  [color=blue, key=0, style=bold];
m32_418 -> m32_419  [key=0, style=solid];
m32_418 -> m32_60  [key=2, style=dotted];
m32_417 -> m32_418  [key=0, style=solid];
m32_417 -> m32_419  [key=0, style=solid];
m32_416 -> m32_417  [key=0, style=solid];
m32_419 -> m32_416  [color=blue, key=0, style=bold];
m32_453 -> m32_454  [key=0, style=solid];
m32_453 -> m32_313  [key=2, style=dotted];
m32_453 -> m32_455  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_452 -> m32_453  [key=0, style=solid];
m32_452 -> m32_456  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_456 -> m32_457  [key=0, style=solid];
m32_454 -> m32_452  [color=blue, key=0, style=bold];
m32_457 -> m32_455  [color=blue, key=0, style=bold];
m32_248 -> m32_249  [key=0, style=solid];
m32_249 -> m32_250  [key=0, style=solid];
m32_249 -> m32_254  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_249 -> m32_255  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_250 -> m32_251  [key=0, style=solid];
m32_250 -> m32_92  [key=2, style=dotted];
m32_250 -> m32_260  [key=2, style=dotted];
m32_250 -> m32_254  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_250 -> m32_265  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_250 -> m32_255  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_254 -> m32_255  [key=0, style=solid];
m32_254 -> m32_254  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m32_254 -> m32_262  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_254 -> m32_263  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m32_254 -> m32_265  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_254 -> m32_258  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m32_255 -> m32_256  [key=0, style=solid];
m32_255 -> m32_94  [key=2, style=dotted];
m32_251 -> m32_252  [key=0, style=solid];
m32_251 -> m32_93  [key=2, style=dotted];
m32_252 -> m32_253  [key=0, style=solid];
m32_252 -> m32_254  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m32_252 -> m32_140  [color=darkorchid, key=3, label="Local variable int orderFilledEventCount", style=bold];
m32_253 -> m32_254  [key=0, style=solid];
m32_253 -> m32_43  [key=2, style=dotted];
m32_253 -> m32_264  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m32_253 -> m32_256  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m32_256 -> m32_257  [key=0, style=solid];
m32_256 -> m32_235  [key=2, style=dotted];
m32_258 -> m32_259  [key=0, style=solid];
m32_258 -> m32_110  [key=2, style=dotted];
m32_257 -> m32_258  [key=0, style=solid];
m32_257 -> m32_213  [key=2, style=dotted];
m32_259 -> m32_248  [color=blue, key=0, style=bold];
m32_97 -> m32_98  [key=0, style=solid];
m32_98 -> m32_99  [key=0, style=solid];
m32_98 -> m32_98  [color=darkorchid, key=3, label="Local variable bool orderFilled", style=bold];
m32_99 -> m32_100  [key=0, style=solid];
m32_99 -> m32_43  [key=2, style=dotted];
m32_99 -> m32_101  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_99 -> m32_114  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_99 -> m32_105  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_100 -> m32_101  [key=0, style=solid];
m32_100 -> m32_104  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_100 -> m32_106  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_101 -> m32_102  [key=0, style=solid];
m32_101 -> m32_112  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_101 -> m32_106  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_105 -> m32_106  [key=0, style=solid];
m32_105 -> m32_46  [key=2, style=dotted];
m32_104 -> m32_105  [key=0, style=solid];
m32_104 -> m32_94  [key=2, style=dotted];
m32_106 -> m32_107  [key=0, style=solid];
m32_106 -> m32_109  [key=2, style=dotted];
m32_102 -> m32_103  [key=0, style=solid];
m32_102 -> m32_92  [key=2, style=dotted];
m32_102 -> m32_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_102 -> m32_106  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_103 -> m32_104  [key=0, style=solid];
m32_103 -> m32_93  [key=2, style=dotted];
m32_107 -> m32_108  [key=0, style=solid];
m32_107 -> m32_110  [key=2, style=dotted];
m32_108 -> m32_97  [color=blue, key=0, style=bold];
m32_75 -> m32_76  [key=0, style=solid];
m32_76 -> m32_77  [key=0, style=solid];
m32_77 -> m32_78  [key=0, style=solid];
m32_77 -> m32_79  [key=2, style=dotted];
m32_78 -> m32_75  [color=blue, key=0, style=bold];
m32_372 -> m32_373  [key=0, style=solid];
m32_373 -> m32_374  [key=0, style=solid];
m32_373 -> m32_375  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_373 -> m32_378  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_373 -> m32_381  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_374 -> m32_375  [key=0, style=solid];
m32_374 -> m32_43  [key=2, style=dotted];
m32_374 -> m32_392  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m32_374 -> m32_379  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m32_375 -> m32_376  [key=0, style=solid];
m32_375 -> m32_391  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_378 -> m32_379  [key=0, style=solid];
m32_378 -> m32_94  [key=2, style=dotted];
m32_381 -> m32_382  [key=0, style=solid];
m32_381 -> m32_386  [key=2, style=dotted];
m32_381 -> m32_387  [key=2, style=dotted];
m32_381 -> m32_383  [color=darkseagreen4, key=1, label=executions, style=dashed];
m32_381 -> m32_384  [color=darkseagreen4, key=1, label=executions, style=dashed];
m32_381 -> m32_395  [color=darkseagreen4, key=1, label=executions, style=dashed];
m32_381 -> m32_398  [color=darkseagreen4, key=1, label=executions, style=dashed];
m32_379 -> m32_380  [key=0, style=solid];
m32_379 -> m32_46  [key=2, style=dotted];
m32_376 -> m32_377  [key=0, style=solid];
m32_376 -> m32_92  [key=2, style=dotted];
m32_376 -> m32_260  [key=2, style=dotted];
m32_376 -> m32_378  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_376 -> m32_384  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_376 -> m32_395  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_377 -> m32_378  [key=0, style=solid];
m32_377 -> m32_93  [key=2, style=dotted];
m32_384 -> m32_385  [key=0, style=solid];
m32_384 -> m32_313  [key=2, style=dotted];
m32_384 -> m32_79  [key=2, style=dotted];
m32_384 -> m32_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_380 -> m32_381  [key=0, style=solid];
m32_380 -> m32_212  [key=2, style=dotted];
m32_380 -> m32_382  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m32_380 -> m32_383  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m32_382 -> m32_383  [key=0, style=solid];
m32_382 -> m32_388  [key=2, style=dotted];
m32_383 -> m32_384  [key=0, style=solid];
m32_383 -> m32_389  [key=2, style=dotted];
m32_385 -> m32_372  [color=blue, key=0, style=bold];
m32_420 -> m32_421  [key=0, style=solid];
m32_421 -> m32_422  [key=0, style=solid];
m32_421 -> m32_427  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_421 -> m32_434  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_421 -> m32_437  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_422 -> m32_423  [key=0, style=solid];
m32_422 -> m32_79  [key=2, style=dotted];
m32_427 -> m32_428  [key=0, style=solid];
m32_427 -> m32_430  [key=0, style=solid];
m32_434 -> m32_435  [key=0, style=solid];
m32_434 -> m32_437  [key=0, style=solid];
m32_437 -> m32_438  [key=0, style=solid];
m32_437 -> m32_79  [key=2, style=dotted];
m32_423 -> m32_424  [key=0, style=solid];
m32_423 -> m32_439  [key=2, style=dotted];
m32_423 -> m32_434  [color=darkseagreen4, key=1, label=tenMinutes, style=dashed];
m32_424 -> m32_425  [key=0, style=solid];
m32_424 -> m32_440  [key=2, style=dotted];
m32_425 -> m32_426  [key=0, style=solid];
m32_425 -> m32_440  [key=2, style=dotted];
m32_426 -> m32_427  [key=0, style=solid];
m32_426 -> m32_440  [key=2, style=dotted];
m32_428 -> m32_429  [key=0, style=solid];
m32_428 -> m32_213  [key=2, style=dotted];
m32_430 -> m32_431  [key=0, style=solid];
m32_430 -> m32_212  [key=2, style=dotted];
m32_430 -> m32_434  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m32_429 -> m32_427  [key=0, style=solid];
m32_429 -> m32_441  [key=2, style=dotted];
m32_431 -> m32_432  [key=0, style=solid];
m32_431 -> m32_440  [key=2, style=dotted];
m32_432 -> m32_433  [key=0, style=solid];
m32_432 -> m32_440  [key=2, style=dotted];
m32_433 -> m32_434  [key=0, style=solid];
m32_433 -> m32_440  [key=2, style=dotted];
m32_435 -> m32_436  [key=0, style=solid];
m32_435 -> m32_213  [key=2, style=dotted];
m32_436 -> m32_434  [key=0, style=solid];
m32_436 -> m32_441  [key=2, style=dotted];
m32_438 -> m32_420  [color=blue, key=0, style=bold];
m32_219 -> m32_220  [key=0, style=solid];
m32_220 -> m32_221  [key=0, style=solid];
m32_220 -> m32_43  [key=2, style=dotted];
m32_220 -> m32_223  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m32_220 -> m32_240  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m32_220 -> m32_227  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m32_221 -> m32_222  [key=0, style=solid];
m32_221 -> m32_43  [key=2, style=dotted];
m32_221 -> m32_223  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m32_221 -> m32_242  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m32_221 -> m32_230  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m32_223 -> m32_224  [key=0, style=solid];
m32_223 -> m32_239  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_223 -> m32_241  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_227 -> m32_228  [key=0, style=solid];
m32_227 -> m32_235  [key=2, style=dotted];
m32_222 -> m32_223  [key=0, style=solid];
m32_222 -> m32_226  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_222 -> m32_229  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_222 -> m32_231  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_230 -> m32_231  [key=0, style=solid];
m32_230 -> m32_235  [key=2, style=dotted];
m32_226 -> m32_227  [key=0, style=solid];
m32_226 -> m32_94  [key=2, style=dotted];
m32_229 -> m32_230  [key=0, style=solid];
m32_229 -> m32_45  [key=2, style=dotted];
m32_231 -> m32_232  [key=0, style=solid];
m32_231 -> m32_44  [key=2, style=dotted];
m32_224 -> m32_225  [key=0, style=solid];
m32_224 -> m32_156  [key=2, style=dotted];
m32_224 -> m32_226  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_224 -> m32_229  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_224 -> m32_232  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_224 -> m32_245  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_225 -> m32_226  [key=0, style=solid];
m32_225 -> m32_93  [key=2, style=dotted];
m32_232 -> m32_233  [key=0, style=solid];
m32_232 -> m32_236  [key=2, style=dotted];
m32_232 -> m32_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_228 -> m32_229  [key=0, style=solid];
m32_228 -> m32_213  [key=2, style=dotted];
m32_233 -> m32_234  [key=0, style=solid];
m32_233 -> m32_237  [key=2, style=dotted];
m32_234 -> m32_219  [color=blue, key=0, style=bold];
m32_267 -> m32_268  [key=0, style=solid];
m32_268 -> m32_269  [key=0, style=solid];
m32_268 -> m32_270  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_268 -> m32_276  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_268 -> m32_280  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_268 -> m32_283  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_269 -> m32_270  [key=0, style=solid];
m32_269 -> m32_213  [key=2, style=dotted];
m32_270 -> m32_271  [key=0, style=solid];
m32_270 -> m32_48  [key=2, style=dotted];
m32_270 -> m32_290  [key=2, style=dotted];
m32_270 -> m32_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_270 -> m32_273  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m32_270 -> m32_274  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m32_270 -> m32_286  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m32_276 -> m32_277  [key=0, style=solid];
m32_276 -> m32_297  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_280 -> m32_281  [key=0, style=solid];
m32_280 -> m32_94  [key=2, style=dotted];
m32_283 -> m32_284  [key=0, style=solid];
m32_283 -> m32_48  [key=2, style=dotted];
m32_283 -> m32_290  [key=2, style=dotted];
m32_283 -> m32_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_283 -> m32_286  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m32_283 -> m32_287  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m32_283 -> m32_288  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m32_271 -> m32_272  [key=0, style=solid];
m32_271 -> m32_273  [key=0, style=solid];
m32_273 -> m32_274  [key=0, style=solid];
m32_273 -> m32_52  [key=2, style=dotted];
m32_274 -> m32_275  [key=0, style=solid];
m32_274 -> m32_292  [key=2, style=dotted];
m32_274 -> m32_285  [color=darkseagreen4, key=1, label=hasSymbol, style=dashed];
m32_286 -> m32_289  [key=0, style=solid];
m32_286 -> m32_110  [key=2, style=dotted];
m32_272 -> m32_271  [key=0, style=solid];
m32_272 -> m32_291  [key=2, style=dotted];
m32_275 -> m32_276  [key=0, style=solid];
m32_275 -> m32_43  [key=2, style=dotted];
m32_275 -> m32_298  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m32_275 -> m32_281  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m32_285 -> m32_286  [key=0, style=solid];
m32_285 -> m32_287  [key=0, style=solid];
m32_281 -> m32_282  [key=0, style=solid];
m32_281 -> m32_235  [key=2, style=dotted];
m32_277 -> m32_278  [key=0, style=solid];
m32_277 -> m32_286  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m32_277 -> m32_288  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m32_277 -> m32_277  [color=darkorchid, key=3, label="Local variable int quantity", style=bold];
m32_278 -> m32_279  [key=0, style=solid];
m32_278 -> m32_92  [key=2, style=dotted];
m32_278 -> m32_280  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_288 -> m32_289  [key=0, style=solid];
m32_288 -> m32_110  [key=2, style=dotted];
m32_279 -> m32_280  [key=0, style=solid];
m32_279 -> m32_93  [key=2, style=dotted];
m32_282 -> m32_283  [key=0, style=solid];
m32_282 -> m32_213  [key=2, style=dotted];
m32_284 -> m32_285  [key=0, style=solid];
m32_284 -> m32_52  [key=2, style=dotted];
m32_287 -> m32_288  [key=0, style=solid];
m32_287 -> m32_292  [key=2, style=dotted];
m32_287 -> m32_79  [key=2, style=dotted];
m32_289 -> m32_267  [color=blue, key=0, style=bold];
m32_303 -> m32_304  [key=0, style=solid];
m32_304 -> m32_305  [key=0, style=solid];
m32_305 -> m32_306  [key=0, style=solid];
m32_305 -> m32_312  [key=2, style=dotted];
m32_305 -> m32_307  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m32_305 -> m32_310  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m32_306 -> m32_307  [key=0, style=solid];
m32_306 -> m32_313  [key=2, style=dotted];
m32_306 -> m32_79  [key=2, style=dotted];
m32_306 -> m32_316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_307 -> m32_308  [key=0, style=solid];
m32_307 -> m32_311  [key=0, style=solid];
m32_307 -> m32_309  [color=darkseagreen4, key=1, label=cash, style=dashed];
m32_310 -> m32_307  [key=0, style=solid];
m32_310 -> m32_315  [key=2, style=dotted];
m32_310 -> m32_96  [key=2, style=dotted];
m32_310 -> m32_319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_308 -> m32_309  [key=0, style=solid];
m32_308 -> m32_314  [key=2, style=dotted];
m32_309 -> m32_310  [key=0, style=solid];
m32_309 -> m32_307  [key=0, style=solid];
m32_311 -> m32_303  [color=blue, key=0, style=bold];
m32_404 -> m32_405  [key=0, style=solid];
m32_405 -> m32_406  [key=0, style=solid];
m32_405 -> m32_407  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_405 -> m32_410  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_405 -> m32_413  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_406 -> m32_407  [key=0, style=solid];
m32_406 -> m32_43  [key=2, style=dotted];
m32_406 -> m32_418  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m32_406 -> m32_411  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m32_407 -> m32_408  [key=0, style=solid];
m32_407 -> m32_417  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_410 -> m32_411  [key=0, style=solid];
m32_410 -> m32_94  [key=2, style=dotted];
m32_413 -> m32_414  [key=0, style=solid];
m32_413 -> m32_44  [key=2, style=dotted];
m32_411 -> m32_412  [key=0, style=solid];
m32_411 -> m32_46  [key=2, style=dotted];
m32_408 -> m32_409  [key=0, style=solid];
m32_408 -> m32_156  [key=2, style=dotted];
m32_408 -> m32_410  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_409 -> m32_410  [key=0, style=solid];
m32_409 -> m32_93  [key=2, style=dotted];
m32_412 -> m32_413  [key=0, style=solid];
m32_412 -> m32_213  [key=2, style=dotted];
m32_414 -> m32_415  [key=0, style=solid];
m32_414 -> m32_96  [key=2, style=dotted];
m32_415 -> m32_404  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [color=red, key=0, style=solid];
m32_1 -> m32_2  [color=red, key=0, style=solid];
m32_1 -> m32_7  [color=red, key=2, style=dotted];
m32_1 -> m32_8  [color=red, key=2, style=dotted];
m32_1 -> m32_9  [color=red, key=2, style=dotted];
m32_2 -> m32_3  [key=0, style=solid];
m32_2 -> m32_10  [key=2, style=dotted];
m32_2 -> m32_4  [color=darkseagreen4, key=1, label=securityProvider, style=dashed];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_11  [key=2, style=dotted];
m32_3 -> m32_12  [key=2, style=dotted];
m32_3 -> m32_13  [key=2, style=dotted];
m32_3 -> m32_14  [key=2, style=dotted];
m32_3 -> m32_15  [key=2, style=dotted];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_16  [key=2, style=dotted];
m32_4 -> m32_17  [key=2, style=dotted];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_18  [key=2, style=dotted];
m32_6 -> m32_0  [color=blue, key=0, style=bold];
m32_116 -> m32_117  [key=0, style=solid];
m32_117 -> m32_118  [key=0, style=solid];
m32_117 -> m32_98  [color=darkorchid, key=3, label="Local variable bool orderFilled", style=bold];
m32_118 -> m32_119  [key=0, style=solid];
m32_118 -> m32_43  [key=2, style=dotted];
m32_118 -> m32_120  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_118 -> m32_131  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_118 -> m32_124  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_119 -> m32_120  [key=0, style=solid];
m32_119 -> m32_123  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_119 -> m32_125  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_120 -> m32_121  [key=0, style=solid];
m32_120 -> m32_129  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_120 -> m32_125  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m32_124 -> m32_125  [key=0, style=solid];
m32_124 -> m32_46  [key=2, style=dotted];
m32_123 -> m32_124  [key=0, style=solid];
m32_123 -> m32_94  [key=2, style=dotted];
m32_125 -> m32_126  [key=0, style=solid];
m32_125 -> m32_109  [key=2, style=dotted];
m32_121 -> m32_122  [key=0, style=solid];
m32_121 -> m32_92  [key=2, style=dotted];
m32_121 -> m32_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_121 -> m32_125  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_122 -> m32_123  [key=0, style=solid];
m32_122 -> m32_93  [key=2, style=dotted];
m32_126 -> m32_127  [key=0, style=solid];
m32_126 -> m32_110  [key=2, style=dotted];
m32_127 -> m32_116  [color=blue, key=0, style=bold];
m32_19 -> m32_20  [key=0, style=solid];
m32_20 -> m32_21  [key=0, style=solid];
m32_20 -> m32_42  [key=2, style=dotted];
m32_21 -> m32_22  [key=0, style=solid];
m32_21 -> m32_42  [key=2, style=dotted];
m32_22 -> m32_23  [key=0, style=solid];
m32_22 -> m32_42  [key=2, style=dotted];
m32_23 -> m32_24  [key=0, style=solid];
m32_23 -> m32_43  [key=2, style=dotted];
m32_23 -> m32_25  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m32_23 -> m32_58  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m32_23 -> m32_30  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m32_23 -> m32_31  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_43  [key=2, style=dotted];
m32_24 -> m32_56  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m32_25 -> m32_26  [key=0, style=solid];
m32_25 -> m32_55  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_25 -> m32_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_30 -> m32_31  [key=0, style=solid];
m32_30 -> m32_46  [key=2, style=dotted];
m32_31 -> m32_28  [key=0, style=solid];
m32_31 -> m32_47  [key=2, style=dotted];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_42  [key=2, style=dotted];
m32_27 -> m32_28  [key=0, style=solid];
m32_27 -> m32_44  [key=2, style=dotted];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_32  [key=0, style=solid];
m32_29 -> m32_30  [key=0, style=solid];
m32_29 -> m32_45  [key=2, style=dotted];
m32_32 -> m32_33  [key=0, style=solid];
m32_32 -> m32_42  [key=2, style=dotted];
m32_33 -> m32_34  [key=0, style=solid];
m32_33 -> m32_48  [key=2, style=dotted];
m32_34 -> m32_34  [key=0, style=solid];
m32_34 -> m32_35  [key=0, style=solid];
m32_34 -> m32_49  [key=2, style=dotted];
m32_34 -> m32_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_35 -> m32_36  [key=0, style=solid];
m32_35 -> m32_44  [key=2, style=dotted];
m32_35 -> m32_50  [key=2, style=dotted];
m32_35 -> m32_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_36 -> m32_37  [key=0, style=solid];
m32_36 -> m32_51  [key=2, style=dotted];
m32_36 -> m32_52  [key=2, style=dotted];
m32_37 -> m32_38  [key=0, style=solid];
m32_37 -> m32_48  [key=2, style=dotted];
m32_37 -> m32_49  [key=2, style=dotted];
m32_37 -> m32_50  [key=2, style=dotted];
m32_37 -> m32_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_37 -> m32_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_38 -> m32_39  [key=0, style=solid];
m32_38 -> m32_51  [key=2, style=dotted];
m32_38 -> m32_52  [key=2, style=dotted];
m32_39 -> m32_40  [key=0, style=solid];
m32_39 -> m32_53  [key=2, style=dotted];
m32_40 -> m32_41  [key=0, style=solid];
m32_41 -> m32_19  [color=blue, key=0, style=bold];
m32_109 -> m32_442  [key=0, style=solid];
m32_109 -> m32_443  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m32_109 -> m32_444  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_109 -> m32_453  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_109 -> m32_98  [color=darkorchid, key=3, label="Parameter variable bool orderFilled", style=bold];
m32_109 -> m32_117  [color=darkorchid, key=3, label="Parameter variable bool orderFilled", style=bold];
m32_109 -> m32_134  [color=darkorchid, key=3, label="Parameter variable bool orderFilled", style=bold];
m32_109 -> m32_165  [color=darkorchid, key=3, label="Parameter variable bool orderFilled", style=bold];
m32_109 -> m32_100  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage ib", style=bold];
m32_109 -> m32_119  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage ib", style=bold];
m32_109 -> m32_136  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage ib", style=bold];
m32_109 -> m32_167  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage ib", style=bold];
m32_109 -> m32_102  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m32_109 -> m32_121  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m32_109 -> m32_141  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m32_109 -> m32_172  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m32_109 -> m32_381  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.Order AssertOrderOpened", style=bold];
m32_442 -> m32_443  [key=0, style=solid];
m32_442 -> m32_447  [key=0, style=solid];
m32_443 -> m32_444  [key=0, style=solid];
m32_443 -> m32_446  [key=0, style=solid];
m32_443 -> m32_44  [key=2, style=dotted];
m32_443 -> m32_445  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m32_444 -> m32_445  [key=0, style=solid];
m32_444 -> m32_443  [key=0, style=solid];
m32_444 -> m32_313  [key=2, style=dotted];
m32_444 -> m32_452  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_447 -> m32_448  [key=0, style=solid];
m32_447 -> m32_451  [key=2, style=dotted];
m32_446 -> m32_447  [key=0, style=solid];
m32_446 -> m32_450  [key=2, style=dotted];
m32_445 -> m32_449  [key=0, style=solid];
m32_448 -> m32_449  [key=0, style=solid];
m32_449 -> m32_109  [color=blue, key=0, style=bold];
m32_80 -> m32_81  [key=0, style=solid];
m32_81 -> m32_82  [key=0, style=solid];
m32_81 -> m32_84  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_81 -> m32_89  [color=darkseagreen4, key=1, label=ib, style=dashed];
m32_82 -> m32_83  [key=0, style=solid];
m32_82 -> m32_92  [key=2, style=dotted];
m32_82 -> m32_84  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_82 -> m32_85  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_84 -> m32_85  [key=0, style=solid];
m32_84 -> m32_94  [key=2, style=dotted];
m32_89 -> m32_90  [key=0, style=solid];
m32_89 -> m32_94  [key=2, style=dotted];
m32_83 -> m32_84  [key=0, style=solid];
m32_83 -> m32_93  [key=2, style=dotted];
m32_85 -> m32_86  [key=0, style=solid];
m32_85 -> m32_95  [key=2, style=dotted];
m32_85 -> m32_90  [color=darkseagreen4, key=1, label=brokerageID, style=dashed];
m32_86 -> m32_87  [key=0, style=solid];
m32_86 -> m32_96  [key=2, style=dotted];
m32_90 -> m32_91  [key=0, style=solid];
m32_90 -> m32_95  [key=2, style=dotted];
m32_90 -> m32_96  [key=2, style=dotted];
m32_87 -> m32_88  [key=0, style=solid];
m32_87 -> m32_92  [key=2, style=dotted];
m32_87 -> m32_89  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_87 -> m32_90  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_88 -> m32_89  [key=0, style=solid];
m32_88 -> m32_93  [key=2, style=dotted];
m32_91 -> m32_80  [color=blue, key=0, style=bold];
m32_458 -> m32_4  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_27  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_29  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_39  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_40  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_76  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_81  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_83  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_88  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_100  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_103  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_119  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_136  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_142  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_147  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_150  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_167  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_173  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_180  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_183  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_198  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_203  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_222  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_225  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_249  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_251  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_268  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_279  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_304  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_323  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_333  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_352  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_357  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_373  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_377  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_405  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_409  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_458 -> m32_421  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m32_459 -> m32_56  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m32_460 -> m32_58  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m32_461 -> m32_114  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_462 -> m32_131  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_463 -> m32_160  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_464 -> m32_194  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_465 -> m32_240  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m32_466 -> m32_242  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m32_467 -> m32_245  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_468 -> m32_263  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m32_468 -> m32_266  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m32_469 -> m32_264  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m32_470 -> m32_265  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_471 -> m32_298  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m32_472 -> m32_345  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m32_473 -> m32_348  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m32_474 -> m32_349  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m32_475 -> m32_367  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m32_476 -> m32_392  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m32_477 -> m32_395  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_478 -> m32_395  [color=darkseagreen4, key=1, label=executions, style=dashed];
m32_478 -> m32_398  [color=darkseagreen4, key=1, label=executions, style=dashed];
m32_479 -> m32_401  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_480 -> m32_418  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m32_481 -> m32_453  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_482 -> m32_456  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_196 -> m34_197  [key=0, style=solid];
m34_198 -> m34_199  [key=0, style=solid];
m34_198 -> m34_200  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_198 -> m34_204  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_198 -> m34_209  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_203 -> m34_204  [key=0, style=solid];
m34_203 -> m34_93  [key=2, style=dotted];
m34_197 -> m34_198  [key=0, style=solid];
m34_197 -> m34_202  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_199 -> m34_200  [key=0, style=solid];
m34_200 -> m34_201  [key=0, style=solid];
m34_200 -> m34_216  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_200 -> m34_206  [color=darkseagreen4, key=1, label=filled, style=dashed];
m34_200 -> m34_210  [color=darkseagreen4, key=1, label=filled, style=dashed];
m34_204 -> m34_94  [key=2, style=dotted];
m34_204 -> m34_205  [key=0, style=solid];
m34_209 -> m34_206  [key=0, style=solid];
m34_209 -> m34_214  [key=2, style=dotted];
m34_202 -> m34_203  [key=0, style=solid];
m34_202 -> m34_204  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_202 -> m34_209  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_202 -> m34_202  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_202 -> m34_156  [key=2, style=dotted];
m34_202 -> m34_208  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_210 -> m34_79  [key=2, style=dotted];
m34_210 -> m34_211  [key=0, style=solid];
m34_201 -> m34_202  [key=0, style=solid];
m34_206 -> m34_210  [key=0, style=solid];
m34_206 -> m34_207  [key=0, style=solid];
m34_205 -> m34_206  [key=0, style=solid];
m34_205 -> m34_212  [key=2, style=dotted];
m34_208 -> m34_209  [key=0, style=solid];
m34_207 -> m34_208  [key=0, style=solid];
m34_207 -> m34_213  [key=2, style=dotted];
m34_211 -> m34_196  [color=blue, key=0, style=bold];
m34_55 -> m34_56  [color=green, key=0, style=solid];
m34_55 -> m34_57  [color=green, key=0, style=solid];
m34_33 -> m34_34  [key=0, style=solid];
m34_33 -> m34_48  [key=2, style=dotted];
m34_53 -> m34_43  [color=blue, key=0, style=bold];
m34_54 -> m34_55  [color=green, key=0, style=solid];
m34_54 -> m34_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_13 -> m34_14  [key=0, style=solid];
m34_13 -> m34_15  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m34_13 -> m34_16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m34_75 -> m34_76  [color=green, key=0, style=solid];
m34_76 -> m34_77  [color=green, key=0, style=solid];
m34_77 -> m34_78  [key=0, style=solid];
m34_77 -> m34_79  [key=2, style=dotted];
m34_78 -> m34_75  [color=blue, key=0, style=bold];
m34_420 -> m34_421  [key=0, style=solid];
m34_421 -> m34_422  [key=0, style=solid];
m34_421 -> m34_427  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_421 -> m34_434  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_421 -> m34_437  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_422 -> m34_79  [key=2, style=dotted];
m34_422 -> m34_423  [key=0, style=solid];
m34_427 -> m34_428  [key=0, style=solid];
m34_427 -> m34_430  [key=0, style=solid];
m34_434 -> m34_435  [key=0, style=solid];
m34_434 -> m34_437  [key=0, style=solid];
m34_437 -> m34_79  [key=2, style=dotted];
m34_437 -> m34_438  [key=0, style=solid];
m34_423 -> m34_434  [color=darkseagreen4, key=1, label=tenMinutes, style=dashed];
m34_423 -> m34_424  [key=0, style=solid];
m34_423 -> m34_439  [key=2, style=dotted];
m34_426 -> m34_427  [key=0, style=solid];
m34_426 -> m34_440  [key=2, style=dotted];
m34_429 -> m34_427  [key=0, style=solid];
m34_429 -> m34_441  [key=2, style=dotted];
m34_428 -> m34_213  [key=2, style=dotted];
m34_428 -> m34_429  [key=0, style=solid];
m34_430 -> m34_434  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m34_430 -> m34_431  [key=0, style=solid];
m34_430 -> m34_212  [key=2, style=dotted];
m34_433 -> m34_434  [key=0, style=solid];
m34_433 -> m34_440  [key=2, style=dotted];
m34_436 -> m34_434  [key=0, style=solid];
m34_436 -> m34_441  [key=2, style=dotted];
m34_435 -> m34_213  [key=2, style=dotted];
m34_435 -> m34_436  [key=0, style=solid];
m34_424 -> m34_425  [key=0, style=solid];
m34_424 -> m34_440  [key=2, style=dotted];
m34_425 -> m34_426  [key=0, style=solid];
m34_425 -> m34_440  [key=2, style=dotted];
m34_431 -> m34_440  [key=2, style=dotted];
m34_431 -> m34_432  [key=0, style=solid];
m34_432 -> m34_433  [key=0, style=solid];
m34_432 -> m34_440  [key=2, style=dotted];
m34_438 -> m34_420  [color=blue, key=0, style=bold];
m34_219 -> m34_220  [key=0, style=solid];
m34_222 -> m34_223  [key=0, style=solid];
m34_222 -> m34_226  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_222 -> m34_229  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_222 -> m34_231  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_225 -> m34_226  [key=0, style=solid];
m34_225 -> m34_93  [key=2, style=dotted];
m34_220 -> m34_43  [key=2, style=dotted];
m34_220 -> m34_221  [key=0, style=solid];
m34_220 -> m34_223  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m34_220 -> m34_240  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m34_220 -> m34_227  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m34_221 -> m34_43  [key=2, style=dotted];
m34_221 -> m34_222  [key=0, style=solid];
m34_221 -> m34_223  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m34_221 -> m34_242  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m34_221 -> m34_230  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m34_223 -> m34_224  [key=0, style=solid];
m34_223 -> m34_239  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_223 -> m34_241  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_226 -> m34_94  [key=2, style=dotted];
m34_226 -> m34_227  [key=0, style=solid];
m34_229 -> m34_45  [key=2, style=dotted];
m34_229 -> m34_230  [key=0, style=solid];
m34_231 -> m34_44  [key=2, style=dotted];
m34_231 -> m34_232  [key=0, style=solid];
m34_224 -> m34_225  [key=0, style=solid];
m34_224 -> m34_226  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_224 -> m34_229  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_224 -> m34_156  [key=2, style=dotted];
m34_224 -> m34_232  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_224 -> m34_245  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_227 -> m34_228  [key=0, style=solid];
m34_227 -> m34_235  [key=2, style=dotted];
m34_230 -> m34_231  [key=0, style=solid];
m34_230 -> m34_235  [key=2, style=dotted];
m34_228 -> m34_229  [key=0, style=solid];
m34_228 -> m34_213  [key=2, style=dotted];
m34_232 -> m34_233  [key=0, style=solid];
m34_232 -> m34_236  [key=2, style=dotted];
m34_232 -> m34_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_233 -> m34_234  [key=0, style=solid];
m34_233 -> m34_237  [key=2, style=dotted];
m34_234 -> m34_219  [color=blue, key=0, style=bold];
m34_12 -> m34_26  [key=0, style=solid];
m34_51 -> m34_45  [color=blue, key=0, style=bold];
m34_14 -> m34_15  [key=0, style=solid];
m34_15 -> m34_16  [key=0, style=solid];
m34_16 -> m34_17  [key=0, style=solid];
m34_17 -> m34_18  [key=0, style=solid];
m34_17 -> m34_12  [key=2, style=dotted];
m34_18 -> m34_13  [color=blue, key=0, style=bold];
m34_46 -> m34_47  [key=0, style=solid];
m34_49 -> m34_50  [color=red, key=0, style=solid];
m34_400 -> m34_401  [key=0, style=solid];
m34_47 -> m34_48  [color=red, key=0, style=solid];
m34_47 -> m34_51  [key=0, style=solid];
m34_37 -> m34_38  [key=0, style=solid];
m34_37 -> m34_41  [key=0, style=solid];
m34_37 -> m34_48  [key=2, style=dotted];
m34_37 -> m34_49  [key=2, style=dotted];
m34_37 -> m34_50  [key=2, style=dotted];
m34_37 -> m34_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_37 -> m34_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_36 -> m34_37  [key=0, style=solid];
m34_36 -> m34_31  [color=red, key=1, label=newLeftData, style=dashed];
m34_36 -> m34_41  [color=darkseagreen4, key=1, label=newLeftData, style=dashed];
m34_36 -> m34_51  [key=2, style=dotted];
m34_36 -> m34_52  [key=2, style=dotted];
m34_38 -> m34_39  [key=0, style=solid];
m34_38 -> m34_42  [key=2, style=dotted];
m34_38 -> m34_43  [key=2, style=dotted];
m34_38 -> m34_44  [key=2, style=dotted];
m34_38 -> m34_51  [key=2, style=dotted];
m34_38 -> m34_52  [key=2, style=dotted];
m34_48 -> m34_49  [color=red, key=0, style=solid];
m34_48 -> m34_42  [color=red, key=2, style=dotted];
m34_48 -> m34_43  [color=red, key=2, style=dotted];
m34_48 -> m34_44  [color=red, key=2, style=dotted];
m34_35 -> m34_36  [key=0, style=solid];
m34_35 -> m34_38  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m34_35 -> m34_44  [key=2, style=dotted];
m34_35 -> m34_50  [key=2, style=dotted];
m34_35 -> m34_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_41 -> m34_35  [color=blue, key=0, style=bold];
m34_41 -> m34_19  [color=blue, key=0, style=bold];
m34_39 -> m34_40  [key=0, style=solid];
m34_39 -> m34_31  [color=red, key=1, label=newLeftData, style=dashed];
m34_39 -> m34_41  [color=darkseagreen4, key=1, label=newLeftData, style=dashed];
m34_39 -> m34_53  [key=2, style=dotted];
m34_40 -> m34_41  [key=0, style=solid];
m34_45 -> m34_46  [key=0, style=solid];
m34_45 -> m34_48  [color=red, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m34_50 -> m34_51  [key=0, style=solid];
m34_58 -> m34_59  [color=green, key=0, style=solid];
m34_58 -> m34_60  [color=green, key=2, style=dotted];
m34_58 -> m34_37  [color=darkseagreen4, key=1, label=newRightData, style=dashed];
m34_56 -> m34_57  [key=0, style=solid];
m34_56 -> m34_60  [key=2, style=dotted];
m34_56 -> m34_1  [color=red, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_2  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_3  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_7  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_8  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_9  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_10  [color=red, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_14  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_15  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_17  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_20  [color=red, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_24  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_26  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_27  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_30  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_38  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_31  [color=red, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_48  [color=red, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_56 -> m34_52  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CompositeIndicator<T>", style=dashed];
m34_57 -> m34_58  [color=green, key=0, style=solid];
m34_57 -> m34_59  [key=0, style=solid];
m34_57 -> m34_37  [color=darkseagreen4, key=1, label=rightIsConstant, style=dashed];
m34_59 -> m34_54  [color=blue, key=0, style=bold];
m34_59 -> m34_47  [color=darkseagreen4, key=1, label=leftIsConstant, style=dashed];
m34_114 -> m34_60  [key=2, style=dotted];
m34_114 -> m34_115  [key=0, style=solid];
m34_131 -> m34_60  [key=2, style=dotted];
m34_131 -> m34_132  [key=0, style=solid];
m34_160 -> m34_60  [key=2, style=dotted];
m34_160 -> m34_161  [key=0, style=solid];
m34_194 -> m34_60  [key=2, style=dotted];
m34_194 -> m34_195  [key=0, style=solid];
m34_240 -> m34_60  [key=2, style=dotted];
m34_240 -> m34_241  [key=0, style=solid];
m34_242 -> m34_60  [key=2, style=dotted];
m34_242 -> m34_243  [key=0, style=solid];
m34_264 -> m34_60  [key=2, style=dotted];
m34_264 -> m34_265  [key=0, style=solid];
m34_298 -> m34_60  [key=2, style=dotted];
m34_298 -> m34_299  [key=0, style=solid];
m34_345 -> m34_60  [key=2, style=dotted];
m34_345 -> m34_346  [key=0, style=solid];
m34_349 -> m34_60  [key=2, style=dotted];
m34_349 -> m34_350  [key=0, style=solid];
m34_367 -> m34_60  [key=2, style=dotted];
m34_367 -> m34_368  [key=0, style=solid];
m34_392 -> m34_60  [key=2, style=dotted];
m34_392 -> m34_393  [key=0, style=solid];
m34_418 -> m34_60  [key=2, style=dotted];
m34_418 -> m34_419  [key=0, style=solid];
m34_112 -> m34_113  [key=0, style=solid];
m34_112 -> m34_115  [key=0, style=solid];
m34_113 -> m34_114  [key=0, style=solid];
m34_113 -> m34_106  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_113 -> m34_115  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_115 -> m34_111  [color=blue, key=0, style=bold];
m34_129 -> m34_130  [key=0, style=solid];
m34_129 -> m34_132  [key=0, style=solid];
m34_130 -> m34_131  [key=0, style=solid];
m34_130 -> m34_125  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_130 -> m34_132  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_132 -> m34_128  [color=blue, key=0, style=bold];
m34_64 -> m34_65  [key=0, style=solid];
m34_68 -> m34_69  [key=0, style=solid];
m34_71 -> m34_72  [key=0, style=solid];
m34_159 -> m34_160  [key=0, style=solid];
m34_159 -> m34_153  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_159 -> m34_163  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_161 -> m34_146  [color=darkseagreen4, key=1, label=price, style=dashed];
m34_161 -> m34_149  [color=darkseagreen4, key=1, label=price, style=dashed];
m34_161 -> m34_162  [key=0, style=solid];
m34_161 -> m34_163  [color=darkseagreen4, key=1, label=price, style=dashed];
m34_193 -> m34_194  [key=0, style=solid];
m34_193 -> m34_179  [color=darkseagreen4, key=1, label=delta, style=dashed];
m34_193 -> m34_182  [color=darkseagreen4, key=1, label=delta, style=dashed];
m34_193 -> m34_195  [color=darkseagreen4, key=1, label=delta, style=dashed];
m34_195 -> m34_190  [color=blue, key=0, style=bold];
m34_239 -> m34_240  [key=0, style=solid];
m34_239 -> m34_241  [key=0, style=solid];
m34_241 -> m34_242  [key=0, style=solid];
m34_241 -> m34_243  [key=0, style=solid];
m34_243 -> m34_238  [color=blue, key=0, style=bold];
m34_263 -> m34_264  [key=0, style=solid];
m34_263 -> m34_263  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m34_263 -> m34_258  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m34_263 -> m34_266  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m34_265 -> m34_266  [key=0, style=solid];
m34_297 -> m34_298  [key=0, style=solid];
m34_297 -> m34_299  [key=0, style=solid];
m34_299 -> m34_296  [color=blue, key=0, style=bold];
m34_344 -> m34_345  [key=0, style=solid];
m34_344 -> m34_346  [key=0, style=solid];
m34_346 -> m34_343  [color=blue, key=0, style=bold];
m34_348 -> m34_349  [key=0, style=solid];
m34_348 -> m34_93  [key=2, style=dotted];
m34_350 -> m34_347  [color=blue, key=0, style=bold];
m34_366 -> m34_367  [key=0, style=solid];
m34_368 -> m34_366  [color=blue, key=0, style=bold];
m34_391 -> m34_392  [key=0, style=solid];
m34_391 -> m34_393  [key=0, style=solid];
m34_393 -> m34_390  [color=blue, key=0, style=bold];
m34_417 -> m34_418  [key=0, style=solid];
m34_417 -> m34_419  [key=0, style=solid];
m34_419 -> m34_416  [color=blue, key=0, style=bold];
m34_111 -> m34_112  [key=0, style=solid];
m34_453 -> m34_454  [key=0, style=solid];
m34_453 -> m34_313  [key=2, style=dotted];
m34_453 -> m34_455  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_128 -> m34_129  [key=0, style=solid];
m34_61 -> m34_62  [key=0, style=solid];
m34_66 -> m34_64  [color=blue, key=0, style=bold];
m34_65 -> m34_66  [key=0, style=solid];
m34_65 -> m34_67  [key=2, style=dotted];
m34_70 -> m34_68  [color=blue, key=0, style=bold];
m34_69 -> m34_70  [key=0, style=solid];
m34_73 -> m34_71  [color=blue, key=0, style=bold];
m34_72 -> m34_73  [key=0, style=solid];
m34_72 -> m34_74  [key=2, style=dotted];
m34_158 -> m34_159  [key=0, style=solid];
m34_158 -> m34_161  [key=0, style=solid];
m34_162 -> m34_146  [color=darkseagreen4, key=1, label=delta, style=dashed];
m34_162 -> m34_149  [color=darkseagreen4, key=1, label=delta, style=dashed];
m34_162 -> m34_163  [key=0, style=solid];
m34_192 -> m34_179  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m34_192 -> m34_182  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m34_192 -> m34_193  [key=0, style=solid];
m34_192 -> m34_195  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m34_216 -> m34_217  [key=0, style=solid];
m34_216 -> m34_218  [key=0, style=solid];
m34_245 -> m34_246  [key=0, style=solid];
m34_245 -> m34_247  [key=2, style=dotted];
m34_262 -> m34_263  [key=0, style=solid];
m34_262 -> m34_265  [key=0, style=solid];
m34_293 -> m34_294  [key=0, style=solid];
m34_300 -> m34_301  [key=0, style=solid];
m34_363 -> m34_364  [key=0, style=solid];
m34_369 -> m34_370  [key=0, style=solid];
m34_395 -> m34_396  [key=0, style=solid];
m34_395 -> m34_313  [key=2, style=dotted];
m34_395 -> m34_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_398 -> m34_399  [key=0, style=solid];
m34_398 -> m34_313  [key=2, style=dotted];
m34_398 -> m34_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_163 -> m34_157  [color=blue, key=0, style=bold];
m34_157 -> m34_161  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_157 -> m34_158  [key=0, style=solid];
m34_191 -> m34_195  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_191 -> m34_177  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_191 -> m34_192  [key=0, style=solid];
m34_190 -> m34_192  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_190 -> m34_191  [key=0, style=solid];
m34_238 -> m34_239  [key=0, style=solid];
m34_238 -> m34_241  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_266 -> m34_261  [color=blue, key=0, style=bold];
m34_261 -> m34_265  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_261 -> m34_262  [key=0, style=solid];
m34_296 -> m34_297  [key=0, style=solid];
m34_343 -> m34_344  [key=0, style=solid];
m34_347 -> m34_348  [key=0, style=solid];
m34_390 -> m34_391  [key=0, style=solid];
m34_416 -> m34_417  [key=0, style=solid];
m34_217 -> m34_210  [color=darkseagreen4, key=1, label=filled, style=dashed];
m34_217 -> m34_206  [color=darkseagreen4, key=1, label=filled, style=dashed];
m34_217 -> m34_218  [key=0, style=solid];
m34_316 -> m34_317  [key=0, style=solid];
m34_394 -> m34_395  [key=0, style=solid];
m34_452 -> m34_453  [key=0, style=solid];
m34_452 -> m34_456  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_454 -> m34_452  [color=blue, key=0, style=bold];
m34_455 -> m34_456  [key=0, style=solid];
m34_63 -> m34_61  [color=blue, key=0, style=bold];
m34_62 -> m34_63  [key=0, style=solid];
m34_215 -> m34_216  [key=0, style=solid];
m34_218 -> m34_215  [color=blue, key=0, style=bold];
m34_244 -> m34_245  [key=0, style=solid];
m34_246 -> m34_244  [color=blue, key=0, style=bold];
m34_295 -> m34_293  [color=blue, key=0, style=bold];
m34_294 -> m34_295  [key=0, style=solid];
m34_302 -> m34_300  [color=blue, key=0, style=bold];
m34_301 -> m34_302  [key=0, style=solid];
m34_319 -> m34_320  [key=0, style=solid];
m34_365 -> m34_363  [color=blue, key=0, style=bold];
m34_364 -> m34_365  [key=0, style=solid];
m34_371 -> m34_369  [color=blue, key=0, style=bold];
m34_370 -> m34_371  [key=0, style=solid];
m34_396 -> m34_394  [color=blue, key=0, style=bold];
m34_397 -> m34_398  [key=0, style=solid];
m34_397 -> m34_401  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_399 -> m34_397  [color=blue, key=0, style=bold];
m34_318 -> m34_316  [color=blue, key=0, style=bold];
m34_317 -> m34_318  [key=0, style=solid];
m34_456 -> m34_457  [key=0, style=solid];
m34_457 -> m34_455  [color=blue, key=0, style=bold];
m34_321 -> m34_319  [color=blue, key=0, style=bold];
m34_320 -> m34_321  [key=0, style=solid];
m34_401 -> m34_402  [key=0, style=solid];
m34_401 -> m34_403  [key=2, style=dotted];
m34_402 -> m34_400  [color=blue, key=0, style=bold];
m34_351 -> m34_352  [key=0, style=solid];
m34_352 -> m34_353  [key=0, style=solid];
m34_352 -> m34_355  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_352 -> m34_358  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_352 -> m34_360  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_357 -> m34_358  [key=0, style=solid];
m34_357 -> m34_93  [key=2, style=dotted];
m34_354 -> m34_43  [key=2, style=dotted];
m34_354 -> m34_355  [key=0, style=solid];
m34_354 -> m34_367  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_354 -> m34_359  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_353 -> m34_354  [key=0, style=solid];
m34_353 -> m34_312  [key=2, style=dotted];
m34_353 -> m34_315  [key=2, style=dotted];
m34_353 -> m34_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_353 -> m34_361  [color=darkseagreen4, key=1, label=balance, style=dashed];
m34_355 -> m34_356  [key=0, style=solid];
m34_358 -> m34_94  [key=2, style=dotted];
m34_358 -> m34_359  [key=0, style=solid];
m34_360 -> m34_361  [key=0, style=solid];
m34_360 -> m34_312  [key=2, style=dotted];
m34_360 -> m34_315  [key=2, style=dotted];
m34_360 -> m34_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_356 -> m34_357  [key=0, style=solid];
m34_356 -> m34_358  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_356 -> m34_92  [key=2, style=dotted];
m34_359 -> m34_360  [key=0, style=solid];
m34_359 -> m34_235  [key=2, style=dotted];
m34_361 -> m34_362  [key=0, style=solid];
m34_361 -> m34_96  [key=2, style=dotted];
m34_362 -> m34_351  [color=blue, key=0, style=bold];
m34_97 -> m34_98  [key=0, style=solid];
m34_99 -> m34_100  [color=green, key=0, style=solid];
m34_99 -> m34_43  [color=green, key=2, style=dotted];
m34_99 -> m34_101  [color=green, key=1, label=manualResetEvent, style=dashed];
m34_99 -> m34_114  [color=green, key=1, label=manualResetEvent, style=dashed];
m34_99 -> m34_105  [color=green, key=1, label=manualResetEvent, style=dashed];
m34_98 -> m34_99  [color=green, key=0, style=solid];
m34_100 -> m34_101  [color=green, key=0, style=solid];
m34_100 -> m34_104  [color=green, key=1, label=ib, style=dashed];
m34_100 -> m34_106  [color=green, key=1, label=ib, style=dashed];
m34_101 -> m34_102  [key=0, style=solid];
m34_101 -> m34_112  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_101 -> m34_106  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_105 -> m34_46  [key=2, style=dotted];
m34_105 -> m34_106  [key=0, style=solid];
m34_104 -> m34_105  [key=0, style=solid];
m34_104 -> m34_94  [key=2, style=dotted];
m34_106 -> m34_107  [key=0, style=solid];
m34_106 -> m34_109  [key=2, style=dotted];
m34_103 -> m34_104  [key=0, style=solid];
m34_103 -> m34_93  [key=2, style=dotted];
m34_102 -> m34_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_102 -> m34_106  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_102 -> m34_103  [key=0, style=solid];
m34_102 -> m34_92  [key=2, style=dotted];
m34_107 -> m34_108  [key=0, style=solid];
m34_107 -> m34_110  [key=2, style=dotted];
m34_108 -> m34_97  [color=blue, key=0, style=bold];
m34_43 -> m34_52  [key=0, style=solid];
m34_43 -> m34_30  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorDataPoint updated", style=bold];
m34_43 -> m34_31  [color=red, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorDataPoint updated", style=bold];
m34_22 -> m34_23  [color=green, key=0, style=solid];
m34_22 -> m34_42  [color=green, key=2, style=dotted];
m34_5 -> m34_6  [color=green, key=0, style=solid];
m34_5 -> m34_18  [color=green, key=2, style=dotted];
m34_116 -> m34_117  [key=0, style=solid];
m34_118 -> m34_119  [color=green, key=0, style=solid];
m34_118 -> m34_43  [color=green, key=2, style=dotted];
m34_118 -> m34_120  [color=green, key=1, label=manualResetEvent, style=dashed];
m34_118 -> m34_131  [color=green, key=1, label=manualResetEvent, style=dashed];
m34_118 -> m34_124  [color=green, key=1, label=manualResetEvent, style=dashed];
m34_117 -> m34_118  [color=green, key=0, style=solid];
m34_119 -> m34_120  [key=0, style=solid];
m34_119 -> m34_123  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_119 -> m34_125  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_120 -> m34_121  [key=0, style=solid];
m34_120 -> m34_129  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_120 -> m34_125  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_124 -> m34_46  [key=2, style=dotted];
m34_124 -> m34_125  [key=0, style=solid];
m34_122 -> m34_123  [key=0, style=solid];
m34_122 -> m34_93  [key=2, style=dotted];
m34_123 -> m34_124  [key=0, style=solid];
m34_123 -> m34_94  [key=2, style=dotted];
m34_125 -> m34_109  [key=2, style=dotted];
m34_125 -> m34_126  [key=0, style=solid];
m34_121 -> m34_122  [key=0, style=solid];
m34_121 -> m34_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_121 -> m34_125  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_121 -> m34_92  [key=2, style=dotted];
m34_126 -> m34_110  [key=2, style=dotted];
m34_126 -> m34_127  [key=0, style=solid];
m34_127 -> m34_116  [color=blue, key=0, style=bold];
m34_11 -> m34_6  [color=blue, key=0, style=bold];
m34_19 -> m34_20  [color=red, key=0, style=solid];
m34_21 -> m34_22  [color=green, key=0, style=solid];
m34_21 -> m34_42  [key=2, style=dotted];
m34_21 -> m34_19  [color=blue, key=0, style=bold];
m34_23 -> m34_24  [color=green, key=0, style=solid];
m34_23 -> m34_43  [color=green, key=2, style=dotted];
m34_23 -> m34_25  [color=green, key=1, label=canceledResetEvent, style=dashed];
m34_23 -> m34_58  [color=green, key=1, label=canceledResetEvent, style=dashed];
m34_23 -> m34_30  [color=green, key=1, label=canceledResetEvent, style=dashed];
m34_23 -> m34_31  [color=green, key=1, label=canceledResetEvent, style=dashed];
m34_24 -> m34_25  [color=green, key=0, style=solid];
m34_24 -> m34_43  [color=green, key=2, style=dotted];
m34_24 -> m34_56  [color=green, key=1, label=filledResetEvent, style=dashed];
m34_24 -> m34_22  [key=2, style=dotted];
m34_25 -> m34_26  [color=green, key=0, style=solid];
m34_25 -> m34_55  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_25 -> m34_57  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_25 -> m34_23  [color=blue, key=0, style=bold];
m34_30 -> m34_31  [color=red, key=0, style=solid];
m34_30 -> m34_46  [color=green, key=2, style=dotted];
m34_30 -> m34_30  [color=darkseagreen4, key=1, label=newRightData, style=dashed];
m34_30 -> m34_36  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m34_30 -> m34_37  [color=darkseagreen4, key=1, label=newRightData, style=dashed];
m34_30 -> m34_38  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m34_31 -> m34_28  [key=0, style=solid];
m34_31 -> m34_47  [key=2, style=dotted];
m34_31 -> m34_32  [color=red, key=0, style=solid];
m34_31 -> m34_31  [color=red, key=1, label=newLeftData, style=dashed];
m34_31 -> m34_46  [color=red, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m34_31 -> m34_48  [color=red, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m34_26 -> m34_42  [key=2, style=dotted];
m34_26 -> m34_27  [key=0, style=solid];
m34_26 -> m34_33  [key=2, style=dotted];
m34_26 -> m34_34  [key=2, style=dotted];
m34_26 -> m34_31  [color=red, key=1, label=leftIsConstant, style=dashed];
m34_26 -> m34_47  [color=darkseagreen4, key=1, label=leftIsConstant, style=dashed];
m34_29 -> m34_30  [color=green, key=0, style=solid];
m34_29 -> m34_45  [key=2, style=dotted];
m34_29 -> m34_28  [color=darkorchid, key=3, label="Local variable QuantConnect.Indicators.IndicatorDataPoint newRightData", style=bold];
m34_29 -> m34_31  [color=red, key=3, label="Local variable QuantConnect.Indicators.IndicatorDataPoint newRightData", style=bold];
m34_27 -> m34_28  [key=0, style=solid];
m34_27 -> m34_44  [key=2, style=dotted];
m34_27 -> m34_33  [key=2, style=dotted];
m34_27 -> m34_34  [key=2, style=dotted];
m34_27 -> m34_30  [color=darkseagreen4, key=1, label=rightIsConstant, style=dashed];
m34_27 -> m34_37  [color=darkseagreen4, key=1, label=rightIsConstant, style=dashed];
m34_20 -> m34_21  [color=red, key=0, style=solid];
m34_20 -> m34_42  [key=2, style=dotted];
m34_20 -> m34_22  [color=red, key=2, style=dotted];
m34_32 -> m34_42  [key=2, style=dotted];
m34_32 -> m34_33  [key=0, style=solid];
m34_32 -> m34_12  [color=blue, key=0, style=bold];
m34_28 -> m34_29  [key=0, style=solid];
m34_28 -> m34_32  [key=0, style=solid];
m34_28 -> m34_28  [color=darkorchid, key=3, label="Local variable QuantConnect.Indicators.IndicatorDataPoint newLeftData", style=bold];
m34_28 -> m34_30  [color=darkorchid, key=3, label="Local variable QuantConnect.Indicators.IndicatorDataPoint newLeftData", style=bold];
m34_34 -> m34_35  [key=0, style=solid];
m34_34 -> m34_34  [key=0, style=solid];
m34_34 -> m34_49  [key=2, style=dotted];
m34_34 -> m34_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_52 -> m34_53  [key=0, style=solid];
m34_52 -> m34_54  [key=2, style=dotted];
m34_52 -> m34_55  [key=2, style=dotted];
m34_60 -> m34_47  [color=darkseagreen4, key=1, label=newLeftData, style=dashed];
m34_7 -> m34_8  [key=0, style=solid];
m34_6 -> m34_7  [key=0, style=solid];
m34_6 -> m34_8  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m34_6 -> m34_9  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m34_6 -> m34_0  [color=blue, key=0, style=bold];
m34_8 -> m34_9  [key=0, style=solid];
m34_9 -> m34_10  [color=red, key=0, style=solid];
m34_10 -> m34_11  [color=red, key=0, style=solid];
m34_10 -> m34_12  [color=red, key=2, style=dotted];
m34_80 -> m34_81  [key=0, style=solid];
m34_81 -> m34_82  [key=0, style=solid];
m34_81 -> m34_84  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_81 -> m34_89  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_83 -> m34_84  [key=0, style=solid];
m34_83 -> m34_93  [key=2, style=dotted];
m34_88 -> m34_89  [key=0, style=solid];
m34_88 -> m34_93  [key=2, style=dotted];
m34_82 -> m34_83  [key=0, style=solid];
m34_82 -> m34_92  [key=2, style=dotted];
m34_82 -> m34_84  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_82 -> m34_85  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_84 -> m34_94  [key=2, style=dotted];
m34_84 -> m34_85  [key=0, style=solid];
m34_89 -> m34_94  [key=2, style=dotted];
m34_89 -> m34_90  [key=0, style=solid];
m34_87 -> m34_88  [key=0, style=solid];
m34_87 -> m34_89  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_87 -> m34_92  [key=2, style=dotted];
m34_87 -> m34_90  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_85 -> m34_86  [key=0, style=solid];
m34_85 -> m34_95  [key=2, style=dotted];
m34_85 -> m34_90  [color=darkseagreen4, key=1, label=brokerageID, style=dashed];
m34_90 -> m34_91  [key=0, style=solid];
m34_90 -> m34_95  [key=2, style=dotted];
m34_90 -> m34_96  [key=2, style=dotted];
m34_86 -> m34_87  [key=0, style=solid];
m34_86 -> m34_96  [key=2, style=dotted];
m34_91 -> m34_80  [color=blue, key=0, style=bold];
m34_164 -> m34_165  [key=0, style=solid];
m34_167 -> m34_168  [key=0, style=solid];
m34_167 -> m34_170  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_167 -> m34_174  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_167 -> m34_181  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_167 -> m34_184  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_167 -> m34_186  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_173 -> m34_174  [key=0, style=solid];
m34_173 -> m34_93  [key=2, style=dotted];
m34_180 -> m34_181  [key=0, style=solid];
m34_180 -> m34_93  [key=2, style=dotted];
m34_183 -> m34_184  [key=0, style=solid];
m34_183 -> m34_93  [key=2, style=dotted];
m34_166 -> m34_43  [key=2, style=dotted];
m34_166 -> m34_167  [key=0, style=solid];
m34_166 -> m34_170  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_166 -> m34_194  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_166 -> m34_175  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_166 -> m34_176  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_166 -> m34_185  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_175 -> m34_46  [key=2, style=dotted];
m34_175 -> m34_176  [key=0, style=solid];
m34_185 -> m34_46  [key=2, style=dotted];
m34_185 -> m34_186  [key=0, style=solid];
m34_168 -> m34_169  [key=0, style=solid];
m34_170 -> m34_171  [key=0, style=solid];
m34_170 -> m34_192  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_174 -> m34_175  [key=0, style=solid];
m34_174 -> m34_94  [key=2, style=dotted];
m34_181 -> m34_94  [key=2, style=dotted];
m34_181 -> m34_182  [key=0, style=solid];
m34_184 -> m34_185  [key=0, style=solid];
m34_184 -> m34_94  [key=2, style=dotted];
m34_186 -> m34_109  [key=2, style=dotted];
m34_186 -> m34_187  [key=0, style=solid];
m34_172 -> m34_173  [key=0, style=solid];
m34_172 -> m34_174  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_172 -> m34_172  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_172 -> m34_92  [key=2, style=dotted];
m34_172 -> m34_179  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_179 -> m34_180  [key=0, style=solid];
m34_179 -> m34_181  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_179 -> m34_179  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_179 -> m34_189  [key=2, style=dotted];
m34_179 -> m34_182  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_182 -> m34_183  [key=0, style=solid];
m34_182 -> m34_184  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_182 -> m34_186  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_182 -> m34_182  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_182 -> m34_189  [key=2, style=dotted];
m34_165 -> m34_166  [key=0, style=solid];
m34_176 -> m34_47  [key=2, style=dotted];
m34_176 -> m34_177  [key=0, style=solid];
m34_177 -> m34_79  [key=2, style=dotted];
m34_177 -> m34_178  [key=0, style=solid];
m34_169 -> m34_170  [key=0, style=solid];
m34_171 -> m34_172  [key=0, style=solid];
m34_178 -> m34_186  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_178 -> m34_179  [key=0, style=solid];
m34_187 -> m34_110  [key=2, style=dotted];
m34_187 -> m34_188  [key=0, style=solid];
m34_188 -> m34_164  [color=blue, key=0, style=bold];
m34_133 -> m34_134  [key=0, style=solid];
m34_136 -> m34_137  [key=0, style=solid];
m34_136 -> m34_139  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_136 -> m34_143  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_136 -> m34_148  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_136 -> m34_151  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_136 -> m34_153  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_142 -> m34_143  [key=0, style=solid];
m34_142 -> m34_93  [key=2, style=dotted];
m34_147 -> m34_148  [key=0, style=solid];
m34_147 -> m34_93  [key=2, style=dotted];
m34_150 -> m34_151  [key=0, style=solid];
m34_150 -> m34_93  [key=2, style=dotted];
m34_135 -> m34_43  [key=2, style=dotted];
m34_135 -> m34_136  [key=0, style=solid];
m34_135 -> m34_139  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_135 -> m34_160  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_135 -> m34_144  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_135 -> m34_145  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_135 -> m34_152  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_144 -> m34_46  [key=2, style=dotted];
m34_144 -> m34_145  [key=0, style=solid];
m34_152 -> m34_46  [key=2, style=dotted];
m34_152 -> m34_153  [key=0, style=solid];
m34_137 -> m34_138  [key=0, style=solid];
m34_139 -> m34_140  [key=0, style=solid];
m34_139 -> m34_158  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_139 -> m34_161  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_139 -> m34_153  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m34_143 -> m34_144  [key=0, style=solid];
m34_143 -> m34_94  [key=2, style=dotted];
m34_148 -> m34_94  [key=2, style=dotted];
m34_148 -> m34_149  [key=0, style=solid];
m34_151 -> m34_152  [key=0, style=solid];
m34_151 -> m34_94  [key=2, style=dotted];
m34_153 -> m34_109  [key=2, style=dotted];
m34_153 -> m34_154  [key=0, style=solid];
m34_141 -> m34_142  [key=0, style=solid];
m34_141 -> m34_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_141 -> m34_141  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_141 -> m34_92  [key=2, style=dotted];
m34_141 -> m34_146  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_146 -> m34_147  [key=0, style=solid];
m34_146 -> m34_148  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_146 -> m34_146  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_146 -> m34_156  [key=2, style=dotted];
m34_146 -> m34_149  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_149 -> m34_150  [key=0, style=solid];
m34_149 -> m34_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_149 -> m34_153  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_149 -> m34_149  [color=darkseagreen4, key=1, label=id, style=dashed];
m34_149 -> m34_156  [key=2, style=dotted];
m34_134 -> m34_135  [key=0, style=solid];
m34_145 -> m34_47  [key=2, style=dotted];
m34_145 -> m34_146  [key=0, style=solid];
m34_138 -> m34_139  [key=0, style=solid];
m34_140 -> m34_141  [key=0, style=solid];
m34_154 -> m34_110  [key=2, style=dotted];
m34_154 -> m34_155  [key=0, style=solid];
m34_155 -> m34_133  [color=blue, key=0, style=bold];
m34_322 -> m34_323  [key=0, style=solid];
m34_323 -> m34_324  [key=0, style=solid];
m34_323 -> m34_325  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_323 -> m34_328  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_323 -> m34_334  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_333 -> m34_334  [key=0, style=solid];
m34_333 -> m34_93  [key=2, style=dotted];
m34_324 -> m34_43  [key=2, style=dotted];
m34_324 -> m34_325  [key=0, style=solid];
m34_324 -> m34_345  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m34_324 -> m34_335  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m34_324 -> m34_336  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m34_327 -> m34_43  [key=2, style=dotted];
m34_327 -> m34_328  [key=0, style=solid];
m34_327 -> m34_349  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m34_327 -> m34_337  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m34_327 -> m34_338  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m34_325 -> m34_326  [key=0, style=solid];
m34_325 -> m34_344  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_328 -> m34_329  [key=0, style=solid];
m34_328 -> m34_348  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m34_334 -> m34_94  [key=2, style=dotted];
m34_334 -> m34_335  [key=0, style=solid];
m34_332 -> m34_333  [key=0, style=solid];
m34_332 -> m34_334  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_332 -> m34_92  [key=2, style=dotted];
m34_332 -> m34_260  [key=2, style=dotted];
m34_335 -> m34_336  [key=0, style=solid];
m34_335 -> m34_235  [key=2, style=dotted];
m34_336 -> m34_47  [key=2, style=dotted];
m34_336 -> m34_337  [key=0, style=solid];
m34_326 -> m34_327  [key=0, style=solid];
m34_326 -> m34_328  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m34_326 -> m34_342  [key=2, style=dotted];
m34_326 -> m34_348  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m34_326 -> m34_340  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m34_337 -> m34_338  [key=0, style=solid];
m34_337 -> m34_235  [key=2, style=dotted];
m34_338 -> m34_47  [key=2, style=dotted];
m34_338 -> m34_339  [key=0, style=solid];
m34_329 -> m34_330  [key=0, style=solid];
m34_329 -> m34_331  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m34_329 -> m34_340  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m34_330 -> m34_332  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_330 -> m34_335  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_330 -> m34_337  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_330 -> m34_331  [key=0, style=solid];
m34_330 -> m34_339  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_331 -> m34_332  [key=0, style=solid];
m34_331 -> m34_340  [key=0, style=solid];
m34_340 -> m34_110  [key=2, style=dotted];
m34_340 -> m34_341  [key=0, style=solid];
m34_339 -> m34_331  [key=0, style=solid];
m34_339 -> m34_339  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_341 -> m34_322  [color=blue, key=0, style=bold];
m34_248 -> m34_249  [key=0, style=solid];
m34_249 -> m34_250  [key=0, style=solid];
m34_249 -> m34_254  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_249 -> m34_255  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_251 -> m34_252  [key=0, style=solid];
m34_251 -> m34_93  [key=2, style=dotted];
m34_253 -> m34_43  [key=2, style=dotted];
m34_253 -> m34_254  [key=0, style=solid];
m34_253 -> m34_264  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m34_253 -> m34_256  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m34_250 -> m34_251  [key=0, style=solid];
m34_250 -> m34_92  [key=2, style=dotted];
m34_250 -> m34_260  [key=2, style=dotted];
m34_250 -> m34_254  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_250 -> m34_265  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_250 -> m34_255  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_254 -> m34_254  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m34_254 -> m34_255  [key=0, style=solid];
m34_254 -> m34_262  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_254 -> m34_263  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m34_254 -> m34_265  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_254 -> m34_258  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m34_255 -> m34_94  [key=2, style=dotted];
m34_255 -> m34_256  [key=0, style=solid];
m34_252 -> m34_253  [key=0, style=solid];
m34_252 -> m34_254  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m34_256 -> m34_257  [key=0, style=solid];
m34_256 -> m34_235  [key=2, style=dotted];
m34_258 -> m34_110  [key=2, style=dotted];
m34_258 -> m34_259  [key=0, style=solid];
m34_257 -> m34_258  [key=0, style=solid];
m34_257 -> m34_213  [key=2, style=dotted];
m34_259 -> m34_248  [color=blue, key=0, style=bold];
m34_372 -> m34_373  [key=0, style=solid];
m34_373 -> m34_374  [key=0, style=solid];
m34_373 -> m34_375  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_373 -> m34_378  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_373 -> m34_381  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_377 -> m34_378  [key=0, style=solid];
m34_377 -> m34_93  [key=2, style=dotted];
m34_374 -> m34_43  [key=2, style=dotted];
m34_374 -> m34_375  [key=0, style=solid];
m34_374 -> m34_392  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m34_374 -> m34_379  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m34_379 -> m34_46  [key=2, style=dotted];
m34_379 -> m34_380  [key=0, style=solid];
m34_375 -> m34_376  [key=0, style=solid];
m34_375 -> m34_391  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_378 -> m34_379  [key=0, style=solid];
m34_378 -> m34_94  [key=2, style=dotted];
m34_381 -> m34_382  [key=0, style=solid];
m34_381 -> m34_386  [key=2, style=dotted];
m34_381 -> m34_387  [key=2, style=dotted];
m34_381 -> m34_383  [color=darkseagreen4, key=1, label=executions, style=dashed];
m34_381 -> m34_384  [color=darkseagreen4, key=1, label=executions, style=dashed];
m34_381 -> m34_395  [color=darkseagreen4, key=1, label=executions, style=dashed];
m34_381 -> m34_398  [color=darkseagreen4, key=1, label=executions, style=dashed];
m34_376 -> m34_377  [key=0, style=solid];
m34_376 -> m34_378  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_376 -> m34_92  [key=2, style=dotted];
m34_376 -> m34_260  [key=2, style=dotted];
m34_376 -> m34_384  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_376 -> m34_395  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_380 -> m34_381  [key=0, style=solid];
m34_380 -> m34_212  [key=2, style=dotted];
m34_380 -> m34_382  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m34_380 -> m34_383  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m34_384 -> m34_79  [key=2, style=dotted];
m34_384 -> m34_385  [key=0, style=solid];
m34_384 -> m34_313  [key=2, style=dotted];
m34_384 -> m34_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_382 -> m34_383  [key=0, style=solid];
m34_382 -> m34_388  [key=2, style=dotted];
m34_383 -> m34_384  [key=0, style=solid];
m34_383 -> m34_389  [key=2, style=dotted];
m34_385 -> m34_372  [color=blue, key=0, style=bold];
m34_267 -> m34_268  [key=0, style=solid];
m34_268 -> m34_269  [key=0, style=solid];
m34_268 -> m34_270  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_268 -> m34_276  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_268 -> m34_280  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_268 -> m34_283  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_279 -> m34_280  [key=0, style=solid];
m34_279 -> m34_93  [key=2, style=dotted];
m34_275 -> m34_43  [key=2, style=dotted];
m34_275 -> m34_276  [key=0, style=solid];
m34_275 -> m34_298  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m34_275 -> m34_281  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m34_269 -> m34_270  [key=0, style=solid];
m34_269 -> m34_213  [key=2, style=dotted];
m34_270 -> m34_48  [key=2, style=dotted];
m34_270 -> m34_271  [key=0, style=solid];
m34_270 -> m34_290  [key=2, style=dotted];
m34_270 -> m34_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_270 -> m34_273  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m34_270 -> m34_274  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m34_270 -> m34_286  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m34_276 -> m34_277  [key=0, style=solid];
m34_276 -> m34_297  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_280 -> m34_94  [key=2, style=dotted];
m34_280 -> m34_281  [key=0, style=solid];
m34_283 -> m34_48  [key=2, style=dotted];
m34_283 -> m34_284  [key=0, style=solid];
m34_283 -> m34_290  [key=2, style=dotted];
m34_283 -> m34_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_283 -> m34_286  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m34_283 -> m34_287  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m34_283 -> m34_288  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m34_278 -> m34_279  [key=0, style=solid];
m34_278 -> m34_280  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_278 -> m34_92  [key=2, style=dotted];
m34_274 -> m34_275  [key=0, style=solid];
m34_274 -> m34_292  [key=2, style=dotted];
m34_274 -> m34_285  [color=darkseagreen4, key=1, label=hasSymbol, style=dashed];
m34_281 -> m34_282  [key=0, style=solid];
m34_281 -> m34_235  [key=2, style=dotted];
m34_287 -> m34_79  [key=2, style=dotted];
m34_287 -> m34_288  [key=0, style=solid];
m34_287 -> m34_292  [key=2, style=dotted];
m34_271 -> m34_272  [key=0, style=solid];
m34_271 -> m34_273  [key=0, style=solid];
m34_273 -> m34_274  [key=0, style=solid];
m34_273 -> m34_52  [key=2, style=dotted];
m34_286 -> m34_110  [key=2, style=dotted];
m34_286 -> m34_289  [key=0, style=solid];
m34_277 -> m34_278  [key=0, style=solid];
m34_277 -> m34_286  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m34_277 -> m34_288  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m34_282 -> m34_283  [key=0, style=solid];
m34_282 -> m34_213  [key=2, style=dotted];
m34_284 -> m34_52  [key=2, style=dotted];
m34_284 -> m34_285  [key=0, style=solid];
m34_288 -> m34_110  [key=2, style=dotted];
m34_288 -> m34_289  [key=0, style=solid];
m34_285 -> m34_287  [key=0, style=solid];
m34_285 -> m34_286  [key=0, style=solid];
m34_272 -> m34_271  [key=0, style=solid];
m34_272 -> m34_291  [key=2, style=dotted];
m34_289 -> m34_267  [color=blue, key=0, style=bold];
m34_303 -> m34_304  [key=0, style=solid];
m34_304 -> m34_305  [key=0, style=solid];
m34_305 -> m34_306  [key=0, style=solid];
m34_305 -> m34_312  [key=2, style=dotted];
m34_305 -> m34_307  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m34_305 -> m34_310  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m34_306 -> m34_79  [key=2, style=dotted];
m34_306 -> m34_307  [key=0, style=solid];
m34_306 -> m34_313  [key=2, style=dotted];
m34_306 -> m34_316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_307 -> m34_311  [key=0, style=solid];
m34_307 -> m34_308  [key=0, style=solid];
m34_307 -> m34_309  [color=darkseagreen4, key=1, label=cash, style=dashed];
m34_310 -> m34_307  [key=0, style=solid];
m34_310 -> m34_315  [key=2, style=dotted];
m34_310 -> m34_96  [key=2, style=dotted];
m34_310 -> m34_319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_309 -> m34_307  [key=0, style=solid];
m34_309 -> m34_310  [key=0, style=solid];
m34_308 -> m34_309  [key=0, style=solid];
m34_308 -> m34_314  [key=2, style=dotted];
m34_311 -> m34_303  [color=blue, key=0, style=bold];
m34_404 -> m34_405  [key=0, style=solid];
m34_405 -> m34_406  [key=0, style=solid];
m34_405 -> m34_407  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_405 -> m34_410  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_405 -> m34_413  [color=darkseagreen4, key=1, label=ib, style=dashed];
m34_409 -> m34_410  [key=0, style=solid];
m34_409 -> m34_93  [key=2, style=dotted];
m34_406 -> m34_43  [key=2, style=dotted];
m34_406 -> m34_407  [key=0, style=solid];
m34_406 -> m34_418  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m34_406 -> m34_411  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m34_411 -> m34_46  [key=2, style=dotted];
m34_411 -> m34_412  [key=0, style=solid];
m34_407 -> m34_408  [key=0, style=solid];
m34_407 -> m34_417  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_410 -> m34_411  [key=0, style=solid];
m34_410 -> m34_94  [key=2, style=dotted];
m34_413 -> m34_44  [key=2, style=dotted];
m34_413 -> m34_414  [key=0, style=solid];
m34_408 -> m34_409  [key=0, style=solid];
m34_408 -> m34_410  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_408 -> m34_156  [key=2, style=dotted];
m34_412 -> m34_413  [key=0, style=solid];
m34_412 -> m34_213  [key=2, style=dotted];
m34_414 -> m34_415  [key=0, style=solid];
m34_414 -> m34_96  [key=2, style=dotted];
m34_415 -> m34_404  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [color=red, key=0, style=solid];
m34_1 -> m34_2  [color=red, key=0, style=solid];
m34_1 -> m34_7  [color=green, key=2, style=dotted];
m34_1 -> m34_8  [color=green, key=2, style=dotted];
m34_1 -> m34_9  [color=green, key=2, style=dotted];
m34_1 -> m34_5  [color=red, key=2, style=dotted];
m34_2 -> m34_3  [color=green, key=0, style=solid];
m34_2 -> m34_10  [key=2, style=dotted];
m34_2 -> m34_4  [color=darkseagreen4, key=1, label=securityProvider, style=dashed];
m34_2 -> m34_5  [key=2, style=dotted];
m34_3 -> m34_4  [color=green, key=0, style=solid];
m34_3 -> m34_11  [color=green, key=2, style=dotted];
m34_3 -> m34_12  [color=green, key=2, style=dotted];
m34_3 -> m34_13  [color=green, key=2, style=dotted];
m34_3 -> m34_14  [color=green, key=2, style=dotted];
m34_3 -> m34_15  [color=green, key=2, style=dotted];
m34_3 -> m34_5  [key=2, style=dotted];
m34_4 -> m34_5  [color=green, key=0, style=solid];
m34_4 -> m34_16  [key=2, style=dotted];
m34_4 -> m34_17  [key=2, style=dotted];
m34_4 -> m34_0  [color=blue, key=0, style=bold];
m34_109 -> m34_442  [key=0, style=solid];
m34_109 -> m34_443  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m34_109 -> m34_444  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_109 -> m34_453  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_442 -> m34_443  [key=0, style=solid];
m34_442 -> m34_447  [key=0, style=solid];
m34_443 -> m34_44  [key=2, style=dotted];
m34_443 -> m34_444  [key=0, style=solid];
m34_443 -> m34_446  [key=0, style=solid];
m34_443 -> m34_445  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m34_444 -> m34_443  [key=0, style=solid];
m34_444 -> m34_445  [key=0, style=solid];
m34_444 -> m34_313  [key=2, style=dotted];
m34_444 -> m34_452  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_445 -> m34_449  [key=0, style=solid];
m34_448 -> m34_449  [key=0, style=solid];
m34_447 -> m34_448  [key=0, style=solid];
m34_447 -> m34_451  [key=2, style=dotted];
m34_446 -> m34_447  [key=0, style=solid];
m34_446 -> m34_450  [key=2, style=dotted];
m34_449 -> m34_109  [color=blue, key=0, style=bold];
m34_458 -> m34_5  [color=green, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_25  [color=green, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_76  [color=green, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_100  [color=green, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_4  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_27  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_29  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_39  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_40  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_81  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_83  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_88  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_103  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_119  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_136  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_142  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_147  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_150  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_167  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_173  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_180  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_183  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_198  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_203  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_222  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_225  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_249  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_251  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_268  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_279  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_304  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_323  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_333  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_352  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_357  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_373  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_377  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_405  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_409  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_458 -> m34_421  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m34_460 -> m34_58  [color=green, key=1, label=canceledResetEvent, style=dashed];
m34_459 -> m34_56  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m34_461 -> m34_114  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_462 -> m34_131  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_463 -> m34_160  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_464 -> m34_194  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_465 -> m34_240  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m34_466 -> m34_242  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m34_469 -> m34_264  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m34_471 -> m34_298  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m34_472 -> m34_345  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m34_474 -> m34_349  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m34_475 -> m34_367  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m34_476 -> m34_392  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m34_480 -> m34_418  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m34_468 -> m34_263  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m34_468 -> m34_266  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m34_470 -> m34_265  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_473 -> m34_348  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m34_481 -> m34_453  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_467 -> m34_245  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_477 -> m34_395  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_478 -> m34_395  [color=darkseagreen4, key=1, label=executions, style=dashed];
m34_478 -> m34_398  [color=darkseagreen4, key=1, label=executions, style=dashed];
m34_482 -> m34_456  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_479 -> m34_401  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_33 -> m35_40  [color=green, key=0, style=solid];
m35_33 -> m35_42  [color=green, key=1, label=string, style=dashed];
m35_33 -> m35_43  [color=darkseagreen4, key=1, label=T, style=dashed];
m35_40 -> m35_41  [color=green, key=0, style=solid];
m35_40 -> m35_12  [color=green, key=2, style=dotted];
m35_40 -> m35_46  [color=green, key=1, label=value, style=dashed];
m35_40 -> m35_47  [color=green, key=1, label=value, style=dashed];
m35_41 -> m35_42  [color=green, key=0, style=solid];
m35_41 -> m35_44  [key=0, style=solid];
m35_41 -> m35_49  [key=2, style=dotted];
m35_46 -> m35_48  [key=0, style=solid];
m35_46 -> m35_50  [key=2, style=dotted];
m35_47 -> m35_48  [color=green, key=0, style=solid];
m35_47 -> m35_51  [color=green, key=2, style=dotted];
m35_42 -> m35_43  [color=green, key=0, style=solid];
m35_42 -> m35_25  [color=green, key=2, style=dotted];
m35_43 -> m35_48  [key=0, style=solid];
m35_44 -> m35_47  [color=green, key=1, label=type, style=dashed];
m35_44 -> m35_45  [color=green, key=0, style=solid];
m35_44 -> m35_46  [color=darkseagreen4, key=1, label=type, style=dashed];
m35_45 -> m35_47  [color=green, key=0, style=solid];
m35_45 -> m35_46  [color=green, key=0, style=solid];
m35_48 -> m35_33  [color=blue, key=0, style=bold];
m35_34 -> m35_35  [color=green, key=0, style=solid];
m35_35 -> m35_36  [color=green, key=0, style=solid];
m35_35 -> m35_33  [color=green, key=2, style=dotted];
m35_36 -> m35_34  [color=blue, key=0, style=bold];
m35_37 -> m35_38  [key=0, style=solid];
m35_38 -> m35_33  [key=2, style=dotted];
m35_38 -> m35_39  [key=0, style=solid];
m35_39 -> m35_37  [color=blue, key=0, style=bold];
m35_30 -> m35_31  [color=green, key=0, style=solid];
m35_31 -> m35_32  [color=green, key=0, style=solid];
m35_31 -> m35_33  [color=green, key=2, style=dotted];
m35_32 -> m35_30  [color=blue, key=0, style=bold];
m35_12 -> m35_13  [color=green, key=0, style=solid];
m35_12 -> m35_16  [color=green, key=1, label=string, style=dashed];
m35_12 -> m35_17  [color=green, key=1, label=string, style=dashed];
m35_12 -> m35_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_12 -> m35_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_13 -> m35_14  [color=green, key=0, style=solid];
m35_14 -> m35_16  [color=green, key=0, style=solid];
m35_14 -> m35_15  [color=green, key=0, style=solid];
m35_16 -> m35_17  [color=green, key=0, style=solid];
m35_16 -> m35_18  [color=green, key=0, style=solid];
m35_16 -> m35_24  [color=green, key=2, style=dotted];
m35_15 -> m35_16  [color=green, key=0, style=solid];
m35_15 -> m35_0  [color=green, key=2, style=dotted];
m35_17 -> m35_20  [color=green, key=0, style=solid];
m35_17 -> m35_22  [color=green, key=0, style=solid];
m35_18 -> m35_19  [key=0, style=solid];
m35_18 -> m35_22  [color=darkseagreen4, key=1, label=value, style=dashed];
m35_20 -> m35_21  [color=green, key=0, style=solid];
m35_22 -> m35_23  [key=0, style=solid];
m35_19 -> m35_20  [color=green, key=0, style=solid];
m35_19 -> m35_22  [key=0, style=solid];
m35_19 -> m35_25  [key=2, style=dotted];
m35_21 -> m35_22  [key=0, style=solid];
m35_21 -> m35_26  [key=2, style=dotted];
m35_23 -> m35_12  [color=blue, key=0, style=bold];
m35_27 -> m35_28  [color=green, key=0, style=solid];
m35_28 -> m35_29  [color=green, key=0, style=solid];
m35_29 -> m35_27  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [color=green, key=0, style=solid];
m35_1 -> m35_2  [color=green, key=0, style=solid];
m35_2 -> m35_3  [color=green, key=0, style=solid];
m35_2 -> m35_4  [color=green, key=0, style=solid];
m35_3 -> m35_8  [color=green, key=0, style=solid];
m35_4 -> m35_5  [color=green, key=0, style=solid];
m35_4 -> m35_7  [color=green, key=0, style=solid];
m35_4 -> m35_9  [color=green, key=2, style=dotted];
m35_5 -> m35_6  [color=green, key=0, style=solid];
m35_5 -> m35_10  [key=2, style=dotted];
m35_7 -> m35_8  [key=0, style=solid];
m35_6 -> m35_7  [color=green, key=0, style=solid];
m35_6 -> m35_11  [color=green, key=2, style=dotted];
m35_8 -> m35_0  [color=blue, key=0, style=bold];
m36_10 -> m36_11  [color=red, key=0, style=solid];
m36_10 -> m36_14  [color=red, key=1, label="QuantConnect.Securities.IOrderMapping", style=dashed];
m36_11 -> m36_12  [color=red, key=0, style=solid];
m36_11 -> m36_14  [color=red, key=0, style=solid];
m36_14 -> m36_15  [color=red, key=0, style=solid];
m36_14 -> m36_19  [color=red, key=2, style=dotted];
m36_12 -> m36_13  [color=red, key=0, style=solid];
m36_13 -> m36_14  [color=red, key=0, style=solid];
m36_13 -> m36_16  [color=red, key=2, style=dotted];
m36_13 -> m36_17  [color=red, key=2, style=dotted];
m36_13 -> m36_18  [color=red, key=2, style=dotted];
m36_15 -> m36_10  [color=blue, key=0, style=bold];
m36_2 -> m36_3  [color=red, key=0, style=solid];
m36_3 -> m36_4  [color=red, key=0, style=solid];
m36_3 -> m36_5  [color=red, key=2, style=dotted];
m36_4 -> m36_2  [color=blue, key=0, style=bold];
m36_20 -> m36_21  [color=red, key=0, style=solid];
m36_20 -> m36_22  [color=red, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m36_21 -> m36_22  [color=red, key=0, style=solid];
m36_21 -> m36_23  [color=red, key=0, style=solid];
m36_22 -> m36_23  [color=red, key=0, style=solid];
m36_22 -> m36_24  [color=red, key=2, style=dotted];
m36_23 -> m36_20  [color=blue, key=0, style=bold];
m36_6 -> m36_7  [color=red, key=0, style=solid];
m36_7 -> m36_8  [color=red, key=0, style=solid];
m36_7 -> m36_9  [color=red, key=2, style=dotted];
m36_8 -> m36_6  [color=blue, key=0, style=bold];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_0  [color=blue, key=0, style=bold];
m37_17 -> m37_18  [color=red, key=0, style=solid];
m37_18 -> m37_19  [color=red, key=0, style=solid];
m37_19 -> m37_17  [color=blue, key=0, style=bold];
m37_0 -> m37_1  [color=red, key=0, style=solid];
m37_0 -> m37_2  [color=red, key=1, label=object, style=dashed];
m37_0 -> m37_3  [color=red, key=1, label=JsonWriter, style=dashed];
m37_1 -> m37_2  [color=red, key=0, style=solid];
m37_1 -> m37_3  [color=red, key=0, style=solid];
m37_2 -> m37_3  [color=red, key=0, style=solid];
m37_2 -> m37_5  [color=red, key=2, style=dotted];
m37_2 -> m37_2  [color=red, key=1, label=object, style=dashed];
m37_3 -> m37_4  [color=red, key=0, style=solid];
m37_3 -> m37_6  [color=red, key=2, style=dotted];
m37_4 -> m37_0  [color=blue, key=0, style=bold];
m37_7 -> m37_8  [color=red, key=0, style=solid];
m37_7 -> m37_10  [color=red, key=1, label=JsonReader, style=dashed];
m37_7 -> m37_12  [color=red, key=1, label=JsonReader, style=dashed];
m37_8 -> m37_9  [color=red, key=0, style=solid];
m37_8 -> m37_11  [color=red, key=0, style=solid];
m37_8 -> m37_13  [color=red, key=0, style=solid];
m37_10 -> m37_14  [color=red, key=0, style=solid];
m37_10 -> m37_5  [color=red, key=2, style=dotted];
m37_10 -> m37_15  [color=red, key=2, style=dotted];
m37_12 -> m37_14  [color=red, key=0, style=solid];
m37_12 -> m37_15  [color=red, key=2, style=dotted];
m37_9 -> m37_10  [color=red, key=0, style=solid];
m37_11 -> m37_12  [color=red, key=0, style=solid];
m37_13 -> m37_14  [color=red, key=0, style=solid];
m37_13 -> m37_16  [color=red, key=2, style=dotted];
m37_14 -> m37_7  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [key=0, style=solid];
m38_0 -> m38_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_0 -> m38_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_1 -> m38_2  [key=0, style=solid];
m38_2 -> m38_3  [key=0, style=solid];
m38_2 -> m38_5  [key=2, style=dotted];
m38_3 -> m38_4  [key=0, style=solid];
m38_4 -> m38_0  [color=blue, key=0, style=bold];
m38_11 -> m38_12  [key=0, style=solid];
m38_12 -> m38_13  [key=0, style=solid];
m38_12 -> m38_14  [key=2, style=dotted];
m38_13 -> m38_11  [color=blue, key=0, style=bold];
m38_6 -> m38_7  [key=0, style=solid];
m38_6 -> m38_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_6 -> m38_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_7 -> m38_8  [key=0, style=solid];
m38_8 -> m38_9  [key=0, style=solid];
m38_8 -> m38_8  [color=darkorchid, key=3, label="Field variable string _algorithmId", style=bold];
m38_9 -> m38_10  [key=0, style=solid];
m38_10 -> m38_6  [color=blue, key=0, style=bold];
m38_15 -> m38_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m38_15 -> m38_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m38_15 -> m38_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m38_15 -> m38_7  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m38_15 -> m38_8  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m38_15 -> m38_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m38_15 -> m38_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_0  [color=blue, key=0, style=bold];
m39_2 -> m39_3  [key=0, style=solid];
m39_3 -> m39_4  [key=0, style=solid];
m39_4 -> m39_2  [color=blue, key=0, style=bold];
m39_5 -> m39_3  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m42_44 -> m42_45  [key=0, style=solid];
m42_45 -> m42_46  [key=0, style=solid];
m42_45 -> m42_47  [key=2, style=dotted];
m42_45 -> m42_48  [key=2, style=dotted];
m42_46 -> m42_44  [color=blue, key=0, style=bold];
m42_0 -> m42_1  [key=0, style=solid];
m42_0 -> m42_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m42_0 -> m42_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_8  [key=2, style=dotted];
m42_2 -> m42_3  [key=0, style=solid];
m42_2 -> m42_6  [key=0, style=solid];
m42_6 -> m42_7  [key=0, style=solid];
m42_6 -> m42_9  [key=2, style=dotted];
m42_3 -> m42_4  [key=0, style=solid];
m42_3 -> m42_8  [key=2, style=dotted];
m42_4 -> m42_5  [key=0, style=solid];
m42_4 -> m42_8  [key=2, style=dotted];
m42_5 -> m42_6  [key=0, style=solid];
m42_5 -> m42_8  [key=2, style=dotted];
m42_7 -> m42_0  [color=blue, key=0, style=bold];
m42_41 -> m42_49  [key=0, style=solid];
m42_41 -> m42_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m42_41 -> m42_51  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m42_49 -> m42_50  [key=0, style=solid];
m42_50 -> m42_51  [key=0, style=solid];
m42_51 -> m42_52  [key=0, style=solid];
m42_52 -> m42_41  [color=blue, key=0, style=bold];
m42_10 -> m42_11  [key=0, style=solid];
m42_11 -> m42_12  [key=0, style=solid];
m42_11 -> m42_39  [key=2, style=dotted];
m42_11 -> m42_37  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m42_12 -> m42_13  [key=0, style=solid];
m42_12 -> m42_39  [key=2, style=dotted];
m42_12 -> m42_37  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m42_37 -> m42_38  [key=0, style=solid];
m42_37 -> m42_40  [key=2, style=dotted];
m42_37 -> m42_41  [key=2, style=dotted];
m42_37 -> m42_42  [key=2, style=dotted];
m42_37 -> m42_43  [key=2, style=dotted];
m42_37 -> m42_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_13 -> m42_14  [key=0, style=solid];
m42_13 -> m42_39  [key=2, style=dotted];
m42_13 -> m42_37  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m42_14 -> m42_15  [key=0, style=solid];
m42_14 -> m42_39  [key=2, style=dotted];
m42_14 -> m42_37  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m42_15 -> m42_16  [key=0, style=solid];
m42_15 -> m42_39  [key=2, style=dotted];
m42_15 -> m42_37  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m42_16 -> m42_17  [key=0, style=solid];
m42_16 -> m42_39  [key=2, style=dotted];
m42_16 -> m42_37  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m42_17 -> m42_18  [key=0, style=solid];
m42_17 -> m42_39  [key=2, style=dotted];
m42_17 -> m42_37  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m42_18 -> m42_19  [key=0, style=solid];
m42_18 -> m42_39  [key=2, style=dotted];
m42_18 -> m42_37  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m42_19 -> m42_20  [key=0, style=solid];
m42_19 -> m42_39  [key=2, style=dotted];
m42_19 -> m42_37  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m42_20 -> m42_21  [key=0, style=solid];
m42_20 -> m42_39  [key=2, style=dotted];
m42_20 -> m42_37  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m42_21 -> m42_22  [key=0, style=solid];
m42_21 -> m42_39  [key=2, style=dotted];
m42_21 -> m42_37  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m42_22 -> m42_23  [key=0, style=solid];
m42_22 -> m42_39  [key=2, style=dotted];
m42_22 -> m42_37  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m42_23 -> m42_24  [key=0, style=solid];
m42_23 -> m42_39  [key=2, style=dotted];
m42_23 -> m42_37  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m42_24 -> m42_25  [key=0, style=solid];
m42_24 -> m42_39  [key=2, style=dotted];
m42_24 -> m42_37  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m42_25 -> m42_26  [key=0, style=solid];
m42_25 -> m42_39  [key=2, style=dotted];
m42_25 -> m42_37  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m42_26 -> m42_27  [key=0, style=solid];
m42_26 -> m42_39  [key=2, style=dotted];
m42_26 -> m42_37  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m42_27 -> m42_28  [key=0, style=solid];
m42_27 -> m42_39  [key=2, style=dotted];
m42_27 -> m42_37  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m42_28 -> m42_29  [key=0, style=solid];
m42_28 -> m42_39  [key=2, style=dotted];
m42_28 -> m42_37  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m42_29 -> m42_30  [key=0, style=solid];
m42_29 -> m42_39  [key=2, style=dotted];
m42_29 -> m42_37  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m42_30 -> m42_31  [key=0, style=solid];
m42_30 -> m42_39  [key=2, style=dotted];
m42_30 -> m42_37  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m42_31 -> m42_32  [key=0, style=solid];
m42_31 -> m42_39  [key=2, style=dotted];
m42_31 -> m42_37  [color=darkseagreen4, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m42_32 -> m42_33  [key=0, style=solid];
m42_32 -> m42_39  [key=2, style=dotted];
m42_32 -> m42_37  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m42_33 -> m42_34  [key=0, style=solid];
m42_33 -> m42_39  [key=2, style=dotted];
m42_33 -> m42_37  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m42_34 -> m42_35  [color=red, key=0, style=solid];
m42_34 -> m42_39  [key=2, style=dotted];
m42_34 -> m42_37  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m42_35 -> m42_36  [color=red, key=0, style=solid];
m42_35 -> m42_39  [color=red, key=2, style=dotted];
m42_35 -> m42_37  [color=red, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m42_36 -> m42_37  [key=0, style=solid];
m42_36 -> m42_39  [key=2, style=dotted];
m42_38 -> m42_10  [color=blue, key=0, style=bold];
m42_53 -> m42_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m42_53 -> m42_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m42_53 -> m42_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m43_62 -> m43_63  [key=0, style=solid];
m43_63 -> m43_64  [key=0, style=solid];
m43_63 -> m43_42  [key=2, style=dotted];
m43_63 -> m43_58  [key=2, style=dotted];
m43_63 -> m43_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_64 -> m43_62  [color=blue, key=0, style=bold];
m43_47 -> m43_49  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_47 -> m43_48  [key=0, style=solid];
m43_49 -> m43_50  [key=0, style=solid];
m43_49 -> m43_53  [key=2, style=dotted];
m43_49 -> m43_51  [color=darkseagreen4, key=1, label=success, style=dashed];
m43_48 -> m43_49  [key=0, style=solid];
m43_50 -> m43_51  [key=0, style=solid];
m43_50 -> m43_52  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.SecurityHolding", style=dashed];
m43_51 -> m43_52  [key=0, style=solid];
m43_52 -> m43_47  [color=blue, key=0, style=bold];
m43_52 -> m43_41  [color=blue, key=0, style=bold];
m43_0 -> m43_1  [key=0, style=solid];
m43_0 -> m43_2  [color=green, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m43_0 -> m43_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m43_0 -> m43_3  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IOrderProperties", style=dashed];
m43_1 -> m43_2  [color=green, key=0, style=solid];
m43_1 -> m43_8  [key=2, style=dotted];
m43_2 -> m43_3  [color=green, key=0, style=solid];
m43_2 -> m43_6  [color=red, key=0, style=solid];
m43_6 -> m43_7  [key=0, style=solid];
m43_6 -> m43_9  [key=2, style=dotted];
m43_6 -> m43_40  [key=2, style=dotted];
m43_3 -> m43_4  [key=0, style=solid];
m43_3 -> m43_8  [key=2, style=dotted];
m43_3 -> m43_11  [key=2, style=dotted];
m43_4 -> m43_5  [key=0, style=solid];
m43_4 -> m43_8  [key=2, style=dotted];
m43_4 -> m43_12  [key=2, style=dotted];
m43_5 -> m43_6  [key=0, style=solid];
m43_5 -> m43_8  [key=2, style=dotted];
m43_5 -> m43_12  [key=2, style=dotted];
m43_7 -> m43_0  [color=blue, key=0, style=bold];
m43_7 -> m43_8  [key=0, style=solid];
m43_46 -> m43_44  [color=blue, key=0, style=bold];
m43_144 -> m43_175  [key=0, style=solid];
m43_144 -> m43_139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.Split split", style=bold];
m43_144 -> m43_197  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_144 -> m43_181  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_175 -> m43_176  [key=0, style=solid];
m43_175 -> m43_124  [key=2, style=dotted];
m43_175 -> m43_191  [key=2, style=dotted];
m43_175 -> m43_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_182 -> m43_183  [key=0, style=solid];
m43_182 -> m43_192  [key=2, style=dotted];
m43_182 -> m43_185  [color=darkseagreen4, key=1, label=newSymbol, style=dashed];
m43_182 -> m43_187  [color=darkseagreen4, key=1, label=newSymbol, style=dashed];
m43_184 -> m43_185  [key=0, style=solid];
m43_184 -> m43_193  [key=2, style=dotted];
m43_185 -> m43_186  [key=0, style=solid];
m43_185 -> m43_194  [key=2, style=dotted];
m43_185 -> m43_187  [color=darkseagreen4, key=1, label=optionHoldings, style=dashed];
m43_187 -> m43_176  [key=0, style=solid];
m43_176 -> m43_177  [key=0, style=solid];
m43_176 -> m43_190  [key=0, style=solid];
m43_176 -> m43_178  [color=darkseagreen4, key=1, label=securityKV, style=dashed];
m43_181 -> m43_182  [key=0, style=solid];
m43_181 -> m43_186  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m43_181 -> m43_189  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m43_177 -> m43_182  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m43_177 -> m43_184  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m43_177 -> m43_178  [key=0, style=solid];
m43_183 -> m43_184  [key=0, style=solid];
m43_183 -> m43_188  [key=0, style=solid];
m43_178 -> m43_185  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_178 -> m43_179  [key=0, style=solid];
m43_178 -> m43_188  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_186 -> m43_187  [key=0, style=solid];
m43_186 -> m43_195  [key=2, style=dotted];
m43_180 -> m43_176  [key=0, style=solid];
m43_180 -> m43_181  [key=0, style=solid];
m43_189 -> m43_176  [key=0, style=solid];
m43_189 -> m43_195  [key=2, style=dotted];
m43_188 -> m43_189  [key=0, style=solid];
m43_179 -> m43_180  [key=0, style=solid];
m43_190 -> m43_144  [color=blue, key=0, style=bold];
m43_40 -> m43_41  [key=0, style=solid];
m43_40 -> m43_40  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m43_40 -> m43_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m43_40 -> m43_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m43_40 -> m43_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m43_199 -> m43_203  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_199 -> m43_207  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_199 -> m43_209  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_199 -> m43_200  [key=0, style=solid];
m43_199 -> m43_216  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_199 -> m43_217  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_199 -> m43_218  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_199 -> m43_204  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m43_199 -> m43_205  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_199 -> m43_208  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_210 -> m43_211  [key=0, style=solid];
m43_210 -> m43_42  [key=2, style=dotted];
m43_210 -> m43_124  [key=2, style=dotted];
m43_210 -> m43_214  [key=2, style=dotted];
m43_210 -> m43_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_203 -> m43_210  [color=darkseagreen4, key=1, label=symbolIsFound, style=dashed];
m43_203 -> m43_203  [color=darkorchid, key=3, label="Local variable System.Func<QuantConnect.Symbol, bool> symbolIsFound", style=bold];
m43_203 -> m43_204  [key=0, style=solid];
m43_203 -> m43_218  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_207 -> m43_210  [key=0, style=solid];
m43_207 -> m43_213  [key=2, style=dotted];
m43_209 -> m43_210  [key=0, style=solid];
m43_202 -> m43_183  [color=darkorchid, key=3, label="Local variable string newRootSymbol", style=bold];
m43_202 -> m43_203  [key=0, style=solid];
m43_202 -> m43_216  [color=darkseagreen4, key=1, label=newRootSymbol, style=dashed];
m43_201 -> m43_203  [color=darkseagreen4, key=1, label=newStrike, style=dashed];
m43_201 -> m43_202  [key=0, style=solid];
m43_201 -> m43_201  [color=darkorchid, key=3, label="Local variable decimal newStrike", style=bold];
m43_201 -> m43_217  [color=darkseagreen4, key=1, label=newStrike, style=dashed];
m43_204 -> m43_205  [key=0, style=solid];
m43_204 -> m43_206  [key=0, style=solid];
m43_200 -> m43_207  [color=darkseagreen4, key=1, label=inverseFactor, style=dashed];
m43_200 -> m43_201  [key=0, style=solid];
m43_200 -> m43_206  [color=darkseagreen4, key=1, label=inverseFactor, style=dashed];
m43_200 -> m43_208  [color=darkseagreen4, key=1, label=inverseFactor, style=dashed];
m43_206 -> m43_207  [key=0, style=solid];
m43_206 -> m43_208  [key=0, style=solid];
m43_206 -> m43_212  [key=2, style=dotted];
m43_208 -> m43_209  [key=0, style=solid];
m43_208 -> m43_213  [key=2, style=dotted];
m43_205 -> m43_206  [key=0, style=solid];
m43_211 -> m43_199  [color=blue, key=0, style=bold];
m43_43 -> m43_43  [color=darkseagreen4, key=1, label=asset, style=dashed];
m43_43 -> m43_44  [key=0, style=solid];
m43_43 -> m43_46  [key=2, style=dotted];
m43_8 -> m43_9  [key=0, style=solid];
m43_131 -> m43_132  [key=0, style=solid];
m43_131 -> m43_135  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Dividend", style=dashed];
m43_132 -> m43_133  [key=0, style=solid];
m43_132 -> m43_135  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_136 -> m43_137  [key=0, style=solid];
m43_136 -> m43_138  [key=2, style=dotted];
m43_133 -> m43_134  [key=0, style=solid];
m43_135 -> m43_136  [key=0, style=solid];
m43_134 -> m43_135  [key=0, style=solid];
m43_134 -> m43_137  [key=0, style=solid];
m43_137 -> m43_131  [color=blue, key=0, style=bold];
m43_215 -> m43_218  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_215 -> m43_216  [key=0, style=solid];
m43_44 -> m43_45  [key=0, style=solid];
m43_44 -> m43_41  [key=0, style=solid];
m43_44 -> m43_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m43_45 -> m43_46  [key=0, style=solid];
m43_45 -> m43_47  [key=2, style=dotted];
m43_45 -> m43_48  [key=2, style=dotted];
m43_45 -> m43_38  [color=blue, key=0, style=bold];
m43_59 -> m43_60  [key=0, style=solid];
m43_65 -> m43_66  [key=0, style=solid];
m43_128 -> m43_129  [key=0, style=solid];
m43_196 -> m43_197  [key=0, style=solid];
m43_220 -> m43_221  [key=0, style=solid];
m43_61 -> m43_59  [color=blue, key=0, style=bold];
m43_60 -> m43_46  [key=2, style=dotted];
m43_60 -> m43_61  [key=0, style=solid];
m43_60 -> m43_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m43_67 -> m43_65  [color=blue, key=0, style=bold];
m43_66 -> m43_46  [key=2, style=dotted];
m43_66 -> m43_67  [key=0, style=solid];
m43_66 -> m43_66  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m43_130 -> m43_128  [color=blue, key=0, style=bold];
m43_129 -> m43_130  [key=0, style=solid];
m43_197 -> m43_197  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m43_197 -> m43_198  [key=0, style=solid];
m43_198 -> m43_196  [color=blue, key=0, style=bold];
m43_218 -> m43_219  [key=0, style=solid];
m43_222 -> m43_220  [color=blue, key=0, style=bold];
m43_221 -> m43_222  [key=0, style=solid];
m43_221 -> m43_221  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m43_216 -> m43_218  [color=darkseagreen4, key=1, label=rootSymbol, style=dashed];
m43_216 -> m43_217  [key=0, style=solid];
m43_217 -> m43_218  [key=0, style=solid];
m43_219 -> m43_215  [color=blue, key=0, style=bold];
m43_38 -> m43_39  [key=0, style=solid];
m43_38 -> m43_42  [color=darkseagreen4, key=1, label=int, style=dashed];
m43_38 -> m43_10  [color=blue, key=0, style=bold];
m43_39 -> m43_40  [key=0, style=solid];
m43_39 -> m43_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[]", style=dashed];
m43_41 -> m43_42  [key=0, style=solid];
m43_41 -> m43_45  [key=0, style=solid];
m43_41 -> m43_43  [color=darkseagreen4, key=1, label=asset, style=dashed];
m43_41 -> m43_49  [key=0, style=solid];
m43_41 -> m43_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m43_41 -> m43_51  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m43_42 -> m43_43  [key=0, style=solid];
m43_42 -> m43_44  [key=0, style=solid];
m43_223 -> m43_227  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m43_223 -> m43_224  [key=0, style=solid];
m43_225 -> m43_226  [key=0, style=solid];
m43_225 -> m43_227  [key=0, style=solid];
m43_225 -> m43_229  [key=2, style=dotted];
m43_227 -> m43_228  [key=0, style=solid];
m43_227 -> m43_231  [key=2, style=dotted];
m43_224 -> m43_225  [key=0, style=solid];
m43_224 -> m43_227  [color=darkseagreen4, key=1, label=clone, style=dashed];
m43_224 -> m43_226  [color=darkseagreen4, key=1, label=clone, style=dashed];
m43_224 -> m43_223  [color=darkorchid, key=3, label="Local variable System.DateTime clone", style=bold];
m43_226 -> m43_225  [key=0, style=solid];
m43_226 -> m43_227  [color=darkseagreen4, key=1, label=clone, style=dashed];
m43_226 -> m43_226  [color=darkseagreen4, key=1, label=clone, style=dashed];
m43_226 -> m43_230  [key=2, style=dotted];
m43_228 -> m43_223  [color=blue, key=0, style=bold];
m43_80 -> m43_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m43_80 -> m43_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m43_80 -> m43_81  [key=0, style=solid];
m43_80 -> m43_83  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m43_80 -> m43_84  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m43_82 -> m43_83  [key=0, style=solid];
m43_82 -> m43_85  [key=0, style=solid];
m43_82 -> m43_87  [key=2, style=dotted];
m43_82 -> m43_84  [color=darkseagreen4, key=1, label=item, style=dashed];
m43_85 -> m43_86  [key=0, style=solid];
m43_85 -> m43_88  [key=2, style=dotted];
m43_81 -> m43_82  [key=0, style=solid];
m43_83 -> m43_14  [key=2, style=dotted];
m43_83 -> m43_84  [key=0, style=solid];
m43_84 -> m43_86  [key=0, style=solid];
m43_86 -> m43_80  [color=blue, key=0, style=bold];
m43_12 -> m43_13  [color=red, key=0, style=solid];
m43_12 -> m43_39  [color=red, key=2, style=dotted];
m43_12 -> m43_37  [color=red, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m43_9 -> m43_10  [key=0, style=solid];
m43_9 -> m43_14  [key=2, style=dotted];
m43_10 -> m43_0  [color=blue, key=0, style=bold];
m43_10 -> m43_11  [key=0, style=solid];
m43_102 -> m43_103  [key=0, style=solid];
m43_102 -> m43_114  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest> ScanForMarginCall", style=bold];
m43_104 -> m43_105  [key=0, style=solid];
m43_104 -> m43_107  [color=darkseagreen4, key=1, label=totalMarginUsed, style=dashed];
m43_104 -> m43_118  [color=darkseagreen4, key=1, label=totalMarginUsed, style=dashed];
m43_107 -> m43_108  [key=0, style=solid];
m43_110 -> m43_111  [key=0, style=solid];
m43_110 -> m43_112  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m43_110 -> m43_115  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m43_111 -> m43_112  [key=0, style=solid];
m43_111 -> m43_118  [color=darkseagreen4, key=1, label=totalPortfolioValue, style=dashed];
m43_116 -> m43_117  [key=0, style=solid];
m43_116 -> m43_121  [key=0, style=solid];
m43_116 -> m43_124  [key=2, style=dotted];
m43_116 -> m43_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_116 -> m43_118  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_118 -> m43_119  [key=0, style=solid];
m43_118 -> m43_126  [key=2, style=dotted];
m43_118 -> m43_120  [color=darkseagreen4, key=1, label=marginCallOrder, style=dashed];
m43_103 -> m43_104  [key=0, style=solid];
m43_103 -> m43_123  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m43_105 -> m43_107  [key=0, style=solid];
m43_105 -> m43_106  [key=0, style=solid];
m43_108 -> m43_110  [key=0, style=solid];
m43_108 -> m43_109  [key=0, style=solid];
m43_112 -> m43_113  [key=0, style=solid];
m43_112 -> m43_114  [key=0, style=solid];
m43_115 -> m43_116  [key=0, style=solid];
m43_115 -> m43_122  [key=0, style=solid];
m43_120 -> m43_116  [key=0, style=solid];
m43_120 -> m43_127  [key=2, style=dotted];
m43_119 -> m43_116  [key=0, style=solid];
m43_119 -> m43_120  [key=0, style=solid];
m43_117 -> m43_118  [key=0, style=solid];
m43_117 -> m43_125  [key=2, style=dotted];
m43_121 -> m43_122  [key=0, style=solid];
m43_121 -> m43_123  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m43_106 -> m43_123  [key=0, style=solid];
m43_106 -> m43_40  [key=2, style=dotted];
m43_109 -> m43_123  [key=0, style=solid];
m43_109 -> m43_40  [key=2, style=dotted];
m43_113 -> m43_123  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m43_113 -> m43_114  [key=0, style=solid];
m43_114 -> m43_115  [key=0, style=solid];
m43_114 -> m43_120  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m43_114 -> m43_121  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m43_114 -> m43_40  [key=2, style=dotted];
m43_114 -> m43_122  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m43_122 -> m43_123  [key=0, style=solid];
m43_123 -> m43_102  [color=blue, key=0, style=bold];
m43_238 -> m43_239  [key=0, style=solid];
m43_238 -> m43_240  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UnsettledCashAmount", style=dashed];
m43_239 -> m43_240  [key=0, style=solid];
m43_240 -> m43_241  [key=0, style=solid];
m43_240 -> m43_127  [key=2, style=dotted];
m43_241 -> m43_238  [color=blue, key=0, style=bold];
m43_143 -> m43_145  [key=0, style=solid];
m43_143 -> m43_139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.Split split", style=bold];
m43_143 -> m43_151  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_143 -> m43_152  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_143 -> m43_154  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_143 -> m43_160  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_143 -> m43_163  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_143 -> m43_164  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_143 -> m43_165  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_143 -> m43_168  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_143 -> m43_169  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_145 -> m43_146  [key=0, style=solid];
m43_145 -> m43_148  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_145 -> m43_151  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_145 -> m43_152  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_145 -> m43_156  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_145 -> m43_157  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_145 -> m43_170  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_155 -> m43_156  [key=0, style=solid];
m43_155 -> m43_138  [key=2, style=dotted];
m43_146 -> m43_147  [key=0, style=solid];
m43_146 -> m43_148  [key=0, style=solid];
m43_148 -> m43_149  [key=0, style=solid];
m43_151 -> m43_152  [key=0, style=solid];
m43_151 -> m43_153  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m43_151 -> m43_156  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m43_152 -> m43_153  [key=0, style=solid];
m43_152 -> m43_156  [color=darkseagreen4, key=1, label=avgPrice, style=dashed];
m43_156 -> m43_157  [key=0, style=solid];
m43_156 -> m43_172  [key=2, style=dotted];
m43_157 -> m43_158  [key=0, style=solid];
m43_157 -> m43_173  [key=2, style=dotted];
m43_157 -> m43_160  [color=darkseagreen4, key=1, label=next, style=dashed];
m43_157 -> m43_161  [color=darkseagreen4, key=1, label=next, style=dashed];
m43_157 -> m43_166  [color=darkseagreen4, key=1, label=next, style=dashed];
m43_157 -> m43_170  [color=darkseagreen4, key=1, label=next, style=dashed];
m43_170 -> m43_171  [key=0, style=solid];
m43_170 -> m43_174  [key=2, style=dotted];
m43_154 -> m43_155  [key=0, style=solid];
m43_160 -> m43_161  [key=0, style=solid];
m43_163 -> m43_164  [key=0, style=solid];
m43_164 -> m43_165  [key=0, style=solid];
m43_165 -> m43_166  [key=0, style=solid];
m43_168 -> m43_169  [key=0, style=solid];
m43_169 -> m43_170  [key=0, style=solid];
m43_147 -> m43_171  [key=0, style=solid];
m43_149 -> m43_151  [key=0, style=solid];
m43_149 -> m43_150  [key=0, style=solid];
m43_153 -> m43_154  [key=0, style=solid];
m43_158 -> m43_160  [key=0, style=solid];
m43_158 -> m43_159  [key=0, style=solid];
m43_161 -> m43_163  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m43_161 -> m43_164  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m43_161 -> m43_165  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m43_161 -> m43_162  [key=0, style=solid];
m43_166 -> m43_168  [color=darkseagreen4, key=1, label=tick, style=dashed];
m43_166 -> m43_169  [color=darkseagreen4, key=1, label=tick, style=dashed];
m43_166 -> m43_167  [key=0, style=solid];
m43_167 -> m43_170  [key=0, style=solid];
m43_167 -> m43_168  [key=0, style=solid];
m43_150 -> m43_171  [key=0, style=solid];
m43_159 -> m43_171  [key=0, style=solid];
m43_162 -> m43_163  [key=0, style=solid];
m43_162 -> m43_166  [key=0, style=solid];
m43_171 -> m43_143  [color=blue, key=0, style=bold];
m43_89 -> m43_90  [key=0, style=solid];
m43_89 -> m43_91  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m43_89 -> m43_94  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderDirection direction", style=bold];
m43_90 -> m43_91  [key=0, style=solid];
m43_91 -> m43_92  [key=0, style=solid];
m43_91 -> m43_93  [key=2, style=dotted];
m43_92 -> m43_89  [color=blue, key=0, style=bold];
m43_139 -> m43_140  [key=0, style=solid];
m43_139 -> m43_141  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_140 -> m43_141  [key=0, style=solid];
m43_140 -> m43_143  [key=2, style=dotted];
m43_141 -> m43_142  [key=0, style=solid];
m43_141 -> m43_144  [key=2, style=dotted];
m43_142 -> m43_139  [color=blue, key=0, style=bold];
m43_35 -> m43_36  [color=red, key=0, style=solid];
m43_35 -> m43_39  [key=2, style=dotted];
m43_35 -> m43_37  [color=red, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m43_36 -> m43_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>", style=dashed];
m43_36 -> m43_37  [color=red, key=0, style=solid];
m43_36 -> m43_34  [key=2, style=dotted];
m43_36 -> m43_39  [color=red, key=2, style=dotted];
m43_37 -> m43_35  [color=blue, key=0, style=bold];
m43_37 -> m43_38  [color=red, key=0, style=solid];
m43_37 -> m43_40  [color=red, key=2, style=dotted];
m43_37 -> m43_41  [color=red, key=2, style=dotted];
m43_37 -> m43_42  [color=red, key=2, style=dotted];
m43_37 -> m43_43  [color=red, key=2, style=dotted];
m43_37 -> m43_44  [color=red, key=1, label="lambda expression", style=dashed];
m43_194 -> m43_0  [color=darkorchid, key=3, label="Field variable QuantConnect.Securities.SecurityTransactionManager Transactions", style=bold];
m43_14 -> m43_15  [key=0, style=solid];
m43_14 -> m43_39  [key=2, style=dotted];
m43_14 -> m43_37  [color=red, key=1, label=updateOrderRegressionStatistics, style=dashed];
m43_54 -> m43_55  [key=0, style=solid];
m43_55 -> m43_56  [key=0, style=solid];
m43_55 -> m43_42  [key=2, style=dotted];
m43_55 -> m43_58  [key=2, style=dotted];
m43_55 -> m43_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_56 -> m43_54  [color=blue, key=0, style=bold];
m43_31 -> m43_32  [color=red, key=0, style=solid];
m43_31 -> m43_39  [color=red, key=2, style=dotted];
m43_31 -> m43_37  [color=red, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m43_32 -> m43_33  [color=red, key=0, style=solid];
m43_32 -> m43_34  [key=2, style=dotted];
m43_32 -> m43_39  [color=red, key=2, style=dotted];
m43_32 -> m43_37  [color=red, key=1, label=basicTemplateDailyStatistics, style=dashed];
m43_33 -> m43_31  [color=blue, key=0, style=bold];
m43_33 -> m43_34  [key=0, style=solid];
m43_33 -> m43_39  [key=2, style=dotted];
m43_33 -> m43_37  [color=red, key=1, label=hourSplitStatistics, style=dashed];
m43_94 -> m43_95  [key=0, style=solid];
m43_94 -> m43_89  [color=darkorchid, key=3, label="method methodReturn decimal GetBuyingPower", style=bold];
m43_95 -> m43_96  [key=0, style=solid];
m43_95 -> m43_89  [key=2, style=dotted];
m43_96 -> m43_94  [color=blue, key=0, style=bold];
m43_97 -> m43_98  [key=0, style=solid];
m43_97 -> m43_99  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m43_98 -> m43_99  [key=0, style=solid];
m43_99 -> m43_100  [key=0, style=solid];
m43_99 -> m43_101  [key=2, style=dotted];
m43_100 -> m43_97  [color=blue, key=0, style=bold];
m43_242 -> m43_243  [key=0, style=solid];
m43_242 -> m43_245  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m43_243 -> m43_244  [key=0, style=solid];
m43_244 -> m43_245  [key=0, style=solid];
m43_244 -> m43_249  [key=0, style=solid];
m43_244 -> m43_250  [key=2, style=dotted];
m43_244 -> m43_246  [color=darkseagreen4, key=1, label=item, style=dashed];
m43_244 -> m43_247  [color=darkseagreen4, key=1, label=item, style=dashed];
m43_244 -> m43_248  [color=darkseagreen4, key=1, label=item, style=dashed];
m43_246 -> m43_247  [key=0, style=solid];
m43_246 -> m43_251  [key=2, style=dotted];
m43_247 -> m43_248  [key=0, style=solid];
m43_247 -> m43_138  [key=2, style=dotted];
m43_248 -> m43_244  [key=0, style=solid];
m43_248 -> m43_138  [key=2, style=dotted];
m43_245 -> m43_244  [key=0, style=solid];
m43_245 -> m43_246  [key=0, style=solid];
m43_249 -> m43_242  [color=blue, key=0, style=bold];
m43_11 -> m43_12  [color=red, key=0, style=solid];
m43_11 -> m43_39  [key=2, style=dotted];
m43_11 -> m43_37  [color=red, key=1, label=basicTemplateStatistics, style=dashed];
m43_53 -> m43_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m43_53 -> m43_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m43_53 -> m43_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m43_232 -> m43_234  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_232 -> m43_183  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security QuantConnect.Securities.ISecurityProvider.GetSecurity", style=bold];
m43_232 -> m43_233  [key=0, style=solid];
m43_234 -> m43_235  [key=0, style=solid];
m43_234 -> m43_236  [key=0, style=solid];
m43_234 -> m43_53  [key=2, style=dotted];
m43_233 -> m43_234  [key=0, style=solid];
m43_235 -> m43_237  [key=0, style=solid];
m43_236 -> m43_237  [key=0, style=solid];
m43_237 -> m43_232  [color=blue, key=0, style=bold];
m43_34 -> m43_35  [key=0, style=solid];
m43_34 -> m43_39  [key=2, style=dotted];
m43_34 -> m43_37  [color=red, key=1, label=hourReverseSplitStatistics, style=dashed];
m43_77 -> m43_78  [key=0, style=solid];
m43_78 -> m43_79  [key=0, style=solid];
m43_78 -> m43_14  [key=2, style=dotted];
m43_79 -> m43_77  [color=blue, key=0, style=bold];
m43_13 -> m43_14  [key=0, style=solid];
m43_13 -> m43_39  [key=2, style=dotted];
m43_13 -> m43_37  [color=red, key=1, label=limitFillRegressionStatistics, style=dashed];
m43_15 -> m43_16  [key=0, style=solid];
m43_15 -> m43_39  [key=2, style=dotted];
m43_15 -> m43_37  [color=red, key=1, label=regressionStatistics, style=dashed];
m43_16 -> m43_17  [key=0, style=solid];
m43_16 -> m43_39  [key=2, style=dotted];
m43_16 -> m43_37  [color=red, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m43_17 -> m43_18  [key=0, style=solid];
m43_17 -> m43_39  [key=2, style=dotted];
m43_17 -> m43_37  [color=red, key=1, label=customDataRegressionStatistics, style=dashed];
m43_18 -> m43_19  [key=0, style=solid];
m43_18 -> m43_39  [key=2, style=dotted];
m43_18 -> m43_37  [color=red, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m43_19 -> m43_20  [key=0, style=solid];
m43_19 -> m43_39  [key=2, style=dotted];
m43_19 -> m43_37  [color=red, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m43_20 -> m43_21  [color=red, key=0, style=solid];
m43_20 -> m43_39  [key=2, style=dotted];
m43_20 -> m43_37  [color=red, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m43_21 -> m43_22  [color=red, key=0, style=solid];
m43_21 -> m43_39  [color=red, key=2, style=dotted];
m43_21 -> m43_37  [color=red, key=1, label=parameterizedStatistics, style=dashed];
m43_22 -> m43_23  [color=red, key=0, style=solid];
m43_22 -> m43_39  [key=2, style=dotted];
m43_22 -> m43_37  [color=red, key=1, label=historyAlgorithmStatistics, style=dashed];
m43_23 -> m43_24  [color=red, key=0, style=solid];
m43_23 -> m43_39  [color=red, key=2, style=dotted];
m43_23 -> m43_37  [color=red, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m43_24 -> m43_25  [color=red, key=0, style=solid];
m43_24 -> m43_39  [key=2, style=dotted];
m43_24 -> m43_37  [color=red, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m43_25 -> m43_26  [color=red, key=0, style=solid];
m43_25 -> m43_39  [color=red, key=2, style=dotted];
m43_25 -> m43_37  [color=red, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m43_26 -> m43_27  [color=red, key=0, style=solid];
m43_26 -> m43_39  [color=red, key=2, style=dotted];
m43_26 -> m43_37  [color=red, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m43_27 -> m43_28  [key=0, style=solid];
m43_27 -> m43_39  [key=2, style=dotted];
m43_27 -> m43_37  [color=red, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m43_28 -> m43_29  [color=red, key=0, style=solid];
m43_28 -> m43_39  [key=2, style=dotted];
m43_28 -> m43_37  [color=red, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m43_29 -> m43_30  [color=red, key=0, style=solid];
m43_29 -> m43_39  [color=red, key=2, style=dotted];
m43_29 -> m43_37  [color=red, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m43_30 -> m43_31  [color=red, key=0, style=solid];
m43_30 -> m43_39  [key=2, style=dotted];
m43_30 -> m43_37  [color=red, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m43_252 -> m43_2  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_39  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_41  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_55  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_78  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_82  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_85  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_90  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_91  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_95  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_98  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_99  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_104  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_107  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_110  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_116  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_118  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_132  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_136  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_140  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_141  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_145  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_155  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_175  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_182  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_184  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_185  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_187  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_210  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_225  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_227  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_234  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_239  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_240  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_243  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_244  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_246  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_247  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_252 -> m43_248  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m43_253 -> m43_197  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m43_254 -> m43_218  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_254 -> m43_216  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_254 -> m43_217  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_255 -> m43_216  [color=darkseagreen4, key=1, label=newRootSymbol, style=dashed];
m43_256 -> m43_217  [color=darkseagreen4, key=1, label=newStrike, style=dashed];
m44_9 -> m44_10  [key=0, style=solid];
m44_9 -> m44_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m44_9 -> m44_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m44_9 -> m44_14  [color=darkorchid, key=3, label="method methodReturn decimal GetValueImpl", style=bold];
m44_10 -> m44_11  [key=0, style=solid];
m44_10 -> m44_12  [key=0, style=solid];
m44_11 -> m44_15  [key=0, style=solid];
m44_11 -> m44_16  [key=2, style=dotted];
m44_13 -> m44_15  [key=0, style=solid];
m44_13 -> m44_17  [key=2, style=dotted];
m44_12 -> m44_13  [key=0, style=solid];
m44_12 -> m44_14  [key=0, style=solid];
m44_14 -> m44_15  [key=0, style=solid];
m44_15 -> m44_9  [color=blue, key=0, style=bold];
m44_2 -> m44_3  [key=0, style=solid];
m44_2 -> m44_4  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m44_2 -> m44_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_2 -> m44_6  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m44_3 -> m44_4  [key=0, style=solid];
m44_4 -> m44_5  [key=0, style=solid];
m44_5 -> m44_6  [key=0, style=solid];
m44_5 -> m44_7  [key=0, style=solid];
m44_6 -> m44_7  [key=0, style=solid];
m44_6 -> m44_8  [key=2, style=dotted];
m44_7 -> m44_2  [color=blue, key=0, style=bold];
m44_32 -> m44_33  [key=0, style=solid];
m44_33 -> m44_34  [key=0, style=solid];
m44_33 -> m44_0  [key=2, style=dotted];
m44_33 -> m44_35  [color=darkseagreen4, key=1, label=order, style=dashed];
m44_34 -> m44_35  [key=0, style=solid];
m44_34 -> m44_37  [key=2, style=dotted];
m44_35 -> m44_36  [key=0, style=solid];
m44_36 -> m44_32  [color=blue, key=0, style=bold];
m44_0 -> m44_1  [key=0, style=solid];
m44_1 -> m44_0  [color=blue, key=0, style=bold];
m44_26 -> m44_27  [key=0, style=solid];
m44_27 -> m44_28  [key=0, style=solid];
m44_27 -> m44_29  [key=2, style=dotted];
m44_27 -> m44_30  [key=2, style=dotted];
m44_27 -> m44_31  [key=2, style=dotted];
m44_28 -> m44_26  [color=blue, key=0, style=bold];
m44_18 -> m44_19  [key=0, style=solid];
m44_18 -> m44_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m44_18 -> m44_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m44_18 -> m44_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m44_18 -> m44_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m44_19 -> m44_20  [key=0, style=solid];
m44_19 -> m44_25  [key=2, style=dotted];
m44_20 -> m44_21  [key=0, style=solid];
m44_20 -> m44_22  [key=0, style=solid];
m44_21 -> m44_22  [key=0, style=solid];
m44_22 -> m44_23  [key=0, style=solid];
m44_22 -> m44_24  [key=0, style=solid];
m44_23 -> m44_24  [key=0, style=solid];
m44_24 -> m44_18  [color=blue, key=0, style=bold];
m44_38 -> m44_3  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m44_38 -> m44_34  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_12 -> m46_13  [key=0, style=solid];
m46_13 -> m46_14  [key=0, style=solid];
m46_13 -> m46_16  [key=2, style=dotted];
m46_14 -> m46_15  [key=0, style=solid];
m46_14 -> m46_17  [key=2, style=dotted];
m46_15 -> m46_12  [color=blue, key=0, style=bold];
m46_9 -> m46_10  [key=0, style=solid];
m46_10 -> m46_11  [key=0, style=solid];
m46_11 -> m46_9  [color=blue, key=0, style=bold];
m46_0 -> m46_1  [key=0, style=solid];
m46_0 -> m46_2  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m46_0 -> m46_3  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m46_0 -> m46_4  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_0 -> m46_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_0 -> m46_6  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_0 -> m46_7  [color=red, key=1, label="QuantConnect.Interfaces.IOrderProperties", style=dashed];
m46_1 -> m46_2  [key=0, style=solid];
m46_2 -> m46_3  [key=0, style=solid];
m46_3 -> m46_4  [key=0, style=solid];
m46_4 -> m46_5  [key=0, style=solid];
m46_5 -> m46_6  [key=0, style=solid];
m46_6 -> m46_7  [color=red, key=0, style=solid];
m46_7 -> m46_8  [color=red, key=0, style=solid];
m46_8 -> m46_0  [color=blue, key=0, style=bold];
m46_18 -> m46_1  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m46_18 -> m46_2  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m46_18 -> m46_3  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m46_18 -> m46_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m46_18 -> m46_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m46_18 -> m46_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m46_18 -> m46_7  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m46_18 -> m46_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m46_18 -> m46_13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m46_18 -> m46_14  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m47_27 -> m47_28  [key=0, style=solid];
m47_27 -> m47_3  [color=darkorchid, key=3, label="Parameter variable int x", style=bold];
m47_27 -> m47_4  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m47_27 -> m47_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m47_27 -> m47_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m47_27 -> m47_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m47_27 -> m47_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m47_27 -> m47_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m47_27 -> m47_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m47_27 -> m47_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m47_27 -> m47_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m47_28 -> m47_29  [key=0, style=solid];
m47_28 -> m47_30  [key=2, style=dotted];
m47_28 -> m47_31  [key=2, style=dotted];
m47_28 -> m47_32  [key=2, style=dotted];
m47_29 -> m47_27  [color=blue, key=0, style=bold];
m47_23 -> m47_24  [key=0, style=solid];
m47_23 -> m47_26  [key=2, style=dotted];
m47_24 -> m47_25  [key=0, style=solid];
m47_24 -> m47_26  [key=2, style=dotted];
m47_24 -> m47_27  [key=2, style=dotted];
m47_24 -> m47_21  [color=blue, key=0, style=bold];
m47_25 -> m47_23  [color=blue, key=0, style=bold];
m47_21 -> m47_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m47_21 -> m47_22  [key=0, style=solid];
m47_22 -> m47_23  [key=0, style=solid];
m47_22 -> m47_24  [key=0, style=solid];
m47_22 -> m47_25  [key=2, style=dotted];
m47_11 -> m47_0  [color=blue, key=0, style=bold];
m47_0 -> m47_1  [key=0, style=solid];
m47_4 -> m47_5  [color=green, key=0, style=solid];
m47_4 -> m47_13  [color=green, key=2, style=dotted];
m47_4 -> m47_17  [key=2, style=dotted];
m47_4 -> m47_6  [color=darkseagreen4, key=1, label=rateLimit, style=dashed];
m47_3 -> m47_4  [color=green, key=0, style=solid];
m47_3 -> m47_12  [key=2, style=dotted];
m47_3 -> m47_14  [key=2, style=dotted];
m47_3 -> m47_15  [key=2, style=dotted];
m47_3 -> m47_16  [key=2, style=dotted];
m47_3 -> m47_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_3 -> m47_10  [color=darkseagreen4, key=1, label=data, style=dashed];
m47_5 -> m47_6  [key=0, style=solid];
m47_5 -> m47_14  [key=2, style=dotted];
m47_5 -> m47_15  [key=2, style=dotted];
m47_5 -> m47_18  [key=2, style=dotted];
m47_5 -> m47_19  [key=2, style=dotted];
m47_1 -> m47_2  [key=0, style=solid];
m47_1 -> m47_12  [key=2, style=dotted];
m47_1 -> m47_8  [color=red, key=1, label=currentTime, style=dashed];
m47_1 -> m47_21  [color=darkorchid, key=3, label="Field variable QuantConnect.AlgorithmSettings _algorithmSettings", style=bold];
m47_2 -> m47_3  [key=0, style=solid];
m47_2 -> m47_11  [key=2, style=dotted];
m47_2 -> m47_13  [key=2, style=dotted];
m47_2 -> m47_4  [color=darkseagreen4, key=1, label=timeProvider, style=dashed];
m47_2 -> m47_7  [color=darkseagreen4, key=1, label=timeProvider, style=dashed];
m47_2 -> m47_8  [color=red, key=1, label=timeProvider, style=dashed];
m47_2 -> m47_21  [color=darkorchid, key=3, label="Field variable QuantConnect.TimeKeeper _timeKeeper", style=bold];
m47_6 -> m47_7  [key=0, style=solid];
m47_6 -> m47_16  [key=2, style=dotted];
m47_6 -> m47_17  [key=2, style=dotted];
m47_6 -> m47_8  [color=red, key=0, style=solid];
m47_6 -> m47_18  [key=2, style=dotted];
m47_7 -> m47_8  [key=0, style=solid];
m47_7 -> m47_18  [key=2, style=dotted];
m47_7 -> m47_6  [key=0, style=solid];
m47_7 -> m47_20  [key=2, style=dotted];
m47_8 -> m47_9  [color=red, key=0, style=solid];
m47_8 -> m47_19  [key=2, style=dotted];
m47_8 -> m47_21  [color=red, key=2, style=dotted];
m47_9 -> m47_10  [key=0, style=solid];
m47_9 -> m47_20  [key=2, style=dotted];
m47_9 -> m47_22  [key=2, style=dotted];
m47_10 -> m47_0  [color=blue, key=0, style=bold];
m47_10 -> m47_11  [key=0, style=solid];
m47_10 -> m47_22  [key=2, style=dotted];
m48_24 -> m48_25  [key=0, style=solid];
m48_26 -> m48_7  [key=2, style=dotted];
m48_26 -> m48_27  [key=0, style=solid];
m48_27 -> m48_7  [key=2, style=dotted];
m48_27 -> m48_28  [key=0, style=solid];
m48_28 -> m48_7  [key=2, style=dotted];
m48_28 -> m48_29  [key=0, style=solid];
m48_29 -> m48_7  [key=2, style=dotted];
m48_29 -> m48_30  [key=0, style=solid];
m48_30 -> m48_7  [key=2, style=dotted];
m48_30 -> m48_31  [key=0, style=solid];
m48_31 -> m48_7  [key=2, style=dotted];
m48_31 -> m48_32  [key=0, style=solid];
m48_32 -> m48_7  [key=2, style=dotted];
m48_32 -> m48_33  [key=0, style=solid];
m48_25 -> m48_6  [key=2, style=dotted];
m48_25 -> m48_26  [key=0, style=solid];
m48_25 -> m48_27  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_25 -> m48_28  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_25 -> m48_29  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_25 -> m48_30  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_25 -> m48_31  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_25 -> m48_32  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_33 -> m48_24  [color=blue, key=0, style=bold];
m48_14 -> m48_15  [key=0, style=solid];
m48_16 -> m48_7  [key=2, style=dotted];
m48_16 -> m48_17  [key=0, style=solid];
m48_17 -> m48_7  [key=2, style=dotted];
m48_17 -> m48_18  [key=0, style=solid];
m48_18 -> m48_7  [key=2, style=dotted];
m48_18 -> m48_19  [key=0, style=solid];
m48_19 -> m48_7  [key=2, style=dotted];
m48_19 -> m48_20  [key=0, style=solid];
m48_20 -> m48_7  [key=2, style=dotted];
m48_20 -> m48_21  [key=0, style=solid];
m48_21 -> m48_7  [key=2, style=dotted];
m48_21 -> m48_22  [key=0, style=solid];
m48_22 -> m48_7  [key=2, style=dotted];
m48_22 -> m48_23  [key=0, style=solid];
m48_15 -> m48_6  [key=2, style=dotted];
m48_15 -> m48_16  [key=0, style=solid];
m48_15 -> m48_17  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_15 -> m48_18  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_15 -> m48_19  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_15 -> m48_20  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_15 -> m48_21  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_15 -> m48_22  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_23 -> m48_14  [color=blue, key=0, style=bold];
m48_8 -> m48_11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m48_8 -> m48_12  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m48_8 -> m48_9  [key=0, style=solid];
m48_11 -> m48_7  [key=2, style=dotted];
m48_11 -> m48_12  [key=0, style=solid];
m48_12 -> m48_7  [key=2, style=dotted];
m48_12 -> m48_13  [key=0, style=solid];
m48_10 -> m48_7  [key=2, style=dotted];
m48_10 -> m48_11  [key=0, style=solid];
m48_9 -> m48_6  [key=2, style=dotted];
m48_9 -> m48_11  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_9 -> m48_12  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_9 -> m48_10  [key=0, style=solid];
m48_13 -> m48_8  [color=blue, key=0, style=bold];
m48_6 -> m48_35  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m48_6 -> m48_45  [key=0, style=solid];
m48_6 -> m48_47  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m48_6 -> m48_0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m48_6 -> m48_8  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m48_6 -> m48_14  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m48_6 -> m48_24  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m48_6 -> m48_34  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m48_6 -> m48_9  [color=darkorchid, key=3, label="Parameter variable bool isCanonical", style=bold];
m48_45 -> m48_46  [key=0, style=solid];
m48_45 -> m48_49  [key=2, style=dotted];
m48_47 -> m48_48  [key=0, style=solid];
m48_47 -> m48_52  [key=2, style=dotted];
m48_46 -> m48_47  [key=0, style=solid];
m48_46 -> m48_50  [key=2, style=dotted];
m48_46 -> m48_51  [key=2, style=dotted];
m48_48 -> m48_6  [color=blue, key=0, style=bold];
m48_34 -> m48_35  [key=0, style=solid];
m48_34 -> m48_37  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m48_40 -> m48_41  [color=green, key=0, style=solid];
m48_40 -> m48_7  [color=green, key=2, style=dotted];
m48_35 -> m48_40  [color=green, key=1, label=types, style=dashed];
m48_35 -> m48_41  [color=green, key=1, label=types, style=dashed];
m48_35 -> m48_42  [color=green, key=1, label=types, style=dashed];
m48_35 -> m48_43  [color=green, key=1, label=types, style=dashed];
m48_35 -> m48_36  [key=0, style=solid];
m48_35 -> m48_6  [key=2, style=dotted];
m48_35 -> m48_38  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_35 -> m48_39  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_37 -> m48_40  [color=green, key=0, style=solid];
m48_37 -> m48_38  [key=0, style=solid];
m48_41 -> m48_42  [color=green, key=0, style=solid];
m48_41 -> m48_7  [color=green, key=2, style=dotted];
m48_42 -> m48_43  [color=green, key=0, style=solid];
m48_42 -> m48_7  [color=green, key=2, style=dotted];
m48_39 -> m48_42  [color=green, key=0, style=solid];
m48_39 -> m48_7  [key=2, style=dotted];
m48_43 -> m48_44  [color=green, key=0, style=solid];
m48_43 -> m48_7  [color=green, key=2, style=dotted];
m48_36 -> m48_37  [key=0, style=solid];
m48_36 -> m48_7  [key=2, style=dotted];
m48_38 -> m48_7  [key=2, style=dotted];
m48_38 -> m48_39  [key=0, style=solid];
m48_44 -> m48_34  [color=blue, key=0, style=bold];
m48_0 -> m48_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m48_0 -> m48_4  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m48_0 -> m48_1  [key=0, style=solid];
m48_3 -> m48_7  [key=2, style=dotted];
m48_3 -> m48_4  [key=0, style=solid];
m48_4 -> m48_7  [key=2, style=dotted];
m48_4 -> m48_5  [key=0, style=solid];
m48_2 -> m48_7  [key=2, style=dotted];
m48_2 -> m48_3  [key=0, style=solid];
m48_1 -> m48_6  [key=2, style=dotted];
m48_1 -> m48_3  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_1 -> m48_4  [color=darkseagreen4, key=1, label=types, style=dashed];
m48_1 -> m48_2  [key=0, style=solid];
m48_5 -> m48_0  [color=blue, key=0, style=bold];
m49_246 -> m49_247  [key=0, style=solid];
m49_246 -> m49_250  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m49_246 -> m49_262  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m49_246 -> m49_252  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m49_247 -> m49_248  [key=0, style=solid];
m49_247 -> m49_250  [color=darkseagreen4, key=1, label=details, style=dashed];
m49_250 -> m49_251  [key=0, style=solid];
m49_250 -> m49_259  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ContractDetailsEventArgs", style=dashed];
m49_250 -> m49_261  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ContractDetailsEventArgs", style=dashed];
m49_250 -> m49_254  [color=darkseagreen4, key=1, label=clientOnContractDetails, style=dashed];
m49_252 -> m49_253  [key=0, style=solid];
m49_252 -> m49_257  [key=2, style=dotted];
m49_248 -> m49_249  [key=0, style=solid];
m49_248 -> m49_148  [key=2, style=dotted];
m49_248 -> m49_250  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m49_248 -> m49_259  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m49_248 -> m49_252  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m49_249 -> m49_250  [key=0, style=solid];
m49_249 -> m49_75  [key=2, style=dotted];
m49_249 -> m49_263  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m49_249 -> m49_253  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m49_253 -> m49_254  [key=0, style=solid];
m49_253 -> m49_77  [key=2, style=dotted];
m49_251 -> m49_252  [key=0, style=solid];
m49_254 -> m49_255  [key=0, style=solid];
m49_255 -> m49_256  [key=0, style=solid];
m49_256 -> m49_246  [color=blue, key=0, style=bold];
m49_204 -> m49_205  [key=0, style=solid];
m49_205 -> m49_206  [key=0, style=solid];
m49_205 -> m49_208  [key=0, style=solid];
m49_206 -> m49_207  [key=0, style=solid];
m49_206 -> m49_203  [key=2, style=dotted];
m49_207 -> m49_208  [key=0, style=solid];
m49_207 -> m49_209  [key=2, style=dotted];
m49_208 -> m49_204  [color=blue, key=0, style=bold];
m49_414 -> m49_415  [key=0, style=solid];
m49_414 -> m49_416  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m49_414 -> m49_417  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Order", style=dashed];
m49_414 -> m49_420  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Order", style=dashed];
m49_414 -> m49_422  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Order", style=dashed];
m49_414 -> m49_424  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Order", style=dashed];
m49_414 -> m49_426  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Order", style=dashed];
m49_414 -> m49_428  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m49_414 -> m49_429  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Order", style=dashed];
m49_415 -> m49_416  [key=0, style=solid];
m49_416 -> m49_417  [key=0, style=solid];
m49_416 -> m49_432  [key=2, style=dotted];
m49_416 -> m49_420  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m49_416 -> m49_422  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m49_416 -> m49_424  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m49_416 -> m49_426  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m49_417 -> m49_418  [key=0, style=solid];
m49_417 -> m49_433  [key=2, style=dotted];
m49_417 -> m49_427  [color=darkseagreen4, key=1, label=orderType, style=dashed];
m49_420 -> m49_428  [key=0, style=solid];
m49_420 -> m49_434  [key=2, style=dotted];
m49_420 -> m49_435  [key=2, style=dotted];
m49_422 -> m49_428  [key=0, style=solid];
m49_422 -> m49_436  [key=2, style=dotted];
m49_422 -> m49_435  [key=2, style=dotted];
m49_424 -> m49_428  [key=0, style=solid];
m49_424 -> m49_437  [key=2, style=dotted];
m49_424 -> m49_435  [key=2, style=dotted];
m49_426 -> m49_428  [key=0, style=solid];
m49_426 -> m49_438  [key=2, style=dotted];
m49_426 -> m49_435  [key=2, style=dotted];
m49_426 -> m49_429  [color=darkseagreen4, key=1, label=order, style=dashed];
m49_426 -> m49_430  [color=darkseagreen4, key=1, label=order, style=dashed];
m49_428 -> m49_429  [key=0, style=solid];
m49_428 -> m49_440  [key=2, style=dotted];
m49_429 -> m49_430  [key=0, style=solid];
m49_429 -> m49_83  [key=2, style=dotted];
m49_418 -> m49_419  [key=0, style=solid];
m49_418 -> m49_421  [key=0, style=solid];
m49_418 -> m49_423  [key=0, style=solid];
m49_418 -> m49_425  [key=0, style=solid];
m49_418 -> m49_427  [key=0, style=solid];
m49_427 -> m49_431  [key=0, style=solid];
m49_427 -> m49_439  [key=2, style=dotted];
m49_419 -> m49_420  [key=0, style=solid];
m49_421 -> m49_422  [key=0, style=solid];
m49_423 -> m49_424  [key=0, style=solid];
m49_425 -> m49_426  [key=0, style=solid];
m49_430 -> m49_431  [key=0, style=solid];
m49_431 -> m49_414  [color=blue, key=0, style=bold];
m49_522 -> m49_523  [key=0, style=solid];
m49_523 -> m49_524  [key=0, style=solid];
m49_523 -> m49_526  [key=0, style=solid];
m49_523 -> m49_528  [key=0, style=solid];
m49_523 -> m49_530  [key=0, style=solid];
m49_523 -> m49_532  [key=0, style=solid];
m49_523 -> m49_534  [key=0, style=solid];
m49_523 -> m49_542  [key=0, style=solid];
m49_524 -> m49_525  [key=0, style=solid];
m49_526 -> m49_527  [key=0, style=solid];
m49_528 -> m49_529  [key=0, style=solid];
m49_530 -> m49_531  [key=0, style=solid];
m49_532 -> m49_533  [key=0, style=solid];
m49_534 -> m49_535  [key=0, style=solid];
m49_542 -> m49_543  [key=0, style=solid];
m49_542 -> m49_544  [key=2, style=dotted];
m49_525 -> m49_543  [key=0, style=solid];
m49_527 -> m49_543  [key=0, style=solid];
m49_529 -> m49_543  [key=0, style=solid];
m49_531 -> m49_543  [key=0, style=solid];
m49_533 -> m49_543  [key=0, style=solid];
m49_535 -> m49_536  [key=0, style=solid];
m49_536 -> m49_537  [key=0, style=solid];
m49_537 -> m49_538  [key=0, style=solid];
m49_538 -> m49_539  [key=0, style=solid];
m49_539 -> m49_540  [key=0, style=solid];
m49_540 -> m49_541  [key=0, style=solid];
m49_541 -> m49_543  [key=0, style=solid];
m49_543 -> m49_522  [color=blue, key=0, style=bold];
m49_338 -> m49_339  [key=0, style=solid];
m49_339 -> m49_340  [key=0, style=solid];
m49_339 -> m49_341  [key=0, style=solid];
m49_339 -> m49_345  [key=2, style=dotted];
m49_340 -> m49_344  [key=0, style=solid];
m49_340 -> m49_346  [key=2, style=dotted];
m49_340 -> m49_334  [key=2, style=dotted];
m49_341 -> m49_342  [key=0, style=solid];
m49_341 -> m49_344  [key=0, style=solid];
m49_341 -> m49_345  [key=2, style=dotted];
m49_342 -> m49_343  [key=0, style=solid];
m49_342 -> m49_36  [key=2, style=dotted];
m49_343 -> m49_344  [key=0, style=solid];
m49_343 -> m49_327  [key=2, style=dotted];
m49_343 -> m49_328  [key=2, style=dotted];
m49_343 -> m49_329  [key=2, style=dotted];
m49_343 -> m49_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_344 -> m49_338  [color=blue, key=0, style=bold];
m49_4 -> m49_5  [key=0, style=solid];
m49_4 -> m49_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_4 -> m49_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_4 -> m49_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m49_4 -> m49_10  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.AgentDescription", style=dashed];
m49_5 -> m49_6  [key=0, style=solid];
m49_6 -> m49_7  [key=0, style=solid];
m49_7 -> m49_8  [key=0, style=solid];
m49_8 -> m49_9  [key=0, style=solid];
m49_10 -> m49_11  [key=0, style=solid];
m49_9 -> m49_10  [key=0, style=solid];
m49_9 -> m49_18  [key=2, style=dotted];
m49_11 -> m49_12  [key=0, style=solid];
m49_11 -> m49_19  [key=2, style=dotted];
m49_12 -> m49_13  [key=0, style=solid];
m49_13 -> m49_14  [key=0, style=solid];
m49_14 -> m49_15  [key=0, style=solid];
m49_15 -> m49_16  [key=0, style=solid];
m49_16 -> m49_17  [key=0, style=solid];
m49_16 -> m49_22  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_16 -> m49_24  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_17 -> m49_4  [color=blue, key=0, style=bold];
m49_231 -> m49_556  [key=0, style=solid];
m49_556 -> m49_557  [key=0, style=solid];
m49_556 -> m49_558  [key=0, style=solid];
m49_557 -> m49_556  [key=0, style=solid];
m49_557 -> m49_560  [key=2, style=dotted];
m49_558 -> m49_559  [key=0, style=solid];
m49_558 -> m49_561  [key=2, style=dotted];
m49_559 -> m49_231  [color=blue, key=0, style=bold];
m49_413 -> m49_463  [key=0, style=solid];
m49_413 -> m49_470  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m49_463 -> m49_464  [key=0, style=solid];
m49_463 -> m49_466  [key=0, style=solid];
m49_463 -> m49_468  [key=0, style=solid];
m49_463 -> m49_470  [key=0, style=solid];
m49_470 -> m49_471  [key=0, style=solid];
m49_470 -> m49_439  [key=2, style=dotted];
m49_464 -> m49_465  [key=0, style=solid];
m49_466 -> m49_467  [key=0, style=solid];
m49_468 -> m49_469  [key=0, style=solid];
m49_465 -> m49_471  [key=0, style=solid];
m49_467 -> m49_471  [key=0, style=solid];
m49_469 -> m49_471  [key=0, style=solid];
m49_471 -> m49_413  [color=blue, key=0, style=bold];
m49_121 -> m49_122  [key=0, style=solid];
m49_122 -> m49_123  [key=0, style=solid];
m49_122 -> m49_93  [key=2, style=dotted];
m49_122 -> m49_94  [key=2, style=dotted];
m49_122 -> m49_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_123 -> m49_121  [color=blue, key=0, style=bold];
m49_363 -> m49_364  [key=0, style=solid];
m49_363 -> m49_366  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m49_363 -> m49_371  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m49_363 -> m49_372  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m49_363 -> m49_374  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m49_363 -> m49_376  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m49_363 -> m49_377  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m49_363 -> m49_378  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m49_363 -> m49_379  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m49_363 -> m49_383  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m49_364 -> m49_365  [key=0, style=solid];
m49_364 -> m49_366  [key=0, style=solid];
m49_366 -> m49_367  [key=0, style=solid];
m49_366 -> m49_387  [key=2, style=dotted];
m49_366 -> m49_368  [color=darkseagreen4, key=1, label=status, style=dashed];
m49_366 -> m49_370  [color=darkseagreen4, key=1, label=status, style=dashed];
m49_366 -> m49_377  [color=darkseagreen4, key=1, label=status, style=dashed];
m49_371 -> m49_372  [key=0, style=solid];
m49_371 -> m49_388  [key=2, style=dotted];
m49_372 -> m49_373  [key=0, style=solid];
m49_372 -> m49_330  [key=2, style=dotted];
m49_372 -> m49_376  [color=darkseagreen4, key=1, label=order, style=dashed];
m49_372 -> m49_377  [color=darkseagreen4, key=1, label=order, style=dashed];
m49_374 -> m49_375  [key=0, style=solid];
m49_374 -> m49_388  [key=2, style=dotted];
m49_376 -> m49_377  [key=0, style=solid];
m49_377 -> m49_378  [key=0, style=solid];
m49_377 -> m49_331  [key=2, style=dotted];
m49_377 -> m49_379  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m49_377 -> m49_380  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m49_377 -> m49_381  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m49_378 -> m49_379  [key=0, style=solid];
m49_378 -> m49_380  [key=0, style=solid];
m49_379 -> m49_380  [key=0, style=solid];
m49_383 -> m49_386  [key=0, style=solid];
m49_383 -> m49_388  [key=2, style=dotted];
m49_365 -> m49_386  [key=0, style=solid];
m49_367 -> m49_368  [key=0, style=solid];
m49_367 -> m49_370  [key=0, style=solid];
m49_368 -> m49_369  [key=0, style=solid];
m49_368 -> m49_36  [key=2, style=dotted];
m49_370 -> m49_371  [key=0, style=solid];
m49_370 -> m49_372  [key=0, style=solid];
m49_369 -> m49_386  [key=0, style=solid];
m49_373 -> m49_374  [key=0, style=solid];
m49_373 -> m49_376  [key=0, style=solid];
m49_375 -> m49_386  [key=0, style=solid];
m49_380 -> m49_381  [key=0, style=solid];
m49_380 -> m49_382  [key=0, style=solid];
m49_380 -> m49_384  [key=0, style=solid];
m49_380 -> m49_386  [key=0, style=solid];
m49_380 -> m49_389  [key=2, style=dotted];
m49_380 -> m49_390  [key=2, style=dotted];
m49_381 -> m49_382  [key=0, style=solid];
m49_381 -> m49_384  [key=0, style=solid];
m49_381 -> m49_386  [key=0, style=solid];
m49_381 -> m49_332  [key=2, style=dotted];
m49_382 -> m49_383  [key=0, style=solid];
m49_384 -> m49_385  [key=0, style=solid];
m49_385 -> m49_386  [key=0, style=solid];
m49_385 -> m49_38  [key=2, style=dotted];
m49_386 -> m49_363  [color=blue, key=0, style=bold];
m49_472 -> m49_473  [key=0, style=solid];
m49_472 -> m49_480  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderType", style=dashed];
m49_473 -> m49_474  [key=0, style=solid];
m49_473 -> m49_476  [key=0, style=solid];
m49_473 -> m49_478  [key=0, style=solid];
m49_473 -> m49_480  [key=0, style=solid];
m49_480 -> m49_481  [key=0, style=solid];
m49_480 -> m49_439  [key=2, style=dotted];
m49_474 -> m49_475  [key=0, style=solid];
m49_476 -> m49_477  [key=0, style=solid];
m49_478 -> m49_479  [key=0, style=solid];
m49_475 -> m49_481  [key=0, style=solid];
m49_477 -> m49_481  [key=0, style=solid];
m49_479 -> m49_481  [key=0, style=solid];
m49_481 -> m49_472  [color=blue, key=0, style=bold];
m49_390 -> m49_581  [key=0, style=solid];
m49_390 -> m49_582  [color=darkseagreen4, key=1, label=T, style=dashed];
m49_581 -> m49_582  [key=0, style=solid];
m49_581 -> m49_586  [key=0, style=solid];
m49_581 -> m49_588  [key=2, style=dotted];
m49_582 -> m49_583  [key=0, style=solid];
m49_582 -> m49_589  [key=2, style=dotted];
m49_586 -> m49_587  [key=0, style=solid];
m49_583 -> m49_584  [key=0, style=solid];
m49_583 -> m49_585  [key=0, style=solid];
m49_584 -> m49_585  [key=0, style=solid];
m49_584 -> m49_590  [key=2, style=dotted];
m49_585 -> m49_587  [key=0, style=solid];
m49_587 -> m49_390  [color=blue, key=0, style=bold];
m49_18 -> m49_566  [key=0, style=solid];
m49_566 -> m49_567  [key=0, style=solid];
m49_566 -> m49_561  [key=2, style=dotted];
m49_567 -> m49_18  [color=blue, key=0, style=bold];
m49_350 -> m49_351  [key=0, style=solid];
m49_350 -> m49_352  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdateAccountValueEventArgs", style=dashed];
m49_350 -> m49_353  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdateAccountValueEventArgs", style=dashed];
m49_350 -> m49_354  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdateAccountValueEventArgs", style=dashed];
m49_350 -> m49_355  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdateAccountValueEventArgs", style=dashed];
m49_351 -> m49_352  [key=0, style=solid];
m49_352 -> m49_353  [key=0, style=solid];
m49_352 -> m49_356  [key=0, style=solid];
m49_352 -> m49_358  [key=0, style=solid];
m49_353 -> m49_354  [key=0, style=solid];
m49_353 -> m49_359  [key=2, style=dotted];
m49_353 -> m49_355  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m49_354 -> m49_355  [key=0, style=solid];
m49_354 -> m49_360  [key=2, style=dotted];
m49_355 -> m49_356  [key=0, style=solid];
m49_355 -> m49_358  [key=0, style=solid];
m49_355 -> m49_361  [key=2, style=dotted];
m49_355 -> m49_362  [key=2, style=dotted];
m49_356 -> m49_357  [key=0, style=solid];
m49_357 -> m49_358  [key=0, style=solid];
m49_357 -> m49_38  [key=2, style=dotted];
m49_358 -> m49_350  [color=blue, key=0, style=bold];
m49_234 -> m49_401  [key=0, style=solid];
m49_234 -> m49_402  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m49_234 -> m49_403  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m49_401 -> m49_402  [key=0, style=solid];
m49_401 -> m49_410  [key=2, style=dotted];
m49_401 -> m49_411  [key=2, style=dotted];
m49_401 -> m49_412  [key=2, style=dotted];
m49_401 -> m49_413  [key=2, style=dotted];
m49_401 -> m49_405  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m49_401 -> m49_407  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m49_401 -> m49_408  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m49_402 -> m49_403  [key=0, style=solid];
m49_402 -> m49_404  [color=darkseagreen4, key=1, label=limitOrder, style=dashed];
m49_402 -> m49_405  [color=darkseagreen4, key=1, label=limitOrder, style=dashed];
m49_403 -> m49_404  [key=0, style=solid];
m49_403 -> m49_406  [color=darkseagreen4, key=1, label=stopMarketOrder, style=dashed];
m49_403 -> m49_407  [color=darkseagreen4, key=1, label=stopMarketOrder, style=dashed];
m49_405 -> m49_408  [key=0, style=solid];
m49_405 -> m49_405  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m49_407 -> m49_408  [key=0, style=solid];
m49_407 -> m49_407  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m49_408 -> m49_409  [key=0, style=solid];
m49_404 -> m49_405  [key=0, style=solid];
m49_404 -> m49_406  [key=0, style=solid];
m49_406 -> m49_407  [key=0, style=solid];
m49_406 -> m49_408  [key=0, style=solid];
m49_409 -> m49_234  [color=blue, key=0, style=bold];
m49_347 -> m49_348  [key=0, style=solid];
m49_22 -> m49_23  [key=0, style=solid];
m49_24 -> m49_25  [key=0, style=solid];
m49_24 -> m49_27  [key=2, style=dotted];
m49_20 -> m49_21  [key=0, style=solid];
m49_20 -> m49_22  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_20 -> m49_24  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_21 -> m49_22  [key=0, style=solid];
m49_21 -> m49_24  [key=0, style=solid];
m49_23 -> m49_24  [key=0, style=solid];
m49_23 -> m49_26  [key=2, style=dotted];
m49_25 -> m49_20  [color=blue, key=0, style=bold];
m49_80 -> m49_81  [key=0, style=solid];
m49_80 -> m49_82  [key=2, style=dotted];
m49_80 -> m49_83  [key=2, style=dotted];
m49_85 -> m49_86  [color=red, key=0, style=solid];
m49_85 -> m49_26  [color=red, key=2, style=dotted];
m49_79 -> m49_80  [key=0, style=solid];
m49_81 -> m49_79  [color=blue, key=0, style=bold];
m49_84 -> m49_85  [color=red, key=0, style=solid];
m49_86 -> m49_84  [color=blue, key=0, style=bold];
m49_98 -> m49_99  [key=0, style=solid];
m49_102 -> m49_103  [key=0, style=solid];
m49_102 -> m49_104  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_102 -> m49_106  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_102 -> m49_108  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_102 -> m49_110  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_118 -> m49_119  [key=0, style=solid];
m49_99 -> m49_100  [key=0, style=solid];
m49_99 -> m49_101  [key=2, style=dotted];
m49_99 -> m49_99  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Holding>", style=dashed];
m49_100 -> m49_98  [color=blue, key=0, style=bold];
m49_103 -> m49_104  [key=0, style=solid];
m49_103 -> m49_106  [key=0, style=solid];
m49_104 -> m49_105  [key=0, style=solid];
m49_104 -> m49_104  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_104 -> m49_106  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_104 -> m49_108  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_104 -> m49_110  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_106 -> m49_107  [key=0, style=solid];
m49_106 -> m49_112  [key=2, style=dotted];
m49_106 -> m49_110  [color=darkseagreen4, key=1, label=currency, style=dashed];
m49_106 -> m49_115  [color=darkseagreen4, key=1, label=currency, style=dashed];
m49_108 -> m49_109  [key=0, style=solid];
m49_108 -> m49_108  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_108 -> m49_110  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_110 -> m49_111  [key=0, style=solid];
m49_110 -> m49_113  [key=2, style=dotted];
m49_110 -> m49_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_110 -> m49_115  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_105 -> m49_111  [key=0, style=solid];
m49_107 -> m49_108  [key=0, style=solid];
m49_107 -> m49_110  [key=0, style=solid];
m49_115 -> m49_116  [key=0, style=solid];
m49_115 -> m49_117  [key=2, style=dotted];
m49_115 -> m49_115  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_109 -> m49_111  [key=0, style=solid];
m49_111 -> m49_102  [color=blue, key=0, style=bold];
m49_114 -> m49_115  [key=0, style=solid];
m49_116 -> m49_114  [color=blue, key=0, style=bold];
m49_119 -> m49_120  [key=0, style=solid];
m49_120 -> m49_118  [color=blue, key=0, style=bold];
m49_124 -> m49_125  [key=0, style=solid];
m49_125 -> m49_126  [key=0, style=solid];
m49_125 -> m49_127  [key=2, style=dotted];
m49_125 -> m49_117  [key=2, style=dotted];
m49_125 -> m49_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, decimal>", style=dashed];
m49_126 -> m49_124  [color=blue, key=0, style=bold];
m49_156 -> m49_157  [key=0, style=solid];
m49_156 -> m49_158  [key=2, style=dotted];
m49_152 -> m49_153  [key=0, style=solid];
m49_152 -> m49_26  [key=2, style=dotted];
m49_151 -> m49_152  [key=0, style=solid];
m49_151 -> m49_153  [key=0, style=solid];
m49_155 -> m49_156  [key=0, style=solid];
m49_155 -> m49_157  [key=0, style=solid];
m49_150 -> m49_151  [key=0, style=solid];
m49_153 -> m49_150  [color=blue, key=0, style=bold];
m49_154 -> m49_155  [key=0, style=solid];
m49_154 -> m49_156  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecDetailsEventArgs", style=dashed];
m49_157 -> m49_154  [color=blue, key=0, style=bold];
m49_192 -> m49_193  [key=0, style=solid];
m49_192 -> m49_27  [key=2, style=dotted];
m49_196 -> m49_197  [key=0, style=solid];
m49_196 -> m49_26  [key=2, style=dotted];
m49_191 -> m49_192  [key=0, style=solid];
m49_193 -> m49_194  [key=0, style=solid];
m49_193 -> m49_26  [key=2, style=dotted];
m49_194 -> m49_191  [color=blue, key=0, style=bold];
m49_195 -> m49_196  [key=0, style=solid];
m49_197 -> m49_195  [color=blue, key=0, style=bold];
m49_262 -> m49_263  [key=0, style=solid];
m49_262 -> m49_265  [key=2, style=dotted];
m49_259 -> m49_260  [key=0, style=solid];
m49_259 -> m49_261  [key=0, style=solid];
m49_263 -> m49_264  [key=0, style=solid];
m49_263 -> m49_26  [key=2, style=dotted];
m49_261 -> m49_262  [key=0, style=solid];
m49_261 -> m49_250  [color=darkseagreen4, key=1, label=details, style=dashed];
m49_261 -> m49_255  [color=darkseagreen4, key=1, label=details, style=dashed];
m49_261 -> m49_264  [color=darkseagreen4, key=1, label=details, style=dashed];
m49_258 -> m49_259  [key=0, style=solid];
m49_258 -> m49_261  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ContractDetailsEventArgs", style=dashed];
m49_260 -> m49_264  [key=0, style=solid];
m49_264 -> m49_258  [color=blue, key=0, style=bold];
m49_297 -> m49_298  [key=0, style=solid];
m49_296 -> m49_297  [key=0, style=solid];
m49_300 -> m49_301  [key=0, style=solid];
m49_300 -> m49_303  [key=0, style=solid];
m49_302 -> m49_303  [key=0, style=solid];
m49_302 -> m49_26  [key=2, style=dotted];
m49_301 -> m49_302  [key=0, style=solid];
m49_301 -> m49_288  [color=darkseagreen4, key=1, label=rate, style=dashed];
m49_301 -> m49_289  [color=darkseagreen4, key=1, label=rate, style=dashed];
m49_301 -> m49_303  [color=darkseagreen4, key=1, label=rate, style=dashed];
m49_298 -> m49_296  [color=blue, key=0, style=bold];
m49_299 -> m49_300  [key=0, style=solid];
m49_299 -> m49_301  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.TickPriceEventArgs", style=dashed];
m49_303 -> m49_299  [color=blue, key=0, style=bold];
m49_335 -> m49_336  [key=0, style=solid];
m49_336 -> m49_337  [key=0, style=solid];
m49_336 -> m49_338  [key=2, style=dotted];
m49_337 -> m49_335  [color=blue, key=0, style=bold];
m49_348 -> m49_349  [key=0, style=solid];
m49_348 -> m49_338  [key=2, style=dotted];
m49_349 -> m49_347  [color=blue, key=0, style=bold];
m49_39 -> m49_40  [key=0, style=solid];
m49_39 -> m49_41  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m49_40 -> m49_41  [key=0, style=solid];
m49_40 -> m49_36  [key=2, style=dotted];
m49_41 -> m49_42  [key=0, style=solid];
m49_41 -> m49_45  [key=0, style=solid];
m49_41 -> m49_37  [key=2, style=dotted];
m49_42 -> m49_43  [key=0, style=solid];
m49_45 -> m49_46  [key=0, style=solid];
m49_43 -> m49_44  [key=0, style=solid];
m49_43 -> m49_38  [key=2, style=dotted];
m49_44 -> m49_46  [key=0, style=solid];
m49_46 -> m49_39  [color=blue, key=0, style=bold];
m49_482 -> m49_483  [key=0, style=solid];
m49_482 -> m49_505  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatus", style=dashed];
m49_483 -> m49_484  [key=0, style=solid];
m49_483 -> m49_488  [key=0, style=solid];
m49_483 -> m49_492  [key=0, style=solid];
m49_483 -> m49_494  [key=0, style=solid];
m49_483 -> m49_496  [key=0, style=solid];
m49_483 -> m49_498  [key=0, style=solid];
m49_483 -> m49_500  [key=0, style=solid];
m49_483 -> m49_503  [key=0, style=solid];
m49_483 -> m49_505  [key=0, style=solid];
m49_505 -> m49_506  [key=0, style=solid];
m49_505 -> m49_439  [key=2, style=dotted];
m49_484 -> m49_485  [key=0, style=solid];
m49_488 -> m49_489  [key=0, style=solid];
m49_492 -> m49_493  [key=0, style=solid];
m49_494 -> m49_495  [key=0, style=solid];
m49_496 -> m49_497  [key=0, style=solid];
m49_498 -> m49_499  [key=0, style=solid];
m49_500 -> m49_501  [key=0, style=solid];
m49_503 -> m49_504  [key=0, style=solid];
m49_485 -> m49_486  [key=0, style=solid];
m49_486 -> m49_487  [key=0, style=solid];
m49_487 -> m49_506  [key=0, style=solid];
m49_489 -> m49_490  [key=0, style=solid];
m49_490 -> m49_491  [key=0, style=solid];
m49_491 -> m49_506  [key=0, style=solid];
m49_493 -> m49_506  [key=0, style=solid];
m49_495 -> m49_506  [key=0, style=solid];
m49_497 -> m49_506  [key=0, style=solid];
m49_499 -> m49_506  [key=0, style=solid];
m49_501 -> m49_502  [key=0, style=solid];
m49_501 -> m49_38  [key=2, style=dotted];
m49_502 -> m49_506  [key=0, style=solid];
m49_504 -> m49_506  [key=0, style=solid];
m49_506 -> m49_482  [color=blue, key=0, style=bold];
m49_345 -> m49_568  [key=0, style=solid];
m49_568 -> m49_569  [key=0, style=solid];
m49_569 -> m49_570  [key=0, style=solid];
m49_569 -> m49_573  [key=2, style=dotted];
m49_569 -> m49_571  [color=darkseagreen4, key=1, label=result, style=dashed];
m49_570 -> m49_571  [key=0, style=solid];
m49_570 -> m49_36  [key=2, style=dotted];
m49_571 -> m49_572  [key=0, style=solid];
m49_572 -> m49_345  [color=blue, key=0, style=bold];
m49_432 -> m49_552  [key=0, style=solid];
m49_432 -> m49_553  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m49_432 -> m49_554  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m49_552 -> m49_553  [key=0, style=solid];
m49_552 -> m49_554  [key=0, style=solid];
m49_553 -> m49_555  [key=0, style=solid];
m49_554 -> m49_555  [key=0, style=solid];
m49_555 -> m49_432  [color=blue, key=0, style=bold];
m49_198 -> m49_199  [key=0, style=solid];
m49_199 -> m49_200  [key=0, style=solid];
m49_199 -> m49_201  [key=0, style=solid];
m49_200 -> m49_202  [key=0, style=solid];
m49_201 -> m49_202  [key=0, style=solid];
m49_201 -> m49_203  [key=2, style=dotted];
m49_202 -> m49_198  [color=blue, key=0, style=bold];
m49_2 -> m49_3  [key=0, style=solid];
m49_3 -> m49_2  [color=blue, key=0, style=bold];
m49_57 -> m49_58  [key=0, style=solid];
m49_58 -> m49_59  [key=0, style=solid];
m49_59 -> m49_57  [color=blue, key=0, style=bold];
m49_574 -> m49_575  [key=0, style=solid];
m49_574 -> m49_576  [color=darkseagreen4, key=1, label=int, style=dashed];
m49_575 -> m49_576  [key=0, style=solid];
m49_576 -> m49_577  [key=0, style=solid];
m49_576 -> m49_579  [key=2, style=dotted];
m49_577 -> m49_578  [key=0, style=solid];
m49_577 -> m49_580  [key=2, style=dotted];
m49_578 -> m49_574  [color=blue, key=0, style=bold];
m49_87 -> m49_88  [key=0, style=solid];
m49_88 -> m49_89  [key=0, style=solid];
m49_88 -> m49_93  [key=2, style=dotted];
m49_88 -> m49_94  [key=2, style=dotted];
m49_88 -> m49_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_88 -> m49_91  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m49_89 -> m49_90  [key=0, style=solid];
m49_89 -> m49_93  [key=2, style=dotted];
m49_89 -> m49_95  [key=2, style=dotted];
m49_89 -> m49_96  [key=2, style=dotted];
m49_89 -> m49_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_89 -> m49_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_91 -> m49_92  [key=0, style=solid];
m49_90 -> m49_91  [key=0, style=solid];
m49_90 -> m49_97  [key=2, style=dotted];
m49_92 -> m49_87  [color=blue, key=0, style=bold];
m49_117 -> m49_266  [key=0, style=solid];
m49_117 -> m49_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_117 -> m49_269  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_117 -> m49_277  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_266 -> m49_267  [key=0, style=solid];
m49_266 -> m49_268  [key=0, style=solid];
m49_268 -> m49_269  [key=0, style=solid];
m49_268 -> m49_270  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m49_268 -> m49_297  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m49_268 -> m49_273  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m49_269 -> m49_270  [key=0, style=solid];
m49_269 -> m49_297  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m49_277 -> m49_278  [key=0, style=solid];
m49_277 -> m49_38  [key=2, style=dotted];
m49_267 -> m49_290  [key=0, style=solid];
m49_270 -> m49_271  [key=0, style=solid];
m49_270 -> m49_291  [key=2, style=dotted];
m49_270 -> m49_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_270 -> m49_273  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m49_270 -> m49_274  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m49_273 -> m49_274  [key=0, style=solid];
m49_273 -> m49_287  [color=darkseagreen4, key=1, label=inverted, style=dashed];
m49_271 -> m49_272  [key=0, style=solid];
m49_271 -> m49_273  [key=0, style=solid];
m49_274 -> m49_275  [key=0, style=solid];
m49_274 -> m49_292  [key=2, style=dotted];
m49_274 -> m49_285  [color=darkseagreen4, key=1, label=contract, style=dashed];
m49_272 -> m49_290  [key=0, style=solid];
m49_287 -> m49_288  [key=0, style=solid];
m49_287 -> m49_289  [key=0, style=solid];
m49_275 -> m49_276  [key=0, style=solid];
m49_275 -> m49_246  [key=2, style=dotted];
m49_285 -> m49_286  [key=0, style=solid];
m49_285 -> m49_295  [key=2, style=dotted];
m49_276 -> m49_277  [key=0, style=solid];
m49_276 -> m49_279  [key=0, style=solid];
m49_279 -> m49_280  [key=0, style=solid];
m49_279 -> m49_293  [key=2, style=dotted];
m49_279 -> m49_283  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m49_279 -> m49_300  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m49_279 -> m49_285  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m49_278 -> m49_290  [key=0, style=solid];
m49_280 -> m49_281  [key=0, style=solid];
m49_283 -> m49_284  [key=0, style=solid];
m49_283 -> m49_300  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.TickPriceEventArgs", style=dashed];
m49_283 -> m49_301  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.TickPriceEventArgs", style=dashed];
m49_283 -> m49_288  [color=darkseagreen4, key=1, label=rate, style=dashed];
m49_283 -> m49_289  [color=darkseagreen4, key=1, label=rate, style=dashed];
m49_281 -> m49_282  [key=0, style=solid];
m49_281 -> m49_75  [key=2, style=dotted];
m49_281 -> m49_283  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m49_281 -> m49_302  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m49_281 -> m49_286  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m49_282 -> m49_283  [key=0, style=solid];
m49_282 -> m49_294  [key=2, style=dotted];
m49_282 -> m49_285  [color=darkseagreen4, key=1, label=priceTick, style=dashed];
m49_286 -> m49_287  [key=0, style=solid];
m49_286 -> m49_77  [key=2, style=dotted];
m49_284 -> m49_285  [key=0, style=solid];
m49_288 -> m49_290  [key=0, style=solid];
m49_289 -> m49_290  [key=0, style=solid];
m49_290 -> m49_117  [color=blue, key=0, style=bold];
m49_293 -> m49_564  [key=0, style=solid];
m49_564 -> m49_565  [key=0, style=solid];
m49_564 -> m49_561  [key=2, style=dotted];
m49_565 -> m49_293  [color=blue, key=0, style=bold];
m49_450 -> m49_507  [key=0, style=solid];
m49_450 -> m49_520  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m49_507 -> m49_508  [key=0, style=solid];
m49_507 -> m49_510  [key=0, style=solid];
m49_507 -> m49_512  [key=0, style=solid];
m49_507 -> m49_514  [key=0, style=solid];
m49_507 -> m49_516  [key=0, style=solid];
m49_507 -> m49_518  [key=0, style=solid];
m49_507 -> m49_520  [key=0, style=solid];
m49_520 -> m49_521  [key=0, style=solid];
m49_520 -> m49_439  [key=2, style=dotted];
m49_508 -> m49_509  [key=0, style=solid];
m49_510 -> m49_511  [key=0, style=solid];
m49_512 -> m49_513  [key=0, style=solid];
m49_514 -> m49_515  [key=0, style=solid];
m49_516 -> m49_517  [key=0, style=solid];
m49_518 -> m49_519  [key=0, style=solid];
m49_509 -> m49_521  [key=0, style=solid];
m49_511 -> m49_521  [key=0, style=solid];
m49_513 -> m49_521  [key=0, style=solid];
m49_515 -> m49_521  [key=0, style=solid];
m49_517 -> m49_521  [key=0, style=solid];
m49_519 -> m49_521  [key=0, style=solid];
m49_519 -> m49_233  [key=2, style=dotted];
m49_521 -> m49_450  [color=blue, key=0, style=bold];
m49_47 -> m49_48  [key=0, style=solid];
m49_47 -> m49_49  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m49_47 -> m49_52  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m49_48 -> m49_49  [key=0, style=solid];
m49_48 -> m49_36  [key=2, style=dotted];
m49_49 -> m49_50  [key=0, style=solid];
m49_49 -> m49_51  [key=0, style=solid];
m49_49 -> m49_54  [key=0, style=solid];
m49_52 -> m49_53  [key=0, style=solid];
m49_52 -> m49_38  [key=2, style=dotted];
m49_50 -> m49_49  [key=0, style=solid];
m49_50 -> m49_56  [key=2, style=dotted];
m49_51 -> m49_52  [key=0, style=solid];
m49_54 -> m49_55  [key=0, style=solid];
m49_53 -> m49_55  [key=0, style=solid];
m49_55 -> m49_47  [color=blue, key=0, style=bold];
m49_210 -> m49_211  [key=0, style=solid];
m49_211 -> m49_212  [key=0, style=solid];
m49_211 -> m49_213  [key=2, style=dotted];
m49_212 -> m49_210  [color=blue, key=0, style=bold];
m49_37 -> m49_214  [key=0, style=solid];
m49_37 -> m49_217  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m49_37 -> m49_219  [color=darkseagreen4, key=1, label=bool, style=dashed];
m49_37 -> m49_221  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m49_37 -> m49_223  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m49_37 -> m49_224  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m49_37 -> m49_226  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m49_214 -> m49_215  [key=0, style=solid];
m49_214 -> m49_159  [key=2, style=dotted];
m49_217 -> m49_218  [key=0, style=solid];
m49_217 -> m49_230  [key=2, style=dotted];
m49_217 -> m49_227  [color=darkseagreen4, key=1, label=contract, style=dashed];
m49_219 -> m49_220  [key=0, style=solid];
m49_219 -> m49_223  [key=0, style=solid];
m49_221 -> m49_222  [key=0, style=solid];
m49_221 -> m49_158  [key=2, style=dotted];
m49_223 -> m49_224  [key=0, style=solid];
m49_223 -> m49_225  [key=0, style=solid];
m49_223 -> m49_232  [key=2, style=dotted];
m49_224 -> m49_226  [key=0, style=solid];
m49_226 -> m49_227  [key=0, style=solid];
m49_226 -> m49_234  [key=2, style=dotted];
m49_215 -> m49_216  [key=0, style=solid];
m49_215 -> m49_217  [key=0, style=solid];
m49_216 -> m49_228  [key=0, style=solid];
m49_216 -> m49_229  [key=2, style=dotted];
m49_218 -> m49_219  [key=0, style=solid];
m49_218 -> m49_226  [color=darkseagreen4, key=1, label=ibOrderID, style=dashed];
m49_227 -> m49_228  [key=0, style=solid];
m49_227 -> m49_235  [key=2, style=dotted];
m49_220 -> m49_221  [key=0, style=solid];
m49_220 -> m49_231  [key=2, style=dotted];
m49_220 -> m49_222  [color=darkseagreen4, key=1, label=id, style=dashed];
m49_222 -> m49_226  [key=0, style=solid];
m49_225 -> m49_228  [key=0, style=solid];
m49_225 -> m49_233  [key=2, style=dotted];
m49_228 -> m49_37  [color=blue, key=0, style=bold];
m49_391 -> m49_392  [key=0, style=solid];
m49_391 -> m49_393  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdatePortfolioEventArgs", style=dashed];
m49_391 -> m49_395  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdatePortfolioEventArgs", style=dashed];
m49_392 -> m49_393  [key=0, style=solid];
m49_392 -> m49_397  [key=2, style=dotted];
m49_393 -> m49_394  [key=0, style=solid];
m49_393 -> m49_398  [key=2, style=dotted];
m49_393 -> m49_395  [color=darkseagreen4, key=1, label=holding, style=dashed];
m49_395 -> m49_396  [key=0, style=solid];
m49_395 -> m49_399  [key=2, style=dotted];
m49_395 -> m49_400  [key=2, style=dotted];
m49_394 -> m49_395  [key=0, style=solid];
m49_396 -> m49_391  [color=blue, key=0, style=bold];
m49_60 -> m49_61  [key=0, style=solid];
m49_61 -> m49_62  [key=0, style=solid];
m49_61 -> m49_74  [key=2, style=dotted];
m49_61 -> m49_63  [color=red, key=1, label=orders, style=dashed];
m49_61 -> m49_80  [color=darkseagreen4, key=1, label=orders, style=dashed];
m49_61 -> m49_72  [color=red, key=1, label=orders, style=dashed];
m49_62 -> m49_63  [color=red, key=0, style=solid];
m49_62 -> m49_75  [key=2, style=dotted];
m49_62 -> m49_64  [color=red, key=1, label=manualResetEvent, style=dashed];
m49_62 -> m49_85  [color=red, key=1, label=manualResetEvent, style=dashed];
m49_62 -> m49_68  [color=red, key=1, label=manualResetEvent, style=dashed];
m49_63 -> m49_64  [color=red, key=0, style=solid];
m49_63 -> m49_80  [color=red, key=1, label="Krs.Ats.IBNet.OpenOrderEventArgs", style=dashed];
m49_63 -> m49_65  [color=red, key=1, label=clientOnOpenOrder, style=dashed];
m49_63 -> m49_70  [color=red, key=1, label=clientOnOpenOrder, style=dashed];
m49_72 -> m49_73  [color=red, key=0, style=solid];
m49_64 -> m49_65  [color=red, key=0, style=solid];
m49_64 -> m49_66  [color=red, key=1, label=clientOnOpenOrderEnd, style=dashed];
m49_64 -> m49_71  [color=red, key=1, label=clientOnOpenOrderEnd, style=dashed];
m49_68 -> m49_69  [color=red, key=0, style=solid];
m49_68 -> m49_70  [color=red, key=0, style=solid];
m49_68 -> m49_77  [color=red, key=2, style=dotted];
m49_65 -> m49_66  [color=red, key=0, style=solid];
m49_70 -> m49_71  [color=red, key=0, style=solid];
m49_66 -> m49_67  [color=red, key=0, style=solid];
m49_71 -> m49_72  [color=red, key=0, style=solid];
m49_67 -> m49_68  [color=red, key=0, style=solid];
m49_67 -> m49_76  [color=red, key=2, style=dotted];
m49_69 -> m49_73  [color=red, key=0, style=solid];
m49_69 -> m49_78  [color=red, key=2, style=dotted];
m49_73 -> m49_60  [color=blue, key=0, style=bold];
m49_28 -> m49_29  [key=0, style=solid];
m49_28 -> m49_30  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m49_29 -> m49_30  [key=0, style=solid];
m49_29 -> m49_36  [key=2, style=dotted];
m49_30 -> m49_31  [key=0, style=solid];
m49_30 -> m49_37  [key=2, style=dotted];
m49_31 -> m49_35  [key=0, style=solid];
m49_32 -> m49_33  [key=0, style=solid];
m49_33 -> m49_34  [key=0, style=solid];
m49_33 -> m49_38  [key=2, style=dotted];
m49_34 -> m49_35  [key=0, style=solid];
m49_35 -> m49_28  [color=blue, key=0, style=bold];
m49_128 -> m49_129  [key=0, style=solid];
m49_129 -> m49_130  [key=0, style=solid];
m49_129 -> m49_146  [key=2, style=dotted];
m49_129 -> m49_139  [color=darkseagreen4, key=1, label=filter, style=dashed];
m49_130 -> m49_131  [key=0, style=solid];
m49_130 -> m49_74  [key=2, style=dotted];
m49_130 -> m49_136  [color=darkseagreen4, key=1, label=details, style=dashed];
m49_130 -> m49_156  [color=darkseagreen4, key=1, label=details, style=dashed];
m49_130 -> m49_144  [color=darkseagreen4, key=1, label=details, style=dashed];
m49_139 -> m49_140  [key=0, style=solid];
m49_139 -> m49_149  [key=2, style=dotted];
m49_131 -> m49_132  [key=0, style=solid];
m49_131 -> m49_19  [key=2, style=dotted];
m49_131 -> m49_137  [color=red, key=1, label=client, style=dashed];
m49_136 -> m49_137  [color=red, key=0, style=solid];
m49_136 -> m49_155  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecDetailsEventArgs", style=dashed];
m49_136 -> m49_156  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecDetailsEventArgs", style=dashed];
m49_136 -> m49_142  [color=darkseagreen4, key=1, label=clientOnExecDetails, style=dashed];
m49_144 -> m49_145  [key=0, style=solid];
m49_132 -> m49_133  [key=0, style=solid];
m49_132 -> m49_18  [key=2, style=dotted];
m49_132 -> m49_147  [key=2, style=dotted];
m49_137 -> m49_138  [color=red, key=0, style=solid];
m49_137 -> m49_137  [color=red, key=1, label=client, style=dashed];
m49_133 -> m49_134  [key=0, style=solid];
m49_133 -> m49_75  [key=2, style=dotted];
m49_133 -> m49_135  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m49_133 -> m49_152  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m49_133 -> m49_140  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m49_134 -> m49_135  [key=0, style=solid];
m49_134 -> m49_148  [key=2, style=dotted];
m49_134 -> m49_151  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m49_134 -> m49_136  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m49_134 -> m49_155  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m49_134 -> m49_139  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m49_135 -> m49_136  [key=0, style=solid];
m49_135 -> m49_151  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecutionDataEndEventArgs", style=dashed];
m49_135 -> m49_138  [color=darkseagreen4, key=1, label=clientOnExecutionDataEnd, style=dashed];
m49_135 -> m49_143  [color=darkseagreen4, key=1, label=clientOnExecutionDataEnd, style=dashed];
m49_140 -> m49_141  [key=0, style=solid];
m49_140 -> m49_142  [key=0, style=solid];
m49_140 -> m49_77  [key=2, style=dotted];
m49_138 -> m49_139  [key=0, style=solid];
m49_138 -> m49_138  [color=darkseagreen4, key=1, label=client, style=dashed];
m49_138 -> m49_142  [color=darkseagreen4, key=1, label=client, style=dashed];
m49_143 -> m49_144  [key=0, style=solid];
m49_143 -> m49_143  [color=darkseagreen4, key=1, label=client, style=dashed];
m49_142 -> m49_143  [key=0, style=solid];
m49_142 -> m49_142  [color=darkseagreen4, key=1, label=client, style=dashed];
m49_141 -> m49_145  [key=0, style=solid];
m49_141 -> m49_78  [key=2, style=dotted];
m49_145 -> m49_128  [color=blue, key=0, style=bold];
m49_398 -> m49_545  [key=0, style=solid];
m49_398 -> m49_546  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdatePortfolioEventArgs", style=dashed];
m49_398 -> m49_548  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdatePortfolioEventArgs", style=dashed];
m49_545 -> m49_546  [key=0, style=solid];
m49_546 -> m49_547  [key=0, style=solid];
m49_546 -> m49_548  [key=0, style=solid];
m49_546 -> m49_245  [key=2, style=dotted];
m49_548 -> m49_549  [key=0, style=solid];
m49_548 -> m49_550  [key=2, style=dotted];
m49_548 -> m49_551  [key=2, style=dotted];
m49_548 -> m49_440  [key=2, style=dotted];
m49_547 -> m49_548  [key=0, style=solid];
m49_549 -> m49_398  [color=blue, key=0, style=bold];
m49_411 -> m49_454  [key=0, style=solid];
m49_411 -> m49_461  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m49_454 -> m49_455  [key=0, style=solid];
m49_454 -> m49_457  [key=0, style=solid];
m49_454 -> m49_459  [key=0, style=solid];
m49_454 -> m49_461  [key=0, style=solid];
m49_461 -> m49_462  [key=0, style=solid];
m49_461 -> m49_439  [key=2, style=dotted];
m49_455 -> m49_456  [key=0, style=solid];
m49_457 -> m49_458  [key=0, style=solid];
m49_459 -> m49_460  [key=0, style=solid];
m49_456 -> m49_462  [key=0, style=solid];
m49_458 -> m49_462  [key=0, style=solid];
m49_460 -> m49_462  [key=0, style=solid];
m49_462 -> m49_411  [color=blue, key=0, style=bold];
m49_159 -> m49_160  [key=0, style=solid];
m49_160 -> m49_161  [key=0, style=solid];
m49_160 -> m49_162  [key=0, style=solid];
m49_161 -> m49_187  [key=0, style=solid];
m49_162 -> m49_163  [key=0, style=solid];
m49_162 -> m49_188  [key=2, style=dotted];
m49_163 -> m49_164  [key=0, style=solid];
m49_163 -> m49_188  [key=2, style=dotted];
m49_164 -> m49_165  [key=0, style=solid];
m49_164 -> m49_166  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m49_164 -> m49_169  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m49_165 -> m49_166  [key=0, style=solid];
m49_165 -> m49_173  [key=0, style=solid];
m49_166 -> m49_167  [key=0, style=solid];
m49_166 -> m49_36  [key=2, style=dotted];
m49_169 -> m49_170  [key=0, style=solid];
m49_169 -> m49_171  [key=0, style=solid];
m49_169 -> m49_169  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m49_173 -> m49_174  [key=0, style=solid];
m49_173 -> m49_175  [key=0, style=solid];
m49_173 -> m49_77  [key=2, style=dotted];
m49_167 -> m49_173  [key=0, style=solid];
m49_167 -> m49_147  [key=2, style=dotted];
m49_168 -> m49_169  [key=0, style=solid];
m49_170 -> m49_165  [key=0, style=solid];
m49_170 -> m49_189  [key=2, style=dotted];
m49_171 -> m49_172  [key=0, style=solid];
m49_171 -> m49_38  [key=2, style=dotted];
m49_172 -> m49_187  [key=0, style=solid];
m49_174 -> m49_187  [key=0, style=solid];
m49_174 -> m49_78  [key=2, style=dotted];
m49_175 -> m49_176  [key=0, style=solid];
m49_175 -> m49_192  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.AccountDownloadEndEventArgs", style=dashed];
m49_175 -> m49_185  [color=darkseagreen4, key=1, label=clientOnAccountDownloadEnd, style=dashed];
m49_176 -> m49_177  [key=0, style=solid];
m49_185 -> m49_186  [key=0, style=solid];
m49_177 -> m49_178  [key=0, style=solid];
m49_177 -> m49_75  [key=2, style=dotted];
m49_177 -> m49_196  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m49_177 -> m49_181  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m49_178 -> m49_179  [key=0, style=solid];
m49_178 -> m49_186  [color=darkseagreen4, key=1, label=clientOnUpdateAccountValue, style=dashed];
m49_181 -> m49_182  [key=0, style=solid];
m49_181 -> m49_77  [key=2, style=dotted];
m49_179 -> m49_180  [key=0, style=solid];
m49_186 -> m49_187  [key=0, style=solid];
m49_180 -> m49_181  [key=0, style=solid];
m49_180 -> m49_190  [key=2, style=dotted];
m49_182 -> m49_183  [key=0, style=solid];
m49_182 -> m49_189  [key=2, style=dotted];
m49_183 -> m49_184  [key=0, style=solid];
m49_183 -> m49_185  [key=0, style=solid];
m49_183 -> m49_77  [key=2, style=dotted];
m49_184 -> m49_187  [key=0, style=solid];
m49_184 -> m49_78  [key=2, style=dotted];
m49_187 -> m49_159  [color=blue, key=0, style=bold];
m49_304 -> m49_305  [key=0, style=solid];
m49_305 -> m49_306  [key=0, style=solid];
m49_305 -> m49_324  [key=2, style=dotted];
m49_305 -> m49_305  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m49_305 -> m49_308  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m49_305 -> m49_310  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m49_305 -> m49_312  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m49_305 -> m49_315  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m49_305 -> m49_317  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m49_305 -> m49_318  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m49_305 -> m49_319  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m49_305 -> m49_322  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m49_306 -> m49_307  [key=0, style=solid];
m49_306 -> m49_325  [key=2, style=dotted];
m49_306 -> m49_36  [key=2, style=dotted];
m49_308 -> m49_309  [key=0, style=solid];
m49_308 -> m49_310  [key=0, style=solid];
m49_308 -> m49_326  [key=2, style=dotted];
m49_310 -> m49_311  [key=0, style=solid];
m49_310 -> m49_312  [key=0, style=solid];
m49_310 -> m49_326  [key=2, style=dotted];
m49_312 -> m49_313  [key=0, style=solid];
m49_312 -> m49_315  [key=0, style=solid];
m49_315 -> m49_316  [key=0, style=solid];
m49_315 -> m49_317  [key=0, style=solid];
m49_317 -> m49_318  [key=0, style=solid];
m49_317 -> m49_322  [key=0, style=solid];
m49_317 -> m49_326  [key=2, style=dotted];
m49_318 -> m49_319  [key=0, style=solid];
m49_318 -> m49_325  [key=2, style=dotted];
m49_318 -> m49_36  [key=2, style=dotted];
m49_319 -> m49_320  [key=0, style=solid];
m49_319 -> m49_330  [key=2, style=dotted];
m49_322 -> m49_323  [key=0, style=solid];
m49_322 -> m49_333  [key=2, style=dotted];
m49_322 -> m49_334  [key=2, style=dotted];
m49_307 -> m49_308  [key=0, style=solid];
m49_307 -> m49_322  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m49_309 -> m49_312  [key=0, style=solid];
m49_309 -> m49_322  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m49_311 -> m49_312  [key=0, style=solid];
m49_311 -> m49_322  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m49_313 -> m49_314  [key=0, style=solid];
m49_314 -> m49_317  [key=0, style=solid];
m49_314 -> m49_327  [key=2, style=dotted];
m49_314 -> m49_328  [key=2, style=dotted];
m49_314 -> m49_329  [key=2, style=dotted];
m49_314 -> m49_335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_316 -> m49_317  [key=0, style=solid];
m49_320 -> m49_321  [key=0, style=solid];
m49_320 -> m49_331  [key=2, style=dotted];
m49_321 -> m49_322  [key=0, style=solid];
m49_321 -> m49_332  [key=2, style=dotted];
m49_323 -> m49_304  [color=blue, key=0, style=bold];
m49_236 -> m49_237  [key=0, style=solid];
m49_236 -> m49_238  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m49_236 -> m49_240  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m49_237 -> m49_238  [key=0, style=solid];
m49_238 -> m49_239  [key=0, style=solid];
m49_238 -> m49_240  [key=0, style=solid];
m49_238 -> m49_245  [key=2, style=dotted];
m49_240 -> m49_241  [key=0, style=solid];
m49_240 -> m49_246  [key=2, style=dotted];
m49_240 -> m49_243  [color=darkseagreen4, key=1, label=details, style=dashed];
m49_239 -> m49_244  [key=0, style=solid];
m49_241 -> m49_242  [key=0, style=solid];
m49_241 -> m49_243  [key=0, style=solid];
m49_243 -> m49_244  [key=0, style=solid];
m49_242 -> m49_244  [key=0, style=solid];
m49_244 -> m49_236  [color=blue, key=0, style=bold];
m49_148 -> m49_562  [key=0, style=solid];
m49_562 -> m49_563  [key=0, style=solid];
m49_562 -> m49_561  [key=2, style=dotted];
m49_563 -> m49_148  [color=blue, key=0, style=bold];
m49_230 -> m49_441  [key=0, style=solid];
m49_230 -> m49_442  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_230 -> m49_443  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m49_230 -> m49_445  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_230 -> m49_446  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_441 -> m49_442  [key=0, style=solid];
m49_441 -> m49_450  [key=2, style=dotted];
m49_442 -> m49_443  [key=0, style=solid];
m49_442 -> m49_451  [key=2, style=dotted];
m49_442 -> m49_444  [color=darkseagreen4, key=1, label=contract, style=dashed];
m49_442 -> m49_447  [color=darkseagreen4, key=1, label=contract, style=dashed];
m49_443 -> m49_444  [key=0, style=solid];
m49_443 -> m49_447  [key=0, style=solid];
m49_445 -> m49_446  [key=0, style=solid];
m49_445 -> m49_452  [key=2, style=dotted];
m49_445 -> m49_445  [color=darkseagreen4, key=1, label=contract, style=dashed];
m49_446 -> m49_447  [key=0, style=solid];
m49_446 -> m49_453  [key=2, style=dotted];
m49_446 -> m49_446  [color=darkseagreen4, key=1, label=contract, style=dashed];
m49_444 -> m49_445  [key=0, style=solid];
m49_444 -> m49_444  [color=darkseagreen4, key=1, label=contract, style=dashed];
m49_447 -> m49_448  [key=0, style=solid];
m49_447 -> m49_236  [key=2, style=dotted];
m49_447 -> m49_447  [color=darkseagreen4, key=1, label=contract, style=dashed];
m49_448 -> m49_449  [key=0, style=solid];
m49_449 -> m49_230  [color=blue, key=0, style=bold];
m49_0 -> m49_1  [key=0, style=solid];
m49_1 -> m49_0  [color=blue, key=0, style=bold];
m49_591 -> m49_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_7  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_8  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_13  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_14  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_16  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_23  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_41  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_50  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_63  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_80  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_65  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_66  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_67  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_70  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_71  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_88  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_89  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_110  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_115  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_122  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_125  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_129  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_132  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_134  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_160  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_162  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_163  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_167  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_173  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_175  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_193  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_176  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_179  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_180  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_185  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_199  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_205  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_207  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_211  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_214  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_215  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_217  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_220  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_226  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_227  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_238  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_240  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_248  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_250  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_262  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_251  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_252  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_254  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_274  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_275  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_279  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_284  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_285  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_312  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_313  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_314  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_336  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_316  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_319  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_321  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_322  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_339  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_340  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_341  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_343  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_348  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_351  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_354  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_355  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_366  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_372  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_380  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_381  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_392  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_393  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_394  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_395  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_401  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_417  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_428  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_441  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_447  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_548  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_556  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_558  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_562  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_591 -> m49_564  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m49_592 -> m49_80  [color=darkseagreen4, key=1, label=orders, style=dashed];
m49_593 -> m49_85  [color=red, key=1, label=manualResetEvent, style=dashed];
m49_594 -> m49_115  [color=darkseagreen4, key=1, label="?", style=dashed];
m49_595 -> m49_115  [color=darkseagreen4, key=1, label=currency, style=dashed];
m49_596 -> m49_151  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m49_596 -> m49_155  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m49_597 -> m49_152  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m49_598 -> m49_156  [color=darkseagreen4, key=1, label=details, style=dashed];
m49_599 -> m49_196  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m49_600 -> m49_259  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m49_601 -> m49_262  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m49_602 -> m49_263  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m49_603 -> m49_297  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m49_604 -> m49_297  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m49_605 -> m49_300  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m49_606 -> m49_302  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m49_607 -> m49_575  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m49_607 -> m49_576  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m49_607 -> m49_577  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m49_607 -> m49_581  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m49_607 -> m49_582  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m49_607 -> m49_583  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m49_607 -> m49_584  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m50_6 -> m50_7  [key=0, style=solid];
m50_7 -> m50_6  [color=blue, key=0, style=bold];
m50_8 -> m50_9  [key=0, style=solid];
m50_8 -> m50_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m50_8 -> m50_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m50_9 -> m50_10  [key=0, style=solid];
m50_9 -> m50_12  [key=0, style=solid];
m50_10 -> m50_11  [key=0, style=solid];
m50_10 -> m50_14  [key=2, style=dotted];
m50_12 -> m50_13  [key=0, style=solid];
m50_11 -> m50_13  [key=0, style=solid];
m50_13 -> m50_8  [color=blue, key=0, style=bold];
m50_0 -> m50_1  [key=0, style=solid];
m50_0 -> m50_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m50_0 -> m50_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_1 -> m50_2  [key=0, style=solid];
m50_2 -> m50_3  [key=0, style=solid];
m50_3 -> m50_4  [key=0, style=solid];
m50_3 -> m50_5  [key=2, style=dotted];
m50_4 -> m50_0  [color=blue, key=0, style=bold];
m50_15 -> m50_1  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.WilderMovingAverage", style=dashed];
m50_15 -> m50_2  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.WilderMovingAverage", style=dashed];
m50_15 -> m50_3  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.WilderMovingAverage", style=dashed];
m50_15 -> m50_9  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.WilderMovingAverage", style=dashed];
m50_15 -> m50_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.WilderMovingAverage", style=dashed];
m50_15 -> m50_11  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.WilderMovingAverage", style=dashed];
m50_15 -> m50_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.WilderMovingAverage", style=dashed];
}
