digraph  {
n44 [label="QuantConnect.Indicators.IndicatorDataPoint", span=""];
n0 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()", span="29-29", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()"];
n1 [label="Value = 0m", span="31-31", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()"];
n2 [label="Time = DateTime.MinValue", span="32-32", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()"];
n3 [label="Exit QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()", span="29-29", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()"];
n4 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="40-40", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)"];
n5 [label="Time = time", span="42-42", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)"];
n6 [label="Value = value", span="43-43", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)"];
n7 [label="Exit QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="40-40", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)"];
n8 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", span="52-52", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)"];
n9 [label="Symbol = symbol", span="54-54", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)"];
n10 [label="Time = time", span="55-55", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)"];
n11 [label="Value = value", span="56-56", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)"];
n12 [label="Exit QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", span="52-52", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)"];
n13 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)", span="66-66", cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)"];
n14 [label="other == null", span="68-68", cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)"];
n16 [label="return other.Time == Time && other.Value == Value;", span="72-72", cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)"];
n15 [label="return false;", span="70-70", cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)"];
n17 [label="Exit QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)", span="66-66", cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)"];
n18 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.ToString()", span="82-82", cluster="QuantConnect.Indicators.IndicatorDataPoint.ToString()"];
n19 [label="return string.Format(''{0} - {1}'', Time.ToString(''s''), Value);", span="84-84", cluster="QuantConnect.Indicators.IndicatorDataPoint.ToString()"];
n20 [label="Exit QuantConnect.Indicators.IndicatorDataPoint.ToString()", span="82-82", cluster="QuantConnect.Indicators.IndicatorDataPoint.ToString()"];
n21 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)"];
n22 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
n23 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.Equals(object)", span="95-95", cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(object)"];
n24 [label="ReferenceEquals(null, obj)", span="97-97", cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(object)"];
n26 [label="return obj is IndicatorDataPoint && Equals((IndicatorDataPoint) obj);", span="98-98", cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(object)"];
n25 [label="return false;", span="97-97", cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(object)"];
n28 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)"];
n27 [label="Exit QuantConnect.Indicators.IndicatorDataPoint.Equals(object)", span="95-95", cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(object)"];
n29 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.GetHashCode()", span="108-108", cluster="QuantConnect.Indicators.IndicatorDataPoint.GetHashCode()"];
n30 [label="return (Value.GetHashCode()*397) ^ Time.GetHashCode();", span="112-112", cluster="QuantConnect.Indicators.IndicatorDataPoint.GetHashCode()"];
n31 [label="Exit QuantConnect.Indicators.IndicatorDataPoint.GetHashCode()", span="108-108", cluster="QuantConnect.Indicators.IndicatorDataPoint.GetHashCode()"];
n32 [label="Entry decimal.GetHashCode()", span="0-0", cluster="decimal.GetHashCode()"];
n33 [label="Entry System.DateTime.GetHashCode()", span="0-0", cluster="System.DateTime.GetHashCode()"];
n34 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.implicit operator decimal(QuantConnect.Indicators.IndicatorDataPoint)", span="121-121", cluster="QuantConnect.Indicators.IndicatorDataPoint.implicit operator decimal(QuantConnect.Indicators.IndicatorDataPoint)"];
n35 [label="return instance.Value;", span="123-123", cluster="QuantConnect.Indicators.IndicatorDataPoint.implicit operator decimal(QuantConnect.Indicators.IndicatorDataPoint)"];
n36 [label="Exit QuantConnect.Indicators.IndicatorDataPoint.implicit operator decimal(QuantConnect.Indicators.IndicatorDataPoint)", span="121-121", cluster="QuantConnect.Indicators.IndicatorDataPoint.implicit operator decimal(QuantConnect.Indicators.IndicatorDataPoint)"];
n37 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="129-129", cluster="QuantConnect.Indicators.IndicatorDataPoint.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)"];
n38 [label="throw new NotImplementedException(''IndicatorDataPoint does not support the Reader function. This function should never be called on this type.'');", span="131-131", cluster="QuantConnect.Indicators.IndicatorDataPoint.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)"];
n39 [label="Exit QuantConnect.Indicators.IndicatorDataPoint.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="129-129", cluster="QuantConnect.Indicators.IndicatorDataPoint.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)"];
n40 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)"];
n41 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="137-137", cluster="QuantConnect.Indicators.IndicatorDataPoint.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)"];
n42 [label="throw new NotImplementedException(''IndicatorDataPoint does not support the GetSource function. This function should never be called on this type.'');", span="139-139", cluster="QuantConnect.Indicators.IndicatorDataPoint.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)"];
n43 [label="Exit QuantConnect.Indicators.IndicatorDataPoint.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="137-137", cluster="QuantConnect.Indicators.IndicatorDataPoint.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)"];
d68 [label="securities.Add(config.Symbol, security)", span="211-211", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0];
d26 [label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="133-133", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d60 [label="var config = subscriptions.Add(objectType, TickType.Quote, symbol, minimumResolution, marketHoursDbEntry.DataTimeZone, exchangeHours.TimeZone, false, true, false, true)", span="195-195", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d64 [label="security = new Cfd.Cfd(exchangeHours, quoteCash, config, symbolProperties)", span="201-201", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d66 [label="security = new Crypto.Crypto(exchangeHours, quoteCash, config, symbolProperties)", span="205-205", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0];
d67 [label="security = new Forex.Forex(exchangeHours, quoteCash, config, symbolProperties)", span="209-209", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0];
d69 [label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol.Value + '' for cash '' + Symbol + '' currency feed'')", span="212-212", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0];
d90 [label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68", cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)"];
d137 [label="QuantConnect.Securities.Cash", span=""];
d50 [label=potentials, span="180-180", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d70 [label="return security;", span="213-213", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0];
d91 [label="Entry Unk.Trace", span="", cluster="Unk.Trace"];
d54 [label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, securityType, Symbol)", span="186-186", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d56 [label="!cashBook.TryGetValue(symbolProperties.QuoteCurrency, out quoteCash)", span="188-188", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d65 [label="securityType == SecurityType.Crypto", span="203-203", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d59 [label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="193-193", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d88 [label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37", cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)"];
d89 [label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)"];
d72 [label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="133-133", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d27 [label="Symbol == CashBook.AccountCurrency", span="135-135", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d34 [label="subscriptions.Subscriptions.Where(config => config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto)", span="146-147", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d42 [label="var markets = securities.Keys.GroupBy(x => x.SecurityType).ToDictionary(x => x.Key, y => y.First().ID.Market)", span="164-164", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d47 [label="var potentials = Currencies.CurrencyPairs.Select(fx => CreateSymbol(marketMap, fx, markets, SecurityType.Forex))\r\n                .Concat(Currencies.CfdCurrencyPairs.Select(cfd => CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)))\r\n                .Concat(Currencies.CryptoCurrencyPairs.Select(crypto => CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)))", span="174-176", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d107 [label="CreateSymbol(marketMap, fx, markets, SecurityType.Forex)", span="174-174", cluster="lambda expression"];
d111 [label="CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)", span="175-175", cluster="lambda expression"];
d114 [label="CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)", span="176-176", cluster="lambda expression"];
d48 [label="var minimumResolution = subscriptions.Subscriptions.Select(x => x.Resolution).DefaultIfEmpty(Resolution.Minute).Min()", span="178-178", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d58 [label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="192-192", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d49 [label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (QuoteBar)", span="179-179", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d61 [label="SecuritySymbol = config.Symbol", span="196-196", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d77 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
d63 [label="securityType == SecurityType.Cfd", span="199-199", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d87 [label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36", cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)"];
d3 [label="Amount = amount", span="74-74", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)"];
d4 [label="ConversionRate = conversionRate", span="75-75", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)"];
d5 [label="Symbol = symbol.ToUpper()", span="76-76", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)"];
d10 [label=_isBaseCurrency, span="85-85", cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)"];
d13 [label=_invertRealTimePrice, span="88-88", cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)"];
d15 [label="ConversionRate = rate", span="92-92", cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)"];
d18 [label=_locker, span="103-103", cluster="QuantConnect.Securities.Cash.AddAmount(decimal)"];
d19 [label="Amount += amount", span="105-105", cluster="QuantConnect.Securities.Cash.AddAmount(decimal)"];
d20 [label="return Amount;", span="106-106", cluster="QuantConnect.Securities.Cash.AddAmount(decimal)"];
d23 [label=_locker, span="116-116", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)"];
d24 [label="Amount = amount", span="118-118", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)"];
d28 [label="SecuritySymbol = QuantConnect.Symbol.Empty", span="137-137", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d29 [label="_isBaseCurrency = true", span="138-138", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d30 [label="ConversionRate = 1.0m", span="139-139", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d32 [label="string normal = Symbol + CashBook.AccountCurrency", span="144-144", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d33 [label="string invert = CashBook.AccountCurrency + Symbol", span="145-145", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d36 [label="SecuritySymbol = config.Symbol", span="151-151", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d39 [label="SecuritySymbol = config.Symbol", span="156-156", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d40 [label="_invertRealTimePrice = true", span="157-157", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d52 [label="_invertRealTimePrice = symbol.Value == invert", span="184-184", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d71 [label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", span="218-218", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d120 [label="decimal rate = ConversionRate", span="228-228", cluster="QuantConnect.Securities.Cash.ToString()"];
d122 [label="return string.Format(''{0}: {1,15} @ ${2,10} = {3}{4}'',\r\n                Symbol,\r\n                Amount.ToString(''0.00''),\r\n                rate.ToString(''0.00####''),\r\n                Currencies.GetCurrencySymbol(Symbol),\r\n                Math.Round(ValueInAccountCurrency, 2)\r\n                );", span="230-236", cluster="QuantConnect.Securities.Cash.ToString()"];
d51 [label="symbol.Value == normal || symbol.Value == invert", span="182-182", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d53 [label="var securityType = symbol.ID.SecurityType", span="185-185", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d57 [label="throw new Exception(''Unable to resolve quote cash: '' + symbolProperties.QuoteCurrency + ''. This is required to add conversion feed: '' + symbol.ToString());", span="190-190", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d55 [label="Cash quoteCash", span="187-187", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d82 [label="Entry Unk.GetSymbolProperties", span="", cluster="Unk.GetSymbolProperties"];
d83 [label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)"];
d31 [label="return null;", span="140-140", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d37 [label="return null;", span="152-152", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d41 [label="return null;", span="158-158", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d38 [label="config.Symbol.Value == invert", span="154-154", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d35 [label="config.Symbol.Value == normal", span="149-149", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d73 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
d93 [label="Entry lambda expression", span="146-147", cluster="lambda expression"];
d43 [label="markets.ContainsKey(SecurityType.Cfd) && !markets.ContainsKey(SecurityType.Forex)", span="165-165", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d74 [label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)"];
d75 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary"];
d96 [label="Entry lambda expression", span="164-164", cluster="lambda expression"];
d99 [label="Entry lambda expression", span="164-164", cluster="lambda expression"];
d102 [label="Entry lambda expression", span="164-164", cluster="lambda expression"];
d44 [label="markets.Add(SecurityType.Forex, markets[SecurityType.Cfd])", span="167-167", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d45 [label="markets.ContainsKey(SecurityType.Forex) && !markets.ContainsKey(SecurityType.Cfd)", span="169-169", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d46 [label="markets.Add(SecurityType.Cfd, markets[SecurityType.Forex])", span="171-171", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d78 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
d79 [label="Entry Unk.Concat", span="", cluster="Unk.Concat"];
d106 [label="Entry lambda expression", span="174-174", cluster="lambda expression"];
d110 [label="Entry lambda expression", span="175-175", cluster="lambda expression"];
d113 [label="Entry lambda expression", span="176-176", cluster="lambda expression"];
d138 [label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", span=""];
d139 [label=markets, span=""];
d108 [label="Exit lambda expression", span="174-174", cluster="lambda expression"];
d109 [label="Entry Unk.CreateSymbol", span="", cluster="Unk.CreateSymbol"];
d112 [label="Exit lambda expression", span="175-175", cluster="lambda expression"];
d115 [label="Exit lambda expression", span="176-176", cluster="lambda expression"];
d80 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty"];
d81 [label="Entry Unk.Min", span="", cluster="Unk.Min"];
d116 [label="Entry lambda expression", span="178-178", cluster="lambda expression"];
d86 [label="Entry Unk.GetEntry", span="", cluster="Unk.GetEntry"];
d62 [label="Security security", span="198-198", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)"];
d0 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)"];
d1 [label="symbol == null || symbol.Length != 3", span="70-70", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)"];
d6 [label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)"];
d8 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()"];
d9 [label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83", cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)"];
d11 [label="return;", span="85-85", cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)"];
d12 [label="var rate = data.Value", span="87-87", cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)"];
d14 [label="rate = 1/rate", span="90-90", cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)"];
d16 [label="Exit QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83", cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)"];
d17 [label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="101-101", cluster="QuantConnect.Securities.Cash.AddAmount(decimal)"];
d21 [label="Exit QuantConnect.Securities.Cash.AddAmount(decimal)", span="101-101", cluster="QuantConnect.Securities.Cash.AddAmount(decimal)"];
d22 [label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)"];
d25 [label="Exit QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)"];
d7 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)"];
d92 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
d119 [label="Entry QuantConnect.Securities.Cash.ToString()", span="225-225", cluster="QuantConnect.Securities.Cash.ToString()"];
d121 [label="rate = rate < 1000 ? rate.RoundToSignificantDigits(5) : Math.Round(rate, 2)", span="229-229", cluster="QuantConnect.Securities.Cash.ToString()"];
d123 [label="Exit QuantConnect.Securities.Cash.ToString()", span="225-225", cluster="QuantConnect.Securities.Cash.ToString()"];
d126 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)"];
d127 [label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="299-299", cluster="QuantConnect.Currencies.GetCurrencySymbol(string)"];
d125 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)"];
d128 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])"];
d84 [label="Entry Exception.cstr", span="", cluster="Exception.cstr"];
d85 [label="Entry Unk.ToString", span="", cluster="Unk.ToString"];
d95 [label="Exit lambda expression", span="146-147", cluster="lambda expression"];
d94 [label="config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto", span="146-147", cluster="lambda expression"];
d76 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey"];
d98 [label="Exit lambda expression", span="164-164", cluster="lambda expression"];
d97 [label="x.SecurityType", span="164-164", cluster="lambda expression"];
d101 [label="Exit lambda expression", span="164-164", cluster="lambda expression"];
d100 [label="x.Key", span="164-164", cluster="lambda expression"];
d104 [label="Exit lambda expression", span="164-164", cluster="lambda expression"];
d103 [label="y.First().ID.Market", span="164-164", cluster="lambda expression"];
d118 [label="Exit lambda expression", span="178-178", cluster="lambda expression"];
d117 [label="x.Resolution", span="178-178", cluster="lambda expression"];
d2 [label="throw new ArgumentException(''Cash symbols must be exactly 3 characters.'');", span="72-72", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)"];
d124 [label="Entry decimal.RoundToSignificantDigits(int)", span="195-195", cluster="decimal.RoundToSignificantDigits(int)"];
d105 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
m0_160 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BacktestingBrokerage.cs"];
m0_182 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="395-395", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BacktestingBrokerage.cs"];
m0_183 [label="MarketSimulation?.SimulateMarketConditions(this, Algorithm)", span="398-398", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BacktestingBrokerage.cs"];
m0_184 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="395-395", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BacktestingBrokerage.cs"];
m0_175 [label="Entry Unk.All", span="", cluster="Unk.All", file="BacktestingBrokerage.cs"];
m0_203 [label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113", cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs"];
m0_52 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="BacktestingBrokerage.cs"];
m0_56 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="423-423", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs"];
m0_198 [label="e.Status.IsClosed() && _pendingOptionAssignments.Contains(e.Symbol)", span="425-425", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs"];
m0_199 [label="_pendingOptionAssignments.Remove(e.Symbol)", span="427-427", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs"];
m0_200 [label="base.OnOrderEvent(e)", span="430-430", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs"];
m0_201 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="423-423", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs"];
m0_159 [label="Entry QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="48-48", cluster="QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_164 [label="Entry QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="38-38", cluster="QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BacktestingBrokerage.cs"];
m0_163 [label="Entry QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="54-54", cluster="QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BacktestingBrokerage.cs"];
m0_195 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="BacktestingBrokerage.cs"];
m0_210 [label="Entry QuantConnect.Orders.Order.Clone()", span="241-241", cluster="QuantConnect.Orders.Order.Clone()", file="BacktestingBrokerage.cs"];
m0_179 [label="Entry lambda expression", span="377-377", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_24 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_25 [label="x.Value.Symbol", span="108-108", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_26 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_31 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_32 [label="x.Value", span="119-119", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_33 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_176 [label="Entry lambda expression", span="245-245", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_177 [label="x.Key", span="245-245", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_178 [label="Exit lambda expression", span="245-245", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_180 [label="x.Status.IsClosed()", span="377-377", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_181 [label="Exit lambda expression", span="377-377", cluster="lambda expression", file="BacktestingBrokerage.cs"];
m0_34 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_35 [label="Algorithm.LiveMode", span="129-129", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_36 [label="Log.Trace(''BacktestingBrokerage.PlaceOrder(): Type: '' + order.Type + '' Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="131-131", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_37 [label="order.Status == OrderStatus.New", span="134-134", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_40 [label="SetPendingOrder(order)", span="139-139", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_41 [label="var orderId = order.Id.ToString()", span="142-142", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_42 [label="!order.BrokerId.Contains(orderId)", span="143-143", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_43 [label="order.BrokerId.Add(orderId)", span="143-143", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_45 [label="var submitted = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="147-147", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_38 [label=_needsScanLock, span="136-136", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_48 [label="return false;", span="152-152", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_39 [label="_needsScan = true", span="138-138", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_44 [label="int orderFee = 0", span="146-146", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_46 [label="OnOrderEvent(submitted)", span="148-148", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_47 [label="return true;", span="150-150", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_49 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_27 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="117-117", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BacktestingBrokerage.cs"];
m0_28 [label="return Algorithm.Portfolio.CashBook.Select(x => x.Value).ToList();", span="119-119", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BacktestingBrokerage.cs"];
m0_29 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="117-117", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BacktestingBrokerage.cs"];
m0_155 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BacktestingBrokerage.cs"];
m0_5 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="62-62", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs"];
m0_6 [label="Algorithm = algorithm", span="65-65", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs"];
m0_7 [label="_pending = new ConcurrentDictionary<int, Order>()", span="66-66", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs"];
m0_8 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="62-62", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs"];
m0_158 [label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78", cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_185 [label="Entry QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="31-31", cluster="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs"];
m0_14 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="96-96", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BacktestingBrokerage.cs"];
m0_15 [label="return Algorithm.Transactions.GetOpenOrders();", span="98-98", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BacktestingBrokerage.cs"];
m0_16 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="96-96", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BacktestingBrokerage.cs"];
m0_202 [label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="BacktestingBrokerage.cs"];
m0_174 [label="Entry QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", span="132-132", cluster="QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs"];
m0_23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="BacktestingBrokerage.cs"];
m0_91 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_92 [label=_needsScanLock, span="234-234", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_93 [label="!_needsScan", span="237-237", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_94 [label="return;", span="239-239", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_95 [label="var stillNeedsScan = false", span="242-242", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_96 [label="_pending.OrderBy(x => x.Key)", span="245-245", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_153 [label="_needsScan = stillNeedsScan", span="388-388", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_97 [label="var order = kvp.Value", span="247-247", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_98 [label="order == null", span="248-248", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_99 [label="Log.Error(''BacktestingBrokerage.Scan(): Null pending order found: '' + kvp.Key)", span="250-250", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_101 [label="order.Status.IsClosed()", span="255-255", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_102 [label="_pending.TryRemove(order.Id, out order)", span="258-258", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_103 [label="order.Time == Algorithm.UtcTime && order.Type != OrderType.Market", span="263-263", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_105 [label="var fills = new[] { new OrderEvent(order, Algorithm.UtcTime, 0) }", span="269-269", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_107 [label="!Algorithm.Securities.TryGetValue(order.Symbol, out security)", span="272-272", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_108 [label="Log.Error(''BacktestingBrokerage.Scan(): Unable to process order: '' + order.Id + ''. The security no longer exists.'')", span="274-274", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_109 [label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0m){Status = OrderStatus.Invalid})", span="276-276", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_110 [label="_pending.TryRemove(order.Id, out order)", span="277-277", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_111 [label="!Algorithm.BrokerageModel.CanExecuteOrder(security, order)", span="282-282", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_113 [label="hasSufficientBuyingPowerResult = security.BuyingPowerModel.HasSufficientBuyingPowerForOrder(Algorithm.Portfolio, security, order)", span="291-291", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_116 [label="_pending.TryRemove(order.Id, out pending)", span="297-297", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_117 [label="order.Status = OrderStatus.Invalid", span="298-298", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", color=red, community=0, file="BacktestingBrokerage.cs"];
m0_118 [label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0, ''Error in HasSufficientBuyingPowerForOrder''))", span="299-299", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", color=red, community=0, file="BacktestingBrokerage.cs"];
m0_120 [label="Algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="302-302", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", color=red, community=0, file="BacktestingBrokerage.cs"];
m0_123 [label="order.Type", span="315-315", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_125 [label="fills = new[] { model.LimitFill(security, order as LimitOrder) }", span="318-318", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_127 [label="fills = new[] { model.StopMarketFill(security, order as StopMarketOrder) }", span="322-322", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_129 [label="fills = new[] { model.MarketFill(security, order as MarketOrder) }", span="326-326", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_131 [label="fills = new[] { model.StopLimitFill(security, order as StopLimitOrder) }", span="330-330", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_133 [label="fills = new[] { model.MarketOnOpenFill(security, order as MarketOnOpenOrder) }", span="334-334", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_135 [label="fills = new[] { model.MarketOnCloseFill(security, order as MarketOnCloseOrder) }", span="338-338", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_138 [label="fills = option.OptionExerciseModel.OptionExercise(option, order as OptionExerciseOrder).ToArray()", span="343-343", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_141 [label="Algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'',\r\n                                order.Id, order.Type, err.Message))", span="350-351", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", color=red, community=2, file="BacktestingBrokerage.cs"];
m0_142 [label="order.Status = OrderStatus.Invalid", span="357-357", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", color=red, community=0, file="BacktestingBrokerage.cs"];
m0_143 [label="Algorithm.Error($''Order Error: id: {order.Id}, Insufficient buying power to complete order (Value:{order.GetValue(security).SmartRounding()}), Reason: {hasSufficientBuyingPowerResult.Reason}.'')", span="358-358", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", color=red, community=0, file="BacktestingBrokerage.cs"];
m0_145 [label="order.Status != fill.Status || fill.FillQuantity != 0", span="364-364", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_147 [label="order.Type == OrderType.OptionExercise", span="370-370", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_148 [label="fill.Message = order.Tag", span="372-372", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_151 [label="_pending.TryRemove(order.Id, out order)", span="379-379", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_100 [label="_pending.TryRemove(kvp.Key, out order)", span="251-251", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_104 [label="stillNeedsScan = true", span="265-265", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_106 [label="Security security", span="271-271", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_144 [label=fills, span="361-361", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_150 [label="fills.All(x => x.Status.IsClosed())", span="377-377", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_122 [label="var model = security.FillModel", span="310-310", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_137 [label="var option = (Option)security", span="342-342", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_112 [label="HasSufficientBuyingPowerForOrderResult hasSufficientBuyingPowerResult", span="288-288", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_114 [label=Exception, span="293-293", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_121 [label="hasSufficientBuyingPowerResult.IsSufficient", span="307-307", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_115 [label="Order pending", span="296-296", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_119 [label="Log.Error(err)", span="301-301", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_124 [label="OrderType.Limit", span="317-317", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_126 [label="OrderType.StopMarket", span="321-321", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_128 [label="OrderType.Market", span="325-325", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_130 [label="OrderType.StopLimit", span="329-329", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_132 [label="OrderType.MarketOnOpen", span="333-333", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_134 [label="OrderType.MarketOnClose", span="337-337", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_136 [label="OrderType.OptionExercise", span="341-341", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_139 [label=Exception, span="347-347", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_140 [label="Log.Error(err)", span="349-349", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_146 [label="OnOrderEvent(fill)", span="367-367", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_149 [label="OnOptionPositionAssigned(fill)", span="373-373", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_152 [label="stillNeedsScan = true", span="383-383", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_154 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs"];
m0_162 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="432-432", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BacktestingBrokerage.cs"];
m0_74 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BacktestingBrokerage.cs"];
m0_22 [label="Entry Holding.cstr", span="", cluster="Holding.cstr", file="BacktestingBrokerage.cs"];
m0_90 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="BacktestingBrokerage.cs"];
m0_173 [label="Entry decimal.SmartRounding()", span="208-208", cluster="decimal.SmartRounding()", file="BacktestingBrokerage.cs"];
m0_194 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="BacktestingBrokerage.cs"];
m0_9 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs"];
m0_10 [label="Algorithm = algorithm", span="77-77", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs"];
m0_11 [label="MarketSimulation = marketSimulation", span="78-78", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs"];
m0_12 [label="_pending = new ConcurrentDictionary<int, Order>()", span="79-79", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs"];
m0_13 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs"];
m0_4 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="BacktestingBrokerage.cs"];
m0_172 [label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191", cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="BacktestingBrokerage.cs"];
m0_0 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs"];
m0_1 [label="Algorithm = algorithm", span="53-53", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs"];
m0_2 [label="_pending = new ConcurrentDictionary<int, Order>()", span="54-54", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs"];
m0_3 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs"];
m0_57 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_58 [label="Algorithm.LiveMode", span="162-162", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_59 [label="Log.Trace(''BacktestingBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="164-164", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_62 [label="!_pending.TryGetValue(order.Id, out pending)", span="170-170", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_65 [label="SetPendingOrder(order)", span="177-177", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_66 [label="var orderId = order.Id.ToString()", span="180-180", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_67 [label="!order.BrokerId.Contains(orderId)", span="181-181", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_68 [label="order.BrokerId.Add(orderId)", span="181-181", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_70 [label="var updated = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="185-185", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_60 [label=_needsScanLock, span="167-167", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_61 [label="Order pending", span="169-169", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_63 [label="return false;", span="173-173", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_64 [label="_needsScan = true", span="176-176", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_69 [label="int orderFee = 0", span="184-184", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_71 [label="OnOrderEvent(updated)", span="186-186", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_72 [label="return true;", span="188-188", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_73 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_186 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="406-406", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs"];
m0_187 [label="_pendingOptionAssignments.Contains(option.Symbol)", span="409-409", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs"];
m0_189 [label="_pendingOptionAssignments.Add(option.Symbol)", span="411-411", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs"];
m0_190 [label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, -quantity, 0m, 0m, Algorithm.UtcTime, ''Simulated option assignment before expiration'')", span="413-413", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs"];
m0_188 [label="return;", span="409-409", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs"];
m0_191 [label="var ticket = Algorithm.Transactions.ProcessRequest(request)", span="415-415", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs"];
m0_192 [label="Log.Trace($''BacktestingBrokerage.ActivateOptionAssignment(): OrderId: {ticket.OrderId}'')", span="416-416", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs"];
m0_193 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="406-406", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs"];
m0_53 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="BacktestingBrokerage.cs"];
m0_170 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="BacktestingBrokerage.cs"];
m0_17 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="259-259", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="BacktestingBrokerage.cs"];
m0_157 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="BacktestingBrokerage.cs"];
m0_169 [label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33", cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="BacktestingBrokerage.cs"];
m0_21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BacktestingBrokerage.cs"];
m0_165 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="30-30", cluster="QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="BacktestingBrokerage.cs"];
m0_204 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="436-436", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="BacktestingBrokerage.cs"];
m0_205 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="436-436", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="BacktestingBrokerage.cs"];
m0_196 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BacktestingBrokerage.cs"];
m0_75 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_76 [label="Algorithm.LiveMode", span="198-198", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_77 [label="Log.Trace(''BacktestingBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="200-200", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_80 [label="!_pending.TryRemove(order.Id, out pending)", span="206-206", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_82 [label="var orderId = order.Id.ToString()", span="213-213", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_83 [label="!order.BrokerId.Contains(orderId)", span="214-214", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_84 [label="order.BrokerId.Add(order.Id.ToString())", span="214-214", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_86 [label="var canceled = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Canceled }", span="218-218", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_78 [label=_needsScanLock, span="203-203", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_79 [label="Order pending", span="205-205", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_81 [label="return false;", span="209-209", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_85 [label="int orderFee = 0", span="217-217", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_87 [label="OnOrderEvent(canceled)", span="219-219", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_88 [label="return true;", span="221-221", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_89 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_166 [label="Entry QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="46-46", cluster="QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="BacktestingBrokerage.cs"];
m0_197 [label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BacktestingBrokerage.cs"];
m0_171 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="BacktestingBrokerage.cs"];
m0_54 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BacktestingBrokerage.cs"];
m0_206 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="444-444", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="BacktestingBrokerage.cs"];
m0_207 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="444-444", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="BacktestingBrokerage.cs"];
m0_51 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="454-454", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_208 [label="_pending[order.Id] = order.Clone()", span="457-457", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_209 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="454-454", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs"];
m0_156 [label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27", cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="BacktestingBrokerage.cs"];
m0_168 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="70-70", cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="BacktestingBrokerage.cs"];
m0_167 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="62-62", cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="BacktestingBrokerage.cs"];
m0_18 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="105-105", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BacktestingBrokerage.cs"];
m0_19 [label="return (from kvp in Algorithm.Portfolio.Securities.OrderBy(x => x.Value.Symbol)\r\n                    where kvp.Value.Holdings.AbsoluteQuantity > 0\r\n                    select new Holding(kvp.Value)).ToList();", span="108-110", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BacktestingBrokerage.cs"];
m0_20 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="105-105", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BacktestingBrokerage.cs"];
m0_50 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestingBrokerage.cs"];
m0_30 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BacktestingBrokerage.cs"];
m0_55 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="BacktestingBrokerage.cs"];
m0_211 [label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span="", file="BacktestingBrokerage.cs"];
m2_19 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="118-118", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs"];
m2_11 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="ConstantAlphaModel.cs"];
m2_8 [label="_securities = new HashSet<Security>()", span="65-65", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs"];
m2_34 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ConstantAlphaModel.cs"];
m2_2 [label="_configurator = configurator", span="40-40", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="ConstantAlphaModel.cs"];
m2_3 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", span="37-37", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="ConstantAlphaModel.cs"];
m2_4 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="ConstantAlphaModel.cs"];
m2_5 [label="return _configurator(_factory.CreateEnumerator(request));", span="50-50", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="ConstantAlphaModel.cs"];
m2_6 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="ConstantAlphaModel.cs"];
m2_7 [label="Entry QuantConnect.Data.ISubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="31-31", cluster="QuantConnect.Data.ISubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="ConstantAlphaModel.cs"];
m2_9 [label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory", span="", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs"];
m2_10 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="55-55", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs"];
m2_18 [label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", span="102-102", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs"];
m2_28 [label="_insightsTimeBySymbol.TryGetValue(symbol, out generatedTimeUtc)", span="105-105", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs"];
m2_29 [label="utcTime - generatedTimeUtc < _period", span="109-109", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs"];
m2_31 [label="_insightsTimeBySymbol[symbol] = utcTime", span="117-117", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs"];
m2_27 [label="DateTime generatedTimeUtc", span="104-104", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs"];
m2_30 [label="return false;", span="111-111", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs"];
m2_32 [label="return true;", span="118-118", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs"];
m2_33 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", span="102-102", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs"];
m2_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", span="37-37", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="ConstantAlphaModel.cs"];
m2_1 [label="_factory = factory", span="39-39", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="ConstantAlphaModel.cs"];
m2_25 [label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="32-32", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs"];
m2_26 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="ConstantAlphaModel.cs"];
m2_13 [label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs"];
m2_16 [label="yield return new Insight(security.Symbol, _type, _direction, _period, _magnitude, _confidence);", span="81-81", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="ConstantAlphaModel.cs"];
m2_14 [label=_securities, span="77-77", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs"];
m2_15 [label="ShouldEmitInsight(algorithm.UtcTime, security.Symbol)", span="79-79", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs"];
m2_17 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs"];
m2_20 [label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs"];
m2_21 [label="NotifiedSecurityChanges.UpdateCollection(_securities, changes)", span="93-93", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs"];
m2_23 [label="_insightsTimeBySymbol.Remove(removed.Symbol)", span="98-98", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs"];
m2_22 [label="changes.RemovedSecurities", span="96-96", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs"];
m2_24 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs"];
m2_12 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConstantAlphaModel.cs"];
m2_35 [label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", span="", file="ConstantAlphaModel.cs"];
m4_211 [label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108", cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_140 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_200 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_201 [label=_locked, span="853-853", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_203 [label="timeZone == null", span="858-858", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_205 [label="_timeKeeper.AddTimeZone(timeZone)", span="859-859", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_206 [label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(timeZone)", span="860-860", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_207 [label="TimeRules.SetDefaultTimeZone(timeZone)", span="863-863", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_202 [label="throw new Exception(''Algorithm.SetTimeZone(): Cannot change time zone after algorithm running.'');", span="855-855", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_204 [label="throw new ArgumentNullException(''timeZone'');", span="858-858", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_208 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_0 [label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_1 [label="Name = GetType().Name", span="92-92", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_2 [label="Status = AlgorithmStatus.Running", span="93-93", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_3 [label="IsWarmingUp = true", span="96-96", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_4 [label="_startDate = new DateTime(1998, 01, 01)", span="103-103", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_5 [label="_endDate = DateTime.Now.AddDays(-1)", span="104-104", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_6 [label="_timeKeeper = new TimeKeeper(_startDate, new[] { TimeZones.NewYork })", span="107-107", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_7 [label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork)", span="109-109", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_8 [label="Settings = new AlgorithmSettings()", span="111-111", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_9 [label="SubscriptionManager = new SubscriptionManager(Settings, _timeKeeper)", span="114-114", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_10 [label="Securities = new SecurityManager(_timeKeeper)", span="116-116", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_11 [label="Transactions = new SecurityTransactionManager(Securities)", span="117-117", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_12 [label="Portfolio = new SecurityPortfolioManager(Securities, Transactions)", span="118-118", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_13 [label="BrokerageModel = new DefaultBrokerageModel()", span="119-119", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_14 [label="Notify = new NotificationManager(false)", span="120-120", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_15 [label="_runMode = RunMode.Series", span="123-123", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_16 [label="_locked = false", span="126-126", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_17 [label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="129-129", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_18 [label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="132-132", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_19 [label="UniverseManager = new UniverseManager()", span="135-135", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_20 [label="Universe = new UniverseDefinitions(this)", span="136-136", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_21 [label="UniverseSettings = new UniverseSettings(Resolution.Minute, 2m, true, false, TimeSpan.FromDays(1))", span="137-137", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_22 [label="Schedule = new ScheduleManager(Securities, TimeZone)", span="140-140", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_23 [label="TradeBuilder = new TradeBuilder(FillGroupingMethod.FillToFill, FillMatchingMethod.FIFO)", span="143-143", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_24 [label="SecurityInitializer = new BrokerageModelSecurityInitializer(new DefaultBrokerageModel(AccountType.Margin),\r\n                                                                        new FuncSecuritySeeder(GetLastKnownPrice))", span="145-146", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_25 [label="CandlestickPatterns = new CandlestickPatterns(this)", span="148-148", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_26 [label="TradingCalendar = new TradingCalendar(Securities, _marketHoursDatabase)", span="151-151", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_27 [label="OptionChainProvider = new EmptyOptionChainProvider()", span="153-153", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_28 [label="Exit QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_427 [label="Entry QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", span="48-48", cluster="QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_29 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_333 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_334 [label="return _locked;", span="1224-1224", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_335 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_191 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_192 [label="DateTimeZone tz", span="834-834", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_193 [label="tz = DateTimeZoneProviders.Tzdb[timeZone]", span="837-837", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_195 [label="throw new ArgumentException(string.Format(''TimeZone with id '{0}' was not found. For a complete list of time zones please visit: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones'', timeZone));", span="841-841", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_194 [label=DateTimeZoneNotFoundException, span="839-839", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_196 [label="SetTimeZone(tz)", span="844-844", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_197 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_80 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325", cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_449 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_450 [label="return AddSecurity<Crypto>(SecurityType.Crypto, ticker, resolution, market, fillDataForward, leverage, false);", span="1526-1526", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_451 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_104 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_105 [label=availableDataTypes, span="558-558", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_106 [label="SubscriptionManager.AvailableDataTypes[dataFeed.Key] = dataFeed.Value", span="560-560", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_107 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_212 [label="Entry QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", span="48-48", cluster="QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_497 [label="var security = SecurityManager.CreateSecurity(typeof(T), Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="1621-1622", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_493 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_494 [label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="1614-1614", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_495 [label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="1617-1617", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_496 [label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="1618-1618", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_498 [label="AddToUserDefinedUniverse(security)", span="1624-1624", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_499 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_533 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710", cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_534 [label="return SymbolCache.GetSymbol(ticker);", span="1712-1712", cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_535 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710", cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_261 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_262 [label="SetCash((decimal)startingCash)", span="1011-1011", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_263 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_38 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_199 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_536 [label="Entry QuantConnect.SymbolCache.GetSymbol(string)", span="47-47", cluster="QuantConnect.SymbolCache.GetSymbol(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_287 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_288 [label="var end = new DateTime(year, month, day)", span="1100-1100", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_289 [label="end = end.Date.AddDays(1).Subtract(TimeSpan.FromTicks(1))", span="1103-1103", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_290 [label="SetEndDate(end)", span="1105-1105", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_291 [label=Exception, span="1107-1107", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_292 [label="throw new Exception(''Date Invalid: '' + err.Message);", span="1109-1109", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_293 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_165 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732", cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_166 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732", cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_476 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_223 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_224 [label="BrokerageModel = model", span="897-897", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_226 [label="SecurityInitializer = new BrokerageModelSecurityInitializer(model, new FuncSecuritySeeder(GetLastKnownPrice))", span="901-901", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_225 [label="!_userSetSecurityInitializer", span="898-898", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_227 [label="Securities.Values", span="904-904", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_228 [label="var leverage = security.Leverage", span="909-909", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_229 [label="SecurityInitializer.Initialize(security, false)", span="912-912", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_230 [label="security.SetLeverage(leverage)", span="915-915", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_231 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_265 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_266 [label="SetCash((decimal)startingCash)", span="1022-1022", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_267 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_296 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_317 [label=_liveMode, span="1178-1178", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_319 [label="end > DateTime.Now.Date.AddDays(-1)", span="1182-1182", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_322 [label="end < _startDate", span="1190-1190", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_324 [label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="1197-1197", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_318 [label="return;", span="1178-1178", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_320 [label="end = DateTime.Now.Date.AddDays(-1)", span="1184-1184", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_321 [label="_startDate != new DateTime()", span="1188-1188", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_323 [label="throw new Exception(''Please select end date greater than start date.'');", span="1192-1192", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_325 [label="!_locked", span="1200-1200", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_326 [label="_endDate = end", span="1202-1202", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_327 [label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="1206-1206", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_328 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_475 [label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172", cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_233 [label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654", cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_272 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_37 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_346 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_347 [label="TradeBuilder = tradeBuilder", span="1251-1251", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_348 [label="TradeBuilder.SetLiveMode(LiveMode)", span="1252-1252", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_349 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_179 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789", cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_180 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789", cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_525 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683", cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_526 [label="Debug(''Quit(): '' + message)", span="1685-1685", cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_527 [label="Status = AlgorithmStatus.Stopped", span="1686-1686", cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_528 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683", cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_39 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_452 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_453 [label="Security security", span="1536-1536", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_454 [label="Securities.TryGetValue(symbol, out security)", span="1537-1537", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_459 [label="var universe = UniverseManager.Values.OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(symbol))", span="1548-1548", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_461 [label="var ret = universe.Remove(symbol)", span="1551-1551", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_462 [label="symbol == _benchmarkSymbol", span="1554-1554", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_463 [label="Securities.Remove(symbol)", span="1556-1556", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_455 [label="Transactions.CancelOpenOrders(security.Symbol)", span="1540-1540", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_468 [label="return false;", span="1567-1567", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_456 [label="security.Cache.Reset()", span="1543-1543", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_457 [label="security.Invested", span="1546-1546", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_458 [label="Liquidate(security.Symbol)", span="1546-1546", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_460 [label="universe != null", span="1549-1549", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_466 [label="SubscriptionManager.HasCustomData = universe.Members.Any(x => x.Value.Subscriptions.Any(y => y.IsCustomData))", span="1562-1562", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_467 [label="return ret;", span="1564-1564", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_464 [label="security = CreateBenchmarkSecurity()", span="1558-1558", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_465 [label="AddToUserDefinedUniverse(security)", span="1559-1559", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_469 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_404 [label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81", cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_85 [label="Entry Unk.AddEquity", span="", cluster="Unk.AddEquity", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_141 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_167 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_168 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_295 [label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0", cluster="System.DateTime.Subtract(System.TimeSpan)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_42 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_90 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528", cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_91 [label="string value", span="530-530", cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_92 [label="return _parameters.TryGetValue(name, out value) ? value : null;", span="531-531", cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_93 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528", cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_273 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_274 [label="!_locked", span="1050-1050", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_275 [label="Portfolio.SetCash(symbol, startingCash, conversionRate)", span="1052-1052", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_276 [label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1056-1056", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_277 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_47 [label="Entry QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", span="51-51", cluster="QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_213 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_214 [label="mode != RunMode.Parallel", span="875-875", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_215 [label="return;", span="875-875", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_216 [label="Debug(''Algorithm.SetRunMode(): RunMode-Parallel Type has been deprecated. Series analysis selected instead'')", span="876-876", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_217 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_123 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597", cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_124 [label="OptionChainProvider = optionChainProvider", span="599-599", cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_125 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597", cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_487 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_488 [label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m)", span="1584-1584", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_489 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_345 [label="Entry QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", span="30-30", cluster="QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_484 [label="Entry lambda expression", span="1562-1562", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_87 [label="Entry lambda expression", span="499-499", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_88 [label="x.Value", span="499-499", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_89 [label="Exit lambda expression", span="499-499", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_120 [label="securityInitializer(security)", span="590-590", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_119 [label="Entry lambda expression", span="590-590", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_121 [label="Exit lambda expression", span="590-590", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_148 [label="Entry lambda expression", span="624-624", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_151 [label="Entry lambda expression", span="625-625", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_154 [label="Entry lambda expression", span="626-626", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_158 [label="Entry lambda expression", span="627-627", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_149 [label="x.Name == ''OnData''", span="624-624", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_150 [label="Exit lambda expression", span="624-624", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_152 [label="x.DeclaringType != typeof(QCAlgorithm)", span="625-625", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_153 [label="Exit lambda expression", span="625-625", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_155 [label="x.GetParameters().Length == 1", span="626-626", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_156 [label="Exit lambda expression", span="626-626", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_159 [label="x.GetParameters()[0].ParameterType == typeof (Slice)", span="627-627", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_160 [label="Exit lambda expression", span="627-627", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_252 [label="x.Key.Value == symbol", span="967-967", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_251 [label="Entry lambda expression", span="967-967", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_253 [label="Exit lambda expression", span="967-967", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_478 [label="x.Members.ContainsKey(symbol)", span="1548-1548", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_477 [label="Entry lambda expression", span="1548-1548", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_481 [label="Entry lambda expression", span="1562-1562", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_479 [label="Exit lambda expression", span="1548-1548", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_482 [label="x.Value.Subscriptions.Any(y => y.IsCustomData)", span="1562-1562", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_483 [label="Exit lambda expression", span="1562-1562", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_485 [label="y.IsCustomData", span="1562-1562", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_486 [label="Exit lambda expression", span="1562-1562", cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_145 [label="Entry Unk.Call", span="", cluster="Unk.Call", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_190 [label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68", cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_185 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_186 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_30 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_115 [label="Entry QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="31-31", cluster="QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_403 [label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442", cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_473 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_555 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_556 [label="historyProvider == null", span="1773-1773", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_558 [label="HistoryProvider = historyProvider", span="1777-1777", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_557 [label="throw new ArgumentNullException(''Algorithm.SetHistoryProvider(): Historical data provider cannot be null.'');", span="1775-1775", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_559 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_222 [label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136", cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_239 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_240 [label="string market = Market.USA", span="948-948", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_241 [label="this.BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="950-950", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_242 [label="_benchmarkSymbol = QuantConnect.Symbol.Create(symbol, securityType, market)", span="952-952", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_243 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_245 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_246 [label="symbol = symbol.ToUpper()", span="966-966", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_247 [label="var security = Securities.FirstOrDefault(x => x.Key.Value == symbol).Value", span="967-967", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_248 [label="_benchmarkSymbol = security == null\r\n                ? QuantConnect.Symbol.Create(symbol, SecurityType.Equity, Market.USA)\r\n                : security.Symbol", span="968-970", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_249 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_218 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_502 [label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="1635-1635", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_504 [label="_debugMessages.Enqueue(message)", span="1636-1636", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_505 [label="_previousDebugMessage = message", span="1637-1637", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_503 [label="return;", span="1635-1635", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_506 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_187 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823", cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_188 [label="_timeKeeper.SetUtcDateTime(frontier)", span="825-825", cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_189 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823", cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_377 [label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="488-488", cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_508 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_509 [label="!_liveMode && message == ''''", span="1648-1648", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_511 [label="_logMessages.Enqueue(message)", span="1649-1649", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_510 [label="return;", span="1648-1648", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_512 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_52 [label="Entry QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", span="18-18", cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_175 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_176 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_257 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_258 [label="Benchmark = new FuncBenchmark(benchmark)", span="989-989", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_259 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_316 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_51 [label="Entry QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", span="34-34", cluster="QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_406 [label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", span="49-49", cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_254 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_255 [label="_benchmarkSymbol = symbol", span="979-979", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_256 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_314 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_82 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_31 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_112 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_113 [label="SetSecurityInitializer(new FuncSecurityInitializer(securityInitializer))", span="581-581", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_114 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_471 [label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="182-182", cluster="QuantConnect.Securities.SecurityCache.Reset()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_102 [label="Entry QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", span="59-59", cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_94 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_177 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779", cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_178 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779", cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_163 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725", cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_164 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725", cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_161 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651", cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_162 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651", cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_41 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_57 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_103 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_513 [label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1660-1660", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_515 [label="_errorMessages.Enqueue(message)", span="1661-1661", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_516 [label="_previousErrorMessage = message", span="1662-1662", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_514 [label="return;", span="1660-1660", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_517 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_181 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_182 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_84 [label="Entry Unk.TryGetValue", span="", cluster="Unk.TryGetValue", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_297 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_298 [label="_algorithmId = algorithmId", span="1120-1120", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_299 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_174 [label="Entry QuantConnect.Symbol.ToString()", span="354-354", cluster="QuantConnect.Symbol.ToString()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_353 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_354 [label="return AddSecurity(securityType, symbol, resolution, null, fillDataForward, leverage, extendedMarketHours);", span="1280-1280", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_355 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_565 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_566 [label="Status = status", span="1800-1800", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_567 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_278 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_49 [label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="47-47", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_209 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_34 [label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36", cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_378 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_379 [label="return AddSecurity<Equity>(SecurityType.Equity, ticker, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="1347-1347", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_380 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_279 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_280 [label="var start = new DateTime(year, month, day)", span="1075-1075", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_281 [label="start = start.Date", span="1078-1078", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_282 [label="SetStartDate(start)", span="1080-1080", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_283 [label=Exception, span="1082-1082", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_284 [label="throw new Exception(''Date Invalid: '' + err.Message);", span="1084-1084", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_285 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_58 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_59 [label="Benchmark == null", span="475-475", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_60 [label="_benchmarkSymbol == null || _benchmarkSymbol == QuantConnect.Symbol.Empty", span="478-478", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_67 [label="Securities.Select(x => x.Value).OfType<Option>()", span="499-499", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_61 [label="_benchmarkSymbol = QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)", span="480-480", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_62 [label="Security security", span="486-486", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_63 [label="!Securities.TryGetValue(_benchmarkSymbol, out security)", span="487-487", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_64 [label="security = CreateBenchmarkSecurity()", span="490-490", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_66 [label="Benchmark = new SecurityBenchmark(security)", span="495-495", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_65 [label="AddToUserDefinedUniverse(security)", span="491-491", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_68 [label="var underlying = option.Symbol.Underlying", span="501-501", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_71 [label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="506-506", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_72 [label="option.Underlying = equity", span="510-510", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_69 [label="Security equity", span="502-502", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_70 [label="!Securities.TryGetValue(underlying, out equity)", span="503-503", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_73 [label="equity.VolatilityModel == VolatilityModel.Null", span="513-513", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_75 [label="equity.VolatilityModel = new StandardDeviationOfReturnsVolatilityModel(periods)", span="516-516", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_74 [label="int periods = 30", span="515-515", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_76 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_433 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_434 [label="var option = (Option)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1470-1471", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_435 [label="var underlying = option.Symbol.Underlying", span="1474-1474", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_438 [label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="1478-1478", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_439 [label="option.Underlying = equity", span="1480-1480", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_440 [label="AddToUserDefinedUniverse(option)", span="1482-1482", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_441 [label="return option;", span="1484-1484", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_436 [label="Security equity", span="1475-1475", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_437 [label="!Securities.TryGetValue(underlying, out equity)", span="1476-1476", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_442 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_198 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_53 [label="Entry QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", span="25-25", cluster="QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_147 [label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0", cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_157 [label="Entry Unk.GetParameters", span="", cluster="Unk.GetParameters", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_86 [label="Entry QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", span="68-68", cluster="QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_171 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_172 [label="OnEndOfDay(symbol.ToString())", span="763-763", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_173 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_46 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_142 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_407 [label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161", cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_79 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_547 [label="Resolution resolution", span="1747-1747", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_548 [label=_liveMode, span="1748-1748", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_549 [label="resolution = Resolution.Second", span="1750-1750", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_550 [label="var hasNonAddSecurityUniverses = (\r\n                    from kvp in UniverseManager\r\n                    let config = kvp.Value.Configuration\r\n                    let symbol = UserDefinedUniverse.CreateSymbol(config.SecurityType, config.Market)\r\n                    where config.Symbol != symbol\r\n                    select kvp).Any()", span="1755-1760", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_551 [label="resolution = hasNonAddSecurityUniverses ? UniverseSettings.Resolution : Resolution.Daily", span="1762-1762", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_552 [label="return SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer, _benchmarkSymbol, resolution, true, 1m, false, true, false, LiveMode);", span="1764-1764", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_553 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_81 [label="Entry QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", span="31-31", cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_336 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_337 [label="!_locked", span="1232-1232", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_338 [label="_liveMode = live", span="1234-1234", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_339 [label="Notify = new NotificationManager(live)", span="1235-1235", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_340 [label="TradeBuilder.SetLiveMode(live)", span="1236-1236", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_341 [label=live, span="1238-1238", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_342 [label="_startDate = DateTime.Today", span="1240-1240", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_343 [label="_endDate = QuantConnect.Time.EndOfTime", span="1241-1241", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_344 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_95 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_96 [label="_parameters = parameters.ToDictionary()", span="541-541", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_97 [label="ParameterAttribute.ApplyAttributes(parameters, this)", span="544-544", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_98 [label=Exception, span="546-546", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_99 [label="Error(''Error applying parameter values: '' + err.Message)", span="548-548", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_100 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_219 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_220 [label="SetBrokerageModel(Brokerages.BrokerageModel.Create(brokerage, accountType))", span="887-887", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_221 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_294 [label="Entry System.TimeSpan.FromTicks(long)", span="0-0", cluster="System.TimeSpan.FromTicks(long)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_144 [label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0", cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_54 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462", cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_55 [label="throw new NotImplementedException(''Please override the Initialize() method'');", span="465-465", cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_56 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462", cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_381 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_537 [label="market == null", span="1721-1721", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_538 [label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1723-1723", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_539 [label="throw new Exception(''No default market set for security type: '' + securityType);", span="1725-1725", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_541 [label="!SymbolCache.TryGetSymbol(ticker, out symbol)", span="1730-1730", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_542 [label="symbol = QuantConnect.Symbol.Create(ticker, securityType, market)", span="1732-1732", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_543 [label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1735-1736", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_540 [label="Symbol symbol", span="1729-1729", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_544 [label="AddToUserDefinedUniverse(security)", span="1737-1737", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_545 [label="return (T)security;", span="1738-1738", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_546 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_146 [label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_500 [label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221", cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_402 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_108 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_109 [label="_userSetSecurityInitializer = true", span="571-571", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_110 [label="SecurityInitializer = securityInitializer", span="572-572", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_111 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_264 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_268 [label="!_locked", span="1032-1032", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_269 [label="Portfolio.SetCash(startingCash)", span="1034-1034", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_270 [label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1038-1038", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_271 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_350 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_351 [label="return AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours);", span="1265-1265", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_352 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_501 [label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373", cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_183 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_184 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_43 [label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40", cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_126 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_127 [label="!_checkedForOnDataSlice", span="619-619", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_138 [label="_onDataSlice(slice)", span="643-643", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_128 [label="_checkedForOnDataSlice = true", span="621-621", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_137 [label="_onDataSlice != null", span="641-641", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_129 [label="var method = GetType().GetMethods()\r\n                    .Where(x => x.Name == ''OnData'')\r\n                    .Where(x => x.DeclaringType != typeof(QCAlgorithm))\r\n                    .Where(x => x.GetParameters().Length == 1)\r\n                    .FirstOrDefault(x => x.GetParameters()[0].ParameterType == typeof (Slice))", span="623-627", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_130 [label="method == null", span="629-629", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_134 [label="var call = Expression.Call(self, method, parameter)", span="636-636", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_131 [label="return;", span="631-631", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_132 [label="var self = Expression.Constant(this)", span="634-634", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_133 [label="var parameter = Expression.Parameter(typeof (Slice), ''data'')", span="635-635", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_135 [label="var lambda = Expression.Lambda<Action<Slice>>(call, parameter)", span="637-637", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_136 [label="_onDataSlice = lambda.Compile()", span="638-638", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_139 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_391 [label="var canonicalSecurity = (Option) SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1378-1380", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_374 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_382 [label="market == null", span="1361-1361", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_386 [label="var alias = ''?'' + underlying", span="1370-1370", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_388 [label="canonicalSymbol = QuantConnect.Symbol.Create(underlying, SecurityType.Option, market, alias)", span="1373-1373", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_389 [label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, underlying, SecurityType.Option)", span="1376-1376", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_390 [label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, underlying, SecurityType.Option, CashBook.AccountCurrency)", span="1377-1377", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_396 [label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1388-1388", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_383 [label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Option, out market)", span="1363-1363", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_385 [label="Symbol canonicalSymbol", span="1369-1369", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_384 [label="throw new Exception(''No default market set for security type: '' + SecurityType.Option);", span="1365-1365", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_387 [label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1371-1371", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_395 [label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1386-1386", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_398 [label="UniverseManager.Add(canonicalSymbol, universe)", span="1390-1390", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_392 [label="canonicalSecurity.IsTradable = false", span="1381-1381", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_393 [label="Securities.Add(canonicalSecurity)", span="1382-1382", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_397 [label="universe = new OptionChainUniverse(canonicalSecurity, settings, SecurityInitializer, LiveMode)", span="1389-1389", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_399 [label="return canonicalSecurity;", span="1393-1393", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_394 [label="Universe universe", span="1385-1385", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_400 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_405 [label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194", cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_480 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_244 [label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_560 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_561 [label="exception == null", span="1786-1786", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_563 [label="RunTimeError = exception", span="1791-1791", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_562 [label="throw new ArgumentNullException(''Algorithm.SetRunTimeError(): Algorithm.RunTimeError cannot be set to null.'');", span="1788-1788", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_564 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_101 [label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46", cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_376 [label="Entry QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", span="60-60", cluster="QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_428 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_429 [label="var future = (Future)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1452-1453", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_430 [label="AddToUserDefinedUniverse(future)", span="1455-1455", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_431 [label="return future;", span="1457-1457", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_432 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_232 [label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="28-28", cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_44 [label="Entry QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", span="45-45", cluster="QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_417 [label="var canonicalSecurity = (Future)SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1424-1426", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_375 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_408 [label="market == null", span="1407-1407", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_412 [label="var alias = ''/'' + symbol", span="1416-1416", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_414 [label="canonicalSymbol = QuantConnect.Symbol.Create(symbol, SecurityType.Future, market, alias)", span="1419-1419", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_415 [label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, symbol, SecurityType.Future)", span="1422-1422", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_416 [label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, symbol, SecurityType.Future, CashBook.AccountCurrency)", span="1423-1423", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_422 [label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1434-1434", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_409 [label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Future, out market)", span="1409-1409", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_411 [label="Symbol canonicalSymbol", span="1415-1415", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_410 [label="throw new Exception(''No default market set for security type: '' + SecurityType.Future);", span="1411-1411", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_413 [label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1417-1417", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_421 [label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1432-1432", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_424 [label="UniverseManager.Add(canonicalSymbol, universe)", span="1436-1436", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_418 [label="canonicalSecurity.IsTradable = false", span="1427-1427", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_419 [label="Securities.Add(canonicalSecurity)", span="1428-1428", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_423 [label="universe = new FuturesChainUniverse(canonicalSecurity, settings, SubscriptionManager, SecurityInitializer)", span="1435-1435", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_425 [label="return canonicalSecurity;", span="1439-1439", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_420 [label="Universe universe", span="1431-1431", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_426 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_48 [label="Entry QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", span="61-61", cluster="QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_50 [label="Entry QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", span="33-33", cluster="QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_45 [label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59", cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_260 [label="Entry QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", span="30-30", cluster="QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_401 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_329 [label="Entry System.DateTime.AddTicks(long)", span="0-0", cluster="System.DateTime.AddTicks(long)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_356 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_357 [label="securityType == SecurityType.Option", span="1296-1296", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_358 [label="return AddOption(symbol, resolution, market, fillDataForward, leverage);", span="1298-1298", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_359 [label="securityType == SecurityType.Future", span="1301-1301", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_360 [label="return AddFuture(symbol, resolution, market, fillDataForward, leverage);", span="1303-1303", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_361 [label="market == null", span="1308-1308", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_362 [label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1310-1310", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_363 [label="throw new Exception(''No default market set for security type: '' + securityType);", span="1312-1312", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_365 [label="!SymbolCache.TryGetSymbol(symbol, out symbolObject)", span="1317-1317", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_366 [label="symbolObject = QuantConnect.Symbol.Create(symbol, securityType, market)", span="1319-1319", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_367 [label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                    symbolObject, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1322-1323", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_364 [label="Symbol symbolObject", span="1316-1316", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_368 [label="AddToUserDefinedUniverse(security)", span="1325-1325", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_369 [label="return security;", span="1326-1326", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_370 [label=Exception, span="1328-1328", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_371 [label="Error(''Algorithm.AddSecurity(): '' + err)", span="1330-1330", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_372 [label="return null;", span="1331-1331", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_373 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_169 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_170 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_36 [label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55", cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_490 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_491 [label="AddData<T>(symbol, resolution, TimeZones.NewYork, fillDataForward, leverage)", span="1599-1599", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_492 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_210 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_315 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476", cluster="System.DateTime.RoundDown(System.TimeSpan)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_443 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496", cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_444 [label="return AddSecurity<Forex>(SecurityType.Forex, ticker, resolution, market, fillDataForward, leverage, false);", span="1498-1498", cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_445 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496", cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_77 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_529 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695", cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_530 [label=quit, span="1697-1697", cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_531 [label="Status = AlgorithmStatus.Stopped", span="1699-1699", cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_532 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695", cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_83 [label="Entry Unk.>", span="", cluster="Unk.>", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_33 [label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93", cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_446 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_447 [label="return AddSecurity<Cfd>(SecurityType.Cfd, ticker, resolution, market, fillDataForward, leverage, false);", span="1512-1512", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_448 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_250 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_116 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_117 [label="SetSecurityInitializer(new FuncSecurityInitializer((security, seedSecurity) => securityInitializer(security)))", span="590-590", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_118 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_35 [label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57", cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_32 [label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46", cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_78 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_234 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_235 [label="handler == null", span="929-929", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_237 [label="BrokerageMessageHandler = handler", span="934-934", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_236 [label="throw new ArgumentNullException(''handler'');", span="931-931", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_238 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_286 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_300 [label=_liveMode, span="1132-1132", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_302 [label="start < (new DateTime(1900, 01, 01))", span="1136-1136", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_305 [label="start > _endDate", span="1144-1144", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_307 [label="start = start.RoundDown(TimeSpan.FromDays(1))", span="1151-1151", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_301 [label="return;", span="1132-1132", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_303 [label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="1138-1138", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_304 [label="_endDate != new DateTime()", span="1142-1142", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_306 [label="throw new Exception(''Please select start date less than end date.'');", span="1146-1146", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_308 [label="!_locked", span="1154-1154", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_310 [label="_startDate = start", span="1159-1159", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_309 [label="!LiveMode", span="1157-1157", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_312 [label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="1165-1165", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_311 [label="SetDateTime(_startDate.ConvertToUtc(TimeZone))", span="1160-1160", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_313 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_472 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_518 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_519 [label="var message = error.Message", span="1673-1673", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_520 [label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1674-1674", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_522 [label="_errorMessages.Enqueue(message)", span="1675-1675", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_523 [label="_previousErrorMessage = message", span="1676-1676", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_521 [label="return;", span="1674-1674", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_524 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_122 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_507 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_143 [label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0", cluster="System.Linq.Expressions.Expression.Constant(object)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_40 [label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="41-41", cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_470 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_330 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_331 [label="_locked = true", span="1216-1216", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_332 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_474 [label="Entry Unk.Remove", span="", cluster="Unk.Remove", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_568 [label="QuantConnect.Algorithm.QCAlgorithm", span="", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_569 [label="System.Action<QuantConnect.Securities.Security>", span="", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_570 [label=string, span="", file="EqualWeightingPortfolioConstructionModel.cs"];
m4_571 [label="QuantConnect.Symbol", span="", file="EqualWeightingPortfolioConstructionModel.cs"];
m7_9 [label="!complete", span="133-133", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="FractalAdaptiveMovingAverage.cs"];
m7_51 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", color=red, community=0, file="FractalAdaptiveMovingAverage.cs"];
m7_52 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="FractalAdaptiveMovingAverage.cs"];
m7_11 [label="return algorithm;", span="135-135", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="FractalAdaptiveMovingAverage.cs"];
m7_12 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", span="125-125", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="FractalAdaptiveMovingAverage.cs"];
m7_61 [label="algorithm.SetLiveMode(false)", span="177-177", cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs"];
m7_3 [label="_n = n", span="47-47", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_50 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="FractalAdaptiveMovingAverage.cs"];
m7_69 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="416-416", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="FractalAdaptiveMovingAverage.cs"];
m7_10 [label="throw new Exception(error + '' Try re-building algorithm.'');", span="133-133", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="FractalAdaptiveMovingAverage.cs"];
m7_20 [label="double n2", span="80-80", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_17 [label="_high.Samples <= _high.Size", span="75-75", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs"];
m7_67 [label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err.Message)", span="189-189", cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs"];
m7_60 [label="Exit QuantConnect.Indicators.FractalAdaptiveMovingAverage.Reset()", span="134-134", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.Reset()", file="FractalAdaptiveMovingAverage.cs"];
m7_66 [label=Exception, span="187-187", cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs"];
m7_68 [label="Exit lambda expression", span="172-191", cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs"];
m7_62 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="121-121", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="FractalAdaptiveMovingAverage.cs"];
m7_63 [label="QuantConnect.Indicators.FractalAdaptiveMovingAverage", span="", cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs"];
m7_64 [label="algorithm.Initialize()", span="183-183", cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs"];
m7_65 [label="algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(algorithm.Securities, algorithm.SubscriptionManager)", span="185-185", cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs"];
m7_18 [label="_filt = price", span="77-77", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_19 [label="double n1", span="79-79", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_21 [label="double n3", span="81-81", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_28 [label="ll = _low.Take(_n / 2).Min()", span="90-90", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_31 [label="hh = _high.Skip(_n / 2).Take(_n / 2).Max()", span="96-96", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_33 [label="n2 = (hh - ll) / (_n / 2)", span="100-100", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_36 [label="alpha = Math.Exp(_w * (dimen - 1))", span="107-107", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_37 [label="alpha < .01", span="108-108", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_39 [label="alpha > 1", span="109-109", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_40 [label="alpha = 1", span="109-109", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_41 [label="_filt = alpha * price + (1 - alpha) * _filt", span="111-111", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_42 [label="return (decimal)_filt;", span="113-113", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_44 [label="Entry QuantConnect.Indicators.RollingWindow<T>.Add(T)", span="247-247", cluster="QuantConnect.Indicators.RollingWindow<T>.Add(T)", file="FractalAdaptiveMovingAverage.cs"];
m7_45 [label="Entry System.Collections.Generic.IEnumerable<double>.Max()", span="0-0", cluster="System.Collections.Generic.IEnumerable<double>.Max()", file="FractalAdaptiveMovingAverage.cs"];
m7_27 [label="hh = _high.Take(_n / 2).Max()", span="89-89", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_29 [label="n1 = (hh - ll) / (_n / 2)", span="92-92", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_30 [label="_high.IsReady", span="94-94", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_32 [label="ll = _low.Skip(_n / 2).Take(_n / 2).Min()", span="97-97", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_22 [label="double hh", span="82-82", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_34 [label="n1 > 0 && n2 > 0 && n3 > 0", span="102-102", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_47 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="FractalAdaptiveMovingAverage.cs"];
m7_38 [label="alpha = .01", span="108-108", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_43 [label="Exit QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", span="68-68", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs"];
m7_46 [label="Entry System.Collections.Generic.IEnumerable<double>.Min()", span="0-0", cluster="System.Collections.Generic.IEnumerable<double>.Min()", file="FractalAdaptiveMovingAverage.cs"];
m7_26 [label="n3 = (_high.Max() - _low.Min()) / _n", span="87-87", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_24 [label="double dimen = 0", span="84-84", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_23 [label="double ll", span="83-83", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_25 [label="double alpha", span="85-85", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_35 [label="dimen = (Math.Log(n1 + n2) - Math.Log(n3)) / Math.Log(2)", span="104-104", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_48 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="FractalAdaptiveMovingAverage.cs"];
m7_53 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="41-41", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="FractalAdaptiveMovingAverage.cs"];
m7_54 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", color=red, community=0, file="FractalAdaptiveMovingAverage.cs"];
m7_55 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="156-156", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="FractalAdaptiveMovingAverage.cs"];
m7_56 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", span="237-237", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", color=red, community=0, file="FractalAdaptiveMovingAverage.cs"];
m7_57 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="422-422", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", color=red, community=0, file="FractalAdaptiveMovingAverage.cs"];
m7_58 [label="Entry System.DateTime.ToShortDateString()", span="0-0", cluster="System.DateTime.ToShortDateString()", color=red, community=0, file="FractalAdaptiveMovingAverage.cs"];
m7_59 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="FractalAdaptiveMovingAverage.cs"];
m7_4 [label="_w = CalculateW(longPeriod)", span="48-48", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_7 [label="Exit QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", span="40-40", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_6 [label="_low = new RollingWindow<double>(n)", span="50-50", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_8 [label="bool complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, out algorithm, out error)", span="132-132", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="FractalAdaptiveMovingAverage.cs"];
m7_5 [label="_high = new RollingWindow<double>(n)", span="49-49", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_16 [label="_low.Add((double)input.Low)", span="72-72", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs"];
m7_72 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="212-212", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="FractalAdaptiveMovingAverage.cs"];
m7_15 [label="_high.Add((double)input.High)", span="71-71", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs"];
m7_0 [label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", span="40-40", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_1 [label="n % 2 > 0", span="43-43", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", color=green, community=0, file="FractalAdaptiveMovingAverage.cs"];
m7_2 [label="throw new ArgumentException(''N must be even.'');", span="45-45", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs", color=red, community=0];
m7_71 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="287-287", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="FractalAdaptiveMovingAverage.cs"];
m7_49 [label="Entry System.Math.Log(double)", span="0-0", cluster="System.Math.Log(double)", file="FractalAdaptiveMovingAverage.cs"];
m7_13 [label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="83-83", cluster="QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="FractalAdaptiveMovingAverage.cs"];
m7_14 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", color=red, community=0, file="FractalAdaptiveMovingAverage.cs"];
m7_73 [label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="85-85", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="FractalAdaptiveMovingAverage.cs"];
m7_86 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="FractalAdaptiveMovingAverage.cs"];
m7_70 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="431-431", cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_84 [label="return TimeSpan.FromSeconds(maxRunTime);", span="264-264", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_74 [label="double maxRunTime = 0", span="239-239", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_75 [label="var jobDays = (finish - start).TotalDays", span="240-240", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_76 [label="maxRunTime = 10 * subscriptionCount * jobDays", span="242-242", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_81 [label="Log.Trace(''BacktestingSetupHandler.GetMaxRunTime(): Job Days: '' + jobDays + '' Max Runtime: '' + Math.Round(maxRunTime / 60) + '' min'')", span="256-256", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_78 [label="maxRunTime = 3600 * 12", span="248-248", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_80 [label="maxRunTime = 60", span="253-253", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_82 [label="OS.IsWindows", span="259-259", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_83 [label="maxRunTime = 24 * 60 * 60", span="261-261", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_77 [label="(maxRunTime / 3600) > 12", span="245-245", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_79 [label="maxRunTime < 60", span="250-250", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_85 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", span="237-237", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs"];
m7_92 [label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", span="", file="FractalAdaptiveMovingAverage.cs"];
m7_93 [label="QuantConnect.Interfaces.IAlgorithm", span="", file="FractalAdaptiveMovingAverage.cs"];
m7_94 [label=job, span="", file="FractalAdaptiveMovingAverage.cs"];
m8_11 [label="Entry QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", span="40-40", cluster="QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", file="FractalAdaptiveMovingAverageTests.cs"];
m8_17 [label="Entry QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", span="370-370", cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="FractalAdaptiveMovingAverageTests.cs"];
m8_26 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="FractalAdaptiveMovingAverageTests.cs"];
m8_27 [label="AssertResult(expected, actual.Current.Value)", span="54-54", cluster="lambda expression", file="FractalAdaptiveMovingAverageTests.cs"];
m8_28 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="FractalAdaptiveMovingAverageTests.cs"];
m8_25 [label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, double>)", span="170-170", cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, double>)", file="FractalAdaptiveMovingAverageTests.cs"];
m8_32 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="FractalAdaptiveMovingAverageTests.cs"];
m8_22 [label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", span="52-52", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", file="FractalAdaptiveMovingAverageTests.cs"];
m8_23 [label="TestHelper.TestIndicator(indicator, ''frama.txt'', ''Filt'', (actual, expected) => {AssertResult(expected, actual.Current.Value);})", span="54-54", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", file="FractalAdaptiveMovingAverageTests.cs"];
m8_24 [label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", span="52-52", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", file="FractalAdaptiveMovingAverageTests.cs"];
m8_0 [label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", span="27-27", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_1 [label="FractalAdaptiveMovingAverage frama = new FractalAdaptiveMovingAverage('''', 6, 198)", span="30-30", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", color=red, community=0, file="FractalAdaptiveMovingAverageTests.cs"];
m8_2 [label="TestHelper.GetDataStream(7)", span="32-32", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_3 [label="frama.Update(new TradeBar { High = data, Low = data })", span="34-34", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_4 [label="Assert.IsTrue(frama.IsReady)", span="36-36", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_5 [label="Assert.AreNotEqual(0m, frama.Current.Value)", span="37-37", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_6 [label="Assert.AreNotEqual(0, frama.Samples)", span="38-38", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_7 [label="frama.Reset()", span="40-40", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_8 [label="TestHelper.AssertIndicatorIsInDefaultState(frama)", span="42-42", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_9 [label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", span="27-27", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_15 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="FractalAdaptiveMovingAverageTests.cs"];
m8_13 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="FractalAdaptiveMovingAverageTests.cs"];
m8_29 [label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", span="57-57", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", file="FractalAdaptiveMovingAverageTests.cs"];
m8_30 [label="Assert.IsTrue(Math.Abs((decimal)expected - actual) < 0.006m)", span="59-59", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", file="FractalAdaptiveMovingAverageTests.cs"];
m8_31 [label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", span="57-57", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", file="FractalAdaptiveMovingAverageTests.cs"];
m8_14 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="FractalAdaptiveMovingAverageTests.cs"];
m8_12 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_16 [label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.Reset()", span="134-134", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.Reset()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_18 [label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", span="46-46", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_19 [label="var indicator = new FractalAdaptiveMovingAverage('''', 16, 198)", span="48-48", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", color=red, community=0, file="FractalAdaptiveMovingAverageTests.cs"];
m8_20 [label="RunTestIndicator(indicator)", span="49-49", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_21 [label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", span="46-46", cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", file="FractalAdaptiveMovingAverageTests.cs"];
m8_10 [label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", span="40-40", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverageTests.cs"];
m9_0 [label="Entry QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="32-32", cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="IExecutionModel.cs"];
m9_1 [label="Exit QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="32-32", cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="IExecutionModel.cs"];
m10_13 [label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52", cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ImmediateExecutionModel.cs"];
m10_14 [label="Exit QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52", cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ImmediateExecutionModel.cs"];
m10_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="ImmediateExecutionModel.cs"];
m10_7 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="269-269", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="ImmediateExecutionModel.cs"];
m10_8 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", file="ImmediateExecutionModel.cs"];
m10_0 [label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="33-33", cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs"];
m10_1 [label=targets, span="35-35", cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs"];
m10_2 [label="var existing = algorithm.Securities[target.Symbol].Holdings.Quantity\r\n                    + algorithm.Transactions.GetOpenOrders(target.Symbol).Sum(o => o.Quantity)", span="37-38", cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs"];
m10_5 [label="algorithm.MarketOrder(target.Symbol, quantity)", span="42-42", cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs"];
m10_3 [label="var quantity = target.Quantity - existing", span="39-39", cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs"];
m10_4 [label="quantity != 0", span="40-40", cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs"];
m10_6 [label="Exit QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="33-33", cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs"];
m10_10 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="ImmediateExecutionModel.cs"];
m10_11 [label="o.Quantity", span="38-38", cluster="lambda expression", file="ImmediateExecutionModel.cs"];
m10_12 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="ImmediateExecutionModel.cs"];
m11_28 [label="serializedInsight.ScoreIsFinal", span="207-207", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs"];
m11_29 [label="insight.Score.SetScore(InsightScoreType.Magnitude, serializedInsight.ScoreMagnitude, insight.CloseTimeUtc)", span="209-209", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs"];
m11_30 [label="insight.Score.SetScore(InsightScoreType.Direction, serializedInsight.ScoreDirection, insight.CloseTimeUtc)", span="210-210", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs"];
m11_42 [label="!thisChart.Series.ContainsKey(series)", span="166-166", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_54 [label="QuantConnect.Algorithm.Framework.Alphas.Insight", span="", cluster="QuantConnect.Chart.Chart(string)", file="Insight.cs"];
m11_67 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Insight.cs"];
m11_18 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", span="156-156", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="Insight.cs"];
m11_19 [label="return new Insight(Symbol, Type, Direction, Period, Magnitude, Confidence)\r\n            {\r\n                GeneratedTimeUtc = GeneratedTimeUtc,\r\n                CloseTimeUtc = CloseTimeUtc,\r\n                Score = Score,\r\n                Id = Id,\r\n                EstimatedValue = EstimatedValue,\r\n                ReferenceValue = ReferenceValue\r\n            };", span="158-166", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="Insight.cs", color=green, community=0];
m11_20 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", span="156-156", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="Insight.cs"];
m11_4 [label="Score = new InsightScore()", span="121-121", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs"];
m11_14 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="145-145", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs"];
m11_15 [label="GeneratedTimeUtc = generatedTimeUtc", span="148-148", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs"];
m11_16 [label="CloseTimeUtc = generatedTimeUtc + period", span="149-149", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs"];
m11_25 [label="Entry System.Math.Sign(double)", span="0-0", cluster="System.Math.Sign(double)", file="Insight.cs"];
m11_26 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", span="188-188", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", color=red, community=0, file="Insight.cs"];
m11_27 [label="var insight = new Insight(\r\n                Time.UnixTimeStampToDateTime(serializedInsight.GeneratedTime),\r\n                new Symbol(SecurityIdentifier.Parse(serializedInsight.Symbol), serializedInsight.Ticker),\r\n                serializedInsight.Type,\r\n                serializedInsight.Direction,\r\n                TimeSpan.FromSeconds(serializedInsight.Period),\r\n                serializedInsight.Magnitude,\r\n                serializedInsight.Confidence\r\n            )\r\n            {\r\n                Id = Guid.Parse(serializedInsight.Id),\r\n                CloseTimeUtc = Time.UnixTimeStampToDateTime(serializedInsight.CloseTime),\r\n                EstimatedValue = serializedInsight.EstimatedValue,\r\n                ReferenceValue = serializedInsight.ReferenceValue\r\n            }", span="190-204", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", color=green, community=0];
m11_73 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="230-230", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_74 [label=indicators, span="233-233", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_77 [label="i.Updated += (sender, args) =>\r\n                {\r\n                    Plot(chart, ilocal);\r\n                }", span="239-242", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_75 [label="i == null", span="235-235", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_76 [label="var ilocal = i", span="238-238", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_78 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="230-230", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_103 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="Insight.cs"];
m11_43 [label="var seriesCount = (from x in _charts.Values select x.Series.Count).Sum()", span="169-169", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_57 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="Insight.cs"];
m11_31 [label="insight.Score.Finalize(insight.CloseTimeUtc)", span="211-211", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs"];
m11_32 [label="serializedInsight.ScoreMagnitude != 0", span="215-215", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs"];
m11_33 [label="insight.Score.SetScore(InsightScoreType.Magnitude, serializedInsight.ScoreMagnitude, insight.CloseTimeUtc)", span="217-217", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs"];
m11_68 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", span="228-228", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="Insight.cs"];
m11_59 [label="Entry QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", span="282-282", cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="Insight.cs"];
m11_56 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="Insight.cs"];
m11_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", span="104-104", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="Insight.cs"];
m11_119 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="Insight.cs"];
m11_80 [label="Plot(chart, ilocal)", span="241-241", cluster="lambda expression", file="Insight.cs"];
m11_79 [label="Entry lambda expression", span="239-242", cluster="lambda expression", file="Insight.cs"];
m11_81 [label="Exit lambda expression", span="239-242", cluster="lambda expression", file="Insight.cs"];
m11_89 [label="!waitForReady || ilocal.IsReady", span="260-260", cluster="lambda expression", file="Insight.cs"];
m11_90 [label="Plot(chart, ilocal)", span="262-262", cluster="lambda expression", file="Insight.cs"];
m11_88 [label="Entry lambda expression", span="258-264", cluster="lambda expression", file="Insight.cs"];
m11_91 [label="Exit lambda expression", span="258-264", cluster="lambda expression", file="Insight.cs"];
m11_120 [label="chart.GetUpdates()", span="317-317", cluster="lambda expression", file="Insight.cs"];
m11_121 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="Insight.cs"];
m11_10 [label="Confidence = confidence", span="130-130", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs"];
m11_11 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="118-118", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs"];
m11_12 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="Insight.cs"];
m11_122 [label="Entry QuantConnect.Chart.GetUpdates()", span="91-91", cluster="QuantConnect.Chart.GetUpdates()", file="Insight.cs"];
m11_38 [label="throw new Exception(''Algorithm.Plot(): 'Equity', 'Daily Performance' and 'Meta' are reserved chart names created for all charts.'');", span="156-156", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_17 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="145-145", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs"];
m11_21 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", span="177-177", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", file="Insight.cs"];
m11_22 [label="var direction = (InsightDirection) Math.Sign(magnitude)", span="179-179", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", file="Insight.cs"];
m11_5 [label="Symbol = symbol", span="123-123", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs"];
m11_53 [label="Entry System.Math.Round(double, int)", span="0-0", cluster="System.Math.Round(double, int)", file="Insight.cs"];
m11_44 [label="seriesCount > 10", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_34 [label="serializedInsight.ScoreDirection != 0", span="220-220", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs"];
m11_35 [label="insight.Score.SetScore(InsightScoreType.Direction, serializedInsight.ScoreDirection, insight.CloseTimeUtc)", span="222-222", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", color=red, community=0, file="Insight.cs"];
m11_36 [label="return insight;", span="226-226", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs"];
m11_96 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", span="284-284", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="Insight.cs"];
m11_97 [label="SetRuntimeStatistic(name, value.ToString(CultureInfo.InvariantCulture))", span="286-286", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="Insight.cs"];
m11_98 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", span="284-284", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="Insight.cs"];
m11_117 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="Insight.cs"];
m11_61 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", span="201-201", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs"];
m11_62 [label="Chart c", span="203-203", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs"];
m11_63 [label="!_charts.TryGetValue(chart, out c)", span="204-204", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs"];
m11_64 [label="_charts[chart] = c = new Chart(chart)", span="206-206", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs"];
m11_65 [label="c.Series[series] = new Series(series, seriesType, unit)", span="209-209", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs"];
m11_66 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", span="201-201", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs"];
m11_60 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="Insight.cs"];
m11_99 [label="Entry decimal.ToString(System.IFormatProvider)", span="0-0", cluster="decimal.ToString(System.IFormatProvider)", file="Insight.cs"];
m11_69 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="218-218", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_70 [label=indicators, span="221-221", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_71 [label="Plot(chart, indicator.Name, indicator)", span="223-223", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_72 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="218-218", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_45 [label="Error(''Exceeded maximum series count: Each backtest can have up to 10 series in total.'')", span="173-173", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_46 [label="return;", span="174-174", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_47 [label="thisChart.AddSeries(new Series(series, SeriesType.Line, 0, ''$''))", span="178-178", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_48 [label="var thisSeries = thisChart.Series[series]", span="181-181", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_49 [label="thisSeries.Values.Count < 4000 || _liveMode", span="182-182", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_50 [label="thisSeries.AddPoint(UtcTime, value, _liveMode)", span="184-184", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_51 [label="Debug(''Exceeded maximum points per chart, data skipped.'')", span="188-188", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_52 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_37 [label="(chart == ''Strategy Equity'' && series == ''Equity'') || (chart == ''Daily Performance'') || (chart == ''Meta'')", span="154-154", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_95 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134", cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="Insight.cs"];
m11_23 [label="Plot(series, (decimal)value)", span="106-106", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", color=green, community=0, file="Insight.cs"];
m11_24 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", span="104-104", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="Insight.cs"];
m11_40 [label="_charts.Add(chart, new Chart(chart))", span="162-162", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_55 [label="Entry Unk.Sum", span="", cluster="Unk.Sum", file="Insight.cs"];
m11_108 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="315-315", cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs"];
m11_109 [label="var updates = _charts.Values.Select(chart => chart.GetUpdates()).ToList()", span="317-317", cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs"];
m11_110 [label=clearChartData, span="319-319", cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs"];
m11_114 [label="return updates;", span="330-330", cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs"];
m11_111 [label=_charts, span="322-322", cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs"];
m11_112 [label="chart.Value.Series", span="324-324", cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs"];
m11_113 [label="series.Value.Purge()", span="326-326", cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs"];
m11_115 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="315-315", cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs"];
m11_100 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", span="294-294", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="Insight.cs"];
m11_101 [label="SetRuntimeStatistic(name, value.ToString())", span="296-296", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="Insight.cs"];
m11_102 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", span="294-294", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="Insight.cs"];
m11_2 [label="_charts.Add(chart.Name, chart)", span="44-44", cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="Insight.cs"];
m11_3 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", span="40-40", cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="Insight.cs"];
m11_6 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="54-54", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="Insight.cs"];
m11_7 [label="Plot(''Strategy Equity'', series, value)", span="57-57", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="Insight.cs"];
m11_8 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="54-54", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="Insight.cs"];
m11_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_58 [label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74", cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="Insight.cs"];
m11_39 [label="!_charts.ContainsKey(chart)", span="160-160", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs"];
m11_41 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="Insight.cs"];
m11_82 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", span="249-249", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_83 [label=indicators, span="252-252", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_86 [label="i.Updated += (sender, args) =>\r\n                {\r\n                    if (!waitForReady || ilocal.IsReady)\r\n                    {\r\n                        Plot(chart, ilocal);\r\n                    }\r\n                }", span="258-264", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_84 [label="i == null", span="254-254", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_85 [label="var ilocal = i", span="257-257", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_87 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", span="249-249", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs"];
m11_107 [label="Entry double.ToString(System.IFormatProvider)", span="0-0", cluster="double.ToString(System.IFormatProvider)", file="Insight.cs"];
m11_104 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", span="304-304", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="Insight.cs"];
m11_105 [label="SetRuntimeStatistic(name, value.ToString(CultureInfo.InvariantCulture))", span="306-306", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="Insight.cs"];
m11_106 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", span="304-304", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="Insight.cs"];
m11_0 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", span="40-40", cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="Insight.cs"];
m11_1 [label="!_charts.ContainsKey(chart.Name)", span="42-42", cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="Insight.cs"];
m11_92 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", span="274-274", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="Insight.cs"];
m11_93 [label="RuntimeStatistics.AddOrUpdate(name, value)", span="276-276", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="Insight.cs"];
m11_94 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", span="274-274", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="Insight.cs"];
m11_118 [label="Entry QuantConnect.Series.Purge()", span="333-333", cluster="QuantConnect.Series.Purge()", file="Insight.cs"];
m11_123 [label="QuantConnect.Algorithm.QCAlgorithm", span="", file="Insight.cs"];
m11_124 [label=string, span="", file="Insight.cs"];
m11_125 [label=ilocal, span="", file="Insight.cs"];
m11_126 [label=bool, span="", file="Insight.cs"];
m11_127 [label=ilocal, span="", file="Insight.cs"];
m11_128 [label=string, span="", file="Insight.cs"];
m13_0 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31", cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="IPortfolioConstructionModel.cs"];
m13_1 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31", cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="IPortfolioConstructionModel.cs"];
m16_184 [label="Entry QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", span="40-40", cluster="QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", file="MacdAlphaModel.cs"];
m16_322 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="463-463", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="MacdAlphaModel.cs"];
m16_48 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1366-1366", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="MacdAlphaModel.cs"];
m16_193 [label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", span="74-74", cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", file="MacdAlphaModel.cs"];
m16_221 [label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54", cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="MacdAlphaModel.cs"];
m16_291 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="787-787", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", file="MacdAlphaModel.cs"];
m16_292 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="787-787", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", file="MacdAlphaModel.cs"];
m16_36 [label="Thread.Sleep(50)", span="237-237", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs"];
m16_19 [label="var insightPeriod = _resolution.ToTimeSpan().Multiply(_fastPeriod)", span="96-96", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_138 [label="Entry QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", span="29-29", cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", file="MacdAlphaModel.cs"];
m16_213 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="583-583", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs"];
m16_214 [label="message == _errorMessage", span="585-585", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs"];
m16_218 [label="Messages.Enqueue(new HandledErrorPacket(_backtestId, message, stacktrace))", span="587-587", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs"];
m16_219 [label="_errorMessage = message", span="588-588", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs"];
m16_215 [label="return;", span="585-585", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs"];
m16_216 [label="Messages.Count > 500", span="586-586", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs"];
m16_217 [label="return;", span="586-586", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs"];
m16_220 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="583-583", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs"];
m16_46 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="220-220", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs"];
m16_17 [label="direction = InsightDirection.Down", span="87-87", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_186 [label="Entry System.Console.SetError(System.IO.TextWriter)", span="0-0", cluster="System.Console.SetError(System.IO.TextWriter)", file="MacdAlphaModel.cs"];
m16_187 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="524-524", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs"];
m16_188 [label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _backtestId, _compileId, message))", span="526-526", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs"];
m16_190 [label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="531-531", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs"];
m16_191 [label="_debugMessage = message", span="533-533", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs"];
m16_189 [label="_algorithm != null", span="529-529", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs"];
m16_192 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="524-524", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs"];
m16_280 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="746-746", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="MacdAlphaModel.cs"];
m16_281 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="746-746", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="MacdAlphaModel.cs"];
m16_104 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="396-396", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_127 [label=_chartLock, span="400-400", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_128 [label="packet.Type != PacketType.BacktestResult", span="403-403", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_130 [label="var result = packet as BacktestResultPacket", span="406-406", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_129 [label="return;", span="403-403", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_131 [label="result != null", span="408-408", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_133 [label="SaveResults(key, result.Results)", span="414-414", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_132 [label="var key = _job.BacktestId + ''.json''", span="411-411", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_134 [label="Log.Error(''BacktestingResultHandler.StoreResult(): Result Null.'')", span="418-418", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_135 [label=Exception, span="422-422", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_136 [label="Log.Error(err)", span="424-424", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_137 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="396-396", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs"];
m16_266 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="MacdAlphaModel.cs"];
m16_105 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", span="366-366", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs"];
m16_112 [label="var splitPackets = new List<BacktestResultPacket>()", span="369-369", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs"];
m16_113 [label="deltaCharts.Values", span="370-370", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs"];
m16_115 [label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { Charts = new Dictionary<string, Chart>()\r\n                {\r\n                    {chart.Name,chart}\r\n                }  }, progress))", span="375-378", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs"];
m16_116 [label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { Orders = deltaOrders }, progress))", span="382-382", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs"];
m16_117 [label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { RuntimeStatistics = runtimeStatistics }, progress))", span="385-385", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs"];
m16_118 [label="return splitPackets;", span="387-387", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs"];
m16_114 [label="chart.Series.Values.Sum(x => x.Values.Count) == 0", span="373-373", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs"];
m16_119 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", span="366-366", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs"];
m16_250 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="660-660", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_251 [label="Sample(''Strategy Equity'', ''Daily Performance'', 1, SeriesType.Bar, time, value, ''%'')", span="663-663", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_252 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="660-660", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_102 [label="Entry QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", span="224-224", cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="MacdAlphaModel.cs"];
m16_123 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="MacdAlphaModel.cs"];
m16_253 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="672-672", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_254 [label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value, ''$'')", span="674-674", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_255 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="672-672", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_246 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="646-646", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_247 [label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value, ''$'')", span="649-649", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_248 [label="_daysProcessed = (time - _job.PeriodStart).TotalDays", span="652-652", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_249 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="646-646", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_269 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="715-715", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs"];
m16_270 [label="!_exitTriggered", span="718-718", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs"];
m16_271 [label="ProcessSynchronousEvents(true)", span="720-720", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs"];
m16_274 [label="_exitTriggered = true", span="726-726", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs"];
m16_272 [label="var logLocation = SaveLogs(_job.BacktestId, _log)", span="721-721", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs"];
m16_273 [label="SystemDebugMessage(''Your log was successfully created and can be retrieved from: '' + logLocation)", span="722-722", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs"];
m16_275 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="715-715", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs"];
m16_268 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="MacdAlphaModel.cs"];
m16_51 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="MacdAlphaModel.cs"];
m16_12 [label="var direction = InsightDirection.Flat", span="79-79", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_203 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="556-556", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="MacdAlphaModel.cs"];
m16_204 [label="Messages.Enqueue(new LogPacket(_backtestId, message))", span="558-558", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="MacdAlphaModel.cs"];
m16_206 [label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="562-562", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="MacdAlphaModel.cs"];
m16_205 [label="_algorithm != null", span="560-560", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="MacdAlphaModel.cs"];
m16_207 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="556-556", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="MacdAlphaModel.cs"];
m16_282 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="757-757", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_283 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="757-757", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_16 [label="normalizedSignal < -BounceThresholdPercent", span="85-85", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_120 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="MacdAlphaModel.cs"];
m16_124 [label="Entry lambda expression", span="373-373", cluster="lambda expression", file="MacdAlphaModel.cs"];
m16_106 [label="Entry lambda expression", span="288-288", cluster="lambda expression", file="MacdAlphaModel.cs"];
m16_109 [label="Entry lambda expression", span="288-288", cluster="lambda expression", file="MacdAlphaModel.cs"];
m16_107 [label="t.Key", span="288-288", cluster="lambda expression", file="MacdAlphaModel.cs"];
m16_108 [label="Exit lambda expression", span="288-288", cluster="lambda expression", file="MacdAlphaModel.cs"];
m16_110 [label="t.Value", span="288-288", cluster="lambda expression", file="MacdAlphaModel.cs"];
m16_111 [label="Exit lambda expression", span="288-288", cluster="lambda expression", file="MacdAlphaModel.cs"];
m16_125 [label="x.Values.Count", span="373-373", cluster="lambda expression", file="MacdAlphaModel.cs"];
m16_126 [label="Exit lambda expression", span="373-373", cluster="lambda expression", file="MacdAlphaModel.cs"];
m16_244 [label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127", cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="MacdAlphaModel.cs"];
m16_26 [label="throw new Exception(''BacktestingResultHandler.Constructor(): Submitted Job type invalid.'');", span="212-212", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="MacdAlphaModel.cs"];
m16_229 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="613-613", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_230 [label=_chartLock, span="615-615", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_232 [label="!Charts.TryGetValue(chartName, out chart)", span="619-619", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_233 [label="chart = new Chart(chartName)", span="621-621", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_234 [label="Charts.AddOrUpdate(chartName, chart)", span="622-622", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_236 [label="!chart.Series.TryGetValue(seriesName, out series)", span="627-627", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_237 [label="series = new Series(seriesName, seriesType, seriesIndex, unit)", span="629-629", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_238 [label="chart.Series.Add(seriesName, series)", span="630-630", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_239 [label="series.Values.Count == 0 || time > Time.UnixTimeStampToDateTime(series.Values[series.Values.Count - 1].x)", span="634-634", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_240 [label="series.Values.Add(new ChartPoint(time, value))", span="636-636", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_231 [label="Chart chart", span="618-618", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_235 [label="Series series", span="626-626", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_241 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="613-613", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs"];
m16_27 [label="_compileId = _job.CompileId", span="213-213", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="MacdAlphaModel.cs"];
m16_29 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="206-206", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="MacdAlphaModel.cs"];
m16_32 [label="var lastMessage = ''''", span="223-223", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs"];
m16_28 [label="_backtestId = _job.BacktestId", span="214-214", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="MacdAlphaModel.cs"];
m16_30 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="MacdAlphaModel.cs"];
m16_31 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="220-220", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs"];
m16_33 [label="_lastDaysProcessed = 5", span="224-224", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs"];
m16_34 [label="!(_exitTriggered && Messages.Count == 0)", span="232-232", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs"];
m16_20 [label="var insight = new Insight(sd.Security.Symbol, InsightType.Price, direction, insightPeriod)", span="97-97", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", color=green, community=0];
m16_21 [label="sd.PreviousDirection = insight.Direction", span="98-98", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_22 [label="yield return insight;", span="99-99", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_23 [label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="70-70", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_24 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724", cluster="QuantConnect.Resolution.ToTimeSpan()", file="MacdAlphaModel.cs"];
m16_25 [label="Entry System.TimeSpan.Multiply(double)", span="230-230", cluster="System.TimeSpan.Multiply(double)", file="MacdAlphaModel.cs"];
m16_276 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="797-797", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_293 [label="_algorithm == null", span="799-799", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_296 [label="time > _nextSample || forceProcess", span="803-803", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_294 [label="return;", span="799-799", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_295 [label="var time = _algorithm.UtcTime", span="801-801", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_297 [label="_nextSample = time.Add(ResamplePeriod)", span="806-806", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_298 [label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="809-809", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_301 [label="SampleAssetPrices(security.Symbol, time, security.Price)", span="817-817", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_302 [label="var debugStopWatch = Stopwatch.StartNew()", span="822-822", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_299 [label="SampleRange(_algorithm.GetChartUpdates())", span="812-812", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_300 [label="_algorithm.Securities.Values", span="815-815", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_303 [label="_algorithm.DebugMessages.Count > 0 && debugStopWatch.ElapsedMilliseconds < 250", span="823-823", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_304 [label="string message", span="825-825", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_307 [label="var errorStopWatch = Stopwatch.StartNew()", span="833-833", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_305 [label="_algorithm.DebugMessages.TryDequeue(out message)", span="826-826", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_306 [label="DebugMessage(message)", span="828-828", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_308 [label="_algorithm.ErrorMessages.Count > 0 && errorStopWatch.ElapsedMilliseconds < 250", span="834-834", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_309 [label="string message", span="836-836", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_312 [label="var logStopWatch = Stopwatch.StartNew()", span="844-844", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_310 [label="_algorithm.ErrorMessages.TryDequeue(out message)", span="837-837", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_311 [label="ErrorMessage(message)", span="839-839", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_313 [label="_algorithm.LogMessages.Count > 0 && logStopWatch.ElapsedMilliseconds < 250", span="845-845", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_314 [label="string message", span="847-847", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_317 [label="_algorithm.RuntimeStatistics", span="855-855", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_315 [label="_algorithm.LogMessages.TryDequeue(out message)", span="848-848", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_316 [label="LogMessage(message)", span="850-850", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_318 [label="RuntimeStatistic(pair.Key, pair.Value)", span="857-857", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_319 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="797-797", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs"];
m16_208 [label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47", cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", file="MacdAlphaModel.cs"];
m16_50 [label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", span="", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_53 [label="Algorithm == null || Algorithm.Transactions == null || _processingFinalPacket", span="274-274", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_54 [label="return;", span="276-276", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_55 [label="DateTime.Now <= _nextUpdate || !(_daysProcessed > (_lastDaysProcessed + 1))", span="279-279", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_56 [label="return;", span="279-279", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_57 [label="var deltaOrders = new Dictionary<int, Order>()", span="282-282", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_58 [label="deltaOrders = (from order in _transactionHandler.Orders\r\n                        where order.Value.Time.Date >= _lastUpdate && order.Value.Status == OrderStatus.Filled\r\n                        select order).ToDictionary(t => t.Key, t => t.Value)", span="286-288", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_59 [label=Exception, span="290-290", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_61 [label="deltaOrders.Count > 50", span="296-296", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_62 [label="deltaOrders.Clear()", span="296-296", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_89 [label="var splitPackets = SplitPackets(deltaCharts, deltaOrders, runtimeStatistics, progress)", span="350-350", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_60 [label="Log.Error(err, ''Transactions'')", span="292-292", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_63 [label="_lastUpdate = Algorithm.Time.Date", span="301-301", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_64 [label="_lastDaysProcessed = _daysProcessed", span="302-302", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_65 [label="_nextUpdate = DateTime.Now.AddSeconds(0.5)", span="303-303", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_66 [label=Exception, span="305-305", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_68 [label="var deltaCharts = new Dictionary<string, Chart>()", span="310-310", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_67 [label="Log.Error(err, ''Can't update variables'')", span="307-307", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_69 [label=_chartLock, span="311-311", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_71 [label="deltaCharts.Add(chart.Name, chart.GetUpdates())", span="316-316", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_70 [label="Charts.Values", span="314-314", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_72 [label="var runtimeStatistics = new Dictionary<string, string>()", span="321-321", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_73 [label=_runtimeLock, span="322-322", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_75 [label="runtimeStatistics.Add(pair.Key, pair.Value)", span="326-326", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_76 [label="runtimeStatistics.Add(''Unrealized'', ''$'' + _algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="329-329", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_77 [label="runtimeStatistics.Add(''Fees'', ''-$'' + _algorithm.Portfolio.TotalFees.ToString(''N2''))", span="330-330", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_78 [label="runtimeStatistics.Add(''Net Profit'', ''$'' + (_algorithm.Portfolio.TotalProfit - _algorithm.Portfolio.TotalFees).ToString(''N2''))", span="331-331", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_79 [label="runtimeStatistics.Add(''Return'', ((_algorithm.Portfolio.TotalPortfolioValue - _setupHandler.StartingPortfolioValue) / _setupHandler.StartingPortfolioValue).ToString(''P''))", span="332-332", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_80 [label="runtimeStatistics.Add(''Equity'', ''$'' + _algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="333-333", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_84 [label="var completeResult = new BacktestResult(Charts, _transactionHandler.Orders, Algorithm.Transactions.TransactionRecord, new Dictionary<string, string>(), runtimeStatistics, new Dictionary<string, AlgorithmPerformance>())", span="340-340", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_74 [label=_runtimeStatistics, span="324-324", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_81 [label="var progress = Convert.ToDecimal(_daysProcessed / _jobDays)", span="336-336", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_82 [label="progress > 0.999m", span="337-337", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_85 [label="var complete = new BacktestResultPacket(_job, completeResult, progress)", span="341-341", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_83 [label="progress = 0.999m", span="337-337", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_86 [label="DateTime.Now > _nextS3Update", span="343-343", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_88 [label="StoreResult(complete, false)", span="346-346", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_87 [label="_nextS3Update = DateTime.Now.AddSeconds(30)", span="345-345", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_90 [label=splitPackets, span="352-352", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_91 [label="_messagingHandler.Send(backtestingPacket)", span="354-354", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_92 [label=Exception, span="357-357", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_93 [label="Log.Error(err)", span="359-359", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_94 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", span="269-269", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs"];
m16_35 [label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", span="135-135", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs"];
m16_41 [label="algorithm.SubscriptionManager.AddConsolidator(security.Symbol, Consolidator)", span="139-139", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs"];
m16_44 [label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", span="135-135", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs"];
m16_37 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="MacdAlphaModel.cs"];
m16_38 [label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202", cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="MacdAlphaModel.cs"];
m16_39 [label="Security = security", span="137-137", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs"];
m16_40 [label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, resolution)", span="138-138", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs"];
m16_42 [label="MACD = algorithm.MACD(security.Symbol, fastPeriod, slowPeriod, signalPeriod, movingAverageType)", span="141-141", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs"];
m16_43 [label="algorithm.RegisterIndicator(security.Symbol, MACD, Consolidator)", span="143-143", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs"];
m16_45 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="MacdAlphaModel.cs"];
m16_52 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="MacdAlphaModel.cs"];
m16_96 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="MacdAlphaModel.cs"];
m16_243 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="MacdAlphaModel.cs"];
m16_14 [label="normalizedSignal > BounceThresholdPercent", span="81-81", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_154 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="MacdAlphaModel.cs"];
m16_101 [label="Entry System.Convert.ToDecimal(double)", span="0-0", cluster="System.Convert.ToDecimal(double)", file="MacdAlphaModel.cs"];
m16_182 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="569-569", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="MacdAlphaModel.cs"];
m16_209 [label="var packet = new SecurityTypesPacket\r\n            {\r\n                Types = types\r\n            }", span="571-574", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="MacdAlphaModel.cs"];
m16_210 [label="Messages.Enqueue(packet)", span="575-575", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="MacdAlphaModel.cs"];
m16_211 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="569-569", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="MacdAlphaModel.cs"];
m16_47 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="MacdAlphaModel.cs"];
m16_140 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="437-437", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_141 [label="FinalStatistics = statisticsResults.Summary", span="441-441", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_144 [label="statisticsResults.RollingPerformances.Values", span="448-448", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_146 [label="var result = new BacktestResultPacket((BacktestNodePacket) job,\r\n                    new BacktestResult(charts, orders, profitLoss, statisticsResults.Summary, banner, statisticsResults.RollingPerformances, statisticsResults.TotalPerformance)\r\n                    , 1m)\r\n                {\r\n                    ProcessingTime = (DateTime.Now - _startTime).TotalSeconds,\r\n                    DateFinished = DateTime.Now,\r\n                    Progress = 1\r\n                }", span="454-461", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_142 [label="var charts = new Dictionary<string, Chart>(Charts)", span="444-444", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_143 [label="_processingFinalPacket = true", span="445-445", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_145 [label="ap.ClosedTrades.Clear()", span="450-450", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_147 [label="StoreResult(result)", span="464-464", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_148 [label="_messagingHandler.Send(result)", span="467-467", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_149 [label="Log.Trace(''BacktestingResultHandler.SendAnalysisResult(): Processed final packet'')", span="469-469", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_150 [label=Exception, span="471-471", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_151 [label="Log.Error(err)", span="473-473", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_152 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="437-437", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs"];
m16_99 [label="Entry QuantConnect.Chart.GetUpdates()", span="91-91", cluster="QuantConnect.Chart.GetUpdates()", file="MacdAlphaModel.cs"];
m16_103 [label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", span="171-171", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="MacdAlphaModel.cs"];
m16_278 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="734-734", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="MacdAlphaModel.cs"];
m16_279 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="734-734", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="MacdAlphaModel.cs"];
m16_185 [label="Entry System.Console.SetOut(System.IO.TextWriter)", span="0-0", cluster="System.Console.SetOut(System.IO.TextWriter)", file="MacdAlphaModel.cs"];
m16_256 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="681-681", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs"];
m16_257 [label=_chartLock, span="683-683", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs"];
m16_258 [label=updates, span="685-685", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs"];
m16_259 [label="!Charts.ContainsKey(update.Name)", span="688-688", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs"];
m16_260 [label="Charts.AddOrUpdate(update.Name, new Chart(update.Name))", span="690-690", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs"];
m16_261 [label="update.Series.Values", span="694-694", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs"];
m16_262 [label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="697-697", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs"];
m16_263 [label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit)\r\n                            {\r\n                                Color = series.Color, ScatterMarkerSymbol = series.ScatterMarkerSymbol\r\n                            })", span="699-702", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs"];
m16_264 [label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="706-706", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs"];
m16_265 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="681-681", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs"];
m16_13 [label="var normalizedSignal = sd.MACD.Signal / sd.Security.Price", span="80-80", cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_277 [label="Entry QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", file="MacdAlphaModel.cs"];
m16_180 [label="Entry System.Convert.ToInt32(int)", span="0-0", cluster="System.Convert.ToInt32(int)", file="MacdAlphaModel.cs"];
m16_49 [label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", span="", cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="MacdAlphaModel.cs"];
m16_181 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="MacdAlphaModel.cs"];
m16_155 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="482-482", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_156 [label="_algorithm = algorithm", span="484-484", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_172 [label="var debug = new FuncTextWriter(algorithm.Debug)", span="513-513", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_173 [label="var error = new FuncTextWriter(algorithm.Error)", span="514-514", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_157 [label="var totalMinutes = (_job.PeriodFinish - _job.PeriodStart).TotalMinutes", span="487-487", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_158 [label="var resampleMinutes = (totalMinutes < (_minimumSamplePeriod * _samples)) ? _minimumSamplePeriod : (totalMinutes / _samples)", span="488-488", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_159 [label="_resamplePeriod = TimeSpan.FromMinutes(resampleMinutes)", span="489-489", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_160 [label="Log.Trace(''BacktestingResultHandler(): Sample Period Set: '' + resampleMinutes.ToString(''00.00''))", span="490-490", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_161 [label="_jobDays = Time.TradeableDates(Algorithm.Securities.Values, _job.PeriodStart, _job.PeriodFinish)", span="493-493", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_162 [label="_debugMessageMax = Convert.ToInt32(10 * _jobDays)", span="496-496", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_163 [label="_debugMessageMax < _debugMessageMin", span="498-498", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_164 [label="_debugMessageMax = _debugMessageMin", span="498-498", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_165 [label="_debugMessagePeriod = ''backtest''", span="500-500", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_166 [label="var types = new List<SecurityType>()", span="503-503", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_167 [label="_algorithm.Securities.Values", span="504-504", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_168 [label="!types.Contains(security.Type)", span="506-506", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_169 [label="types.Add(security.Type)", span="506-506", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_170 [label="SecurityType(types)", span="508-508", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_171 [label="Config.GetBool(''forward-console-messages'', true)", span="510-510", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_174 [label="Console.SetOut(debug)", span="515-515", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_175 [label="Console.SetError(error)", span="516-516", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_176 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="482-482", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs"];
m16_9 [label="Charts[''Strategy Equity''].Series.Add(''Equity'', new Series(''Equity'', SeriesType.Candle, 0, ''$''))", span="193-193", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_10 [label="Charts[''Strategy Equity''].Series.Add(''Daily Performance'', new Series(''Daily Performance'', SeriesType.Bar, 1, ''%''))", span="194-194", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_15 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="MacdAlphaModel.cs"];
m16_11 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="176-176", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_18 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="MacdAlphaModel.cs"];
m16_323 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="MacdAlphaModel.cs"];
m16_321 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)", file="MacdAlphaModel.cs"];
m16_97 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="MacdAlphaModel.cs"];
m16_196 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", span="540-540", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs"];
m16_197 [label="Messages.Enqueue(new SystemDebugPacket(_job.ProjectId, _backtestId, _compileId, message))", span="542-542", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs"];
m16_199 [label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="547-547", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs"];
m16_200 [label="_debugMessage = message", span="549-549", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs"];
m16_198 [label="_algorithm != null", span="545-545", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs"];
m16_201 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", span="540-540", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs"];
m16_153 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="MacdAlphaModel.cs"];
m16_202 [label="Entry QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", span="17-17", cluster="QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", file="MacdAlphaModel.cs"];
m16_100 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="MacdAlphaModel.cs"];
m16_286 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="71-71", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="MacdAlphaModel.cs"];
m16_267 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="MacdAlphaModel.cs"];
m16_183 [label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141", cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="MacdAlphaModel.cs"];
m16_139 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="MacdAlphaModel.cs"];
m16_177 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="MacdAlphaModel.cs"];
m16_320 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="MacdAlphaModel.cs"];
m16_122 [label="Entry QuantConnect.Packets.BacktestResult.BacktestResult()", span="216-216", cluster="QuantConnect.Packets.BacktestResult.BacktestResult()", file="MacdAlphaModel.cs"];
m16_222 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="596-596", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="MacdAlphaModel.cs"];
m16_223 [label="PurgeQueue()", span="598-598", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="MacdAlphaModel.cs"];
m16_224 [label="Messages.Enqueue(new RuntimeErrorPacket(_job.UserId, _backtestId, message, stacktrace))", span="599-599", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="MacdAlphaModel.cs"];
m16_225 [label="_errorMessage = message", span="600-600", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="MacdAlphaModel.cs"];
m16_226 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="596-596", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="MacdAlphaModel.cs"];
m16_242 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="MacdAlphaModel.cs"];
m16_121 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", file="MacdAlphaModel.cs"];
m16_287 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="776-776", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="MacdAlphaModel.cs"];
m16_288 [label=_runtimeLock, span="778-778", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="MacdAlphaModel.cs"];
m16_289 [label="_runtimeStatistics[key] = value", span="780-780", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="MacdAlphaModel.cs"];
m16_290 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="776-776", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="MacdAlphaModel.cs"];
m16_227 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="765-765", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="MacdAlphaModel.cs"];
m16_284 [label="Messages.Clear()", span="767-767", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="MacdAlphaModel.cs"];
m16_285 [label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="765-765", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="MacdAlphaModel.cs"];
m16_178 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="MacdAlphaModel.cs"];
m16_212 [label="Entry QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", span="52-52", cluster="QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", file="MacdAlphaModel.cs"];
m16_228 [label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60", cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", file="MacdAlphaModel.cs"];
m16_98 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="MacdAlphaModel.cs"];
m16_0 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="176-176", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_1 [label="_messages = new ConcurrentQueue<Packet>()", span="179-179", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_2 [label="_charts = new ConcurrentDictionary<string, Chart>()", span="180-180", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_3 [label="_chartLock = new Object()", span="181-181", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_4 [label="_isActive = true", span="182-182", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_5 [label="_notificationPeriod = TimeSpan.FromSeconds(2)", span="185-185", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_6 [label="_exitTriggered = false", span="186-186", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_7 [label="_startTime = DateTime.Now", span="189-189", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_8 [label="Charts.AddOrUpdate(''Strategy Equity'', new Chart(''Strategy Equity''))", span="192-192", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs"];
m16_95 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MacdAlphaModel.cs"];
m16_194 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="MacdAlphaModel.cs"];
m16_245 [label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="370-370", cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="MacdAlphaModel.cs"];
m16_179 [label="Entry QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="376-376", cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="MacdAlphaModel.cs"];
m16_324 [label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", span="", file="MacdAlphaModel.cs"];
m17_0 [label="Entry QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="26-26", cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NullExecutionModel.cs"];
m17_1 [label="Exit QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="26-26", cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NullExecutionModel.cs"];
m17_2 [label="Entry QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="30-30", cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="NullExecutionModel.cs"];
m17_3 [label="Exit QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="30-30", cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="NullExecutionModel.cs"];
m18_5 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="NullPortfolioConstructionModel.cs"];
m18_0 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="27-27", cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NullPortfolioConstructionModel.cs"];
m18_1 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="27-27", cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NullPortfolioConstructionModel.cs"];
m18_2 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31", cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="NullPortfolioConstructionModel.cs"];
m18_3 [label="return Enumerable.Empty<IPortfolioTarget>();", span="33-33", cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="NullPortfolioConstructionModel.cs"];
m18_4 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31", cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="NullPortfolioConstructionModel.cs"];
m19_67 [label="Entry QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", span="179-179", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_74 [label="var rows = new SortedDictionary<DateTime, string>()", span="181-181", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_75 [label="var zip = ZipFile.Read(fileName)", span="183-183", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_84 [label="return rows;", span="202-202", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_83 [label="rows[time] = line", span="196-196", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_76 [label="var stream = new MemoryStream()", span="185-185", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_77 [label="zip[0].Extract(stream)", span="187-187", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_81 [label="(line = reader.ReadLine()) != null", span="193-193", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_82 [label="var time = DateTime.ParseExact(line.Substring(0, DateFormat.TwelveCharacter.Length), DateFormat.TwelveCharacter, CultureInfo.InvariantCulture)", span="195-195", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_78 [label="stream.Seek(0, SeekOrigin.Begin)", span="188-188", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_79 [label="var reader = new StreamReader(stream)", span="190-190", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_80 [label="string line", span="192-192", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_85 [label="Exit QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", span="179-179", cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_47 [label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_17 [label="Resolution.Hour", span="78-78", cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_14 [label=targets, span="60-60", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_15 [label="yield return target.AsManagedObject(typeof(IPortfolioTarget)) as IPortfolioTarget;", span="62-62", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_18 [label="Entry Unk.AsManagedObject", span="", cluster="Unk.AsManagedObject", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_22 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="72-72", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_16 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="55-55", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_19 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="72-72", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_21 [label="_model.OnSecuritiesChanged(algorithm, changes)", span="76-76", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_20 [label="Py.GIL()", span="74-74", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_23 [label="Entry Unk.OnSecuritiesChanged", span="", cluster="Unk.OnSecuritiesChanged", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_44 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_45 [label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_101 [label="Compression.Zip(data, tempFilePath, LeanData.GenerateZipEntryName(_symbol.Value, _securityType, date, _resolution, _dataType))", span="226-226", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_95 [label="var tempFilePath = filePath + ''.tmp''", span="213-213", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_96 [label="data = data.TrimEnd()", span="215-215", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_100 [label="Directory.CreateDirectory(Path.GetDirectoryName(filePath))", span="223-223", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_102 [label="File.Move(tempFilePath, filePath)", span="229-229", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_97 [label="File.Exists(filePath)", span="216-216", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_98 [label="File.Delete(filePath)", span="218-218", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_99 [label="Log.Trace(''LeanDataWriter.Write(): Existing deleted: '' + filePath)", span="219-219", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_103 [label="Log.Trace(''LeanDataWriter.Write(): Created: '' + filePath)", span="231-231", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_104 [label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_71 [label="Entry lambda expression", span="144-144", cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_72 [label="LeanData.GenerateLine(x, _securityType, _resolution)", span="144-144", cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_68 [label="Entry lambda expression", span="144-144", cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_73 [label="Exit lambda expression", span="144-144", cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_69 [label="x.Time", span="144-144", cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_70 [label="Exit lambda expression", span="144-144", cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_111 [label="Entry QuantConnect.Compression.Zip(string, string, string)", span="343-343", cluster="QuantConnect.Compression.Zip(string, string, string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_93 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_92 [label="Entry System.IO.StreamReader.ReadLine()", span="0-0", cluster="System.IO.StreamReader.ReadLine()", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_11 [label="Exit QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_12 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_13 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_0 [label="Entry QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_1 [label="_securityType = symbol.ID.SecurityType", span="50-50", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_3 [label="_resolution = resolution", span="52-52", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_4 [label="_symbol = symbol", span="53-53", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_5 [label="_market = symbol.ID.Market.ToLower()", span="54-54", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_2 [label="_dataDirectory = dataDirectory", span="51-51", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_6 [label="_dataType = dataType", span="55-55", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs", color=green, community=0];
m19_64 [label="Entry SortedDictionary<DateTime, string>.cstr", span="", cluster="SortedDictionary<DateTime, string>.cstr", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_25 [label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="95-95", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_32 [label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="111-111", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_33 [label="WriteFile(outputFile, sb.ToString(), lastTime)", span="112-112", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_36 [label="sb.Append(LeanData.GenerateLine(data, _securityType, _resolution) + Environment.NewLine)", span="119-119", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_38 [label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="125-125", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_39 [label="WriteFile(outputFile, sb.ToString(), lastTime)", span="126-126", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_27 [label="var lastTime = new DateTime()", span="98-98", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_31 [label="lastTime != DateTime.MinValue && data.Time.Date > lastTime.Date", span="108-108", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_26 [label="var sb = new StringBuilder()", span="97-97", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_34 [label="sb.Clear()", span="113-113", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_28 [label=source, span="102-102", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_35 [label="lastTime = data.Time", span="116-116", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_37 [label="sb.Length > 0", span="123-123", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_30 [label="throw new Exception(''The data must be pre-sorted from oldest to newest'');", span="105-105", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_29 [label="data.Time < lastTime", span="105-105", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_40 [label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="95-95", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_112 [label="Entry System.IO.File.Move(string, string)", span="0-0", cluster="System.IO.File.Move(string, string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_110 [label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="526-526", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_109 [label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0", cluster="System.IO.Directory.CreateDirectory(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_105 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_115 [label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_7 [label="Entry Unk.GIL", span="", cluster="Unk.GIL", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_8 [label="Entry Unk.HasAttr", span="", cluster="Unk.HasAttr", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_9 [label="_securityType != SecurityType.Equity && _securityType != SecurityType.Forex && _securityType != SecurityType.Cfd && _securityType != SecurityType.Crypto", span="63-63", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_10 [label="Entry Unk.GetPythonType", span="", cluster="Unk.GetPythonType", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_94 [label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_106 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_24 [label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper", span="", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_51 [label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="141-141", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_52 [label="var newRows = new SortedDictionary<DateTime, string>(source.ToDictionary(x => x.Time, x => LeanData.GenerateLine(x, _securityType, _resolution)))", span="144-144", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_62 [label="WriteFile(outputFile, sb.ToString(), lastTime)", span="172-172", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_50 [label="var lastTime = new DateTime()", span="138-138", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_54 [label="File.Exists(outputFile)", span="147-147", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_55 [label="rows = LoadHourlyOrDailyFile(outputFile)", span="150-150", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_53 [label="SortedDictionary<DateTime, string> rows", span="145-145", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_56 [label=newRows, span="151-151", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_58 [label="rows = newRows", span="159-159", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_49 [label="var sb = new StringBuilder()", span="137-137", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_61 [label="sb.Length > 0", span="170-170", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_60 [label="sb.Append(kvp.Value + Environment.NewLine)", span="166-166", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_57 [label="rows[kvp.Key] = kvp.Value", span="153-153", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_59 [label=rows, span="163-163", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_63 [label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="135-135", cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_46 [label="Entry System.Text.StringBuilder.Clear()", span="0-0", cluster="System.Text.StringBuilder.Clear()", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_43 [label="Entry QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="240-240", cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_113 [label="return LeanData.GenerateZipFilePath(baseDirectory, _symbol.Value, _securityType, _market, time, _resolution);", span="242-242", cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_114 [label="Exit QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="240-240", cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_66 [label="Entry System.IO.File.Exists(string)", span="0-0", cluster="System.IO.File.Exists(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_48 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_108 [label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0", cluster="System.IO.Path.GetDirectoryName(string)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_87 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_90 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_41 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_91 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_86 [label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0", cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_107 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_89 [label="Entry Unk.Extract", span="", cluster="Unk.Extract", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_42 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_65 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_88 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="PortfolioConstructionModelPythonWrapper.cs"];
m19_116 [label="QuantConnect.ToolBox.LeanDataWriter", span="", file="PortfolioConstructionModelPythonWrapper.cs"];
m20_21 [label="Entry QuantConnect.Util.Composer.AddPart<T>(T)", span="75-75", cluster="QuantConnect.Util.Composer.AddPart<T>(T)", file="PortfolioTarget.cs"];
m20_5 [label="var required = new[] { ''gdax-url'', ''gdax-api-secret'', ''gdax-api-key'', ''gdax-passphrase'' }", span="78-78", cluster="QuantConnect.Brokerages.GDAX.BitfinexBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="PortfolioTarget.cs"];
m20_38 [label="Exit QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator(string)", span="93-93", cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator(string)", file="PortfolioTarget.cs"];
m20_20 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="82-82", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="PortfolioTarget.cs"];
m20_18 [label="Entry QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator()", span="100-100", cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator()", file="PortfolioTarget.cs"];
m20_6 [label=required, span="80-80", cluster="QuantConnect.Brokerages.GDAX.BitfinexBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="PortfolioTarget.cs"];
m20_0 [label="Entry QuantConnect.Tests.Indicators.IndicatorTests.NameSaves()", span="28-28", cluster="QuantConnect.Tests.Indicators.IndicatorTests.NameSaves()", file="PortfolioTarget.cs"];
m20_1 [label="string name = ''name''", span="31-31", cluster="QuantConnect.Tests.Indicators.IndicatorTests.NameSaves()", file="PortfolioTarget.cs"];
m20_2 [label="var target = new TestIndicator(name)", span="32-32", cluster="QuantConnect.Tests.Indicators.IndicatorTests.NameSaves()", file="PortfolioTarget.cs"];
m20_3 [label="Assert.AreEqual(name, target.Name)", span="33-33", cluster="QuantConnect.Tests.Indicators.IndicatorTests.NameSaves()", file="PortfolioTarget.cs"];
m20_4 [label="Entry QuantConnect.Brokerages.GDAX.BitfinexBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="76-76", cluster="QuantConnect.Brokerages.GDAX.BitfinexBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="PortfolioTarget.cs"];
m20_22 [label="Entry QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", span="59-59", cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs"];
m20_23 [label="var target = new TestIndicator()", span="61-61", cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs"];
m20_24 [label="var time = DateTime.UtcNow", span="63-63", cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs"];
m20_25 [label="target.Update(new IndicatorDataPoint(time, 1m))", span="65-65", cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs"];
m20_26 [label="target.Update(new IndicatorDataPoint(time.AddMilliseconds(-1), 2m))", span="66-66", cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs"];
m20_27 [label="Exit QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", span="59-59", cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs"];
m20_11 [label="var time = DateTime.UtcNow", span="47-47", cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", color=green, community=0, file="PortfolioTarget.cs"];
m20_9 [label="Assert.AreEqual(DateTime.MinValue, target.Current.Time)", span="44-44", cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs"];
m20_10 [label="Assert.AreEqual(0m, target.Current.Value)", span="45-45", cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs"];
m20_12 [label="var data = new IndicatorDataPoint(time, 1m)", span="48-48", cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs"];
m20_13 [label="target.Update(data)", span="50-50", cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs"];
m20_7 [label="Entry QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", span="37-37", cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs"];
m20_8 [label="var target = new TestIndicator()", span="42-42", cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs"];
m20_14 [label="Assert.AreEqual(1m, target.Current.Value)", span="51-51", cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs"];
m20_40 [label="Entry QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="118-118", cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="PortfolioTarget.cs"];
m20_41 [label="return input;", span="120-120", cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="PortfolioTarget.cs"];
m20_42 [label="Exit QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="118-118", cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="PortfolioTarget.cs"];
m20_16 [label="Assert.AreEqual(2m, target.Current.Value)", span="54-54", cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs"];
m20_15 [label="target.Update(new IndicatorDataPoint(time.AddMilliseconds(1), 2m))", span="53-53", cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs"];
m20_17 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="PortfolioTarget.cs"];
m20_28 [label="Entry QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", span="70-70", cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs"];
m20_29 [label="var target = new TestIndicator()", span="72-72", cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs"];
m20_30 [label="var time = DateTime.UtcNow", span="74-74", cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs"];
m20_33 [label="target.Update(data)", span="78-78", cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs"];
m20_34 [label="Assert.AreEqual(value1, target.Current.Value)", span="79-79", cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs"];
m20_35 [label="target.Update(data)", span="83-83", cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs"];
m20_36 [label="Assert.AreEqual(value1, target.Current.Value)", span="84-84", cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs"];
m20_31 [label="decimal value1 = 1m", span="76-76", cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs"];
m20_32 [label="var data = new IndicatorDataPoint(time, value1)", span="77-77", cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs"];
m20_37 [label="Exit QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", span="70-70", cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs"];
m20_39 [label="Exit QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator()", span="100-100", cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator()", file="PortfolioTarget.cs"];
m20_19 [label="Entry QuantConnect.Brokerages.WebSocketWrapper.WebSocketWrapper()", span="27-27", cluster="QuantConnect.Brokerages.WebSocketWrapper.WebSocketWrapper()", file="PortfolioTarget.cs"];
m21_744 [label="Entry IBApi.Order.cstr", span="", cluster="IBApi.Order.cstr", file="PythonUtil.cs"];
m21_970 [label="Entry QuantConnect.Holding.Holding()", span="83-83", cluster="QuantConnect.Holding.Holding()", file="PythonUtil.cs"];
m21_404 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="PythonUtil.cs"];
m21_333 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="PythonUtil.cs"];
m21_58 [label="Log.Error(''InteractiveBrokersBrokerage.PlaceOrder(): '' + err)", span="273-273", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_505 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="PythonUtil.cs"];
m21_721 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="PythonUtil.cs"];
m21_589 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", span="78-78", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", file="PythonUtil.cs"];
m21_121 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="PythonUtil.cs"];
m21_294 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="676-676", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs"];
m21_295 [label="Log.Trace(''InteractiveBrokersBrokerage.Dispose(): Disposing of IB resources.'')", span="678-678", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs"];
m21_296 [label="_client != null", span="680-680", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs"];
m21_297 [label="Disconnect()", span="682-682", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs"];
m21_299 [label="_messagingRateLimiter.Dispose()", span="686-686", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs"];
m21_298 [label="_client.Dispose()", span="683-683", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs"];
m21_300 [label="_ctsRestartGateway.Cancel(false)", span="688-688", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs"];
m21_301 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="676-676", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs"];
m21_590 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="107-107", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="PythonUtil.cs"];
m21_238 [label="Entry EReader.cstr", span="", cluster="EReader.cstr", file="PythonUtil.cs"];
m21_277 [label="Entry Unk.reqAccountUpdates", span="", cluster="Unk.reqAccountUpdates", file="PythonUtil.cs"];
m21_811 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="65-65", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1350 [label="Entry System.IO.File.ReadAllLines(string)", span="0-0", cluster="System.IO.File.ReadAllLines(string)", file="PythonUtil.cs"];
m21_70 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="304-304", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_1253 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", span="2467-2467", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1269 [label="int timeOut = 60", span="2477-2477", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1273 [label="var useRegularTradingHours = Convert.ToInt32(!request.IncludeExtendedMarketHours)", span="2483-2483", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1274 [label="endTime >= startTime", span="2486-2486", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1278 [label="_requestInformation[historicalTicker] = ''GetHistory: '' + contract", span="2492-2492", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1279 [label="EventHandler<IB.HistoricalDataEventArgs> clientOnHistoricalData = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == historicalTicker)\r\n                    {\r\n                        var bar = ConvertTradeBar(request.Symbol, request.Resolution, args);\r\n                        if (request.Resolution != Resolution.Daily)\r\n                        {\r\n                            bar.Time = bar.Time.ConvertFromUtc(exchangeTimeZone);\r\n                        }\r\n\r\n                        historyPiece.Add(bar);\r\n                        dataDownloading.Set();\r\n                    }\r\n                }", span="2494-2507", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1285 [label="Client.ClientSocket.reqHistoricalData(historicalTicker, contract, endTime.ToString(''yyyyMMdd HH:mm:ss UTC''),\r\n                    duration, resolution, dataType, useRegularTradingHours, 2, false, new List<TagValue>())", span="2534-2535", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1270 [label="var history = new List<TradeBar>()", span="2479-2479", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1288 [label="waitResult = WaitHandle.WaitAny(new WaitHandle[] {dataDownloading, dataDownloaded}, timeOut*1000)", span="2540-2540", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1294 [label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() Pacing violation. Paused for {0} secs.'', timeOut)", span="2552-2552", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1295 [label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() History request timed out ({0} sec)'', timeOut)", span="2556-2556", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1271 [label="var dataDownloading = new AutoResetEvent(false)", span="2480-2480", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1298 [label="history.AddRange(filteredPiece)", span="2568-2568", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1300 [label="return history;", span="2574-2574", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1272 [label="var dataDownloaded = new ManualResetEvent(false)", span="2481-2481", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1280 [label="EventHandler<IB.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == historicalTicker)\r\n                    {\r\n                        dataDownloaded.Set();\r\n                    }\r\n                }", span="2509-2515", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1281 [label="EventHandler<IB.ErrorEventArgs> clientOnError = (sender, args) =>\r\n                {\r\n                    if (args.Code == 162 && args.Message.Contains(''pacing violation''))\r\n                    {\r\n                        // pacing violation happened\r\n                        pacing = true;\r\n                    }\r\n                    if (args.Code == 162 && args.Message.Contains(''no data''))\r\n                    {\r\n                        dataDownloaded.Set();\r\n                    }\r\n                }", span="2517-2528", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1275 [label="var pacing = false", span="2488-2488", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1276 [label="var historyPiece = new List<TradeBar>()", span="2489-2489", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1277 [label="var historicalTicker = GetNextTickerId()", span="2490-2490", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1296 [label="!historyPiece.Any()", span="2561-2561", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1297 [label="var filteredPiece = historyPiece.OrderBy(x => x.Time)", span="2566-2566", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1283 [label="Client.HistoricalData += clientOnHistoricalData", span="2531-2531", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1290 [label="Client.HistoricalData -= clientOnHistoricalData", span="2544-2544", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1284 [label="Client.HistoricalDataEnd += clientOnHistoricalDataEnd", span="2532-2532", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1291 [label="Client.HistoricalDataEnd -= clientOnHistoricalDataEnd", span="2545-2545", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1282 [label="Client.Error += clientOnError", span="2530-2530", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1289 [label="Client.Error -= clientOnError", span="2543-2543", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1293 [label=pacing, span="2549-2549", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1286 [label="var waitResult = 0", span="2537-2537", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1287 [label="waitResult == 0", span="2538-2538", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1292 [label="waitResult == WaitHandle.WaitTimeout", span="2547-2547", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1299 [label="endTime = filteredPiece.First().Time", span="2571-2571", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_1301 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", span="2467-2467", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs"];
m21_569 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="1198-1198", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_604 [label="!_disconnected1100Fired", span="1202-1202", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_605 [label="return;", span="1204-1204", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_606 [label="var isResetTime = IsWithinScheduledServerResetTimes()", span="1207-1207", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_607 [label="!isResetTime", span="1209-1209", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_614 [label="_previouslyInResetTime = isResetTime", span="1234-1234", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_608 [label=_previouslyInResetTime, span="1211-1211", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_612 [label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Within server reset times, trying to wait for reconnect...'')", span="1228-1228", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_609 [label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Reset time finished and still disconnected. Restarting...'')", span="1214-1214", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_611 [label="OnMessage(BrokerageMessageEvent.Disconnected(''Connection with Interactive Brokers lost. '' +\r\n                                                                 ''This could be because of internet connectivity issues or a log in from another location.''\r\n                        ))", span="1221-1223", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_610 [label="_resetEventRestartGateway.Set()", span="1216-1216", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_613 [label="Task.Delay(TimeSpan.FromMinutes(1)).ContinueWith(_ => TryWaitForReconnect())", span="1231-1231", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_615 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="1198-1198", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs"];
m21_1059 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="PythonUtil.cs"];
m21_44 [label="Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in ResetGatewayConnection: '' + exception)", span="233-233", cluster="lambda expression", file="PythonUtil.cs"];
m21_1264 [label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217", cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="PythonUtil.cs"];
m21_176 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="PythonUtil.cs"];
m21_397 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="PythonUtil.cs"];
m21_120 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="PythonUtil.cs"];
m21_27 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="PythonUtil.cs"];
m21_1093 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="PythonUtil.cs"];
m21_1212 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="PythonUtil.cs"];
m21_140 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="PythonUtil.cs"];
m21_1142 [label="Entry QuantConnect.Data.Market.Tick.IsValid()", span="412-412", cluster="QuantConnect.Data.Market.Tick.IsValid()", file="PythonUtil.cs"];
m21_775 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", span="1700-1700", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_851 [label="order.OrderType", span="1702-1702", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_861 [label="order.Tif == IB.TimeInForce.MarketOnOpen", span="1710-1710", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_864 [label="throw new ArgumentException(order.OrderType, ''order.OrderType'');", span="1717-1717", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_852 [label="IB.OrderType.Limit", span="1704-1704", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_854 [label="IB.OrderType.Stop", span="1705-1705", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_856 [label="IB.OrderType.StopLimit", span="1706-1706", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_858 [label="IB.OrderType.MarketOnClose", span="1707-1707", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_860 [label="IB.OrderType.Market", span="1709-1709", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_853 [label="return OrderType.Limit;", span="1704-1704", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_855 [label="return OrderType.StopMarket;", span="1705-1705", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_857 [label="return OrderType.StopLimit;", span="1706-1706", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_859 [label="return OrderType.MarketOnClose;", span="1707-1707", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_862 [label="return OrderType.MarketOnOpen;", span="1712-1712", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_863 [label="return OrderType.Market;", span="1714-1714", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_865 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", span="1700-1700", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs"];
m21_331 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", span="1591-1591", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_785 [label="var securityType = ConvertSecurityType(symbol.ID.SecurityType)", span="1593-1593", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_786 [label="var ibSymbol = _symbolMapper.GetBrokerageSymbol(symbol)", span="1594-1594", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_787 [label="var contract = new Contract\r\n            {\r\n                Symbol = ibSymbol,\r\n                Exchange = exchange ?? ''Smart'',\r\n                SecType = securityType,\r\n                Currency = ''USD''\r\n            }", span="1595-1601", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_788 [label="symbol.ID.SecurityType == SecurityType.Forex", span="1602-1602", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_792 [label="symbol.ID.SecurityType == SecurityType.Equity", span="1610-1610", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_794 [label="symbol.ID.SecurityType == SecurityType.Option", span="1615-1615", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_795 [label="contract.LastTradeDateOrContractMonth = symbol.ID.Date.ToString(DateFormat.EightCharacter)", span="1617-1617", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_796 [label="contract.Right = symbol.ID.OptionRight == OptionRight.Call ? IB.RightType.Call : IB.RightType.Put", span="1618-1618", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_797 [label="contract.Strike = Convert.ToDouble(symbol.ID.StrikePrice)", span="1619-1619", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_801 [label="symbol.ID.SecurityType == SecurityType.Future", span="1625-1625", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_803 [label="contract.LastTradeDateOrContractMonth = symbol.ID.Date.ToString(DateFormat.YearMonth)", span="1631-1631", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_804 [label="symbol.ID.Market == Market.USA", span="1633-1633", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_807 [label="contract.Exchange = _futuresExchanges.ContainsKey(symbol.ID.Market) ?\r\n                                            _futuresExchanges[symbol.ID.Market] :\r\n                                            symbol.ID.Market", span="1640-1642", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_790 [label="contract.Symbol = ibSymbol.Substring(0, 3)", span="1606-1606", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_791 [label="contract.Currency = ibSymbol.Substring(3)", span="1607-1607", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_798 [label="contract.Symbol = ibSymbol", span="1620-1620", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_802 [label="contract.Symbol = ibSymbol", span="1630-1630", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_789 [label="contract.Exchange = ''IDEALPRO''", span="1605-1605", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_793 [label="contract.PrimaryExch = GetPrimaryExchange(contract)", span="1612-1612", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_808 [label="return contract;", span="1646-1646", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_799 [label="contract.Multiplier = ''100''", span="1621-1621", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_800 [label="contract.TradingClass = GetTradingClass(contract)", span="1622-1622", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_805 [label="contract.Exchange = ''''", span="1635-1635", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_806 [label="contract.Exchange = GetFuturesContractExchange(contract)", span="1636-1636", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_809 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", span="1591-1591", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs"];
m21_601 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="PythonUtil.cs"];
m21_617 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", span="68-68", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", file="PythonUtil.cs"];
m21_634 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134", cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="PythonUtil.cs"];
m21_1213 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="PythonUtil.cs"];
m21_99 [label="Entry Unk.reqAllOpenOrders", span="", cluster="Unk.reqAllOpenOrders", file="PythonUtil.cs"];
m21_355 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", span="779-779", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs"];
m21_356 [label="ContractDetails details", span="781-781", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs"];
m21_357 [label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="782-782", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs"];
m21_359 [label="details = GetContractDetails(contract)", span="787-787", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs"];
m21_358 [label="return details.Summary.TradingClass;", span="784-784", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs"];
m21_360 [label="details == null", span="788-788", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs"];
m21_362 [label="return details.Summary.TradingClass;", span="794-794", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs"];
m21_361 [label="return null;", span="791-791", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs"];
m21_363 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", span="779-779", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs"];
m21_1354 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="PythonUtil.cs"];
m21_334 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="PythonUtil.cs"];
m21_591 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", span="214-214", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="PythonUtil.cs"];
m21_665 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", span="1724-1724", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_867 [label=status, span="1726-1726", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_889 [label="throw new ArgumentException(status, ''status'');", span="1759-1759", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_868 [label="IB.OrderStatus.ApiPending", span="1728-1728", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_872 [label="IB.OrderStatus.ApiCancelled", span="1733-1733", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_876 [label="IB.OrderStatus.Submitted", span="1738-1738", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_878 [label="IB.OrderStatus.Filled", span="1741-1741", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_880 [label="IB.OrderStatus.PartiallyFilled", span="1744-1744", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_882 [label="IB.OrderStatus.Error", span="1747-1747", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_884 [label="IB.OrderStatus.Inactive", span="1750-1750", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_887 [label="IB.OrderStatus.None", span="1754-1754", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_869 [label="IB.OrderStatus.PendingSubmit", span="1729-1729", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_870 [label="IB.OrderStatus.PreSubmitted", span="1730-1730", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_871 [label="return OrderStatus.New;", span="1731-1731", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_873 [label="IB.OrderStatus.PendingCancel", span="1734-1734", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_874 [label="IB.OrderStatus.Cancelled", span="1735-1735", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_875 [label="return OrderStatus.Canceled;", span="1736-1736", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_877 [label="return OrderStatus.Submitted;", span="1739-1739", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_879 [label="return OrderStatus.Filled;", span="1742-1742", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_881 [label="return OrderStatus.PartiallyFilled;", span="1745-1745", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_883 [label="return OrderStatus.Invalid;", span="1748-1748", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_885 [label="Log.Error(''InteractiveBrokersBrokerage.ConvertOrderStatus(): Inactive order'')", span="1751-1751", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_886 [label="return OrderStatus.None;", span="1752-1752", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_888 [label="return OrderStatus.None;", span="1755-1755", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_890 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", span="1724-1724", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs"];
m21_1254 [label="Entry System.Collections.Generic.IEnumerable<TOuter>.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TOuter>.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)", file="PythonUtil.cs"];
m21_1057 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="PythonUtil.cs"];
m21_747 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1682-1682", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_836 [label=type, span="1684-1684", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_849 [label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(OrderType));", span="1693-1693", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_837 [label="OrderType.Market", span="1686-1686", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_839 [label="OrderType.Limit", span="1687-1687", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_841 [label="OrderType.StopMarket", span="1688-1688", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_843 [label="OrderType.StopLimit", span="1689-1689", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_845 [label="OrderType.MarketOnOpen", span="1690-1690", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_847 [label="OrderType.MarketOnClose", span="1691-1691", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_838 [label="return IB.OrderType.Market;", span="1686-1686", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_840 [label="return IB.OrderType.Limit;", span="1687-1687", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_842 [label="return IB.OrderType.Stop;", span="1688-1688", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_844 [label="return IB.OrderType.StopLimit;", span="1689-1689", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_846 [label="return IB.OrderType.Market;", span="1690-1690", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_848 [label="return IB.OrderType.MarketOnClose;", span="1691-1691", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_850 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1682-1682", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs"];
m21_990 [label="Entry System.Math.Round(decimal)", span="0-0", cluster="System.Math.Round(decimal)", file="PythonUtil.cs"];
m21_1211 [label="Entry Unk.GroupBy", span="", cluster="Unk.GroupBy", file="PythonUtil.cs"];
m21_187 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="PythonUtil.cs"];
m21_928 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="PythonUtil.cs"];
m21_145 [label="Entry Unk.GetUsdConversion", span="", cluster="Unk.GetUsdConversion", file="PythonUtil.cs"];
m21_343 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="PythonUtil.cs"];
m21_105 [label="Entry Unk.ConvertOrder", span="", cluster="Unk.ConvertOrder", file="PythonUtil.cs"];
m21_781 [label="Entry StopMarketOrder.cstr", span="", cluster="StopMarketOrder.cstr", file="PythonUtil.cs"];
m21_1094 [label="Entry string.IndexOf(string)", span="0-0", cluster="string.IndexOf(string)", file="PythonUtil.cs"];
m21_149 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="411-411", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="PythonUtil.cs"];
m21_150 [label="CheckIbGateway()", span="413-413", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="PythonUtil.cs"];
m21_151 [label="return _cashBalances.Select(x => new Cash(x.Key, x.Value, GetUsdConversion(x.Key))).ToList();", span="415-415", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="PythonUtil.cs"];
m21_152 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="411-411", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="PythonUtil.cs"];
m21_303 [label="Entry QuantConnect.Util.RateGate.Dispose()", span="196-196", cluster="QuantConnect.Util.RateGate.Dispose()", file="PythonUtil.cs"];
m21_502 [label="Entry Unk.reqMktData", span="", cluster="Unk.reqMktData", file="PythonUtil.cs"];
m21_47 [label=Exception, span="242-242", cluster="lambda expression", file="PythonUtil.cs"];
m21_1307 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="PythonUtil.cs"];
m21_100 [label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(int)", file="PythonUtil.cs"];
m21_45 [label="Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence end.'')", span="236-236", cluster="lambda expression", file="PythonUtil.cs"];
m21_244 [label="Entry Unk.setServerLogLevel", span="", cluster="Unk.setServerLogLevel", file="PythonUtil.cs"];
m21_69 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="283-283", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_1306 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="PythonUtil.cs"];
m21_603 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2040-2040", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1033 [label=symbols, span="2044-2044", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1034 [label="CanSubscribe(symbol)", span="2046-2046", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1053 [label=Exception, span="2092-2092", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1036 [label="Log.Trace(''InteractiveBrokersBrokerage.Subscribe(): Subscribe Request: '' + symbol.Value)", span="2050-2050", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1037 [label="!_subscribedSymbols.ContainsKey(symbol)", span="2052-2052", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1038 [label="var subscribeSymbol = symbol", span="2055-2055", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1039 [label="symbol.ID.SecurityType == SecurityType.Option && symbol.IsCanonical()", span="2058-2058", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1040 [label="subscribeSymbol = symbol.Underlying", span="2060-2060", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1041 [label="_underlyings.Add(subscribeSymbol, symbol)", span="2061-2061", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1042 [label="symbol.ID.SecurityType == SecurityType.Future && symbol.IsCanonical()", span="2065-2065", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1050 [label="_subscribedSymbols[symbol] = id", span="2083-2083", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1052 [label="Log.Trace(''InteractiveBrokersBrokerage.Subscribe(): Subscribe Processed: {0} ({1}) # {2}'', symbol.Value, contract.ToString(), id)", span="2086-2086", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1035 [label=_sync, span="2048-2048", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1045 [label="var contract = CreateContract(subscribeSymbol)", span="2071-2071", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1051 [label="_subscribedTickets[id] = subscribeSymbol", span="2084-2084", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1043 [label="return;", span="2067-2067", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1044 [label="var id = GetNextTickerId()", span="2070-2070", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1046 [label="_requestInformation[id] = ''Subscribe: '' + contract", span="2073-2073", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1048 [label="_subscriptionTimes[id] = DateTime.UtcNow", span="2078-2078", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1049 [label="Client.ClientSocket.reqMktData(id, contract, ''101'', false, false, new List<TagValue>())", span="2081-2081", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1047 [label="_messagingRateLimiter.WaitToProceed()", span="2075-2075", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1054 [label="Log.Error(''InteractiveBrokersBrokerage.Subscribe(): '' + err.Message)", span="2094-2094", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1055 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2040-2040", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_245 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="PythonUtil.cs"];
m21_750 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", span="1517-1517", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_751 [label="Order order", span="1524-1524", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_752 [label="var mappedSymbol = MapSymbol(contract)", span="1525-1525", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_753 [label="var direction = ConvertOrderDirection(ibOrder.Action)", span="1526-1526", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_755 [label="var orderType = ConvertOrderType(ibOrder)", span="1528-1528", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_758 [label="order = new MarketOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime() // not sure how to get this data\r\n                        )", span="1532-1535", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_760 [label="order = new MarketOnOpenOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime())", span="1539-1541", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_762 [label="order = new MarketOnCloseOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime()\r\n                        )", span="1545-1548", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_764 [label="order = new LimitOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.LmtPrice),\r\n                        new DateTime()\r\n                        )", span="1552-1556", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_766 [label="order = new StopMarketOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.AuxPrice),\r\n                        new DateTime()\r\n                        )", span="1560-1564", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_768 [label="order = new StopLimitOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.AuxPrice),\r\n                        Convert.ToDecimal(ibOrder.LmtPrice),\r\n                        new DateTime()\r\n                        )", span="1568-1573", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_770 [label="order.BrokerId.Add(ibOrder.OrderId.ToString())", span="1580-1580", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_754 [label="var quantitySign = direction == OrderDirection.Sell ? -1 : 1", span="1527-1527", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_756 [label=orderType, span="1529-1529", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_769 [label="throw new InvalidEnumArgumentException(''orderType'', (int) orderType, typeof (OrderType));", span="1577-1577", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_757 [label="OrderType.Market", span="1531-1531", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_759 [label="OrderType.MarketOnOpen", span="1538-1538", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_761 [label="OrderType.MarketOnClose", span="1544-1544", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_763 [label="OrderType.Limit", span="1551-1551", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_765 [label="OrderType.StopMarket", span="1559-1559", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_767 [label="OrderType.StopLimit", span="1567-1567", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_771 [label="return order;", span="1582-1582", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_772 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", span="1517-1517", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs"];
m21_746 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="PythonUtil.cs"];
m21_387 [label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131", cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="PythonUtil.cs"];
m21_119 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="PythonUtil.cs"];
m21_354 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", span="815-815", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_373 [label="int timeout = 60", span="817-817", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_376 [label="_requestInformation[requestId] = ''GetContractDetails: '' + contract", span="822-822", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_378 [label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails = (sender, args) =>\r\n            {\r\n                // ignore other requests\r\n                if (args.RequestId != requestId) return;\r\n                details = args.ContractDetails;\r\n                var uniqueKey = GetUniqueKey(contract);\r\n                _contractDetails.TryAdd(uniqueKey, details);\r\n                manualResetEvent.Set();\r\n                Log.Trace(''InteractiveBrokersBrokerage.GetContractDetails(): clientOnContractDetails event: '' + uniqueKey);\r\n            }", span="827-836", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_380 [label="_client.ClientSocket.reqContractDetails(requestId, contract)", span="841-841", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_374 [label="ContractDetails details = null", span="819-819", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_381 [label="!manualResetEvent.WaitOne(timeout * 1000)", span="843-843", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_382 [label="Log.Error(''InteractiveBrokersBrokerage.GetContractDetails(): failed to receive response from IB within {0} seconds'', timeout)", span="845-845", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_375 [label="var requestId = GetNextRequestId()", span="820-820", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_377 [label="var manualResetEvent = new ManualResetEvent(false)", span="824-824", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_379 [label="_client.ContractDetails += clientOnContractDetails", span="838-838", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_383 [label="_client.ContractDetails -= clientOnContractDetails", span="849-849", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_384 [label="return details;", span="851-851", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_385 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", span="815-815", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs"];
m21_574 [label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113", cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="PythonUtil.cs"];
m21_243 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", span="610-610", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_260 [label="EventHandler<IB.AccountDownloadEndEventArgs> clientOnAccountDownloadEnd = (sender, args) =>\r\n            {\r\n                Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Finished account download for '' + args.Account);\r\n                _accountHoldingsResetEvent.Set();\r\n            }", span="613-617", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_261 [label="_client.AccountDownloadEnd += clientOnAccountDownloadEnd", span="618-618", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_269 [label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", span="643-643", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_273 [label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", span="652-652", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_262 [label="var firstAccountUpdateReceived = new ManualResetEvent(false)", span="622-622", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_263 [label="EventHandler<IB.UpdateAccountValueEventArgs> clientOnUpdateAccountValue = (sender, args) =>\r\n            {\r\n                firstAccountUpdateReceived.Set();\r\n            }", span="623-626", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_266 [label="firstAccountUpdateReceived.WaitOne(2500)", span="634-634", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_264 [label="_client.UpdateAccountValue += clientOnUpdateAccountValue", span="628-628", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_270 [label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", span="644-644", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_274 [label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", span="653-653", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_265 [label="_client.ClientSocket.reqAccountUpdates(true, _account)", span="631-631", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_267 [label="Thread.Sleep(2500)", span="638-638", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_268 [label="!_accountHoldingsResetEvent.WaitOne(15000)", span="640-640", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_271 [label="Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Operation took longer than 15 seconds.'')", span="646-646", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_272 [label="return false;", span="648-648", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_275 [label="return true;", span="655-655", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_276 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", span="610-610", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs"];
m21_97 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="PythonUtil.cs"];
m21_259 [label="Entry Unk.processMsgs", span="", cluster="Unk.processMsgs", file="PythonUtil.cs"];
m21_339 [label="Entry Unk.placeOrder", span="", cluster="Unk.placeOrder", file="PythonUtil.cs"];
m21_237 [label="Entry Unk.eConnect", span="", cluster="Unk.eConnect", file="PythonUtil.cs"];
m21_1058 [label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168", cluster="QuantConnect.Symbol.IsCanonical()", file="PythonUtil.cs"];
m21_42 [label="ResetGatewayConnection()", span="229-229", cluster="lambda expression", file="PythonUtil.cs"];
m21_59 [label="return false;", span="274-274", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_31 [label="string.IsNullOrWhiteSpace(value)", span="96-96", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", color=green, community=0];
m21_33 [label="var baseScript = value.GetStringBetweenChars('\''', '\''')", span="102-102", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", color=green, community=0];
m21_48 [label="Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in reset handler thread: '' + exception)", span="244-244", cluster="lambda expression", file="PythonUtil.cs"];
m21_29 [label="Entry lambda expression", span="203-212", cluster="lambda expression", file="PythonUtil.cs"];
m21_30 [label="Entry QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", span="94-94", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs"];
m21_32 [label="return string.Empty;", span="98-98", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", color=green, community=0];
m21_34 [label="var length = Math.Max(baseScript.LastIndexOf('/'), baseScript.LastIndexOf('\\'))", span="103-103", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", color=green, community=0];
m21_37 [label="var directory = baseScript.Substring(0, 1 + length)", span="108-108", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", color=green, community=0];
m21_38 [label="var lines = value.Substring(1, value.Length - 1)\r\n                .Split(new[] { ''\'  File '' }, StringSplitOptions.RemoveEmptyEntries)\r\n                .Where(x => x.Contains(directory))\r\n                .Where(x => x.Split(',').Length > 2)\r\n                .Select(x =>\r\n                {\r\n                    var info = x.Replace(directory, string.Empty).Split(',');\r\n                    var line = info[0].GetStringBetweenChars('\''', '\''');\r\n                    line = $'' in {line}:{info[1].Trim()}'';\r\n\r\n                    info = info[2].Split(new[] { ''\\n'' }, StringSplitOptions.RemoveEmptyEntries);\r\n                    line = $'' {info[0].Replace(''in'', ''at'')}{line}'';\r\n\r\n                    // If we have the exact statement, add it to the error line\r\n                    if (info.Length > 2) line += $'' :: {info[1].Trim()}'';\r\n\r\n                    return line;\r\n                })", span="111-128", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", color=green, community=0];
m21_39 [label="var errorLine = string.Join(Environment.NewLine, lines)", span="130-130", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs"];
m21_40 [label="return string.IsNullOrWhiteSpace(errorLine)\r\n                ? string.Empty\r\n                : $''{Environment.NewLine}{errorLine}{Environment.NewLine}'';", span="132-134", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs"];
m21_46 [label="Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread ended.'')", span="240-240", cluster="lambda expression", file="PythonUtil.cs"];
m21_41 [label="Exit QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", span="94-94", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs"];
m21_43 [label="Entry string.GetStringBetweenChars(char, char)", span="899-899", cluster="string.GetStringBetweenChars(char, char)", file="PythonUtil.cs"];
m21_49 [label="Exit lambda expression", span="215-246", cluster="lambda expression", file="PythonUtil.cs"];
m21_103 [label="orders.Add(ConvertOrder(args.Order, args.Contract))", span="344-344", cluster="lambda expression", file="PythonUtil.cs"];
m21_108 [label="manualResetEvent.Set()", span="349-349", cluster="lambda expression", file="PythonUtil.cs"];
m21_102 [label="Entry lambda expression", span="341-345", cluster="lambda expression", file="PythonUtil.cs"];
m21_104 [label="Exit lambda expression", span="341-345", cluster="lambda expression", file="PythonUtil.cs"];
m21_107 [label="Entry lambda expression", span="346-350", cluster="lambda expression", file="PythonUtil.cs"];
m21_109 [label="Exit lambda expression", span="346-350", cluster="lambda expression", file="PythonUtil.cs"];
m21_123 [label="Entry lambda expression", span="378-378", cluster="lambda expression", file="PythonUtil.cs"];
m21_127 [label="Entry lambda expression", span="378-378", cluster="lambda expression", file="PythonUtil.cs"];
m21_130 [label="Entry lambda expression", span="381-400", cluster="lambda expression", file="PythonUtil.cs"];
m21_146 [label="Entry lambda expression", span="400-400", cluster="lambda expression", file="PythonUtil.cs"];
m21_124 [label="ObjectActivator.Clone(x.Value)", span="378-378", cluster="lambda expression", file="PythonUtil.cs"];
m21_125 [label="Exit lambda expression", span="378-378", cluster="lambda expression", file="PythonUtil.cs"];
m21_128 [label="x.Quantity != 0", span="378-378", cluster="lambda expression", file="PythonUtil.cs"];
m21_129 [label="Exit lambda expression", span="378-378", cluster="lambda expression", file="PythonUtil.cs"];
m21_131 [label="local.Type != SecurityType.Forex", span="384-384", cluster="lambda expression", file="PythonUtil.cs"];
m21_132 [label="local.ConversionRate = 1m", span="387-387", cluster="lambda expression", file="PythonUtil.cs"];
m21_134 [label="var currency = local.Symbol.Value.Substring(3)", span="391-391", cluster="lambda expression", file="PythonUtil.cs"];
m21_136 [label="local.ConversionRate = 1m", span="394-394", cluster="lambda expression", file="PythonUtil.cs"];
m21_138 [label="return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));", span="399-399", cluster="lambda expression", file="PythonUtil.cs"];
m21_133 [label="return null;", span="388-388", cluster="lambda expression", file="PythonUtil.cs"];
m21_135 [label="currency == ''USD''", span="392-392", cluster="lambda expression", file="PythonUtil.cs"];
m21_143 [label="local.ConversionRate = GetUsdConversion(currency)", span="399-399", cluster="lambda expression", file="PythonUtil.cs"];
m21_137 [label="return null;", span="395-395", cluster="lambda expression", file="PythonUtil.cs"];
m21_139 [label="Exit lambda expression", span="381-400", cluster="lambda expression", file="PythonUtil.cs"];
m21_142 [label="Entry lambda expression", span="399-399", cluster="lambda expression", file="PythonUtil.cs"];
m21_144 [label="Exit lambda expression", span="399-399", cluster="lambda expression", file="PythonUtil.cs"];
m21_147 [label="x != null", span="400-400", cluster="lambda expression", file="PythonUtil.cs"];
m21_148 [label="Exit lambda expression", span="400-400", cluster="lambda expression", file="PythonUtil.cs"];
m21_153 [label="Entry lambda expression", span="415-415", cluster="lambda expression", file="PythonUtil.cs"];
m21_154 [label="new Cash(x.Key, x.Value, GetUsdConversion(x.Key))", span="415-415", cluster="lambda expression", file="PythonUtil.cs"];
m21_155 [label="Exit lambda expression", span="415-415", cluster="lambda expression", file="PythonUtil.cs"];
m21_185 [label="details.Add(args)", span="450-450", cluster="lambda expression", file="PythonUtil.cs"];
m21_181 [label="manualResetEvent.Set()", span="446-446", cluster="lambda expression", file="PythonUtil.cs"];
m21_180 [label="args.RequestId == requestId", span="446-446", cluster="lambda expression", file="PythonUtil.cs"];
m21_184 [label="args.RequestId == requestId", span="450-450", cluster="lambda expression", file="PythonUtil.cs"];
m21_179 [label="Entry lambda expression", span="444-447", cluster="lambda expression", file="PythonUtil.cs"];
m21_182 [label="Exit lambda expression", span="444-447", cluster="lambda expression", file="PythonUtil.cs"];
m21_183 [label="Entry lambda expression", span="448-451", cluster="lambda expression", file="PythonUtil.cs"];
m21_186 [label="Exit lambda expression", span="448-451", cluster="lambda expression", file="PythonUtil.cs"];
m21_252 [label="reader.processMsgs()", span="510-510", cluster="lambda expression", file="PythonUtil.cs"];
m21_254 [label="Log.Error(''Error in message processing thread #'' + Thread.CurrentThread.ManagedThreadId + '': '' + error)", span="515-515", cluster="lambda expression", file="PythonUtil.cs"];
m21_248 [label="Entry lambda expression", span="501-520", cluster="lambda expression", file="PythonUtil.cs"];
m21_249 [label="Log.Trace(''IB message processing thread started: #'' + Thread.CurrentThread.ManagedThreadId)", span="503-503", cluster="lambda expression", file="PythonUtil.cs"];
m21_250 [label="_client.ClientSocket.IsConnected()", span="505-505", cluster="lambda expression", file="PythonUtil.cs"];
m21_251 [label="_signal.waitForSignal()", span="509-509", cluster="lambda expression", file="PythonUtil.cs"];
m21_255 [label="Log.Trace(''IB message processing thread ended: #'' + Thread.CurrentThread.ManagedThreadId)", span="519-519", cluster="lambda expression", file="PythonUtil.cs"];
m21_253 [label=Exception, span="512-512", cluster="lambda expression", file="PythonUtil.cs"];
m21_256 [label="Exit lambda expression", span="501-520", cluster="lambda expression", file="PythonUtil.cs"];
m21_279 [label="Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Finished account download for '' + args.Account)", span="615-615", cluster="lambda expression", file="PythonUtil.cs"];
m21_283 [label="firstAccountUpdateReceived.Set()", span="625-625", cluster="lambda expression", file="PythonUtil.cs"];
m21_278 [label="Entry lambda expression", span="613-617", cluster="lambda expression", file="PythonUtil.cs"];
m21_280 [label="_accountHoldingsResetEvent.Set()", span="616-616", cluster="lambda expression", file="PythonUtil.cs"];
m21_281 [label="Exit lambda expression", span="613-617", cluster="lambda expression", file="PythonUtil.cs"];
m21_282 [label="Entry lambda expression", span="623-626", cluster="lambda expression", file="PythonUtil.cs"];
m21_284 [label="Exit lambda expression", span="623-626", cluster="lambda expression", file="PythonUtil.cs"];
m21_392 [label="var uniqueKey = GetUniqueKey(contract)", span="832-832", cluster="lambda expression", file="PythonUtil.cs"];
m21_389 [label="args.RequestId != requestId", span="830-830", cluster="lambda expression", file="PythonUtil.cs"];
m21_394 [label="manualResetEvent.Set()", span="834-834", cluster="lambda expression", file="PythonUtil.cs"];
m21_391 [label="details = args.ContractDetails", span="831-831", cluster="lambda expression", file="PythonUtil.cs"];
m21_388 [label="Entry lambda expression", span="827-836", cluster="lambda expression", file="PythonUtil.cs"];
m21_390 [label="return;", span="830-830", cluster="lambda expression", file="PythonUtil.cs"];
m21_393 [label="_contractDetails.TryAdd(uniqueKey, details)", span="833-833", cluster="lambda expression", file="PythonUtil.cs"];
m21_396 [label="Exit lambda expression", span="827-836", cluster="lambda expression", file="PythonUtil.cs"];
m21_395 [label="Log.Trace(''InteractiveBrokersBrokerage.GetContractDetails(): clientOnContractDetails event: '' + uniqueKey)", span="835-835", cluster="lambda expression", file="PythonUtil.cs"];
m21_412 [label="Array.IndexOf(exchanges, e)", span="864-864", cluster="lambda expression", file="PythonUtil.cs"];
m21_408 [label="Entry lambda expression", span="863-863", cluster="lambda expression", file="PythonUtil.cs"];
m21_411 [label="Entry lambda expression", span="864-864", cluster="lambda expression", file="PythonUtil.cs"];
m21_409 [label="details.Summary.Exchange", span="863-863", cluster="lambda expression", file="PythonUtil.cs"];
m21_410 [label="Exit lambda expression", span="863-863", cluster="lambda expression", file="PythonUtil.cs"];
m21_413 [label="Exit lambda expression", span="864-864", cluster="lambda expression", file="PythonUtil.cs"];
m21_435 [label="manualResetEvent.Set()", span="884-884", cluster="lambda expression", file="PythonUtil.cs"];
m21_432 [label="contractDetails.Add(args.ContractDetails)", span="881-881", cluster="lambda expression", file="PythonUtil.cs"];
m21_431 [label="Entry lambda expression", span="881-881", cluster="lambda expression", file="PythonUtil.cs"];
m21_433 [label="Exit lambda expression", span="881-881", cluster="lambda expression", file="PythonUtil.cs"];
m21_434 [label="Entry lambda expression", span="884-884", cluster="lambda expression", file="PythonUtil.cs"];
m21_436 [label="Exit lambda expression", span="884-884", cluster="lambda expression", file="PythonUtil.cs"];
m21_515 [label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Market price rate is '' + args.Price + '' for currency '' + currency)", span="961-961", cluster="lambda expression", file="PythonUtil.cs"];
m21_510 [label="x == invertedSymbol || x == normalSymbol", span="920-920", cluster="lambda expression", file="PythonUtil.cs"];
m21_509 [label="Entry lambda expression", span="920-920", cluster="lambda expression", file="PythonUtil.cs"];
m21_516 [label="manualResetEvent.Set()", span="962-962", cluster="lambda expression", file="PythonUtil.cs"];
m21_525 [label="manualResetEvent.Set()", span="1007-1007", cluster="lambda expression", file="PythonUtil.cs"];
m21_513 [label="args.TickerId == marketDataTicker && args.Field == IBApi.TickType.ASK", span="958-958", cluster="lambda expression", file="PythonUtil.cs"];
m21_514 [label="rate = Convert.ToDecimal(args.Price)", span="960-960", cluster="lambda expression", file="PythonUtil.cs"];
m21_521 [label="data.Add(args)", span="999-999", cluster="lambda expression", file="PythonUtil.cs"];
m21_520 [label="args.RequestId == historicalTicker", span="997-997", cluster="lambda expression", file="PythonUtil.cs"];
m21_524 [label="args.RequestId == historicalTicker", span="1005-1005", cluster="lambda expression", file="PythonUtil.cs"];
m21_528 [label="args.Code == 162 && args.Message.Contains(''pacing violation'')", span="1013-1013", cluster="lambda expression", file="PythonUtil.cs"];
m21_531 [label="Entry lambda expression", span="1044-1044", cluster="lambda expression", file="PythonUtil.cs"];
m21_511 [label="Exit lambda expression", span="920-920", cluster="lambda expression", file="PythonUtil.cs"];
m21_512 [label="Entry lambda expression", span="956-964", cluster="lambda expression", file="PythonUtil.cs"];
m21_517 [label="Exit lambda expression", span="956-964", cluster="lambda expression", file="PythonUtil.cs"];
m21_519 [label="Entry lambda expression", span="995-1001", cluster="lambda expression", file="PythonUtil.cs"];
m21_522 [label="Exit lambda expression", span="995-1001", cluster="lambda expression", file="PythonUtil.cs"];
m21_523 [label="Entry lambda expression", span="1003-1009", cluster="lambda expression", file="PythonUtil.cs"];
m21_526 [label="Exit lambda expression", span="1003-1009", cluster="lambda expression", file="PythonUtil.cs"];
m21_527 [label="Entry lambda expression", span="1011-1018", cluster="lambda expression", file="PythonUtil.cs"];
m21_529 [label="pacingViolation = true", span="1016-1016", cluster="lambda expression", file="PythonUtil.cs"];
m21_530 [label="Exit lambda expression", span="1011-1018", cluster="lambda expression", file="PythonUtil.cs"];
m21_532 [label="x.Bar.Time", span="1044-1044", cluster="lambda expression", file="PythonUtil.cs"];
m21_533 [label="Exit lambda expression", span="1044-1044", cluster="lambda expression", file="PythonUtil.cs"];
m21_621 [label="Entry lambda expression", span="1231-1231", cluster="lambda expression", file="PythonUtil.cs"];
m21_622 [label="TryWaitForReconnect()", span="1231-1231", cluster="lambda expression", file="PythonUtil.cs"];
m21_623 [label="Exit lambda expression", span="1231-1231", cluster="lambda expression", file="PythonUtil.cs"];
m21_1215 [label="securityType == SecurityType.Future ? Array.IndexOf(futuresExchanges, exchange) : 0", span="2352-2352", cluster="lambda expression", file="PythonUtil.cs"];
m21_1225 [label="exchangeFilter(g.Key)", span="2386-2386", cluster="lambda expression", file="PythonUtil.cs"];
m21_1218 [label="Entry lambda expression", span="2384-2384", cluster="lambda expression", file="PythonUtil.cs"];
m21_1221 [label="Entry lambda expression", span="2385-2385", cluster="lambda expression", file="PythonUtil.cs"];
m21_1224 [label="Entry lambda expression", span="2386-2386", cluster="lambda expression", file="PythonUtil.cs"];
m21_1214 [label="Entry lambda expression", span="2352-2352", cluster="lambda expression", file="PythonUtil.cs"];
m21_1216 [label="Exit lambda expression", span="2352-2352", cluster="lambda expression", file="PythonUtil.cs"];
m21_1219 [label="x.Summary", span="2384-2384", cluster="lambda expression", file="PythonUtil.cs"];
m21_1220 [label="Exit lambda expression", span="2384-2384", cluster="lambda expression", file="PythonUtil.cs"];
m21_1222 [label="x.Exchange", span="2385-2385", cluster="lambda expression", file="PythonUtil.cs"];
m21_1223 [label="Exit lambda expression", span="2385-2385", cluster="lambda expression", file="PythonUtil.cs"];
m21_1226 [label="Exit lambda expression", span="2386-2386", cluster="lambda expression", file="PythonUtil.cs"];
m21_1255 [label="Entry lambda expression", span="2438-2438", cluster="lambda expression", file="PythonUtil.cs"];
m21_1258 [label="Entry lambda expression", span="2439-2439", cluster="lambda expression", file="PythonUtil.cs"];
m21_1261 [label="Entry lambda expression", span="2440-2447", cluster="lambda expression", file="PythonUtil.cs"];
m21_1267 [label="bar.Time >= requestStartTime && bar.EndTime <= requestEndTime", span="2459-2459", cluster="lambda expression", file="PythonUtil.cs"];
m21_1266 [label="Entry lambda expression", span="2459-2459", cluster="lambda expression", file="PythonUtil.cs"];
m21_1256 [label="bid.Time", span="2438-2438", cluster="lambda expression", file="PythonUtil.cs"];
m21_1257 [label="Exit lambda expression", span="2438-2438", cluster="lambda expression", file="PythonUtil.cs"];
m21_1259 [label="ask.Time", span="2439-2439", cluster="lambda expression", file="PythonUtil.cs"];
m21_1260 [label="Exit lambda expression", span="2439-2439", cluster="lambda expression", file="PythonUtil.cs"];
m21_1262 [label="new QuoteBar(\r\n                        bid.Time,\r\n                        bid.Symbol,\r\n                        new Bar(bid.Open, bid.High, bid.Low, bid.Close),\r\n                        0,\r\n                        new Bar(ask.Open, ask.High, ask.Low, ask.Close),\r\n                        0,\r\n                        bid.Period)", span="2440-2447", cluster="lambda expression", file="PythonUtil.cs"];
m21_1263 [label="Exit lambda expression", span="2440-2447", cluster="lambda expression", file="PythonUtil.cs"];
m21_1268 [label="Exit lambda expression", span="2459-2459", cluster="lambda expression", file="PythonUtil.cs"];
m21_1310 [label="var bar = ConvertTradeBar(request.Symbol, request.Resolution, args)", span="2498-2498", cluster="lambda expression", file="PythonUtil.cs"];
m21_1311 [label="request.Resolution != Resolution.Daily", span="2499-2499", cluster="lambda expression", file="PythonUtil.cs"];
m21_1312 [label="bar.Time = bar.Time.ConvertFromUtc(exchangeTimeZone)", span="2501-2501", cluster="lambda expression", file="PythonUtil.cs"];
m21_1314 [label="dataDownloading.Set()", span="2505-2505", cluster="lambda expression", file="PythonUtil.cs"];
m21_1318 [label="dataDownloaded.Set()", span="2513-2513", cluster="lambda expression", file="PythonUtil.cs"];
m21_1324 [label="dataDownloaded.Set()", span="2526-2526", cluster="lambda expression", file="PythonUtil.cs"];
m21_1313 [label="historyPiece.Add(bar)", span="2504-2504", cluster="lambda expression", file="PythonUtil.cs"];
m21_1309 [label="args.RequestId == historicalTicker", span="2496-2496", cluster="lambda expression", file="PythonUtil.cs"];
m21_1317 [label="args.RequestId == historicalTicker", span="2511-2511", cluster="lambda expression", file="PythonUtil.cs"];
m21_1321 [label="args.Code == 162 && args.Message.Contains(''pacing violation'')", span="2519-2519", cluster="lambda expression", file="PythonUtil.cs"];
m21_1323 [label="args.Code == 162 && args.Message.Contains(''no data'')", span="2524-2524", cluster="lambda expression", file="PythonUtil.cs"];
m21_1326 [label="Entry lambda expression", span="2566-2566", cluster="lambda expression", file="PythonUtil.cs"];
m21_1308 [label="Entry lambda expression", span="2494-2507", cluster="lambda expression", file="PythonUtil.cs"];
m21_1315 [label="Exit lambda expression", span="2494-2507", cluster="lambda expression", file="PythonUtil.cs"];
m21_1316 [label="Entry lambda expression", span="2509-2515", cluster="lambda expression", file="PythonUtil.cs"];
m21_1319 [label="Exit lambda expression", span="2509-2515", cluster="lambda expression", file="PythonUtil.cs"];
m21_1320 [label="Entry lambda expression", span="2517-2528", cluster="lambda expression", file="PythonUtil.cs"];
m21_1322 [label="pacing = true", span="2522-2522", cluster="lambda expression", file="PythonUtil.cs"];
m21_1325 [label="Exit lambda expression", span="2517-2528", cluster="lambda expression", file="PythonUtil.cs"];
m21_1327 [label="x.Time", span="2566-2566", cluster="lambda expression", file="PythonUtil.cs"];
m21_1328 [label="Exit lambda expression", span="2566-2566", cluster="lambda expression", file="PythonUtil.cs"];
m21_1356 [label="x.Contains(separatorLine)", span="2609-2609", cluster="lambda expression", file="PythonUtil.cs"];
m21_1355 [label="Entry lambda expression", span="2609-2609", cluster="lambda expression", file="PythonUtil.cs"];
m21_1358 [label="Entry lambda expression", span="2611-2611", cluster="lambda expression", file="PythonUtil.cs"];
m21_1357 [label="Exit lambda expression", span="2609-2609", cluster="lambda expression", file="PythonUtil.cs"];
m21_1359 [label="line.Contains(''End this session and let the other session proceed'')", span="2611-2611", cluster="lambda expression", file="PythonUtil.cs"];
m21_1360 [label="Exit lambda expression", span="2611-2611", cluster="lambda expression", file="PythonUtil.cs"];
m21_51 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", span="1149-1149", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_55 [label="IBPlaceOrder(order, true)", span="268-268", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_52 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", color=green, community=0, file="PythonUtil.cs"];
m21_60 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="262-262", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs"];
m21_53 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="262-262", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_61 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="705-705", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", color=green, community=0, file="PythonUtil.cs"];
m21_62 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="283-283", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs"];
m21_63 [label="Log.Trace(''InteractiveBrokersBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="287-287", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs"];
m21_56 [label="return true;", span="269-269", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs"];
m21_57 [label=Exception, span="271-271", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_64 [label="IBPlaceOrder(order, false)", span="289-289", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs"];
m21_65 [label=Exception, span="291-291", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs"];
m21_66 [label="Log.Error(''InteractiveBrokersBrokerage.UpdateOrder(): '' + err)", span="293-293", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs"];
m21_67 [label="return false;", span="294-294", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs"];
m21_68 [label="return true;", span="296-296", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_958 [label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127", cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="PythonUtil.cs"];
m21_1265 [label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58", cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="PythonUtil.cs"];
m21_748 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", span="1934-1934", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="PythonUtil.cs"];
m21_986 [label="minTick == 0", span="1936-1936", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="PythonUtil.cs"];
m21_987 [label="return minTick;", span="1936-1936", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="PythonUtil.cs"];
m21_988 [label="return Math.Round(input/minTick)*minTick;", span="1937-1937", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="PythonUtil.cs"];
m21_989 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", span="1934-1934", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="PythonUtil.cs"];
m21_98 [label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0", cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="PythonUtil.cs"];
m21_779 [label="Entry MarketOnCloseOrder.cstr", span="", cluster="MarketOnCloseOrder.cstr", file="PythonUtil.cs"];
m21_1014 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", span="1999-1999", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="PythonUtil.cs"];
m21_1015 [label="_brokerTimeDiff = e.CurrentTimeUtc.Subtract(DateTime.UtcNow)", span="2002-2002", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="PythonUtil.cs"];
m21_1016 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", span="1999-1999", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="PythonUtil.cs"];
m21_812 [label="Entry Contract.cstr", span="", cluster="Contract.cstr", file="PythonUtil.cs"];
m21_1085 [label="Entry System.Convert.ToInt32(double)", span="0-0", cluster="System.Convert.ToInt32(double)", file="PythonUtil.cs"];
m21_499 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="PythonUtil.cs"];
m21_616 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1977-1977", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs"];
m21_1003 [label="bool result", span="1979-1979", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs"];
m21_1004 [label="var time = DateTime.UtcNow.ConvertFromUtc(TimeZones.NewYork)", span="1980-1980", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs"];
m21_1005 [label="time.DayOfWeek == DayOfWeek.Saturday", span="1983-1983", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs"];
m21_1007 [label="var timeOfDay = time.TimeOfDay", span="1989-1989", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs"];
m21_1006 [label="result = true", span="1985-1985", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs"];
m21_1008 [label="result = timeOfDay > new TimeSpan(23, 0, 0) || timeOfDay < new TimeSpan(1, 30, 0)", span="1991-1991", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs"];
m21_1009 [label="Log.Trace(''InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes(): '' + result)", span="1994-1994", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs"];
m21_1010 [label="return result;", span="1996-1996", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs"];
m21_1011 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1977-1977", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs"];
m21_82 [label="Entry Unk.cancelOrder", span="", cluster="Unk.cancelOrder", file="PythonUtil.cs"];
m21_866 [label="Entry ArgumentException.cstr", span="", cluster="ArgumentException.cstr", file="PythonUtil.cs"];
m21_500 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", span="1958-1958", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="PythonUtil.cs"];
m21_999 [label="return Interlocked.Increment(ref _nextTickerId);", span="1960-1960", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="PythonUtil.cs"];
m21_1000 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", span="1958-1958", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="PythonUtil.cs"];
m21_1149 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", span="2262-2262", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1150 [label="Symbol symbol", span="2264-2264", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1151 [label="!_subscribedTickets.TryGetValue(e.TickerId, out symbol)", span="2266-2266", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1156 [label="tick.Quantity = AdjustQuantity(securityType, e.Size)", span="2273-2273", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1160 [label="e.Field", span="2278-2278", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1183 [label="!_openInterests.ContainsKey(symbol) || _openInterests[symbol] != e.Size", span="2320-2320", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1185 [label="tick.Value = e.Size", span="2323-2323", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1186 [label="_openInterests[symbol] = e.Size", span="2324-2324", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1152 [label="return;", span="2266-2266", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1153 [label="var tick = new Tick()", span="2268-2268", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1154 [label="tick.Symbol = symbol", span="2271-2271", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1155 [label="var securityType = symbol.ID.SecurityType", span="2272-2272", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1157 [label="tick.Time = GetRealTimeTickTime(symbol)", span="2274-2274", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1163 [label="_lastBidPrices.TryGetValue(symbol, out tick.BidPrice)", span="2284-2284", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1164 [label="_lastBidSizes[symbol] = (int)tick.Quantity", span="2285-2285", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1169 [label="_lastAskPrices.TryGetValue(symbol, out tick.AskPrice)", span="2295-2295", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1170 [label="_lastAskSizes[symbol] = (int)tick.Quantity", span="2296-2296", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1176 [label="_lastPrices.TryGetValue(symbol, out lastPrice)", span="2307-2307", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1177 [label="_lastVolumes[symbol] = (int)tick.Quantity", span="2308-2308", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1182 [label="symbol.ID.SecurityType == SecurityType.Option || symbol.ID.SecurityType == SecurityType.Future", span="2318-2318", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1158 [label="tick.Quantity == 0", span="2276-2276", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1162 [label="tick.TickType = TickType.Quote", span="2282-2282", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1165 [label="tick.Value = tick.BidPrice", span="2287-2287", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1166 [label="tick.BidSize = tick.Quantity", span="2288-2288", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1168 [label="tick.TickType = TickType.Quote", span="2293-2293", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1171 [label="tick.Value = tick.AskPrice", span="2298-2298", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1172 [label="tick.AskSize = tick.Quantity", span="2299-2299", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1174 [label="tick.TickType = TickType.Trade", span="2304-2304", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1178 [label="tick.Value = lastPrice", span="2310-2310", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1184 [label="tick.TickType = TickType.OpenInterest", span="2322-2322", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1189 [label="tick.IsValid()", span="2333-2333", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1190 [label="_ticks.Add(tick)", span="2333-2333", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1159 [label="return;", span="2276-2276", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1161 [label="IBApi.TickType.BID_SIZE", span="2280-2280", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1167 [label="IBApi.TickType.ASK_SIZE", span="2291-2291", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1173 [label="IBApi.TickType.LAST_SIZE", span="2303-2303", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1179 [label="IBApi.TickType.OPEN_INTEREST", span="2314-2314", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1187 [label="return;", span="2330-2330", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1175 [label="decimal lastPrice", span="2306-2306", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1180 [label="IBApi.TickType.OPTION_CALL_OPEN_INTEREST", span="2315-2315", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1181 [label="IBApi.TickType.OPTION_PUT_OPEN_INTEREST", span="2316-2316", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1188 [label=_ticks, span="2332-2332", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_1191 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", span="2262-2262", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs"];
m21_969 [label="Entry Unk.GetCurrencySymbol", span="", cluster="Unk.GetCurrencySymbol", file="PythonUtil.cs"];
m21_774 [label="Entry Unk.ConvertOrderDirection", span="", cluster="Unk.ConvertOrderDirection", file="PythonUtil.cs"];
m21_1032 [label="Entry QuantConnect.Data.Market.Tick.Clone()", span="424-424", cluster="QuantConnect.Data.Market.Tick.Clone()", file="PythonUtil.cs"];
m21_568 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="PythonUtil.cs"];
m21_669 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", span="1392-1392", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_696 [label="var orderFee = 0m", span="1396-1396", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_697 [label="currentQuantityFilled == totalQuantityFilled", span="1397-1397", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_698 [label="var security = _securityProvider.GetSecurity(order.Symbol)", span="1399-1399", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_699 [label="orderFee = security.FeeModel.GetOrderFee(security, order)", span="1400-1400", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_700 [label="var fillQuantity = order.Direction == OrderDirection.Buy ? currentQuantityFilled : -currentQuantityFilled", span="1404-1404", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_701 [label="order.PriceCurrency = _securityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="1405-1405", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_702 [label="var orderEvent = new OrderEvent(order, DateTime.UtcNow, orderFee, ''Interactive Brokers Order Fill Event'')\r\n            {\r\n                Status = status,\r\n                FillPrice = price,\r\n                FillQuantity = fillQuantity\r\n            }", span="1406-1411", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_703 [label="remainingQuantity != 0", span="1412-1412", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_704 [label="orderEvent.Message += '' - '' + remainingQuantity + '' remaining''", span="1414-1414", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_705 [label="OnOrderEvent(orderEvent)", span="1418-1418", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_706 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", span="1392-1392", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs"];
m21_106 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="PythonUtil.cs"];
m21_175 [label="Entry ExecutionFilter.cstr", span="", cluster="ExecutionFilter.cstr", file="PythonUtil.cs"];
m21_81 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="PythonUtil.cs"];
m21_236 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="661-661", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs"];
m21_285 [label="_client.ClientSocket.eDisconnect()", span="663-663", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs"];
m21_286 [label="_messageProcessingThread != null", span="665-665", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs"];
m21_287 [label="_signal.issueSignal()", span="667-667", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs"];
m21_288 [label="_messageProcessingThread.Join()", span="668-668", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs"];
m21_289 [label="_messageProcessingThread = null", span="669-669", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs"];
m21_290 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="661-661", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs"];
m21_776 [label="Entry MarketOrder.cstr", span="", cluster="MarketOrder.cstr", file="PythonUtil.cs"];
m21_960 [label="Entry TradeBar.cstr", span="", cluster="TradeBar.cstr", file="PythonUtil.cs"];
m21_302 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.Dispose()", span="424-424", cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.Dispose()", file="PythonUtil.cs"];
m21_1106 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", span="2191-2191", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1107 [label="Symbol symbol", span="2193-2193", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1108 [label="!_subscribedTickets.TryGetValue(e.TickerId, out symbol)", span="2195-2195", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1110 [label="var price = Convert.ToDecimal(e.Price)", span="2197-2197", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1116 [label="e.Price <= 0 &&\r\n                securityType != SecurityType.Future &&\r\n                securityType != SecurityType.Option", span="2207-2209", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1119 [label="e.Field", span="2213-2213", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1109 [label="return;", span="2195-2195", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1112 [label="tick.Symbol = symbol", span="2202-2202", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1113 [label="tick.Time = GetRealTimeTickTime(symbol)", span="2203-2203", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1114 [label="var securityType = symbol.ID.SecurityType", span="2204-2204", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1123 [label="_lastBidSizes.TryGetValue(symbol, out quantity)", span="2219-2219", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1125 [label="_lastBidPrices[symbol] = price", span="2221-2221", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1129 [label="_lastAskSizes.TryGetValue(symbol, out quantity)", span="2228-2228", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1131 [label="_lastAskPrices[symbol] = price", span="2230-2230", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1135 [label="_lastPrices[symbol] = price", span="2237-2237", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1111 [label="var tick = new Tick()", span="2199-2199", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1115 [label="tick.Value = price", span="2205-2205", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1122 [label="tick.BidPrice = price", span="2218-2218", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1128 [label="tick.AskPrice = price", span="2227-2227", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1134 [label="tick.Value = price", span="2236-2236", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1121 [label="tick.TickType = TickType.Quote", span="2217-2217", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1124 [label="tick.Quantity = quantity", span="2220-2220", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1127 [label="tick.TickType = TickType.Quote", span="2226-2226", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1130 [label="tick.Quantity = quantity", span="2229-2229", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1133 [label="tick.TickType = TickType.Trade", span="2235-2235", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1138 [label="tick.IsValid()", span="2245-2245", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1139 [label="_ticks.Add(tick)", span="2245-2245", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1117 [label="return;", span="2210-2210", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1118 [label="int quantity", span="2212-2212", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1120 [label="IBApi.TickType.BID", span="2215-2215", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1126 [label="IBApi.TickType.ASK", span="2224-2224", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1132 [label="IBApi.TickType.LAST", span="2233-2233", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1136 [label="return;", span="2241-2241", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1137 [label=_ticks, span="2244-2244", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_1140 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", span="2191-2191", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs"];
m21_257 [label="Entry Unk.IsConnected", span="", cluster="Unk.IsConnected", file="PythonUtil.cs"];
m21_1095 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", span="2176-2176", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1096 [label="var time = DateTime.UtcNow.Add(_brokerTimeDiff)", span="2178-2178", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1098 [label="!_symbolExchangeTimeZones.TryGetValue(symbol, out exchangeTimeZone)", span="2181-2181", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1099 [label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType).TimeZone", span="2184-2184", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1100 [label="_symbolExchangeTimeZones.Add(symbol, exchangeTimeZone)", span="2185-2185", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1097 [label="DateTimeZone exchangeTimeZone", span="2180-2180", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1101 [label="return time.ConvertFromUtc(exchangeTimeZone);", span="2188-2188", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1102 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", span="2176-2176", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_50 [label="Entry string.Join(string, params object[])", span="0-0", cluster="string.Join(string, params object[])", file="PythonUtil.cs"];
m21_959 [label="Entry Unk.ParseExact", span="", cluster="Unk.ParseExact", file="PythonUtil.cs"];
m21_1305 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="PythonUtil.cs"];
m21_694 [label="Entry Unk.ToInt32", span="", cluster="Unk.ToInt32", file="PythonUtil.cs"];
m21_2 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", span="156-156", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="PythonUtil.cs"];
m21_3 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", span="156-156", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="PythonUtil.cs"];
m21_71 [label="Log.Trace(''InteractiveBrokersBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="308-308", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_633 [label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0", cluster="decimal.Parse(string, System.IFormatProvider)", file="PythonUtil.cs"];
m21_1349 [label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105", cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="PythonUtil.cs"];
m21_636 [label="Entry QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="151-151", cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="PythonUtil.cs"];
m21_996 [label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0", cluster="System.Threading.Interlocked.Increment(ref int)", file="PythonUtil.cs"];
m21_1353 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="PythonUtil.cs"];
m21_953 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", span="1874-1874", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="PythonUtil.cs"];
m21_954 [label="var time = resolution != Resolution.Daily ?\r\n                Time.UnixTimeStampToDateTime(Convert.ToDouble(historyBar.Bar.Time, CultureInfo.InvariantCulture)) :\r\n                DateTime.ParseExact(historyBar.Bar.Time, ''yyyyMMdd'', CultureInfo.InvariantCulture)", span="1876-1878", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="PythonUtil.cs"];
m21_955 [label="return new TradeBar(time, symbol, (decimal)historyBar.Bar.Open, (decimal)historyBar.Bar.High, (decimal)historyBar.Bar.Low,\r\n                (decimal)historyBar.Bar.Close, historyBar.Bar.Volume, resolution.ToTimeSpan());", span="1880-1881", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="PythonUtil.cs"];
m21_956 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", span="1874-1874", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="PythonUtil.cs"];
m21_156 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="PythonUtil.cs"];
m21_338 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", span="1471-1471", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_728 [label="var ibOrder = new IBApi.Order\r\n            {\r\n                ClientId = _clientId,\r\n                OrderId = ibOrderId,\r\n                Account = _account,\r\n                Action = ConvertOrderDirection(order.Direction),\r\n                TotalQuantity = (int)Math.Abs(order.Quantity),\r\n                OrderType = ConvertOrderType(order.Type),\r\n                AllOrNone = false,\r\n                Tif = IB.TimeInForce.GoodTillCancel,\r\n                Transmit = true,\r\n                Rule80A = _agentDescription\r\n            }", span="1473-1485", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_729 [label="order.Type == OrderType.MarketOnOpen", span="1487-1487", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_731 [label="var limitOrder = order as LimitOrder", span="1492-1492", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_732 [label="var stopMarketOrder = order as StopMarketOrder", span="1493-1493", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_733 [label="var stopLimitOrder = order as StopLimitOrder", span="1494-1494", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_735 [label="ibOrder.LmtPrice = Convert.ToDouble(RoundPrice(limitOrder.LimitPrice, GetMinTick(contract)))", span="1497-1497", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_737 [label="ibOrder.AuxPrice = Convert.ToDouble(RoundPrice(stopMarketOrder.StopPrice, GetMinTick(contract)))", span="1501-1501", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_739 [label="var minTick = GetMinTick(contract)", span="1505-1505", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_730 [label="ibOrder.Tif = IB.TimeInForce.MarketOnOpen", span="1489-1489", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_740 [label="ibOrder.LmtPrice = Convert.ToDouble(RoundPrice(stopLimitOrder.LimitPrice, minTick))", span="1506-1506", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_742 [label="return ibOrder;", span="1514-1514", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_734 [label="limitOrder != null", span="1495-1495", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_736 [label="stopMarketOrder != null", span="1499-1499", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_738 [label="stopLimitOrder != null", span="1503-1503", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_741 [label="ibOrder.AuxPrice = Convert.ToDouble(RoundPrice(stopLimitOrder.StopPrice, minTick))", span="1507-1507", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_743 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", span="1471-1471", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs"];
m21_782 [label="Entry StopLimitOrder.cstr", span="", cluster="StopLimitOrder.cstr", file="PythonUtil.cs"];
m21_247 [label="Entry System.Exception.Exception(string, System.Exception)", span="0-0", cluster="System.Exception.Exception(string, System.Exception)", file="PythonUtil.cs"];
m21_1348 [label="Entry System.IO.File.GetLastWriteTimeUtc(string)", span="0-0", cluster="System.IO.File.GetLastWriteTimeUtc(string)", file="PythonUtil.cs"];
m21_635 [label="Entry QuantConnect.Securities.AccountEvent.AccountEvent(string, decimal)", span="37-37", cluster="QuantConnect.Securities.AccountEvent.AccountEvent(string, decimal)", file="PythonUtil.cs"];
m21_1017 [label="Entry System.DateTime.Subtract(System.DateTime)", span="0-0", cluster="System.DateTime.Subtract(System.DateTime)", file="PythonUtil.cs"];
m21_1060 [label="Entry QuantConnect.Util.RateGate.WaitToProceed()", span="181-181", cluster="QuantConnect.Util.RateGate.WaitToProceed()", file="PythonUtil.cs"];
m21_1209 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", span="144-144", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", file="PythonUtil.cs"];
m21_36 [label="return string.Empty;", span="106-106", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", color=green, community=0];
m21_1143 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", span="2251-2251", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs"];
m21_1144 [label=type, span="2253-2253", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs"];
m21_1146 [label="return size * 100;", span="2256-2256", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs"];
m21_1147 [label="return size;", span="2258-2258", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs"];
m21_1145 [label="SecurityType.Equity", span="2255-2255", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs"];
m21_1148 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", span="2251-2251", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs"];
m21_1304 [label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", span="0-0", cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", file="PythonUtil.cs"];
m21_777 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()", file="PythonUtil.cs"];
m21_118 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="PythonUtil.cs"];
m21_234 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="PythonUtil.cs"];
m21_177 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", span="1953-1953", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="PythonUtil.cs"];
m21_997 [label="return Interlocked.Increment(ref _nextRequestId);", span="1955-1955", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="PythonUtil.cs"];
m21_998 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", span="1953-1953", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="PythonUtil.cs"];
m21_101 [label="Entry System.TimeoutException.TimeoutException(string)", span="0-0", cluster="System.TimeoutException.TimeoutException(string)", file="PythonUtil.cs"];
m21_35 [label="length < 0", span="104-104", cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", color=green, community=0];
m21_26 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.InteractiveBrokersClient(EReaderSignal)", span="416-416", cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.InteractiveBrokersClient(EReaderSignal)", file="PythonUtil.cs"];
m21_386 [label="Entry Unk.reqContractDetails", span="", cluster="Unk.reqContractDetails", file="PythonUtil.cs"];
m21_1012 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="PythonUtil.cs"];
m21_995 [label="Entry System.Threading.Thread.Yield()", span="0-0", cluster="System.Threading.Thread.Yield()", file="PythonUtil.cs"];
m21_1302 [label="Entry System.Threading.AutoResetEvent.AutoResetEvent(bool)", span="0-0", cluster="System.Threading.AutoResetEvent.AutoResetEvent(bool)", file="PythonUtil.cs"];
m21_246 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="PythonUtil.cs"];
m21_110 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="374-374", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs"];
m21_111 [label="CheckIbGateway()", span="376-376", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs"];
m21_112 [label="var holdings = _accountHoldings.Select(x => ObjectActivator.Clone(x.Value)).Where(x => x.Quantity != 0).ToList()", span="378-378", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs"];
m21_113 [label="var tasks = holdings.Select(local =>\r\n            {\r\n                // we need to resolve the conversion rate for non-USD currencies\r\n                if (local.Type != SecurityType.Forex)\r\n                {\r\n                    // this assumes all non-forex are us denominated, we should add the currency to 'holding'\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n                // if quote currency is in USD don't bother making the request\r\n                var currency = local.Symbol.Value.Substring(3);\r\n                if (currency == ''USD'')\r\n                {\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n\r\n                // this will allow us to do this in parallel\r\n                return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));\r\n            }).Where(x => x != null).ToArray()", span="381-400", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs"];
m21_115 [label="return holdings;", span="404-404", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs"];
m21_114 [label="Task.WaitAll(tasks, 5000)", span="402-402", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs"];
m21_116 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="374-374", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs"];
m21_1345 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="PythonUtil.cs"];
m21_620 [label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0", cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="PythonUtil.cs"];
m21_720 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="PythonUtil.cs"];
m21_693 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="PythonUtil.cs"];
m21_1303 [label="Entry System.Convert.ToInt32(bool)", span="0-0", cluster="System.Convert.ToInt32(bool)", file="PythonUtil.cs"];
m21_501 [label="Entry Unk.Trace", span="", cluster="Unk.Trace", file="PythonUtil.cs"];
m21_783 [label="Entry System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", span="0-0", cluster="System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", file="PythonUtil.cs"];
m21_157 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="908-908", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_437 [label="currency == ''USD''", span="910-910", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_439 [label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Getting USD conversion for '' + currency)", span="915-915", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_440 [label="var invertedSymbol = ''USD'' + currency", span="918-918", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_441 [label="var normalSymbol = currency + ''USD''", span="919-919", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_444 [label="throw new Exception(''Unable to resolve currency conversion pair for currency: '' + currency);", span="923-923", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_452 [label="throw new Exception(''Unable to resolve conversion for currency: '' + currency);", span="939-939", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_458 [label="EventHandler<IB.TickPriceEventArgs> clientOnTickPrice = (sender, args) =>\r\n            {\r\n                if (args.TickerId == marketDataTicker && args.Field == IBApi.TickType.ASK)\r\n                {\r\n                    rate = Convert.ToDecimal(args.Price);\r\n                    Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Market price rate is '' + args.Price + '' for currency '' + currency);\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="956-964", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_492 [label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Last historical price rate is '' + rate + '' for currency '' + currency)", span="1052-1052", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_438 [label="return 1m;", span="912-912", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_442 [label="var currencyPair = Currencies.CurrencyPairs.FirstOrDefault(x => x == invertedSymbol || x == normalSymbol)", span="920-920", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_445 [label="bool inverted = invertedSymbol == currencyPair", span="927-927", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_443 [label="currencyPair == null", span="921-921", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_446 [label="var symbol = Symbol.Create(currencyPair, SecurityType.Forex, Market.FXCM)", span="928-928", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_459 [label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Requesting market data for '' + currencyPair)", span="966-966", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_476 [label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Requesting historical data for '' + currencyPair)", span="1020-1020", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_490 [label="throw new Exception(''Unable to get recent quote for '' + currencyPair);", span="1048-1048", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_497 [label="return inverted ? 1 / rate : rate;", span="1063-1063", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_447 [label="var contract = CreateContract(symbol)", span="929-929", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_448 [label="ContractDetails details", span="931-931", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_449 [label="!_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="932-932", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_450 [label="details = GetContractDetails(contract)", span="934-934", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_457 [label="_requestInformation[marketDataTicker] = ''GetUsdConversion.MarketData: '' + contract", span="954-954", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_461 [label="_client.ClientSocket.reqMktData(marketDataTicker, contract, string.Empty, true, false, new List<TagValue>())", span="969-969", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_472 [label="_requestInformation[historicalTicker] = ''GetUsdConversion.Historical: '' + contract", span="993-993", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_481 [label="_client.ClientSocket.reqHistoricalData(historicalTicker, contract, DateTime.UtcNow.ToString(''yyyyMMdd HH:mm:ss UTC''),\r\n                        requestSpan, IB.BarSize.OneSecond, HistoricalDataType.Ask, 0, 2, false, new List<TagValue>())", span="1027-1028", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_451 [label="details == null", span="937-937", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_453 [label="var rate = 0m", span="943-943", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_454 [label="var manualResetEvent = new ManualResetEvent(false)", span="944-944", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_455 [label="int requestTimeout = 60", span="949-949", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_462 [label="!manualResetEvent.WaitOne(requestTimeout * 1000)", span="971-971", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_469 [label="manualResetEvent.Reset()", span="988-988", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_474 [label="EventHandler<IB.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd = (sender, args) =>\r\n                    {\r\n                        if (args.RequestId == historicalTicker)\r\n                        {\r\n                            manualResetEvent.Set();\r\n                        }\r\n                    }", span="1003-1009", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_482 [label="!manualResetEvent.WaitOne(requestTimeout * 1000)", span="1030-1030", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_456 [label="var marketDataTicker = GetNextTickerId()", span="952-952", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_463 [label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): failed to receive response from IB within {0} seconds'', requestTimeout)", span="973-973", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_483 [label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): failed to receive response from IB within {0} seconds'', requestTimeout)", span="1032-1032", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_460 [label="_client.TickPrice += clientOnTickPrice", span="967-967", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_464 [label="_client.TickPrice -= clientOnTickPrice", span="976-976", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_465 [label="rate <= 0", span="980-980", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_466 [label="bool pacingViolation", span="982-982", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_467 [label="int pacingDelaySeconds = 60", span="983-983", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_468 [label="pacingViolation = false", span="987-987", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_485 [label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion() Pacing violation, pausing for {0} secs.'', pacingDelaySeconds)", span="1038-1038", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_486 [label="Thread.Sleep(pacingDelaySeconds * 1000)", span="1039-1039", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_470 [label="var data = new List<IB.HistoricalDataEventArgs>()", span="990-990", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_471 [label="var historicalTicker = GetNextTickerId()", span="991-991", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_473 [label="EventHandler<IB.HistoricalDataEventArgs> clientOnHistoricalData = (sender, args) =>\r\n                    {\r\n                        if (args.RequestId == historicalTicker)\r\n                        {\r\n                            data.Add(args);\r\n                        }\r\n                    }", span="995-1001", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_487 [label="var ordered = data.OrderByDescending(x => x.Bar.Time)", span="1044-1044", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_477 [label="_client.HistoricalData += clientOnHistoricalData", span="1021-1021", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_493 [label="_client.HistoricalData -= clientOnHistoricalData", span="1056-1056", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_475 [label="EventHandler<IB.ErrorEventArgs> clientOnError = (sender, args) =>\r\n                    {\r\n                        if (args.Code == 162 && args.Message.Contains(''pacing violation''))\r\n                        {\r\n                            // pacing violation happened\r\n                            pacingViolation = true;\r\n                        }\r\n                    }", span="1011-1018", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_478 [label="_client.HistoricalDataEnd += clientOnHistoricalDataEnd", span="1022-1022", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_494 [label="_client.HistoricalDataEnd -= clientOnHistoricalDataEnd", span="1057-1057", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_479 [label="_client.Error += clientOnError", span="1023-1023", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_484 [label=pacingViolation, span="1035-1035", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_495 [label="_client.Error -= clientOnError", span="1058-1058", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_496 [label=pacingViolation, span="1060-1060", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_480 [label="string requestSpan = ''100 S''", span="1026-1026", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_488 [label="var mostRecentQuote = ordered.FirstOrDefault()", span="1045-1045", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_489 [label="mostRecentQuote == null", span="1046-1046", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_491 [label="rate = Convert.ToDecimal(mostRecentQuote.Bar.Close)", span="1051-1051", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_498 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="908-908", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs"];
m21_929 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", span="1835-1835", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_930 [label=resolution, span="1837-1837", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_931 [label="Resolution.Tick", span="1839-1839", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_934 [label="Resolution.Minute", span="1842-1842", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_936 [label="Resolution.Hour", span="1844-1844", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_938 [label="Resolution.Daily", span="1846-1846", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_932 [label="Resolution.Second", span="1840-1840", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_933 [label="return IB.BarSize.OneSecond;", span="1841-1841", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_935 [label="return IB.BarSize.OneMinute;", span="1843-1843", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_937 [label="return IB.BarSize.OneHour;", span="1845-1845", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_939 [label="return IB.BarSize.OneDay;", span="1848-1848", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_940 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", span="1835-1835", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_1031 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="PythonUtil.cs"];
m21_518 [label="Entry System.Convert.ToDecimal(double)", span="0-0", cluster="System.Convert.ToDecimal(double)", file="PythonUtil.cs"];
m21_810 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1766-1766", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_891 [label=type, span="1768-1768", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_904 [label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(SecurityType));", span="1789-1789", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_892 [label="SecurityType.Equity", span="1770-1770", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_894 [label="SecurityType.Option", span="1773-1773", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_896 [label="SecurityType.Commodity", span="1776-1776", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_898 [label="SecurityType.Forex", span="1779-1779", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_900 [label="SecurityType.Future", span="1782-1782", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_902 [label="SecurityType.Base", span="1785-1785", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_893 [label="return IB.SecurityType.Stock;", span="1771-1771", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_895 [label="return IB.SecurityType.Option;", span="1774-1774", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_897 [label="return IB.SecurityType.Commodity;", span="1777-1777", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_899 [label="return IB.SecurityType.Cash;", span="1780-1780", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_901 [label="return IB.SecurityType.Future;", span="1783-1783", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_903 [label="throw new ArgumentException(''InteractiveBrokers does not support SecurityType.Base'');", span="1786-1786", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_905 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1766-1766", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs"];
m21_1104 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="PythonUtil.cs"];
m21_414 [label="Entry Unk.IndexOf", span="", cluster="Unk.IndexOf", file="PythonUtil.cs"];
m21_72 [label="order.BrokerId", span="311-311", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_74 [label="_requestInformation[orderId] = ''CancelOrder: '' + order", span="315-315", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_77 [label="Log.Error(''InteractiveBrokersBrokerage.CancelOrder(): OrderID: '' + order.Id + '' - '' + err)", span="324-324", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_73 [label="var orderId = int.Parse(id)", span="313-313", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_76 [label=Exception, span="322-322", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_79 [label="return true;", span="327-327", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_75 [label="_client.ClientSocket.cancelOrder(orderId)", span="317-317", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_78 [label="return false;", span="325-325", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_80 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="304-304", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_692 [label="Entry Unk.GetOrderByBrokerageId", span="", cluster="Unk.GetOrderByBrokerageId", file="PythonUtil.cs"];
m21_773 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", span="1910-1910", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_972 [label="var securityType = ConvertSecurityType(contract.SecType)", span="1912-1912", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_973 [label="var ibSymbol = securityType == SecurityType.Forex ? contract.Symbol + contract.Currency : contract.Symbol", span="1913-1913", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_976 [label="var contractDate = DateTime.ParseExact(contract.LastTradeDateOrContractMonth, DateFormat.EightCharacter, CultureInfo.InvariantCulture)", span="1918-1918", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_979 [label="var expiryDate = DateTime.ParseExact(contract.LastTradeDateOrContractMonth, DateFormat.EightCharacter, CultureInfo.InvariantCulture)", span="1924-1924", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_980 [label="var right = contract.Right == IB.RightType.Call ? OptionRight.Call : OptionRight.Put", span="1925-1925", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_981 [label="var strike = Convert.ToDecimal(contract.Strike)", span="1926-1926", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_974 [label="var market = securityType == SecurityType.Forex ? Market.FXCM : Market.USA", span="1914-1914", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_975 [label="securityType == SecurityType.Future", span="1916-1916", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_977 [label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market, contractDate);", span="1920-1920", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_978 [label="securityType == SecurityType.Option", span="1922-1922", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_982 [label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market, expiryDate, strike, right);", span="1928-1928", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_983 [label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market);", span="1931-1931", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_984 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", span="1910-1910", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs"];
m21_503 [label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0", cluster="System.Threading.EventWaitHandle.Reset()", file="PythonUtil.cs"];
m21_292 [label="Entry Unk.issueSignal", span="", cluster="Unk.issueSignal", file="PythonUtil.cs"];
m21_816 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", span="1652-1652", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs"];
m21_817 [label=direction, span="1654-1654", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs"];
m21_824 [label="throw new ArgumentException(direction, ''direction'');", span="1660-1660", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs"];
m21_818 [label="IB.ActionSide.Buy", span="1656-1656", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs"];
m21_820 [label="IB.ActionSide.Sell", span="1657-1657", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs"];
m21_822 [label="IB.ActionSide.Undefined", span="1658-1658", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs"];
m21_819 [label="return OrderDirection.Buy;", span="1656-1656", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs"];
m21_821 [label="return OrderDirection.Sell;", span="1657-1657", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs"];
m21_823 [label="return OrderDirection.Hold;", span="1658-1658", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs"];
m21_825 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", span="1652-1652", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs"];
m21_25 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", span="1966-1966", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="PythonUtil.cs"];
m21_1001 [label="return Interlocked.Increment(ref _nextClientId);", span="1968-1968", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="PythonUtil.cs"];
m21_1002 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", span="1966-1966", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="PythonUtil.cs"];
m21_305 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="694-694", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="PythonUtil.cs"];
m21_306 [label="return new Dictionary<string, string>(_accountProperties);", span="696-696", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="PythonUtil.cs"];
m21_307 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="694-694", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="PythonUtil.cs"];
m21_1367 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", span="186-186", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="PythonUtil.cs"];
m21_241 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="PythonUtil.cs"];
m21_258 [label="Entry Unk.waitForSignal", span="", cluster="Unk.waitForSignal", file="PythonUtil.cs"];
m21_722 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1461-1461", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_723 [label="_accountHoldingsResetEvent.Reset()", span="1463-1463", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_724 [label="var holding = CreateHolding(e)", span="1464-1464", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_725 [label="_accountHoldings[holding.Symbol.Value] = holding", span="1465-1465", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_726 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1461-1461", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_364 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", span="797-797", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs"];
m21_365 [label="ContractDetails details", span="799-799", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs"];
m21_366 [label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="800-800", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs"];
m21_368 [label="details = GetContractDetails(contract)", span="805-805", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs"];
m21_367 [label="return (decimal) details.MinTick;", span="802-802", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs"];
m21_369 [label="details == null", span="806-806", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs"];
m21_371 [label="return (decimal) details.MinTick;", span="812-812", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs"];
m21_370 [label="return 0;", span="809-809", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs"];
m21_372 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", span="797-797", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs"];
m21_575 [label="_disconnected1100Fired = false", span="1151-1151", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_576 [label="OnMessage(BrokerageMessageEvent.Reconnected(string.Empty))", span="1154-1154", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_577 [label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Disconnecting...'')", span="1156-1156", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_578 [label="Disconnect()", span="1157-1157", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_579 [label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Stopping IB Gateway...'')", span="1159-1159", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_580 [label="InteractiveBrokersGatewayRunner.Stop()", span="1160-1160", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_581 [label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Restarting IB Gateway...'')", span="1162-1162", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_582 [label="InteractiveBrokersGatewayRunner.Restart()", span="1163-1163", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_583 [label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Reconnecting...'')", span="1165-1165", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_584 [label="Connect()", span="1166-1166", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_585 [label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Restoring data subscriptions...'')", span="1168-1168", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_586 [label="RestoreDataSubscriptions()", span="1169-1169", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_587 [label="OnMessage(BrokerageMessageEvent.Reconnected(string.Empty))", span="1173-1173", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_588 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", span="1149-1149", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs"];
m21_335 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="PythonUtil.cs"];
m21_1084 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="PythonUtil.cs"];
m21_534 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", span="1069-1069", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_535 [label="var requestId = e.Id", span="1073-1073", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_536 [label="var errorCode = e.Code", span="1074-1074", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_537 [label="var errorMsg = e.Message", span="1075-1075", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_540 [label="_requestInformation.TryGetValue(requestId, out requestMessage)", span="1082-1082", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_542 [label="Log.Trace($''InteractiveBrokersBrokerage.HandleError(): RequestId: {requestId} ErrorCode: {errorCode} - {errorMsg}'')", span="1087-1087", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_560 [label="Log.Trace($''InteractiveBrokersBrokerage.HandleError.InvalidateOrder(): IBOrderId: {requestId} ErrorCode: {message}'')", span="1130-1130", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_561 [label="var order = _orderProvider.GetOrderByBrokerageId(requestId)", span="1133-1133", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_544 [label="ErrorCodes.Contains(errorCode)", span="1091-1091", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_546 [label="WarningCodes.Contains(errorCode)", span="1095-1095", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_548 [label="errorCode == 1100 && !_disconnected1100Fired", span="1101-1101", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_551 [label="errorCode == 1102 || errorCode == 1101", span="1108-1108", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_552 [label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, errorCode, errorMsg))", span="1111-1111", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_556 [label="errorCode == 506", span="1122-1122", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_558 [label="InvalidatingCodes.Contains(errorCode)", span="1127-1127", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_559 [label="var message = $''{errorCode} - {errorMsg}''", span="1129-1129", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_565 [label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, errorCode, errorMsg))", span="1143-1143", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_538 [label="errorMsg = errorMsg.Replace(''\r\n'', ''. '').Replace(''\r'', ''. '').Replace(''\n'', ''. '')", span="1078-1078", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_539 [label="string requestMessage", span="1081-1081", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_541 [label="errorMsg += ''. Origin: '' + requestMessage", span="1084-1084", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_543 [label="var brokerageMessageType = BrokerageMessageType.Information", span="1090-1090", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_545 [label="brokerageMessageType = BrokerageMessageType.Error", span="1093-1093", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_547 [label="brokerageMessageType = BrokerageMessageType.Warning", span="1097-1097", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_549 [label="_disconnected1100Fired = true", span="1103-1103", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_550 [label="TryWaitForReconnect()", span="1106-1106", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_553 [label="Log.Trace(''InteractiveBrokersBrokerage.HandleError(): Reconnect message received. Restarting...'')", span="1116-1116", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_554 [label="_resetEventRestartGateway.Set()", span="1118-1118", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_555 [label="return;", span="1120-1120", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_557 [label="Log.Trace(''InteractiveBrokersBrokerage.HandleError(): Server Version: '' + _client.ClientSocket.ServerVersion)", span="1124-1124", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_563 [label="var orderEvent = new OrderEvent(order, DateTime.UtcNow, orderFee)\r\n                {\r\n                    Status = OrderStatus.Invalid,\r\n                    Message = message\r\n                }", span="1135-1139", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_562 [label="int orderFee = 0", span="1134-1134", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_564 [label="OnOrderEvent(orderEvent)", span="1140-1140", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_566 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", span="1069-1069", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs"];
m21_1352 [label="Entry System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)", file="PythonUtil.cs"];
m21_727 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1887-1887", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_962 [label="var currencySymbol = Currencies.GetCurrencySymbol(e.Contract.Currency)", span="1889-1889", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_963 [label="var symbol = MapSymbol(e.Contract)", span="1890-1890", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_964 [label="var multiplier = Convert.ToDecimal(e.Contract.Multiplier)", span="1892-1892", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_967 [label="return new Holding\r\n            {\r\n                Symbol = symbol,\r\n                Type = ConvertSecurityType(e.Contract.SecType),\r\n                Quantity = e.Position,\r\n                AveragePrice = Convert.ToDecimal(e.AverageCost) / multiplier,\r\n                MarketPrice = Convert.ToDecimal(e.MarketPrice),\r\n                ConversionRate = 1m, // this will be overwritten when GetAccountHoldings is called to ensure fresh values\r\n                CurrencySymbol = currencySymbol\r\n            };", span="1895-1904", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_965 [label="multiplier == 0m", span="1893-1893", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_966 [label="multiplier = 1m", span="1893-1893", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_968 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1887-1887", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs"];
m21_666 [label="Entry System.Convert.ToInt32(int)", span="0-0", cluster="System.Convert.ToInt32(int)", file="PythonUtil.cs"];
m21_1018 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", span="2012-2012", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_1019 [label="Tick[] ticks", span="2014-2014", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_1024 [label="yield return tick;", span="2024-2024", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_1028 [label="yield return underlyingTick;", span="2030-2030", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_1020 [label=_ticks, span="2016-2016", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_1021 [label="ticks = _ticks.ToArray()", span="2018-2018", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_1022 [label="_ticks.Clear()", span="2019-2019", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_1023 [label=ticks, span="2022-2022", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_1025 [label="_underlyings.ContainsKey(tick.Symbol)", span="2026-2026", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_1026 [label="var underlyingTick = tick.Clone()", span="2028-2028", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_1027 [label="underlyingTick.Symbol = _underlyings[tick.Symbol]", span="2029-2029", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_1029 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", span="2012-2012", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs"];
m21_778 [label="Entry MarketOnOpenOrder.cstr", span="", cluster="MarketOnOpenOrder.cstr", file="PythonUtil.cs"];
m21_405 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="PythonUtil.cs"];
m21_407 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="PythonUtil.cs"];
m21_235 [label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123", cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="PythonUtil.cs"];
m21_1056 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", span="2159-2159", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1087 [label="var market = symbol.ID.Market", span="2161-2161", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1088 [label="var securityType = symbol.ID.SecurityType", span="2162-2162", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1089 [label="symbol.Value.ToLower().IndexOf(''universe'') != -1", span="2164-2164", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1091 [label="return\r\n                (securityType == SecurityType.Equity && market == Market.USA) ||\r\n                (securityType == SecurityType.Forex && market == Market.FXCM) ||\r\n                (securityType == SecurityType.Option && market == Market.USA) ||\r\n                (securityType == SecurityType.Future);", span="2166-2170", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1090 [label="return false;", span="2164-2164", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_1092 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", span="2159-2159", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_571 [label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170", cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="PythonUtil.cs"];
m21_1105 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="PythonUtil.cs"];
m21_814 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="PythonUtil.cs"];
m21_941 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", span="1857-1857", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_942 [label=resolution, span="1859-1859", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_943 [label="Resolution.Tick", span="1861-1861", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_946 [label="Resolution.Minute", span="1864-1864", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_948 [label="Resolution.Hour", span="1866-1866", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_950 [label="Resolution.Daily", span="1868-1868", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_944 [label="Resolution.Second", span="1862-1862", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_945 [label="return ''60 S'';", span="1863-1863", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_947 [label="return ''1 D'';", span="1865-1865", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_949 [label="return ''1 M'';", span="1867-1867", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_951 [label="return ''1 Y'';", span="1870-1870", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_952 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", span="1857-1857", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs"];
m21_141 [label="Entry Unk.StartNew", span="", cluster="Unk.StartNew", file="PythonUtil.cs"];
m21_504 [label="Entry Unk.reqHistoricalData", span="", cluster="Unk.reqHistoricalData", file="PythonUtil.cs"];
m21_1346 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="PythonUtil.cs"];
m21_602 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="PythonUtil.cs"];
m21_507 [label="Entry Exception.cstr", span="", cluster="Exception.cstr", file="PythonUtil.cs"];
m21_309 [label="Connect()", span="708-708", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_312 [label="exchange == null &&\r\n                order.Symbol.SecurityType == SecurityType.Option &&\r\n                (order.Type == OrderType.MarketOnOpen || order.Type == OrderType.MarketOnClose)", span="716-718", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_314 [label="var contract = CreateContract(order.Symbol, exchange)", span="723-723", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_316 [label=needsNewId, span="726-726", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_318 [label="order.BrokerId.Add(id.ToString())", span="730-730", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_320 [label="order.BrokerId.Any()", span="733-733", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_321 [label="ibOrderId = int.Parse(order.BrokerId[0])", span="736-736", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_324 [label="order.Type == OrderType.OptionExercise", span="745-745", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_325 [label="_client.ClientSocket.exerciseOptions(ibOrderId, contract, 1, decimal.ToInt32(order.Quantity), _account, 0)", span="747-747", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_326 [label="var ibOrder = ConvertOrder(order, contract, ibOrderId)", span="751-751", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_310 [label="!IsConnected", span="710-710", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_311 [label="throw new InvalidOperationException(''InteractiveBrokersBrokerage.IBPlaceOrder(): Unable to place order while not connected.'');", span="712-712", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_313 [label="exchange = Market.CBOE.ToUpper()", span="720-720", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_315 [label="int ibOrderId", span="725-725", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_323 [label="_requestInformation[ibOrderId] = ''IBPlaceOrder: '' + contract", span="743-743", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_327 [label="_client.ClientSocket.placeOrder(ibOrder.OrderId, contract, ibOrder)", span="752-752", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_317 [label="var id = GetNextBrokerageOrderId()", span="729-729", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_319 [label="ibOrderId = id", span="731-731", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_322 [label="throw new ArgumentException(''Expected order with populated BrokerId for updating orders.'');", span="740-740", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_328 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="705-705", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs"];
m21_671 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", span="1344-1344", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_672 [label="Log.Trace(''InteractiveBrokersBrokerage.HandleExecutionDetails(): '' + executionDetails)", span="1348-1348", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_678 [label="var order = _orderProvider.GetOrderByBrokerageId(executionDetails.Execution.OrderId)", span="1363-1363", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_680 [label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Unable to locate order with BrokerageID '' + executionDetails.Execution.OrderId)", span="1366-1366", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_682 [label="var currentQuantityFilled = Convert.ToInt32(executionDetails.Execution.Shares)", span="1370-1370", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_683 [label="var totalQuantityFilled = Convert.ToInt32(executionDetails.Execution.CumQty)", span="1371-1371", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_685 [label="var price = Convert.ToDecimal(executionDetails.Execution.Price)", span="1373-1373", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_687 [label="!IsFillAlreadyHandled(order, executionDetails.Execution.OrderId, remainingQuantity)", span="1378-1378", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_673 [label="!IsConnected", span="1350-1350", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_674 [label="_client != null", span="1352-1352", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_675 [label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Not connected; update dropped, _client.Connected: {0}, _disconnected1100Fired: {1}'', _client.Connected, _disconnected1100Fired)", span="1354-1354", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_676 [label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Not connected; _client is null'')", span="1358-1358", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_677 [label="return;", span="1360-1360", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_679 [label="order == null", span="1364-1364", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_684 [label="var remainingQuantity = Convert.ToInt32(order.AbsoluteQuantity - totalQuantityFilled)", span="1372-1372", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_688 [label="HandleFill(order, currentQuantityFilled, totalQuantityFilled, remainingQuantity, price, status)", span="1380-1380", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_681 [label="return;", span="1367-1367", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_686 [label="var status = remainingQuantity > 0 ? OrderStatus.PartiallyFilled : OrderStatus.Filled", span="1376-1376", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_689 [label=Exception, span="1383-1383", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_690 [label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): '' + err)", span="1385-1385", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_691 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", span="1344-1344", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs"];
m21_336 [label="Entry decimal.ToInt32(decimal)", span="0-0", cluster="decimal.ToInt32(decimal)", file="PythonUtil.cs"];
m21_695 [label="Entry Unk.IsFillAlreadyHandled", span="", cluster="Unk.IsFillAlreadyHandled", file="PythonUtil.cs"];
m21_122 [label="Entry Unk.WaitAll", span="", cluster="Unk.WaitAll", file="PythonUtil.cs"];
m21_308 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="PythonUtil.cs"];
m21_624 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", span="1240-1240", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs"];
m21_625 [label="_accountProperties[e.Currency + '':'' + e.Key] = e.Value", span="1246-1246", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs"];
m21_626 [label="e.Key == AccountValueKeys.CashBalance && e.Currency != ''BASE''", span="1249-1249", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs"];
m21_627 [label="var cashBalance = decimal.Parse(e.Value, CultureInfo.InvariantCulture)", span="1251-1251", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs"];
m21_628 [label="_cashBalances.AddOrUpdate(e.Currency, cashBalance)", span="1252-1252", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs"];
m21_629 [label="OnAccountChanged(new AccountEvent(e.Currency, cashBalance))", span="1253-1253", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs"];
m21_630 [label=Exception, span="1256-1256", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs"];
m21_631 [label="Log.Error(''InteractiveBrokersBrokerage.HandleUpdateAccountValue(): '' + err)", span="1258-1258", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs"];
m21_632 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", span="1240-1240", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs"];
m21_961 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722", cluster="QuantConnect.Resolution.ToTimeSpan()", file="PythonUtil.cs"];
m21_1141 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()", file="PythonUtil.cs"];
m21_1347 [label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0", cluster="System.IO.Directory.GetFiles(string, string)", file="PythonUtil.cs"];
m21_332 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", span="1944-1944", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="PythonUtil.cs"];
m21_991 [label="_nextValidId == 0", span="1948-1948", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="PythonUtil.cs"];
m21_992 [label="Thread.Yield()", span="1948-1948", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="PythonUtil.cs"];
m21_993 [label="return Interlocked.Increment(ref _nextValidId);", span="1950-1950", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="PythonUtil.cs"];
m21_994 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", span="1944-1944", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="PythonUtil.cs"];
m21_83 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="334-334", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_84 [label="var orders = new List<Order>()", span="336-336", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_85 [label="var manualResetEvent = new ManualResetEvent(false)", span="338-338", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_86 [label="EventHandler<IB.OpenOrderEventArgs> clientOnOpenOrder = (sender, args) =>\r\n            {\r\n                // convert IB order objects returned from RequestOpenOrders\r\n                orders.Add(ConvertOrder(args.Order, args.Contract));\r\n            }", span="341-345", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_95 [label="return orders;", span="367-367", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_87 [label="EventHandler clientOnOpenOrderEnd = (sender, args) =>\r\n            {\r\n                // this signals the end of our RequestOpenOrders call\r\n                manualResetEvent.Set();\r\n            }", span="346-350", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_91 [label="!manualResetEvent.WaitOne(15000)", span="358-358", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_88 [label="_client.OpenOrder += clientOnOpenOrder", span="352-352", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_93 [label="_client.OpenOrder -= clientOnOpenOrder", span="364-364", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_89 [label="_client.OpenOrderEnd += clientOnOpenOrderEnd", span="353-353", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_94 [label=directory, span="", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_90 [label="_client.ClientSocket.reqAllOpenOrders()", span="355-355", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_92 [label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetOpenOrders(): Operation took longer than 15 seconds.'');", span="360-360", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_96 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="334-334", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs"];
m21_239 [label="Entry Unk.Start", span="", cluster="Unk.Start", file="PythonUtil.cs"];
m21_573 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PythonUtil.cs"];
m21_1351 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="PythonUtil.cs"];
m21_54 [label="Log.Trace(''InteractiveBrokersBrokerage.PlaceOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="266-266", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_815 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="PythonUtil.cs"];
m21_707 [label="Entry QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="27-27", cluster="QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="PythonUtil.cs"];
m21_906 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", span="1796-1796", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_907 [label=type, span="1798-1798", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_908 [label="IB.SecurityType.Stock", span="1800-1800", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_910 [label="IB.SecurityType.Option", span="1803-1803", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_912 [label="IB.SecurityType.Commodity", span="1806-1806", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_914 [label="IB.SecurityType.Cash", span="1809-1809", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_916 [label="IB.SecurityType.Future", span="1812-1812", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_918 [label="IB.SecurityType.Index", span="1816-1816", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_926 [label="throw new ArgumentOutOfRangeException(''type'');", span="1826-1826", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_909 [label="return SecurityType.Equity;", span="1801-1801", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_911 [label="return SecurityType.Option;", span="1804-1804", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_913 [label="return SecurityType.Commodity;", span="1807-1807", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_915 [label="return SecurityType.Forex;", span="1810-1810", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_917 [label="return SecurityType.Future;", span="1813-1813", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_919 [label="IB.SecurityType.FutureOption", span="1817-1817", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_920 [label="IB.SecurityType.Bag", span="1818-1818", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_921 [label="IB.SecurityType.Bond", span="1819-1819", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_922 [label="IB.SecurityType.Warrant", span="1820-1820", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_923 [label="IB.SecurityType.Bill", span="1821-1821", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_924 [label="IB.SecurityType.Undefined", span="1822-1822", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_925 [label="return SecurityType.Base;", span="1823-1823", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_927 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", span="1796-1796", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs"];
m21_1210 [label="Entry QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31", cluster="QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="PythonUtil.cs"];
m21_117 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", span="2617-2617", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs"];
m21_1361 [label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): start'')", span="2619-2619", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs"];
m21_1362 [label="!InteractiveBrokersGatewayRunner.IsRunning()", span="2620-2620", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs"];
m21_1363 [label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): IB Gateway not running. Restarting...'')", span="2622-2622", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs"];
m21_1365 [label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): end'')", span="2625-2625", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs"];
m21_1364 [label="_resetEventRestartGateway.Set()", span="2623-2623", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs"];
m21_1366 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", span="2617-2617", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs"];
m21_158 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="422-422", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_159 [label="var filter = new ExecutionFilter\r\n            {\r\n                AcctCode = _account,\r\n                ClientId = _clientId,\r\n                Exchange = exchange,\r\n                SecType = type ?? IB.SecurityType.Undefined,\r\n                Symbol = symbol,\r\n                Time = (timeSince ?? DateTime.MinValue).ToString(''yyyyMMdd HH:mm:ss''),\r\n                Side = side ?? IB.ActionSide.Undefined\r\n            }", span="424-433", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_163 [label="_requestInformation[requestId] = ''GetExecutions: '' + symbol", span="441-441", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_160 [label="var details = new List<IB.ExecutionDetailsEventArgs>()", span="435-435", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_168 [label="_client.ClientSocket.reqExecutions(requestId, filter)", span="457-457", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_161 [label="var manualResetEvent = new ManualResetEvent(false)", span="437-437", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_165 [label="EventHandler<IB.ExecutionDetailsEventArgs> clientOnExecDetails = (sender, args) =>\r\n            {\r\n                if (args.RequestId == requestId) details.Add(args);\r\n            }", span="448-451", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_173 [label="return details;", span="468-468", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_162 [label="var requestId = GetNextRequestId()", span="439-439", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_164 [label="EventHandler<IB.RequestEndEventArgs> clientOnExecutionDataEnd = (sender, args) =>\r\n            {\r\n                if (args.RequestId == requestId) manualResetEvent.Set();\r\n            }", span="444-447", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_169 [label="!manualResetEvent.WaitOne(5000)", span="459-459", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_167 [label="_client.ExecutionDetailsEnd += clientOnExecutionDataEnd", span="454-454", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_172 [label="_client.ExecutionDetailsEnd -= clientOnExecutionDataEnd", span="466-466", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_166 [label="_client.ExecutionDetails += clientOnExecDetails", span="453-453", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_171 [label="_client.ExecutionDetails -= clientOnExecDetails", span="465-465", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_170 [label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetExecutions(): Operation took longer than 5 seconds.'');", span="461-461", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_174 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="422-422", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs"];
m21_619 [label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0", cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="PythonUtil.cs"];
m21_637 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", span="1265-1265", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_638 [label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + update)", span="1269-1269", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_644 [label="var order = _orderProvider.GetOrderByBrokerageId(update.OrderId)", span="1284-1284", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_646 [label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Unable to locate order with BrokerageID '' + update.OrderId)", span="1287-1287", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_648 [label="var status = ConvertOrderStatus(update.Status)", span="1291-1291", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_650 [label="var currentQuantityFilled = Convert.ToInt32(update.Filled)", span="1295-1295", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_651 [label="var totalQuantityFilled = Convert.ToInt32(order.AbsoluteQuantity - update.Remaining)", span="1296-1296", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_652 [label="var remainingQuantity = update.Remaining", span="1297-1297", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_653 [label="var price = Convert.ToDecimal(update.LastFillPrice)", span="1298-1298", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_654 [label="!IsFillAlreadyHandled(order, update.OrderId, remainingQuantity)", span="1300-1300", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_639 [label="!IsConnected", span="1271-1271", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_640 [label="_client != null", span="1273-1273", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_641 [label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Not connected; update dropped, _client.Connected: {0}, _disconnected1100Fired: {1}'', _client.Connected, _disconnected1100Fired)", span="1275-1275", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_642 [label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Not connected; _client is null'')", span="1279-1279", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_643 [label="return;", span="1281-1281", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_645 [label="order == null", span="1285-1285", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_655 [label="HandleFill(order, currentQuantityFilled, totalQuantityFilled, remainingQuantity, price, status)", span="1302-1302", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_656 [label="status != order.Status", span="1308-1308", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_657 [label="order.Status.IsClosed()", span="1310-1310", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_658 [label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ignoring update in closed state - order.Status: '' + order.Status + '', status: '' + status)", span="1313-1313", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_659 [label="order.Status == OrderStatus.PartiallyFilled && (status == OrderStatus.New || status == OrderStatus.Submitted)", span="1315-1315", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_661 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''Interactive Brokers Order Event'')\r\n                            {\r\n                                Status = status\r\n                            })", span="1323-1326", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_647 [label="return;", span="1288-1288", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_649 [label="status == OrderStatus.Filled || status == OrderStatus.PartiallyFilled", span="1293-1293", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_660 [label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ignoring status '' + status + '' after partial fills'')", span="1318-1318", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_662 [label=Exception, span="1331-1331", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_663 [label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + err)", span="1333-1333", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_664 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", span="1265-1265", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs"];
m21_813 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="PythonUtil.cs"];
m21_780 [label="Entry LimitOrder.cstr", span="", cluster="LimitOrder.cstr", file="PythonUtil.cs"];
m21_618 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="PythonUtil.cs"];
m21_745 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="1667-1667", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs"];
m21_827 [label=direction, span="1669-1669", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs"];
m21_834 [label="throw new InvalidEnumArgumentException(''direction'', (int) direction, typeof (OrderDirection));", span="1675-1675", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs"];
m21_828 [label="OrderDirection.Buy", span="1671-1671", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs"];
m21_830 [label="OrderDirection.Sell", span="1672-1672", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs"];
m21_832 [label="OrderDirection.Hold", span="1673-1673", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs"];
m21_829 [label="return IB.ActionSide.Buy;", span="1671-1671", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs"];
m21_831 [label="return IB.ActionSide.Sell;", span="1672-1672", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs"];
m21_833 [label="return IB.ActionSide.Undefined;", span="1673-1673", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs"];
m21_835 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="1667-1667", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs"];
m21_188 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="474-474", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_189 [label=IsConnected, span="476-476", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_190 [label="return;", span="476-476", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_191 [label="_accountHoldings.Clear()", span="479-479", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_192 [label="_accountProperties.Clear()", span="480-480", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_193 [label="var attempt = 1", span="482-482", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_194 [label="int maxAttempts = 5", span="483-483", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_197 [label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Attempting to connect ({0}/{1}) ...'', attempt, maxAttempts)", span="489-489", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_210 [label="attempt++ < maxAttempts", span="540-540", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_219 [label="attempt++ < maxAttempts", span="559-559", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_227 [label="attempt++ < maxAttempts", span="583-583", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_195 [label="var existingSessionDetected = false", span="484-484", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_196 [label=true, span="485-485", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_224 [label=existingSessionDetected, span="576-576", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_198 [label="Disconnect()", span="492-492", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_199 [label="_client.ClientSocket.eConnect(_host, _port, _clientId)", span="495-495", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_200 [label="var reader = new EReader(_client.ClientSocket, _signal)", span="498-498", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_201 [label="reader.Start()", span="499-499", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_202 [label="_messageProcessingThread = new Thread(() =>\r\n                    {\r\n                        Log.Trace(''IB message processing thread started: #'' + Thread.CurrentThread.ManagedThreadId);\r\n\r\n                        while (_client.ClientSocket.IsConnected())\r\n                        {\r\n                            try\r\n                            {\r\n                                _signal.waitForSignal();\r\n                                reader.processMsgs();\r\n                            }\r\n                            catch (Exception error)\r\n                            {\r\n                                // error in message processing thread, log error and disconnect\r\n                                Log.Error(''Error in message processing thread #'' + Thread.CurrentThread.ManagedThreadId + '': '' + error);\r\n                            }\r\n                        }\r\n\r\n                        Log.Trace(''IB message processing thread ended: #'' + Thread.CurrentThread.ManagedThreadId);\r\n                    }) { IsBackground = true }", span="501-520", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_203 [label="_messageProcessingThread.Start()", span="522-522", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_204 [label="!_waitForNextValidId.WaitOne(15000)", span="525-525", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_205 [label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 15 seconds.'')", span="527-527", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_213 [label="Log.Trace(''IB next valid id received.'')", span="549-549", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_206 [label="Disconnect()", span="530-530", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_207 [label="ExistingSessionDetected()", span="533-533", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_208 [label="existingSessionDetected = true", span="535-535", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_209 [label="throw new Exception(''InteractiveBrokersBrokerage.Connect(): An existing session was detected and will not be automatically disconnected. Please close the existing session manually.'');", span="536-536", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_211 [label="Thread.Sleep(1000)", span="542-542", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_212 [label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 15 seconds.'');", span="546-546", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_214 [label="!_client.Connected", span="551-551", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_215 [label="throw new Exception(''InteractiveBrokersBrokerage.Connect(): Connection returned but was not in connected state.'');", span="551-551", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_216 [label="!DownloadAccount()", span="553-553", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_217 [label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): DownloadAccount failed. Operation took longer than 15 seconds.'')", span="555-555", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_222 [label="_client.ClientSocket.setServerLogLevel(5)", span="569-569", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_218 [label="Disconnect()", span="557-557", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_220 [label="Thread.Sleep(1000)", span="561-561", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_221 [label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): DownloadAccount failed.'');", span="565-565", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_223 [label=Exception, span="573-573", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_225 [label="Log.Error(err)", span="578-578", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_226 [label="throw;", span="579-579", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_228 [label="Thread.Sleep(15000)", span="585-585", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_229 [label="Log.Error(err)", span="590-590", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_230 [label="err.Message.Contains(''Connection refused'')", span="593-593", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_231 [label="throw new Exception(err.Message + ''. Be sure to logout of Trader Workstation. '' +\r\n                            ''IB only allows one active log in at a time. '' +\r\n                            ''This can also be caused by requiring two-factor authentication. '' +\r\n                            ''Be sure to disable this in IB Account Management > Security > SLS Opt out.'', err);", span="595-598", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_232 [label="throw;", span="601-601", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_233 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="474-474", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs"];
m21_508 [label="Entry Unk.ToDecimal", span="", cluster="Unk.ToDecimal", file="PythonUtil.cs"];
m21_126 [label="Entry QuantConnect.Util.ObjectActivator.Clone<T>(T)", span="129-129", cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="PythonUtil.cs"];
m21_1103 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="PythonUtil.cs"];
m21_1228 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="2401-2401", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1229 [label="!CanSubscribe(request.Symbol) ||\r\n                (request.Symbol.ID.SecurityType == SecurityType.Option && request.Symbol.IsCanonical()) ||\r\n                (request.Symbol.ID.SecurityType == SecurityType.Future && request.Symbol.IsCanonical())", span="2404-2406", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1230 [label="yield break;", span="2408-2408", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1250 [label="yield return bar;", span="2461-2461", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1231 [label="var contract = CreateContract(request.Symbol)", span="2412-2412", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1232 [label="var resolution = ConvertResolution(request.Resolution)", span="2413-2413", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1233 [label="var duration = ConvertResolutionToDuration(request.Resolution)", span="2414-2414", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1234 [label="var startTime = request.Resolution == Resolution.Daily ? request.StartTimeUtc.Date : request.StartTimeUtc", span="2415-2415", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1235 [label="var endTime = request.Resolution == Resolution.Daily ? request.EndTimeUtc.Date : request.EndTimeUtc", span="2416-2416", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1236 [label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory(): Submitting request: {0}({1}): {2} {3} UTC -> {4} UTC'',\r\n                request.Symbol.Value, contract, request.Resolution, startTime, endTime)", span="2418-2419", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1238 [label="!_symbolExchangeTimeZones.TryGetValue(request.Symbol, out exchangeTimeZone)", span="2422-2422", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1239 [label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(request.Symbol.ID.Market, request.Symbol, request.Symbol.SecurityType).TimeZone", span="2425-2425", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1240 [label="_symbolExchangeTimeZones.Add(request.Symbol, exchangeTimeZone)", span="2426-2426", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1242 [label="request.Symbol.SecurityType == SecurityType.Forex || request.Symbol.SecurityType == SecurityType.Cfd", span="2430-2430", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1243 [label="var historyBid = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Bid)", span="2434-2434", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1244 [label="var historyAsk = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Ask)", span="2435-2435", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1246 [label="history = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Trades)", span="2452-2452", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1247 [label="var requestStartTime = request.StartTimeUtc.ConvertFromUtc(exchangeTimeZone)", span="2456-2456", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1248 [label="var requestEndTime = request.EndTimeUtc.ConvertFromUtc(exchangeTimeZone)", span="2457-2457", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1237 [label="DateTimeZone exchangeTimeZone", span="2421-2421", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1241 [label="IEnumerable<BaseData> history", span="2429-2429", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1245 [label="history = historyBid.Join(historyAsk,\r\n                    bid => bid.Time,\r\n                    ask => ask.Time,\r\n                    (bid, ask) => new QuoteBar(\r\n                        bid.Time,\r\n                        bid.Symbol,\r\n                        new Bar(bid.Open, bid.High, bid.Low, bid.Close),\r\n                        0,\r\n                        new Bar(ask.Open, ask.High, ask.Low, ask.Close),\r\n                        0,\r\n                        bid.Period))", span="2437-2447", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1249 [label="history.Where(bar => bar.Time >= requestStartTime && bar.EndTime <= requestEndTime)", span="2459-2459", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1251 [label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() Download completed'')", span="2464-2464", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1252 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="2401-2401", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs"];
m21_1086 [label="Entry Unk.cancelMktData", span="", cluster="Unk.cancelMktData", file="PythonUtil.cs"];
m21_749 [label="Entry System.Convert.ToDouble(decimal)", span="0-0", cluster="System.Convert.ToDouble(decimal)", file="PythonUtil.cs"];
m21_28 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="PythonUtil.cs"];
m21_506 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="PythonUtil.cs"];
m21_0 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="136-136", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="PythonUtil.cs"];
m21_1 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="136-136", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="PythonUtil.cs"];
m21_353 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="PythonUtil.cs"];
m21_971 [label="Entry Unk.ConvertSecurityType", span="", cluster="Unk.ConvertSecurityType", file="PythonUtil.cs"];
m21_330 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="PythonUtil.cs"];
m21_957 [label="Entry Unk.ToDouble", span="", cluster="Unk.ToDouble", file="PythonUtil.cs"];
m21_592 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", span="1179-1179", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs"];
m21_593 [label="List<Symbol> subscribedSymbols", span="1181-1181", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs"];
m21_594 [label=_sync, span="1182-1182", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs"];
m21_595 [label="subscribedSymbols = _subscribedSymbols.Keys.ToList()", span="1184-1184", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs"];
m21_596 [label="_subscribedSymbols.Clear()", span="1186-1186", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs"];
m21_599 [label="Subscribe(null, subscribedSymbols)", span="1191-1191", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs"];
m21_597 [label="_subscribedTickets.Clear()", span="1187-1187", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs"];
m21_598 [label="_underlyings.Clear()", span="1188-1188", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs"];
m21_600 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", span="1179-1179", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs"];
m21_329 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="PythonUtil.cs"];
m21_4 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", span="179-179", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_5 [label="_algorithm = algorithm", span="182-182", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_6 [label="_orderProvider = orderProvider", span="183-183", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_7 [label="_securityProvider = securityProvider", span="184-184", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_8 [label="_account = account", span="185-185", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_9 [label="_host = host", span="186-186", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_10 [label="_port = port", span="187-187", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_12 [label="_agentDescription = agentDescription", span="189-189", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_11 [label="_clientId = IncrementClientId()", span="188-188", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_13 [label="_client = new IB.InteractiveBrokersClient(_signal)", span="190-190", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_14 [label="_client.UpdatePortfolio += HandlePortfolioUpdates", span="193-193", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_15 [label="_client.OrderStatus += HandleOrderStatusUpdates", span="194-194", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_16 [label="_client.UpdateAccountValue += HandleUpdateAccountValue", span="195-195", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_17 [label="_client.ExecutionDetails += HandleExecutionDetails", span="196-196", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_18 [label="_client.Error += HandleError", span="197-197", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_19 [label="_client.TickPrice += HandleTickPrice", span="198-198", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_20 [label="_client.TickSize += HandleTickSize", span="199-199", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_21 [label="_client.CurrentTimeUtc += HandleBrokerTime", span="200-200", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_22 [label="_client.NextValidId += (sender, e) =>\r\n            {\r\n                // only grab this id when we initialize, and we'll manually increment it here to avoid threading issues\r\n                if (_nextValidId == 0)\r\n                {\r\n                    _nextValidId = e.OrderId;\r\n                    _waitForNextValidId.Set();\r\n                }\r\n                Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId);\r\n            }", span="203-212", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_23 [label="new Thread(() =>\r\n            {\r\n                try\r\n                {\r\n                    Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread started.'');\r\n\r\n                    while (!_ctsRestartGateway.IsCancellationRequested)\r\n                    {\r\n                        if (_resetEventRestartGateway.WaitOne(1000, _ctsRestartGateway.Token))\r\n                        {\r\n                            Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence start.'');\r\n\r\n                            try\r\n                            {\r\n                                ResetGatewayConnection();\r\n                            }\r\n                            catch (Exception exception)\r\n                            {\r\n                                Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in ResetGatewayConnection: '' + exception);\r\n                            }\r\n\r\n                            Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence end.'');\r\n                        }\r\n                    }\r\n\r\n                    Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread ended.'');\r\n                }\r\n                catch (Exception exception)\r\n                {\r\n                    Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in reset handler thread: '' + exception);\r\n                }\r\n            }) { IsBackground = true }.Start()", span="215-246", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_24 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", span="179-179", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs"];
m21_403 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", span="868-868", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_415 [label="int timeout = 60", span="870-870", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_417 [label="_requestInformation[requestId] = ''FindContracts: '' + contract", span="874-874", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_424 [label="_client.ClientSocket.reqContractDetails(requestId, contract)", span="890-890", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_416 [label="var requestId = GetNextRequestId()", span="872-872", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_425 [label="!manualResetEvent.WaitOne(timeout * 1000)", span="892-892", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_426 [label="Log.Error(''InteractiveBrokersBrokerage.FindContracts(): failed to receive response from IB within {0} seconds'', timeout)", span="894-894", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_418 [label="var manualResetEvent = new ManualResetEvent(false)", span="876-876", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_419 [label="var contractDetails = new List<ContractDetails>()", span="877-877", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_421 [label="EventHandler<IB.RequestEndEventArgs> clientOnContractDetailsEnd =\r\n                (sender, args) => manualResetEvent.Set()", span="883-884", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_420 [label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails =\r\n                (sender, args) => contractDetails.Add(args.ContractDetails)", span="880-881", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_429 [label="return contractDetails;", span="901-901", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_422 [label="_client.ContractDetails += clientOnContractDetails", span="886-886", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_428 [label="_client.ContractDetails -= clientOnContractDetails", span="899-899", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_423 [label="_client.ContractDetailsEnd += clientOnContractDetailsEnd", span="887-887", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_427 [label="_client.ContractDetailsEnd -= clientOnContractDetailsEnd", span="898-898", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_430 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", span="868-868", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs"];
m21_572 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(int)", span="90-90", cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(int)", file="PythonUtil.cs"];
m21_567 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="PythonUtil.cs"];
m21_242 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="PythonUtil.cs"];
m21_304 [label="Entry System.Threading.CancellationTokenSource.Cancel(bool)", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel(bool)", file="PythonUtil.cs"];
m21_708 [label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31", cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="PythonUtil.cs"];
m21_178 [label="Entry Unk.reqExecutions", span="", cluster="Unk.reqExecutions", file="PythonUtil.cs"];
m21_985 [label="Entry Unk.GetLeanSymbol", span="", cluster="Unk.GetLeanSymbol", file="PythonUtil.cs"];
m21_344 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", span="761-761", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs"];
m21_345 [label="ContractDetails details", span="763-763", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs"];
m21_346 [label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="764-764", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs"];
m21_348 [label="details = GetContractDetails(contract)", span="769-769", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs"];
m21_347 [label="return details.Summary.PrimaryExch;", span="766-766", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs"];
m21_349 [label="details == null", span="770-770", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs"];
m21_351 [label="return details.Summary.PrimaryExch;", span="776-776", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs"];
m21_350 [label="return null;", span="773-773", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs"];
m21_352 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", span="761-761", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs"];
m21_291 [label="Entry Unk.eDisconnect", span="", cluster="Unk.eDisconnect", file="PythonUtil.cs"];
m21_398 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", span="854-854", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="PythonUtil.cs"];
m21_399 [label="var contractDetails = FindContracts(contract)", span="857-857", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="PythonUtil.cs"];
m21_400 [label="var exchanges = _futuresExchanges.Values.Reverse().ToArray()", span="859-859", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="PythonUtil.cs"];
m21_401 [label="return contractDetails\r\n                    .Select(details => details.Summary.Exchange)\r\n                    .OrderByDescending(e => Array.IndexOf(exchanges, e))\r\n                    .FirstOrDefault();", span="862-865", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="PythonUtil.cs"];
m21_402 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", span="854-854", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="PythonUtil.cs"];
m21_570 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="PythonUtil.cs"];
m21_667 [label="Entry System.Convert.ToInt32(decimal)", span="0-0", cluster="System.Convert.ToInt32(decimal)", file="PythonUtil.cs"];
m21_1013 [label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int)", file="PythonUtil.cs"];
m21_337 [label="Entry Unk.exerciseOptions", span="", cluster="Unk.exerciseOptions", file="PythonUtil.cs"];
m21_1192 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="2344-2344", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1193 [label="Connect()", span="2347-2347", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1194 [label="var exchangeSpecifier = securityType == SecurityType.Future ? securityExchange ?? '''' : securityExchange ?? ''Smart''", span="2350-2350", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1196 [label="Func<string, int> exchangeFilter = exchange => securityType == SecurityType.Future ? Array.IndexOf(futuresExchanges, exchange) : 0", span="2352-2352", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1197 [label="var contract = new Contract\r\n            {\r\n                Symbol = _symbolMapper.GetBrokerageRootSymbol(lookupName),\r\n                Currency = securityCurrency ?? ''USD'',\r\n                Exchange = exchangeSpecifier,\r\n                SecType = ConvertSecurityType(securityType)\r\n            }", span="2355-2361", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1199 [label="securityType == SecurityType.Option", span="2365-2365", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1195 [label="var futuresExchanges = _futuresExchanges.Values.Reverse().ToArray()", span="2351-2351", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1205 [label="var filteredResults =\r\n                    results\r\n                    .Select(x => x.Summary)\r\n                    .GroupBy(x => x.Exchange)\r\n                    .OrderByDescending(g => exchangeFilter(g.Key))\r\n                    .FirstOrDefault()", span="2382-2387", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1198 [label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Requesting symbol list for '' + contract.Symbol + '' ...'')", span="2363-2363", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1200 [label="var underlyingSymbol = Symbol.Create(contract.Symbol, SecurityType.Equity, Market.USA)", span="2370-2370", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1202 [label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Returning {0} contracts for {1}'', symbols.Count, contract.Symbol)", span="2373-2373", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1204 [label="var results = FindContracts(contract)", span="2379-2379", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1201 [label="var symbols = _algorithm.OptionChainProvider.GetOptionContractList(underlyingSymbol, DateTime.Today).ToList()", span="2371-2371", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1203 [label="return symbols;", span="2375-2375", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1206 [label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Returning {0} symbol(s)'', filteredResults != null ? filteredResults.Count() : 0)", span="2389-2389", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1207 [label="return filteredResults != null ? filteredResults.Select(MapSymbol) : Enumerable.Empty<Symbol>();", span="2392-2392", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1208 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="2344-2344", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs"];
m21_1061 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2103-2103", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1062 [label=symbols, span="2107-2107", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1063 [label="CanSubscribe(symbol)", span="2109-2109", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1081 [label=Exception, span="2148-2148", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1065 [label="Log.Trace(''InteractiveBrokersBrokerage.Unsubscribe(): Unsubscribe Request: '' + symbol.Value)", span="2113-2113", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1066 [label="symbol.ID.SecurityType == SecurityType.Option && symbol.ID.StrikePrice == 0.0m", span="2115-2115", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1067 [label="_underlyings.Remove(symbol.Underlying)", span="2117-2117", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1069 [label="_subscribedSymbols.TryRemove(symbol, out id)", span="2121-2121", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1064 [label=_sync, span="2111-2111", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1068 [label="int id", span="2120-2120", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1070 [label="_messagingRateLimiter.WaitToProceed()", span="2123-2123", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1072 [label="_subscriptionTimes.TryGetValue(id, out subscriptionTime)", span="2127-2127", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1077 [label="_subscriptionTimes.Remove(id)", span="2136-2136", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1078 [label="Client.ClientSocket.cancelMktData(id)", span="2139-2139", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1080 [label="_subscribedTickets.TryRemove(id, out s)", span="2142-2142", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1071 [label="DateTime subscriptionTime", span="2126-2126", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1073 [label="var timeSinceSubscription = DateTime.UtcNow - subscriptionTime", span="2129-2129", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1074 [label="timeSinceSubscription < _minimumTimespanBeforeUnsubscribe", span="2130-2130", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1075 [label="var delay = Convert.ToInt32((_minimumTimespanBeforeUnsubscribe - timeSinceSubscription).TotalMilliseconds)", span="2132-2132", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1076 [label="Thread.Sleep(delay)", span="2133-2133", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1079 [label="Symbol s", span="2141-2141", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1082 [label="Log.Error(''InteractiveBrokersBrokerage.Unsubscribe(): '' + err.Message)", span="2150-2150", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_1083 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2103-2103", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs"];
m21_670 [label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27", cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="PythonUtil.cs"];
m21_826 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="PythonUtil.cs"];
m21_668 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", span="1428-1428", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_709 [label="order.Status == OrderStatus.Filled", span="1431-1431", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_712 [label="_orderFills.TryGetValue(orderId, out previousRemainingQuantity)", span="1435-1435", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_713 [label="newRemainingQuantity >= previousRemainingQuantity", span="1437-1437", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_715 [label="newRemainingQuantity > 0", span="1444-1444", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_716 [label="_orderFills[orderId] = newRemainingQuantity", span="1447-1447", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_717 [label="_orderFills.Remove(orderId)", span="1452-1452", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_710 [label="return true;", span="1432-1432", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_711 [label="int previousRemainingQuantity", span="1434-1434", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_714 [label="return true;", span="1440-1440", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_718 [label="return false;", span="1455-1455", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_719 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", span="1428-1428", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs"];
m21_1030 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="PythonUtil.cs"];
m21_406 [label="Entry Unk.OrderByDescending", span="", cluster="Unk.OrderByDescending", file="PythonUtil.cs"];
m21_340 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", span="756-756", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="PythonUtil.cs"];
m21_341 [label="return string.Format(''{0} {1} {2} {3}'', contract, contract.LastTradeDateOrContractMonth, contract.Strike, contract.Right);", span="758-758", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="PythonUtil.cs"];
m21_342 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", span="756-756", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="PythonUtil.cs"];
m21_1217 [label="Entry System.Array.IndexOf<T>(T[], T)", span="0-0", cluster="System.Array.IndexOf<T>(T[], T)", file="PythonUtil.cs"];
m21_1227 [label="Entry Unk.exchangeFilter", span="", cluster="Unk.exchangeFilter", file="PythonUtil.cs"];
m21_293 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="PythonUtil.cs"];
m21_240 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", span="2584-2584", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1329 [label="var ibControllerLogPath = Path.Combine(Config.Get(''ib-controller-dir''), ''Logs'')", span="2587-2587", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1330 [label="var files = Directory.GetFiles(ibControllerLogPath, ''ibc-*.txt'')", span="2588-2588", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1331 [label="var lastLogUpdateTime = DateTime.MinValue", span="2589-2589", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1333 [label=files, span="2591-2591", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1332 [label="var ibControllerLogFileName = string.Empty", span="2590-2590", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1335 [label="time > lastLogUpdateTime", span="2594-2594", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1338 [label="ibControllerLogFileName.IsNullOrEmpty()", span="2601-2601", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1340 [label="var lines = File.ReadAllLines(ibControllerLogFileName).ToList()", span="2607-2607", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1334 [label="var time = File.GetLastWriteTimeUtc(file)", span="2593-2593", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1337 [label="ibControllerLogFileName = file", span="2597-2597", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1336 [label="lastLogUpdateTime = time", span="2596-2596", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1339 [label="return false;", span="2603-2603", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1341 [label="var separatorLine = new string('-', 60)", span="2608-2608", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1342 [label="var index = lines.FindLastIndex(x => x.Contains(separatorLine))", span="2609-2609", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1343 [label="return index >= 0 && lines.Skip(index + 1).Any(line => line.Contains(''End this session and let the other session proceed''));", span="2611-2611", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1344 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", span="2584-2584", cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs"];
m21_1368 [label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", span="", file="PythonUtil.cs"];
m21_1369 [label=orders, span="", file="PythonUtil.cs"];
m21_1370 [label=manualResetEvent, span="", file="PythonUtil.cs"];
m21_1371 [label="QuantConnect.Symbol", span="", file="PythonUtil.cs"];
m21_1372 [label=currency, span="", file="PythonUtil.cs"];
m21_1373 [label=requestId, span="", file="PythonUtil.cs"];
m21_1374 [label=manualResetEvent, span="", file="PythonUtil.cs"];
m21_1375 [label=details, span="", file="PythonUtil.cs"];
m21_1376 [label=reader, span="", file="PythonUtil.cs"];
m21_1377 [label=firstAccountUpdateReceived, span="", file="PythonUtil.cs"];
m21_1378 [label=requestId, span="", file="PythonUtil.cs"];
m21_1379 [label=Contract, span="", file="PythonUtil.cs"];
m21_1380 [label=manualResetEvent, span="", file="PythonUtil.cs"];
m21_1381 [label=exchanges, span="", file="PythonUtil.cs"];
m21_1382 [label=contractDetails, span="", file="PythonUtil.cs"];
m21_1383 [label=manualResetEvent, span="", file="PythonUtil.cs"];
m21_1384 [label=invertedSymbol, span="", file="PythonUtil.cs"];
m21_1385 [label=normalSymbol, span="", file="PythonUtil.cs"];
m21_1386 [label=marketDataTicker, span="", file="PythonUtil.cs"];
m21_1387 [label=string, span="", file="PythonUtil.cs"];
m21_1388 [label=manualResetEvent, span="", file="PythonUtil.cs"];
m21_1389 [label=historicalTicker, span="", file="PythonUtil.cs"];
m21_1390 [label=data, span="", file="PythonUtil.cs"];
m21_1391 [label="QuantConnect.SecurityType", span="", file="PythonUtil.cs"];
m21_1392 [label=futuresExchanges, span="", file="PythonUtil.cs"];
m21_1393 [label=exchangeFilter, span="", file="PythonUtil.cs"];
m21_1394 [label=requestStartTime, span="", file="PythonUtil.cs"];
m21_1395 [label=requestEndTime, span="", file="PythonUtil.cs"];
m21_1396 [label=historicalTicker, span="", file="PythonUtil.cs"];
m21_1397 [label="QuantConnect.Data.HistoryRequest", span="", file="PythonUtil.cs"];
m21_1398 [label=DateTimeZone, span="", file="PythonUtil.cs"];
m21_1399 [label=historyPiece, span="", file="PythonUtil.cs"];
m21_1400 [label=dataDownloading, span="", file="PythonUtil.cs"];
m21_1401 [label=dataDownloaded, span="", file="PythonUtil.cs"];
m21_1402 [label=separatorLine, span="", file="PythonUtil.cs"];
m22_154 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="QCAlgorithmFramework.cs"];
m22_169 [label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithmFramework.cs"];
m22_138 [label="AskPrice = config.GetNormalizedPrice(csv[3].ToDecimal()/scaleFactor)", span="314-314", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_48 [label="security.Holdings.Target = target", span="161-161", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_49 [label=DebugMode, span="164-164", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_51 [label="Log($''{Time}: RISK: {string.Join('' | '', riskTargetOverrides.Select(t => t.ToString()).OrderBy(t => t))}'')", span="169-169", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", color=green, community=0];
m22_50 [label="riskTargetOverrides.Any()", span="167-167", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_52 [label="Execution.Execute(this, riskTargetOverrides.Concat(targets).DistinctBy(pt => pt.Symbol))", span="174-174", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_55 [label="BidPrice = Convert.ToDecimal(csv[1], CultureInfo.InvariantCulture)", span="185-185", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m22_56 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="QCAlgorithmFramework.cs"];
m22_53 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", span="117-117", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_54 [label="Entry QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="32-32", cluster="QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_57 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="QCAlgorithmFramework.cs"];
m22_14 [label="Error(''These models are currently unsuitable for Cash Modeled brokerages (e.g. GDAX) and may result in unexpected trades.''\r\n                    + '' To prevent possible user error we've restricted them to Margin trading. You can select margin account types with''\r\n                    + '' SetBrokerage( ... AccountType.Margin)'')", span="105-107", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m22_15 [label="base.PostInitialize()", span="110-110", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m22_16 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="91-91", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m22_17 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", span="267-267", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m22_18 [label="Entry QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="31-31", cluster="QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=red, community=0, file="QCAlgorithmFramework.cs"];
m22_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="135-135", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithmFramework.cs"];
m22_20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1724-1724", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithmFramework.cs"];
m22_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="501-501", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", color=red, community=0, file="QCAlgorithmFramework.cs"];
m22_22 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m22_23 [label="Log($''{Time}: {string.Join('' | '', data.Insights.OrderBy(i => i.Symbol.ToString()))}'')", span="100-100", cluster="lambda expression", file="QCAlgorithmFramework.cs", color=green, community=0];
m22_25 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithmFramework.cs"];
m22_26 [label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="QCAlgorithmFramework.cs"];
m22_27 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1712-1712", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithmFramework.cs"];
m22_24 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m22_28 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m22_171 [label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="57-57", cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", file="QCAlgorithmFramework.cs"];
m22_140 [label="Exchange = csv[5]", span="317-317", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_141 [label="Suspicious = csv[6] == ''1''", span="318-318", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_142 [label="BidPrice != 0", span="320-320", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_143 [label="AskPrice != 0", span="322-322", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_144 [label="Value = (BidPrice + AskPrice)/2m", span="324-324", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_145 [label="Value = BidPrice", span="328-328", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_146 [label="Value = AskPrice", span="333-333", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_147 [label=Exception, span="341-341", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_148 [label="Log.Error(err)", span="343-343", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_149 [label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="215-215", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_150 [label="Entry string.ToCsv(int)", span="329-329", cluster="string.ToCsv(int)", file="QCAlgorithmFramework.cs"];
m22_101 [label="Value = (BidPrice + AskPrice) / 2", span="252-252", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_102 [label="SecurityType.Crypto", span="256-256", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_103 [label="TickType = config.TickType", span="258-258", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_180 [label="Entry System.Convert.ToDecimal(decimal)", span="0-0", cluster="System.Convert.ToDecimal(decimal)", file="QCAlgorithmFramework.cs"];
m22_172 [label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="399-399", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_173 [label="Value = lastTrade", span="401-401", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_174 [label="BidPrice = bidPrice", span="402-402", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_175 [label="AskPrice = askPrice", span="403-403", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_176 [label="BidSize = bidSize", span="404-404", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_177 [label="AskSize = askSize", span="405-405", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_178 [label="Quantity = Convert.ToDecimal(volume)", span="406-406", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_179 [label="Exit QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="399-399", cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_60 [label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="QCAlgorithmFramework.cs"];
m22_7 [label="Exchange = ''''", span="106-106", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs"];
m22_58 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="QCAlgorithmFramework.cs"];
m22_137 [label="csv[3].Length != 0", span="312-312", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_152 [label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585", cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="QCAlgorithmFramework.cs"];
m22_29 [label="i.Symbol.ToString()", span="100-100", cluster="lambda expression", file="QCAlgorithmFramework.cs", color=green, community=0];
m22_165 [label="source += ''#'' + LeanData.GenerateZipEntryName(config.Symbol, date, config.Resolution, config.TickType)", span="385-385", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_160 [label="Entry QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="373-373", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_161 [label=isLiveMode, span="375-375", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_163 [label="var source = LeanData.GenerateZipFilePath(Globals.DataFolder, config.Symbol, date, config.Resolution, config.TickType)", span="381-381", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_164 [label="config.SecurityType == SecurityType.Option ||\r\n                config.SecurityType == SecurityType.Future", span="382-383", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_162 [label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="378-378", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_166 [label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile, FileFormat.Csv);", span="387-387", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_167 [label="Exit QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="373-373", cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_39 [label=targets, span="140-140", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_40 [label="var security = Securities[target.Symbol]", span="142-142", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_41 [label="security.Holdings.Target = target", span="143-143", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_42 [label=DebugMode, span="146-146", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_43 [label="targets.Any()", span="149-149", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_45 [label="var riskTargetOverrides = RiskManagement.ManageRisk(this).ToList()", span="155-155", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_46 [label=riskTargetOverrides, span="158-158", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_44 [label="Log($''{Time}: PORTFOLIO: {string.Join('' | '', targets.Select(t => t.ToString()).OrderBy(t => t))}'')", span="151-151", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m22_47 [label="var security = Securities[target.Symbol]", span="160-160", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m22_70 [label="SaleCondition = csv[4]", span="205-205", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_30 [label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_73 [label="Entry string.ToInt32()", span="297-297", cluster="string.ToInt32()", file="QCAlgorithmFramework.cs"];
m22_77 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="QCAlgorithmFramework.cs"];
m22_80 [label="var scaleFactor = GetScaleFactor(config.SecurityType)", span="222-222", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_83 [label="var csv = line.ToCsv(6)", span="228-228", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_74 [label="Entry System.DateTime.AddMilliseconds(double)", span="0-0", cluster="System.DateTime.AddMilliseconds(double)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m22_75 [label="Entry string.ToDecimal()", span="248-248", cluster="string.ToDecimal()", file="QCAlgorithmFramework.cs"];
m22_78 [label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="215-215", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m22_79 [label="DataType = MarketDataType.Tick", span="219-219", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_81 [label="config.SecurityType", span="224-224", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m22_82 [label="SecurityType.Equity", span="226-226", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_84 [label="Symbol = config.Symbol", span="229-229", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m22_85 [label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="230-230", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_68 [label="Quantity = csv[2].ToDecimal()", span="203-203", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_86 [label="Value = config.GetNormalizedPrice(csv[1].ToDecimal() / scaleFactor)", span="231-231", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_67 [label="TickType = TickType.Trade", span="202-202", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_69 [label="Exchange = csv[3].Trim()", span="204-204", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_88 [label="Quantity = csv[2].ToDecimal()", span="233-233", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_87 [label="TickType = TickType.Trade", span="232-232", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_71 [label="Suspicious = csv[5].ToInt32() == 1", span="206-206", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_72 [label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", span="195-195", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_31 [label="DataType = MarketDataType.Tick", span="144-144", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_98 [label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="249-249", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_99 [label="BidPrice = csv[1].ToDecimal()", span="250-250", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_100 [label="AskPrice = csv[2].ToDecimal()", span="251-251", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_61 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithmFramework.cs"];
m22_62 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="QCAlgorithmFramework.cs"];
m22_64 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="QCAlgorithmFramework.cs"];
m22_65 [label="Entry System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)", span="264-264", cluster="System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)", file="QCAlgorithmFramework.cs"];
m22_66 [label="Entry QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="32-32", cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="QCAlgorithmFramework.cs"];
m22_63 [label="Entry QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="29-29", cluster="QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=red, community=0, file="QCAlgorithmFramework.cs"];
m22_155 [label="Entry QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="355-355", cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_156 [label=isLiveMode, span="357-357", cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_158 [label="return new Tick(config, line, date);", span="363-363", cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_157 [label="return new Tick();", span="360-360", cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_159 [label="Exit QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="355-355", cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m22_151 [label="Entry string.ToInt64()", span="313-313", cluster="string.ToInt64()", file="QCAlgorithmFramework.cs"];
m22_76 [label="Entry QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", span="429-429", cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs"];
m22_97 [label="TickType = TickType.Quote", span="248-248", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_104 [label="Symbol = config.Symbol", span="259-259", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_105 [label="Exchange = config.Market", span="260-260", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_106 [label="TickType == TickType.Trade", span="262-262", cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs"];
m22_95 [label="RiskManagement.OnSecuritiesChanged(this, changes)", span="191-191", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m22_96 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="181-181", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m22_107 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="225-225", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.cs"];
m22_108 [label="Execution = execution", span="227-227", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.cs"];
m22_112 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="234-234", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="QCAlgorithmFramework.cs"];
m22_113 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", span="239-239", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_122 [label="barSize = insight.Period.ToHigherResolutionEquivalent(false).ToTimeSpan()", span="254-254", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_123 [label="exchangeHours = MarketHoursDatabase.GetExchangeHours(insight.Symbol.ID.Market, insight.Symbol, insight.Symbol.SecurityType)", span="255-255", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_124 [label="var localStart = UtcTime.ConvertFromUtc(exchangeHours.TimeZone)", span="258-258", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_125 [label="barSize = QuantConnect.Time.Max(barSize, QuantConnect.Time.OneMinute)", span="259-259", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_127 [label="insight.CloseTimeUtc = QuantConnect.Time.GetEndTimeForTradeBars(exchangeHours, localStart, barSize, barCount, false).ConvertToUtc(exchangeHours.TimeZone)", span="262-262", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_135 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="74-74", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs"];
m22_93 [label="PortfolioConstruction.OnSecuritiesChanged(this, changes)", span="189-189", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m22_120 [label="exchangeHours = security.Exchange.Hours", span="249-249", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_89 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="181-181", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m22_90 [label=DebugMode, span="183-183", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs", color=green, community=0];
m22_91 [label="Log($''{Time}: {changes}'')", span="185-185", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m22_92 [label="Alpha.OnSecuritiesChanged(this, changes)", span="188-188", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m22_94 [label="Execution.OnSecuritiesChanged(this, changes)", span="190-190", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m22_111 [label="RiskManagement = riskManagement", span="236-236", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="QCAlgorithmFramework.cs"];
m22_109 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="225-225", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.cs"];
m22_110 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="234-234", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="QCAlgorithmFramework.cs"];
m22_114 [label="insight.GeneratedTimeUtc = UtcTime", span="241-241", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_115 [label="insight.ReferenceValue = _securityValuesProvider.GetValues(insight.Symbol).Get(insight.Type)", span="242-242", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_116 [label="TimeSpan barSize", span="244-244", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_117 [label="Security security", span="245-245", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_118 [label="SecurityExchangeHours exchangeHours", span="246-246", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_119 [label="Securities.TryGetValue(insight.Symbol, out security)", span="247-247", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_121 [label="barSize = security.Resolution.ToTimeSpan()", span="250-250", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_128 [label="return insight;", span="264-264", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_129 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", span="239-239", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_130 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.ISecurityValuesProvider.GetValues(QuantConnect.Symbol)", span="31-31", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.ISecurityValuesProvider.GetValues(QuantConnect.Symbol)", file="QCAlgorithmFramework.cs"];
m22_131 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues.Get(QuantConnect.Algorithm.Framework.Alphas.InsightType)", span="89-89", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues.Get(QuantConnect.Algorithm.Framework.Alphas.InsightType)", file="QCAlgorithmFramework.cs"];
m22_133 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724", cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithmFramework.cs"];
m22_134 [label="Entry System.TimeSpan.ToHigherResolutionEquivalent(bool)", span="752-752", cluster="System.TimeSpan.ToHigherResolutionEquivalent(bool)", file="QCAlgorithmFramework.cs"];
m22_136 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="606-606", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithmFramework.cs"];
m22_139 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="618-618", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithmFramework.cs"];
m22_126 [label="var barCount = (int) (insight.Period.Ticks / barSize.Ticks)", span="260-260", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m22_132 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithmFramework.cs"];
m22_153 [label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span="", cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="QCAlgorithmFramework.cs"];
m22_59 [label="Entry Unk.OnInsightsGenerated", span="", cluster="Unk.OnInsightsGenerated", file="QCAlgorithmFramework.cs"];
m22_181 [label="Entry QuantConnect.Data.Market.Tick.IsValid()", span="412-412", cluster="QuantConnect.Data.Market.Tick.IsValid()", file="QCAlgorithmFramework.cs"];
m22_182 [label="return (TickType == TickType.Trade && LastPrice > 0.0m && Quantity > 0) ||\r\n                   (TickType == TickType.Quote && AskPrice > 0.0m && AskSize > 0) ||\r\n                   (TickType == TickType.Quote && BidPrice > 0.0m && BidSize > 0) ||\r\n                   (TickType == TickType.OpenInterest && Value > 0);", span="414-417", cluster="QuantConnect.Data.Market.Tick.IsValid()", file="QCAlgorithmFramework.cs"];
m22_183 [label="Exit QuantConnect.Data.Market.Tick.IsValid()", span="412-412", cluster="QuantConnect.Data.Market.Tick.IsValid()", file="QCAlgorithmFramework.cs"];
m22_168 [label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="44-44", cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="QCAlgorithmFramework.cs"];
m22_5 [label="TickType = TickType.Trade", span="104-104", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs"];
m22_0 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs"];
m22_1 [label="Value = 0", span="100-100", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", color=red, community=0];
m22_2 [label="Time = new DateTime()", span="101-101", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs"];
m22_3 [label="DataType = MarketDataType.Tick", span="102-102", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs"];
m22_4 [label="Symbol = Symbol.Empty", span="103-103", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs"];
m22_32 [label="Time = time", span="145-145", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_38 [label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_33 [label="Symbol = symbol", span="146-146", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_35 [label="TickType = TickType.Quote", span="148-148", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_36 [label="BidPrice = bid", span="149-149", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs", color=red, community=0];
m22_37 [label="AskPrice = ask", span="150-150", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_34 [label="Value = (bid + ask) / 2", span="147-147", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m22_6 [label="Quantity = 0", span="105-105", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs"];
m22_187 [label="return securityType == SecurityType.Equity || securityType == SecurityType.Option ? 10000m : 1;", span="431-431", cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs"];
m22_188 [label="Exit QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", span="429-429", cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs"];
m22_8 [label="SaleCondition = ''''", span="107-107", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs"];
m22_12 [label="Exit QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m22_10 [label="BidSize = 0", span="109-109", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs"];
m22_13 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()", file="QCAlgorithmFramework.cs"];
m22_9 [label="Suspicious = false", span="108-108", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs"];
m22_11 [label="AskSize = 0", span="110-110", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs"];
m22_170 [label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithmFramework.cs"];
m22_184 [label="Entry QuantConnect.Data.Market.Tick.Clone()", span="424-424", cluster="QuantConnect.Data.Market.Tick.Clone()", file="QCAlgorithmFramework.cs"];
m22_185 [label="return new Tick(this);", span="426-426", cluster="QuantConnect.Data.Market.Tick.Clone()", file="QCAlgorithmFramework.cs"];
m22_186 [label="Exit QuantConnect.Data.Market.Tick.Clone()", span="424-424", cluster="QuantConnect.Data.Market.Tick.Clone()", file="QCAlgorithmFramework.cs"];
m22_189 [label="QuantConnect.Data.Market.Tick", span="", file="QCAlgorithmFramework.cs"];
m23_6 [label="Entry PyObject.TryConvert<T>(out T)", span="1037-1037", cluster="PyObject.TryConvert<T>(out T)", file="QCAlgorithmFramework.Python.cs"];
m23_31 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel)", span="198-198", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel)", file="QCAlgorithmFramework.Python.cs"];
m23_39 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="234-234", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="QCAlgorithmFramework.Python.cs"];
m23_25 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", span="84-84", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_26 [label="IUniverseSelectionModel model", span="86-86", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_27 [label="portfolioSelection.TryConvert(out model)", span="87-87", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_29 [label="UniverseSelection = new UniverseSelectionModelPythonWrapper(portfolioSelection)", span="93-93", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_28 [label="SetPortfolioSelection(model)", span="89-89", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", color=green, community=0, file="QCAlgorithmFramework.Python.cs"];
m23_30 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", span="84-84", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_24 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.PortfolioConstructionModelPythonWrapper(PyObject)", span="34-34", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.PortfolioConstructionModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_32 [label="Entry QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", span="33-33", cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_8 [label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="34-34", cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_9 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", span="50-50", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_10 [label="IExecutionModel model", span="52-52", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_11 [label="execution.TryConvert(out model)", span="53-53", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_13 [label="Execution = new ExecutionModelPythonWrapper(execution)", span="59-59", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_12 [label="SetExecution(model)", span="55-55", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_14 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", span="50-50", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_7 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", span="207-207", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="QCAlgorithmFramework.Python.cs"];
m23_15 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="225-225", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.Python.cs"];
m23_0 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", span="33-33", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_1 [label="IAlphaModel model", span="35-35", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_2 [label="alpha.TryConvert(out model)", span="36-36", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_4 [label="Alpha = new AlphaModelPythonWrapper(alpha)", span="42-42", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_3 [label="SetAlpha(model)", span="38-38", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_5 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", span="33-33", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_23 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="216-216", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="QCAlgorithmFramework.Python.cs"];
m23_16 [label="Entry QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.ExecutionModelPythonWrapper(PyObject)", span="34-34", cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.ExecutionModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_17 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", span="67-67", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_18 [label="IPortfolioConstructionModel model", span="69-69", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_19 [label="portfolioConstruction.TryConvert(out model)", span="70-70", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_21 [label="PortfolioConstruction = new PortfolioConstructionModelPythonWrapper(portfolioConstruction)", span="76-76", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_20 [label="SetPortfolioConstruction(model)", span="72-72", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_22 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", span="67-67", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_33 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", span="101-101", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_34 [label="IRiskManagementModel model", span="103-103", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_35 [label="riskManagement.TryConvert(out model)", span="104-104", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_37 [label="RiskManagement = new RiskManagementModelPythonWrapper(riskManagement)", span="110-110", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_36 [label="SetRiskManagement(model)", span="106-106", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_38 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", span="101-101", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_40 [label="Entry QuantConnect.Algorithm.Framework.Risk.RiskManagementModelPythonWrapper.RiskManagementModelPythonWrapper(PyObject)", span="34-34", cluster="QuantConnect.Algorithm.Framework.Risk.RiskManagementModelPythonWrapper.RiskManagementModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs"];
m23_41 [label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span="", file="QCAlgorithmFramework.Python.cs"];
m24_0 [label="Entry QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", span="45-45", cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs"];
m24_8 [label="var future = AddFuture(Futures.Indices.SP500EMini)", span="59-59", cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs"];
m24_7 [label="_slow = EMA(equity.Symbol, _slowPeriod, Resolution.Daily)", span="55-55", cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs"];
m24_9 [label="future.SetFilter(TimeSpan.Zero, TimeSpan.FromDays(182))", span="60-60", cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs"];
m24_3 [label="SetCash(100000)", span="49-49", cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs"];
m24_6 [label="_fast = EMA(equity.Symbol, _fastPeriod, Resolution.Daily)", span="54-54", cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs"];
m24_10 [label="Exit QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", span="45-45", cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs"];
m24_1 [label="SetStartDate(2016, 1, 1)", span="47-47", cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs"];
m24_2 [label="SetEndDate(2016, 8, 18)", span="48-48", cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs"];
m24_4 [label="SetWarmUp(Math.Max(_fastPeriod, _slowPeriod))", span="50-50", cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs"];
m24_5 [label="var equity = AddEquity(''SPY'', Resolution.Daily)", span="53-53", cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs"];
m24_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RegressionTests.cs"];
m24_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86", cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="RegressionTests.cs"];
m24_53 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs"];
m24_20 [label="var basicTemplateFrameworkStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n                {''Total Insights Generated'', ''100''},\r\n                {''Total Insights Closed'', ''99''},\r\n                {''Total Insights Analysis Completed'', ''86''},\r\n                {''Long Insight Count'', ''100''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$151474.9016''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$24404.2897''},\r\n                {''Mean Population Estimated Insight Value'', ''$246.508''},\r\n                {''Mean Population Direction'', ''48.8372%''},\r\n                {''Mean Population Magnitude'', ''48.8372%''},\r\n                {''Rolling Averaged Population Direction'', ''68.2411%''},\r\n                {''Rolling Averaged Population Magnitude'', ''68.2411%''}\r\n            }", span="100-134", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_41 [label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.461''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.706''},\r\n                {''Beta'', ''15.77''},\r\n                {''Annual Standard Deviation'', ''0.146''},\r\n                {''Annual Variance'', ''0.021''},\r\n                {''Information Ratio'', ''6.359''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''0.06''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="596-617", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_33 [label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.288''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.105''},\r\n                {''Beta'', ''-46.73''},\r\n                {''Annual Standard Deviation'', ''0.235''},\r\n                {''Annual Variance'', ''0.055''},\r\n                {''Information Ratio'', ''-3.366''},\r\n                {''Tracking Error'', ''0.236''},\r\n                {''Treynor Ratio'', ''0.017''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="412-433", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_56 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="RegressionTests.cs"];
m24_14 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="RegressionTests.cs"];
m24_18 [label="var emptyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''0''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0%''},\r\n                {''Drawdown'', ''0%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="54-75", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="RegressionTests.cs"];
m24_57 [label="Entry lambda expression", span="929-929", cluster="lambda expression", file="RegressionTests.cs"];
m24_35 [label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'',''2''},\r\n                {''Average Win'',''0%''},\r\n                {''Average Loss'',''-0.02%''},\r\n                {''Compounding Annual Return'',''-1.242%''},\r\n                {''Drawdown'',''0.000%''},\r\n                {''Expectancy'',''-1''},\r\n                {''Net Profit'',''-0.017%''},\r\n                {''Sharpe Ratio'',''-7.099''},\r\n                {''Loss Rate'',''100%''},\r\n                {''Win Rate'',''0%''},\r\n                {''Profit-Loss Ratio'',''0''},\r\n                {''Alpha'',''-0.01''},\r\n                {''Beta'',''0''},\r\n                {''Annual Standard Deviation'',''0.001''},\r\n                {''Annual Variance'',''0''},\r\n                {''Information Ratio'',''7.126''},\r\n                {''Tracking Error'',''6.064''},\r\n                {''Treynor Ratio'',''174.306''},\r\n                {''Total Fees'',''$0.50''},\r\n            }", span="458-479", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_36 [label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="481-502", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_37 [label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="504-525", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_58 [label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="929-929", cluster="lambda expression", file="RegressionTests.cs"];
m24_59 [label="Exit lambda expression", span="929-929", cluster="lambda expression", file="RegressionTests.cs"];
m24_21 [label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="136-157", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_22 [label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''9.733%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.513''},\r\n                {''Net Profit'', ''0.119%''},\r\n                {''Sharpe Ratio'', ''1.954''},\r\n                {''Loss Rate'', ''25%''},\r\n                {''Win Rate'', ''75%''},\r\n                {''Profit-Loss Ratio'', ''1.02''},\r\n                {''Alpha'', ''-0.107''},\r\n                {''Beta'', ''15.186''},\r\n                {''Annual Standard Deviation'', ''0.031''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''1.6''},\r\n                {''Tracking Error'', ''0.031''},\r\n                {''Treynor Ratio'', ''0.004''},\r\n                {''Total Fees'', ''$34.00''},\r\n            }", span="159-180", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_23 [label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.358''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.065''},\r\n                {''Beta'', ''-0.998''},\r\n                {''Annual Standard Deviation'', ''0.062''},\r\n                {''Annual Variance'', ''0.004''},\r\n                {''Information Ratio'', ''-1.679''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''0.085''},\r\n                {''Total Fees'', ''$21.00''},\r\n            }", span="182-203", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_27 [label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.004''},\r\n                {''Beta'', ''82.594''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''6.4''},\r\n                {''Tracking Error'', ''0.141''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="274-295", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_24 [label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.019''},\r\n                {''Beta'', ''-0.339''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-38.93''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.067''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="205-226", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_25 [label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.973''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.68''},\r\n                {''Beta'', ''-29.799''},\r\n                {''Annual Standard Deviation'', ''0.318''},\r\n                {''Annual Variance'', ''0.101''},\r\n                {''Information Ratio'', ''-4.034''},\r\n                {''Tracking Error'', ''0.318''},\r\n                {''Treynor Ratio'', ''0.042''},\r\n                {''Total Fees'', ''$5.00''},\r\n            }", span="228-249", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_26 [label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.365%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.2''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''73.725''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.183''},\r\n                {''Tracking Error'', ''0.84''},\r\n                {''Treynor Ratio'', ''0.014''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="251-272", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_28 [label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''90''},\r\n                {''Average Win'', ''0.78%''},\r\n                {''Average Loss'', ''-0.40%''},\r\n                {''Compounding Annual Return'', ''18.626%''},\r\n                {''Drawdown'', ''4.700%''},\r\n                {''Expectancy'', ''1.071''},\r\n                {''Net Profit'', ''18.626%''},\r\n                {''Sharpe Ratio'', ''1.997''},\r\n                {''Loss Rate'', ''30%''},\r\n                {''Win Rate'', ''70%''},\r\n                {''Profit-Loss Ratio'', ''1.97''},\r\n                {''Alpha'', ''0.112''},\r\n                {''Beta'', ''2.998''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''1.768''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.057''},\r\n                {''Total Fees'', ''$240.17''},\r\n            }", span="297-318", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_29 [label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''66''},\r\n                {''Average Win'', ''1.06%''},\r\n                {''Average Loss'', ''-0.50%''},\r\n                {''Compounding Annual Return'', ''18.581%''},\r\n                {''Drawdown'', ''7.100%''},\r\n                {''Expectancy'', ''0.815''},\r\n                {''Net Profit'', ''18.581%''},\r\n                {''Sharpe Ratio'', ''1.44''},\r\n                {''Loss Rate'', ''42%''},\r\n                {''Win Rate'', ''58%''},\r\n                {''Profit-Loss Ratio'', ''2.13''},\r\n                {''Alpha'', ''0.309''},\r\n                {''Beta'', ''-10.101''},\r\n                {''Annual Standard Deviation'', ''0.1''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''1.277''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.014''},\r\n                {''Total Fees'', ''$185.37''},\r\n            }", span="320-341", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_16 [label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", span="44-44", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="RegressionTests.cs"];
m24_54 [label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="939-939", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m24_62 [label="Algorithm = algorithm", span="941-941", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m24_63 [label="Statistics = statistics", span="942-942", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m24_64 [label="Language = language", span="943-943", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m24_65 [label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="939-939", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m24_60 [label="Entry TestCaseData.cstr", span="", cluster="TestCaseData.cstr", file="RegressionTests.cs"];
m24_17 [label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_42 [label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="619-640", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_43 [label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="642-663", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_44 [label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.02%''},\r\n                {''Compounding Annual Return'', ''254.082%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.018''},\r\n                {''Net Profit'', ''1.395%''},\r\n                {''Sharpe Ratio'', ''1.176''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.47''},\r\n                {''Alpha'', ''-1.18''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.813''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.244''},\r\n                {''Tracking Error'', ''0.178''},\r\n                {''Treynor Ratio'', ''0.765''},\r\n                {''Total Fees'', ''$2045.20''}\r\n            }", span="665-686", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_19 [label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="77-98", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_32 [label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.267''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''0.032''},\r\n                {''Annual Standard Deviation'', ''0.027''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-1.014''},\r\n                {''Tracking Error'', ''0.027''},\r\n                {''Treynor Ratio'', ''-0.222''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="389-410", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_46 [label="var basicTemplateCryptoAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''25''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.46%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''5.400%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-5.603%''},\r\n                {''Sharpe Ratio'', ''-19.82''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-11.165''},\r\n                {''Beta'', ''585.081''},\r\n                {''Annual Standard Deviation'', ''0.36''},\r\n                {''Annual Variance'', ''0.129''},\r\n                {''Information Ratio'', ''-19.873''},\r\n                {''Tracking Error'', ''0.359''},\r\n                {''Treynor Ratio'', ''-0.012''},\r\n                {''Total Fees'', ''$6076.49''}\r\n            }", span="711-732", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_30 [label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''78.067''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''10.897''},\r\n                {''Tracking Error'', ''0.078''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="343-364", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_38 [label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="527-548", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_39 [label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.239''},\r\n                {''Beta'', ''12.675''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-0.723''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''-0.001''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="550-571", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_40 [label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.358''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.93''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="573-594", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_34 [label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.299''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''0.111''},\r\n                {''Beta'', ''-3.721''},\r\n                {''Annual Standard Deviation'', ''0.124''},\r\n                {''Annual Variance'', ''0.015''},\r\n                {''Information Ratio'', ''0.137''},\r\n                {''Tracking Error'', ''0.124''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="435-456", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_13 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs"];
m24_61 [label="Entry Unk.SetName", span="", cluster="Unk.SetName", file="RegressionTests.cs"];
m24_51 [label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataSameResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataHigherResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateIntrinioEconomicData'', basicTemplateIntrinioEconomicData, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DuplicateSecurityWithBenchmarkRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''VolumeWeightedAveragePriceExecutionModelRegressionAlgorithm'', volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''StandardDeviationExecutionModelRegressionAlgorithm'', standardDeviationExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomIndicatorAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="852-929", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="RegressionTests.cs"];
m24_31 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="RegressionTests.cs"];
m24_45 [label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="153-153", cluster="QuantConnect.Orders.OrderEvent.ToString()", file="RegressionTests.cs"];
m24_47 [label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm", span="", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_48 [label="var basicTemplateIntrinioEconomicData = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''89''},\r\n                {''Average Win'', ''0.09%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''5.704%''},\r\n                {''Drawdown'', ''4.800%''},\r\n                {''Expectancy'', ''1.469''},\r\n                {''Net Profit'', ''24.865%''},\r\n                {''Sharpe Ratio'', ''1.143''},\r\n                {''Loss Rate'', ''70%''},\r\n                {''Win Rate'', ''30%''},\r\n                {''Profit-Loss Ratio'', ''7.23''},\r\n                {''Alpha'', ''0.065''},\r\n                {''Beta'', ''-0.522''},\r\n                {''Annual Standard Deviation'', ''0.048''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''0.74''},\r\n                {''Tracking Error'', ''0.048''},\r\n                {''Treynor Ratio'', ''-0.105''},\r\n                {''Total Fees'', ''$100.58''}\r\n            }", span="757-778", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_49 [label="var volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''61''},\r\n                {''Average Win'', ''0.10%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''585.503%''},\r\n                {''Drawdown'', ''0.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.492%''},\r\n                {''Sharpe Ratio'', ''9.136''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''113.313''},\r\n                {''Annual Standard Deviation'', ''0.137''},\r\n                {''Annual Variance'', ''0.019''},\r\n                {''Information Ratio'', ''9.063''},\r\n                {''Tracking Error'', ''0.137''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$96.79''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$54250.3481''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$8740.3339''},\r\n                {''Mean Population Estimated Insight Value'', ''$2913.4446''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="780-814", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_50 [label="var standardDeviationExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''63''},\r\n                {''Average Win'', ''0.06%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''793.499%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.840%''},\r\n                {''Sharpe Ratio'', ''10.781''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''128.815''},\r\n                {''Annual Standard Deviation'', ''0.132''},\r\n                {''Annual Variance'', ''0.017''},\r\n                {''Information Ratio'', ''10.71''},\r\n                {''Tracking Error'', ''0.132''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$76.61''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$54250.3481''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$8740.3339''},\r\n                {''Mean Population Estimated Insight Value'', ''$2913.4446''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="816-850", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_52 [label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m24_66 [label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span="", file="RegressionTests.cs"];
m25_56 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RsiAlphaModel.cs"];
m25_21 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RsiAlphaModel.cs"];
m25_0 [label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", span="41-41", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", file="RsiAlphaModel.cs"];
m25_1 [label="_period = period", span="46-46", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", file="RsiAlphaModel.cs"];
m25_2 [label="_resolution = resolution", span="47-47", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", file="RsiAlphaModel.cs"];
m25_3 [label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", span="41-41", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", file="RsiAlphaModel.cs"];
m25_54 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RsiAlphaModel.cs"];
m25_61 [label="Entry Unk.TryGetValue", span="", cluster="Unk.TryGetValue", file="RsiAlphaModel.cs"];
m25_66 [label="Entry lambda expression", span="127-127", cluster="lambda expression", file="RsiAlphaModel.cs"];
m25_63 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="RsiAlphaModel.cs"];
m25_64 [label="x.Symbol", span="100-100", cluster="lambda expression", file="RsiAlphaModel.cs"];
m25_65 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="RsiAlphaModel.cs"];
m25_67 [label="x.Symbol", span="127-127", cluster="lambda expression", color=red, community=0, file="RsiAlphaModel.cs"];
m25_68 [label="Exit lambda expression", span="127-127", cluster="lambda expression", file="RsiAlphaModel.cs"];
m25_60 [label="Entry Unk.History", span="", cluster="Unk.History", file="RsiAlphaModel.cs"];
m25_58 [label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", span="190-190", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="RsiAlphaModel.cs"];
m25_81 [label="Symbol = symbol", span="192-192", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="RsiAlphaModel.cs"];
m25_82 [label="RSI = rsi", span="193-193", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="RsiAlphaModel.cs"];
m25_83 [label="State = State.Middle", span="194-194", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="RsiAlphaModel.cs"];
m25_84 [label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", span="190-190", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="RsiAlphaModel.cs"];
m25_25 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="104-104", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="RsiAlphaModel.cs"];
m25_57 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="979-979", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="RsiAlphaModel.cs"];
m25_53 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="RsiAlphaModel.cs"];
m25_52 [label="Entry System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", span="82-82", cluster="System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", file="RsiAlphaModel.cs"];
m25_55 [label="Entry System.Collections.Generic.HashSet<T>.Clear()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Clear()", file="RsiAlphaModel.cs"];
m25_4 [label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="57-57", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_5 [label="var insights = new List<Insight>()", span="59-59", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_6 [label=_symbolDataBySymbol, span="60-60", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_15 [label="insights.Add(new Insight(symbol, InsightType.Price, InsightDirection.Up, insightPeriod))", span="74-74", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_17 [label="insights.Add(new Insight(symbol, InsightType.Price, InsightDirection.Down, insightPeriod))", span="78-78", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_19 [label="return insights;", span="86-86", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_7 [label="var symbol = kvp.Key", span="62-62", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_8 [label="var rsi = kvp.Value.RSI", span="63-63", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_9 [label="var previousState = kvp.Value.State", span="64-64", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_10 [label="var state = GetState(rsi, previousState)", span="65-65", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_11 [label="state != previousState && rsi.IsReady", span="67-67", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_18 [label="kvp.Value.State = state", span="83-83", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_13 [label=state, span="71-71", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_12 [label="var insightPeriod = _resolution.ToTimeSpan().Multiply(_period)", span="69-69", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_14 [label="State.TrippedLow", span="73-73", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_16 [label="State.TrippedHigh", span="77-77", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_20 [label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="57-57", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs"];
m25_26 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RsiAlphaModel.cs"];
m25_24 [label="Entry System.TimeSpan.Multiply(double)", span="230-230", cluster="System.TimeSpan.Multiply(double)", file="RsiAlphaModel.cs"];
m25_27 [label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="95-95", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs"];
m25_28 [label="changes.RemovedSecurities.Count > 0", span="98-98", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs"];
m25_29 [label="var removed = changes.RemovedSecurities.ToHashSet(x => x.Symbol)", span="100-100", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs"];
m25_30 [label="algorithm.SubscriptionManager.Subscriptions", span="101-101", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs"];
m25_34 [label="changes.AddedSecurities.Count > 0", span="112-112", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_36 [label="changes.AddedSecurities", span="115-115", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_38 [label="var rsi = algorithm.RSI(added.Symbol, _period, MovingAverageType.Wilders, _resolution)", span="119-119", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_42 [label="var history = algorithm.History(newSymbolData.Select(x => x.Symbol), _period, _resolution)", span="127-127", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_31 [label="removed.Contains(subscription.Symbol)", span="103-103", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs"];
m25_32 [label="_symbolDataBySymbol.Remove(subscription.Symbol)", span="105-105", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs"];
m25_33 [label="subscription.Consolidators.Clear()", span="106-106", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs"];
m25_35 [label="var newSymbolData = new List<SymbolData>()", span="114-114", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_41 [label="newSymbolData.Add(symbolData)", span="122-122", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_37 [label="!_symbolDataBySymbol.ContainsKey(added.Symbol)", span="117-117", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_39 [label="var symbolData = new SymbolData(added.Symbol, rsi)", span="120-120", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_40 [label="_symbolDataBySymbol[added.Symbol] = symbolData", span="121-121", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_43 [label=history, span="128-128", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=1, file="RsiAlphaModel.cs"];
m25_44 [label="slice.Keys", span="130-130", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_45 [label="var value = slice[symbol]", span="132-132", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_49 [label="_symbolDataBySymbol.TryGetValue(symbol, out symbolData)", span="137-137", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_46 [label="var list = value as IList", span="133-133", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_47 [label="var data = (BaseData) (list != null ? list[list.Count - 1] : value)", span="134-134", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="RsiAlphaModel.cs"];
m25_48 [label="SymbolData symbolData", span="136-136", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs"];
m25_50 [label="symbolData.RSI.Update(data.EndTime, data.Value)", span="139-139", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs"];
m25_51 [label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="95-95", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs"];
m25_22 [label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", span="150-150", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_69 [label="rsi > 70m", span="152-152", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_71 [label="rsi < 30m", span="157-157", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_73 [label="previous == State.TrippedLow", span="162-162", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_74 [label="rsi > 35m", span="164-164", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_76 [label="previous == State.TrippedHigh", span="170-170", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_77 [label="rsi < 65m", span="172-172", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_79 [label="return previous;", span="178-178", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_70 [label="return State.TrippedHigh;", span="154-154", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_72 [label="return State.TrippedLow;", span="159-159", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_75 [label="return State.Middle;", span="166-166", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_78 [label="return State.Middle;", span="174-174", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_80 [label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", span="150-150", cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs"];
m25_23 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724", cluster="QuantConnect.Resolution.ToTimeSpan()", file="RsiAlphaModel.cs"];
m25_62 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="RsiAlphaModel.cs"];
m25_85 [label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", span="", file="RsiAlphaModel.cs"];
m25_86 [label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", span="", file="RsiAlphaModel.cs"];
m26_447 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="884-884", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_448 [label="Security msft", span="886-886", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_449 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="887-887", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_450 [label="Update(msft, 25)", span="889-889", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_451 [label="algo.Portfolio.SetCash(150000)", span="891-891", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_452 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="892-892", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_453 [label="Update(msft, 50m)", span="895-895", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_454 [label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="900-900", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_455 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="903-903", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_456 [label="Assert.AreEqual(2500, actual)", span="906-906", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_457 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="884-884", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_437 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="863-863", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs"];
m26_438 [label="Security msft", span="865-865", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs"];
m26_439 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="866-866", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs"];
m26_440 [label="Update(msft, 25)", span="868-868", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs"];
m26_441 [label="algo.Portfolio.SetCash(150000)", span="870-870", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs"];
m26_442 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="871-871", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs"];
m26_443 [label="Update(msft, 50m)", span="874-874", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs"];
m26_444 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="877-877", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs"];
m26_445 [label="Assert.AreEqual(2500, actual)", span="880-880", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs"];
m26_446 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="863-863", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs"];
m26_346 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="658-658", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_347 [label="Security msft", span="660-660", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_348 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="661-661", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_349 [label="Update(msft, 25)", span="663-663", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_350 [label="algo.Portfolio.SetCash(50000)", span="666-666", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_351 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="667-667", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_352 [label="Update(msft, 50)", span="670-670", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_353 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="674-674", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_354 [label="Assert.AreEqual(-500, actual)", span="677-677", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_355 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="658-658", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_426 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="837-837", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_427 [label="Security msft", span="839-839", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_428 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="840-840", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_429 [label="Update(msft, 25)", span="842-842", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_430 [label="algo.Portfolio.SetCash(150000)", span="844-844", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_431 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="845-845", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_432 [label="Update(msft, 50)", span="848-848", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_433 [label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="853-853", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_434 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="856-856", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_435 [label="Assert.AreEqual(1250, actual)", span="859-859", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_436 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="837-837", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_479 [label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SliceExtensions.cs"];
m26_584 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="SliceExtensions.cs"];
m26_237 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="464-464", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs"];
m26_238 [label="Security msft", span="466-466", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs"];
m26_239 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="467-467", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs"];
m26_240 [label="Update(msft, 25)", span="469-469", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs"];
m26_241 [label="algo.Portfolio.SetCash(150000)", span="471-471", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs"];
m26_242 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="472-472", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs"];
m26_243 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="474-474", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs"];
m26_244 [label="Assert.AreEqual(4000, actual)", span="475-475", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs"];
m26_245 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="464-464", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs"];
m26_553 [label="Entry Mock<IOrderProcessor>.cstr", span="", cluster="Mock<IOrderProcessor>.cstr", file="SliceExtensions.cs"];
m26_147 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="292-292", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_148 [label="Security msft", span="294-294", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_149 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="295-295", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_150 [label="Update(msft, 25)", span="297-297", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_151 [label="algo.Portfolio.SetCash(50000)", span="299-299", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_152 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="300-300", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_153 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="303-303", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_154 [label="Assert.AreEqual(-3600, actual)", span="304-304", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_155 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="292-292", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_563 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="SliceExtensions.cs"];
m26_591 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="848-848", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="SliceExtensions.cs"];
m26_559 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="SliceExtensions.cs"];
m26_596 [label="Entry Unk.Process", span="", cluster="Unk.Process", file="SliceExtensions.cs"];
m26_416 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="816-816", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_417 [label="Security msft", span="818-818", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_418 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="819-819", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_419 [label="Update(msft, 25)", span="821-821", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_420 [label="algo.Portfolio.SetCash(50000)", span="823-823", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_421 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="824-824", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_422 [label="Update(msft, 50)", span="827-827", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_423 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="830-830", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_424 [label="Assert.AreEqual(-3500, actual)", span="833-833", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_425 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="816-816", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_583 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="SliceExtensions.cs"];
m26_356 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="681-681", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_357 [label="Security msft", span="683-683", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_358 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="684-684", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_359 [label="Update(msft, 25)", span="686-686", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_360 [label="algo.Portfolio.SetCash(50000)", span="689-689", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_361 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="690-690", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_362 [label="Update(msft, 50)", span="693-693", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_363 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="697-697", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_364 [label="Assert.AreEqual(-499, actual)", span="700-700", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_365 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="681-681", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_102 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="215-215", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs"];
m26_103 [label="Security msft", span="217-217", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs"];
m26_104 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="218-218", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs"];
m26_105 [label="Update(msft, 25)", span="220-220", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs"];
m26_106 [label="algo.Portfolio.SetCash(50000)", span="222-222", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs"];
m26_107 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="223-223", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs"];
m26_108 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="225-225", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs"];
m26_109 [label="Assert.AreEqual(-2000, actual)", span="226-226", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs"];
m26_110 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="215-215", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs"];
m26_219 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="422-422", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_220 [label="Security msft", span="424-424", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_221 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="425-425", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_222 [label="Update(msft, 25)", span="427-427", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_223 [label="algo.Portfolio.SetCash(150000)", span="429-429", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_224 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="430-430", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_225 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="438-438", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_226 [label="Assert.AreEqual(-999, actual)", span="439-439", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_227 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="422-422", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SliceExtensions.cs"];
m26_406 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="793-793", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_407 [label="Security msft", span="795-795", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_408 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="796-796", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_409 [label="Update(msft, 25)", span="798-798", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_410 [label="algo.Portfolio.SetCash(25000)", span="801-801", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_411 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="802-802", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_412 [label="Update(msft, 50)", span="805-805", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_413 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="809-809", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_414 [label="Assert.AreEqual(-1250, actual)", span="812-812", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_415 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="793-793", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_396 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="771-771", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_397 [label="Security msft", span="773-773", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_398 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="774-774", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_399 [label="Update(msft, 25)", span="776-776", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_400 [label="algo.Portfolio.SetCash(50000)", span="778-778", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_401 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="779-779", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_402 [label="Update(msft, 50)", span="782-782", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_403 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="786-786", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_404 [label="Assert.AreEqual(50, actual)", span="789-789", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_405 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="771-771", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_481 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SliceExtensions.cs"];
m26_301 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="573-573", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_302 [label="Security msft", span="575-575", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_303 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="576-576", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_304 [label="Update(msft, 25)", span="578-578", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_305 [label="algo.Portfolio.SetCash(50000)", span="580-580", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_306 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="581-581", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_307 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="584-584", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_308 [label="Assert.AreEqual(-5999, actual)", span="585-585", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_309 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="573-573", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_605 [label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654", cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SliceExtensions.cs"];
m26_55 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SliceExtensions.cs"];
m26_589 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="SliceExtensions.cs"];
m26_246 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="479-479", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_247 [label="Security msft", span="481-481", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_248 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="482-482", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_249 [label="Update(msft, 25)", span="484-484", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_250 [label="algo.Portfolio.SetCash(150000)", span="486-486", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_251 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="487-487", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_252 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="489-489", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_253 [label="Assert.AreEqual(3999, actual)", span="490-490", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_254 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="479-479", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_8 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", span="1186-1186", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", file="SliceExtensions.cs"];
m26_615 [label="security.SetMarketPrice(new TradeBar\r\n            {\r\n                Time = DateTime.Now,\r\n                Symbol = security.Symbol,\r\n                Open = close,\r\n                High = close,\r\n                Low = close,\r\n                Close = close\r\n            })", span="1188-1196", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", file="SliceExtensions.cs"];
m26_616 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", span="1186-1186", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", file="SliceExtensions.cs"];
m26_576 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SliceExtensions.cs"];
m26_32 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="103-103", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_33 [label="Security msft", span="105-105", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_34 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="106-106", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_35 [label="Update(msft, 25)", span="108-108", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_36 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="109-109", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_37 [label="Assert.AreEqual(-1999, actual)", span="110-110", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_38 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="103-103", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_556 [label="Entry Orders.OrderTicket.cstr", span="", cluster="Orders.OrderTicket.cstr", file="SliceExtensions.cs"];
m26_292 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="557-557", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_293 [label="Security msft", span="559-559", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_294 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="560-560", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_295 [label="Update(msft, 25)", span="562-562", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_296 [label="algo.Portfolio.SetCash(50000)", span="564-564", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_297 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="565-565", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_298 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="568-568", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_299 [label="Assert.AreEqual(-6000, actual)", span="569-569", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_300 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="557-557", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_588 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="SliceExtensions.cs"];
m26_577 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="SliceExtensions.cs"];
m26_319 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="605-605", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_320 [label="Security msft", span="607-607", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_321 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="608-608", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_322 [label="Update(msft, 25)", span="610-610", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_323 [label="algo.Portfolio.SetCash(50000)", span="612-612", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_324 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="613-613", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_325 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="616-616", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_326 [label="Assert.AreEqual(-10000, actual)", span="617-617", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_327 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="605-605", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_210 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="401-401", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs"];
m26_211 [label="Security msft", span="403-403", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs"];
m26_212 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="404-404", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs"];
m26_213 [label="Update(msft, 25)", span="406-406", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs"];
m26_214 [label="algo.Portfolio.SetCash(150000)", span="408-408", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs"];
m26_215 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="409-409", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs"];
m26_216 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="417-417", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs"];
m26_217 [label="Assert.AreEqual(-1000, actual)", span="418-418", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs"];
m26_218 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="401-401", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs"];
m26_310 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="589-589", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_311 [label="Security msft", span="591-591", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_312 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="592-592", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_313 [label="Update(msft, 25)", span="594-594", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_314 [label="algo.Portfolio.SetCash(50000)", span="596-596", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_315 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="597-597", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_316 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="600-600", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_317 [label="Assert.AreEqual(-5600, actual)", span="601-601", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_318 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="589-589", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_575 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="SliceExtensions.cs"];
m26_592 [label="Entry lambda expression", span="1109-1109", cluster="lambda expression", file="SliceExtensions.cs"];
m26_593 [label="m.Process(It.IsAny<Orders.OrderRequest>())", span="1109-1109", cluster="lambda expression", file="SliceExtensions.cs"];
m26_594 [label="Exit lambda expression", span="1109-1109", cluster="lambda expression", file="SliceExtensions.cs"];
m26_590 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SliceExtensions.cs"];
m26_468 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="944-944", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs"];
m26_469 [label="var algo = new QCAlgorithm()", span="946-946", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs"];
m26_470 [label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="947-947", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs"];
m26_471 [label="algo.SetCash(100000)", span="948-948", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs"];
m26_472 [label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="949-949", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs"];
m26_473 [label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="950-950", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs"];
m26_474 [label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="951-951", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs"];
m26_476 [label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, 1m)", span="955-955", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs"];
m26_475 [label="Update(eurusd, 26)", span="953-953", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs"];
m26_477 [label="Assert.AreEqual(3000m, actual)", span="956-956", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs"];
m26_478 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="944-944", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs"];
m26_120 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="245-245", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_121 [label="Security msft", span="247-247", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_122 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="248-248", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_123 [label="Update(msft, 25)", span="250-250", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_124 [label="algo.Portfolio.SetCash(50000)", span="252-252", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_125 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="253-253", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_126 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="255-255", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_127 [label="Assert.AreEqual(-2000, actual)", span="256-256", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_128 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="245-245", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_93 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="200-200", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_94 [label="Security msft", span="202-202", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_95 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="203-203", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_96 [label="Update(msft, 25)", span="205-205", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_97 [label="algo.Portfolio.SetCash(25000)", span="207-207", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_98 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="208-208", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_99 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="210-210", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_100 [label="Assert.AreEqual(-600, actual)", span="211-211", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_101 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="200-200", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_580 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="SliceExtensions.cs"];
m26_138 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="276-276", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_139 [label="Security msft", span="278-278", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_140 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="279-279", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_141 [label="Update(msft, 25)", span="281-281", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_142 [label="algo.Portfolio.SetCash(50000)", span="283-283", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_143 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="284-284", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_144 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="287-287", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_145 [label="Assert.AreEqual(-3999, actual)", span="288-288", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_146 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="276-276", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_581 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="SliceExtensions.cs"];
m26_618 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SliceExtensions.cs"];
m26_585 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SliceExtensions.cs"];
m26_66 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="155-155", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_67 [label="Security msft", span="157-157", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_68 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="158-158", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_69 [label="Update(msft, 25)", span="160-160", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_70 [label="algo.Portfolio.SetCash(50000)", span="162-162", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_71 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="163-163", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_72 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="165-165", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_73 [label="Assert.AreEqual(600, actual)", span="166-166", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_74 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="155-155", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_495 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="977-977", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs"];
m26_496 [label="var algo = new QCAlgorithm()", span="979-979", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs"];
m26_497 [label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="980-980", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs"];
m26_498 [label="algo.SetCash(10000)", span="981-981", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs"];
m26_499 [label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="982-982", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs"];
m26_500 [label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="983-983", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs"];
m26_501 [label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="984-984", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs"];
m26_503 [label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, 1m)", span="988-988", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs"];
m26_502 [label="Update(eurusd, 25)", span="986-986", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs"];
m26_504 [label="Assert.AreEqual(0m, actual)", span="989-989", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs"];
m26_505 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="977-977", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs"];
m26_129 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="260-260", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs"];
m26_130 [label="Security msft", span="262-262", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs"];
m26_131 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="263-263", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs"];
m26_132 [label="Update(msft, 25)", span="265-265", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs"];
m26_133 [label="algo.Portfolio.SetCash(50000)", span="267-267", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs"];
m26_134 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="268-268", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs"];
m26_135 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="271-271", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs"];
m26_136 [label="Assert.AreEqual(-4000, actual)", span="272-272", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs"];
m26_137 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="260-260", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs"];
m26_458 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="916-916", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs"];
m26_459 [label="Security msft", span="918-918", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs"];
m26_460 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="919-919", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs"];
m26_461 [label="Update(msft, 25)", span="921-921", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs"];
m26_462 [label="algo.Portfolio.SetCash(150000)", span="923-923", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs"];
m26_463 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="924-924", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs"];
m26_464 [label="Update(msft, 12.5m)", span="926-926", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs"];
m26_465 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="935-935", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs"];
m26_466 [label="Assert.AreEqual(-3000, actual)", span="936-936", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs"];
m26_467 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="916-916", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs"];
m26_506 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", span="1098-1098", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_507 [label="Security msft", span="1100-1100", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_508 [label="var algo = GetAlgorithm(out msft, 1, 0)", span="1101-1101", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_509 [label="Update(msft, 25)", span="1103-1103", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_510 [label="algo.Portfolio.SetCash(150000)", span="1105-1105", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_514 [label="algo.Transactions.SetOrderProcessor(mock.Object)", span="1110-1110", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_515 [label="algo.Buy(Symbols.MSFT, 1)", span="1112-1112", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_516 [label="algo.Buy(Symbols.MSFT, 1.0)", span="1113-1113", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_517 [label="algo.Buy(Symbols.MSFT, 1.0m)", span="1114-1114", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_518 [label="algo.Buy(Symbols.MSFT, 1.0f)", span="1115-1115", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_519 [label="algo.Sell(Symbols.MSFT, 1)", span="1117-1117", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_520 [label="algo.Sell(Symbols.MSFT, 1.0)", span="1118-1118", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_521 [label="algo.Sell(Symbols.MSFT, 1.0m)", span="1119-1119", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_522 [label="algo.Sell(Symbols.MSFT, 1.0f)", span="1120-1120", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_523 [label="algo.Order(Symbols.MSFT, 1)", span="1122-1122", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_524 [label="algo.Order(Symbols.MSFT, 1.0)", span="1123-1123", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_525 [label="algo.Order(Symbols.MSFT, 1.0m)", span="1124-1124", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_526 [label="algo.Order(Symbols.MSFT, 1.0f)", span="1125-1125", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_527 [label="algo.MarketOrder(Symbols.MSFT, 1)", span="1127-1127", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_528 [label="algo.MarketOrder(Symbols.MSFT, 1.0)", span="1128-1128", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_529 [label="algo.MarketOrder(Symbols.MSFT, 1.0m)", span="1129-1129", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_530 [label="algo.MarketOrder(Symbols.MSFT, 1.0f)", span="1130-1130", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_531 [label="algo.MarketOnOpenOrder(Symbols.MSFT, 1)", span="1132-1132", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_532 [label="algo.MarketOnOpenOrder(Symbols.MSFT, 1.0)", span="1133-1133", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_533 [label="algo.MarketOnOpenOrder(Symbols.MSFT, 1.0m)", span="1134-1134", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_534 [label="algo.MarketOnCloseOrder(Symbols.MSFT, 1)", span="1136-1136", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_535 [label="algo.MarketOnCloseOrder(Symbols.MSFT, 1.0)", span="1137-1137", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_536 [label="algo.MarketOnCloseOrder(Symbols.MSFT, 1.0m)", span="1138-1138", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_537 [label="algo.LimitOrder(Symbols.MSFT, 1, 1)", span="1140-1140", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_538 [label="algo.LimitOrder(Symbols.MSFT, 1.0, 1)", span="1141-1141", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_539 [label="algo.LimitOrder(Symbols.MSFT, 1.0m, 1)", span="1142-1142", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_540 [label="algo.StopMarketOrder(Symbols.MSFT, 1, 1)", span="1144-1144", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_541 [label="algo.StopMarketOrder(Symbols.MSFT, 1.0, 1)", span="1145-1145", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_542 [label="algo.StopMarketOrder(Symbols.MSFT, 1.0m, 1)", span="1146-1146", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_543 [label="algo.StopLimitOrder(Symbols.MSFT, 1, 1, 2)", span="1148-1148", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_544 [label="algo.StopLimitOrder(Symbols.MSFT, 1.0, 1, 2)", span="1149-1149", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_545 [label="algo.StopLimitOrder(Symbols.MSFT, 1.0m, 1, 2)", span="1150-1150", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_546 [label="algo.SetHoldings(Symbols.MSFT, 1)", span="1152-1152", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_547 [label="algo.SetHoldings(Symbols.MSFT, 1.0)", span="1153-1153", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_548 [label="algo.SetHoldings(Symbols.MSFT, 1.0m)", span="1154-1154", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_549 [label="algo.SetHoldings(Symbols.MSFT, 1.0f)", span="1155-1155", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_551 [label="Assert.AreEqual(expected, algo.Transactions.LastOrderId)", span="1158-1158", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_511 [label="var mock = new Mock<IOrderProcessor>()", span="1107-1107", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_512 [label="var request = new Mock<Orders.SubmitOrderRequest>(null, null, null, null, null, null, null, null)", span="1108-1108", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_513 [label="mock.Setup(m => m.Process(It.IsAny<Orders.OrderRequest>())).Returns(new Orders.OrderTicket(null, request.Object))", span="1109-1109", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_550 [label="int expected = 32", span="1157-1157", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_552 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", span="1098-1098", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs"];
m26_18 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", span="80-80", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_19 [label="Security msft", span="82-82", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_20 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="83-83", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_21 [label="Update(msft, 25)", span="85-85", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_22 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="86-86", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_23 [label="Assert.AreEqual(1600, actual)", span="88-88", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_24 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", span="80-80", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_568 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="SliceExtensions.cs"];
m26_567 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="SliceExtensions.cs"];
m26_574 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="SliceExtensions.cs"];
m26_614 [label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="SliceExtensions.cs"];
m26_558 [label="Entry Unk.SetOrderProcessor", span="", cluster="Unk.SetOrderProcessor", file="SliceExtensions.cs"];
m26_255 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="494-494", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_256 [label="Security msft", span="496-496", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_257 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="497-497", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_258 [label="Update(msft, 25)", span="499-499", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_259 [label="algo.Portfolio.SetCash(150000)", span="501-501", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_260 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="502-502", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_261 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="504-504", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_262 [label="Assert.AreEqual(3600, actual)", span="505-505", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_263 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="494-494", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_283 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="541-541", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_284 [label="Security msft", span="543-543", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_285 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="544-544", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_286 [label="Update(msft, 25)", span="546-546", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_287 [label="algo.Portfolio.SetCash(50000)", span="548-548", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_288 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="549-549", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_289 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="552-552", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_290 [label="Assert.AreEqual(-3600, actual)", span="553-553", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_291 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="541-541", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_75 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="170-170", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs"];
m26_76 [label="Security msft", span="172-172", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs"];
m26_77 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="173-173", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs"];
m26_78 [label="Update(msft, 25)", span="175-175", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs"];
m26_79 [label="algo.Portfolio.SetCash(25000)", span="177-177", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs"];
m26_80 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="178-178", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs"];
m26_81 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="180-180", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs"];
m26_82 [label="Assert.AreEqual(-1000, actual)", span="181-181", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs"];
m26_83 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="170-170", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs"];
m26_11 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", span="68-68", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_12 [label="Security msft", span="70-70", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_13 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="71-71", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_14 [label="Update(msft, 25)", span="73-73", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_15 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="74-74", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_16 [label="Assert.AreEqual(1999, actual)", span="76-76", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_17 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", span="68-68", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_7 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", span="1162-1162", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs"];
m26_597 [label="var algo = new QCAlgorithm()", span="1165-1165", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs"];
m26_600 [label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1168-1168", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs"];
m26_602 [label="msft.SetLeverage(leverage)", span="1170-1170", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs"];
m26_598 [label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1166-1166", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs"];
m26_599 [label="algo.SetCash(100000)", span="1167-1167", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs"];
m26_601 [label="msft = algo.Securities[Symbols.MSFT]", span="1169-1169", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs"];
m26_603 [label="return algo;", span="1171-1171", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs"];
m26_604 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", span="1162-1162", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs"];
m26_376 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="727-727", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_377 [label="Security msft", span="729-729", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_378 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="730-730", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_379 [label="Update(msft, 25)", span="732-732", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_380 [label="algo.Portfolio.SetCash(50000)", span="734-734", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_381 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="735-735", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_382 [label="Update(msft, 50)", span="738-738", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_383 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="742-742", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_384 [label="Assert.AreEqual(250, actual)", span="745-745", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_385 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="727-727", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs"];
m26_228 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="443-443", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_229 [label="Security msft", span="445-445", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_230 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="446-446", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_231 [label="Update(msft, 25)", span="448-448", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_232 [label="algo.Portfolio.SetCash(150000)", span="450-450", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_233 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="451-451", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_234 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="459-459", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_235 [label="Assert.AreEqual(-600, actual)", span="460-460", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_236 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="443-443", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_386 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="749-749", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_387 [label="Security msft", span="751-751", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_388 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="752-752", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_389 [label="Update(msft, 25)", span="754-754", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_390 [label="algo.Portfolio.SetCash(50000)", span="756-756", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_391 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="757-757", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_392 [label="Update(msft, 50)", span="760-760", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_393 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="764-764", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_394 [label="Assert.AreEqual(249, actual)", span="767-767", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_395 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="749-749", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_564 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="SliceExtensions.cs"];
m26_201 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="386-386", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_202 [label="Security msft", span="388-388", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_203 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="389-389", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_204 [label="Update(msft, 25)", span="391-391", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_205 [label="algo.Portfolio.SetCash(150000)", span="393-393", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_206 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="394-394", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_207 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="396-396", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_208 [label="Assert.AreEqual(2000, actual)", span="397-397", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_209 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="386-386", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_46 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="125-125", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs"];
m26_47 [label="Security msft", span="127-127", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs"];
m26_48 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="128-128", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs"];
m26_49 [label="Update(msft, 25)", span="130-130", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs"];
m26_50 [label="algo.Portfolio.SetCash(50000)", span="132-132", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs"];
m26_51 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="133-133", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs"];
m26_52 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="135-135", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs"];
m26_53 [label="Assert.AreEqual(1000, actual)", span="136-136", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs"];
m26_54 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="125-125", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs"];
m26_582 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="SliceExtensions.cs"];
m26_554 [label="Entry Mock<Orders.SubmitOrderRequest>.cstr", span="", cluster="Mock<Orders.SubmitOrderRequest>.cstr", file="SliceExtensions.cs"];
m26_183 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="356-356", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs"];
m26_184 [label="Security msft", span="358-358", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs"];
m26_185 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="359-359", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs"];
m26_186 [label="Update(msft, 25)", span="361-361", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs"];
m26_187 [label="algo.Portfolio.SetCash(150000)", span="363-363", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs"];
m26_188 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="364-364", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs"];
m26_189 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="366-366", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs"];
m26_190 [label="Assert.AreEqual(2000, actual)", span="367-367", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs"];
m26_191 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="356-356", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs"];
m26_571 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="SliceExtensions.cs"];
m26_0 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="57-57", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs"];
m26_1 [label="Security msft", span="59-59", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs"];
m26_2 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="60-60", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs"];
m26_3 [label="Update(msft, 25)", span="62-62", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs"];
m26_4 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="63-63", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs"];
m26_5 [label="Assert.AreEqual(2000, actual)", span="64-64", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs"];
m26_6 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="57-57", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs"];
m26_557 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SliceExtensions.cs"];
m26_573 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SliceExtensions.cs"];
m26_165 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="324-324", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_166 [label="Security msft", span="326-326", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_167 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="327-327", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_168 [label="Update(msft, 25)", span="329-329", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_169 [label="algo.Portfolio.SetCash(50000)", span="331-331", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_170 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="332-332", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_171 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="335-335", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_172 [label="Assert.AreEqual(-5999, actual)", span="336-336", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_173 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="324-324", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_587 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="SliceExtensions.cs"];
m26_25 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", span="92-92", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs"];
m26_26 [label="Security msft", span="94-94", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs"];
m26_27 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="95-95", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs"];
m26_28 [label="Update(msft, 25)", span="97-97", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs"];
m26_29 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="98-98", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs"];
m26_30 [label="Assert.AreEqual(-2000, actual)", span="99-99", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs"];
m26_31 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", span="92-92", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs"];
m26_10 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="SliceExtensions.cs"];
m26_174 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="340-340", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_175 [label="Security msft", span="342-342", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_176 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="343-343", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_177 [label="Update(msft, 25)", span="345-345", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_178 [label="algo.Portfolio.SetCash(50000)", span="347-347", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_179 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="348-348", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_180 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="351-351", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_181 [label="Assert.AreEqual(-5600, actual)", span="352-352", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_182 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="340-340", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_579 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SliceExtensions.cs"];
m26_561 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="SliceExtensions.cs"];
m26_482 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SliceExtensions.cs"];
m26_328 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="621-621", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_329 [label="Security msft", span="623-623", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_330 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="624-624", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_331 [label="Update(msft, 25)", span="626-626", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_332 [label="algo.Portfolio.SetCash(50000)", span="628-628", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_333 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="629-629", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_334 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="632-632", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_335 [label="Assert.AreEqual(-9999, actual)", span="633-633", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_336 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="621-621", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_274 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="525-525", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_275 [label="Security msft", span="527-527", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_276 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="528-528", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_277 [label="Update(msft, 25)", span="530-530", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_278 [label="algo.Portfolio.SetCash(50000)", span="532-532", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_279 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="533-533", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_280 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="536-536", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_281 [label="Assert.AreEqual(-3999, actual)", span="537-537", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_282 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="525-525", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_480 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="SliceExtensions.cs"];
m26_617 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="SliceExtensions.cs"];
m26_192 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="371-371", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_193 [label="Security msft", span="373-373", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_194 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="374-374", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_195 [label="Update(msft, 25)", span="376-376", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_196 [label="algo.Portfolio.SetCash(150000)", span="378-378", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_197 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="379-379", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_198 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="381-381", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_199 [label="Assert.AreEqual(2000, actual)", span="382-382", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_200 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="371-371", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_483 [label="Entry QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", span="31-31", cluster="QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", file="SliceExtensions.cs"];
m26_111 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="230-230", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_112 [label="Security msft", span="232-232", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_113 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="233-233", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_114 [label="Update(msft, 25)", span="235-235", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_115 [label="algo.Portfolio.SetCash(50000)", span="237-237", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_116 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="238-238", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_117 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="240-240", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_118 [label="Assert.AreEqual(-2000, actual)", span="241-241", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_119 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="230-230", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_569 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="SliceExtensions.cs"];
m26_570 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SliceExtensions.cs"];
m26_264 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="509-509", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_265 [label="Security msft", span="511-511", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_266 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="512-512", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_267 [label="Update(msft, 25)", span="514-514", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_268 [label="algo.Portfolio.SetCash(50000)", span="516-516", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_269 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="517-517", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_270 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="520-520", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_271 [label="Assert.AreEqual(-4000, actual)", span="521-521", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_272 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="509-509", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_578 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="SliceExtensions.cs"];
m26_366 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="704-704", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_367 [label="Security msft", span="706-706", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_368 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="707-707", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_369 [label="Update(msft, 25)", span="709-709", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_370 [label="algo.Portfolio.SetCash(50000)", span="712-712", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_371 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="713-713", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_372 [label="Update(msft, 50)", span="716-716", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_373 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="720-720", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_374 [label="Assert.AreEqual(-300, actual)", span="723-723", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_375 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="704-704", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_337 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="637-637", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_338 [label="Security msft", span="639-639", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_339 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="640-640", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_340 [label="Update(msft, 25)", span="642-642", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_341 [label="algo.Portfolio.SetCash(50000)", span="644-644", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_342 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="645-645", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_343 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="648-648", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_344 [label="Assert.AreEqual(-9200, actual)", span="649-649", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_345 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="637-637", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs"];
m26_555 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SliceExtensions.cs"];
m26_572 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SliceExtensions.cs"];
m26_562 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="SliceExtensions.cs"];
m26_566 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="SliceExtensions.cs"];
m26_560 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="SliceExtensions.cs"];
m26_39 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="114-114", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_40 [label="Security msft", span="116-116", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_41 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="117-117", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_42 [label="Update(msft, 25)", span="119-119", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_43 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="120-120", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_44 [label="Assert.AreEqual(-1600, actual)", span="121-121", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_45 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="114-114", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_595 [label="Entry Unk.>", span="", cluster="Unk.>", file="SliceExtensions.cs"];
m26_84 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="185-185", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_85 [label="Security msft", span="187-187", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_86 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="188-188", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_87 [label="Update(msft, 25)", span="190-190", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_88 [label="algo.Portfolio.SetCash(25000)", span="192-192", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_89 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="193-193", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_90 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="195-195", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_91 [label="Assert.AreEqual(-999, actual)", span="196-196", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_92 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="185-185", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_156 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="308-308", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs"];
m26_157 [label="Security msft", span="310-310", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs"];
m26_158 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="311-311", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs"];
m26_159 [label="Update(msft, 25)", span="313-313", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs"];
m26_160 [label="algo.Portfolio.SetCash(50000)", span="315-315", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs"];
m26_161 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="316-316", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs"];
m26_162 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="319-319", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs"];
m26_163 [label="Assert.AreEqual(-6000, actual)", span="320-320", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs"];
m26_164 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="308-308", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs"];
m26_484 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="961-961", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs"];
m26_485 [label="var algo = new QCAlgorithm()", span="963-963", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs"];
m26_486 [label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="964-964", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs"];
m26_487 [label="algo.SetCash(100000)", span="965-965", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs"];
m26_488 [label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="966-966", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs"];
m26_489 [label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="967-967", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs"];
m26_490 [label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="968-968", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs"];
m26_492 [label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, -1m)", span="972-972", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs"];
m26_491 [label="Update(eurusd, 26)", span="970-970", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs"];
m26_493 [label="Assert.AreEqual(-3000m, actual)", span="973-973", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs"];
m26_494 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="961-961", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs"];
m26_57 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="140-140", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_58 [label="Security msft", span="142-142", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_59 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="143-143", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_60 [label="Update(msft, 25)", span="145-145", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_61 [label="algo.Portfolio.SetCash(50000)", span="147-147", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_62 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="148-148", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_63 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="150-150", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_64 [label="Assert.AreEqual(999, actual)", span="151-151", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_65 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="140-140", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs"];
m26_565 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="SliceExtensions.cs"];
m26_56 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="SliceExtensions.cs"];
m26_273 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1174-1174", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs"];
m26_606 [label="var algo = new QCAlgorithm()", span="1177-1177", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs"];
m26_609 [label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1180-1180", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs"];
m26_611 [label="msft.MarginModel = new SecurityMarginModel(initialMarginRequirement, maintenanceMarginRequirement)", span="1182-1182", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs"];
m26_607 [label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1178-1178", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs"];
m26_608 [label="algo.SetCash(100000)", span="1179-1179", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs"];
m26_610 [label="msft = algo.Securities[Symbols.MSFT]", span="1181-1181", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs"];
m26_612 [label="return algo;", span="1183-1183", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs"];
m26_613 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1174-1174", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs"];
m26_586 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="SliceExtensions.cs"];
m26_619 [label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", span="", file="SliceExtensions.cs"];
m27_69 [label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202", cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="StandardDeviationExecutionModel.cs"];
m27_32 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="StandardDeviationExecutionModel.cs"];
m27_28 [label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", span="62-62", cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", file="StandardDeviationExecutionModel.cs"];
m27_37 [label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="126-126", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_38 [label="var addedSymbolData = new List<Symbol>()", span="128-128", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs"];
m27_39 [label="changes.AddedSecurities", span="129-129", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_42 [label="addedSymbolData.Add(added.Symbol)", span="135-135", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs"];
m27_44 [label="addedSymbolData.Count > 0", span="140-140", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs"];
m27_45 [label="var history = algorithm.History(addedSymbolData, _period, _resolution)", span="142-142", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs"];
m27_41 [label="var symbolData = new SymbolData(algorithm, added, _period, _resolution)", span="134-134", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs"];
m27_40 [label="!_symbolData.ContainsKey(added.Symbol)", span="132-132", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_43 [label="_symbolData[added.Symbol] = symbolData", span="136-136", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs"];
m27_46 [label=history, span="143-143", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=1, file="StandardDeviationExecutionModel.cs"];
m27_54 [label="changes.RemovedSecurities", span="160-160", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_47 [label="slice.Keys", span="145-145", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs"];
m27_48 [label="var value = slice[symbol]", span="147-147", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs"];
m27_52 [label="_symbolData.TryGetValue(symbol, out symbolData)", span="152-152", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_53 [label="symbolData.Consolidator.Update(data)", span="154-154", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_49 [label="var list = value as IList", span="148-148", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs"];
m27_50 [label="var data = (BaseData)(list != null ? list[list.Count - 1] : value)", span="149-149", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs"];
m27_51 [label="SymbolData symbolData", span="151-151", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_57 [label="IsSafeToRemove(algorithm, removed.Symbol)", span="166-166", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_59 [label="algorithm.SubscriptionManager.RemoveConsolidator(removed.Symbol, data.Consolidator)", span="169-169", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_56 [label="_symbolData.TryGetValue(removed.Symbol, out data)", span="164-164", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_58 [label="_symbolData.Remove(removed.Symbol)", span="168-168", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_55 [label="SymbolData data", span="163-163", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_60 [label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="126-126", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs"];
m27_29 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="StandardDeviationExecutionModel.cs"];
m27_86 [label="Entry QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", span="207-207", cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", file="StandardDeviationExecutionModel.cs"];
m27_62 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StandardDeviationExecutionModel.cs"];
m27_61 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="StandardDeviationExecutionModel.cs"];
m27_68 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="StandardDeviationExecutionModel.cs"];
m27_36 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", span="169-169", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", file="StandardDeviationExecutionModel.cs"];
m27_101 [label="Entry lambda expression", span="234-238", cluster="lambda expression", file="StandardDeviationExecutionModel.cs"];
m27_84 [label="kvp.Value.ContainsMember(symbol)", span="214-214", cluster="lambda expression", file="StandardDeviationExecutionModel.cs"];
m27_83 [label="Entry lambda expression", span="214-214", cluster="lambda expression", file="StandardDeviationExecutionModel.cs"];
m27_85 [label="Exit lambda expression", span="214-214", cluster="lambda expression", file="StandardDeviationExecutionModel.cs"];
m27_102 [label="SMA.Update(consolidated.EndTime, consolidated.Value)", span="236-236", cluster="lambda expression", file="StandardDeviationExecutionModel.cs"];
m27_103 [label="STD.Update(consolidated.EndTime, consolidated.Value)", span="237-237", cluster="lambda expression", file="StandardDeviationExecutionModel.cs"];
m27_104 [label="Exit lambda expression", span="234-238", cluster="lambda expression", file="StandardDeviationExecutionModel.cs"];
m27_34 [label="Entry System.Math.Sign(decimal)", span="0-0", cluster="System.Math.Sign(decimal)", file="StandardDeviationExecutionModel.cs"];
m27_35 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="StandardDeviationExecutionModel.cs"];
m27_30 [label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", span="179-179", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_70 [label="var deviations = _deviations * data.STD", span="181-181", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_71 [label="unorderedQuantity > 0", span="182-182", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_73 [label="price < data.SMA - deviations", span="188-188", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_76 [label="price > data.SMA + deviations", span="199-199", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_72 [label="var price = data.Security.BidPrice == 0\r\n                    ? data.Security.Price\r\n                    : data.Security.BidPrice", span="184-186", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_75 [label="var price = data.Security.AskPrice == 0\r\n                    ? data.Security.AskPrice\r\n                    : data.Security.Price", span="195-197", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_74 [label="return true;", span="190-190", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_78 [label="return false;", span="205-205", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_77 [label="return true;", span="201-201", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_79 [label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", span="179-179", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_66 [label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59", cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", file="StandardDeviationExecutionModel.cs"];
m27_63 [label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", span="224-224", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_87 [label="Security = security", span="226-226", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_88 [label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, resolution)", span="227-227", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_89 [label="var smaName = algorithm.CreateIndicatorName(security.Symbol, ''SMA'' + period, resolution)", span="228-228", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_90 [label="SMA = new SimpleMovingAverage(smaName, period)", span="229-229", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_91 [label="var stdName = algorithm.CreateIndicatorName(security.Symbol, ''STD'' + period, resolution)", span="230-230", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_92 [label="STD = new StandardDeviation(stdName, period)", span="231-231", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_93 [label="algorithm.SubscriptionManager.AddConsolidator(security.Symbol, Consolidator)", span="233-233", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_94 [label="Consolidator.DataConsolidated += (sender, consolidated) =>\r\n                {\r\n                    SMA.Update(consolidated.EndTime, consolidated.Value);\r\n                    STD.Update(consolidated.EndTime, consolidated.Value);\r\n                }", span="234-238", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_95 [label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", span="224-224", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_99 [label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="44-44", cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="StandardDeviationExecutionModel.cs"];
m27_0 [label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", span="54-54", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_1 [label="_period = period", span="60-60", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_2 [label="_deviations = deviations", span="61-61", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_3 [label="_resolution = resolution", span="62-62", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_4 [label="_targetsCollection = new PortfolioTargetCollection()", span="63-63", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_5 [label="_symbolData = new Dictionary<Symbol, SymbolData>()", span="64-64", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_6 [label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", span="54-54", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs"];
m27_97 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1270-1270", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationExecutionModel.cs"];
m27_100 [label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169", cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="StandardDeviationExecutionModel.cs"];
m27_9 [label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="73-73", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_10 [label="_targetsCollection.AddRange(targets)", span="75-75", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_11 [label=_targetsCollection, span="77-77", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_15 [label="!_symbolData.TryGetValue(symbol, out data)", span="86-86", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_17 [label="data.STD.IsReady && PriceIsFavorable(data, unorderedQuantity)", span="98-98", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_18 [label="var maxOrderSize = OrderSizing.Value(data.Security, MaximumOrderValue)", span="101-101", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_25 [label="_targetsCollection.Remove(target.Symbol)", span="116-116", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_16 [label="data.Security.Price == 0m", span="92-92", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_24 [label="unorderedQuantity == 0m", span="114-114", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_12 [label="var symbol = target.Symbol", span="79-79", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_13 [label="var unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="82-82", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_23 [label="unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="113-113", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_14 [label="SymbolData data", span="85-85", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_20 [label="orderSize -= orderSize % data.Security.SymbolProperties.LotSize", span="105-105", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_19 [label="var orderSize = Math.Min(maxOrderSize, Math.Abs(unorderedQuantity))", span="102-102", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_22 [label="algorithm.MarketOrder(symbol, Math.Sign(unorderedQuantity) * orderSize)", span="108-108", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_21 [label="orderSize != 0", span="106-106", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_26 [label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="73-73", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_98 [label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46", cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="StandardDeviationExecutionModel.cs"];
m27_67 [label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="211-211", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="StandardDeviationExecutionModel.cs"];
m27_80 [label="return !algorithm.UniverseManager.Any(kvp => kvp.Value.ContainsMember(symbol));", span="214-214", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="StandardDeviationExecutionModel.cs"];
m27_81 [label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="211-211", cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="StandardDeviationExecutionModel.cs"];
m27_82 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="StandardDeviationExecutionModel.cs"];
m27_31 [label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.Value(QuantConnect.Securities.Security, decimal)", span="44-44", cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.Value(QuantConnect.Securities.Security, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_65 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="433-433", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="StandardDeviationExecutionModel.cs"];
m27_8 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StandardDeviationExecutionModel.cs"];
m27_27 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="91-91", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs"];
m27_64 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="StandardDeviationExecutionModel.cs"];
m27_33 [label="Entry System.Math.Min(decimal, decimal)", span="0-0", cluster="System.Math.Min(decimal, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_96 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationExecutionModel.cs"];
m27_7 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.PortfolioTargetCollection()", span="26-26", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.PortfolioTargetCollection()", file="StandardDeviationExecutionModel.cs"];
m27_105 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="StandardDeviationExecutionModel.cs"];
m27_106 [label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", span="", file="StandardDeviationExecutionModel.cs"];
m27_108 [label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", span="", file="StandardDeviationExecutionModel.cs"];
m27_107 [label="QuantConnect.Symbol", span="", file="StandardDeviationExecutionModel.cs"];
m28_29 [label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", span="47-47", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="UserDefinedUniverse.cs"];
m28_30 [label="DisposeWasCalled = true", span="49-49", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="UserDefinedUniverse.cs"];
m28_32 [label="throw new Exception();", span="52-52", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="UserDefinedUniverse.cs"];
m28_34 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="UserDefinedUniverse.cs"];
m28_36 [label="sid = SecurityIdentifier.GenerateEquity(SecurityIdentifier.DefaultDate, ticker, market)", span="116-116", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_38 [label="var underlying = SecurityIdentifier.GenerateEquity(SecurityIdentifier.DefaultDate, ticker, market)", span="120-120", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_39 [label="sid = SecurityIdentifier.GenerateOption(SecurityIdentifier.DefaultDate, underlying, market, 0, 0, 0)", span="121-121", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_41 [label="sid = SecurityIdentifier.GenerateForex(ticker, market)", span="125-125", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_43 [label="sid = SecurityIdentifier.GenerateCfd(ticker, market)", span="129-129", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_45 [label="sid = SecurityIdentifier.GenerateFuture(SecurityIdentifier.DefaultDate, ticker, market)", span="133-133", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_47 [label="sid = SecurityIdentifier.GenerateCrypto(ticker, market)", span="137-137", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_49 [label="throw new NotImplementedException(''The specified security type is not implemented yet: '' + securityType);", span="142-142", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_31 [label=_throwException, span="50-50", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="UserDefinedUniverse.cs"];
m28_50 [label="return new Symbol(sid, ticker);", span="145-145", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_33 [label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", span="47-47", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="UserDefinedUniverse.cs"];
m28_35 [label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", span="", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_37 [label="SecurityType.Option", span="119-119", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_40 [label="SecurityType.Forex", span="124-124", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_42 [label="SecurityType.Cfd", span="128-128", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_44 [label="SecurityType.Future", span="132-132", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_46 [label="SecurityType.Crypto", span="136-136", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_48 [label="SecurityType.Commodity", span="140-140", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_51 [label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", span="105-105", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs"];
m28_104 [label="Entry System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="0-0", cluster="System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs"];
m28_5 [label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UserDefinedUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.TimeSpan, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="67-67", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UserDefinedUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.TimeSpan, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="UserDefinedUniverse.cs"];
m28_94 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig)", span="62-62", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig)", file="UserDefinedUniverse.cs"];
m28_63 [label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", span="153-153", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_64 [label="_symbols.Add(symbol)", span="155-155", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_65 [label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, symbol))", span="157-157", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_67 [label="return false;", span="160-160", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_66 [label="return true;", span="158-158", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_68 [label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", span="153-153", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_96 [label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", span="141-141", cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", file="UserDefinedUniverse.cs"];
m28_10 [label="Assert.IsTrue(result)", span="22-22", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs"];
m28_11 [label="Assert.IsTrue(disposable.DisposeWasCalled)", span="23-23", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs"];
m28_12 [label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", span="18-18", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs"];
m28_13 [label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Disposable(bool)", span="42-42", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Disposable(bool)", file="UserDefinedUniverse.cs"];
m28_14 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="UserDefinedUniverse.cs"];
m28_27 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="UserDefinedUniverse.cs"];
m28_28 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="UserDefinedUniverse.cs"];
m28_0 [label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", span="10-10", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="UserDefinedUniverse.cs"];
m28_1 [label="IDisposable disposable = null", span="12-12", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="UserDefinedUniverse.cs"];
m28_2 [label="var result = disposable.DisposeSafely()", span="13-13", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="UserDefinedUniverse.cs"];
m28_3 [label="Assert.IsFalse(result)", span="14-14", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="UserDefinedUniverse.cs"];
m28_4 [label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", span="10-10", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="UserDefinedUniverse.cs"];
m28_23 [label="Entry System.IDisposable.DisposeSafely(System.Action<System.Exception>)", span="29-29", cluster="System.IDisposable.DisposeSafely(System.Action<System.Exception>)", file="UserDefinedUniverse.cs"];
m28_57 [label="Entry QuantConnect.SecurityIdentifier.GenerateForex(string, string)", span="384-384", cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="UserDefinedUniverse.cs"];
m28_59 [label="Entry QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", span="319-319", cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", file="UserDefinedUniverse.cs"];
m28_69 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="UserDefinedUniverse.cs"];
m28_24 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="UserDefinedUniverse.cs"];
m28_7 [label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", span="18-18", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs"];
m28_8 [label="var disposable = new Disposable()", span="20-20", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs"];
m28_9 [label="var result = disposable.DisposeSafely()", span="21-21", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs"];
m28_16 [label="var errorHandlerWasInvoked = false", span="29-29", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs"];
m28_15 [label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", span="27-27", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs"];
m28_17 [label="var disposable = new Disposable(throwException: true)", span="30-30", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs"];
m28_19 [label="Assert.IsFalse(result)", span="32-32", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs"];
m28_18 [label="var result = disposable.DisposeSafely(error => errorHandlerWasInvoked = true)", span="31-31", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs", color=green, community=0];
m28_20 [label="Assert.IsTrue(errorHandlerWasInvoked)", span="33-33", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs"];
m28_25 [label="errorHandlerWasInvoked = true", span="31-31", cluster="lambda expression", file="UserDefinedUniverse.cs", color=green, community=0];
m28_26 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="UserDefinedUniverse.cs"];
m28_97 [label="Entry lambda expression", span="200-200", cluster="lambda expression", file="UserDefinedUniverse.cs"];
m28_98 [label="dt + Interval", span="200-200", cluster="lambda expression", file="UserDefinedUniverse.cs"];
m28_99 [label="Exit lambda expression", span="200-200", cluster="lambda expression", file="UserDefinedUniverse.cs"];
m28_6 [label="Entry Unk.ToHashSet", span="", cluster="Unk.ToHashSet", file="UserDefinedUniverse.cs"];
m28_71 [label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="218-218", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs"];
m28_100 [label="var handler = CollectionChanged", span="220-220", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs"];
m28_102 [label="handler(this, e)", span="221-221", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs"];
m28_101 [label="handler != null", span="221-221", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs"];
m28_103 [label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="218-218", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs"];
m28_78 [label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="UserDefinedUniverse.cs"];
m28_60 [label="Entry QuantConnect.SecurityIdentifier.GenerateCrypto(string, string)", span="395-395", cluster="QuantConnect.SecurityIdentifier.GenerateCrypto(string, string)", file="UserDefinedUniverse.cs"];
m28_56 [label="Entry QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="302-302", cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="UserDefinedUniverse.cs"];
m28_52 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="UserDefinedUniverse.cs"];
m28_79 [label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="184-184", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UserDefinedUniverse.cs"];
m28_80 [label="return _selector(utcTime);", span="186-186", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UserDefinedUniverse.cs"];
m28_81 [label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="184-184", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UserDefinedUniverse.cs"];
m28_58 [label="Entry QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", span="406-406", cluster="QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", file="UserDefinedUniverse.cs"];
m28_95 [label="Entry QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", span="234-234", cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="UserDefinedUniverse.cs"];
m28_22 [label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", span="27-27", cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs"];
m28_72 [label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", span="168-168", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_73 [label="_symbols.Remove(symbol)", span="170-170", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_74 [label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, symbol))", span="172-172", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_76 [label="return false;", span="175-175", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_75 [label="return true;", span="173-173", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_77 [label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", span="168-168", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs"];
m28_62 [label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="242-242", cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="UserDefinedUniverse.cs"];
m28_53 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="UserDefinedUniverse.cs"];
m28_21 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="606-606", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="UserDefinedUniverse.cs"];
m28_54 [label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373", cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="UserDefinedUniverse.cs"];
m28_70 [label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", span="0-0", cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", file="UserDefinedUniverse.cs"];
m28_55 [label="Entry QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", span="362-362", cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="UserDefinedUniverse.cs"];
m28_82 [label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", span="193-193", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_83 [label="var exchangeHours = marketHoursDatabase.GetExchangeHours(Configuration)", span="195-195", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_89 [label="yield return dateTime;", span="204-204", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_92 [label="yield return dateTime;", span="209-209", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_84 [label="var localStartTime = startTimeUtc.ConvertFromUtc(exchangeHours.TimeZone)", span="196-196", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_85 [label="var localEndTime = endTimeUtc.ConvertFromUtc(exchangeHours.TimeZone)", span="197-197", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_91 [label="exchangeHours.IsOpen(dateTime, dateTime + Interval, Configuration.ExtendedMarketHours)", span="207-207", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_87 [label="LinqExtensions.Range(localStartTime, localEndTime, dt => dt + Interval)", span="200-200", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_86 [label="var first = true", span="199-199", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_88 [label=first, span="202-202", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_90 [label="first = false", span="205-205", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_93 [label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", span="193-193", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs"];
m28_105 [label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", span="", file="UserDefinedUniverse.cs"];
m28_106 [label="System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>", span="", file="UserDefinedUniverse.cs"];
m29_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", span="40-40", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_1 [label="_universe = universe", span="42-42", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_2 [label="_marketHoursDatabase = marketHoursDatabase", span="43-43", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_3 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", span="40-40", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_9 [label="Entry Unk.GetEnumerator", span="", cluster="Unk.GetEnumerator", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_13 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_7 [label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", span="193-193", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_4 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="52-52", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_5 [label="return _universe.GetTriggerTimes(request.StartTimeUtc, request.EndTimeUtc, _marketHoursDatabase)\r\n                .Select(x => new Tick {Time = x, Symbol = request.Configuration.Symbol}).GetEnumerator();", span="54-55", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_6 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="52-52", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_10 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_11 [label="new Tick {Time = x, Symbol = request.Configuration.Symbol}", span="55-55", cluster="lambda expression", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_12 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_14 [label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory", span="", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m29_15 [label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", span="", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs"];
m30_50 [label="parsed is TradeBar", span="102-102", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_89 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="136-136", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_96 [label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Daily, TickType.OpenInterest), tickType)", span="157-157", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_101 [label="Assert.AreEqual(LeanData.GetDataType(Resolution.Hour, TickType.Trade), tradeBarType)", span="165-165", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_97 [label="Assert.AreEqual(LeanData.GetDataType(Resolution.Second, TickType.OpenInterest), openInterestType)", span="159-159", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_98 [label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), openInterestType)", span="160-160", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_99 [label="Assert.AreEqual(LeanData.GetDataType(Resolution.Minute, TickType.Quote), quoteBarType)", span="162-162", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_100 [label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Second, TickType.Trade), quoteBarType)", span="163-163", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_102 [label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tradeBarType)", span="166-166", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_103 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="149-149", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_104 [label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311", cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_106 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="170-170", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_105 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_107 [label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(OpenInterest)))", span="172-172", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_108 [label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(TradeBar)))", span="173-173", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_109 [label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(QuoteBar)))", span="174-174", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_11 [label="orderSize -= orderSize % data.Security.SymbolProperties.LotSize", span="82-82", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_12 [label="orderSize != 0", span="83-83", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", color=green, community=0, file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_13 [label="algorithm.MarketOrder(data.Security.Symbol, Math.Sign(unorderedQuantity) * orderSize)", span="85-85", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_14 [label="unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="90-90", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_21 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="61-61", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_51 [label="var expected = (TradeBar) parameters.Data", span="104-104", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_52 [label="var actual = (TradeBar) parsed", span="105-105", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_53 [label="AssertBarsAreEqual(expected, actual)", span="106-106", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_56 [label="var expected = (QuoteBar) parameters.Data", span="111-111", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_54 [label="Assert.AreEqual(expected.Volume, actual.Volume)", span="107-107", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_57 [label="var actual = (QuoteBar) parsed", span="112-112", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_55 [label="parsed is QuoteBar", span="109-109", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_59 [label="AssertBarsAreEqual(expected.Ask, actual.Ask)", span="114-114", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_58 [label="AssertBarsAreEqual(expected.Bid, actual.Bid)", span="113-113", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_60 [label="Assert.AreEqual(expected.LastBidSize, actual.LastBidSize)", span="115-115", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_63 [label="var name = algorithm.CreateIndicatorName(security.Symbol, ''VWAP'', security.Resolution)", span="179-179", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_42 [label="Assert.AreEqual(expected.Quantity, actual.Quantity)", span="93-93", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_216 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_227 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="466-466", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_271 [label="Name = SecurityType + ''_'' + data.GetType().Name", span="498-498", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_272 [label="data.GetType() != typeof (Tick) || Resolution != Resolution.Tick", span="500-500", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_270 [label="Config = new SubscriptionDataConfig(Data.GetType(), Data.Symbol, Resolution, TimeZones.Utc, TimeZones.Utc, false, true, false, false, TickType)", span="496-496", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_273 [label="Name += ''_'' + Resolution", span="502-502", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_274 [label="data is Tick", span="505-505", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_268 [label="data.Symbol.ID.SecurityType == SecurityType.Forex || data.Symbol.ID.SecurityType == SecurityType.Cfd", span="491-491", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_269 [label="TickType = TickType.Quote", span="493-493", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_256 [label="Data = data", span="468-468", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_257 [label="SecurityType = securityType", span="469-469", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_258 [label="Resolution = resolution", span="470-470", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_259 [label="ExpectedLine = expectedLine", span="471-471", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_262 [label="TickType = tick.TickType", span="475-475", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_264 [label="TickType = TickType.Trade", span="479-479", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_266 [label="TickType = TickType.Quote", span="483-483", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_275 [label="Name += ''_'' + ((Tick) data).TickType", span="507-507", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_260 [label="data is Tick", span="472-472", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_261 [label="var tick = (Tick) data", span="474-474", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_263 [label="data is TradeBar", span="477-477", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_265 [label="data is QuoteBar", span="481-481", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_267 [label="throw new NotImplementedException();", span="487-487", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_276 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="466-466", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_243 [label="ExpectedZipEntryName = expectedZipEntryName", span="441-441", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_214 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="434-434", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_238 [label="Symbol = symbol", span="436-436", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_239 [label="Date = date", span="437-437", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_240 [label="Resolution = resolution", span="438-438", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_241 [label="TickType = tickType", span="439-439", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_242 [label="ExpectedZipFileName = expectedZipFileName", span="440-440", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_244 [label="ExpectedRelativeZipFilePath = Path.Combine(expectedRelativeZipFileDirectory, expectedZipFileName).Replace(''/'', Path.DirectorySeparatorChar.ToString())", span="442-442", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_246 [label="Name = SecurityType + ''_'' + resolution", span="445-445", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_247 [label="BaseDataType = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="447-447", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_248 [label="symbol.ID.SecurityType == SecurityType.Option && resolution != Resolution.Tick", span="448-448", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_250 [label="Config = new SubscriptionDataConfig(BaseDataType, symbol, resolution, TimeZones.NewYork, TimeZones.NewYork, true, false, false, false, tickType)", span="452-452", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_245 [label="ExpectedZipFilePath = Path.Combine(Globals.DataFolder, ExpectedRelativeZipFilePath)", span="443-443", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_249 [label="BaseDataType = typeof(QuoteBar)", span="450-450", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_251 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="434-434", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_234 [label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_255 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_253 [label="Entry char.ToString()", span="0-0", cluster="char.ToString()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_197 [label="Entry System.DateTime.Parse(string)", span="0-0", cluster="System.DateTime.Parse(string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_31 [label="_symbolData[added.Symbol] = new SymbolData(algorithm, added)", span="109-109", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_35 [label="IsSafeToRemove(algorithm, removed.Symbol)", span="119-119", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_36 [label="_symbolData.Remove(removed.Symbol)", span="121-121", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_37 [label="algorithm.SubscriptionManager.RemoveConsolidator(removed.Symbol, data.Consolidator)", span="122-122", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_38 [label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="103-103", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_43 [label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202", cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_44 [label="return !algorithm.UniverseManager.Any(kvp => kvp.Value.ContainsMember(symbol));", span="134-134", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_45 [label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="131-131", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_46 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_47 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_48 [label="kvp.Value.ContainsMember(symbol)", span="134-134", cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_49 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_61 [label="Security = security", span="177-177", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_33 [label="SymbolData data", span="116-116", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_34 [label="_symbolData.TryGetValue(removed.Symbol, out data)", span="117-117", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_39 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_40 [label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", span="175-175", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_41 [label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="131-131", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_32 [label="changes.RemovedSecurities", span="113-113", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_62 [label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, security.Resolution)", span="178-178", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_232 [label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217", cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_113 [label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", span="", cluster="Unk.IsTrue", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_196 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_28 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="61-61", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_29 [label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_30 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_9 [label="var maxOrderSize = OrderSizing.PercentVolume(data.Security, MaximumOrderQuantityPercentVolume)", span="78-78", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_8 [label="PriceIsFavorable(data, unorderedQuantity)", span="75-75", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_6 [label="!_symbolData.TryGetValue(symbol, out data)", span="63-63", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_7 [label="data.Security.Price == 0m", span="69-69", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_226 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_15 [label="unorderedQuantity == 0m", span="91-91", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_221 [label="Entry Unk.SetName", span="", cluster="Unk.SetName", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_23 [label="Assert.AreEqual(parameters.ExpectedLine, line)", span="64-64", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_20 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_19 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="54-54", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_213 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_119 [label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="765-765", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_4 [label="var unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="59-59", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_235 [label="Entry lambda expression", span="416-416", cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_71 [label="var zipFilePath = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Data.Symbol, parameters.Data.Time.Date, parameters.Resolution, parameters.TickType)", span="125-125", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_72 [label="var normalizeZipFilePath = new FileInfo(zipFilePath).FullName", span="126-126", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_73 [label="var indexOfHash = normalizedSourcePath.LastIndexOf(''#'', StringComparison.Ordinal)", span="127-127", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_217 [label="Entry lambda expression", span="349-349", cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_219 [label="Exit lambda expression", span="349-349", cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_218 [label="new TestCaseData(x).SetName(x.Name)", span="349-349", cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_236 [label="new TestCaseData(x).SetName(x.Name)", span="416-416", cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_237 [label="Exit lambda expression", span="416-416", cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_82 [label="_lastDate = input.EndTime.Date", span="225-225", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_88 [label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", span="212-212", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_84 [label="_sumOfPriceTimesVolume += averagePrice * volume", span="230-230", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_85 [label="_sumOfVolume == 0m", span="232-232", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_86 [label="return input.Value;", span="235-235", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_87 [label="return _sumOfPriceTimesVolume / _sumOfVolume;", span="238-238", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_83 [label="_sumOfVolume += volume", span="229-229", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_233 [label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58", cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_212 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_120 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_125 [label="Assert.IsFalse(LeanData.TryParsePath(invalidPath, out symbol, out date, out resolution))", span="193-193", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_127 [label="Assert.IsFalse(LeanData.TryParsePath(nonExistantPath, out symbol, out date, out resolution))", span="196-196", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_129 [label="Assert.IsFalse(LeanData.TryParsePath(notAPath, out symbol, out date, out resolution))", span="199-199", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_131 [label="Assert.IsFalse(LeanData.TryParsePath(emptyPath, out symbol, out date, out resolution))", span="202-202", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_133 [label="Assert.IsFalse(LeanData.TryParsePath(nullPath, out symbol, out date, out resolution))", span="205-205", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_135 [label="Assert.IsFalse(LeanData.TryParsePath(optionsTradePath, out symbol, out date, out resolution))", span="208-208", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_137 [label="Assert.IsFalse(LeanData.TryParsePath(optionsOpenInterestPath, out symbol, out date, out resolution))", span="211-211", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_139 [label="Assert.IsFalse(LeanData.TryParsePath(optionsQuotePath, out symbol, out date, out resolution))", span="214-214", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_124 [label="var invalidPath = ''forex/fxcm/eurusd/20160101_quote.zip''", span="192-192", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_126 [label="var nonExistantPath = ''Data/f/fxcm/eurusd/20160101_quote.zip''", span="195-195", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_128 [label="var notAPath = ''ooooooooooooooooooooooooooooooooooooooooooooooooooooooo''", span="198-198", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_130 [label="var  emptyPath = ''''", span="201-201", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_132 [label="string nullPath = null", span="204-204", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_134 [label="var optionsTradePath = ''Data/option/u sa/minute/aapl/20140606_trade_american.zip''", span="207-207", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_136 [label="var optionsOpenInterestPath = ''Data/option/usa/minute/aapl/20140609_openinterest_american.zip''", span="210-210", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_138 [label="var optionsQuotePath = ''Data/option/usa/minute/aapl/20140609_quote_american.zip''", span="213-213", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_123 [label="Resolution resolution", span="190-190", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_122 [label="Symbol symbol", span="189-189", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_121 [label="DateTime date", span="188-188", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_140 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_25 [label="Entry System.Math.Sign(decimal)", span="0-0", cluster="System.Math.Sign(decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_27 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", span="169-169", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_22 [label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.PercentVolume(QuantConnect.Securities.Security, decimal)", span="33-33", cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.PercentVolume(QuantConnect.Securities.Security, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_24 [label="Entry System.Math.Min(decimal, decimal)", span="0-0", cluster="System.Math.Min(decimal, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_26 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_0 [label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="49-49", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_2 [label=_targetsCollection, span="54-54", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_1 [label="_targetsCollection.AddRange(targets)", span="52-52", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_3 [label="var symbol = target.Symbol", span="56-56", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_16 [label="_targetsCollection.Remove(target.Symbol)", span="93-93", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_18 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="91-91", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_17 [label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="49-49", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_90 [label="Entry QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45", cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_95 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_91 [label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", span="248-248", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_94 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_92 [label="throw new NotImplementedException($''{nameof(IntradayVwap)}.{nameof(ComputeNextValue)} should never be invoked.'');", span="250-250", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_93 [label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", span="248-248", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_78 [label="return new IndicatorResult(0, IndicatorStatus.InvalidInput);", span="217-217", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_112 [label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", span="", cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_79 [label="_lastDate != input.EndTime.Date", span="221-221", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_229 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158", cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_69 [label="var source = parameters.Data.GetSource(parameters.Config, parameters.Data.Time.Date, false)", span="123-123", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_74 [label="indexOfHash > 0", span="128-128", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_80 [label="_sumOfVolume = 0m", span="223-223", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_142 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_148 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="226-226", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_149 [label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="227-227", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_150 [label="Assert.AreEqual(resolution, Resolution.Tick)", span="228-228", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_151 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="229-229", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_152 [label="Assert.AreEqual(date.Date, DateTime.Parse(''2017-01-04'').Date)", span="230-230", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_155 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="234-234", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_156 [label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="235-235", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_157 [label="Assert.AreEqual(resolution, Resolution.Minute)", span="236-236", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_158 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="237-237", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_159 [label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="238-238", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_162 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="242-242", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_163 [label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="243-243", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_164 [label="Assert.AreEqual(resolution, Resolution.Hour)", span="244-244", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_165 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''gbpusd'')", span="245-245", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_166 [label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="246-246", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_169 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="250-250", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_170 [label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="251-251", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_171 [label="Assert.AreEqual(resolution, Resolution.Minute)", span="252-252", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_172 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="253-253", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_173 [label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-02'').Date)", span="254-254", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_176 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="258-258", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_177 [label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="259-259", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_178 [label="Assert.AreEqual(resolution, Resolution.Daily)", span="260-260", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_179 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''aapl'')", span="261-261", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_180 [label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="262-262", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_183 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="266-266", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_184 [label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="267-267", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_185 [label="Assert.AreEqual(resolution, Resolution.Minute)", span="268-268", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_186 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''goog'')", span="269-269", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_187 [label="Assert.AreEqual(date.Date, DateTime.Parse(''2007-01-03'').Date)", span="270-270", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_190 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Cfd)", span="274-274", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_191 [label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="275-275", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_192 [label="Assert.AreEqual(resolution, Resolution.Minute)", span="276-276", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_193 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''bcousd'')", span="277-277", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_194 [label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="278-278", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_147 [label="Assert.IsTrue(LeanData.TryParsePath(customPath, out symbol, out date, out resolution))", span="225-225", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_153 [label="var mixedPathSeperators = @''Data//forex/fxcm\/minute//eurusd\\20160101_quote.zip''", span="232-232", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_154 [label="Assert.IsTrue(LeanData.TryParsePath(mixedPathSeperators, out symbol, out date, out resolution))", span="233-233", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_160 [label="var longRelativePath = ''../../../../../../../../../Data/forex/fxcm/hour/gbpusd.zip''", span="240-240", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_161 [label="Assert.IsTrue(LeanData.TryParsePath(longRelativePath, out symbol, out date, out resolution))", span="241-241", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_167 [label="var shortRelativePath = ''Data/forex/fxcm/minute/eurusd/20160102_quote.zip''", span="248-248", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_168 [label="Assert.IsTrue(LeanData.TryParsePath(shortRelativePath, out symbol, out date, out resolution))", span="249-249", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_174 [label="var dailyEquitiesPath = ''Data/equity/usa/daily/aapl.zip''", span="256-256", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_175 [label="Assert.IsTrue(LeanData.TryParsePath(dailyEquitiesPath, out symbol, out date, out resolution))", span="257-257", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_181 [label="var minuteEquitiesPath = ''Data/equity/usa/minute/googl/20070103_trade.zip''", span="264-264", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_182 [label="Assert.IsTrue(LeanData.TryParsePath(minuteEquitiesPath, out symbol, out date, out resolution))", span="265-265", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_188 [label="var cfdPath = ''Data/cfd/oanda/minute/bcousd/20160101_trade.zip''", span="272-272", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_189 [label="Assert.IsTrue(LeanData.TryParsePath(cfdPath, out symbol, out date, out resolution))", span="273-273", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_146 [label="var customPath = ''a/very/custom/path/forex/oanda/tick/eurusd/20170104_quote.zip''", span="224-224", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_145 [label="Resolution resolution", span="222-222", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_143 [label="DateTime date", span="220-220", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_144 [label="Symbol symbol", span="221-221", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_195 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_64 [label="VWAP = new IntradayVwap(name)", span="180-180", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_65 [label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144", cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_66 [label="Entry Unk.IsInstanceOf", span="", cluster="Unk.IsInstanceOf", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_115 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_116 [label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Cfd), TickType.Quote)", span="181-181", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_117 [label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Forex), TickType.Quote)", span="182-182", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_118 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_277 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_68 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="121-121", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_76 [label="decimal volume, averagePrice", span="214-214", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_70 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1431-1431", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_75 [label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", span="212-212", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_77 [label="!TryGetVolumeAndAveragePrice(input, out volume, out averagePrice)", span="215-215", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_5 [label="SymbolData data", span="62-62", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_231 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_207 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_10 [label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_252 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_67 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_202 [label="Assert.AreEqual(expected.Open, actual.Open)", span="291-291", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_203 [label="Assert.AreEqual(expected.High, actual.High)", span="292-292", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_204 [label="Assert.AreEqual(expected.Low, actual.Low)", span="293-293", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_205 [label="Assert.AreEqual(expected.Close, actual.Close)", span="294-294", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_200 [label="expected == null && actual != null", span="287-287", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_201 [label="Assert.Fail(''Expected null bar'')", span="289-289", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_198 [label="expected == null && actual == null", span="283-283", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_199 [label="return;", span="285-285", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_206 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", span="281-281", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_208 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_210 [label="return new List<LeanDataTestParameters>\r\n            {\r\n                // equity\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Tick, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_Trade_Tick.csv'', ''equity/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Second, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_second_trade.csv'', ''equity/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Minute, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_minute_trade.csv'', ''equity/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Hour, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Daily, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/daily''),\r\n\r\n                // equity option trades\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_tick_trade_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_tick_quote_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_second_trade_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_second_quote_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_minute_trade_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_minute_quote_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n\r\n                // forex\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_tick_quote.csv'', ''forex/fxcm/tick/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_second_quote.csv'', ''forex/fxcm/second/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_minute_quote.csv'', ''forex/fxcm/minute/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Hour, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Daily, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/daily''),\r\n\r\n                // cfd\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_tick_quote.csv'', ''cfd/fxcm/tick/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_second_quote.csv'', ''cfd/fxcm/second/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_minute_quote.csv'', ''cfd/fxcm/minute/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Hour, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Daily, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/daily''),\r\n\r\n                // Crypto - trades\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Tick, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_tick_trade.csv'', ''crypto/gdax/tick/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Second, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_second_trade.csv'', ''crypto/gdax/second/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Minute, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_minute_trade.csv'', ''crypto/gdax/minute/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Hour, TickType.Trade, ''btcusd_trade.zip'', ''btcusd_trade.csv'', ''crypto/gdax/hour''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Daily, TickType.Trade, ''btcusd_trade.zip'', ''btcusd_trade.csv'', ''crypto/gdax/daily''),\r\n\r\n                // Crypto -quotes\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_tick_quote.csv'', ''crypto/gdax/tick/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_second_quote.csv'', ''crypto/gdax/second/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_minute_quote.csv'', ''crypto/gdax/minute/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Hour, TickType.Quote, ''btcusd_quote.zip'', ''btcusd_quote.csv'', ''crypto/gdax/hour''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Daily, TickType.Quote, ''btcusd_quote.zip'', ''btcusd_quote.csv'', ''crypto/gdax/daily''),\r\n\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="300-349", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_209 [label="var date = new DateTime(2016, 02, 17)", span="299-299", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_211 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_228 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_110 [label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", span="", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_111 [label="QuantConnect.Symbol", span="", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_81 [label="_sumOfPriceTimesVolume = 0m", span="224-224", cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_114 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_230 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_141 [label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="801-801", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_220 [label="Entry TestCaseData.cstr", span="", cluster="TestCaseData.cstr", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_254 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_222 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="352-352", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_224 [label="return new List<LeanDataLineTestParameters>\r\n            {\r\n                //equity\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY, Value = 1, Quantity = 2, TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Equity, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Equity, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Equity, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // options\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, null, 0, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)) {Bid = null}, SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,,,,,0,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, null, 0, TimeSpan.FromDays(1)) {Ask = null}, SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,,,,,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new Tick(time, Symbols.SPY_P_192_Feb19_2016, 0, 1, 3) {Value = 2m, TickType = TickType.Quote, BidSize = 2, AskSize = 4, Exchange = ''EX'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,30000,4,EX,1''),\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY_P_192_Feb19_2016, Value = 1, Quantity = 2,TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // forex\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.EURUSD, BidPrice = 1, Value =1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Forex, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Forex, Resolution.Minute, ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Forex, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n\r\n                // cfd\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.DE10YBEUR, BidPrice = 1, Value = 1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Cfd, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Cfd, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Cfd, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n\r\n                // crypto - trades\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.BTCUSD, null, 0, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)) {Bid = null}, SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,,,,,0,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, null, 0, TimeSpan.FromDays(1)) {Ask = null}, SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5,,,,,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)), SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,5,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromDays(1)), SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new Tick(time, Symbols.BTCUSD, 0, 1, 3) {Value = 2m, TickType = TickType.Quote, BidSize = 2, AskSize = 4, Exchange = ''gdax'', Suspicious = false, Quantity = 5}, SecurityType.Crypto, Resolution.Tick,\r\n                    ''34200000,1,2,3,4,5''),\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.BTCUSD, Value = 1, Quantity = 2,TickType = TickType.Trade, Exchange = ''gdax'', Suspicious = false}, SecurityType.Crypto, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.BTCUSD, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.BTCUSD, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5''),\r\n\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="355-416", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_223 [label="var time = new DateTime(2016, 02, 18, 9, 30, 0)", span="354-354", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_225 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="352-352", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_278 [label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", span="", file="VolumeWeightedAveragePriceExecutionModel.cs"];
m30_279 [label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", span="", file="VolumeWeightedAveragePriceExecutionModel.cs"];
n44 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n44 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n44 -> n5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n44 -> n6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n44 -> n9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n44 -> n10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n44 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n44 -> n16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n44 -> n19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n44 -> n26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n44 -> n30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n0  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n7 -> n4  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n8 -> n11  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n12 -> n8  [key=0, style=bold, color=blue];
n13 -> n14  [key=0, style=solid];
n13 -> n16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n17 -> n13  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n19 -> n22  [key=2, style=dotted];
n20 -> n18  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n23 -> n26  [key=1, style=dashed, color=darkseagreen4, label=object];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=0, style=solid];
n24 -> n28  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n13  [key=2, style=dotted];
n25 -> n27  [key=0, style=solid];
n27 -> n23  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=2, style=dotted];
n30 -> n33  [key=2, style=dotted];
n31 -> n29  [key=0, style=bold, color=blue];
n34 -> n35  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n36 -> n34  [key=0, style=bold, color=blue];
n37 -> n38  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [key=2, style=dotted];
n39 -> n37  [key=0, style=bold, color=blue];
n41 -> n42  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n42 -> n40  [key=2, style=dotted];
n43 -> n41  [key=0, style=bold, color=blue];
d68 -> d69  [key=0, style=solid, color=green];
d68 -> d90  [key=2, style=dotted, color=green];
d26 -> d68  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityManager"];
d26 -> d27  [key=0, style=solid];
d26 -> d34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionManager"];
d26 -> d42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityManager"];
d26 -> d47  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>"];
d26 -> d107  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>"];
d26 -> d111  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>"];
d26 -> d114  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>"];
d26 -> d48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionManager"];
d26 -> d54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SymbolPropertiesDatabase"];
d26 -> d56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
d26 -> d58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.MarketHoursDatabase"];
d26 -> d60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionManager"];
d60 -> d68  [key=1, style=dashed, color=green, label=config];
d60 -> d66  [key=1, style=dashed, color=green, label=config];
d60 -> d67  [key=1, style=dashed, color=green, label=config];
d60 -> d61  [key=0, style=solid];
d60 -> d77  [key=2, style=dotted];
d60 -> d64  [key=1, style=dashed, color=darkseagreen4, label=config];
d64 -> d68  [key=0, style=solid, color=green];
d64 -> d70  [key=1, style=dashed, color=green, label=security];
d64 -> d87  [key=2, style=dotted];
d66 -> d68  [key=0, style=solid, color=green];
d66 -> d88  [key=2, style=dotted, color=green];
d66 -> d70  [key=1, style=dashed, color=green, label=security];
d67 -> d68  [key=0, style=solid, color=green];
d67 -> d89  [key=2, style=dotted, color=green];
d67 -> d70  [key=1, style=dashed, color=green, label=security];
d69 -> d70  [key=0, style=solid, color=green];
d69 -> d91  [key=2, style=dotted, color=green];
d137 -> d69  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Cash"];
d137 -> d3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d137 -> d122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
d50 -> d69  [key=1, style=dashed, color=green, label=symbol];
d50 -> d60  [key=1, style=dashed, color=darkseagreen4, label=symbol];
d50 -> d51  [key=0, style=solid];
d50 -> d71  [key=0, style=solid];
d50 -> d52  [key=1, style=dashed, color=darkseagreen4, label=symbol];
d50 -> d53  [key=1, style=dashed, color=darkseagreen4, label=symbol];
d50 -> d54  [key=1, style=dashed, color=darkseagreen4, label=symbol];
d50 -> d57  [key=1, style=dashed, color=darkseagreen4, label=symbol];
d50 -> d58  [key=1, style=dashed, color=darkseagreen4, label=symbol];
d70 -> d72  [key=0, style=solid, color=green];
d54 -> d66  [key=1, style=dashed, color=green, label=symbolProperties];
d54 -> d67  [key=1, style=dashed, color=green, label=symbolProperties];
d54 -> d64  [key=1, style=dashed, color=darkseagreen4, label=symbolProperties];
d54 -> d55  [key=0, style=solid];
d54 -> d82  [key=2, style=dotted];
d54 -> d56  [key=1, style=dashed, color=darkseagreen4, label=symbolProperties];
d54 -> d57  [key=1, style=dashed, color=darkseagreen4, label=symbolProperties];
d56 -> d66  [key=1, style=dashed, color=green, label=quoteCash];
d56 -> d67  [key=1, style=dashed, color=green, label=quoteCash];
d56 -> d64  [key=1, style=dashed, color=darkseagreen4, label=quoteCash];
d56 -> d57  [key=0, style=solid];
d56 -> d58  [key=0, style=solid];
d56 -> d83  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid, color=green];
d65 -> d67  [key=0, style=solid, color=green];
d59 -> d66  [key=1, style=dashed, color=green, label=exchangeHours];
d59 -> d67  [key=1, style=dashed, color=green, label=exchangeHours];
d59 -> d60  [key=0, style=solid];
d59 -> d64  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
d72 -> d26  [key=0, style=bold, color=blue];
d27 -> d28  [key=0, style=solid];
d27 -> d32  [key=0, style=solid];
d34 -> d35  [key=0, style=solid];
d34 -> d42  [key=0, style=solid];
d34 -> d73  [key=2, style=dotted];
d34 -> d93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d34 -> d36  [key=1, style=dashed, color=darkseagreen4, label=config];
d34 -> d38  [key=1, style=dashed, color=darkseagreen4, label=config];
d34 -> d39  [key=1, style=dashed, color=darkseagreen4, label=config];
d42 -> d43  [key=0, style=solid];
d42 -> d74  [key=2, style=dotted];
d42 -> d75  [key=2, style=dotted];
d42 -> d96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d42 -> d99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d42 -> d102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d42 -> d44  [key=1, style=dashed, color=darkseagreen4, label=markets];
d42 -> d45  [key=1, style=dashed, color=darkseagreen4, label=markets];
d42 -> d46  [key=1, style=dashed, color=darkseagreen4, label=markets];
d42 -> d47  [key=1, style=dashed, color=darkseagreen4, label=markets];
d42 -> d107  [key=1, style=dashed, color=darkseagreen4, label=markets];
d42 -> d111  [key=1, style=dashed, color=darkseagreen4, label=markets];
d42 -> d114  [key=1, style=dashed, color=darkseagreen4, label=markets];
d47 -> d50  [key=1, style=dashed, color=darkseagreen4, label=potentials];
d47 -> d48  [key=0, style=solid];
d47 -> d78  [key=2, style=dotted];
d47 -> d79  [key=2, style=dotted];
d47 -> d106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d47 -> d110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d47 -> d113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d107 -> d108  [key=0, style=solid];
d107 -> d109  [key=2, style=dotted];
d111 -> d112  [key=0, style=solid];
d111 -> d109  [key=2, style=dotted];
d114 -> d115  [key=0, style=solid];
d114 -> d109  [key=2, style=dotted];
d48 -> d60  [key=1, style=dashed, color=darkseagreen4, label=minimumResolution];
d48 -> d49  [key=0, style=solid];
d48 -> d78  [key=2, style=dotted];
d48 -> d80  [key=2, style=dotted];
d48 -> d81  [key=2, style=dotted];
d48 -> d116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d58 -> d60  [key=1, style=dashed, color=darkseagreen4, label=marketHoursDbEntry];
d58 -> d59  [key=0, style=solid];
d58 -> d86  [key=2, style=dotted];
d49 -> d60  [key=1, style=dashed, color=darkseagreen4, label=objectType];
d49 -> d50  [key=0, style=solid];
d61 -> d62  [key=0, style=solid];
d63 -> d64  [key=0, style=solid];
d63 -> d65  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d4 -> d5  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d5 -> d8  [key=2, style=dotted];
d10 -> d11  [key=0, style=solid];
d10 -> d12  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d13 -> d15  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d23 -> d24  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d28 -> d29  [key=0, style=solid];
d29 -> d30  [key=0, style=solid];
d30 -> d31  [key=0, style=solid];
d32 -> d33  [key=0, style=solid];
d32 -> d35  [key=1, style=dashed, color=darkseagreen4, label=normal];
d32 -> d51  [key=1, style=dashed, color=darkseagreen4, label=normal];
d33 -> d34  [key=0, style=solid];
d33 -> d38  [key=1, style=dashed, color=darkseagreen4, label=invert];
d33 -> d51  [key=1, style=dashed, color=darkseagreen4, label=invert];
d33 -> d52  [key=1, style=dashed, color=darkseagreen4, label=invert];
d36 -> d37  [key=0, style=solid];
d39 -> d40  [key=0, style=solid];
d40 -> d41  [key=0, style=solid];
d52 -> d53  [key=0, style=solid];
d71 -> d72  [key=0, style=solid];
d71 -> d7  [key=2, style=dotted];
d71 -> d92  [key=2, style=dotted];
d120 -> d121  [key=0, style=solid];
d122 -> d123  [key=0, style=solid];
d122 -> d126  [key=2, style=dotted];
d122 -> d127  [key=2, style=dotted];
d122 -> d125  [key=2, style=dotted];
d122 -> d128  [key=2, style=dotted];
d51 -> d50  [key=0, style=solid];
d51 -> d52  [key=0, style=solid];
d53 -> d54  [key=0, style=solid];
d53 -> d65  [key=1, style=dashed, color=darkseagreen4, label=securityType];
d53 -> d63  [key=1, style=dashed, color=darkseagreen4, label=securityType];
d57 -> d72  [key=0, style=solid];
d57 -> d84  [key=2, style=dotted];
d57 -> d85  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d31 -> d72  [key=0, style=solid];
d37 -> d72  [key=0, style=solid];
d41 -> d72  [key=0, style=solid];
d38 -> d34  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d35 -> d38  [key=0, style=solid];
d93 -> d94  [key=0, style=solid];
d43 -> d44  [key=0, style=solid];
d43 -> d45  [key=0, style=solid];
d43 -> d76  [key=2, style=dotted];
d96 -> d97  [key=0, style=solid];
d99 -> d100  [key=0, style=solid];
d102 -> d103  [key=0, style=solid];
d44 -> d77  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d45 -> d47  [key=0, style=solid];
d45 -> d46  [key=0, style=solid];
d45 -> d76  [key=2, style=dotted];
d46 -> d47  [key=0, style=solid];
d46 -> d77  [key=2, style=dotted];
d106 -> d107  [key=0, style=solid];
d110 -> d111  [key=0, style=solid];
d113 -> d114  [key=0, style=solid];
d138 -> d107  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>"];
d138 -> d111  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>"];
d138 -> d114  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>"];
d139 -> d107  [key=1, style=dashed, color=darkseagreen4, label=markets];
d139 -> d111  [key=1, style=dashed, color=darkseagreen4, label=markets];
d139 -> d114  [key=1, style=dashed, color=darkseagreen4, label=markets];
d108 -> d106  [key=0, style=bold, color=blue];
d112 -> d110  [key=0, style=bold, color=blue];
d115 -> d113  [key=0, style=bold, color=blue];
d116 -> d117  [key=0, style=solid];
d62 -> d63  [key=0, style=solid];
d0 -> d3  [key=1, style=dashed, color=darkseagreen4, label=decimal];
d0 -> d4  [key=1, style=dashed, color=darkseagreen4, label=decimal];
d0 -> d5  [key=1, style=dashed, color=darkseagreen4, label=string];
d0 -> d1  [key=0, style=solid];
d1 -> d3  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d6 -> d0  [key=0, style=bold, color=blue];
d9 -> d10  [key=0, style=solid];
d9 -> d12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
d11 -> d16  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d12 -> d15  [key=1, style=dashed, color=darkseagreen4, label=rate];
d12 -> d14  [key=1, style=dashed, color=darkseagreen4, label=rate];
d14 -> d15  [key=0, style=solid];
d14 -> d14  [key=1, style=dashed, color=darkseagreen4, label=rate];
d16 -> d9  [key=0, style=bold, color=blue];
d17 -> d18  [key=0, style=solid];
d17 -> d19  [key=1, style=dashed, color=darkseagreen4, label=decimal];
d21 -> d17  [key=0, style=bold, color=blue];
d22 -> d23  [key=0, style=solid];
d22 -> d24  [key=1, style=dashed, color=darkseagreen4, label=decimal];
d25 -> d22  [key=0, style=bold, color=blue];
d119 -> d120  [key=0, style=solid];
d121 -> d122  [key=0, style=solid];
d121 -> d121  [key=1, style=dashed, color=darkseagreen4, label=rate];
d121 -> d124  [key=2, style=dotted];
d121 -> d125  [key=2, style=dotted];
d123 -> d119  [key=0, style=bold, color=blue];
d95 -> d93  [key=0, style=bold, color=blue];
d94 -> d95  [key=0, style=solid];
d98 -> d96  [key=0, style=bold, color=blue];
d97 -> d98  [key=0, style=solid];
d101 -> d99  [key=0, style=bold, color=blue];
d100 -> d101  [key=0, style=solid];
d104 -> d102  [key=0, style=bold, color=blue];
d103 -> d104  [key=0, style=solid];
d103 -> d105  [key=2, style=dotted];
d118 -> d116  [key=0, style=bold, color=blue];
d117 -> d118  [key=0, style=solid];
d2 -> d6  [key=0, style=solid];
d2 -> d7  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_185  [key=2, style=dotted];
m0_184 -> m0_182  [key=0, style=bold, color=blue];
m0_56 -> m0_198  [key=0, style=solid];
m0_56 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_56 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m0_56 -> m0_45  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderEvent e"];
m0_56 -> m0_70  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderEvent e"];
m0_56 -> m0_86  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderEvent e"];
m0_56 -> m0_144  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderEvent e"];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_200  [key=0, style=solid];
m0_198 -> m0_156  [key=2, style=dotted];
m0_198 -> m0_194  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_202  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_203  [key=2, style=dotted];
m0_201 -> m0_56  [key=0, style=bold, color=blue];
m0_179 -> m0_180  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>"];
m0_33 -> m0_31  [key=0, style=bold, color=blue];
m0_176 -> m0_177  [key=0, style=solid];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m0_178 -> m0_176  [key=0, style=bold, color=blue];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_156  [key=2, style=dotted];
m0_181 -> m0_179  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_34 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_34 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_34 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_34 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_34 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_34 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_34 -> m0_48  [key=3, color=darkorchid, style=bold, label="method methodReturn bool PlaceOrder"];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_50  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_48  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_51  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_52  [key=2, style=dotted];
m0_41 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=orderId];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=0, style=solid];
m0_42 -> m0_53  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_54  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_55  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_44  [key=3, color=darkorchid, style=bold, label="Local variable int orderFee"];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_56  [key=2, style=dotted];
m0_47 -> m0_49  [key=0, style=solid];
m0_49 -> m0_34  [key=0, style=bold, color=blue];
m0_27 -> m0_28  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=2, style=dotted];
m0_28 -> m0_23  [key=2, style=dotted];
m0_28 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_29 -> m0_27  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_4  [key=2, style=dotted];
m0_8 -> m0_5  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=2, style=dotted];
m0_16 -> m0_14  [key=0, style=bold, color=blue];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_95  [key=0, style=solid];
m0_94 -> m0_154  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
m0_95 -> m0_48  [key=3, color=darkorchid, style=bold, label="Local variable bool stillNeedsScan"];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_153  [key=0, style=solid];
m0_96 -> m0_21  [key=2, style=dotted];
m0_96 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_153 -> m0_154  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m0_97 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m0_97 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_117  [key=1, style=dashed, color=red, label=order];
m0_97 -> m0_118  [key=1, style=dashed, color=red, label=order];
m0_97 -> m0_120  [key=1, style=dashed, color=red, label=order];
m0_97 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_141  [key=1, style=dashed, color=red, label=order];
m0_97 -> m0_142  [key=1, style=dashed, color=red, label=order];
m0_97 -> m0_143  [key=1, style=dashed, color=red, label=order];
m0_97 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_97 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_101  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_155  [key=2, style=dotted];
m0_99 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_103  [key=0, style=solid];
m0_101 -> m0_156  [key=2, style=dotted];
m0_102 -> m0_96  [key=0, style=solid];
m0_102 -> m0_90  [key=2, style=dotted];
m0_102 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_117  [key=1, style=dashed, color=red, label=order];
m0_102 -> m0_118  [key=1, style=dashed, color=red, label=order];
m0_102 -> m0_120  [key=1, style=dashed, color=red, label=order];
m0_102 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_141  [key=1, style=dashed, color=red, label=order];
m0_102 -> m0_142  [key=1, style=dashed, color=red, label=order];
m0_102 -> m0_143  [key=1, style=dashed, color=red, label=order];
m0_102 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_102 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_105  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_55  [key=2, style=dotted];
m0_105 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=fills];
m0_105 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=fills];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_111  [key=0, style=solid];
m0_107 -> m0_157  [key=2, style=dotted];
m0_107 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=security];
m0_107 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label=security];
m0_107 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=security];
m0_107 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=security];
m0_107 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=security];
m0_107 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=security];
m0_107 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=security];
m0_107 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=security];
m0_107 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label=security];
m0_107 -> m0_143  [key=1, style=dashed, color=red, label=security];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_155  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_55  [key=2, style=dotted];
m0_109 -> m0_56  [key=2, style=dotted];
m0_110 -> m0_96  [key=0, style=solid];
m0_110 -> m0_90  [key=2, style=dotted];
m0_110 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_117  [key=1, style=dashed, color=red, label=order];
m0_110 -> m0_118  [key=1, style=dashed, color=red, label=order];
m0_110 -> m0_120  [key=1, style=dashed, color=red, label=order];
m0_110 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_141  [key=1, style=dashed, color=red, label=order];
m0_110 -> m0_142  [key=1, style=dashed, color=red, label=order];
m0_110 -> m0_143  [key=1, style=dashed, color=red, label=order];
m0_110 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_96  [key=0, style=solid];
m0_111 -> m0_158  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_121  [key=0, style=solid];
m0_113 -> m0_159  [key=2, style=dotted];
m0_113 -> m0_143  [key=1, style=dashed, color=red, label=hasSufficientBuyingPowerResult];
m0_116 -> m0_117  [key=0, style=solid, color=red];
m0_116 -> m0_90  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid, color=red];
m0_118 -> m0_119  [key=0, style=solid, color=red];
m0_118 -> m0_55  [key=2, style=dotted, color=red];
m0_118 -> m0_56  [key=2, style=dotted, color=red];
m0_120 -> m0_96  [key=0, style=solid, color=red];
m0_120 -> d92  [key=2, style=dotted, color=red];
m0_120 -> m0_162  [key=2, style=dotted, color=red];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_126  [key=0, style=solid];
m0_123 -> m0_128  [key=0, style=solid];
m0_123 -> m0_130  [key=0, style=solid];
m0_123 -> m0_132  [key=0, style=solid];
m0_123 -> m0_134  [key=0, style=solid];
m0_123 -> m0_136  [key=0, style=solid];
m0_125 -> m0_139  [key=0, style=solid];
m0_125 -> m0_144  [key=0, style=solid];
m0_125 -> m0_163  [key=2, style=dotted];
m0_127 -> m0_139  [key=0, style=solid];
m0_127 -> m0_144  [key=0, style=solid];
m0_127 -> m0_164  [key=2, style=dotted];
m0_129 -> m0_139  [key=0, style=solid];
m0_129 -> m0_144  [key=0, style=solid];
m0_129 -> m0_165  [key=2, style=dotted];
m0_131 -> m0_139  [key=0, style=solid];
m0_131 -> m0_144  [key=0, style=solid];
m0_131 -> m0_166  [key=2, style=dotted];
m0_133 -> m0_139  [key=0, style=solid];
m0_133 -> m0_144  [key=0, style=solid];
m0_133 -> m0_167  [key=2, style=dotted];
m0_135 -> m0_139  [key=0, style=solid];
m0_135 -> m0_144  [key=0, style=solid];
m0_135 -> m0_168  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_144  [key=0, style=solid];
m0_138 -> m0_169  [key=2, style=dotted];
m0_138 -> m0_170  [key=2, style=dotted];
m0_138 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=fills];
m0_141 -> m0_144  [key=0, style=solid, color=red];
m0_141 -> m0_171  [key=2, style=dotted, color=red];
m0_141 -> m0_162  [key=2, style=dotted, color=red];
m0_142 -> m0_143  [key=0, style=solid, color=red];
m0_143 -> m0_144  [key=0, style=solid, color=red];
m0_143 -> m0_172  [key=2, style=dotted, color=red];
m0_143 -> m0_173  [key=2, style=dotted, color=red];
m0_143 -> m0_162  [key=2, style=dotted, color=red];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_147  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_144  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_151 -> m0_96  [key=0, style=solid];
m0_151 -> m0_90  [key=2, style=dotted];
m0_151 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_96  [key=0, style=solid];
m0_100 -> m0_90  [key=2, style=dotted];
m0_100 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m0_100 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_117  [key=1, style=dashed, color=red, label=order];
m0_100 -> m0_118  [key=1, style=dashed, color=red, label=order];
m0_100 -> m0_120  [key=1, style=dashed, color=red, label=order];
m0_100 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_141  [key=1, style=dashed, color=red, label=order];
m0_100 -> m0_142  [key=1, style=dashed, color=red, label=order];
m0_100 -> m0_143  [key=1, style=dashed, color=red, label=order];
m0_100 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_100 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_104 -> m0_96  [key=0, style=solid];
m0_104 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
m0_106 -> m0_107  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_150  [key=0, style=solid];
m0_144 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label=fill];
m0_144 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=fill];
m0_144 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label=fill];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_152  [key=0, style=solid];
m0_150 -> m0_175  [key=2, style=dotted];
m0_150 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=model];
m0_122 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=model];
m0_122 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=model];
m0_122 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=model];
m0_122 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=model];
m0_122 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=model];
m0_137 -> m0_138  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_142  [key=0, style=solid, color=red];
m0_115 -> m0_116  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid, color=red];
m0_119 -> m0_160  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_130 -> m0_131  [key=0, style=solid];
m0_132 -> m0_133  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid, color=red];
m0_140 -> m0_160  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_56  [key=2, style=dotted];
m0_149 -> m0_144  [key=0, style=solid];
m0_149 -> m0_174  [key=2, style=dotted];
m0_152 -> m0_96  [key=0, style=solid];
m0_152 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
m0_154 -> m0_91  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation"];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_4  [key=2, style=dotted];
m0_13 -> m0_9  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=2, style=dotted];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_57 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_57 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_57 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_57 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_57 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_57 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_57 -> m0_48  [key=3, color=darkorchid, style=bold, label="method methodReturn bool UpdateOrder"];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_60  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_50  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_64  [key=0, style=solid];
m0_62 -> m0_74  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_51  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_52  [key=2, style=dotted];
m0_66 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=orderId];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_69  [key=0, style=solid];
m0_67 -> m0_53  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_54  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_55  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_63 -> m0_73  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_44  [key=3, color=darkorchid, style=bold, label="Local variable int orderFee"];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_56  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_57  [key=0, style=bold, color=blue];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
m0_186 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_189  [key=0, style=solid];
m0_187 -> m0_194  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_195  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_196  [key=2, style=dotted];
m0_188 -> m0_193  [key=0, style=solid];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_197  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_50  [key=2, style=dotted];
m0_193 -> m0_186  [key=0, style=bold, color=blue];
m0_204 -> m0_205  [key=0, style=solid];
m0_205 -> m0_204  [key=0, style=bold, color=blue];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_75 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_75 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_75 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_75 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_75 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_75 -> m0_48  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CancelOrder"];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_78  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_50  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_82  [key=0, style=solid];
m0_80 -> m0_90  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_52  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_85  [key=0, style=solid];
m0_83 -> m0_53  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_52  [key=2, style=dotted];
m0_84 -> m0_54  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_55  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_81 -> m0_89  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_44  [key=3, color=darkorchid, style=bold, label="Local variable int orderFee"];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_56  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_89 -> m0_75  [key=0, style=bold, color=blue];
m0_206 -> m0_207  [key=0, style=solid];
m0_207 -> m0_206  [key=0, style=bold, color=blue];
m0_51 -> m0_208  [key=0, style=solid];
m0_51 -> m0_34  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m0_51 -> m0_57  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_210  [key=2, style=dotted];
m0_209 -> m0_51  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_19 -> m0_22  [key=2, style=dotted];
m0_19 -> m0_23  [key=2, style=dotted];
m0_19 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_19 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_211 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_118  [key=1, style=dashed, color=red, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_120  [key=1, style=dashed, color=red, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_141  [key=1, style=dashed, color=red, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_143  [key=1, style=dashed, color=red, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m0_211 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_11  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.InsightDirection"];
m2_2 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_2 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m2_2 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=2, style=dotted];
m2_5 -> m2_8  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_12  [key=2, style=dotted];
m2_9 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory"];
m2_9 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory"];
m2_9 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory"];
m2_10 -> m2_2  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldEmitInsight"];
m2_18 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_18 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m2_18 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m2_18 -> m2_27  [key=0, style=solid];
m2_18 -> m2_30  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldEmitInsight"];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_31  [key=0, style=solid];
m2_28 -> m2_34  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_30 -> m2_33  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_18  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>"];
m2_1 -> m2_2  [key=0, style=solid];
m2_25 -> m2_2  [key=3, color=darkorchid, style=bold, label="Field variable double? _confidence"];
m2_13 -> m2_16  [key=0, style=bold, color=green];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m2_16 -> m2_14  [key=0, style=solid, color=green];
m2_16 -> m2_19  [key=2, style=dotted, color=green];
m2_14 -> m2_16  [key=1, style=dashed, color=green, label=security];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_17  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid, color=green];
m2_15 -> m2_14  [key=0, style=solid];
m2_15 -> m2_18  [key=2, style=dotted];
m2_17 -> m2_13  [key=0, style=bold, color=blue];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_25  [key=2, style=dotted];
m2_23 -> m2_22  [key=0, style=solid];
m2_23 -> m2_26  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=0, style=solid];
m2_24 -> m2_20  [key=0, style=bold, color=blue];
m2_35 -> m2_16  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m2_35 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m4_200 -> m4_201  [key=0, style=solid];
m4_200 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m4_200 -> m4_205  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m4_200 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m4_200 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m4_200 -> m4_192  [key=3, color=darkorchid, style=bold, label="Parameter variable DateTimeZone timeZone"];
m4_201 -> m4_202  [key=0, style=solid];
m4_201 -> m4_203  [key=0, style=solid];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_205  [key=0, style=solid];
m4_205 -> m4_206  [key=0, style=solid];
m4_205 -> m4_211  [key=2, style=dotted];
m4_206 -> m4_207  [key=0, style=solid];
m4_206 -> m4_33  [key=2, style=dotted];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_212  [key=2, style=dotted];
m4_202 -> m4_208  [key=0, style=solid];
m4_202 -> m4_209  [key=2, style=dotted];
m4_204 -> m4_208  [key=0, style=solid];
m4_204 -> m4_210  [key=2, style=dotted];
m4_208 -> m4_200  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_29  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_30  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_31  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_32  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_33  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_34  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_35  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_36  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_37  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_38  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_39  [key=2, style=dotted];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_40  [key=2, style=dotted];
m4_15 -> m4_16  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_41  [key=2, style=dotted];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_42  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_43  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_44  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_45  [key=2, style=dotted];
m4_21 -> m4_46  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_47  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_48  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_49  [key=2, style=dotted];
m4_24 -> m4_39  [key=2, style=dotted];
m4_24 -> m4_50  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_51  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_52  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_53  [key=2, style=dotted];
m4_28 -> m4_0  [key=0, style=bold, color=blue];
m4_333 -> m4_334  [key=0, style=solid];
m4_333 -> m4_35  [key=3, color=darkorchid, style=bold, label="method methodReturn bool GetLocked"];
m4_334 -> m4_335  [key=0, style=solid];
m4_335 -> m4_333  [key=0, style=bold, color=blue];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_191 -> m4_195  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_192 -> m4_193  [key=0, style=solid];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_196  [key=0, style=solid];
m4_195 -> m4_197  [key=0, style=solid];
m4_195 -> m4_198  [key=2, style=dotted];
m4_195 -> m4_199  [key=2, style=dotted];
m4_194 -> m4_195  [key=0, style=solid];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_200  [key=2, style=dotted];
m4_197 -> m4_191  [key=0, style=bold, color=blue];
m4_449 -> m4_450  [key=0, style=solid];
m4_449 -> m4_381  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Securities.Crypto.Crypto AddCrypto"];
m4_450 -> m4_451  [key=0, style=solid];
m4_450 -> m4_381  [key=2, style=dotted];
m4_451 -> m4_449  [key=0, style=bold, color=blue];
m4_104 -> m4_105  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_107  [key=0, style=solid];
m4_106 -> m4_105  [key=0, style=solid];
m4_106 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label=dataFeed];
m4_107 -> m4_104  [key=0, style=bold, color=blue];
m4_497 -> m4_498  [key=0, style=solid];
m4_497 -> m4_403  [key=2, style=dotted];
m4_493 -> m4_494  [key=0, style=solid];
m4_493 -> m4_495  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_493 -> m4_496  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_493 -> m4_497  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m4_493 -> m4_490  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
m4_494 -> m4_495  [key=0, style=solid];
m4_494 -> m4_401  [key=2, style=dotted];
m4_494 -> m4_497  [key=1, style=dashed, color=darkseagreen4, label=marketHoursDbEntry];
m4_495 -> m4_496  [key=0, style=solid];
m4_495 -> m4_500  [key=2, style=dotted];
m4_495 -> m4_501  [key=2, style=dotted];
m4_495 -> m4_497  [key=1, style=dashed, color=darkseagreen4, label=symbolObject];
m4_496 -> m4_497  [key=0, style=solid];
m4_496 -> m4_402  [key=2, style=dotted];
m4_498 -> m4_499  [key=0, style=solid];
m4_498 -> m4_80  [key=2, style=dotted];
m4_499 -> m4_493  [key=0, style=bold, color=blue];
m4_533 -> m4_534  [key=0, style=solid];
m4_534 -> m4_535  [key=0, style=solid];
m4_534 -> m4_536  [key=2, style=dotted];
m4_535 -> m4_533  [key=0, style=bold, color=blue];
m4_261 -> m4_262  [key=0, style=solid];
m4_262 -> m4_263  [key=0, style=solid];
m4_262 -> m4_264  [key=2, style=dotted];
m4_263 -> m4_261  [key=0, style=bold, color=blue];
m4_38 -> m4_45  [key=3, color=darkorchid, style=bold, label="Field variable string _previousDebugMessage"];
m4_38 -> m4_218  [key=3, color=darkorchid, style=bold, label="Field variable string _previousDebugMessage"];
m4_287 -> m4_288  [key=0, style=solid];
m4_288 -> m4_289  [key=0, style=solid];
m4_288 -> m4_30  [key=2, style=dotted];
m4_289 -> m4_290  [key=0, style=solid];
m4_289 -> m4_31  [key=2, style=dotted];
m4_289 -> m4_294  [key=2, style=dotted];
m4_289 -> m4_295  [key=2, style=dotted];
m4_289 -> m4_289  [key=1, style=dashed, color=darkseagreen4, label=end];
m4_290 -> m4_291  [key=0, style=solid];
m4_290 -> m4_293  [key=0, style=solid];
m4_290 -> m4_296  [key=2, style=dotted];
m4_291 -> m4_292  [key=0, style=solid];
m4_292 -> m4_293  [key=0, style=solid];
m4_292 -> m4_209  [key=2, style=dotted];
m4_293 -> m4_287  [key=0, style=bold, color=blue];
m4_165 -> m4_166  [key=0, style=solid];
m4_166 -> m4_165  [key=0, style=bold, color=blue];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_226  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.IBrokerageModel"];
m4_224 -> m4_225  [key=0, style=solid];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_49  [key=2, style=dotted];
m4_226 -> m4_50  [key=2, style=dotted];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_231  [key=0, style=solid];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_231  [key=0, style=solid];
m4_227 -> m4_229  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_227 -> m4_230  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> m4_230  [key=1, style=dashed, color=darkseagreen4, label=leverage];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_232  [key=2, style=dotted];
m4_230 -> m4_227  [key=0, style=solid];
m4_230 -> m4_233  [key=2, style=dotted];
m4_231 -> m4_223  [key=0, style=bold, color=blue];
m4_265 -> m4_266  [key=0, style=solid];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_264  [key=2, style=dotted];
m4_267 -> m4_265  [key=0, style=bold, color=blue];
m4_296 -> m4_317  [key=0, style=solid];
m4_296 -> m4_319  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_296 -> m4_322  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_296 -> m4_324  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_296 -> m4_288  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime end"];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_319  [key=0, style=solid];
m4_319 -> m4_320  [key=0, style=solid];
m4_319 -> m4_321  [key=0, style=solid];
m4_319 -> m4_31  [key=2, style=dotted];
m4_322 -> m4_323  [key=0, style=solid];
m4_322 -> m4_324  [key=0, style=solid];
m4_324 -> m4_325  [key=0, style=solid];
m4_324 -> m4_46  [key=2, style=dotted];
m4_324 -> m4_315  [key=2, style=dotted];
m4_324 -> m4_31  [key=2, style=dotted];
m4_324 -> m4_329  [key=2, style=dotted];
m4_324 -> m4_324  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_324 -> m4_326  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_318 -> m4_328  [key=0, style=solid];
m4_320 -> m4_321  [key=0, style=solid];
m4_320 -> m4_31  [key=2, style=dotted];
m4_320 -> m4_322  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_320 -> m4_324  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_321 -> m4_322  [key=0, style=solid];
m4_321 -> m4_324  [key=0, style=solid];
m4_321 -> m4_314  [key=2, style=dotted];
m4_323 -> m4_328  [key=0, style=solid];
m4_323 -> m4_209  [key=2, style=dotted];
m4_325 -> m4_326  [key=0, style=solid];
m4_325 -> m4_327  [key=0, style=solid];
m4_326 -> m4_328  [key=0, style=solid];
m4_327 -> m4_328  [key=0, style=solid];
m4_327 -> m4_209  [key=2, style=dotted];
m4_328 -> m4_296  [key=0, style=bold, color=blue];
m4_346 -> m4_347  [key=0, style=solid];
m4_347 -> m4_348  [key=0, style=solid];
m4_348 -> m4_349  [key=0, style=solid];
m4_348 -> m4_345  [key=2, style=dotted];
m4_349 -> m4_346  [key=0, style=bold, color=blue];
m4_179 -> m4_180  [key=0, style=solid];
m4_180 -> m4_179  [key=0, style=bold, color=blue];
m4_525 -> m4_526  [key=0, style=solid];
m4_526 -> m4_527  [key=0, style=solid];
m4_526 -> m4_218  [key=2, style=dotted];
m4_527 -> m4_528  [key=0, style=solid];
m4_528 -> m4_525  [key=0, style=bold, color=blue];
m4_452 -> m4_453  [key=0, style=solid];
m4_452 -> m4_454  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_452 -> m4_459  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_452 -> m4_478  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_452 -> m4_461  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_452 -> m4_462  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_452 -> m4_463  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_453 -> m4_454  [key=0, style=solid];
m4_453 -> m4_79  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Securities.Security security"];
m4_454 -> m4_455  [key=0, style=solid];
m4_454 -> m4_468  [key=0, style=solid];
m4_454 -> m4_78  [key=2, style=dotted];
m4_454 -> m4_456  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_454 -> m4_457  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_454 -> m4_458  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_459 -> m4_460  [key=0, style=solid];
m4_459 -> m4_473  [key=2, style=dotted];
m4_459 -> m4_142  [key=2, style=dotted];
m4_459 -> m4_477  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_459 -> m4_461  [key=1, style=dashed, color=darkseagreen4, label=universe];
m4_459 -> m4_466  [key=1, style=dashed, color=darkseagreen4, label=universe];
m4_461 -> m4_462  [key=0, style=solid];
m4_461 -> m4_474  [key=2, style=dotted];
m4_461 -> m4_467  [key=1, style=dashed, color=darkseagreen4, label=ret];
m4_462 -> m4_463  [key=0, style=solid];
m4_462 -> m4_466  [key=0, style=solid];
m4_463 -> m4_464  [key=0, style=solid];
m4_463 -> m4_475  [key=2, style=dotted];
m4_455 -> m4_456  [key=0, style=solid];
m4_455 -> m4_470  [key=2, style=dotted];
m4_468 -> m4_469  [key=0, style=solid];
m4_456 -> m4_457  [key=0, style=solid];
m4_456 -> m4_471  [key=2, style=dotted];
m4_457 -> m4_458  [key=0, style=solid];
m4_457 -> m4_459  [key=0, style=solid];
m4_458 -> m4_459  [key=0, style=solid];
m4_458 -> m4_472  [key=2, style=dotted];
m4_460 -> m4_461  [key=0, style=solid];
m4_460 -> m4_468  [key=0, style=solid];
m4_466 -> m4_467  [key=0, style=solid];
m4_466 -> m4_476  [key=2, style=dotted];
m4_466 -> m4_481  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_467 -> m4_469  [key=0, style=solid];
m4_464 -> m4_465  [key=0, style=solid];
m4_464 -> m4_79  [key=2, style=dotted];
m4_465 -> m4_466  [key=0, style=solid];
m4_465 -> m4_80  [key=2, style=dotted];
m4_469 -> m4_452  [key=0, style=bold, color=blue];
m4_167 -> m4_168  [key=0, style=solid];
m4_168 -> m4_167  [key=0, style=bold, color=blue];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_91 -> m4_92  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_94  [key=2, style=dotted];
m4_92 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label=value];
m4_93 -> m4_90  [key=0, style=bold, color=blue];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_275  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_276  [key=0, style=solid];
m4_275 -> m4_277  [key=0, style=solid];
m4_275 -> m4_278  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_209  [key=2, style=dotted];
m4_277 -> m4_273  [key=0, style=bold, color=blue];
m4_213 -> m4_214  [key=0, style=solid];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_216  [key=0, style=solid];
m4_215 -> m4_217  [key=0, style=solid];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_218  [key=2, style=dotted];
m4_217 -> m4_213  [key=0, style=bold, color=blue];
m4_123 -> m4_124  [key=0, style=solid];
m4_124 -> m4_125  [key=0, style=solid];
m4_125 -> m4_123  [key=0, style=bold, color=blue];
m4_487 -> m4_488  [key=0, style=solid];
m4_488 -> m4_489  [key=0, style=solid];
m4_488 -> m4_490  [key=2, style=dotted];
m4_489 -> m4_487  [key=0, style=bold, color=blue];
m4_484 -> m4_485  [key=0, style=solid];
m4_87 -> m4_88  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
m4_89 -> m4_87  [key=0, style=bold, color=blue];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_122  [key=2, style=dotted];
m4_119 -> m4_120  [key=0, style=solid];
m4_121 -> m4_119  [key=0, style=bold, color=blue];
m4_148 -> m4_149  [key=0, style=solid];
m4_151 -> m4_152  [key=0, style=solid];
m4_154 -> m4_155  [key=0, style=solid];
m4_158 -> m4_159  [key=0, style=solid];
m4_149 -> m4_150  [key=0, style=solid];
m4_150 -> m4_148  [key=0, style=bold, color=blue];
m4_152 -> m4_153  [key=0, style=solid];
m4_153 -> m4_151  [key=0, style=bold, color=blue];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_157  [key=2, style=dotted];
m4_156 -> m4_154  [key=0, style=bold, color=blue];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_157  [key=2, style=dotted];
m4_160 -> m4_158  [key=0, style=bold, color=blue];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_252  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
m4_251 -> m4_252  [key=0, style=solid];
m4_253 -> m4_251  [key=0, style=bold, color=blue];
m4_478 -> m4_479  [key=0, style=solid];
m4_478 -> m4_480  [key=2, style=dotted];
m4_477 -> m4_478  [key=0, style=solid];
m4_481 -> m4_482  [key=0, style=solid];
m4_479 -> m4_477  [key=0, style=bold, color=blue];
m4_482 -> m4_483  [key=0, style=solid];
m4_482 -> m4_476  [key=2, style=dotted];
m4_482 -> m4_484  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_483 -> m4_481  [key=0, style=bold, color=blue];
m4_485 -> m4_486  [key=0, style=solid];
m4_486 -> m4_484  [key=0, style=bold, color=blue];
m4_185 -> m4_186  [key=0, style=solid];
m4_186 -> m4_185  [key=0, style=bold, color=blue];
m4_555 -> m4_556  [key=0, style=solid];
m4_555 -> m4_558  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IHistoryProvider"];
m4_556 -> m4_557  [key=0, style=solid];
m4_556 -> m4_558  [key=0, style=solid];
m4_558 -> m4_559  [key=0, style=solid];
m4_557 -> m4_559  [key=0, style=solid];
m4_557 -> m4_210  [key=2, style=dotted];
m4_559 -> m4_555  [key=0, style=bold, color=blue];
m4_239 -> m4_240  [key=0, style=solid];
m4_239 -> m4_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m4_239 -> m4_242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m4_240 -> m4_241  [key=0, style=solid];
m4_241 -> m4_242  [key=0, style=solid];
m4_241 -> m4_244  [key=2, style=dotted];
m4_242 -> m4_243  [key=0, style=solid];
m4_242 -> m4_77  [key=2, style=dotted];
m4_243 -> m4_239  [key=0, style=bold, color=blue];
m4_245 -> m4_246  [key=0, style=solid];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_250  [key=2, style=dotted];
m4_246 -> m4_246  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_246 -> m4_252  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_246 -> m4_248  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_142  [key=2, style=dotted];
m4_247 -> m4_251  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_77  [key=2, style=dotted];
m4_249 -> m4_245  [key=0, style=bold, color=blue];
m4_218 -> m4_502  [key=0, style=solid];
m4_218 -> m4_504  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_218 -> m4_505  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_218 -> m4_216  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
m4_502 -> m4_503  [key=0, style=solid];
m4_502 -> m4_504  [key=0, style=solid];
m4_504 -> m4_505  [key=0, style=solid];
m4_504 -> m4_507  [key=2, style=dotted];
m4_505 -> m4_506  [key=0, style=solid];
m4_503 -> m4_506  [key=0, style=solid];
m4_506 -> m4_218  [key=0, style=bold, color=blue];
m4_187 -> m4_188  [key=0, style=solid];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_190  [key=2, style=dotted];
m4_189 -> m4_187  [key=0, style=bold, color=blue];
m4_508 -> m4_509  [key=0, style=solid];
m4_508 -> m4_511  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_509 -> m4_510  [key=0, style=solid];
m4_509 -> m4_511  [key=0, style=solid];
m4_511 -> m4_512  [key=0, style=solid];
m4_511 -> m4_507  [key=2, style=dotted];
m4_510 -> m4_512  [key=0, style=solid];
m4_512 -> m4_508  [key=0, style=bold, color=blue];
m4_175 -> m4_176  [key=0, style=solid];
m4_176 -> m4_175  [key=0, style=bold, color=blue];
m4_257 -> m4_258  [key=0, style=solid];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_260  [key=2, style=dotted];
m4_259 -> m4_257  [key=0, style=bold, color=blue];
m4_254 -> m4_255  [key=0, style=solid];
m4_255 -> m4_256  [key=0, style=solid];
m4_256 -> m4_254  [key=0, style=bold, color=blue];
m4_112 -> m4_113  [key=0, style=solid];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_115  [key=2, style=dotted];
m4_113 -> m4_108  [key=2, style=dotted];
m4_114 -> m4_112  [key=0, style=bold, color=blue];
m4_177 -> m4_178  [key=0, style=solid];
m4_178 -> m4_177  [key=0, style=bold, color=blue];
m4_163 -> m4_164  [key=0, style=solid];
m4_164 -> m4_163  [key=0, style=bold, color=blue];
m4_161 -> m4_162  [key=0, style=solid];
m4_162 -> m4_161  [key=0, style=bold, color=blue];
m4_103 -> m4_513  [key=0, style=solid];
m4_103 -> m4_515  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_103 -> m4_516  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_513 -> m4_514  [key=0, style=solid];
m4_513 -> m4_515  [key=0, style=solid];
m4_515 -> m4_516  [key=0, style=solid];
m4_515 -> m4_507  [key=2, style=dotted];
m4_516 -> m4_517  [key=0, style=solid];
m4_514 -> m4_517  [key=0, style=solid];
m4_517 -> m4_103  [key=0, style=bold, color=blue];
m4_181 -> m4_182  [key=0, style=solid];
m4_182 -> m4_181  [key=0, style=bold, color=blue];
m4_297 -> m4_298  [key=0, style=solid];
m4_298 -> m4_299  [key=0, style=solid];
m4_299 -> m4_297  [key=0, style=bold, color=blue];
m4_353 -> m4_354  [key=0, style=solid];
m4_353 -> m4_350  [key=3, color=darkorchid, style=bold, label="Parameter variable bool extendedMarketHours"];
m4_353 -> m4_351  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
m4_353 -> m4_356  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Securities.Security AddSecurity"];
m4_354 -> m4_355  [key=0, style=solid];
m4_354 -> m4_356  [key=2, style=dotted];
m4_355 -> m4_353  [key=0, style=bold, color=blue];
m4_565 -> m4_566  [key=0, style=solid];
m4_566 -> m4_567  [key=0, style=solid];
m4_567 -> m4_565  [key=0, style=bold, color=blue];
m4_378 -> m4_379  [key=0, style=solid];
m4_378 -> m4_381  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Securities.Equity.Equity AddEquity"];
m4_379 -> m4_380  [key=0, style=solid];
m4_379 -> m4_381  [key=2, style=dotted];
m4_380 -> m4_378  [key=0, style=bold, color=blue];
m4_279 -> m4_280  [key=0, style=solid];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_30  [key=2, style=dotted];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=start];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_285  [key=0, style=solid];
m4_282 -> m4_286  [key=2, style=dotted];
m4_283 -> m4_284  [key=0, style=solid];
m4_284 -> m4_285  [key=0, style=solid];
m4_284 -> m4_209  [key=2, style=dotted];
m4_285 -> m4_279  [key=0, style=bold, color=blue];
m4_58 -> m4_59  [key=0, style=solid];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_67  [key=0, style=solid];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_62  [key=0, style=solid];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_76  [key=0, style=solid];
m4_67 -> m4_82  [key=2, style=dotted];
m4_67 -> m4_83  [key=2, style=dotted];
m4_67 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_67 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label=option];
m4_67 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=option];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_77  [key=2, style=dotted];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_79  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Securities.Security security"];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_66  [key=0, style=solid];
m4_63 -> m4_78  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_79  [key=2, style=dotted];
m4_64 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_81  [key=2, style=dotted];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_80  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=underlying];
m4_68 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label=underlying];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_85  [key=2, style=dotted];
m4_71 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label=equity];
m4_71 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label=equity];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=option];
m4_69 -> m4_70  [key=0, style=solid];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_72  [key=0, style=solid];
m4_70 -> m4_84  [key=2, style=dotted];
m4_70 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label=equity];
m4_70 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label=equity];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_67  [key=0, style=solid];
m4_75 -> m4_67  [key=0, style=solid];
m4_75 -> m4_86  [key=2, style=dotted];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_74  [key=3, color=darkorchid, style=bold, label="Local variable int periods"];
m4_76 -> m4_58  [key=0, style=bold, color=blue];
m4_433 -> m4_434  [key=0, style=solid];
m4_434 -> m4_435  [key=0, style=solid];
m4_434 -> m4_377  [key=2, style=dotted];
m4_434 -> m4_438  [key=1, style=dashed, color=darkseagreen4, label=option];
m4_434 -> m4_439  [key=1, style=dashed, color=darkseagreen4, label=option];
m4_434 -> m4_440  [key=1, style=dashed, color=darkseagreen4, label=option];
m4_434 -> m4_441  [key=1, style=dashed, color=darkseagreen4, label=option];
m4_435 -> m4_436  [key=0, style=solid];
m4_435 -> m4_437  [key=1, style=dashed, color=darkseagreen4, label=underlying];
m4_435 -> m4_438  [key=1, style=dashed, color=darkseagreen4, label=underlying];
m4_438 -> m4_439  [key=0, style=solid];
m4_438 -> m4_378  [key=2, style=dotted];
m4_439 -> m4_440  [key=0, style=solid];
m4_440 -> m4_441  [key=0, style=solid];
m4_440 -> m4_80  [key=2, style=dotted];
m4_441 -> m4_442  [key=0, style=solid];
m4_436 -> m4_437  [key=0, style=solid];
m4_436 -> m4_378  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Securities.Security equity"];
m4_437 -> m4_438  [key=0, style=solid];
m4_437 -> m4_439  [key=0, style=solid];
m4_437 -> m4_78  [key=2, style=dotted];
m4_442 -> m4_433  [key=0, style=bold, color=blue];
m4_171 -> m4_172  [key=0, style=solid];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> m4_174  [key=2, style=dotted];
m4_172 -> m4_169  [key=2, style=dotted];
m4_173 -> m4_171  [key=0, style=bold, color=blue];
m4_79 -> m4_547  [key=0, style=solid];
m4_547 -> m4_548  [key=0, style=solid];
m4_548 -> m4_549  [key=0, style=solid];
m4_548 -> m4_550  [key=0, style=solid];
m4_549 -> m4_552  [key=0, style=solid];
m4_550 -> m4_551  [key=0, style=solid];
m4_550 -> d109  [key=2, style=dotted];
m4_550 -> m4_476  [key=2, style=dotted];
m4_550 -> m4_550  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m4_551 -> m4_552  [key=0, style=solid];
m4_552 -> m4_553  [key=0, style=solid];
m4_552 -> m4_377  [key=2, style=dotted];
m4_553 -> m4_79  [key=0, style=bold, color=blue];
m4_336 -> m4_337  [key=0, style=solid];
m4_336 -> m4_338  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_336 -> m4_339  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_336 -> m4_340  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_336 -> m4_341  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_337 -> m4_338  [key=0, style=solid];
m4_337 -> m4_344  [key=0, style=solid];
m4_338 -> m4_339  [key=0, style=solid];
m4_339 -> m4_340  [key=0, style=solid];
m4_339 -> m4_40  [key=2, style=dotted];
m4_340 -> m4_341  [key=0, style=solid];
m4_340 -> m4_345  [key=2, style=dotted];
m4_341 -> m4_342  [key=0, style=solid];
m4_341 -> m4_344  [key=0, style=solid];
m4_342 -> m4_343  [key=0, style=solid];
m4_343 -> m4_344  [key=0, style=solid];
m4_344 -> m4_336  [key=0, style=bold, color=blue];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_101  [key=2, style=dotted];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_100  [key=0, style=solid];
m4_97 -> m4_102  [key=2, style=dotted];
m4_98 -> m4_99  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_103  [key=2, style=dotted];
m4_100 -> m4_95  [key=0, style=bold, color=blue];
m4_219 -> m4_220  [key=0, style=solid];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_222  [key=2, style=dotted];
m4_220 -> m4_223  [key=2, style=dotted];
m4_221 -> m4_219  [key=0, style=bold, color=blue];
m4_54 -> m4_55  [key=0, style=solid];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_57  [key=2, style=dotted];
m4_56 -> m4_54  [key=0, style=bold, color=blue];
m4_381 -> m4_537  [key=0, style=solid];
m4_381 -> m4_538  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m4_381 -> m4_539  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m4_381 -> m4_541  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_381 -> m4_542  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m4_381 -> m4_543  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m4_381 -> m4_61  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.SecurityType securityType"];
m4_381 -> m4_444  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.SecurityType securityType"];
m4_381 -> m4_447  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.SecurityType securityType"];
m4_381 -> m4_450  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.SecurityType securityType"];
m4_381 -> m4_378  [key=3, color=darkorchid, style=bold, label="Parameter variable bool extendedMarketHours"];
m4_381 -> m4_443  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
m4_381 -> m4_446  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
m4_381 -> m4_449  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
m4_537 -> m4_538  [key=0, style=solid];
m4_537 -> m4_540  [key=0, style=solid];
m4_538 -> m4_539  [key=0, style=solid];
m4_538 -> m4_540  [key=0, style=solid];
m4_538 -> m4_244  [key=2, style=dotted];
m4_538 -> m4_542  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_539 -> m4_546  [key=0, style=solid];
m4_539 -> m4_209  [key=2, style=dotted];
m4_541 -> m4_542  [key=0, style=solid];
m4_541 -> m4_543  [key=0, style=solid];
m4_541 -> m4_376  [key=2, style=dotted];
m4_542 -> m4_543  [key=0, style=solid];
m4_542 -> m4_77  [key=2, style=dotted];
m4_543 -> m4_544  [key=0, style=solid];
m4_543 -> m4_377  [key=2, style=dotted];
m4_543 -> m4_545  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_540 -> m4_541  [key=0, style=solid];
m4_544 -> m4_545  [key=0, style=solid];
m4_544 -> m4_80  [key=2, style=dotted];
m4_545 -> m4_546  [key=0, style=solid];
m4_546 -> m4_381  [key=0, style=bold, color=blue];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.ISecurityInitializer"];
m4_109 -> m4_110  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_111 -> m4_108  [key=0, style=bold, color=blue];
m4_264 -> m4_268  [key=0, style=solid];
m4_264 -> m4_269  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m4_264 -> m4_261  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal startingCash"];
m4_264 -> m4_265  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal startingCash"];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_270  [key=0, style=solid];
m4_269 -> m4_271  [key=0, style=solid];
m4_269 -> m4_272  [key=2, style=dotted];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_209  [key=2, style=dotted];
m4_271 -> m4_264  [key=0, style=bold, color=blue];
m4_350 -> m4_351  [key=0, style=solid];
m4_350 -> m4_353  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Securities.Security AddSecurity"];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_353  [key=2, style=dotted];
m4_352 -> m4_350  [key=0, style=bold, color=blue];
m4_183 -> m4_184  [key=0, style=solid];
m4_184 -> m4_183  [key=0, style=bold, color=blue];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_137  [key=0, style=solid];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_122  [key=2, style=dotted];
m4_128 -> m4_129  [key=0, style=solid];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_139  [key=0, style=solid];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_29  [key=2, style=dotted];
m4_129 -> m4_140  [key=2, style=dotted];
m4_129 -> m4_141  [key=2, style=dotted];
m4_129 -> m4_142  [key=2, style=dotted];
m4_129 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_129 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_129 -> m4_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_129 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_129 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label=method];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_132  [key=0, style=solid];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_145  [key=2, style=dotted];
m4_131 -> m4_139  [key=0, style=solid];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_143  [key=2, style=dotted];
m4_132 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label=self];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_144  [key=2, style=dotted];
m4_133 -> m4_135  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_146  [key=2, style=dotted];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_147  [key=2, style=dotted];
m4_139 -> m4_126  [key=0, style=bold, color=blue];
m4_391 -> m4_392  [key=0, style=solid];
m4_391 -> m4_403  [key=2, style=dotted];
m4_391 -> m4_393  [key=1, style=dashed, color=darkseagreen4, label=canonicalSecurity];
m4_391 -> m4_397  [key=1, style=dashed, color=darkseagreen4, label=canonicalSecurity];
m4_391 -> m4_399  [key=1, style=dashed, color=darkseagreen4, label=canonicalSecurity];
m4_374 -> m4_382  [key=0, style=solid];
m4_374 -> m4_386  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_374 -> m4_388  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_374 -> m4_389  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_374 -> m4_390  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_374 -> m4_391  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m4_374 -> m4_396  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m4_374 -> m4_356  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
m4_382 -> m4_383  [key=0, style=solid];
m4_382 -> m4_385  [key=0, style=solid];
m4_386 -> m4_387  [key=0, style=solid];
m4_386 -> m4_388  [key=1, style=dashed, color=darkseagreen4, label=alias];
m4_388 -> m4_389  [key=0, style=solid];
m4_388 -> m4_77  [key=2, style=dotted];
m4_388 -> m4_391  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_388 -> m4_395  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_388 -> m4_398  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_389 -> m4_390  [key=0, style=solid];
m4_389 -> m4_401  [key=2, style=dotted];
m4_389 -> m4_391  [key=1, style=dashed, color=darkseagreen4, label=marketHoursEntry];
m4_390 -> m4_391  [key=0, style=solid];
m4_390 -> m4_402  [key=2, style=dotted];
m4_396 -> m4_397  [key=0, style=solid];
m4_396 -> m4_45  [key=2, style=dotted];
m4_383 -> m4_384  [key=0, style=solid];
m4_383 -> m4_385  [key=0, style=solid];
m4_383 -> m4_244  [key=2, style=dotted];
m4_383 -> m4_388  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_383 -> m4_389  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_383 -> m4_390  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_385 -> m4_386  [key=0, style=solid];
m4_384 -> m4_400  [key=0, style=solid];
m4_384 -> m4_209  [key=2, style=dotted];
m4_387 -> m4_388  [key=0, style=solid];
m4_387 -> m4_389  [key=0, style=solid];
m4_387 -> m4_376  [key=2, style=dotted];
m4_387 -> m4_391  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_387 -> m4_395  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_387 -> m4_398  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_395 -> m4_396  [key=0, style=solid];
m4_395 -> m4_399  [key=0, style=solid];
m4_395 -> m4_405  [key=2, style=dotted];
m4_398 -> m4_399  [key=0, style=solid];
m4_398 -> m4_407  [key=2, style=dotted];
m4_392 -> m4_393  [key=0, style=solid];
m4_393 -> m4_394  [key=0, style=solid];
m4_393 -> m4_404  [key=2, style=dotted];
m4_397 -> m4_398  [key=0, style=solid];
m4_397 -> m4_406  [key=2, style=dotted];
m4_399 -> m4_400  [key=0, style=solid];
m4_394 -> m4_395  [key=0, style=solid];
m4_400 -> m4_374  [key=0, style=bold, color=blue];
m4_560 -> m4_561  [key=0, style=solid];
m4_560 -> m4_563  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m4_561 -> m4_562  [key=0, style=solid];
m4_561 -> m4_563  [key=0, style=solid];
m4_563 -> m4_564  [key=0, style=solid];
m4_562 -> m4_564  [key=0, style=solid];
m4_562 -> m4_210  [key=2, style=dotted];
m4_564 -> m4_560  [key=0, style=bold, color=blue];
m4_428 -> m4_429  [key=0, style=solid];
m4_429 -> m4_430  [key=0, style=solid];
m4_429 -> m4_377  [key=2, style=dotted];
m4_429 -> m4_431  [key=1, style=dashed, color=darkseagreen4, label=future];
m4_430 -> m4_431  [key=0, style=solid];
m4_430 -> m4_80  [key=2, style=dotted];
m4_431 -> m4_432  [key=0, style=solid];
m4_432 -> m4_428  [key=0, style=bold, color=blue];
m4_417 -> m4_418  [key=0, style=solid];
m4_417 -> m4_403  [key=2, style=dotted];
m4_417 -> m4_419  [key=1, style=dashed, color=darkseagreen4, label=canonicalSecurity];
m4_417 -> m4_423  [key=1, style=dashed, color=darkseagreen4, label=canonicalSecurity];
m4_417 -> m4_425  [key=1, style=dashed, color=darkseagreen4, label=canonicalSecurity];
m4_375 -> m4_408  [key=0, style=solid];
m4_375 -> m4_412  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_375 -> m4_414  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_375 -> m4_415  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_375 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_375 -> m4_417  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m4_375 -> m4_422  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m4_375 -> m4_356  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
m4_408 -> m4_409  [key=0, style=solid];
m4_408 -> m4_411  [key=0, style=solid];
m4_412 -> m4_413  [key=0, style=solid];
m4_412 -> m4_414  [key=1, style=dashed, color=darkseagreen4, label=alias];
m4_414 -> m4_415  [key=0, style=solid];
m4_414 -> m4_77  [key=2, style=dotted];
m4_414 -> m4_417  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_414 -> m4_421  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_414 -> m4_424  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_415 -> m4_416  [key=0, style=solid];
m4_415 -> m4_401  [key=2, style=dotted];
m4_415 -> m4_417  [key=1, style=dashed, color=darkseagreen4, label=marketHoursEntry];
m4_416 -> m4_417  [key=0, style=solid];
m4_416 -> m4_402  [key=2, style=dotted];
m4_422 -> m4_423  [key=0, style=solid];
m4_422 -> m4_45  [key=2, style=dotted];
m4_409 -> m4_410  [key=0, style=solid];
m4_409 -> m4_411  [key=0, style=solid];
m4_409 -> m4_244  [key=2, style=dotted];
m4_409 -> m4_414  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_409 -> m4_415  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_409 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_411 -> m4_412  [key=0, style=solid];
m4_410 -> m4_426  [key=0, style=solid];
m4_410 -> m4_209  [key=2, style=dotted];
m4_413 -> m4_414  [key=0, style=solid];
m4_413 -> m4_415  [key=0, style=solid];
m4_413 -> m4_376  [key=2, style=dotted];
m4_413 -> m4_417  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_413 -> m4_421  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_413 -> m4_424  [key=1, style=dashed, color=darkseagreen4, label=canonicalSymbol];
m4_421 -> m4_422  [key=0, style=solid];
m4_421 -> m4_425  [key=0, style=solid];
m4_421 -> m4_405  [key=2, style=dotted];
m4_424 -> m4_425  [key=0, style=solid];
m4_424 -> m4_407  [key=2, style=dotted];
m4_418 -> m4_419  [key=0, style=solid];
m4_419 -> m4_420  [key=0, style=solid];
m4_419 -> m4_404  [key=2, style=dotted];
m4_423 -> m4_424  [key=0, style=solid];
m4_423 -> m4_427  [key=2, style=dotted];
m4_425 -> m4_426  [key=0, style=solid];
m4_420 -> m4_421  [key=0, style=solid];
m4_426 -> m4_375  [key=0, style=bold, color=blue];
m4_45 -> m4_45  [key=3, color=darkorchid, style=bold, label="Field variable string _algorithmId"];
m4_45 -> m4_297  [key=3, color=darkorchid, style=bold, label="Field variable string _algorithmId"];
m4_356 -> m4_357  [key=0, style=solid];
m4_356 -> m4_358  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_356 -> m4_359  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m4_356 -> m4_360  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_356 -> m4_361  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_356 -> m4_362  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m4_356 -> m4_363  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m4_356 -> m4_365  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_356 -> m4_366  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m4_356 -> m4_367  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m4_356 -> m4_353  [key=3, color=darkorchid, style=bold, label="Parameter variable bool extendedMarketHours"];
m4_356 -> m4_60  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Securities.Security AddSecurity"];
m4_356 -> m4_374  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Securities.Security AddSecurity"];
m4_356 -> m4_375  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Securities.Security AddSecurity"];
m4_357 -> m4_358  [key=0, style=solid];
m4_357 -> m4_359  [key=0, style=solid];
m4_358 -> m4_373  [key=0, style=solid];
m4_358 -> m4_374  [key=2, style=dotted];
m4_359 -> m4_360  [key=0, style=solid];
m4_359 -> m4_361  [key=0, style=solid];
m4_360 -> m4_373  [key=0, style=solid];
m4_360 -> m4_375  [key=2, style=dotted];
m4_361 -> m4_362  [key=0, style=solid];
m4_361 -> m4_364  [key=0, style=solid];
m4_362 -> m4_363  [key=0, style=solid];
m4_362 -> m4_364  [key=0, style=solid];
m4_362 -> m4_244  [key=2, style=dotted];
m4_362 -> m4_366  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_363 -> m4_373  [key=0, style=solid];
m4_363 -> m4_209  [key=2, style=dotted];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_367  [key=0, style=solid];
m4_365 -> m4_376  [key=2, style=dotted];
m4_366 -> m4_367  [key=0, style=solid];
m4_366 -> m4_77  [key=2, style=dotted];
m4_367 -> m4_368  [key=0, style=solid];
m4_367 -> m4_377  [key=2, style=dotted];
m4_367 -> m4_369  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_364 -> m4_365  [key=0, style=solid];
m4_368 -> m4_369  [key=0, style=solid];
m4_368 -> m4_80  [key=2, style=dotted];
m4_369 -> m4_373  [key=0, style=solid];
m4_370 -> m4_371  [key=0, style=solid];
m4_371 -> m4_372  [key=0, style=solid];
m4_371 -> m4_103  [key=2, style=dotted];
m4_372 -> m4_373  [key=0, style=solid];
m4_373 -> m4_356  [key=0, style=bold, color=blue];
m4_169 -> m4_170  [key=0, style=solid];
m4_170 -> m4_169  [key=0, style=bold, color=blue];
m4_36 -> m4_296  [key=3, color=darkorchid, style=bold, label="Field variable System.DateTime _endDate"];
m4_490 -> m4_491  [key=0, style=solid];
m4_490 -> m4_487  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m4_490 -> m4_552  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
m4_491 -> m4_492  [key=0, style=solid];
m4_491 -> m4_493  [key=2, style=dotted];
m4_492 -> m4_490  [key=0, style=bold, color=blue];
m4_443 -> m4_444  [key=0, style=solid];
m4_443 -> m4_381  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Securities.Forex.Forex AddForex"];
m4_444 -> m4_445  [key=0, style=solid];
m4_444 -> m4_381  [key=2, style=dotted];
m4_445 -> m4_443  [key=0, style=bold, color=blue];
m4_529 -> m4_530  [key=0, style=solid];
m4_530 -> m4_531  [key=0, style=solid];
m4_530 -> m4_532  [key=0, style=solid];
m4_531 -> m4_532  [key=0, style=solid];
m4_532 -> m4_529  [key=0, style=bold, color=blue];
m4_446 -> m4_447  [key=0, style=solid];
m4_446 -> m4_381  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Securities.Cfd.Cfd AddCfd"];
m4_447 -> m4_448  [key=0, style=solid];
m4_447 -> m4_381  [key=2, style=dotted];
m4_448 -> m4_446  [key=0, style=bold, color=blue];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label="System.Action<QuantConnect.Securities.Security>"];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_115  [key=2, style=dotted];
m4_117 -> m4_108  [key=2, style=dotted];
m4_117 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_118 -> m4_116  [key=0, style=bold, color=blue];
m4_78 -> m4_234  [key=3, color=darkorchid, style=bold, label="Property variable QuantConnect.Brokerages.IBrokerageMessageHandler BrokerageMessageHandler"];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_237  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.IBrokerageMessageHandler"];
m4_235 -> m4_236  [key=0, style=solid];
m4_235 -> m4_237  [key=0, style=solid];
m4_237 -> m4_238  [key=0, style=solid];
m4_236 -> m4_238  [key=0, style=solid];
m4_236 -> m4_210  [key=2, style=dotted];
m4_238 -> m4_234  [key=0, style=bold, color=blue];
m4_286 -> m4_300  [key=0, style=solid];
m4_286 -> m4_302  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_286 -> m4_305  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_286 -> m4_307  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_286 -> m4_280  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime start"];
m4_300 -> m4_301  [key=0, style=solid];
m4_300 -> m4_302  [key=0, style=solid];
m4_302 -> m4_303  [key=0, style=solid];
m4_302 -> m4_304  [key=0, style=solid];
m4_302 -> m4_30  [key=2, style=dotted];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_307  [key=0, style=solid];
m4_307 -> m4_308  [key=0, style=solid];
m4_307 -> m4_46  [key=2, style=dotted];
m4_307 -> m4_315  [key=2, style=dotted];
m4_307 -> m4_307  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_307 -> m4_310  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_301 -> m4_313  [key=0, style=solid];
m4_303 -> m4_313  [key=0, style=solid];
m4_303 -> m4_209  [key=2, style=dotted];
m4_304 -> m4_305  [key=0, style=solid];
m4_304 -> m4_307  [key=0, style=solid];
m4_304 -> m4_314  [key=2, style=dotted];
m4_306 -> m4_313  [key=0, style=solid];
m4_306 -> m4_209  [key=2, style=dotted];
m4_308 -> m4_309  [key=0, style=solid];
m4_308 -> m4_312  [key=0, style=solid];
m4_310 -> m4_311  [key=0, style=solid];
m4_309 -> m4_310  [key=0, style=solid];
m4_309 -> m4_313  [key=0, style=solid];
m4_312 -> m4_313  [key=0, style=solid];
m4_312 -> m4_209  [key=2, style=dotted];
m4_311 -> m4_313  [key=0, style=solid];
m4_311 -> m4_316  [key=2, style=dotted];
m4_311 -> m4_187  [key=2, style=dotted];
m4_313 -> m4_286  [key=0, style=bold, color=blue];
m4_518 -> m4_519  [key=0, style=solid];
m4_519 -> m4_520  [key=0, style=solid];
m4_519 -> m4_522  [key=1, style=dashed, color=darkseagreen4, label=message];
m4_519 -> m4_523  [key=1, style=dashed, color=darkseagreen4, label=message];
m4_520 -> m4_521  [key=0, style=solid];
m4_520 -> m4_522  [key=0, style=solid];
m4_522 -> m4_523  [key=0, style=solid];
m4_522 -> m4_507  [key=2, style=dotted];
m4_523 -> m4_524  [key=0, style=solid];
m4_521 -> m4_524  [key=0, style=solid];
m4_524 -> m4_518  [key=0, style=bold, color=blue];
m4_330 -> m4_331  [key=0, style=solid];
m4_331 -> m4_332  [key=0, style=solid];
m4_332 -> m4_330  [key=0, style=bold, color=blue];
m4_568 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_224  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_225  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_226  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_237  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_247  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_255  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_268  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_274  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_275  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_290  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_300  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_304  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_305  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_308  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_309  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_310  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_311  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_317  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_322  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_325  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_326  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_334  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_337  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_338  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_339  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_340  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_342  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_343  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_347  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_348  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_354  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_358  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_360  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_362  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_367  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_368  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_371  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_379  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_383  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_389  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_390  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_391  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_393  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_395  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_397  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_398  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_409  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_415  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_417  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_419  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_421  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_423  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_424  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_429  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_430  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_434  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_437  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_438  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_440  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_444  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_447  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_450  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_454  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_455  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_458  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_459  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_462  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_463  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_464  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_465  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_466  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_488  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_491  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_494  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_496  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_497  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_498  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_502  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_504  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_505  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_509  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_511  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_513  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_515  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_516  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_520  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_522  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_523  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_526  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_527  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_531  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_538  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_543  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_544  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_548  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_550  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_551  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_552  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_558  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_563  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_568 -> m4_566  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m4_569 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label="System.Action<QuantConnect.Securities.Security>"];
m4_570 -> m4_252  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_571 -> m4_478  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m7_9 -> m7_51  [key=0, style=solid, color=red];
m7_9 -> m7_0  [key=3, color=darkorchid, style=bold, label="Parameter variable int period"];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [key=0, style=solid];
m7_51 -> m7_52  [key=0, style=solid, color=red];
m7_51 -> m7_49  [key=2, style=dotted, color=red];
m7_52 -> m7_9  [key=0, style=bold, color=blue];
m7_11 -> m7_12  [key=0, style=solid];
m7_12 -> m7_11  [key=0, style=bold, color=blue];
m7_12 -> m7_4  [key=0, style=bold, color=blue];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_69  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid, color=red];
m7_10 -> m7_12  [key=0, style=solid];
m7_10 -> m7_16  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid, color=red];
m7_17 -> m7_18  [key=0, style=solid, color=red];
m7_17 -> m7_19  [key=0, style=solid, color=red];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_54  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_53  [key=0, style=bold, color=blue];
m7_66 -> m7_67  [key=0, style=solid];
m7_68 -> m7_60  [key=0, style=bold, color=blue];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_70  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_71  [key=2, style=dotted];
m7_63 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_4  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_18  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_26  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_27  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_28  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_29  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_30  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_31  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_32  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_33  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_36  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_41  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_42  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_54  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_56  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_57  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_58  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_63 -> m7_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage"];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_72  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_68  [key=0, style=solid];
m7_65 -> m7_73  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid, color=red];
m7_18 -> m7_20  [key=2, style=dotted];
m7_19 -> m7_17  [key=0, style=bold, color=blue];
m7_19 -> m7_20  [key=0, style=solid, color=red];
m7_21 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_21 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_21 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_21 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_21 -> m7_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_21 -> m7_22  [key=0, style=solid, color=red];
m7_21 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m7_21 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_21 -> m7_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_21 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_21 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_21 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_21 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_28 -> m7_29  [key=0, style=solid, color=red];
m7_28 -> m7_54  [key=2, style=dotted];
m7_28 -> m7_47  [key=2, style=dotted, color=red];
m7_28 -> m7_46  [key=2, style=dotted, color=red];
m7_28 -> m7_33  [key=1, style=dashed, color=red, label=ll];
m7_31 -> m7_32  [key=0, style=solid, color=red];
m7_31 -> m7_54  [key=2, style=dotted];
m7_31 -> m7_48  [key=2, style=dotted, color=red];
m7_31 -> m7_47  [key=2, style=dotted, color=red];
m7_31 -> m7_45  [key=2, style=dotted, color=red];
m7_31 -> m7_33  [key=1, style=dashed, color=red, label=hh];
m7_33 -> m7_34  [key=0, style=solid, color=red];
m7_33 -> m7_14  [key=2, style=dotted];
m7_33 -> m7_55  [key=2, style=dotted];
m7_33 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_33 -> m7_47  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m7_33 -> m7_35  [key=1, style=dashed, color=red, label=n2];
m7_36 -> m7_37  [key=0, style=solid, color=red];
m7_36 -> m7_56  [key=2, style=dotted];
m7_36 -> m7_50  [key=2, style=dotted, color=red];
m7_36 -> m7_39  [key=1, style=dashed, color=red, label=alpha];
m7_36 -> m7_41  [key=1, style=dashed, color=red, label=alpha];
m7_37 -> m7_38  [key=0, style=solid, color=red];
m7_37 -> m7_39  [key=0, style=solid, color=red];
m7_39 -> m7_41  [key=0, style=solid, color=red];
m7_39 -> m7_40  [key=0, style=solid, color=red];
m7_40 -> m7_41  [key=0, style=solid, color=red];
m7_41 -> m7_42  [key=0, style=solid, color=red];
m7_41 -> m7_57  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid, color=red];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_58  [key=2, style=dotted];
m7_44 -> m7_59  [key=2, style=dotted];
m7_44 -> m7_52  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_47  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid, color=red];
m7_27 -> m7_30  [key=0, style=solid];
m7_27 -> m7_47  [key=2, style=dotted, color=red];
m7_27 -> m7_45  [key=2, style=dotted, color=red];
m7_27 -> m7_29  [key=1, style=dashed, color=red, label=hh];
m7_27 -> m7_33  [key=1, style=dashed, color=red, label=hh];
m7_29 -> m7_48  [key=0, style=solid];
m7_29 -> m7_30  [key=0, style=solid, color=red];
m7_29 -> m7_34  [key=1, style=dashed, color=red, label=n1];
m7_29 -> m7_35  [key=1, style=dashed, color=red, label=n1];
m7_30 -> m7_31  [key=0, style=solid, color=red];
m7_30 -> m7_33  [key=0, style=solid, color=red];
m7_32 -> m7_48  [key=0, style=solid];
m7_32 -> m7_33  [key=0, style=solid, color=red];
m7_32 -> m7_47  [key=2, style=dotted, color=red];
m7_32 -> m7_46  [key=2, style=dotted, color=red];
m7_22 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_22 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_22 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_22 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_22 -> m7_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_22 -> m7_23  [key=0, style=solid, color=red];
m7_22 -> m7_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_22 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_22 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_22 -> m7_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_34 -> m7_36  [key=0, style=solid, color=red];
m7_34 -> m7_35  [key=0, style=solid, color=red];
m7_47 -> m7_48  [key=0, style=solid];
m7_38 -> m7_39  [key=0, style=solid, color=red];
m7_38 -> m7_40  [key=0, style=solid];
m7_38 -> m7_41  [key=1, style=dashed, color=red, label=alpha];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_52  [key=2, style=dotted];
m7_43 -> m7_13  [key=0, style=bold, color=blue];
m7_46 -> m7_47  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid, color=red];
m7_26 -> m7_53  [key=2, style=dotted];
m7_26 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerage"];
m7_26 -> m7_45  [key=2, style=dotted, color=red];
m7_26 -> m7_46  [key=2, style=dotted, color=red];
m7_26 -> m7_34  [key=1, style=dashed, color=red, label=n3];
m7_26 -> m7_35  [key=1, style=dashed, color=red, label=n3];
m7_24 -> m7_48  [key=0, style=solid];
m7_24 -> d7  [key=2, style=dotted];
m7_24 -> m7_50  [key=2, style=dotted];
m7_24 -> m7_25  [key=0, style=solid, color=red];
m7_24 -> m7_36  [key=1, style=dashed, color=red, label=dimen];
m7_24 -> m7_24  [key=3, color=red, style=bold, label="Local variable double dimen"];
m7_23 -> m7_24  [key=0, style=solid, color=red];
m7_23 -> m7_25  [key=0, style=solid];
m7_25 -> m7_52  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid, color=red];
m7_25 -> m7_51  [key=2, style=dotted];
m7_35 -> m7_48  [key=0, style=solid];
m7_35 -> m7_36  [key=0, style=solid, color=red];
m7_35 -> m7_49  [key=2, style=dotted, color=red];
m7_48 -> m7_21  [key=0, style=bold, color=blue];
m7_53 -> m7_54  [key=0, style=solid, color=red];
m7_54 -> m7_55  [key=0, style=solid, color=red];
m7_55 -> m7_56  [key=0, style=solid, color=red];
m7_55 -> m7_61  [key=2, style=dotted];
m7_56 -> m7_57  [key=0, style=solid, color=red];
m7_56 -> m7_61  [key=2, style=dotted, color=red];
m7_56 -> m7_74  [key=0, style=solid];
m7_56 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m7_56 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label=int];
m7_57 -> m7_58  [key=0, style=solid, color=red];
m7_58 -> m7_59  [key=0, style=solid, color=red];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_62  [key=2, style=dotted];
m7_4 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_4 -> m7_5  [key=0, style=solid, color=red];
m7_4 -> m7_9  [key=2, style=dotted, color=red];
m7_7 -> m7_14  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_13  [key=2, style=dotted];
m7_7 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m7_7 -> m7_0  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_10  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_15  [key=2, style=dotted];
m7_8 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=error];
m7_8 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_10  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_44  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_44  [key=2, style=dotted];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m7_0 -> m7_4  [key=1, style=dashed, color=red, label=int];
m7_0 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m7_0 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label=int];
m7_1 -> m7_2  [key=0, style=solid, color=red];
m7_1 -> m7_3  [key=2, style=dotted, color=green];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_2 -> m7_7  [key=0, style=solid, color=red];
m7_2 -> d7  [key=2, style=dotted, color=red];
m7_13 -> m7_14  [key=0, style=solid, color=red];
m7_13 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBaseDataBar"];
m7_13 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBaseDataBar"];
m7_14 -> m7_15  [key=0, style=solid, color=red];
m7_14 -> m7_18  [key=1, style=dashed, color=red, label=price];
m7_14 -> m7_41  [key=1, style=dashed, color=red, label=price];
m7_84 -> m7_14  [key=2, style=dotted];
m7_84 -> m7_85  [key=0, style=solid];
m7_74 -> m7_75  [key=0, style=solid];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label=jobDays];
m7_76 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_79  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
m7_76 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
m7_81 -> m7_52  [key=2, style=dotted];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_86  [key=2, style=dotted];
m7_78 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
m7_78 -> m7_81  [key=0, style=solid];
m7_80 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
m7_80 -> m7_81  [key=0, style=solid];
m7_82 -> m7_84  [key=0, style=solid];
m7_82 -> m7_83  [key=0, style=solid];
m7_83 -> m7_84  [key=0, style=solid];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_79  [key=0, style=solid];
m7_79 -> m7_81  [key=0, style=solid];
m7_79 -> m7_80  [key=0, style=solid];
m7_85 -> m7_56  [key=0, style=bold, color=blue];
m7_92 -> m7_1  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_92 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m7_93 -> m7_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_93 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_93 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_93 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_93 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m7_94 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [key=2, style=dotted];
m8_28 -> m8_26  [key=0, style=bold, color=blue];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_19  [key=3, color=red, style=bold, label="Parameter variable QuantConnect.Indicators.BarIndicator indicator"];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=2, style=dotted];
m8_23 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_24 -> m8_22  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid, color=red];
m8_1 -> m8_2  [key=0, style=solid, color=red];
m8_1 -> m8_10  [key=2, style=dotted, color=red];
m8_1 -> m8_3  [key=1, style=dashed, color=red, label=frama];
m8_1 -> m8_4  [key=1, style=dashed, color=red, label=frama];
m8_1 -> m8_5  [key=1, style=dashed, color=red, label=frama];
m8_1 -> m8_6  [key=1, style=dashed, color=red, label=frama];
m8_1 -> m8_7  [key=1, style=dashed, color=red, label=frama];
m8_1 -> m8_8  [key=1, style=dashed, color=red, label=frama];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_4  [key=0, style=solid];
m8_2 -> m8_11  [key=2, style=dotted];
m8_3 -> m8_2  [key=0, style=solid];
m8_3 -> m8_12  [key=2, style=dotted];
m8_3 -> m8_13  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_14  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_15  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_15  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_16  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_17  [key=2, style=dotted];
m8_9 -> m8_0  [key=0, style=bold, color=blue];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_23  [key=3, color=darkorchid, style=bold, label="Parameter variable double expected"];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_32  [key=2, style=dotted];
m8_30 -> m8_14  [key=2, style=dotted];
m8_31 -> m8_29  [key=0, style=bold, color=blue];
m8_18 -> m8_19  [key=0, style=solid, color=red];
m8_19 -> m8_20  [key=0, style=solid, color=red];
m8_19 -> m8_10  [key=2, style=dotted, color=red];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_22  [key=2, style=dotted];
m8_21 -> m8_18  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m10_13 -> m10_14  [key=0, style=solid];
m10_14 -> m10_13  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m10_0 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_6  [key=0, style=solid];
m10_1 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label=target];
m10_1 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label=target];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_7  [key=2, style=dotted];
m10_2 -> m10_8  [key=2, style=dotted];
m10_2 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_5 -> m10_1  [key=0, style=solid];
m10_5 -> m10_9  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_1  [key=0, style=solid];
m10_6 -> m10_0  [key=0, style=bold, color=blue];
m10_10 -> m10_11  [key=0, style=solid];
m10_11 -> m10_12  [key=0, style=solid];
m10_12 -> m10_10  [key=0, style=bold, color=blue];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_32  [key=0, style=solid];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_9  [key=2, style=dotted];
m11_29 -> m11_43  [key=2, style=dotted];
m11_30 -> m11_28  [key=0, style=bold, color=blue];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_43  [key=2, style=dotted];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_48  [key=0, style=solid];
m11_42 -> m11_4  [key=2, style=dotted];
m11_54 -> m11_19  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_54 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_18 -> m11_19  [key=0, style=solid, color=green];
m11_19 -> m11_20  [key=0, style=solid, color=green];
m11_19 -> m11_6  [key=2, style=dotted];
m11_19 -> m11_2  [key=2, style=dotted, color=green];
m11_20 -> m11_18  [key=0, style=bold, color=blue];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_13  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_17  [key=2, style=dotted];
m11_16 -> m11_14  [key=0, style=bold, color=blue];
m11_16 -> m11_17  [key=0, style=solid];
m11_25 -> m11_26  [key=0, style=solid, color=red];
m11_26 -> m11_27  [key=0, style=solid, color=green];
m11_26 -> m11_6  [key=2, style=dotted, color=red];
m11_26 -> m11_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_26 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_26 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_26 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_26 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_26 -> m11_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_26 -> m11_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_27 -> m11_25  [key=0, style=bold, color=blue];
m11_27 -> m11_28  [key=0, style=solid, color=green];
m11_27 -> m11_14  [key=2, style=dotted, color=green];
m11_27 -> m11_38  [key=2, style=dotted, color=green];
m11_27 -> m11_39  [key=2, style=dotted, color=green];
m11_27 -> m11_40  [key=2, style=dotted, color=green];
m11_27 -> m11_41  [key=2, style=dotted, color=green];
m11_27 -> m11_42  [key=2, style=dotted, color=green];
m11_27 -> m11_29  [key=1, style=dashed, color=green, label=insight];
m11_27 -> m11_30  [key=1, style=dashed, color=green, label=insight];
m11_27 -> m11_31  [key=1, style=dashed, color=green, label=insight];
m11_27 -> m11_33  [key=1, style=dashed, color=green, label=insight];
m11_27 -> m11_35  [key=1, style=dashed, color=green, label=insight];
m11_27 -> m11_36  [key=1, style=dashed, color=green, label=insight];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_73 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_78  [key=0, style=solid];
m11_74 -> m11_76  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_74 -> m11_77  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_77 -> m11_74  [key=0, style=solid];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_74  [key=0, style=solid];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label=ilocal];
m11_78 -> m11_73  [key=0, style=bold, color=blue];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_55  [key=2, style=dotted];
m11_43 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=x];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_36  [key=0, style=solid];
m11_31 -> m11_44  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_9  [key=2, style=dotted];
m11_32 -> m11_34  [key=0, style=solid];
m11_33 -> m11_31  [key=0, style=bold, color=blue];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_43  [key=2, style=dotted];
m11_13 -> m11_23  [key=0, style=solid];
m11_119 -> m11_120  [key=0, style=solid];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_69  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_81 -> m11_79  [key=0, style=bold, color=blue];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_91  [key=0, style=solid];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_69  [key=2, style=dotted];
m11_88 -> m11_89  [key=0, style=solid];
m11_91 -> m11_88  [key=0, style=bold, color=blue];
m11_120 -> m11_121  [key=0, style=solid];
m11_120 -> m11_122  [key=2, style=dotted];
m11_121 -> m11_119  [key=0, style=bold, color=blue];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_13  [key=2, style=dotted];
m11_11 -> m11_2  [key=0, style=bold, color=blue];
m11_12 -> m11_10  [key=0, style=bold, color=blue];
m11_38 -> m11_52  [key=0, style=solid];
m11_38 -> m11_53  [key=2, style=dotted];
m11_17 -> m11_21  [key=0, style=solid];
m11_17 -> m11_14  [key=0, style=bold, color=blue];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_6  [key=2, style=dotted];
m11_21 -> m11_23  [key=1, style=dashed, color=green, label="QuantConnect.Symbol"];
m11_22 -> m11_17  [key=0, style=bold, color=blue];
m11_22 -> m11_23  [key=0, style=solid, color=green];
m11_22 -> m11_25  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_47  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid, color=red];
m11_34 -> m11_36  [key=0, style=solid];
m11_35 -> m11_36  [key=0, style=solid, color=red];
m11_35 -> m11_9  [key=2, style=dotted, color=red];
m11_35 -> m11_43  [key=2, style=dotted];
m11_36 -> m11_34  [key=0, style=bold, color=blue];
m11_36 -> m11_37  [key=0, style=solid];
m11_96 -> m11_97  [key=0, style=solid];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_99  [key=2, style=dotted];
m11_97 -> m11_92  [key=2, style=dotted];
m11_98 -> m11_96  [key=0, style=bold, color=blue];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_61 -> m11_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_61 -> m11_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_62 -> m11_63  [key=0, style=solid];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_65  [key=0, style=solid];
m11_63 -> m11_67  [key=2, style=dotted];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_54  [key=2, style=dotted];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_68  [key=2, style=dotted];
m11_66 -> m11_61  [key=0, style=bold, color=blue];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_72  [key=0, style=solid];
m11_71 -> m11_70  [key=0, style=solid];
m11_71 -> m11_9  [key=2, style=dotted];
m11_72 -> m11_69  [key=0, style=bold, color=blue];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_56  [key=2, style=dotted];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_46 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_46 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_46 -> m11_52  [key=0, style=solid];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_49  [key=0, style=solid];
m11_47 -> m11_57  [key=2, style=dotted];
m11_47 -> m11_58  [key=2, style=dotted];
m11_48 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label=thisSeries];
m11_48 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_51  [key=0, style=solid];
m11_50 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_53  [key=2, style=dotted];
m11_50 -> m11_52  [key=0, style=solid];
m11_50 -> m11_59  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_60  [key=2, style=dotted];
m11_52 -> m11_45  [key=0, style=bold, color=blue];
m11_52 -> m11_9  [key=0, style=bold, color=blue];
m11_37 -> m11_26  [key=0, style=bold, color=blue];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_39  [key=0, style=solid];
m11_23 -> m11_24  [key=0, style=solid, color=green];
m11_23 -> m11_2  [key=2, style=dotted, color=green];
m11_23 -> m11_6  [key=2, style=dotted];
m11_24 -> m11_21  [key=0, style=bold, color=blue];
m11_24 -> m11_13  [key=0, style=bold, color=blue];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_54  [key=2, style=dotted];
m11_40 -> m11_5  [key=2, style=dotted];
m11_108 -> m11_109  [key=0, style=solid];
m11_108 -> m11_110  [key=1, style=dashed, color=darkseagreen4, label=bool];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> d78  [key=2, style=dotted];
m11_109 -> m11_117  [key=2, style=dotted];
m11_109 -> m11_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_109 -> m11_114  [key=1, style=dashed, color=darkseagreen4, label=updates];
m11_110 -> m11_111  [key=0, style=solid];
m11_110 -> m11_114  [key=0, style=solid];
m11_114 -> m11_115  [key=0, style=solid];
m11_111 -> m11_112  [key=0, style=solid];
m11_111 -> m11_114  [key=0, style=solid];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_111  [key=0, style=solid];
m11_112 -> m11_112  [key=1, style=dashed, color=darkseagreen4, label=chart];
m11_113 -> m11_112  [key=0, style=solid];
m11_113 -> m11_118  [key=2, style=dotted];
m11_113 -> m11_113  [key=1, style=dashed, color=darkseagreen4, label=series];
m11_115 -> m11_108  [key=0, style=bold, color=blue];
m11_100 -> m11_101  [key=0, style=solid];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_103  [key=2, style=dotted];
m11_101 -> m11_92  [key=2, style=dotted];
m11_102 -> m11_100  [key=0, style=bold, color=blue];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_2 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.InsightType"];
m11_2 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.InsightDirection"];
m11_2 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_2 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m11_2 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_12  [key=2, style=dotted];
m11_3 -> m11_0  [key=0, style=bold, color=blue];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_9  [key=2, style=dotted];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_6  [key=0, style=bold, color=blue];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_37  [key=0, style=solid];
m11_9 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_9 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_9 -> m11_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_9 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_9 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_9 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_9 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_41  [key=0, style=solid];
m11_39 -> m11_4  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=thisChart];
m11_41 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=thisChart];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_86  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_82 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label=bool];
m11_82 -> m11_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_87  [key=0, style=solid];
m11_83 -> m11_85  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_83 -> m11_86  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_86 -> m11_83  [key=0, style=solid];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_83  [key=0, style=solid];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label=ilocal];
m11_85 -> m11_90  [key=1, style=dashed, color=darkseagreen4, label=ilocal];
m11_87 -> m11_82  [key=0, style=bold, color=blue];
m11_104 -> m11_105  [key=0, style=solid];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_107  [key=2, style=dotted];
m11_105 -> m11_92  [key=2, style=dotted];
m11_106 -> m11_104  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Chart"];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=0, style=solid];
m11_1 -> m11_4  [key=2, style=dotted];
m11_92 -> m11_93  [key=0, style=solid];
m11_93 -> m11_94  [key=0, style=solid];
m11_93 -> m11_95  [key=2, style=dotted];
m11_94 -> m11_92  [key=0, style=bold, color=blue];
m11_123 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_26  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_35  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_123 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_124 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_125 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label=ilocal];
m11_126 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label=bool];
m11_127 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label=ilocal];
m11_127 -> m11_90  [key=1, style=dashed, color=darkseagreen4, label=ilocal];
m11_128 -> m11_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m16_291 -> m16_292  [key=0, style=solid];
m16_292 -> m16_291  [key=0, style=bold, color=blue];
m16_36 -> m16_40  [key=0, style=solid];
m16_36 -> m16_47  [key=2, style=dotted];
m16_19 -> m16_20  [key=0, style=solid, color=green];
m16_19 -> m16_24  [key=2, style=dotted];
m16_19 -> m16_25  [key=2, style=dotted];
m16_213 -> m16_214  [key=0, style=solid];
m16_213 -> m16_218  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_213 -> m16_219  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_214 -> m16_215  [key=0, style=solid];
m16_214 -> m16_216  [key=0, style=solid];
m16_218 -> m16_219  [key=0, style=solid];
m16_218 -> m16_221  [key=2, style=dotted];
m16_218 -> m16_194  [key=2, style=dotted];
m16_219 -> m16_220  [key=0, style=solid];
m16_215 -> m16_220  [key=0, style=solid];
m16_216 -> m16_217  [key=0, style=solid];
m16_216 -> m16_218  [key=0, style=solid];
m16_217 -> m16_220  [key=0, style=solid];
m16_220 -> m16_213  [key=0, style=bold, color=blue];
m16_46 -> m16_31  [key=0, style=bold, color=blue];
m16_17 -> m16_20  [key=1, style=dashed, color=green, label=direction];
m16_17 -> m16_18  [key=0, style=solid];
m16_187 -> m16_188  [key=0, style=solid];
m16_187 -> m16_190  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_187 -> m16_191  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_188 -> m16_189  [key=0, style=solid];
m16_188 -> m16_193  [key=2, style=dotted];
m16_188 -> m16_194  [key=2, style=dotted];
m16_190 -> m16_191  [key=0, style=solid];
m16_190 -> n21  [key=2, style=dotted];
m16_190 -> m16_123  [key=2, style=dotted];
m16_191 -> m16_192  [key=0, style=solid];
m16_189 -> m16_190  [key=0, style=solid];
m16_189 -> m16_191  [key=0, style=solid];
m16_192 -> m16_187  [key=0, style=bold, color=blue];
m16_280 -> m16_281  [key=0, style=solid];
m16_281 -> m16_280  [key=0, style=bold, color=blue];
m16_104 -> m16_127  [key=0, style=solid];
m16_104 -> m16_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.Packet"];
m16_104 -> m16_130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.Packet"];
m16_127 -> m16_128  [key=0, style=solid];
m16_128 -> m16_129  [key=0, style=solid];
m16_128 -> m16_130  [key=0, style=solid];
m16_130 -> m16_131  [key=0, style=solid];
m16_130 -> m16_133  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_129 -> m16_137  [key=0, style=solid];
m16_131 -> m16_132  [key=0, style=solid];
m16_131 -> m16_134  [key=0, style=solid];
m16_133 -> m16_135  [key=0, style=solid];
m16_133 -> m16_137  [key=0, style=solid];
m16_133 -> m16_138  [key=2, style=dotted];
m16_132 -> m16_133  [key=0, style=solid];
m16_134 -> m16_135  [key=0, style=solid];
m16_134 -> m16_137  [key=0, style=solid];
m16_134 -> m16_139  [key=2, style=dotted];
m16_135 -> m16_136  [key=0, style=solid];
m16_136 -> m16_137  [key=0, style=solid];
m16_136 -> m16_51  [key=2, style=dotted];
m16_137 -> m16_104  [key=0, style=bold, color=blue];
m16_105 -> m16_112  [key=0, style=solid];
m16_105 -> m16_113  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, QuantConnect.Chart>"];
m16_105 -> m16_115  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m16_105 -> m16_116  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>"];
m16_105 -> m16_117  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m16_112 -> m16_113  [key=0, style=solid];
m16_112 -> m16_120  [key=2, style=dotted];
m16_112 -> m16_115  [key=1, style=dashed, color=darkseagreen4, label=splitPackets];
m16_112 -> m16_116  [key=1, style=dashed, color=darkseagreen4, label=splitPackets];
m16_112 -> m16_117  [key=1, style=dashed, color=darkseagreen4, label=splitPackets];
m16_112 -> m16_118  [key=1, style=dashed, color=darkseagreen4, label=splitPackets];
m16_113 -> m16_114  [key=0, style=solid];
m16_113 -> m16_116  [key=0, style=solid];
m16_113 -> m16_115  [key=1, style=dashed, color=darkseagreen4, label=chart];
m16_115 -> m16_113  [key=0, style=solid];
m16_115 -> m16_103  [key=2, style=dotted];
m16_115 -> m16_122  [key=2, style=dotted];
m16_115 -> m16_95  [key=2, style=dotted];
m16_115 -> m16_123  [key=2, style=dotted];
m16_116 -> m16_117  [key=0, style=solid];
m16_116 -> m16_103  [key=2, style=dotted];
m16_116 -> m16_122  [key=2, style=dotted];
m16_116 -> m16_123  [key=2, style=dotted];
m16_117 -> m16_118  [key=0, style=solid];
m16_117 -> m16_103  [key=2, style=dotted];
m16_117 -> m16_122  [key=2, style=dotted];
m16_117 -> m16_123  [key=2, style=dotted];
m16_118 -> m16_119  [key=0, style=solid];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_113  [key=0, style=solid];
m16_114 -> m16_121  [key=2, style=dotted];
m16_114 -> m16_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_119 -> m16_105  [key=0, style=bold, color=blue];
m16_250 -> m16_251  [key=0, style=solid];
m16_251 -> m16_252  [key=0, style=solid];
m16_251 -> m16_229  [key=2, style=dotted];
m16_252 -> m16_250  [key=0, style=bold, color=blue];
m16_253 -> m16_254  [key=0, style=solid];
m16_254 -> m16_255  [key=0, style=solid];
m16_254 -> m16_229  [key=2, style=dotted];
m16_255 -> m16_253  [key=0, style=bold, color=blue];
m16_246 -> m16_247  [key=0, style=solid];
m16_246 -> m16_248  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m16_247 -> m16_248  [key=0, style=solid];
m16_247 -> m16_229  [key=2, style=dotted];
m16_248 -> m16_249  [key=0, style=solid];
m16_249 -> m16_246  [key=0, style=bold, color=blue];
m16_269 -> m16_270  [key=0, style=solid];
m16_270 -> m16_271  [key=0, style=solid];
m16_270 -> m16_274  [key=0, style=solid];
m16_271 -> m16_272  [key=0, style=solid];
m16_271 -> m16_276  [key=2, style=dotted];
m16_274 -> m16_275  [key=0, style=solid];
m16_272 -> m16_273  [key=0, style=solid];
m16_272 -> m16_277  [key=2, style=dotted];
m16_273 -> m16_274  [key=0, style=solid];
m16_273 -> m16_196  [key=2, style=dotted];
m16_275 -> m16_269  [key=0, style=bold, color=blue];
m16_12 -> m16_20  [key=1, style=dashed, color=green, label=direction];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label=direction];
m16_203 -> m16_204  [key=0, style=solid];
m16_203 -> m16_206  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_204 -> m16_205  [key=0, style=solid];
m16_204 -> m16_208  [key=2, style=dotted];
m16_204 -> m16_194  [key=2, style=dotted];
m16_206 -> m16_207  [key=0, style=solid];
m16_206 -> n21  [key=2, style=dotted];
m16_206 -> m16_123  [key=2, style=dotted];
m16_205 -> m16_206  [key=0, style=solid];
m16_205 -> m16_207  [key=0, style=solid];
m16_207 -> m16_203  [key=0, style=bold, color=blue];
m16_282 -> m16_283  [key=0, style=solid];
m16_283 -> m16_282  [key=0, style=bold, color=blue];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_18  [key=0, style=solid];
m16_124 -> m16_125  [key=0, style=solid];
m16_106 -> m16_107  [key=0, style=solid];
m16_109 -> m16_110  [key=0, style=solid];
m16_107 -> m16_108  [key=0, style=solid];
m16_108 -> m16_106  [key=0, style=bold, color=blue];
m16_110 -> m16_111  [key=0, style=solid];
m16_111 -> m16_109  [key=0, style=bold, color=blue];
m16_125 -> m16_126  [key=0, style=solid];
m16_126 -> m16_124  [key=0, style=bold, color=blue];
m16_26 -> m16_29  [key=0, style=solid];
m16_26 -> m16_30  [key=2, style=dotted];
m16_229 -> m16_230  [key=0, style=solid];
m16_229 -> m16_232  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_229 -> m16_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_229 -> m16_234  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_229 -> m16_236  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_229 -> m16_237  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_229 -> m16_238  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_229 -> m16_239  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m16_229 -> m16_240  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m16_230 -> m16_231  [key=0, style=solid];
m16_232 -> m16_233  [key=0, style=solid];
m16_232 -> m16_235  [key=0, style=solid];
m16_232 -> m16_242  [key=2, style=dotted];
m16_232 -> m16_236  [key=1, style=dashed, color=darkseagreen4, label=chart];
m16_232 -> m16_238  [key=1, style=dashed, color=darkseagreen4, label=chart];
m16_233 -> m16_234  [key=0, style=solid];
m16_233 -> m16_16  [key=2, style=dotted];
m16_233 -> m16_236  [key=1, style=dashed, color=darkseagreen4, label=chart];
m16_233 -> m16_238  [key=1, style=dashed, color=darkseagreen4, label=chart];
m16_234 -> m16_235  [key=0, style=solid];
m16_234 -> m16_17  [key=2, style=dotted];
m16_236 -> m16_237  [key=0, style=solid];
m16_236 -> m16_239  [key=0, style=solid];
m16_236 -> m16_243  [key=2, style=dotted];
m16_236 -> m16_240  [key=1, style=dashed, color=darkseagreen4, label=series];
m16_237 -> m16_238  [key=0, style=solid];
m16_237 -> m16_18  [key=2, style=dotted];
m16_237 -> m16_239  [key=1, style=dashed, color=darkseagreen4, label=series];
m16_237 -> m16_240  [key=1, style=dashed, color=darkseagreen4, label=series];
m16_238 -> m16_239  [key=0, style=solid];
m16_238 -> m16_19  [key=2, style=dotted];
m16_239 -> m16_240  [key=0, style=solid];
m16_239 -> m16_241  [key=0, style=solid];
m16_239 -> m16_244  [key=2, style=dotted];
m16_240 -> m16_241  [key=0, style=solid];
m16_240 -> m16_245  [key=2, style=dotted];
m16_240 -> m16_123  [key=2, style=dotted];
m16_231 -> m16_232  [key=0, style=solid];
m16_235 -> m16_236  [key=0, style=solid];
m16_241 -> m16_229  [key=0, style=bold, color=blue];
m16_27 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m16_27 -> m16_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m16_29 -> m16_28  [key=0, style=solid];
m16_29 -> m16_35  [key=2, style=dotted];
m16_29 -> m16_36  [key=2, style=dotted];
m16_29 -> m16_20  [key=0, style=bold, color=blue];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_30  [key=0, style=solid];
m16_32 -> m16_37  [key=2, style=dotted];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_30  [key=0, style=solid];
m16_30 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label=removed];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_34  [key=0, style=solid];
m16_31 -> m16_32  [key=0, style=solid];
m16_33 -> m16_30  [key=0, style=solid];
m16_33 -> m16_38  [key=2, style=dotted];
m16_33 -> m16_34  [key=0, style=solid];
m16_34 -> m16_27  [key=0, style=bold, color=blue];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_41  [key=0, style=solid];
m16_34 -> m16_44  [key=0, style=solid];
m16_20 -> m16_21  [key=0, style=solid, color=green];
m16_20 -> m16_22  [key=1, style=dashed, color=green, label=insight];
m16_20 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ISetupHandler"];
m16_20 -> m16_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m16_20 -> m16_26  [key=2, style=dotted, color=green];
m16_21 -> m16_22  [key=0, style=solid];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_10  [key=0, style=solid];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_9  [key=0, style=bold, color=blue];
m16_24 -> m16_25  [key=0, style=solid];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_27  [key=0, style=solid];
m16_276 -> m16_293  [key=0, style=solid];
m16_276 -> m16_296  [key=1, style=dashed, color=darkseagreen4, label=bool];
m16_293 -> m16_294  [key=0, style=solid];
m16_293 -> m16_295  [key=0, style=solid];
m16_296 -> m16_297  [key=0, style=solid];
m16_296 -> m16_302  [key=0, style=solid];
m16_294 -> m16_319  [key=0, style=solid];
m16_295 -> m16_296  [key=0, style=solid];
m16_295 -> m16_297  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_295 -> m16_298  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_295 -> m16_301  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_297 -> m16_298  [key=0, style=solid];
m16_297 -> m16_320  [key=2, style=dotted];
m16_298 -> m16_299  [key=0, style=solid];
m16_298 -> m16_321  [key=2, style=dotted];
m16_298 -> m16_246  [key=2, style=dotted];
m16_301 -> m16_300  [key=0, style=solid];
m16_301 -> m16_282  [key=2, style=dotted];
m16_302 -> m16_303  [key=0, style=solid];
m16_302 -> m16_323  [key=2, style=dotted];
m16_299 -> m16_300  [key=0, style=solid];
m16_299 -> m16_322  [key=2, style=dotted];
m16_299 -> m16_256  [key=2, style=dotted];
m16_300 -> m16_301  [key=0, style=solid];
m16_300 -> m16_302  [key=0, style=solid];
m16_303 -> m16_304  [key=0, style=solid];
m16_303 -> m16_307  [key=0, style=solid];
m16_304 -> m16_305  [key=0, style=solid];
m16_307 -> m16_308  [key=0, style=solid];
m16_307 -> m16_323  [key=2, style=dotted];
m16_305 -> m16_306  [key=0, style=solid];
m16_305 -> m16_303  [key=0, style=solid];
m16_305 -> m16_48  [key=2, style=dotted];
m16_306 -> m16_303  [key=0, style=solid];
m16_306 -> m16_187  [key=2, style=dotted];
m16_308 -> m16_309  [key=0, style=solid];
m16_308 -> m16_312  [key=0, style=solid];
m16_309 -> m16_310  [key=0, style=solid];
m16_312 -> m16_313  [key=0, style=solid];
m16_312 -> m16_323  [key=2, style=dotted];
m16_310 -> m16_311  [key=0, style=solid];
m16_310 -> m16_308  [key=0, style=solid];
m16_310 -> m16_48  [key=2, style=dotted];
m16_311 -> m16_308  [key=0, style=solid];
m16_311 -> m16_213  [key=2, style=dotted];
m16_313 -> m16_314  [key=0, style=solid];
m16_313 -> m16_317  [key=0, style=solid];
m16_314 -> m16_315  [key=0, style=solid];
m16_317 -> m16_318  [key=0, style=solid];
m16_317 -> m16_319  [key=0, style=solid];
m16_315 -> m16_316  [key=0, style=solid];
m16_315 -> m16_313  [key=0, style=solid];
m16_315 -> m16_48  [key=2, style=dotted];
m16_316 -> m16_313  [key=0, style=solid];
m16_316 -> m16_203  [key=2, style=dotted];
m16_318 -> m16_317  [key=0, style=solid];
m16_318 -> m16_287  [key=2, style=dotted];
m16_318 -> m16_318  [key=1, style=dashed, color=darkseagreen4, label=pair];
m16_319 -> m16_276  [key=0, style=bold, color=blue];
m16_50 -> m16_53  [key=0, style=solid];
m16_50 -> m16_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m16_50 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m16_50 -> m16_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m16_50 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m16_50 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData"];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_55  [key=0, style=solid];
m16_54 -> m16_94  [key=0, style=solid];
m16_55 -> m16_56  [key=0, style=solid];
m16_55 -> m16_57  [key=0, style=solid];
m16_56 -> m16_94  [key=0, style=solid];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_95  [key=2, style=dotted];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_61  [key=0, style=solid];
m16_58 -> m16_96  [key=2, style=dotted];
m16_58 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label=order];
m16_58 -> m16_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_58 -> m16_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_58 -> m16_62  [key=1, style=dashed, color=darkseagreen4, label=deltaOrders];
m16_58 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label=deltaOrders];
m16_59 -> m16_60  [key=0, style=solid];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_63  [key=0, style=solid];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_97  [key=2, style=dotted];
m16_89 -> m16_90  [key=0, style=solid];
m16_89 -> m16_105  [key=2, style=dotted];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_51  [key=2, style=dotted];
m16_63 -> m16_64  [key=0, style=solid];
m16_64 -> m16_65  [key=0, style=solid];
m16_65 -> m16_66  [key=0, style=solid];
m16_65 -> m16_68  [key=0, style=solid];
m16_65 -> m16_98  [key=2, style=dotted];
m16_66 -> m16_67  [key=0, style=solid];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_95  [key=2, style=dotted];
m16_68 -> m16_71  [key=1, style=dashed, color=darkseagreen4, label=deltaCharts];
m16_68 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label=deltaCharts];
m16_67 -> m16_68  [key=0, style=solid];
m16_67 -> m16_51  [key=2, style=dotted];
m16_69 -> m16_70  [key=0, style=solid];
m16_71 -> m16_70  [key=0, style=solid];
m16_71 -> m16_99  [key=2, style=dotted];
m16_71 -> m16_19  [key=2, style=dotted];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_72  [key=0, style=solid];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_95  [key=2, style=dotted];
m16_72 -> m16_75  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
m16_72 -> m16_76  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
m16_72 -> m16_77  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
m16_72 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
m16_72 -> m16_79  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
m16_72 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
m16_72 -> m16_84  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
m16_72 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
m16_73 -> m16_74  [key=0, style=solid];
m16_75 -> m16_74  [key=0, style=solid];
m16_75 -> m16_19  [key=2, style=dotted];
m16_75 -> m16_75  [key=1, style=dashed, color=darkseagreen4, label=pair];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_100  [key=2, style=dotted];
m16_76 -> m16_19  [key=2, style=dotted];
m16_77 -> m16_78  [key=0, style=solid];
m16_77 -> m16_100  [key=2, style=dotted];
m16_77 -> m16_19  [key=2, style=dotted];
m16_78 -> m16_79  [key=0, style=solid];
m16_78 -> m16_100  [key=2, style=dotted];
m16_78 -> m16_19  [key=2, style=dotted];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_100  [key=2, style=dotted];
m16_79 -> m16_19  [key=2, style=dotted];
m16_80 -> m16_81  [key=0, style=solid];
m16_80 -> m16_100  [key=2, style=dotted];
m16_80 -> m16_19  [key=2, style=dotted];
m16_84 -> m16_85  [key=0, style=solid];
m16_84 -> m16_102  [key=2, style=dotted];
m16_84 -> m16_95  [key=2, style=dotted];
m16_74 -> m16_75  [key=0, style=solid];
m16_74 -> m16_76  [key=0, style=solid];
m16_81 -> m16_82  [key=0, style=solid];
m16_81 -> m16_101  [key=2, style=dotted];
m16_81 -> m16_85  [key=1, style=dashed, color=darkseagreen4, label=progress];
m16_81 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label=progress];
m16_82 -> m16_83  [key=0, style=solid];
m16_82 -> m16_84  [key=0, style=solid];
m16_85 -> m16_86  [key=0, style=solid];
m16_85 -> m16_103  [key=2, style=dotted];
m16_85 -> m16_88  [key=1, style=dashed, color=darkseagreen4, label=complete];
m16_83 -> m16_84  [key=0, style=solid];
m16_83 -> m16_85  [key=1, style=dashed, color=darkseagreen4, label=progress];
m16_83 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label=progress];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_89  [key=0, style=solid];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_104  [key=2, style=dotted];
m16_87 -> m16_88  [key=0, style=solid];
m16_87 -> m16_98  [key=2, style=dotted];
m16_90 -> m16_91  [key=0, style=solid];
m16_90 -> m16_92  [key=0, style=solid];
m16_90 -> m16_94  [key=0, style=solid];
m16_91 -> m16_90  [key=0, style=solid];
m16_91 -> m16_49  [key=2, style=dotted];
m16_92 -> m16_93  [key=0, style=solid];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_51  [key=2, style=dotted];
m16_94 -> m16_50  [key=0, style=bold, color=blue];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_37  [key=0, style=solid];
m16_35 -> m16_39  [key=0, style=solid];
m16_35 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m16_35 -> m16_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m16_35 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m16_35 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_46  [key=2, style=dotted];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_52  [key=2, style=dotted];
m16_44 -> m16_35  [key=0, style=bold, color=blue];
m16_37 -> m16_38  [key=0, style=solid];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_40  [key=0, style=solid];
m16_38 -> m16_48  [key=2, style=dotted];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_49  [key=2, style=dotted];
m16_40 -> m16_34  [key=0, style=solid];
m16_40 -> m16_50  [key=2, style=dotted];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_45  [key=2, style=dotted];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_51  [key=2, style=dotted];
m16_42 -> m16_47  [key=2, style=dotted];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_48  [key=2, style=dotted];
m16_45 -> m16_46  [key=0, style=solid];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_16  [key=0, style=solid];
m16_182 -> m16_209  [key=0, style=solid];
m16_209 -> m16_210  [key=0, style=solid];
m16_209 -> m16_212  [key=2, style=dotted];
m16_210 -> m16_211  [key=0, style=solid];
m16_210 -> m16_194  [key=2, style=dotted];
m16_211 -> m16_182  [key=0, style=bold, color=blue];
m16_140 -> m16_141  [key=0, style=solid];
m16_140 -> m16_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Statistics.StatisticsResults"];
m16_140 -> m16_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m16_141 -> m16_142  [key=0, style=solid];
m16_144 -> m16_145  [key=0, style=solid];
m16_144 -> m16_146  [key=0, style=solid];
m16_146 -> m16_147  [key=0, style=solid];
m16_146 -> m16_103  [key=2, style=dotted];
m16_146 -> m16_102  [key=2, style=dotted];
m16_146 -> m16_148  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_142 -> m16_143  [key=0, style=solid];
m16_142 -> m16_153  [key=2, style=dotted];
m16_142 -> m16_146  [key=1, style=dashed, color=darkseagreen4, label=charts];
m16_143 -> m16_144  [key=0, style=solid];
m16_145 -> m16_144  [key=0, style=solid];
m16_145 -> m16_154  [key=2, style=dotted];
m16_147 -> m16_148  [key=0, style=solid];
m16_147 -> m16_104  [key=2, style=dotted];
m16_148 -> m16_149  [key=0, style=solid];
m16_148 -> m16_49  [key=2, style=dotted];
m16_149 -> m16_150  [key=0, style=solid];
m16_149 -> m16_152  [key=0, style=solid];
m16_149 -> m16_52  [key=2, style=dotted];
m16_150 -> m16_151  [key=0, style=solid];
m16_151 -> m16_152  [key=0, style=solid];
m16_151 -> m16_51  [key=2, style=dotted];
m16_152 -> m16_140  [key=0, style=bold, color=blue];
m16_278 -> m16_279  [key=0, style=solid];
m16_279 -> m16_278  [key=0, style=bold, color=blue];
m16_256 -> m16_257  [key=0, style=solid];
m16_256 -> m16_258  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Chart>"];
m16_257 -> m16_258  [key=0, style=solid];
m16_258 -> m16_259  [key=0, style=solid];
m16_258 -> m16_265  [key=0, style=solid];
m16_258 -> m16_260  [key=1, style=dashed, color=darkseagreen4, label=update];
m16_258 -> m16_261  [key=1, style=dashed, color=darkseagreen4, label=update];
m16_258 -> m16_262  [key=1, style=dashed, color=darkseagreen4, label=update];
m16_258 -> m16_263  [key=1, style=dashed, color=darkseagreen4, label=update];
m16_258 -> m16_264  [key=1, style=dashed, color=darkseagreen4, label=update];
m16_259 -> m16_260  [key=0, style=solid];
m16_259 -> m16_261  [key=0, style=solid];
m16_259 -> m16_266  [key=2, style=dotted];
m16_260 -> m16_261  [key=0, style=solid];
m16_260 -> m16_16  [key=2, style=dotted];
m16_260 -> m16_17  [key=2, style=dotted];
m16_261 -> m16_262  [key=0, style=solid];
m16_261 -> m16_258  [key=0, style=solid];
m16_261 -> m16_263  [key=1, style=dashed, color=darkseagreen4, label=series];
m16_261 -> m16_264  [key=1, style=dashed, color=darkseagreen4, label=series];
m16_262 -> m16_263  [key=0, style=solid];
m16_262 -> m16_264  [key=0, style=solid];
m16_262 -> m16_267  [key=2, style=dotted];
m16_263 -> m16_264  [key=0, style=solid];
m16_263 -> m16_18  [key=2, style=dotted];
m16_263 -> m16_19  [key=2, style=dotted];
m16_264 -> m16_261  [key=0, style=solid];
m16_264 -> m16_268  [key=2, style=dotted];
m16_265 -> m16_256  [key=0, style=bold, color=blue];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label=normalizedSignal];
m16_49 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m16_49 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m16_49 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m16_49 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m16_49 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m16_49 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m16_49 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m16_49 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m16_49 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m16_49 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel"];
m16_155 -> m16_156  [key=0, style=solid];
m16_155 -> m16_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m16_155 -> m16_173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m16_156 -> m16_157  [key=0, style=solid];
m16_172 -> m16_173  [key=0, style=solid];
m16_172 -> m16_184  [key=2, style=dotted];
m16_172 -> m16_174  [key=1, style=dashed, color=darkseagreen4, label=debug];
m16_173 -> m16_174  [key=0, style=solid];
m16_173 -> m16_184  [key=2, style=dotted];
m16_173 -> m16_175  [key=1, style=dashed, color=darkseagreen4, label=error];
m16_157 -> m16_158  [key=0, style=solid];
m16_158 -> m16_159  [key=0, style=solid];
m16_158 -> m16_160  [key=1, style=dashed, color=darkseagreen4, label=resampleMinutes];
m16_159 -> m16_160  [key=0, style=solid];
m16_159 -> m16_177  [key=2, style=dotted];
m16_160 -> m16_161  [key=0, style=solid];
m16_160 -> m16_178  [key=2, style=dotted];
m16_160 -> m16_52  [key=2, style=dotted];
m16_161 -> m16_162  [key=0, style=solid];
m16_161 -> m16_179  [key=2, style=dotted];
m16_162 -> m16_163  [key=0, style=solid];
m16_162 -> m16_180  [key=2, style=dotted];
m16_163 -> m16_164  [key=0, style=solid];
m16_163 -> m16_165  [key=0, style=solid];
m16_164 -> m16_165  [key=0, style=solid];
m16_165 -> m16_166  [key=0, style=solid];
m16_166 -> m16_167  [key=0, style=solid];
m16_166 -> m16_120  [key=2, style=dotted];
m16_166 -> m16_168  [key=1, style=dashed, color=darkseagreen4, label=types];
m16_166 -> m16_169  [key=1, style=dashed, color=darkseagreen4, label=types];
m16_166 -> m16_170  [key=1, style=dashed, color=darkseagreen4, label=types];
m16_167 -> m16_168  [key=0, style=solid];
m16_167 -> m16_170  [key=0, style=solid];
m16_167 -> m16_169  [key=1, style=dashed, color=darkseagreen4, label=security];
m16_168 -> m16_169  [key=0, style=solid];
m16_168 -> m16_167  [key=0, style=solid];
m16_168 -> m16_181  [key=2, style=dotted];
m16_169 -> m16_167  [key=0, style=solid];
m16_169 -> m16_123  [key=2, style=dotted];
m16_170 -> m16_171  [key=0, style=solid];
m16_170 -> m16_182  [key=2, style=dotted];
m16_171 -> m16_172  [key=0, style=solid];
m16_171 -> m16_176  [key=0, style=solid];
m16_171 -> m16_183  [key=2, style=dotted];
m16_174 -> m16_175  [key=0, style=solid];
m16_174 -> m16_185  [key=2, style=dotted];
m16_175 -> m16_176  [key=0, style=solid];
m16_175 -> m16_186  [key=2, style=dotted];
m16_176 -> m16_155  [key=0, style=bold, color=blue];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_22  [key=0, style=bold, color=crimson];
m16_9 -> m16_18  [key=2, style=dotted];
m16_9 -> m16_19  [key=2, style=dotted];
m16_10 -> m16_20  [key=1, style=dashed, color=green, label=sd];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_23  [key=0, style=solid];
m16_10 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label=sd];
m16_10 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label=sd];
m16_10 -> m16_21  [key=1, style=dashed, color=darkseagreen4, label=sd];
m16_10 -> m16_19  [key=2, style=dotted];
m16_15 -> m16_20  [key=1, style=dashed, color=green, label=direction];
m16_15 -> m16_18  [key=0, style=solid];
m16_11 -> m16_10  [key=0, style=solid];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_0  [key=0, style=bold, color=blue];
m16_18 -> m16_10  [key=0, style=solid];
m16_18 -> m16_19  [key=0, style=solid];
m16_196 -> m16_197  [key=0, style=solid];
m16_196 -> m16_199  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_196 -> m16_200  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_197 -> m16_198  [key=0, style=solid];
m16_197 -> m16_202  [key=2, style=dotted];
m16_197 -> m16_194  [key=2, style=dotted];
m16_199 -> m16_200  [key=0, style=solid];
m16_199 -> n21  [key=2, style=dotted];
m16_199 -> m16_123  [key=2, style=dotted];
m16_200 -> m16_201  [key=0, style=solid];
m16_198 -> m16_199  [key=0, style=solid];
m16_198 -> m16_200  [key=0, style=solid];
m16_201 -> m16_196  [key=0, style=bold, color=blue];
m16_222 -> m16_223  [key=0, style=solid];
m16_222 -> m16_224  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_222 -> m16_225  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_223 -> m16_224  [key=0, style=solid];
m16_223 -> m16_227  [key=2, style=dotted];
m16_224 -> m16_225  [key=0, style=solid];
m16_224 -> m16_228  [key=2, style=dotted];
m16_224 -> m16_194  [key=2, style=dotted];
m16_225 -> m16_226  [key=0, style=solid];
m16_226 -> m16_222  [key=0, style=bold, color=blue];
m16_287 -> m16_288  [key=0, style=solid];
m16_287 -> m16_289  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_288 -> m16_289  [key=0, style=solid];
m16_289 -> m16_290  [key=0, style=solid];
m16_290 -> m16_287  [key=0, style=bold, color=blue];
m16_227 -> m16_284  [key=0, style=solid];
m16_284 -> m16_285  [key=0, style=solid];
m16_284 -> m16_286  [key=2, style=dotted];
m16_285 -> m16_227  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m16_0 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m16_0 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.MovingAverageType"];
m16_0 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_12  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_13  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_14  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_15  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_8  [key=2, style=dotted];
m16_7 -> m16_0  [key=0, style=bold, color=blue];
m16_7 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_16  [key=2, style=dotted];
m16_8 -> m16_17  [key=2, style=dotted];
m16_324 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_170  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_197  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_210  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_224  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_225  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_247  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_251  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_254  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_259  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_263  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_270  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_271  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_272  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_274  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_284  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_288  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_289  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_293  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_295  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_296  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_297  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_298  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_299  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_300  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_301  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_303  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_305  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_306  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_308  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_310  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_311  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_313  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_315  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_316  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_317  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m16_324 -> m16_318  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler"];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [key=0, style=bold, color=blue];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_2  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [key=0, style=bold, color=blue];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_5  [key=2, style=dotted];
m18_4 -> m18_2  [key=0, style=bold, color=blue];
m19_67 -> m19_74  [key=0, style=solid];
m19_67 -> m19_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_74 -> m19_75  [key=0, style=solid];
m19_74 -> m19_86  [key=2, style=dotted];
m19_74 -> m19_83  [key=1, style=dashed, color=darkseagreen4, label=rows];
m19_74 -> m19_84  [key=1, style=dashed, color=darkseagreen4, label=rows];
m19_75 -> m19_76  [key=0, style=solid];
m19_75 -> m19_87  [key=2, style=dotted];
m19_75 -> m19_77  [key=1, style=dashed, color=darkseagreen4, label=zip];
m19_84 -> m19_85  [key=0, style=solid];
m19_83 -> m19_81  [key=0, style=solid];
m19_76 -> m19_77  [key=0, style=solid];
m19_76 -> m19_88  [key=2, style=dotted];
m19_76 -> m19_78  [key=1, style=dashed, color=darkseagreen4, label=stream];
m19_76 -> m19_79  [key=1, style=dashed, color=darkseagreen4, label=stream];
m19_77 -> m19_78  [key=0, style=solid];
m19_77 -> m19_89  [key=2, style=dotted];
m19_81 -> m19_84  [key=0, style=solid];
m19_81 -> m19_83  [key=1, style=dashed, color=darkseagreen4, label=line];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_92  [key=2, style=dotted];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_93  [key=2, style=dotted];
m19_82 -> m19_94  [key=2, style=dotted];
m19_78 -> m19_79  [key=0, style=solid];
m19_78 -> m19_90  [key=2, style=dotted];
m19_79 -> m19_81  [key=1, style=dashed, color=darkseagreen4, label=reader];
m19_79 -> m19_80  [key=0, style=solid];
m19_79 -> m19_91  [key=2, style=dotted];
m19_80 -> m19_81  [key=0, style=solid];
m19_85 -> m19_67  [key=0, style=bold, color=blue];
m19_17 -> m19_18  [key=0, style=solid];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>"];
m19_14 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>"];
m19_14 -> m19_16  [key=0, style=solid];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_19  [key=0, style=solid];
m19_15 -> m19_14  [key=0, style=solid];
m19_15 -> m19_18  [key=2, style=dotted];
m19_18 -> m19_23  [key=0, style=solid];
m19_18 -> m19_24  [key=2, style=dotted];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_25  [key=2, style=dotted];
m19_22 -> m19_19  [key=0, style=bold, color=blue];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_11  [key=0, style=bold, color=blue];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_23  [key=2, style=dotted];
m19_20 -> m19_21  [key=0, style=solid];
m19_20 -> m19_7  [key=2, style=dotted];
m19_23 -> m19_14  [key=0, style=bold, color=blue];
m19_45 -> m19_101  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m19_45 -> m19_95  [key=0, style=solid];
m19_45 -> m19_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_45 -> m19_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_45 -> m19_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_45 -> m19_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_45 -> m19_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_45 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_45 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_110  [key=2, style=dotted];
m19_101 -> m19_111  [key=2, style=dotted];
m19_95 -> m19_101  [key=1, style=dashed, color=darkseagreen4, label=tempFilePath];
m19_95 -> m19_96  [key=0, style=solid];
m19_95 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label=tempFilePath];
m19_96 -> m19_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_96 -> m19_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_96 -> m19_97  [key=0, style=solid];
m19_96 -> m19_105  [key=2, style=dotted];
m19_100 -> m19_101  [key=0, style=solid];
m19_100 -> m19_108  [key=2, style=dotted];
m19_100 -> m19_109  [key=2, style=dotted];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_112  [key=2, style=dotted];
m19_97 -> m19_100  [key=0, style=solid];
m19_97 -> m19_98  [key=0, style=solid];
m19_97 -> m19_66  [key=2, style=dotted];
m19_98 -> m19_99  [key=0, style=solid];
m19_98 -> m19_106  [key=2, style=dotted];
m19_99 -> m19_100  [key=0, style=solid];
m19_99 -> m19_107  [key=2, style=dotted];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_107  [key=2, style=dotted];
m19_104 -> m19_45  [key=0, style=bold, color=blue];
m19_71 -> m19_72  [key=0, style=solid];
m19_72 -> m19_73  [key=0, style=solid];
m19_72 -> m19_47  [key=2, style=dotted];
m19_68 -> m19_69  [key=0, style=solid];
m19_73 -> m19_71  [key=0, style=bold, color=blue];
m19_69 -> m19_70  [key=0, style=solid];
m19_70 -> m19_68  [key=0, style=bold, color=blue];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_15  [key=0, style=bold, color=crimson];
m19_11 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_11 -> m19_0  [key=0, style=bold, color=blue];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_7  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_17  [key=2, style=dotted];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m19_0 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m19_0 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m19_0 -> m19_6  [key=1, style=dashed, color=green, label="QuantConnect.TickType"];
m19_0 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_7  [key=2, style=dotted];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_2  [key=0, style=solid];
m19_3 -> m19_8  [key=2, style=dotted];
m19_4 -> m19_6  [key=0, style=solid];
m19_4 -> n40  [key=2, style=dotted];
m19_4 -> m19_10  [key=2, style=dotted];
m19_4 -> m19_5  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid, color=green];
m19_5 -> m19_12  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_5  [key=0, style=solid];
m19_2 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m19_6 -> m19_0  [key=0, style=bold, color=blue];
m19_6 -> m19_7  [key=0, style=solid, color=green];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>"];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_43  [key=2, style=dotted];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_44  [key=2, style=dotted];
m19_33 -> m19_45  [key=2, style=dotted];
m19_36 -> m19_28  [key=0, style=solid];
m19_36 -> m19_47  [key=2, style=dotted];
m19_36 -> m19_48  [key=2, style=dotted];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_43  [key=2, style=dotted];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_44  [key=2, style=dotted];
m19_39 -> m19_45  [key=2, style=dotted];
m19_27 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m19_27 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m19_27 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m19_27 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_42  [key=2, style=dotted];
m19_27 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m19_27 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_35  [key=0, style=solid];
m19_26 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_26 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_26 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_41  [key=2, style=dotted];
m19_26 -> m19_34  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_26 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_46  [key=2, style=dotted];
m19_28 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label=data];
m19_28 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=data];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_37  [key=0, style=solid];
m19_28 -> m19_35  [key=1, style=dashed, color=darkseagreen4, label=data];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m19_35 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_40  [key=0, style=solid];
m19_30 -> m19_13  [key=2, style=dotted];
m19_30 -> m19_40  [key=0, style=solid];
m19_29 -> m19_31  [key=0, style=solid];
m19_29 -> m19_30  [key=0, style=solid];
m19_40 -> m19_25  [key=0, style=bold, color=blue];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_9  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_11  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_13  [key=2, style=dotted];
m19_24 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>"];
m19_24 -> m19_49  [key=0, style=solid];
m19_24 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper"];
m19_24 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper"];
m19_24 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper"];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_43  [key=2, style=dotted];
m19_51 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m19_51 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m19_51 -> m19_62  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_64  [key=2, style=dotted];
m19_52 -> m19_65  [key=2, style=dotted];
m19_52 -> m19_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_52 -> m19_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_52 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label=newRows];
m19_52 -> m19_58  [key=1, style=dashed, color=darkseagreen4, label=newRows];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_44  [key=2, style=dotted];
m19_62 -> m19_45  [key=2, style=dotted];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_62  [key=1, style=dashed, color=darkseagreen4, label=lastTime];
m19_50 -> m19_42  [key=2, style=dotted];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_58  [key=0, style=solid];
m19_54 -> m19_66  [key=2, style=dotted];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_67  [key=2, style=dotted];
m19_55 -> m19_57  [key=1, style=dashed, color=darkseagreen4, label=rows];
m19_55 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=rows];
m19_53 -> m19_54  [key=0, style=solid];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_59  [key=0, style=solid];
m19_58 -> m19_59  [key=0, style=solid];
m19_49 -> m19_62  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_41  [key=2, style=dotted];
m19_49 -> m19_60  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_49 -> m19_61  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_63  [key=0, style=solid];
m19_60 -> m19_48  [key=2, style=dotted];
m19_60 -> m19_60  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m19_60 -> m19_59  [key=0, style=solid];
m19_57 -> m19_56  [key=0, style=solid];
m19_57 -> m19_57  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m19_59 -> m19_61  [key=0, style=solid];
m19_59 -> m19_60  [key=0, style=solid];
m19_63 -> m19_24  [key=0, style=bold, color=blue];
m19_43 -> m19_113  [key=0, style=solid];
m19_113 -> m19_114  [key=0, style=solid];
m19_113 -> m19_115  [key=2, style=dotted];
m19_114 -> m19_43  [key=0, style=bold, color=blue];
m19_116 -> m19_6  [key=1, style=dashed, color=green, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m19_116 -> m19_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.LeanDataWriter"];
m20_5 -> m20_38  [key=0, style=solid];
m20_5 -> m20_6  [key=0, style=solid];
m20_38 -> m20_5  [key=0, style=bold, color=blue];
m20_18 -> m20_39  [key=0, style=solid];
m20_6 -> m20_9  [key=0, style=solid];
m20_6 -> m20_7  [key=0, style=solid];
m20_6 -> m20_8  [key=1, style=dashed, color=darkseagreen4, label=item];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label=name];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_5  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_6  [key=2, style=dotted];
m20_4 -> m20_0  [key=0, style=bold, color=blue];
m20_4 -> m20_11  [key=1, style=dashed, color=green, label="QuantConnect.Packets.LiveNodePacket"];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.LiveNodePacket"];
m20_22 -> m20_23  [key=0, style=solid];
m20_23 -> m20_24  [key=0, style=solid];
m20_23 -> m20_18  [key=2, style=dotted];
m20_23 -> m20_25  [key=1, style=dashed, color=darkseagreen4, label=target];
m20_23 -> m20_26  [key=1, style=dashed, color=darkseagreen4, label=target];
m20_24 -> m20_25  [key=0, style=solid];
m20_24 -> m20_26  [key=1, style=dashed, color=darkseagreen4, label=time];
m20_25 -> m20_26  [key=0, style=solid];
m20_25 -> n4  [key=2, style=dotted];
m20_25 -> m20_20  [key=2, style=dotted];
m20_26 -> m20_27  [key=0, style=solid];
m20_26 -> n4  [key=2, style=dotted];
m20_26 -> m20_21  [key=2, style=dotted];
m20_26 -> m20_20  [key=2, style=dotted];
m20_27 -> m20_22  [key=0, style=bold, color=blue];
m20_11 -> m20_12  [key=0, style=solid, color=green];
m20_11 -> m20_20  [key=2, style=dotted, color=green];
m20_11 -> m20_13  [key=1, style=dashed, color=green, label=brokerage];
m20_11 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label=time];
m20_9 -> m20_11  [key=1, style=dashed, color=green, label=restClient];
m20_9 -> m20_10  [key=0, style=solid];
m20_9 -> m20_18  [key=2, style=dotted];
m20_9 -> m20_6  [key=2, style=dotted];
m20_10 -> m20_11  [key=0, style=solid, color=green];
m20_10 -> m20_19  [key=2, style=dotted];
m20_10 -> m20_6  [key=2, style=dotted];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> m20_21  [key=2, style=dotted];
m20_12 -> n4  [key=2, style=dotted];
m20_13 -> m20_14  [key=0, style=solid];
m20_13 -> m20_20  [key=2, style=dotted];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_6  [key=0, style=solid];
m20_7 -> m20_15  [key=2, style=dotted];
m20_8 -> m20_14  [key=0, style=solid];
m20_8 -> m20_16  [key=2, style=dotted];
m20_8 -> m20_17  [key=2, style=dotted];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_18  [key=2, style=dotted];
m20_8 -> m20_10  [key=1, style=dashed, color=darkseagreen4, label=target];
m20_8 -> m20_13  [key=1, style=dashed, color=darkseagreen4, label=target];
m20_8 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label=target];
m20_14 -> m20_4  [key=0, style=bold, color=blue];
m20_14 -> m20_15  [key=0, style=solid];
m20_14 -> m20_6  [key=2, style=dotted];
m20_40 -> m20_41  [key=0, style=solid];
m20_41 -> m20_42  [key=0, style=solid];
m20_42 -> m20_40  [key=0, style=bold, color=blue];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_6  [key=2, style=dotted];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> n4  [key=2, style=dotted];
m20_15 -> m20_21  [key=2, style=dotted];
m20_15 -> m20_20  [key=2, style=dotted];
m20_17 -> m20_7  [key=0, style=bold, color=blue];
m20_28 -> m20_29  [key=0, style=solid];
m20_29 -> m20_30  [key=0, style=solid];
m20_29 -> m20_18  [key=2, style=dotted];
m20_29 -> m20_33  [key=1, style=dashed, color=darkseagreen4, label=target];
m20_29 -> m20_34  [key=1, style=dashed, color=darkseagreen4, label=target];
m20_29 -> m20_35  [key=1, style=dashed, color=darkseagreen4, label=target];
m20_29 -> m20_36  [key=1, style=dashed, color=darkseagreen4, label=target];
m20_30 -> m20_31  [key=0, style=solid];
m20_30 -> m20_32  [key=1, style=dashed, color=darkseagreen4, label=time];
m20_33 -> m20_34  [key=0, style=solid];
m20_33 -> m20_20  [key=2, style=dotted];
m20_34 -> m20_35  [key=0, style=solid];
m20_34 -> m20_6  [key=2, style=dotted];
m20_35 -> m20_36  [key=0, style=solid];
m20_35 -> m20_20  [key=2, style=dotted];
m20_36 -> m20_37  [key=0, style=solid];
m20_36 -> m20_6  [key=2, style=dotted];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_34  [key=1, style=dashed, color=darkseagreen4, label=value1];
m20_31 -> m20_36  [key=1, style=dashed, color=darkseagreen4, label=value1];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> n4  [key=2, style=dotted];
m20_32 -> m20_35  [key=1, style=dashed, color=darkseagreen4, label=data];
m20_37 -> m20_28  [key=0, style=bold, color=blue];
m20_39 -> m20_18  [key=0, style=bold, color=blue];
m21_58 -> m21_59  [key=0, style=solid];
m21_58 -> m21_52  [key=2, style=dotted];
m21_294 -> m21_295  [key=0, style=solid];
m21_295 -> m21_296  [key=0, style=solid];
m21_295 -> m21_36  [key=2, style=dotted];
m21_296 -> m21_297  [key=0, style=solid];
m21_296 -> m21_299  [key=0, style=solid];
m21_297 -> m21_298  [key=0, style=solid];
m21_297 -> m21_236  [key=2, style=dotted];
m21_299 -> m21_300  [key=0, style=solid];
m21_299 -> m21_303  [key=2, style=dotted];
m21_298 -> m21_299  [key=0, style=solid];
m21_298 -> m21_302  [key=2, style=dotted];
m21_300 -> m21_301  [key=0, style=solid];
m21_300 -> m21_304  [key=2, style=dotted];
m21_301 -> m21_294  [key=0, style=bold, color=blue];
m21_70 -> m21_71  [key=0, style=solid];
m21_70 -> m21_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_70 -> m21_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_70 -> m21_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_1253 -> m21_1269  [key=0, style=solid];
m21_1253 -> m21_1273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1253 -> m21_1274  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m21_1253 -> m21_1278  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_1253 -> m21_1279  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1253 -> m21_1310  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1253 -> m21_1311  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1253 -> m21_1312  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m21_1253 -> m21_1285  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_1269 -> m21_1270  [key=0, style=solid];
m21_1269 -> m21_1288  [key=1, style=dashed, color=darkseagreen4, label=timeOut];
m21_1269 -> m21_1294  [key=1, style=dashed, color=darkseagreen4, label=timeOut];
m21_1269 -> m21_1295  [key=1, style=dashed, color=darkseagreen4, label=timeOut];
m21_1273 -> m21_1274  [key=0, style=solid];
m21_1273 -> m21_1303  [key=2, style=dotted];
m21_1273 -> m21_1285  [key=1, style=dashed, color=darkseagreen4, label=useRegularTradingHours];
m21_1274 -> m21_1275  [key=0, style=solid];
m21_1274 -> m21_1300  [key=0, style=solid];
m21_1278 -> m21_1279  [key=0, style=solid];
m21_1279 -> m21_1280  [key=0, style=solid];
m21_1279 -> m21_1309  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs"];
m21_1279 -> m21_1310  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs"];
m21_1279 -> m21_1283  [key=1, style=dashed, color=darkseagreen4, label=clientOnHistoricalData];
m21_1279 -> m21_1290  [key=1, style=dashed, color=darkseagreen4, label=clientOnHistoricalData];
m21_1285 -> m21_1286  [key=0, style=solid];
m21_1285 -> m21_176  [key=2, style=dotted];
m21_1285 -> m21_97  [key=2, style=dotted];
m21_1285 -> m21_504  [key=2, style=dotted];
m21_1270 -> m21_1271  [key=0, style=solid];
m21_1270 -> m21_97  [key=2, style=dotted];
m21_1270 -> m21_1298  [key=1, style=dashed, color=darkseagreen4, label=history];
m21_1270 -> m21_1300  [key=1, style=dashed, color=darkseagreen4, label=history];
m21_1288 -> m21_1287  [key=0, style=solid];
m21_1288 -> m21_1304  [key=2, style=dotted];
m21_1288 -> m21_1292  [key=1, style=dashed, color=darkseagreen4, label=waitResult];
m21_1294 -> m21_1274  [key=0, style=solid];
m21_1294 -> m21_235  [key=2, style=dotted];
m21_1295 -> m21_1300  [key=0, style=solid];
m21_1295 -> m21_235  [key=2, style=dotted];
m21_1271 -> m21_1272  [key=0, style=solid];
m21_1271 -> m21_1302  [key=2, style=dotted];
m21_1271 -> m21_1279  [key=1, style=dashed, color=darkseagreen4, label=dataDownloading];
m21_1271 -> m21_1314  [key=1, style=dashed, color=darkseagreen4, label=dataDownloading];
m21_1271 -> m21_1288  [key=1, style=dashed, color=darkseagreen4, label=dataDownloading];
m21_1298 -> m21_1299  [key=0, style=solid];
m21_1298 -> m21_1306  [key=2, style=dotted];
m21_1300 -> m21_1301  [key=0, style=solid];
m21_1272 -> m21_1273  [key=0, style=solid];
m21_1272 -> m21_98  [key=2, style=dotted];
m21_1272 -> m21_1280  [key=1, style=dashed, color=darkseagreen4, label=dataDownloaded];
m21_1272 -> m21_1318  [key=1, style=dashed, color=darkseagreen4, label=dataDownloaded];
m21_1272 -> m21_1281  [key=1, style=dashed, color=darkseagreen4, label=dataDownloaded];
m21_1272 -> m21_1324  [key=1, style=dashed, color=darkseagreen4, label=dataDownloaded];
m21_1272 -> m21_1288  [key=1, style=dashed, color=darkseagreen4, label=dataDownloaded];
m21_1280 -> m21_1281  [key=0, style=solid];
m21_1280 -> m21_1317  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs"];
m21_1280 -> m21_1284  [key=1, style=dashed, color=darkseagreen4, label=clientOnHistoricalDataEnd];
m21_1280 -> m21_1291  [key=1, style=dashed, color=darkseagreen4, label=clientOnHistoricalDataEnd];
m21_1281 -> m21_1282  [key=0, style=solid];
m21_1281 -> m21_1321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs"];
m21_1281 -> m21_1323  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs"];
m21_1281 -> m21_1289  [key=1, style=dashed, color=darkseagreen4, label=clientOnError];
m21_1281 -> m21_1293  [key=1, style=dashed, color=darkseagreen4, label=pacing];
m21_1275 -> m21_1276  [key=0, style=solid];
m21_1276 -> m21_1277  [key=0, style=solid];
m21_1276 -> m21_97  [key=2, style=dotted];
m21_1276 -> m21_1279  [key=1, style=dashed, color=darkseagreen4, label=historyPiece];
m21_1276 -> m21_1313  [key=1, style=dashed, color=darkseagreen4, label=historyPiece];
m21_1276 -> m21_1296  [key=1, style=dashed, color=darkseagreen4, label=historyPiece];
m21_1276 -> m21_1297  [key=1, style=dashed, color=darkseagreen4, label=historyPiece];
m21_1277 -> m21_1278  [key=0, style=solid];
m21_1277 -> m21_500  [key=2, style=dotted];
m21_1277 -> m21_1279  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_1277 -> m21_1309  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_1277 -> m21_1280  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_1277 -> m21_1317  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_1277 -> m21_1285  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_1296 -> m21_1297  [key=0, style=solid];
m21_1296 -> m21_1300  [key=0, style=solid];
m21_1296 -> m21_334  [key=2, style=dotted];
m21_1297 -> m21_1298  [key=0, style=solid];
m21_1297 -> m21_1305  [key=2, style=dotted];
m21_1297 -> m21_1326  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1297 -> m21_1299  [key=1, style=dashed, color=darkseagreen4, label=filteredPiece];
m21_1283 -> m21_1284  [key=0, style=solid];
m21_1290 -> m21_1291  [key=0, style=solid];
m21_1284 -> m21_1285  [key=0, style=solid];
m21_1291 -> m21_1292  [key=0, style=solid];
m21_1282 -> m21_1283  [key=0, style=solid];
m21_1289 -> m21_1290  [key=0, style=solid];
m21_1293 -> m21_1294  [key=0, style=solid];
m21_1293 -> m21_1295  [key=0, style=solid];
m21_1286 -> m21_1287  [key=0, style=solid];
m21_1286 -> m21_1292  [key=1, style=dashed, color=darkseagreen4, label=waitResult];
m21_1287 -> m21_1288  [key=0, style=solid];
m21_1287 -> m21_1289  [key=0, style=solid];
m21_1292 -> m21_1293  [key=0, style=solid];
m21_1292 -> m21_1296  [key=0, style=solid];
m21_1299 -> m21_1274  [key=0, style=solid];
m21_1299 -> m21_1307  [key=2, style=dotted];
m21_1301 -> m21_1253  [key=0, style=bold, color=blue];
m21_569 -> m21_604  [key=0, style=solid];
m21_604 -> m21_605  [key=0, style=solid];
m21_604 -> m21_606  [key=0, style=solid];
m21_605 -> m21_615  [key=0, style=solid];
m21_606 -> m21_607  [key=0, style=solid];
m21_606 -> m21_616  [key=2, style=dotted];
m21_606 -> m21_614  [key=1, style=dashed, color=darkseagreen4, label=isResetTime];
m21_607 -> m21_608  [key=0, style=solid];
m21_607 -> m21_612  [key=0, style=solid];
m21_614 -> m21_615  [key=0, style=solid];
m21_608 -> m21_609  [key=0, style=solid];
m21_608 -> m21_611  [key=0, style=solid];
m21_612 -> m21_613  [key=0, style=solid];
m21_612 -> m21_36  [key=2, style=dotted];
m21_609 -> m21_610  [key=0, style=solid];
m21_609 -> m21_36  [key=2, style=dotted];
m21_611 -> m21_614  [key=0, style=solid];
m21_611 -> m21_617  [key=2, style=dotted];
m21_611 -> m21_571  [key=2, style=dotted];
m21_610 -> m21_614  [key=0, style=solid];
m21_610 -> m21_35  [key=2, style=dotted];
m21_613 -> m21_614  [key=0, style=solid];
m21_613 -> m21_618  [key=2, style=dotted];
m21_613 -> m21_619  [key=2, style=dotted];
m21_613 -> m21_620  [key=2, style=dotted];
m21_613 -> m21_621  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_615 -> m21_569  [key=0, style=bold, color=blue];
m21_44 -> m21_45  [key=0, style=solid];
m21_44 -> m21_52  [key=2, style=dotted];
m21_775 -> m21_851  [key=0, style=solid];
m21_775 -> m21_861  [key=1, style=dashed, color=darkseagreen4, label="IBApi.Order"];
m21_775 -> m21_864  [key=1, style=dashed, color=darkseagreen4, label="IBApi.Order"];
m21_851 -> m21_852  [key=0, style=solid];
m21_851 -> m21_854  [key=0, style=solid];
m21_851 -> m21_856  [key=0, style=solid];
m21_851 -> m21_858  [key=0, style=solid];
m21_851 -> m21_860  [key=0, style=solid];
m21_851 -> m21_864  [key=0, style=solid];
m21_861 -> m21_862  [key=0, style=solid];
m21_861 -> m21_863  [key=0, style=solid];
m21_864 -> m21_865  [key=0, style=solid];
m21_864 -> m21_866  [key=2, style=dotted];
m21_852 -> m21_853  [key=0, style=solid];
m21_854 -> m21_855  [key=0, style=solid];
m21_856 -> m21_857  [key=0, style=solid];
m21_858 -> m21_859  [key=0, style=solid];
m21_860 -> m21_861  [key=0, style=solid];
m21_853 -> m21_865  [key=0, style=solid];
m21_855 -> m21_865  [key=0, style=solid];
m21_857 -> m21_865  [key=0, style=solid];
m21_859 -> m21_865  [key=0, style=solid];
m21_862 -> m21_865  [key=0, style=solid];
m21_863 -> m21_865  [key=0, style=solid];
m21_865 -> m21_775  [key=0, style=bold, color=blue];
m21_331 -> m21_785  [key=0, style=solid];
m21_331 -> m21_786  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_331 -> m21_787  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_331 -> m21_788  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_331 -> m21_792  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_331 -> m21_794  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_331 -> m21_795  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_331 -> m21_796  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_331 -> m21_797  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_331 -> m21_801  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_331 -> m21_803  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_331 -> m21_804  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_331 -> m21_807  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_785 -> m21_786  [key=0, style=solid];
m21_785 -> m21_810  [key=2, style=dotted];
m21_785 -> m21_787  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m21_786 -> m21_787  [key=0, style=solid];
m21_786 -> m21_811  [key=2, style=dotted];
m21_786 -> m21_790  [key=1, style=dashed, color=darkseagreen4, label=ibSymbol];
m21_786 -> m21_791  [key=1, style=dashed, color=darkseagreen4, label=ibSymbol];
m21_786 -> m21_798  [key=1, style=dashed, color=darkseagreen4, label=ibSymbol];
m21_786 -> m21_802  [key=1, style=dashed, color=darkseagreen4, label=ibSymbol];
m21_787 -> m21_788  [key=0, style=solid];
m21_787 -> m21_812  [key=2, style=dotted];
m21_787 -> m21_789  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_787 -> m21_793  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_787 -> m21_795  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_787 -> m21_802  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_787 -> m21_808  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_788 -> m21_789  [key=0, style=solid];
m21_788 -> m21_792  [key=0, style=solid];
m21_792 -> m21_793  [key=0, style=solid];
m21_792 -> m21_794  [key=0, style=solid];
m21_794 -> m21_795  [key=0, style=solid];
m21_794 -> m21_801  [key=0, style=solid];
m21_795 -> m21_796  [key=0, style=solid];
m21_795 -> m21_176  [key=2, style=dotted];
m21_795 -> m21_795  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_796 -> m21_797  [key=0, style=solid];
m21_796 -> m21_796  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_797 -> m21_798  [key=0, style=solid];
m21_797 -> m21_749  [key=2, style=dotted];
m21_797 -> m21_797  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_801 -> m21_802  [key=0, style=solid];
m21_801 -> m21_808  [key=0, style=solid];
m21_803 -> m21_804  [key=0, style=solid];
m21_803 -> m21_176  [key=2, style=dotted];
m21_803 -> m21_803  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_803 -> m21_805  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_803 -> m21_807  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_804 -> m21_805  [key=0, style=solid];
m21_804 -> m21_807  [key=0, style=solid];
m21_807 -> m21_808  [key=0, style=solid];
m21_807 -> m21_815  [key=2, style=dotted];
m21_807 -> m21_807  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_790 -> m21_791  [key=0, style=solid];
m21_790 -> m21_813  [key=2, style=dotted];
m21_790 -> m21_790  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_791 -> m21_792  [key=0, style=solid];
m21_791 -> m21_814  [key=2, style=dotted];
m21_791 -> m21_791  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_791 -> m21_793  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_791 -> m21_795  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_791 -> m21_802  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_791 -> m21_808  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_798 -> m21_799  [key=0, style=solid];
m21_798 -> m21_798  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_802 -> m21_803  [key=0, style=solid];
m21_802 -> m21_802  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_789 -> m21_790  [key=0, style=solid];
m21_789 -> m21_789  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_793 -> m21_794  [key=0, style=solid];
m21_793 -> m21_344  [key=2, style=dotted];
m21_793 -> m21_793  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_793 -> m21_795  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_793 -> m21_802  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_793 -> m21_808  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_808 -> m21_809  [key=0, style=solid];
m21_799 -> m21_800  [key=0, style=solid];
m21_799 -> m21_799  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_800 -> m21_801  [key=0, style=solid];
m21_800 -> m21_355  [key=2, style=dotted];
m21_800 -> m21_800  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_800 -> m21_802  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_800 -> m21_808  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_805 -> m21_806  [key=0, style=solid];
m21_805 -> m21_805  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_806 -> m21_808  [key=0, style=solid];
m21_806 -> m21_398  [key=2, style=dotted];
m21_806 -> m21_806  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_809 -> m21_331  [key=0, style=bold, color=blue];
m21_355 -> m21_356  [key=0, style=solid];
m21_355 -> m21_357  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_355 -> m21_359  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_356 -> m21_357  [key=0, style=solid];
m21_357 -> m21_358  [key=0, style=solid];
m21_357 -> m21_359  [key=0, style=solid];
m21_357 -> m21_340  [key=2, style=dotted];
m21_357 -> m21_353  [key=2, style=dotted];
m21_359 -> m21_360  [key=0, style=solid];
m21_359 -> m21_354  [key=2, style=dotted];
m21_359 -> m21_362  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_358 -> m21_363  [key=0, style=solid];
m21_360 -> m21_361  [key=0, style=solid];
m21_360 -> m21_362  [key=0, style=solid];
m21_362 -> m21_363  [key=0, style=solid];
m21_361 -> m21_363  [key=0, style=solid];
m21_363 -> m21_355  [key=0, style=bold, color=blue];
m21_665 -> m21_867  [key=0, style=solid];
m21_665 -> m21_889  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_867 -> m21_868  [key=0, style=solid];
m21_867 -> m21_872  [key=0, style=solid];
m21_867 -> m21_876  [key=0, style=solid];
m21_867 -> m21_878  [key=0, style=solid];
m21_867 -> m21_880  [key=0, style=solid];
m21_867 -> m21_882  [key=0, style=solid];
m21_867 -> m21_884  [key=0, style=solid];
m21_867 -> m21_887  [key=0, style=solid];
m21_867 -> m21_889  [key=0, style=solid];
m21_889 -> m21_890  [key=0, style=solid];
m21_889 -> m21_826  [key=2, style=dotted];
m21_868 -> m21_869  [key=0, style=solid];
m21_872 -> m21_873  [key=0, style=solid];
m21_876 -> m21_877  [key=0, style=solid];
m21_878 -> m21_879  [key=0, style=solid];
m21_880 -> m21_881  [key=0, style=solid];
m21_882 -> m21_883  [key=0, style=solid];
m21_884 -> m21_885  [key=0, style=solid];
m21_887 -> m21_888  [key=0, style=solid];
m21_869 -> m21_870  [key=0, style=solid];
m21_870 -> m21_871  [key=0, style=solid];
m21_871 -> m21_890  [key=0, style=solid];
m21_873 -> m21_874  [key=0, style=solid];
m21_874 -> m21_875  [key=0, style=solid];
m21_875 -> m21_890  [key=0, style=solid];
m21_877 -> m21_890  [key=0, style=solid];
m21_879 -> m21_890  [key=0, style=solid];
m21_881 -> m21_890  [key=0, style=solid];
m21_883 -> m21_890  [key=0, style=solid];
m21_885 -> m21_886  [key=0, style=solid];
m21_885 -> m21_52  [key=2, style=dotted];
m21_886 -> m21_890  [key=0, style=solid];
m21_888 -> m21_890  [key=0, style=solid];
m21_890 -> m21_665  [key=0, style=bold, color=blue];
m21_747 -> m21_836  [key=0, style=solid];
m21_747 -> m21_849  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderType"];
m21_836 -> m21_837  [key=0, style=solid];
m21_836 -> m21_839  [key=0, style=solid];
m21_836 -> m21_841  [key=0, style=solid];
m21_836 -> m21_843  [key=0, style=solid];
m21_836 -> m21_845  [key=0, style=solid];
m21_836 -> m21_847  [key=0, style=solid];
m21_836 -> m21_849  [key=0, style=solid];
m21_849 -> m21_850  [key=0, style=solid];
m21_849 -> m21_783  [key=2, style=dotted];
m21_837 -> m21_838  [key=0, style=solid];
m21_839 -> m21_840  [key=0, style=solid];
m21_841 -> m21_842  [key=0, style=solid];
m21_843 -> m21_844  [key=0, style=solid];
m21_845 -> m21_846  [key=0, style=solid];
m21_847 -> m21_848  [key=0, style=solid];
m21_838 -> m21_850  [key=0, style=solid];
m21_840 -> m21_850  [key=0, style=solid];
m21_842 -> m21_850  [key=0, style=solid];
m21_844 -> m21_850  [key=0, style=solid];
m21_846 -> m21_850  [key=0, style=solid];
m21_848 -> m21_850  [key=0, style=solid];
m21_850 -> m21_747  [key=0, style=bold, color=blue];
m21_149 -> m21_150  [key=0, style=solid];
m21_150 -> m21_151  [key=0, style=solid];
m21_150 -> m21_117  [key=2, style=dotted];
m21_151 -> m21_152  [key=0, style=solid];
m21_151 -> m21_118  [key=2, style=dotted];
m21_151 -> m21_120  [key=2, style=dotted];
m21_151 -> m21_153  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_152 -> m21_149  [key=0, style=bold, color=blue];
m21_47 -> m21_48  [key=0, style=solid];
m21_45 -> m21_39  [key=0, style=solid];
m21_45 -> m21_36  [key=2, style=dotted];
m21_69 -> m21_62  [key=0, style=bold, color=blue];
m21_603 -> m21_1033  [key=0, style=solid];
m21_1033 -> m21_1034  [key=0, style=solid];
m21_1033 -> m21_1053  [key=0, style=solid];
m21_1033 -> m21_1055  [key=0, style=solid];
m21_1033 -> m21_1036  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1033 -> m21_1037  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1033 -> m21_1038  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1033 -> m21_1039  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1033 -> m21_1040  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1033 -> m21_1041  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1033 -> m21_1042  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1033 -> m21_1050  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1033 -> m21_1052  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1034 -> m21_1035  [key=0, style=solid];
m21_1034 -> m21_1033  [key=0, style=solid];
m21_1034 -> m21_1056  [key=2, style=dotted];
m21_1053 -> m21_1054  [key=0, style=solid];
m21_1036 -> m21_1037  [key=0, style=solid];
m21_1036 -> m21_36  [key=2, style=dotted];
m21_1037 -> m21_1038  [key=0, style=solid];
m21_1037 -> m21_1033  [key=0, style=solid];
m21_1037 -> m21_1057  [key=2, style=dotted];
m21_1038 -> m21_1039  [key=0, style=solid];
m21_1038 -> m21_1045  [key=1, style=dashed, color=darkseagreen4, label=subscribeSymbol];
m21_1038 -> m21_1051  [key=1, style=dashed, color=darkseagreen4, label=subscribeSymbol];
m21_1039 -> m21_1040  [key=0, style=solid];
m21_1039 -> m21_1042  [key=0, style=solid];
m21_1039 -> m21_1058  [key=2, style=dotted];
m21_1040 -> m21_1041  [key=0, style=solid];
m21_1040 -> m21_1045  [key=1, style=dashed, color=darkseagreen4, label=subscribeSymbol];
m21_1040 -> m21_1051  [key=1, style=dashed, color=darkseagreen4, label=subscribeSymbol];
m21_1041 -> m21_1042  [key=0, style=solid];
m21_1041 -> m21_1059  [key=2, style=dotted];
m21_1042 -> m21_1043  [key=0, style=solid];
m21_1042 -> m21_1044  [key=0, style=solid];
m21_1042 -> m21_1058  [key=2, style=dotted];
m21_1050 -> m21_1051  [key=0, style=solid];
m21_1052 -> m21_1033  [key=0, style=solid];
m21_1052 -> d85  [key=2, style=dotted];
m21_1052 -> m21_501  [key=2, style=dotted];
m21_1035 -> m21_1036  [key=0, style=solid];
m21_1045 -> m21_1046  [key=0, style=solid];
m21_1045 -> m21_331  [key=2, style=dotted];
m21_1045 -> m21_1049  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_1045 -> m21_1052  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_1051 -> m21_1052  [key=0, style=solid];
m21_1043 -> m21_1055  [key=0, style=solid];
m21_1044 -> m21_1045  [key=0, style=solid];
m21_1044 -> m21_500  [key=2, style=dotted];
m21_1044 -> m21_1046  [key=1, style=dashed, color=darkseagreen4, label=id];
m21_1044 -> m21_1048  [key=1, style=dashed, color=darkseagreen4, label=id];
m21_1044 -> m21_1049  [key=1, style=dashed, color=darkseagreen4, label=id];
m21_1044 -> m21_1050  [key=1, style=dashed, color=darkseagreen4, label=id];
m21_1044 -> m21_1051  [key=1, style=dashed, color=darkseagreen4, label=id];
m21_1044 -> m21_1052  [key=1, style=dashed, color=darkseagreen4, label=id];
m21_1046 -> m21_1047  [key=0, style=solid];
m21_1048 -> m21_1049  [key=0, style=solid];
m21_1049 -> m21_1050  [key=0, style=solid];
m21_1049 -> m21_97  [key=2, style=dotted];
m21_1049 -> m21_502  [key=2, style=dotted];
m21_1047 -> m21_1048  [key=0, style=solid];
m21_1047 -> m21_1060  [key=2, style=dotted];
m21_1054 -> m21_1055  [key=0, style=solid];
m21_1054 -> m21_52  [key=2, style=dotted];
m21_1055 -> m21_603  [key=0, style=bold, color=blue];
m21_750 -> m21_751  [key=0, style=solid];
m21_750 -> m21_752  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_750 -> m21_753  [key=1, style=dashed, color=darkseagreen4, label="IBApi.Order"];
m21_750 -> m21_755  [key=1, style=dashed, color=darkseagreen4, label="IBApi.Order"];
m21_750 -> m21_758  [key=1, style=dashed, color=darkseagreen4, label="IBApi.Order"];
m21_750 -> m21_760  [key=1, style=dashed, color=darkseagreen4, label="IBApi.Order"];
m21_750 -> m21_762  [key=1, style=dashed, color=darkseagreen4, label="IBApi.Order"];
m21_750 -> m21_764  [key=1, style=dashed, color=darkseagreen4, label="IBApi.Order"];
m21_750 -> m21_766  [key=1, style=dashed, color=darkseagreen4, label="IBApi.Order"];
m21_750 -> m21_768  [key=1, style=dashed, color=darkseagreen4, label="IBApi.Order"];
m21_750 -> m21_770  [key=1, style=dashed, color=darkseagreen4, label="IBApi.Order"];
m21_751 -> m21_752  [key=0, style=solid];
m21_752 -> m21_753  [key=0, style=solid];
m21_752 -> m21_773  [key=2, style=dotted];
m21_752 -> m21_758  [key=1, style=dashed, color=darkseagreen4, label=mappedSymbol];
m21_752 -> m21_760  [key=1, style=dashed, color=darkseagreen4, label=mappedSymbol];
m21_752 -> m21_762  [key=1, style=dashed, color=darkseagreen4, label=mappedSymbol];
m21_752 -> m21_764  [key=1, style=dashed, color=darkseagreen4, label=mappedSymbol];
m21_752 -> m21_766  [key=1, style=dashed, color=darkseagreen4, label=mappedSymbol];
m21_752 -> m21_768  [key=1, style=dashed, color=darkseagreen4, label=mappedSymbol];
m21_753 -> m21_754  [key=0, style=solid];
m21_753 -> m21_774  [key=2, style=dotted];
m21_755 -> m21_756  [key=0, style=solid];
m21_755 -> m21_775  [key=2, style=dotted];
m21_755 -> m21_769  [key=1, style=dashed, color=darkseagreen4, label=orderType];
m21_758 -> m21_770  [key=0, style=solid];
m21_758 -> m21_776  [key=2, style=dotted];
m21_758 -> m21_694  [key=2, style=dotted];
m21_758 -> m21_777  [key=2, style=dotted];
m21_760 -> m21_770  [key=0, style=solid];
m21_760 -> m21_778  [key=2, style=dotted];
m21_760 -> m21_694  [key=2, style=dotted];
m21_760 -> m21_777  [key=2, style=dotted];
m21_762 -> m21_770  [key=0, style=solid];
m21_762 -> m21_779  [key=2, style=dotted];
m21_762 -> m21_694  [key=2, style=dotted];
m21_762 -> m21_777  [key=2, style=dotted];
m21_764 -> m21_770  [key=0, style=solid];
m21_764 -> m21_780  [key=2, style=dotted];
m21_764 -> m21_694  [key=2, style=dotted];
m21_764 -> m21_508  [key=2, style=dotted];
m21_764 -> m21_777  [key=2, style=dotted];
m21_766 -> m21_770  [key=0, style=solid];
m21_766 -> m21_781  [key=2, style=dotted];
m21_766 -> m21_694  [key=2, style=dotted];
m21_766 -> m21_508  [key=2, style=dotted];
m21_766 -> m21_777  [key=2, style=dotted];
m21_768 -> m21_770  [key=0, style=solid];
m21_768 -> m21_782  [key=2, style=dotted];
m21_768 -> m21_694  [key=2, style=dotted];
m21_768 -> m21_508  [key=2, style=dotted];
m21_768 -> m21_777  [key=2, style=dotted];
m21_768 -> m21_771  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_770 -> m21_771  [key=0, style=solid];
m21_770 -> d85  [key=2, style=dotted];
m21_770 -> m21_106  [key=2, style=dotted];
m21_754 -> m21_755  [key=0, style=solid];
m21_754 -> m21_758  [key=1, style=dashed, color=darkseagreen4, label=quantitySign];
m21_754 -> m21_760  [key=1, style=dashed, color=darkseagreen4, label=quantitySign];
m21_754 -> m21_762  [key=1, style=dashed, color=darkseagreen4, label=quantitySign];
m21_754 -> m21_764  [key=1, style=dashed, color=darkseagreen4, label=quantitySign];
m21_754 -> m21_766  [key=1, style=dashed, color=darkseagreen4, label=quantitySign];
m21_754 -> m21_768  [key=1, style=dashed, color=darkseagreen4, label=quantitySign];
m21_756 -> m21_757  [key=0, style=solid];
m21_756 -> m21_759  [key=0, style=solid];
m21_756 -> m21_761  [key=0, style=solid];
m21_756 -> m21_763  [key=0, style=solid];
m21_756 -> m21_765  [key=0, style=solid];
m21_756 -> m21_767  [key=0, style=solid];
m21_756 -> m21_769  [key=0, style=solid];
m21_769 -> m21_772  [key=0, style=solid];
m21_769 -> m21_783  [key=2, style=dotted];
m21_757 -> m21_758  [key=0, style=solid];
m21_759 -> m21_760  [key=0, style=solid];
m21_761 -> m21_762  [key=0, style=solid];
m21_763 -> m21_764  [key=0, style=solid];
m21_765 -> m21_766  [key=0, style=solid];
m21_767 -> m21_768  [key=0, style=solid];
m21_771 -> m21_772  [key=0, style=solid];
m21_772 -> m21_750  [key=0, style=bold, color=blue];
m21_354 -> m21_373  [key=0, style=solid];
m21_354 -> m21_376  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_354 -> m21_378  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_354 -> m21_392  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_354 -> m21_380  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_373 -> m21_374  [key=0, style=solid];
m21_373 -> m21_381  [key=1, style=dashed, color=darkseagreen4, label=timeout];
m21_373 -> m21_382  [key=1, style=dashed, color=darkseagreen4, label=timeout];
m21_376 -> m21_377  [key=0, style=solid];
m21_378 -> m21_379  [key=0, style=solid];
m21_378 -> m21_389  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs"];
m21_378 -> m21_391  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs"];
m21_378 -> m21_383  [key=1, style=dashed, color=darkseagreen4, label=clientOnContractDetails];
m21_380 -> m21_381  [key=0, style=solid];
m21_380 -> m21_386  [key=2, style=dotted];
m21_374 -> m21_375  [key=0, style=solid];
m21_374 -> m21_378  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_381 -> m21_382  [key=0, style=solid];
m21_381 -> m21_383  [key=0, style=solid];
m21_381 -> m21_100  [key=2, style=dotted];
m21_382 -> m21_383  [key=0, style=solid];
m21_382 -> m21_387  [key=2, style=dotted];
m21_375 -> m21_376  [key=0, style=solid];
m21_375 -> m21_177  [key=2, style=dotted];
m21_375 -> m21_378  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_375 -> m21_389  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_375 -> m21_380  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_377 -> m21_378  [key=0, style=solid];
m21_377 -> m21_98  [key=2, style=dotted];
m21_377 -> m21_394  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_377 -> m21_381  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_379 -> m21_380  [key=0, style=solid];
m21_383 -> m21_384  [key=0, style=solid];
m21_384 -> m21_385  [key=0, style=solid];
m21_385 -> m21_354  [key=0, style=bold, color=blue];
m21_243 -> m21_260  [key=0, style=solid];
m21_260 -> m21_261  [key=0, style=solid];
m21_260 -> m21_279  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.AccountDownloadEndEventArgs"];
m21_260 -> m21_269  [key=1, style=dashed, color=darkseagreen4, label=clientOnAccountDownloadEnd];
m21_260 -> m21_273  [key=1, style=dashed, color=darkseagreen4, label=clientOnAccountDownloadEnd];
m21_261 -> m21_262  [key=0, style=solid];
m21_269 -> m21_270  [key=0, style=solid];
m21_273 -> m21_274  [key=0, style=solid];
m21_262 -> m21_263  [key=0, style=solid];
m21_262 -> m21_98  [key=2, style=dotted];
m21_262 -> m21_283  [key=1, style=dashed, color=darkseagreen4, label=firstAccountUpdateReceived];
m21_262 -> m21_266  [key=1, style=dashed, color=darkseagreen4, label=firstAccountUpdateReceived];
m21_263 -> m21_264  [key=0, style=solid];
m21_263 -> m21_270  [key=1, style=dashed, color=darkseagreen4, label=clientOnUpdateAccountValue];
m21_263 -> m21_274  [key=1, style=dashed, color=darkseagreen4, label=clientOnUpdateAccountValue];
m21_266 -> m21_267  [key=0, style=solid];
m21_266 -> m21_100  [key=2, style=dotted];
m21_264 -> m21_265  [key=0, style=solid];
m21_270 -> m21_271  [key=0, style=solid];
m21_274 -> m21_275  [key=0, style=solid];
m21_265 -> m21_266  [key=0, style=solid];
m21_265 -> m21_277  [key=2, style=dotted];
m21_267 -> m21_268  [key=0, style=solid];
m21_267 -> m21_242  [key=2, style=dotted];
m21_268 -> m21_269  [key=0, style=solid];
m21_268 -> m21_273  [key=0, style=solid];
m21_268 -> m21_100  [key=2, style=dotted];
m21_271 -> m21_272  [key=0, style=solid];
m21_271 -> m21_36  [key=2, style=dotted];
m21_272 -> m21_276  [key=0, style=solid];
m21_275 -> m21_276  [key=0, style=solid];
m21_276 -> m21_243  [key=0, style=bold, color=blue];
m21_42 -> m21_43  [key=0, style=solid];
m21_42 -> m21_45  [key=0, style=solid];
m21_42 -> m21_51  [key=2, style=dotted];
m21_59 -> m21_60  [key=0, style=solid, color=green];
m21_31 -> m21_32  [key=0, style=solid, color=green];
m21_31 -> m21_33  [key=0, style=solid, color=green];
m21_31 -> m21_42  [key=2, style=dotted, color=green];
m21_33 -> m21_34  [key=0, style=solid, color=green];
m21_33 -> m21_36  [key=2, style=dotted];
m21_33 -> m21_43  [key=2, style=dotted, color=green];
m21_33 -> m21_37  [key=1, style=dashed, color=green, label=baseScript];
m21_48 -> m21_49  [key=0, style=solid];
m21_48 -> m21_52  [key=2, style=dotted];
m21_29 -> m21_30  [key=0, style=solid];
m21_29 -> m21_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs"];
m21_29 -> m21_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs"];
m21_30 -> m21_31  [key=0, style=solid, color=green];
m21_30 -> m21_33  [key=0, style=solid];
m21_30 -> m21_38  [key=1, style=dashed, color=green, label=string];
m21_32 -> m21_33  [key=0, style=solid];
m21_32 -> m21_35  [key=2, style=dotted];
m21_32 -> m21_41  [key=0, style=solid, color=green];
m21_34 -> m21_29  [key=0, style=bold, color=blue];
m21_34 -> m21_35  [key=0, style=solid, color=green];
m21_34 -> m21_44  [key=2, style=dotted, color=green];
m21_34 -> m21_45  [key=2, style=dotted, color=green];
m21_34 -> m21_37  [key=1, style=dashed, color=green, label=length];
m21_37 -> m21_38  [key=0, style=solid, color=green];
m21_37 -> m21_813  [key=2, style=dotted, color=green];
m21_37 -> m21_52  [key=1, style=dashed, color=green, label=directory];
m21_37 -> m21_60  [key=1, style=dashed, color=green, label=directory];
m21_38 -> m21_39  [key=0, style=solid, color=green];
m21_38 -> m21_36  [key=2, style=dotted];
m21_38 -> m21_38  [key=3, color=green, style=bold, label="method methodReturn string "];
m21_38 -> m21_813  [key=2, style=dotted, color=green];
m21_38 -> m21_47  [key=2, style=dotted, color=green];
m21_38 -> m21_119  [key=2, style=dotted, color=green];
m21_38 -> m21_118  [key=2, style=dotted, color=green];
m21_38 -> m21_51  [key=1, style=dashed, color=green, label="lambda expression"];
m21_38 -> m21_55  [key=1, style=dashed, color=green, label="lambda expression"];
m21_38 -> m21_59  [key=1, style=dashed, color=green, label="lambda expression"];
m21_39 -> m21_40  [key=0, style=solid];
m21_39 -> m21_46  [key=0, style=solid];
m21_39 -> m21_50  [key=2, style=dotted];
m21_40 -> m21_41  [key=0, style=solid];
m21_40 -> m21_39  [key=0, style=solid];
m21_40 -> m21_50  [key=2, style=dotted];
m21_40 -> m21_42  [key=2, style=dotted];
m21_46 -> m21_47  [key=0, style=solid];
m21_46 -> m21_49  [key=0, style=solid];
m21_46 -> m21_36  [key=2, style=dotted];
m21_41 -> m21_42  [key=0, style=solid];
m21_41 -> m21_36  [key=2, style=dotted];
m21_41 -> m21_30  [key=0, style=bold, color=blue];
m21_43 -> m21_44  [key=0, style=solid];
m21_49 -> m21_37  [key=0, style=bold, color=blue];
m21_103 -> m21_104  [key=0, style=solid];
m21_103 -> m21_105  [key=2, style=dotted];
m21_103 -> m21_106  [key=2, style=dotted];
m21_108 -> m21_109  [key=0, style=solid];
m21_108 -> m21_35  [key=2, style=dotted];
m21_102 -> m21_103  [key=0, style=solid];
m21_104 -> m21_102  [key=0, style=bold, color=blue];
m21_107 -> m21_108  [key=0, style=solid];
m21_109 -> m21_107  [key=0, style=bold, color=blue];
m21_123 -> m21_124  [key=0, style=solid];
m21_127 -> m21_128  [key=0, style=solid];
m21_130 -> m21_131  [key=0, style=solid];
m21_130 -> m21_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_130 -> m21_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_130 -> m21_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_130 -> m21_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_146 -> m21_147  [key=0, style=solid];
m21_124 -> m21_125  [key=0, style=solid];
m21_124 -> m21_126  [key=2, style=dotted];
m21_124 -> m21_124  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Holding>"];
m21_125 -> m21_123  [key=0, style=bold, color=blue];
m21_128 -> m21_129  [key=0, style=solid];
m21_129 -> m21_127  [key=0, style=bold, color=blue];
m21_131 -> m21_132  [key=0, style=solid];
m21_131 -> m21_134  [key=0, style=solid];
m21_132 -> m21_133  [key=0, style=solid];
m21_132 -> m21_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_132 -> m21_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_132 -> m21_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_132 -> m21_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_134 -> m21_135  [key=0, style=solid];
m21_134 -> m21_140  [key=2, style=dotted];
m21_134 -> m21_138  [key=1, style=dashed, color=darkseagreen4, label=currency];
m21_134 -> m21_143  [key=1, style=dashed, color=darkseagreen4, label=currency];
m21_136 -> m21_137  [key=0, style=solid];
m21_136 -> m21_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_136 -> m21_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_138 -> m21_139  [key=0, style=solid];
m21_138 -> m21_141  [key=2, style=dotted];
m21_138 -> m21_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_138 -> m21_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_133 -> m21_139  [key=0, style=solid];
m21_135 -> m21_136  [key=0, style=solid];
m21_135 -> m21_138  [key=0, style=solid];
m21_143 -> m21_144  [key=0, style=solid];
m21_143 -> m21_145  [key=2, style=dotted];
m21_143 -> m21_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_137 -> m21_139  [key=0, style=solid];
m21_139 -> m21_130  [key=0, style=bold, color=blue];
m21_142 -> m21_143  [key=0, style=solid];
m21_144 -> m21_142  [key=0, style=bold, color=blue];
m21_147 -> m21_148  [key=0, style=solid];
m21_148 -> m21_146  [key=0, style=bold, color=blue];
m21_153 -> m21_154  [key=0, style=solid];
m21_154 -> m21_155  [key=0, style=solid];
m21_154 -> m21_156  [key=2, style=dotted];
m21_154 -> m21_157  [key=2, style=dotted];
m21_154 -> m21_154  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, decimal>"];
m21_155 -> m21_153  [key=0, style=bold, color=blue];
m21_185 -> m21_186  [key=0, style=solid];
m21_185 -> m21_187  [key=2, style=dotted];
m21_181 -> m21_182  [key=0, style=solid];
m21_181 -> m21_35  [key=2, style=dotted];
m21_180 -> m21_181  [key=0, style=solid];
m21_180 -> m21_182  [key=0, style=solid];
m21_184 -> m21_185  [key=0, style=solid];
m21_184 -> m21_186  [key=0, style=solid];
m21_179 -> m21_180  [key=0, style=solid];
m21_182 -> m21_179  [key=0, style=bold, color=blue];
m21_183 -> m21_184  [key=0, style=solid];
m21_183 -> m21_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs"];
m21_186 -> m21_183  [key=0, style=bold, color=blue];
m21_252 -> m21_253  [key=0, style=solid];
m21_252 -> m21_250  [key=0, style=solid];
m21_252 -> m21_259  [key=2, style=dotted];
m21_254 -> m21_250  [key=0, style=solid];
m21_254 -> m21_52  [key=2, style=dotted];
m21_248 -> m21_249  [key=0, style=solid];
m21_249 -> m21_250  [key=0, style=solid];
m21_249 -> m21_36  [key=2, style=dotted];
m21_250 -> m21_251  [key=0, style=solid];
m21_250 -> m21_255  [key=0, style=solid];
m21_250 -> m21_257  [key=2, style=dotted];
m21_251 -> m21_252  [key=0, style=solid];
m21_251 -> m21_258  [key=2, style=dotted];
m21_255 -> m21_256  [key=0, style=solid];
m21_255 -> m21_36  [key=2, style=dotted];
m21_253 -> m21_254  [key=0, style=solid];
m21_256 -> m21_248  [key=0, style=bold, color=blue];
m21_279 -> m21_280  [key=0, style=solid];
m21_279 -> m21_36  [key=2, style=dotted];
m21_283 -> m21_284  [key=0, style=solid];
m21_283 -> m21_35  [key=2, style=dotted];
m21_278 -> m21_279  [key=0, style=solid];
m21_280 -> m21_281  [key=0, style=solid];
m21_280 -> m21_35  [key=2, style=dotted];
m21_281 -> m21_278  [key=0, style=bold, color=blue];
m21_282 -> m21_283  [key=0, style=solid];
m21_284 -> m21_282  [key=0, style=bold, color=blue];
m21_392 -> m21_393  [key=0, style=solid];
m21_392 -> m21_340  [key=2, style=dotted];
m21_392 -> m21_395  [key=1, style=dashed, color=darkseagreen4, label=uniqueKey];
m21_389 -> m21_390  [key=0, style=solid];
m21_389 -> m21_391  [key=0, style=solid];
m21_394 -> m21_395  [key=0, style=solid];
m21_394 -> m21_35  [key=2, style=dotted];
m21_391 -> m21_392  [key=0, style=solid];
m21_391 -> m21_393  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_391 -> m21_378  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_391 -> m21_384  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_391 -> m21_396  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_388 -> m21_389  [key=0, style=solid];
m21_388 -> m21_391  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs"];
m21_390 -> m21_396  [key=0, style=solid];
m21_393 -> m21_394  [key=0, style=solid];
m21_393 -> m21_397  [key=2, style=dotted];
m21_396 -> m21_388  [key=0, style=bold, color=blue];
m21_395 -> m21_396  [key=0, style=solid];
m21_395 -> m21_36  [key=2, style=dotted];
m21_412 -> m21_413  [key=0, style=solid];
m21_412 -> m21_414  [key=2, style=dotted];
m21_408 -> m21_409  [key=0, style=solid];
m21_411 -> m21_412  [key=0, style=solid];
m21_409 -> m21_410  [key=0, style=solid];
m21_410 -> m21_408  [key=0, style=bold, color=blue];
m21_413 -> m21_411  [key=0, style=bold, color=blue];
m21_435 -> m21_436  [key=0, style=solid];
m21_435 -> m21_35  [key=2, style=dotted];
m21_432 -> m21_433  [key=0, style=solid];
m21_432 -> m21_187  [key=2, style=dotted];
m21_431 -> m21_432  [key=0, style=solid];
m21_433 -> m21_431  [key=0, style=bold, color=blue];
m21_434 -> m21_435  [key=0, style=solid];
m21_436 -> m21_434  [key=0, style=bold, color=blue];
m21_515 -> m21_516  [key=0, style=solid];
m21_515 -> m21_36  [key=2, style=dotted];
m21_510 -> m21_511  [key=0, style=solid];
m21_509 -> m21_510  [key=0, style=solid];
m21_516 -> m21_517  [key=0, style=solid];
m21_516 -> m21_35  [key=2, style=dotted];
m21_525 -> m21_526  [key=0, style=solid];
m21_525 -> m21_35  [key=2, style=dotted];
m21_513 -> m21_514  [key=0, style=solid];
m21_513 -> m21_517  [key=0, style=solid];
m21_514 -> m21_515  [key=0, style=solid];
m21_514 -> m21_518  [key=2, style=dotted];
m21_514 -> m21_465  [key=1, style=dashed, color=darkseagreen4, label=rate];
m21_514 -> m21_497  [key=1, style=dashed, color=darkseagreen4, label=rate];
m21_514 -> m21_517  [key=1, style=dashed, color=darkseagreen4, label=rate];
m21_521 -> m21_522  [key=0, style=solid];
m21_521 -> m21_187  [key=2, style=dotted];
m21_520 -> m21_521  [key=0, style=solid];
m21_520 -> m21_522  [key=0, style=solid];
m21_524 -> m21_525  [key=0, style=solid];
m21_524 -> m21_526  [key=0, style=solid];
m21_528 -> m21_529  [key=0, style=solid];
m21_528 -> m21_530  [key=0, style=solid];
m21_528 -> m21_246  [key=2, style=dotted];
m21_531 -> m21_532  [key=0, style=solid];
m21_511 -> m21_509  [key=0, style=bold, color=blue];
m21_512 -> m21_513  [key=0, style=solid];
m21_512 -> m21_514  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs"];
m21_512 -> m21_515  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs"];
m21_517 -> m21_512  [key=0, style=bold, color=blue];
m21_519 -> m21_520  [key=0, style=solid];
m21_519 -> m21_521  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs"];
m21_522 -> m21_519  [key=0, style=bold, color=blue];
m21_523 -> m21_524  [key=0, style=solid];
m21_526 -> m21_523  [key=0, style=bold, color=blue];
m21_527 -> m21_528  [key=0, style=solid];
m21_529 -> m21_530  [key=0, style=solid];
m21_529 -> m21_484  [key=1, style=dashed, color=darkseagreen4, label=pacingViolation];
m21_529 -> m21_496  [key=1, style=dashed, color=darkseagreen4, label=pacingViolation];
m21_530 -> m21_527  [key=0, style=bold, color=blue];
m21_532 -> m21_533  [key=0, style=solid];
m21_533 -> m21_531  [key=0, style=bold, color=blue];
m21_621 -> m21_622  [key=0, style=solid];
m21_622 -> m21_623  [key=0, style=solid];
m21_622 -> m21_569  [key=2, style=dotted];
m21_623 -> m21_621  [key=0, style=bold, color=blue];
m21_1215 -> m21_1216  [key=0, style=solid];
m21_1215 -> m21_1217  [key=2, style=dotted];
m21_1225 -> m21_1226  [key=0, style=solid];
m21_1225 -> m21_1227  [key=2, style=dotted];
m21_1218 -> m21_1219  [key=0, style=solid];
m21_1221 -> m21_1222  [key=0, style=solid];
m21_1224 -> m21_1225  [key=0, style=solid];
m21_1214 -> m21_1215  [key=0, style=solid];
m21_1216 -> m21_1214  [key=0, style=bold, color=blue];
m21_1219 -> m21_1220  [key=0, style=solid];
m21_1220 -> m21_1218  [key=0, style=bold, color=blue];
m21_1222 -> m21_1223  [key=0, style=solid];
m21_1223 -> m21_1221  [key=0, style=bold, color=blue];
m21_1226 -> m21_1224  [key=0, style=bold, color=blue];
m21_1255 -> m21_1256  [key=0, style=solid];
m21_1258 -> m21_1259  [key=0, style=solid];
m21_1261 -> m21_1262  [key=0, style=solid];
m21_1267 -> m21_1268  [key=0, style=solid];
m21_1266 -> m21_1267  [key=0, style=solid];
m21_1256 -> m21_1257  [key=0, style=solid];
m21_1257 -> m21_1255  [key=0, style=bold, color=blue];
m21_1259 -> m21_1260  [key=0, style=solid];
m21_1260 -> m21_1258  [key=0, style=bold, color=blue];
m21_1262 -> m21_1263  [key=0, style=solid];
m21_1262 -> m21_1264  [key=2, style=dotted];
m21_1262 -> m21_1265  [key=2, style=dotted];
m21_1263 -> m21_1261  [key=0, style=bold, color=blue];
m21_1268 -> m21_1266  [key=0, style=bold, color=blue];
m21_1310 -> m21_1311  [key=0, style=solid];
m21_1310 -> m21_953  [key=2, style=dotted];
m21_1310 -> m21_1312  [key=1, style=dashed, color=darkseagreen4, label=bar];
m21_1310 -> m21_1313  [key=1, style=dashed, color=darkseagreen4, label=bar];
m21_1311 -> m21_1312  [key=0, style=solid];
m21_1311 -> m21_1313  [key=0, style=solid];
m21_1312 -> m21_1313  [key=0, style=solid];
m21_1312 -> m21_1012  [key=2, style=dotted];
m21_1314 -> m21_1315  [key=0, style=solid];
m21_1314 -> m21_35  [key=2, style=dotted];
m21_1318 -> m21_1319  [key=0, style=solid];
m21_1318 -> m21_35  [key=2, style=dotted];
m21_1324 -> m21_1325  [key=0, style=solid];
m21_1324 -> m21_35  [key=2, style=dotted];
m21_1313 -> m21_1314  [key=0, style=solid];
m21_1313 -> m21_187  [key=2, style=dotted];
m21_1309 -> m21_1310  [key=0, style=solid];
m21_1309 -> m21_1315  [key=0, style=solid];
m21_1317 -> m21_1318  [key=0, style=solid];
m21_1317 -> m21_1319  [key=0, style=solid];
m21_1321 -> m21_1322  [key=0, style=solid];
m21_1321 -> m21_1323  [key=0, style=solid];
m21_1321 -> m21_246  [key=2, style=dotted];
m21_1323 -> m21_1324  [key=0, style=solid];
m21_1323 -> m21_1325  [key=0, style=solid];
m21_1323 -> m21_246  [key=2, style=dotted];
m21_1326 -> m21_1327  [key=0, style=solid];
m21_1308 -> m21_1309  [key=0, style=solid];
m21_1308 -> m21_1310  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs"];
m21_1315 -> m21_1308  [key=0, style=bold, color=blue];
m21_1316 -> m21_1317  [key=0, style=solid];
m21_1319 -> m21_1316  [key=0, style=bold, color=blue];
m21_1320 -> m21_1321  [key=0, style=solid];
m21_1320 -> m21_1323  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs"];
m21_1322 -> m21_1323  [key=0, style=solid];
m21_1322 -> m21_1293  [key=1, style=dashed, color=darkseagreen4, label=pacing];
m21_1322 -> m21_1325  [key=1, style=dashed, color=darkseagreen4, label=pacing];
m21_1325 -> m21_1320  [key=0, style=bold, color=blue];
m21_1327 -> m21_1328  [key=0, style=solid];
m21_1328 -> m21_1326  [key=0, style=bold, color=blue];
m21_1356 -> m21_1357  [key=0, style=solid];
m21_1356 -> m21_246  [key=2, style=dotted];
m21_1355 -> m21_1356  [key=0, style=solid];
m21_1358 -> m21_1359  [key=0, style=solid];
m21_1357 -> m21_1355  [key=0, style=bold, color=blue];
m21_1359 -> m21_1360  [key=0, style=solid];
m21_1359 -> m21_246  [key=2, style=dotted];
m21_1360 -> m21_1358  [key=0, style=bold, color=blue];
m21_51 -> m21_52  [key=0, style=solid, color=green];
m21_51 -> m21_575  [key=0, style=solid];
m21_55 -> m21_56  [key=0, style=solid, color=green];
m21_55 -> m21_61  [key=2, style=dotted];
m21_52 -> m21_53  [key=0, style=solid, color=green];
m21_52 -> m21_246  [key=2, style=dotted, color=green];
m21_60 -> m21_61  [key=0, style=solid, color=green];
m21_60 -> m21_69  [key=2, style=dotted, color=green];
m21_60 -> m21_58  [key=2, style=dotted, color=green];
m21_60 -> m21_62  [key=1, style=dashed, color=green, label=info];
m21_60 -> m21_63  [key=1, style=dashed, color=green, label=info];
m21_60 -> m21_53  [key=0, style=bold, color=blue];
m21_53 -> m21_51  [key=0, style=bold, color=blue];
m21_53 -> m21_54  [key=0, style=solid];
m21_53 -> m21_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_61 -> m21_62  [key=0, style=solid, color=green];
m21_61 -> m21_70  [key=2, style=dotted, color=green];
m21_61 -> m21_309  [key=0, style=solid];
m21_61 -> m21_312  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_61 -> m21_314  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_61 -> m21_316  [key=1, style=dashed, color=darkseagreen4, label=bool];
m21_61 -> m21_318  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_61 -> m21_320  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_61 -> m21_321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_61 -> m21_324  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_61 -> m21_325  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_61 -> m21_326  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_62 -> m21_62  [key=1, style=dashed, color=green, label=line];
m21_62 -> m21_63  [key=0, style=solid, color=green];
m21_62 -> m21_71  [key=2, style=dotted, color=green];
m21_62 -> m21_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_63 -> m21_63  [key=1, style=dashed, color=green, label=info];
m21_63 -> m21_64  [key=0, style=solid, color=green];
m21_63 -> m21_58  [key=2, style=dotted, color=green];
m21_63 -> m21_65  [key=1, style=dashed, color=green, label=info];
m21_63 -> m21_66  [key=1, style=dashed, color=green, label=info];
m21_63 -> m21_36  [key=2, style=dotted];
m21_56 -> m21_57  [key=0, style=solid, color=green];
m21_56 -> m21_58  [key=2, style=dotted, color=green];
m21_56 -> m21_60  [key=0, style=solid];
m21_57 -> m21_55  [key=0, style=bold, color=blue];
m21_57 -> m21_58  [key=0, style=solid];
m21_64 -> m21_64  [key=1, style=dashed, color=green, label=line];
m21_64 -> m21_65  [key=0, style=solid, color=green];
m21_64 -> m21_69  [key=2, style=dotted, color=green];
m21_64 -> m21_66  [key=1, style=dashed, color=green, label=line];
m21_64 -> m21_67  [key=1, style=dashed, color=green, label=line];
m21_64 -> m21_68  [key=0, style=solid];
m21_64 -> m21_61  [key=2, style=dotted];
m21_65 -> m21_66  [key=0, style=solid, color=green];
m21_65 -> m21_67  [key=0, style=solid, color=green];
m21_66 -> m21_66  [key=1, style=dashed, color=green, label=line];
m21_66 -> m21_67  [key=0, style=solid, color=green];
m21_66 -> m21_71  [key=2, style=dotted, color=green];
m21_66 -> m21_52  [key=2, style=dotted];
m21_67 -> m21_68  [key=0, style=solid, color=green];
m21_67 -> m21_69  [key=0, style=solid];
m21_68 -> m21_59  [key=0, style=bold, color=blue];
m21_68 -> m21_69  [key=0, style=solid];
m21_748 -> m21_986  [key=0, style=solid];
m21_748 -> m21_987  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m21_748 -> m21_988  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m21_986 -> m21_987  [key=0, style=solid];
m21_986 -> m21_988  [key=0, style=solid];
m21_987 -> m21_989  [key=0, style=solid];
m21_988 -> m21_989  [key=0, style=solid];
m21_988 -> m21_990  [key=2, style=dotted];
m21_989 -> m21_748  [key=0, style=bold, color=blue];
m21_1014 -> m21_1015  [key=0, style=solid];
m21_1015 -> m21_1016  [key=0, style=solid];
m21_1015 -> m21_1017  [key=2, style=dotted];
m21_1016 -> m21_1014  [key=0, style=bold, color=blue];
m21_616 -> m21_1003  [key=0, style=solid];
m21_1003 -> m21_1004  [key=0, style=solid];
m21_1004 -> m21_1005  [key=0, style=solid];
m21_1004 -> m21_1012  [key=2, style=dotted];
m21_1004 -> m21_1007  [key=1, style=dashed, color=darkseagreen4, label=time];
m21_1005 -> m21_1006  [key=0, style=solid];
m21_1005 -> m21_1007  [key=0, style=solid];
m21_1007 -> m21_1008  [key=0, style=solid];
m21_1006 -> m21_1009  [key=0, style=solid];
m21_1006 -> m21_1010  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_1008 -> m21_1009  [key=0, style=solid];
m21_1008 -> m21_1013  [key=2, style=dotted];
m21_1008 -> m21_1010  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_1009 -> m21_1010  [key=0, style=solid];
m21_1009 -> m21_36  [key=2, style=dotted];
m21_1010 -> m21_1011  [key=0, style=solid];
m21_1011 -> m21_616  [key=0, style=bold, color=blue];
m21_500 -> m21_999  [key=0, style=solid];
m21_999 -> m21_1000  [key=0, style=solid];
m21_999 -> m21_996  [key=2, style=dotted];
m21_1000 -> m21_500  [key=0, style=bold, color=blue];
m21_1149 -> m21_1150  [key=0, style=solid];
m21_1149 -> m21_1151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs"];
m21_1149 -> m21_1156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs"];
m21_1149 -> m21_1160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs"];
m21_1149 -> m21_1183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs"];
m21_1149 -> m21_1185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs"];
m21_1149 -> m21_1186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs"];
m21_1150 -> m21_1151  [key=0, style=solid];
m21_1151 -> m21_1152  [key=0, style=solid];
m21_1151 -> m21_1153  [key=0, style=solid];
m21_1151 -> m21_353  [key=2, style=dotted];
m21_1151 -> m21_1154  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1151 -> m21_1155  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1151 -> m21_1157  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1151 -> m21_1163  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1151 -> m21_1164  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1151 -> m21_1169  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1151 -> m21_1170  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1151 -> m21_1176  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1151 -> m21_1177  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1151 -> m21_1182  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1151 -> m21_1183  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1151 -> m21_1186  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1156 -> m21_1157  [key=0, style=solid];
m21_1156 -> m21_1143  [key=2, style=dotted];
m21_1160 -> m21_1161  [key=0, style=solid];
m21_1160 -> m21_1167  [key=0, style=solid];
m21_1160 -> m21_1173  [key=0, style=solid];
m21_1160 -> m21_1179  [key=0, style=solid];
m21_1160 -> m21_1187  [key=0, style=solid];
m21_1183 -> m21_1184  [key=0, style=solid];
m21_1183 -> m21_1188  [key=0, style=solid];
m21_1183 -> m21_1057  [key=2, style=dotted];
m21_1185 -> m21_1186  [key=0, style=solid];
m21_1186 -> m21_1188  [key=0, style=solid];
m21_1152 -> m21_1191  [key=0, style=solid];
m21_1153 -> m21_1154  [key=0, style=solid];
m21_1153 -> m21_1141  [key=2, style=dotted];
m21_1153 -> m21_1156  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1157  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1158  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1162  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1163  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1164  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1165  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1166  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1168  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1169  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1170  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1171  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1172  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1174  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1177  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1178  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1184  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1185  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1189  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1153 -> m21_1190  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1154 -> m21_1155  [key=0, style=solid];
m21_1155 -> m21_1156  [key=0, style=solid];
m21_1157 -> m21_1158  [key=0, style=solid];
m21_1157 -> m21_1095  [key=2, style=dotted];
m21_1163 -> m21_1164  [key=0, style=solid];
m21_1163 -> m21_353  [key=2, style=dotted];
m21_1164 -> m21_1165  [key=0, style=solid];
m21_1169 -> m21_1170  [key=0, style=solid];
m21_1169 -> m21_353  [key=2, style=dotted];
m21_1170 -> m21_1171  [key=0, style=solid];
m21_1176 -> m21_1177  [key=0, style=solid];
m21_1176 -> m21_353  [key=2, style=dotted];
m21_1176 -> m21_1178  [key=1, style=dashed, color=darkseagreen4, label=lastPrice];
m21_1177 -> m21_1178  [key=0, style=solid];
m21_1182 -> m21_1183  [key=0, style=solid];
m21_1182 -> m21_1188  [key=0, style=solid];
m21_1158 -> m21_1159  [key=0, style=solid];
m21_1158 -> m21_1160  [key=0, style=solid];
m21_1162 -> m21_1163  [key=0, style=solid];
m21_1165 -> m21_1166  [key=0, style=solid];
m21_1166 -> m21_1188  [key=0, style=solid];
m21_1168 -> m21_1169  [key=0, style=solid];
m21_1171 -> m21_1172  [key=0, style=solid];
m21_1172 -> m21_1188  [key=0, style=solid];
m21_1174 -> m21_1175  [key=0, style=solid];
m21_1178 -> m21_1188  [key=0, style=solid];
m21_1184 -> m21_1185  [key=0, style=solid];
m21_1189 -> m21_1190  [key=0, style=solid];
m21_1189 -> m21_1191  [key=0, style=solid];
m21_1189 -> m21_1142  [key=2, style=dotted];
m21_1190 -> m21_1191  [key=0, style=solid];
m21_1190 -> m21_187  [key=2, style=dotted];
m21_1159 -> m21_1191  [key=0, style=solid];
m21_1161 -> m21_1162  [key=0, style=solid];
m21_1167 -> m21_1168  [key=0, style=solid];
m21_1173 -> m21_1174  [key=0, style=solid];
m21_1179 -> m21_1180  [key=0, style=solid];
m21_1187 -> m21_1191  [key=0, style=solid];
m21_1175 -> m21_1176  [key=0, style=solid];
m21_1180 -> m21_1181  [key=0, style=solid];
m21_1181 -> m21_1182  [key=0, style=solid];
m21_1188 -> m21_1189  [key=0, style=solid];
m21_1191 -> m21_1149  [key=0, style=bold, color=blue];
m21_669 -> m21_696  [key=0, style=solid];
m21_669 -> m21_697  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_669 -> m21_698  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_669 -> m21_699  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_669 -> m21_700  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_669 -> m21_701  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_669 -> m21_702  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_669 -> m21_703  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_669 -> m21_704  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_696 -> m21_697  [key=0, style=solid];
m21_696 -> m21_702  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m21_697 -> m21_698  [key=0, style=solid];
m21_697 -> m21_700  [key=0, style=solid];
m21_698 -> m21_699  [key=0, style=solid];
m21_698 -> m21_707  [key=2, style=dotted];
m21_699 -> m21_700  [key=0, style=solid];
m21_699 -> m21_708  [key=2, style=dotted];
m21_699 -> m21_702  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m21_700 -> m21_701  [key=0, style=solid];
m21_700 -> m21_702  [key=1, style=dashed, color=darkseagreen4, label=fillQuantity];
m21_701 -> m21_702  [key=0, style=solid];
m21_701 -> m21_707  [key=2, style=dotted];
m21_702 -> m21_703  [key=0, style=solid];
m21_702 -> m21_573  [key=2, style=dotted];
m21_702 -> m21_704  [key=1, style=dashed, color=darkseagreen4, label=orderEvent];
m21_702 -> m21_705  [key=1, style=dashed, color=darkseagreen4, label=orderEvent];
m21_703 -> m21_704  [key=0, style=solid];
m21_703 -> m21_705  [key=0, style=solid];
m21_704 -> m21_705  [key=0, style=solid];
m21_705 -> m21_706  [key=0, style=solid];
m21_705 -> m21_574  [key=2, style=dotted];
m21_706 -> m21_669  [key=0, style=bold, color=blue];
m21_236 -> m21_285  [key=0, style=solid];
m21_285 -> m21_286  [key=0, style=solid];
m21_285 -> m21_291  [key=2, style=dotted];
m21_286 -> m21_287  [key=0, style=solid];
m21_286 -> m21_290  [key=0, style=solid];
m21_287 -> m21_288  [key=0, style=solid];
m21_287 -> m21_292  [key=2, style=dotted];
m21_288 -> m21_289  [key=0, style=solid];
m21_288 -> m21_293  [key=2, style=dotted];
m21_289 -> m21_290  [key=0, style=solid];
m21_290 -> m21_236  [key=0, style=bold, color=blue];
m21_1106 -> m21_1107  [key=0, style=solid];
m21_1106 -> m21_1108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs"];
m21_1106 -> m21_1110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs"];
m21_1106 -> m21_1116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs"];
m21_1106 -> m21_1119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs"];
m21_1107 -> m21_1108  [key=0, style=solid];
m21_1108 -> m21_1109  [key=0, style=solid];
m21_1108 -> m21_1110  [key=0, style=solid];
m21_1108 -> m21_353  [key=2, style=dotted];
m21_1108 -> m21_1112  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1108 -> m21_1113  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1108 -> m21_1114  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1108 -> m21_1123  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1108 -> m21_1125  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1108 -> m21_1129  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1108 -> m21_1131  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1108 -> m21_1135  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1110 -> m21_1111  [key=0, style=solid];
m21_1110 -> m21_518  [key=2, style=dotted];
m21_1110 -> m21_1115  [key=1, style=dashed, color=darkseagreen4, label=price];
m21_1110 -> m21_1122  [key=1, style=dashed, color=darkseagreen4, label=price];
m21_1110 -> m21_1125  [key=1, style=dashed, color=darkseagreen4, label=price];
m21_1110 -> m21_1128  [key=1, style=dashed, color=darkseagreen4, label=price];
m21_1110 -> m21_1131  [key=1, style=dashed, color=darkseagreen4, label=price];
m21_1110 -> m21_1134  [key=1, style=dashed, color=darkseagreen4, label=price];
m21_1110 -> m21_1135  [key=1, style=dashed, color=darkseagreen4, label=price];
m21_1116 -> m21_1117  [key=0, style=solid];
m21_1116 -> m21_1118  [key=0, style=solid];
m21_1119 -> m21_1120  [key=0, style=solid];
m21_1119 -> m21_1126  [key=0, style=solid];
m21_1119 -> m21_1132  [key=0, style=solid];
m21_1119 -> m21_1136  [key=0, style=solid];
m21_1109 -> m21_1140  [key=0, style=solid];
m21_1112 -> m21_1113  [key=0, style=solid];
m21_1113 -> m21_1114  [key=0, style=solid];
m21_1113 -> m21_1095  [key=2, style=dotted];
m21_1114 -> m21_1115  [key=0, style=solid];
m21_1114 -> m21_1116  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m21_1123 -> m21_1124  [key=0, style=solid];
m21_1123 -> m21_353  [key=2, style=dotted];
m21_1125 -> m21_1137  [key=0, style=solid];
m21_1129 -> m21_1130  [key=0, style=solid];
m21_1129 -> m21_353  [key=2, style=dotted];
m21_1131 -> m21_1137  [key=0, style=solid];
m21_1135 -> m21_1137  [key=0, style=solid];
m21_1111 -> m21_1112  [key=0, style=solid];
m21_1111 -> m21_1141  [key=2, style=dotted];
m21_1111 -> m21_1113  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1111 -> m21_1115  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1111 -> m21_1121  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1111 -> m21_1122  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1111 -> m21_1124  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1111 -> m21_1127  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1111 -> m21_1128  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1111 -> m21_1130  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1111 -> m21_1133  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1111 -> m21_1134  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1111 -> m21_1138  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1111 -> m21_1139  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1115 -> m21_1116  [key=0, style=solid];
m21_1122 -> m21_1123  [key=0, style=solid];
m21_1128 -> m21_1129  [key=0, style=solid];
m21_1134 -> m21_1135  [key=0, style=solid];
m21_1121 -> m21_1122  [key=0, style=solid];
m21_1124 -> m21_1125  [key=0, style=solid];
m21_1127 -> m21_1128  [key=0, style=solid];
m21_1130 -> m21_1131  [key=0, style=solid];
m21_1133 -> m21_1134  [key=0, style=solid];
m21_1138 -> m21_1139  [key=0, style=solid];
m21_1138 -> m21_1140  [key=0, style=solid];
m21_1138 -> m21_1142  [key=2, style=dotted];
m21_1139 -> m21_1140  [key=0, style=solid];
m21_1139 -> m21_187  [key=2, style=dotted];
m21_1117 -> m21_1140  [key=0, style=solid];
m21_1118 -> m21_1119  [key=0, style=solid];
m21_1120 -> m21_1121  [key=0, style=solid];
m21_1126 -> m21_1127  [key=0, style=solid];
m21_1132 -> m21_1133  [key=0, style=solid];
m21_1136 -> m21_1140  [key=0, style=solid];
m21_1137 -> m21_1138  [key=0, style=solid];
m21_1140 -> m21_1106  [key=0, style=bold, color=blue];
m21_1095 -> m21_1096  [key=0, style=solid];
m21_1095 -> m21_1098  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_1095 -> m21_1099  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_1095 -> m21_1100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_1096 -> m21_1097  [key=0, style=solid];
m21_1096 -> m21_1103  [key=2, style=dotted];
m21_1096 -> m21_1101  [key=1, style=dashed, color=darkseagreen4, label=time];
m21_1098 -> m21_1099  [key=0, style=solid];
m21_1098 -> m21_1101  [key=0, style=solid];
m21_1098 -> m21_720  [key=2, style=dotted];
m21_1099 -> m21_1100  [key=0, style=solid];
m21_1099 -> m21_1104  [key=2, style=dotted];
m21_1099 -> m21_1105  [key=2, style=dotted];
m21_1099 -> m21_1101  [key=1, style=dashed, color=darkseagreen4, label=exchangeTimeZone];
m21_1100 -> m21_1101  [key=0, style=solid];
m21_1100 -> m21_1059  [key=2, style=dotted];
m21_1097 -> m21_1098  [key=0, style=solid];
m21_1101 -> m21_1102  [key=0, style=solid];
m21_1101 -> m21_1012  [key=2, style=dotted];
m21_1102 -> m21_1095  [key=0, style=bold, color=blue];
m21_2 -> m21_3  [key=0, style=solid];
m21_3 -> m21_2  [key=0, style=bold, color=blue];
m21_71 -> m21_72  [key=0, style=solid];
m21_71 -> m21_36  [key=2, style=dotted];
m21_953 -> m21_954  [key=0, style=solid];
m21_953 -> m21_955  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_954 -> m21_955  [key=0, style=solid];
m21_954 -> m21_957  [key=2, style=dotted];
m21_954 -> m21_958  [key=2, style=dotted];
m21_954 -> m21_959  [key=2, style=dotted];
m21_955 -> m21_956  [key=0, style=solid];
m21_955 -> m21_960  [key=2, style=dotted];
m21_955 -> m21_961  [key=2, style=dotted];
m21_956 -> m21_953  [key=0, style=bold, color=blue];
m21_338 -> m21_728  [key=0, style=solid];
m21_338 -> m21_729  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_338 -> m21_731  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_338 -> m21_732  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_338 -> m21_733  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m21_338 -> m21_735  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_338 -> m21_737  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_338 -> m21_739  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_728 -> m21_729  [key=0, style=solid];
m21_728 -> m21_744  [key=2, style=dotted];
m21_728 -> m21_745  [key=2, style=dotted];
m21_728 -> m21_746  [key=2, style=dotted];
m21_728 -> m21_747  [key=2, style=dotted];
m21_728 -> m21_730  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_728 -> m21_735  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_728 -> m21_737  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_728 -> m21_740  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_728 -> m21_742  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_729 -> m21_730  [key=0, style=solid];
m21_729 -> m21_731  [key=0, style=solid];
m21_731 -> m21_732  [key=0, style=solid];
m21_731 -> m21_734  [key=1, style=dashed, color=darkseagreen4, label=limitOrder];
m21_731 -> m21_735  [key=1, style=dashed, color=darkseagreen4, label=limitOrder];
m21_732 -> m21_733  [key=0, style=solid];
m21_732 -> m21_736  [key=1, style=dashed, color=darkseagreen4, label=stopMarketOrder];
m21_732 -> m21_737  [key=1, style=dashed, color=darkseagreen4, label=stopMarketOrder];
m21_733 -> m21_734  [key=0, style=solid];
m21_733 -> m21_738  [key=1, style=dashed, color=darkseagreen4, label=stopLimitOrder];
m21_733 -> m21_740  [key=1, style=dashed, color=darkseagreen4, label=stopLimitOrder];
m21_733 -> m21_741  [key=1, style=dashed, color=darkseagreen4, label=stopLimitOrder];
m21_735 -> m21_742  [key=0, style=solid];
m21_735 -> m21_364  [key=2, style=dotted];
m21_735 -> m21_748  [key=2, style=dotted];
m21_735 -> m21_749  [key=2, style=dotted];
m21_735 -> m21_735  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_737 -> m21_742  [key=0, style=solid];
m21_737 -> m21_364  [key=2, style=dotted];
m21_737 -> m21_748  [key=2, style=dotted];
m21_737 -> m21_749  [key=2, style=dotted];
m21_737 -> m21_737  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_739 -> m21_740  [key=0, style=solid];
m21_739 -> m21_364  [key=2, style=dotted];
m21_739 -> m21_741  [key=1, style=dashed, color=darkseagreen4, label=minTick];
m21_730 -> m21_731  [key=0, style=solid];
m21_730 -> m21_730  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_730 -> m21_735  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_730 -> m21_737  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_730 -> m21_740  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_730 -> m21_742  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_740 -> m21_741  [key=0, style=solid];
m21_740 -> m21_748  [key=2, style=dotted];
m21_740 -> m21_749  [key=2, style=dotted];
m21_740 -> m21_740  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_742 -> m21_743  [key=0, style=solid];
m21_734 -> m21_735  [key=0, style=solid];
m21_734 -> m21_736  [key=0, style=solid];
m21_736 -> m21_737  [key=0, style=solid];
m21_736 -> m21_738  [key=0, style=solid];
m21_738 -> m21_739  [key=0, style=solid];
m21_738 -> m21_742  [key=0, style=solid];
m21_741 -> m21_742  [key=0, style=solid];
m21_741 -> m21_748  [key=2, style=dotted];
m21_741 -> m21_749  [key=2, style=dotted];
m21_741 -> m21_741  [key=1, style=dashed, color=darkseagreen4, label=ibOrder];
m21_743 -> m21_338  [key=0, style=bold, color=blue];
m21_36 -> m21_41  [key=0, style=solid, color=green];
m21_1143 -> m21_1144  [key=0, style=solid];
m21_1143 -> m21_1146  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_1143 -> m21_1147  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_1144 -> m21_1145  [key=0, style=solid];
m21_1144 -> m21_1147  [key=0, style=solid];
m21_1146 -> m21_1148  [key=0, style=solid];
m21_1147 -> m21_1148  [key=0, style=solid];
m21_1145 -> m21_1146  [key=0, style=solid];
m21_1148 -> m21_1143  [key=0, style=bold, color=blue];
m21_177 -> m21_997  [key=0, style=solid];
m21_997 -> m21_998  [key=0, style=solid];
m21_997 -> m21_996  [key=2, style=dotted];
m21_998 -> m21_177  [key=0, style=bold, color=blue];
m21_35 -> m21_37  [key=0, style=solid, color=green];
m21_35 -> m21_36  [key=0, style=solid, color=green];
m21_110 -> m21_111  [key=0, style=solid];
m21_111 -> m21_112  [key=0, style=solid];
m21_111 -> m21_117  [key=2, style=dotted];
m21_112 -> m21_113  [key=0, style=solid];
m21_112 -> m21_118  [key=2, style=dotted];
m21_112 -> m21_119  [key=2, style=dotted];
m21_112 -> m21_120  [key=2, style=dotted];
m21_112 -> m21_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_112 -> m21_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_112 -> m21_115  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m21_113 -> m21_114  [key=0, style=solid];
m21_113 -> m21_118  [key=2, style=dotted];
m21_113 -> m21_119  [key=2, style=dotted];
m21_113 -> m21_121  [key=2, style=dotted];
m21_113 -> m21_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_113 -> m21_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_115 -> m21_116  [key=0, style=solid];
m21_114 -> m21_115  [key=0, style=solid];
m21_114 -> m21_122  [key=2, style=dotted];
m21_116 -> m21_110  [key=0, style=bold, color=blue];
m21_157 -> m21_437  [key=0, style=solid];
m21_157 -> m21_439  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_157 -> m21_440  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_157 -> m21_441  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_157 -> m21_444  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_157 -> m21_452  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_157 -> m21_458  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_157 -> m21_515  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_157 -> m21_492  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_437 -> m21_438  [key=0, style=solid];
m21_437 -> m21_439  [key=0, style=solid];
m21_439 -> m21_440  [key=0, style=solid];
m21_439 -> m21_36  [key=2, style=dotted];
m21_440 -> m21_441  [key=0, style=solid];
m21_440 -> m21_442  [key=1, style=dashed, color=darkseagreen4, label=invertedSymbol];
m21_440 -> m21_510  [key=1, style=dashed, color=darkseagreen4, label=invertedSymbol];
m21_440 -> m21_445  [key=1, style=dashed, color=darkseagreen4, label=invertedSymbol];
m21_441 -> m21_442  [key=0, style=solid];
m21_441 -> m21_510  [key=1, style=dashed, color=darkseagreen4, label=normalSymbol];
m21_444 -> m21_498  [key=0, style=solid];
m21_444 -> m21_241  [key=2, style=dotted];
m21_452 -> m21_498  [key=0, style=solid];
m21_452 -> m21_241  [key=2, style=dotted];
m21_458 -> m21_459  [key=0, style=solid];
m21_458 -> m21_513  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs"];
m21_458 -> m21_514  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs"];
m21_458 -> m21_515  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs"];
m21_458 -> m21_460  [key=1, style=dashed, color=darkseagreen4, label=clientOnTickPrice];
m21_458 -> m21_464  [key=1, style=dashed, color=darkseagreen4, label=clientOnTickPrice];
m21_458 -> m21_465  [key=1, style=dashed, color=darkseagreen4, label=rate];
m21_458 -> m21_497  [key=1, style=dashed, color=darkseagreen4, label=rate];
m21_492 -> m21_493  [key=0, style=solid];
m21_492 -> m21_36  [key=2, style=dotted];
m21_438 -> m21_498  [key=0, style=solid];
m21_442 -> m21_443  [key=0, style=solid];
m21_442 -> m21_407  [key=2, style=dotted];
m21_442 -> m21_509  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_442 -> m21_445  [key=1, style=dashed, color=darkseagreen4, label=currencyPair];
m21_442 -> m21_446  [key=1, style=dashed, color=darkseagreen4, label=currencyPair];
m21_442 -> m21_459  [key=1, style=dashed, color=darkseagreen4, label=currencyPair];
m21_442 -> m21_476  [key=1, style=dashed, color=darkseagreen4, label=currencyPair];
m21_442 -> m21_490  [key=1, style=dashed, color=darkseagreen4, label=currencyPair];
m21_445 -> m21_446  [key=0, style=solid];
m21_445 -> m21_497  [key=1, style=dashed, color=darkseagreen4, label=inverted];
m21_443 -> m21_444  [key=0, style=solid];
m21_443 -> m21_445  [key=0, style=solid];
m21_446 -> m21_447  [key=0, style=solid];
m21_446 -> m21_499  [key=2, style=dotted];
m21_459 -> m21_460  [key=0, style=solid];
m21_459 -> m21_501  [key=2, style=dotted];
m21_476 -> m21_477  [key=0, style=solid];
m21_476 -> m21_501  [key=2, style=dotted];
m21_490 -> m21_498  [key=0, style=solid];
m21_490 -> m21_507  [key=2, style=dotted];
m21_497 -> m21_498  [key=0, style=solid];
m21_447 -> m21_448  [key=0, style=solid];
m21_447 -> m21_331  [key=2, style=dotted];
m21_447 -> m21_449  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_447 -> m21_450  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_447 -> m21_457  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_447 -> m21_461  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_447 -> m21_472  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_447 -> m21_481  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_448 -> m21_449  [key=0, style=solid];
m21_449 -> m21_450  [key=0, style=solid];
m21_449 -> m21_451  [key=0, style=solid];
m21_449 -> m21_340  [key=2, style=dotted];
m21_449 -> m21_353  [key=2, style=dotted];
m21_450 -> m21_451  [key=0, style=solid];
m21_450 -> m21_354  [key=2, style=dotted];
m21_457 -> m21_458  [key=0, style=solid];
m21_461 -> m21_462  [key=0, style=solid];
m21_461 -> m21_97  [key=2, style=dotted];
m21_461 -> m21_502  [key=2, style=dotted];
m21_472 -> m21_473  [key=0, style=solid];
m21_481 -> m21_482  [key=0, style=solid];
m21_481 -> m21_176  [key=2, style=dotted];
m21_481 -> m21_97  [key=2, style=dotted];
m21_481 -> m21_504  [key=2, style=dotted];
m21_451 -> m21_452  [key=0, style=solid];
m21_451 -> m21_453  [key=0, style=solid];
m21_453 -> m21_454  [key=0, style=solid];
m21_454 -> m21_455  [key=0, style=solid];
m21_454 -> m21_98  [key=2, style=dotted];
m21_454 -> m21_458  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_454 -> m21_516  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_454 -> m21_462  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_454 -> m21_469  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_454 -> m21_474  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_454 -> m21_525  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_454 -> m21_482  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_455 -> m21_456  [key=0, style=solid];
m21_455 -> m21_462  [key=1, style=dashed, color=darkseagreen4, label=requestTimeout];
m21_455 -> m21_463  [key=1, style=dashed, color=darkseagreen4, label=requestTimeout];
m21_455 -> m21_482  [key=1, style=dashed, color=darkseagreen4, label=requestTimeout];
m21_455 -> m21_483  [key=1, style=dashed, color=darkseagreen4, label=requestTimeout];
m21_462 -> m21_463  [key=0, style=solid];
m21_462 -> m21_464  [key=0, style=solid];
m21_462 -> m21_100  [key=2, style=dotted];
m21_469 -> m21_470  [key=0, style=solid];
m21_469 -> m21_503  [key=2, style=dotted];
m21_474 -> m21_475  [key=0, style=solid];
m21_474 -> m21_524  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs"];
m21_474 -> m21_478  [key=1, style=dashed, color=darkseagreen4, label=clientOnHistoricalDataEnd];
m21_474 -> m21_494  [key=1, style=dashed, color=darkseagreen4, label=clientOnHistoricalDataEnd];
m21_482 -> m21_483  [key=0, style=solid];
m21_482 -> m21_484  [key=0, style=solid];
m21_482 -> m21_100  [key=2, style=dotted];
m21_456 -> m21_457  [key=0, style=solid];
m21_456 -> m21_500  [key=2, style=dotted];
m21_456 -> m21_458  [key=1, style=dashed, color=darkseagreen4, label=marketDataTicker];
m21_456 -> m21_513  [key=1, style=dashed, color=darkseagreen4, label=marketDataTicker];
m21_456 -> m21_461  [key=1, style=dashed, color=darkseagreen4, label=marketDataTicker];
m21_463 -> m21_464  [key=0, style=solid];
m21_463 -> m21_387  [key=2, style=dotted];
m21_483 -> m21_484  [key=0, style=solid];
m21_483 -> m21_387  [key=2, style=dotted];
m21_460 -> m21_461  [key=0, style=solid];
m21_464 -> m21_465  [key=0, style=solid];
m21_465 -> m21_466  [key=0, style=solid];
m21_465 -> m21_497  [key=0, style=solid];
m21_466 -> m21_467  [key=0, style=solid];
m21_467 -> m21_468  [key=0, style=solid];
m21_467 -> m21_485  [key=1, style=dashed, color=darkseagreen4, label=pacingDelaySeconds];
m21_467 -> m21_486  [key=1, style=dashed, color=darkseagreen4, label=pacingDelaySeconds];
m21_468 -> m21_469  [key=0, style=solid];
m21_485 -> m21_486  [key=0, style=solid];
m21_485 -> m21_235  [key=2, style=dotted];
m21_486 -> m21_493  [key=0, style=solid];
m21_486 -> m21_242  [key=2, style=dotted];
m21_470 -> m21_471  [key=0, style=solid];
m21_470 -> m21_97  [key=2, style=dotted];
m21_470 -> m21_473  [key=1, style=dashed, color=darkseagreen4, label=data];
m21_470 -> m21_521  [key=1, style=dashed, color=darkseagreen4, label=data];
m21_470 -> m21_487  [key=1, style=dashed, color=darkseagreen4, label=data];
m21_471 -> m21_472  [key=0, style=solid];
m21_471 -> m21_500  [key=2, style=dotted];
m21_471 -> m21_473  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_471 -> m21_520  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_471 -> m21_474  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_471 -> m21_524  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_471 -> m21_481  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_473 -> m21_474  [key=0, style=solid];
m21_473 -> m21_520  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs"];
m21_473 -> m21_521  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs"];
m21_473 -> m21_477  [key=1, style=dashed, color=darkseagreen4, label=clientOnHistoricalData];
m21_473 -> m21_493  [key=1, style=dashed, color=darkseagreen4, label=clientOnHistoricalData];
m21_487 -> m21_488  [key=0, style=solid];
m21_487 -> m21_505  [key=2, style=dotted];
m21_487 -> m21_531  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_477 -> m21_478  [key=0, style=solid];
m21_493 -> m21_494  [key=0, style=solid];
m21_475 -> m21_476  [key=0, style=solid];
m21_475 -> m21_528  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs"];
m21_475 -> m21_479  [key=1, style=dashed, color=darkseagreen4, label=clientOnError];
m21_475 -> m21_484  [key=1, style=dashed, color=darkseagreen4, label=pacingViolation];
m21_475 -> m21_495  [key=1, style=dashed, color=darkseagreen4, label=clientOnError];
m21_475 -> m21_496  [key=1, style=dashed, color=darkseagreen4, label=pacingViolation];
m21_478 -> m21_479  [key=0, style=solid];
m21_494 -> m21_495  [key=0, style=solid];
m21_479 -> m21_480  [key=0, style=solid];
m21_484 -> m21_485  [key=0, style=solid];
m21_484 -> m21_487  [key=0, style=solid];
m21_495 -> m21_496  [key=0, style=solid];
m21_496 -> m21_467  [key=0, style=solid];
m21_496 -> m21_497  [key=0, style=solid];
m21_480 -> m21_481  [key=0, style=solid];
m21_488 -> m21_489  [key=0, style=solid];
m21_488 -> m21_506  [key=2, style=dotted];
m21_488 -> m21_491  [key=1, style=dashed, color=darkseagreen4, label=mostRecentQuote];
m21_489 -> m21_490  [key=0, style=solid];
m21_489 -> m21_491  [key=0, style=solid];
m21_491 -> m21_492  [key=0, style=solid];
m21_491 -> m21_508  [key=2, style=dotted];
m21_491 -> m21_497  [key=1, style=dashed, color=darkseagreen4, label=rate];
m21_498 -> m21_157  [key=0, style=bold, color=blue];
m21_929 -> m21_930  [key=0, style=solid];
m21_930 -> m21_931  [key=0, style=solid];
m21_930 -> m21_934  [key=0, style=solid];
m21_930 -> m21_936  [key=0, style=solid];
m21_930 -> m21_938  [key=0, style=solid];
m21_931 -> m21_932  [key=0, style=solid];
m21_934 -> m21_935  [key=0, style=solid];
m21_936 -> m21_937  [key=0, style=solid];
m21_938 -> m21_939  [key=0, style=solid];
m21_932 -> m21_933  [key=0, style=solid];
m21_933 -> m21_940  [key=0, style=solid];
m21_935 -> m21_940  [key=0, style=solid];
m21_937 -> m21_940  [key=0, style=solid];
m21_939 -> m21_940  [key=0, style=solid];
m21_940 -> m21_929  [key=0, style=bold, color=blue];
m21_810 -> m21_891  [key=0, style=solid];
m21_810 -> m21_904  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m21_891 -> m21_892  [key=0, style=solid];
m21_891 -> m21_894  [key=0, style=solid];
m21_891 -> m21_896  [key=0, style=solid];
m21_891 -> m21_898  [key=0, style=solid];
m21_891 -> m21_900  [key=0, style=solid];
m21_891 -> m21_902  [key=0, style=solid];
m21_891 -> m21_904  [key=0, style=solid];
m21_904 -> m21_905  [key=0, style=solid];
m21_904 -> m21_783  [key=2, style=dotted];
m21_892 -> m21_893  [key=0, style=solid];
m21_894 -> m21_895  [key=0, style=solid];
m21_896 -> m21_897  [key=0, style=solid];
m21_898 -> m21_899  [key=0, style=solid];
m21_900 -> m21_901  [key=0, style=solid];
m21_902 -> m21_903  [key=0, style=solid];
m21_893 -> m21_905  [key=0, style=solid];
m21_895 -> m21_905  [key=0, style=solid];
m21_897 -> m21_905  [key=0, style=solid];
m21_899 -> m21_905  [key=0, style=solid];
m21_901 -> m21_905  [key=0, style=solid];
m21_903 -> m21_905  [key=0, style=solid];
m21_903 -> m21_335  [key=2, style=dotted];
m21_905 -> m21_810  [key=0, style=bold, color=blue];
m21_72 -> m21_73  [key=0, style=solid];
m21_72 -> m21_76  [key=0, style=solid];
m21_72 -> m21_79  [key=0, style=solid];
m21_74 -> m21_75  [key=0, style=solid];
m21_77 -> m21_78  [key=0, style=solid];
m21_77 -> m21_52  [key=2, style=dotted];
m21_73 -> m21_74  [key=0, style=solid];
m21_73 -> m21_81  [key=2, style=dotted];
m21_73 -> m21_75  [key=1, style=dashed, color=darkseagreen4, label=orderId];
m21_76 -> m21_77  [key=0, style=solid];
m21_79 -> m21_80  [key=0, style=solid];
m21_75 -> m21_72  [key=0, style=solid];
m21_75 -> m21_82  [key=2, style=dotted];
m21_78 -> m21_80  [key=0, style=solid];
m21_80 -> m21_70  [key=0, style=bold, color=blue];
m21_773 -> m21_972  [key=0, style=solid];
m21_773 -> m21_973  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_773 -> m21_976  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_773 -> m21_979  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_773 -> m21_980  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_773 -> m21_981  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_972 -> m21_973  [key=0, style=solid];
m21_972 -> m21_971  [key=2, style=dotted];
m21_972 -> m21_974  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m21_972 -> m21_975  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m21_972 -> m21_977  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m21_972 -> m21_978  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m21_972 -> m21_982  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m21_972 -> m21_983  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m21_973 -> m21_974  [key=0, style=solid];
m21_973 -> m21_977  [key=1, style=dashed, color=darkseagreen4, label=ibSymbol];
m21_973 -> m21_982  [key=1, style=dashed, color=darkseagreen4, label=ibSymbol];
m21_973 -> m21_983  [key=1, style=dashed, color=darkseagreen4, label=ibSymbol];
m21_976 -> m21_977  [key=0, style=solid];
m21_976 -> m21_959  [key=2, style=dotted];
m21_979 -> m21_980  [key=0, style=solid];
m21_979 -> m21_959  [key=2, style=dotted];
m21_979 -> m21_982  [key=1, style=dashed, color=darkseagreen4, label=expiryDate];
m21_980 -> m21_981  [key=0, style=solid];
m21_980 -> m21_982  [key=1, style=dashed, color=darkseagreen4, label=right];
m21_981 -> m21_982  [key=0, style=solid];
m21_981 -> m21_508  [key=2, style=dotted];
m21_974 -> m21_975  [key=0, style=solid];
m21_974 -> m21_977  [key=1, style=dashed, color=darkseagreen4, label=market];
m21_974 -> m21_982  [key=1, style=dashed, color=darkseagreen4, label=market];
m21_974 -> m21_983  [key=1, style=dashed, color=darkseagreen4, label=market];
m21_975 -> m21_976  [key=0, style=solid];
m21_975 -> m21_978  [key=0, style=solid];
m21_977 -> m21_984  [key=0, style=solid];
m21_977 -> m21_985  [key=2, style=dotted];
m21_978 -> m21_979  [key=0, style=solid];
m21_978 -> m21_983  [key=0, style=solid];
m21_982 -> m21_984  [key=0, style=solid];
m21_982 -> m21_985  [key=2, style=dotted];
m21_983 -> m21_984  [key=0, style=solid];
m21_983 -> m21_985  [key=2, style=dotted];
m21_984 -> m21_773  [key=0, style=bold, color=blue];
m21_816 -> m21_817  [key=0, style=solid];
m21_816 -> m21_824  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_817 -> m21_818  [key=0, style=solid];
m21_817 -> m21_820  [key=0, style=solid];
m21_817 -> m21_822  [key=0, style=solid];
m21_817 -> m21_824  [key=0, style=solid];
m21_824 -> m21_825  [key=0, style=solid];
m21_824 -> m21_826  [key=2, style=dotted];
m21_818 -> m21_819  [key=0, style=solid];
m21_820 -> m21_821  [key=0, style=solid];
m21_822 -> m21_823  [key=0, style=solid];
m21_819 -> m21_825  [key=0, style=solid];
m21_821 -> m21_825  [key=0, style=solid];
m21_823 -> m21_825  [key=0, style=solid];
m21_825 -> m21_816  [key=0, style=bold, color=blue];
m21_25 -> m21_1001  [key=0, style=solid];
m21_1001 -> m21_1002  [key=0, style=solid];
m21_1001 -> m21_996  [key=2, style=dotted];
m21_1002 -> m21_25  [key=0, style=bold, color=blue];
m21_305 -> m21_306  [key=0, style=solid];
m21_306 -> m21_307  [key=0, style=solid];
m21_306 -> m21_308  [key=2, style=dotted];
m21_307 -> m21_305  [key=0, style=bold, color=blue];
m21_722 -> m21_723  [key=0, style=solid];
m21_722 -> m21_724  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs"];
m21_723 -> m21_724  [key=0, style=solid];
m21_723 -> m21_503  [key=2, style=dotted];
m21_724 -> m21_725  [key=0, style=solid];
m21_724 -> m21_727  [key=2, style=dotted];
m21_725 -> m21_726  [key=0, style=solid];
m21_726 -> m21_722  [key=0, style=bold, color=blue];
m21_364 -> m21_365  [key=0, style=solid];
m21_364 -> m21_366  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_364 -> m21_368  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_365 -> m21_366  [key=0, style=solid];
m21_366 -> m21_367  [key=0, style=solid];
m21_366 -> m21_368  [key=0, style=solid];
m21_366 -> m21_340  [key=2, style=dotted];
m21_366 -> m21_353  [key=2, style=dotted];
m21_368 -> m21_369  [key=0, style=solid];
m21_368 -> m21_354  [key=2, style=dotted];
m21_368 -> m21_371  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_367 -> m21_372  [key=0, style=solid];
m21_369 -> m21_370  [key=0, style=solid];
m21_369 -> m21_371  [key=0, style=solid];
m21_371 -> m21_372  [key=0, style=solid];
m21_370 -> m21_372  [key=0, style=solid];
m21_372 -> m21_364  [key=0, style=bold, color=blue];
m21_575 -> m21_576  [key=0, style=solid];
m21_576 -> m21_577  [key=0, style=solid];
m21_576 -> m21_589  [key=2, style=dotted];
m21_576 -> m21_571  [key=2, style=dotted];
m21_577 -> m21_578  [key=0, style=solid];
m21_577 -> m21_36  [key=2, style=dotted];
m21_578 -> m21_579  [key=0, style=solid];
m21_578 -> m21_236  [key=2, style=dotted];
m21_579 -> m21_580  [key=0, style=solid];
m21_579 -> m21_36  [key=2, style=dotted];
m21_580 -> m21_581  [key=0, style=solid];
m21_580 -> m21_590  [key=2, style=dotted];
m21_581 -> m21_582  [key=0, style=solid];
m21_581 -> m21_36  [key=2, style=dotted];
m21_582 -> m21_583  [key=0, style=solid];
m21_582 -> m21_591  [key=2, style=dotted];
m21_583 -> m21_584  [key=0, style=solid];
m21_583 -> m21_36  [key=2, style=dotted];
m21_584 -> m21_585  [key=0, style=solid];
m21_584 -> m21_188  [key=2, style=dotted];
m21_585 -> m21_586  [key=0, style=solid];
m21_585 -> m21_36  [key=2, style=dotted];
m21_586 -> m21_587  [key=0, style=solid];
m21_586 -> m21_592  [key=2, style=dotted];
m21_587 -> m21_588  [key=0, style=solid];
m21_587 -> m21_589  [key=2, style=dotted];
m21_587 -> m21_571  [key=2, style=dotted];
m21_588 -> m21_51  [key=0, style=bold, color=blue];
m21_534 -> m21_535  [key=0, style=solid];
m21_534 -> m21_536  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs"];
m21_534 -> m21_537  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs"];
m21_535 -> m21_536  [key=0, style=solid];
m21_535 -> m21_540  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_535 -> m21_542  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_535 -> m21_560  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_535 -> m21_561  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_536 -> m21_537  [key=0, style=solid];
m21_536 -> m21_542  [key=1, style=dashed, color=darkseagreen4, label=errorCode];
m21_536 -> m21_544  [key=1, style=dashed, color=darkseagreen4, label=errorCode];
m21_536 -> m21_546  [key=1, style=dashed, color=darkseagreen4, label=errorCode];
m21_536 -> m21_548  [key=1, style=dashed, color=darkseagreen4, label=errorCode];
m21_536 -> m21_551  [key=1, style=dashed, color=darkseagreen4, label=errorCode];
m21_536 -> m21_552  [key=1, style=dashed, color=darkseagreen4, label=errorCode];
m21_536 -> m21_556  [key=1, style=dashed, color=darkseagreen4, label=errorCode];
m21_536 -> m21_558  [key=1, style=dashed, color=darkseagreen4, label=errorCode];
m21_536 -> m21_559  [key=1, style=dashed, color=darkseagreen4, label=errorCode];
m21_536 -> m21_565  [key=1, style=dashed, color=darkseagreen4, label=errorCode];
m21_537 -> m21_538  [key=0, style=solid];
m21_540 -> m21_541  [key=0, style=solid];
m21_540 -> m21_542  [key=0, style=solid];
m21_540 -> m21_353  [key=2, style=dotted];
m21_542 -> m21_543  [key=0, style=solid];
m21_542 -> m21_36  [key=2, style=dotted];
m21_560 -> m21_561  [key=0, style=solid];
m21_560 -> m21_36  [key=2, style=dotted];
m21_561 -> m21_562  [key=0, style=solid];
m21_561 -> m21_572  [key=2, style=dotted];
m21_561 -> m21_563  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_544 -> m21_545  [key=0, style=solid];
m21_544 -> m21_546  [key=0, style=solid];
m21_544 -> m21_568  [key=2, style=dotted];
m21_546 -> m21_547  [key=0, style=solid];
m21_546 -> m21_548  [key=0, style=solid];
m21_546 -> m21_568  [key=2, style=dotted];
m21_548 -> m21_549  [key=0, style=solid];
m21_548 -> m21_551  [key=0, style=solid];
m21_551 -> m21_552  [key=0, style=solid];
m21_551 -> m21_556  [key=0, style=solid];
m21_552 -> m21_553  [key=0, style=solid];
m21_552 -> m21_570  [key=2, style=dotted];
m21_552 -> m21_571  [key=2, style=dotted];
m21_556 -> m21_557  [key=0, style=solid];
m21_556 -> m21_558  [key=0, style=solid];
m21_558 -> m21_559  [key=0, style=solid];
m21_558 -> m21_565  [key=0, style=solid];
m21_558 -> m21_568  [key=2, style=dotted];
m21_559 -> m21_560  [key=0, style=solid];
m21_559 -> m21_563  [key=1, style=dashed, color=darkseagreen4, label=message];
m21_565 -> m21_566  [key=0, style=solid];
m21_565 -> m21_570  [key=2, style=dotted];
m21_565 -> m21_571  [key=2, style=dotted];
m21_538 -> m21_539  [key=0, style=solid];
m21_538 -> m21_567  [key=2, style=dotted];
m21_538 -> m21_538  [key=1, style=dashed, color=darkseagreen4, label=errorMsg];
m21_538 -> m21_541  [key=1, style=dashed, color=darkseagreen4, label=errorMsg];
m21_538 -> m21_542  [key=1, style=dashed, color=darkseagreen4, label=errorMsg];
m21_538 -> m21_552  [key=1, style=dashed, color=darkseagreen4, label=errorMsg];
m21_538 -> m21_559  [key=1, style=dashed, color=darkseagreen4, label=errorMsg];
m21_538 -> m21_565  [key=1, style=dashed, color=darkseagreen4, label=errorMsg];
m21_539 -> m21_540  [key=0, style=solid];
m21_541 -> m21_542  [key=0, style=solid];
m21_541 -> m21_541  [key=1, style=dashed, color=darkseagreen4, label=errorMsg];
m21_541 -> m21_552  [key=1, style=dashed, color=darkseagreen4, label=errorMsg];
m21_541 -> m21_559  [key=1, style=dashed, color=darkseagreen4, label=errorMsg];
m21_541 -> m21_565  [key=1, style=dashed, color=darkseagreen4, label=errorMsg];
m21_543 -> m21_544  [key=0, style=solid];
m21_543 -> m21_552  [key=1, style=dashed, color=darkseagreen4, label=brokerageMessageType];
m21_543 -> m21_565  [key=1, style=dashed, color=darkseagreen4, label=brokerageMessageType];
m21_545 -> m21_548  [key=0, style=solid];
m21_545 -> m21_552  [key=1, style=dashed, color=darkseagreen4, label=brokerageMessageType];
m21_545 -> m21_565  [key=1, style=dashed, color=darkseagreen4, label=brokerageMessageType];
m21_547 -> m21_548  [key=0, style=solid];
m21_547 -> m21_552  [key=1, style=dashed, color=darkseagreen4, label=brokerageMessageType];
m21_547 -> m21_565  [key=1, style=dashed, color=darkseagreen4, label=brokerageMessageType];
m21_549 -> m21_550  [key=0, style=solid];
m21_550 -> m21_558  [key=0, style=solid];
m21_550 -> m21_569  [key=2, style=dotted];
m21_553 -> m21_554  [key=0, style=solid];
m21_553 -> m21_36  [key=2, style=dotted];
m21_554 -> m21_555  [key=0, style=solid];
m21_554 -> m21_35  [key=2, style=dotted];
m21_555 -> m21_566  [key=0, style=solid];
m21_557 -> m21_558  [key=0, style=solid];
m21_557 -> m21_501  [key=2, style=dotted];
m21_563 -> m21_564  [key=0, style=solid];
m21_563 -> m21_573  [key=2, style=dotted];
m21_562 -> m21_563  [key=0, style=solid];
m21_564 -> m21_565  [key=0, style=solid];
m21_564 -> m21_574  [key=2, style=dotted];
m21_566 -> m21_534  [key=0, style=bold, color=blue];
m21_727 -> m21_962  [key=0, style=solid];
m21_727 -> m21_963  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs"];
m21_727 -> m21_964  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs"];
m21_727 -> m21_967  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs"];
m21_962 -> m21_963  [key=0, style=solid];
m21_962 -> m21_969  [key=2, style=dotted];
m21_962 -> m21_967  [key=1, style=dashed, color=darkseagreen4, label=currencySymbol];
m21_963 -> m21_964  [key=0, style=solid];
m21_963 -> m21_773  [key=2, style=dotted];
m21_963 -> m21_967  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_964 -> m21_965  [key=0, style=solid];
m21_964 -> m21_508  [key=2, style=dotted];
m21_964 -> m21_967  [key=1, style=dashed, color=darkseagreen4, label=multiplier];
m21_967 -> m21_968  [key=0, style=solid];
m21_967 -> m21_970  [key=2, style=dotted];
m21_967 -> m21_971  [key=2, style=dotted];
m21_967 -> m21_518  [key=2, style=dotted];
m21_965 -> m21_966  [key=0, style=solid];
m21_965 -> m21_967  [key=0, style=solid];
m21_966 -> m21_967  [key=0, style=solid];
m21_968 -> m21_727  [key=0, style=bold, color=blue];
m21_1018 -> m21_1019  [key=0, style=solid];
m21_1018 -> m21_1024  [key=0, style=bold, color=crimson];
m21_1018 -> m21_1028  [key=0, style=bold, color=crimson];
m21_1019 -> m21_1020  [key=0, style=solid];
m21_1024 -> m21_1025  [key=0, style=solid];
m21_1028 -> m21_1023  [key=0, style=solid];
m21_1020 -> m21_1021  [key=0, style=solid];
m21_1021 -> m21_1022  [key=0, style=solid];
m21_1021 -> m21_1030  [key=2, style=dotted];
m21_1021 -> m21_1023  [key=1, style=dashed, color=darkseagreen4, label=ticks];
m21_1022 -> m21_1023  [key=0, style=solid];
m21_1022 -> m21_1031  [key=2, style=dotted];
m21_1023 -> m21_1024  [key=0, style=solid];
m21_1023 -> m21_1029  [key=0, style=solid];
m21_1023 -> m21_1025  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1023 -> m21_1026  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1023 -> m21_1027  [key=1, style=dashed, color=darkseagreen4, label=tick];
m21_1025 -> m21_1026  [key=0, style=solid];
m21_1025 -> m21_1023  [key=0, style=solid];
m21_1025 -> m21_815  [key=2, style=dotted];
m21_1026 -> m21_1027  [key=0, style=solid];
m21_1026 -> m21_1032  [key=2, style=dotted];
m21_1026 -> m21_1028  [key=1, style=dashed, color=darkseagreen4, label=underlyingTick];
m21_1027 -> m21_1028  [key=0, style=solid];
m21_1029 -> m21_1018  [key=0, style=bold, color=blue];
m21_1056 -> m21_1087  [key=0, style=solid];
m21_1056 -> m21_1088  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_1056 -> m21_1089  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_1087 -> m21_1088  [key=0, style=solid];
m21_1087 -> m21_1091  [key=1, style=dashed, color=darkseagreen4, label=market];
m21_1088 -> m21_1089  [key=0, style=solid];
m21_1088 -> m21_1091  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m21_1089 -> m21_1090  [key=0, style=solid];
m21_1089 -> m21_1091  [key=0, style=solid];
m21_1089 -> m21_1093  [key=2, style=dotted];
m21_1089 -> m21_1094  [key=2, style=dotted];
m21_1091 -> m21_1092  [key=0, style=solid];
m21_1090 -> m21_1092  [key=0, style=solid];
m21_1092 -> m21_1056  [key=0, style=bold, color=blue];
m21_941 -> m21_942  [key=0, style=solid];
m21_942 -> m21_943  [key=0, style=solid];
m21_942 -> m21_946  [key=0, style=solid];
m21_942 -> m21_948  [key=0, style=solid];
m21_942 -> m21_950  [key=0, style=solid];
m21_943 -> m21_944  [key=0, style=solid];
m21_946 -> m21_947  [key=0, style=solid];
m21_948 -> m21_949  [key=0, style=solid];
m21_950 -> m21_951  [key=0, style=solid];
m21_944 -> m21_945  [key=0, style=solid];
m21_945 -> m21_952  [key=0, style=solid];
m21_947 -> m21_952  [key=0, style=solid];
m21_949 -> m21_952  [key=0, style=solid];
m21_951 -> m21_952  [key=0, style=solid];
m21_952 -> m21_941  [key=0, style=bold, color=blue];
m21_309 -> m21_310  [key=0, style=solid];
m21_309 -> m21_188  [key=2, style=dotted];
m21_312 -> m21_313  [key=0, style=solid];
m21_312 -> m21_314  [key=0, style=solid];
m21_314 -> m21_315  [key=0, style=solid];
m21_314 -> m21_331  [key=2, style=dotted];
m21_314 -> m21_323  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_314 -> m21_325  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_314 -> m21_326  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_314 -> m21_327  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_316 -> m21_317  [key=0, style=solid];
m21_316 -> m21_320  [key=0, style=solid];
m21_318 -> m21_319  [key=0, style=solid];
m21_318 -> m21_333  [key=2, style=dotted];
m21_318 -> m21_187  [key=2, style=dotted];
m21_320 -> m21_321  [key=0, style=solid];
m21_320 -> m21_322  [key=0, style=solid];
m21_320 -> m21_334  [key=2, style=dotted];
m21_321 -> m21_323  [key=0, style=solid];
m21_321 -> m21_81  [key=2, style=dotted];
m21_321 -> m21_325  [key=1, style=dashed, color=darkseagreen4, label=ibOrderId];
m21_321 -> m21_326  [key=1, style=dashed, color=darkseagreen4, label=ibOrderId];
m21_324 -> m21_325  [key=0, style=solid];
m21_324 -> m21_326  [key=0, style=solid];
m21_325 -> m21_328  [key=0, style=solid];
m21_325 -> m21_336  [key=2, style=dotted];
m21_325 -> m21_337  [key=2, style=dotted];
m21_326 -> m21_327  [key=0, style=solid];
m21_326 -> m21_338  [key=2, style=dotted];
m21_310 -> m21_311  [key=0, style=solid];
m21_310 -> m21_312  [key=0, style=solid];
m21_311 -> m21_328  [key=0, style=solid];
m21_311 -> m21_329  [key=2, style=dotted];
m21_313 -> m21_314  [key=0, style=solid];
m21_313 -> m21_330  [key=2, style=dotted];
m21_315 -> m21_316  [key=0, style=solid];
m21_315 -> m21_323  [key=1, style=dashed, color=darkseagreen4, label=ibOrderId];
m21_315 -> m21_325  [key=1, style=dashed, color=darkseagreen4, label=ibOrderId];
m21_315 -> m21_326  [key=1, style=dashed, color=darkseagreen4, label=ibOrderId];
m21_323 -> m21_324  [key=0, style=solid];
m21_327 -> m21_328  [key=0, style=solid];
m21_327 -> m21_339  [key=2, style=dotted];
m21_317 -> m21_318  [key=0, style=solid];
m21_317 -> m21_332  [key=2, style=dotted];
m21_317 -> m21_319  [key=1, style=dashed, color=darkseagreen4, label=id];
m21_319 -> m21_323  [key=0, style=solid];
m21_319 -> m21_325  [key=1, style=dashed, color=darkseagreen4, label=ibOrderId];
m21_319 -> m21_326  [key=1, style=dashed, color=darkseagreen4, label=ibOrderId];
m21_322 -> m21_328  [key=0, style=solid];
m21_322 -> m21_335  [key=2, style=dotted];
m21_328 -> m21_61  [key=0, style=bold, color=blue];
m21_671 -> m21_672  [key=0, style=solid];
m21_671 -> m21_678  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs"];
m21_671 -> m21_680  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs"];
m21_671 -> m21_682  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs"];
m21_671 -> m21_683  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs"];
m21_671 -> m21_685  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs"];
m21_671 -> m21_687  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs"];
m21_672 -> m21_673  [key=0, style=solid];
m21_672 -> m21_36  [key=2, style=dotted];
m21_678 -> m21_679  [key=0, style=solid];
m21_678 -> m21_692  [key=2, style=dotted];
m21_678 -> m21_684  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_678 -> m21_687  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_678 -> m21_688  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_680 -> m21_681  [key=0, style=solid];
m21_680 -> m21_693  [key=2, style=dotted];
m21_682 -> m21_683  [key=0, style=solid];
m21_682 -> m21_694  [key=2, style=dotted];
m21_682 -> m21_688  [key=1, style=dashed, color=darkseagreen4, label=currentQuantityFilled];
m21_683 -> m21_684  [key=0, style=solid];
m21_683 -> m21_694  [key=2, style=dotted];
m21_683 -> m21_688  [key=1, style=dashed, color=darkseagreen4, label=totalQuantityFilled];
m21_685 -> m21_686  [key=0, style=solid];
m21_685 -> m21_508  [key=2, style=dotted];
m21_685 -> m21_688  [key=1, style=dashed, color=darkseagreen4, label=price];
m21_687 -> m21_688  [key=0, style=solid];
m21_687 -> m21_689  [key=0, style=solid];
m21_687 -> m21_691  [key=0, style=solid];
m21_687 -> m21_695  [key=2, style=dotted];
m21_673 -> m21_674  [key=0, style=solid];
m21_673 -> m21_678  [key=0, style=solid];
m21_674 -> m21_675  [key=0, style=solid];
m21_674 -> m21_676  [key=0, style=solid];
m21_675 -> m21_677  [key=0, style=solid];
m21_675 -> m21_387  [key=2, style=dotted];
m21_676 -> m21_677  [key=0, style=solid];
m21_676 -> m21_52  [key=2, style=dotted];
m21_677 -> m21_691  [key=0, style=solid];
m21_679 -> m21_680  [key=0, style=solid];
m21_679 -> m21_682  [key=0, style=solid];
m21_684 -> m21_685  [key=0, style=solid];
m21_684 -> m21_667  [key=2, style=dotted];
m21_684 -> m21_686  [key=1, style=dashed, color=darkseagreen4, label=remainingQuantity];
m21_684 -> m21_687  [key=1, style=dashed, color=darkseagreen4, label=remainingQuantity];
m21_684 -> m21_688  [key=1, style=dashed, color=darkseagreen4, label=remainingQuantity];
m21_688 -> m21_689  [key=0, style=solid];
m21_688 -> m21_691  [key=0, style=solid];
m21_688 -> m21_669  [key=2, style=dotted];
m21_681 -> m21_691  [key=0, style=solid];
m21_686 -> m21_687  [key=0, style=solid];
m21_686 -> m21_688  [key=1, style=dashed, color=darkseagreen4, label=status];
m21_689 -> m21_690  [key=0, style=solid];
m21_690 -> m21_691  [key=0, style=solid];
m21_690 -> m21_52  [key=2, style=dotted];
m21_691 -> m21_671  [key=0, style=bold, color=blue];
m21_624 -> m21_625  [key=0, style=solid];
m21_624 -> m21_626  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs"];
m21_624 -> m21_627  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs"];
m21_624 -> m21_628  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs"];
m21_624 -> m21_629  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs"];
m21_625 -> m21_626  [key=0, style=solid];
m21_626 -> m21_627  [key=0, style=solid];
m21_626 -> m21_630  [key=0, style=solid];
m21_626 -> m21_632  [key=0, style=solid];
m21_627 -> m21_628  [key=0, style=solid];
m21_627 -> m21_633  [key=2, style=dotted];
m21_627 -> m21_629  [key=1, style=dashed, color=darkseagreen4, label=cashBalance];
m21_628 -> m21_629  [key=0, style=solid];
m21_628 -> m21_634  [key=2, style=dotted];
m21_629 -> m21_630  [key=0, style=solid];
m21_629 -> m21_632  [key=0, style=solid];
m21_629 -> m21_635  [key=2, style=dotted];
m21_629 -> m21_636  [key=2, style=dotted];
m21_630 -> m21_631  [key=0, style=solid];
m21_631 -> m21_632  [key=0, style=solid];
m21_631 -> m21_52  [key=2, style=dotted];
m21_632 -> m21_624  [key=0, style=bold, color=blue];
m21_332 -> m21_991  [key=0, style=solid];
m21_991 -> m21_992  [key=0, style=solid];
m21_991 -> m21_993  [key=0, style=solid];
m21_992 -> m21_991  [key=0, style=solid];
m21_992 -> m21_995  [key=2, style=dotted];
m21_993 -> m21_994  [key=0, style=solid];
m21_993 -> m21_996  [key=2, style=dotted];
m21_994 -> m21_332  [key=0, style=bold, color=blue];
m21_83 -> m21_84  [key=0, style=solid];
m21_84 -> m21_85  [key=0, style=solid];
m21_84 -> m21_97  [key=2, style=dotted];
m21_84 -> m21_86  [key=1, style=dashed, color=darkseagreen4, label=orders];
m21_84 -> m21_103  [key=1, style=dashed, color=darkseagreen4, label=orders];
m21_84 -> m21_95  [key=1, style=dashed, color=darkseagreen4, label=orders];
m21_85 -> m21_86  [key=0, style=solid];
m21_85 -> m21_98  [key=2, style=dotted];
m21_85 -> m21_87  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_85 -> m21_108  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_85 -> m21_91  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_86 -> m21_87  [key=0, style=solid];
m21_86 -> m21_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OpenOrderEventArgs"];
m21_86 -> m21_88  [key=1, style=dashed, color=darkseagreen4, label=clientOnOpenOrder];
m21_86 -> m21_93  [key=1, style=dashed, color=darkseagreen4, label=clientOnOpenOrder];
m21_95 -> m21_96  [key=0, style=solid];
m21_87 -> m21_88  [key=0, style=solid];
m21_87 -> m21_89  [key=1, style=dashed, color=darkseagreen4, label=clientOnOpenOrderEnd];
m21_87 -> m21_94  [key=1, style=dashed, color=darkseagreen4, label=clientOnOpenOrderEnd];
m21_91 -> m21_92  [key=0, style=solid];
m21_91 -> m21_93  [key=0, style=solid];
m21_91 -> m21_100  [key=2, style=dotted];
m21_88 -> m21_89  [key=0, style=solid];
m21_93 -> m21_94  [key=0, style=solid];
m21_89 -> m21_90  [key=0, style=solid];
m21_94 -> m21_95  [key=0, style=solid];
m21_94 -> m21_52  [key=1, style=dashed, color=green, label=directory];
m21_94 -> m21_60  [key=1, style=dashed, color=green, label=directory];
m21_90 -> m21_91  [key=0, style=solid];
m21_90 -> m21_99  [key=2, style=dotted];
m21_92 -> m21_96  [key=0, style=solid];
m21_92 -> m21_101  [key=2, style=dotted];
m21_96 -> m21_83  [key=0, style=bold, color=blue];
m21_54 -> m21_55  [key=0, style=solid];
m21_54 -> m21_36  [key=2, style=dotted];
m21_906 -> m21_907  [key=0, style=solid];
m21_907 -> m21_908  [key=0, style=solid];
m21_907 -> m21_910  [key=0, style=solid];
m21_907 -> m21_912  [key=0, style=solid];
m21_907 -> m21_914  [key=0, style=solid];
m21_907 -> m21_916  [key=0, style=solid];
m21_907 -> m21_918  [key=0, style=solid];
m21_907 -> m21_926  [key=0, style=solid];
m21_908 -> m21_909  [key=0, style=solid];
m21_910 -> m21_911  [key=0, style=solid];
m21_912 -> m21_913  [key=0, style=solid];
m21_914 -> m21_915  [key=0, style=solid];
m21_916 -> m21_917  [key=0, style=solid];
m21_918 -> m21_919  [key=0, style=solid];
m21_926 -> m21_927  [key=0, style=solid];
m21_926 -> m21_928  [key=2, style=dotted];
m21_909 -> m21_927  [key=0, style=solid];
m21_911 -> m21_927  [key=0, style=solid];
m21_913 -> m21_927  [key=0, style=solid];
m21_915 -> m21_927  [key=0, style=solid];
m21_917 -> m21_927  [key=0, style=solid];
m21_919 -> m21_920  [key=0, style=solid];
m21_920 -> m21_921  [key=0, style=solid];
m21_921 -> m21_922  [key=0, style=solid];
m21_922 -> m21_923  [key=0, style=solid];
m21_923 -> m21_924  [key=0, style=solid];
m21_924 -> m21_925  [key=0, style=solid];
m21_925 -> m21_927  [key=0, style=solid];
m21_927 -> m21_906  [key=0, style=bold, color=blue];
m21_117 -> m21_1361  [key=0, style=solid];
m21_1361 -> m21_1362  [key=0, style=solid];
m21_1361 -> m21_36  [key=2, style=dotted];
m21_1362 -> m21_1363  [key=0, style=solid];
m21_1362 -> m21_1365  [key=0, style=solid];
m21_1362 -> m21_1367  [key=2, style=dotted];
m21_1363 -> m21_1364  [key=0, style=solid];
m21_1363 -> m21_36  [key=2, style=dotted];
m21_1365 -> m21_1366  [key=0, style=solid];
m21_1365 -> m21_36  [key=2, style=dotted];
m21_1364 -> m21_1365  [key=0, style=solid];
m21_1364 -> m21_35  [key=2, style=dotted];
m21_1366 -> m21_117  [key=0, style=bold, color=blue];
m21_158 -> m21_159  [key=0, style=solid];
m21_158 -> m21_163  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_159 -> m21_160  [key=0, style=solid];
m21_159 -> m21_175  [key=2, style=dotted];
m21_159 -> m21_176  [key=2, style=dotted];
m21_159 -> m21_168  [key=1, style=dashed, color=darkseagreen4, label=filter];
m21_163 -> m21_164  [key=0, style=solid];
m21_160 -> m21_161  [key=0, style=solid];
m21_160 -> m21_97  [key=2, style=dotted];
m21_160 -> m21_165  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_160 -> m21_185  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_160 -> m21_173  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_168 -> m21_169  [key=0, style=solid];
m21_168 -> m21_178  [key=2, style=dotted];
m21_161 -> m21_162  [key=0, style=solid];
m21_161 -> m21_98  [key=2, style=dotted];
m21_161 -> m21_164  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_161 -> m21_181  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_161 -> m21_169  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_165 -> m21_166  [key=0, style=solid];
m21_165 -> m21_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs"];
m21_165 -> m21_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs"];
m21_165 -> m21_171  [key=1, style=dashed, color=darkseagreen4, label=clientOnExecDetails];
m21_173 -> m21_174  [key=0, style=solid];
m21_162 -> m21_163  [key=0, style=solid];
m21_162 -> m21_177  [key=2, style=dotted];
m21_162 -> m21_164  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_162 -> m21_180  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_162 -> m21_165  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_162 -> m21_184  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_162 -> m21_168  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_164 -> m21_165  [key=0, style=solid];
m21_164 -> m21_180  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs"];
m21_164 -> m21_167  [key=1, style=dashed, color=darkseagreen4, label=clientOnExecutionDataEnd];
m21_164 -> m21_172  [key=1, style=dashed, color=darkseagreen4, label=clientOnExecutionDataEnd];
m21_169 -> m21_170  [key=0, style=solid];
m21_169 -> m21_171  [key=0, style=solid];
m21_169 -> m21_100  [key=2, style=dotted];
m21_167 -> m21_168  [key=0, style=solid];
m21_172 -> m21_173  [key=0, style=solid];
m21_166 -> m21_167  [key=0, style=solid];
m21_171 -> m21_172  [key=0, style=solid];
m21_170 -> m21_174  [key=0, style=solid];
m21_170 -> m21_101  [key=2, style=dotted];
m21_174 -> m21_158  [key=0, style=bold, color=blue];
m21_637 -> m21_638  [key=0, style=solid];
m21_637 -> m21_644  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs"];
m21_637 -> m21_646  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs"];
m21_637 -> m21_648  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs"];
m21_637 -> m21_650  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs"];
m21_637 -> m21_651  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs"];
m21_637 -> m21_652  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs"];
m21_637 -> m21_653  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs"];
m21_637 -> m21_654  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs"];
m21_638 -> m21_639  [key=0, style=solid];
m21_638 -> m21_36  [key=2, style=dotted];
m21_644 -> m21_645  [key=0, style=solid];
m21_644 -> m21_572  [key=2, style=dotted];
m21_644 -> m21_651  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_644 -> m21_654  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_644 -> m21_655  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_644 -> m21_656  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_644 -> m21_657  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_644 -> m21_658  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_644 -> m21_659  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_644 -> m21_661  [key=1, style=dashed, color=darkseagreen4, label=order];
m21_646 -> m21_647  [key=0, style=solid];
m21_646 -> m21_52  [key=2, style=dotted];
m21_648 -> m21_649  [key=0, style=solid];
m21_648 -> m21_665  [key=2, style=dotted];
m21_648 -> m21_655  [key=1, style=dashed, color=darkseagreen4, label=status];
m21_648 -> m21_656  [key=1, style=dashed, color=darkseagreen4, label=status];
m21_648 -> m21_658  [key=1, style=dashed, color=darkseagreen4, label=status];
m21_648 -> m21_659  [key=1, style=dashed, color=darkseagreen4, label=status];
m21_648 -> m21_660  [key=1, style=dashed, color=darkseagreen4, label=status];
m21_648 -> m21_661  [key=1, style=dashed, color=darkseagreen4, label=status];
m21_650 -> m21_651  [key=0, style=solid];
m21_650 -> m21_666  [key=2, style=dotted];
m21_650 -> m21_655  [key=1, style=dashed, color=darkseagreen4, label=currentQuantityFilled];
m21_651 -> m21_652  [key=0, style=solid];
m21_651 -> m21_667  [key=2, style=dotted];
m21_651 -> m21_655  [key=1, style=dashed, color=darkseagreen4, label=totalQuantityFilled];
m21_652 -> m21_653  [key=0, style=solid];
m21_652 -> m21_654  [key=1, style=dashed, color=darkseagreen4, label=remainingQuantity];
m21_652 -> m21_655  [key=1, style=dashed, color=darkseagreen4, label=remainingQuantity];
m21_653 -> m21_654  [key=0, style=solid];
m21_653 -> m21_518  [key=2, style=dotted];
m21_653 -> m21_655  [key=1, style=dashed, color=darkseagreen4, label=price];
m21_654 -> m21_655  [key=0, style=solid];
m21_654 -> m21_662  [key=0, style=solid];
m21_654 -> m21_664  [key=0, style=solid];
m21_654 -> m21_668  [key=2, style=dotted];
m21_639 -> m21_640  [key=0, style=solid];
m21_639 -> m21_644  [key=0, style=solid];
m21_640 -> m21_641  [key=0, style=solid];
m21_640 -> m21_642  [key=0, style=solid];
m21_641 -> m21_643  [key=0, style=solid];
m21_641 -> m21_387  [key=2, style=dotted];
m21_642 -> m21_643  [key=0, style=solid];
m21_642 -> m21_52  [key=2, style=dotted];
m21_643 -> m21_664  [key=0, style=solid];
m21_645 -> m21_646  [key=0, style=solid];
m21_645 -> m21_648  [key=0, style=solid];
m21_655 -> m21_662  [key=0, style=solid];
m21_655 -> m21_664  [key=0, style=solid];
m21_655 -> m21_669  [key=2, style=dotted];
m21_656 -> m21_657  [key=0, style=solid];
m21_656 -> m21_662  [key=0, style=solid];
m21_656 -> m21_664  [key=0, style=solid];
m21_657 -> m21_658  [key=0, style=solid];
m21_657 -> m21_659  [key=0, style=solid];
m21_657 -> m21_670  [key=2, style=dotted];
m21_658 -> m21_662  [key=0, style=solid];
m21_658 -> m21_664  [key=0, style=solid];
m21_658 -> m21_36  [key=2, style=dotted];
m21_659 -> m21_660  [key=0, style=solid];
m21_659 -> m21_661  [key=0, style=solid];
m21_661 -> m21_662  [key=0, style=solid];
m21_661 -> m21_664  [key=0, style=solid];
m21_661 -> m21_573  [key=2, style=dotted];
m21_661 -> m21_574  [key=2, style=dotted];
m21_647 -> m21_664  [key=0, style=solid];
m21_649 -> m21_650  [key=0, style=solid];
m21_649 -> m21_656  [key=0, style=solid];
m21_660 -> m21_662  [key=0, style=solid];
m21_660 -> m21_664  [key=0, style=solid];
m21_660 -> m21_36  [key=2, style=dotted];
m21_662 -> m21_663  [key=0, style=solid];
m21_663 -> m21_664  [key=0, style=solid];
m21_663 -> m21_52  [key=2, style=dotted];
m21_664 -> m21_637  [key=0, style=bold, color=blue];
m21_745 -> m21_827  [key=0, style=solid];
m21_745 -> m21_834  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderDirection"];
m21_827 -> m21_828  [key=0, style=solid];
m21_827 -> m21_830  [key=0, style=solid];
m21_827 -> m21_832  [key=0, style=solid];
m21_827 -> m21_834  [key=0, style=solid];
m21_834 -> m21_835  [key=0, style=solid];
m21_834 -> m21_783  [key=2, style=dotted];
m21_828 -> m21_829  [key=0, style=solid];
m21_830 -> m21_831  [key=0, style=solid];
m21_832 -> m21_833  [key=0, style=solid];
m21_829 -> m21_835  [key=0, style=solid];
m21_831 -> m21_835  [key=0, style=solid];
m21_833 -> m21_835  [key=0, style=solid];
m21_835 -> m21_745  [key=0, style=bold, color=blue];
m21_188 -> m21_189  [key=0, style=solid];
m21_189 -> m21_190  [key=0, style=solid];
m21_189 -> m21_191  [key=0, style=solid];
m21_190 -> m21_233  [key=0, style=solid];
m21_191 -> m21_192  [key=0, style=solid];
m21_191 -> m21_234  [key=2, style=dotted];
m21_192 -> m21_193  [key=0, style=solid];
m21_192 -> m21_234  [key=2, style=dotted];
m21_193 -> m21_194  [key=0, style=solid];
m21_193 -> m21_197  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m21_193 -> m21_210  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m21_193 -> m21_219  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m21_193 -> m21_227  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m21_194 -> m21_195  [key=0, style=solid];
m21_194 -> m21_197  [key=1, style=dashed, color=darkseagreen4, label=maxAttempts];
m21_194 -> m21_210  [key=1, style=dashed, color=darkseagreen4, label=maxAttempts];
m21_194 -> m21_219  [key=1, style=dashed, color=darkseagreen4, label=maxAttempts];
m21_194 -> m21_227  [key=1, style=dashed, color=darkseagreen4, label=maxAttempts];
m21_197 -> m21_198  [key=0, style=solid];
m21_197 -> m21_235  [key=2, style=dotted];
m21_210 -> m21_211  [key=0, style=solid];
m21_210 -> m21_212  [key=0, style=solid];
m21_210 -> m21_210  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m21_210 -> m21_219  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m21_210 -> m21_227  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m21_219 -> m21_220  [key=0, style=solid];
m21_219 -> m21_221  [key=0, style=solid];
m21_219 -> m21_219  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m21_219 -> m21_227  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m21_227 -> m21_228  [key=0, style=solid];
m21_227 -> m21_229  [key=0, style=solid];
m21_227 -> m21_227  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m21_195 -> m21_196  [key=0, style=solid];
m21_195 -> m21_224  [key=1, style=dashed, color=darkseagreen4, label=existingSessionDetected];
m21_196 -> m21_197  [key=0, style=solid];
m21_196 -> m21_233  [key=0, style=solid];
m21_224 -> m21_225  [key=0, style=solid];
m21_224 -> m21_227  [key=0, style=solid];
m21_198 -> m21_199  [key=0, style=solid];
m21_198 -> m21_236  [key=2, style=dotted];
m21_199 -> m21_200  [key=0, style=solid];
m21_199 -> m21_237  [key=2, style=dotted];
m21_200 -> m21_201  [key=0, style=solid];
m21_200 -> m21_238  [key=2, style=dotted];
m21_200 -> m21_202  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_200 -> m21_252  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_201 -> m21_202  [key=0, style=solid];
m21_201 -> m21_239  [key=2, style=dotted];
m21_202 -> m21_203  [key=0, style=solid];
m21_202 -> m21_27  [key=2, style=dotted];
m21_202 -> m21_254  [key=1, style=dashed, color=darkseagreen4, label=error];
m21_203 -> m21_204  [key=0, style=solid];
m21_203 -> m21_28  [key=2, style=dotted];
m21_204 -> m21_205  [key=0, style=solid];
m21_204 -> m21_213  [key=0, style=solid];
m21_204 -> m21_100  [key=2, style=dotted];
m21_205 -> m21_206  [key=0, style=solid];
m21_205 -> m21_36  [key=2, style=dotted];
m21_213 -> m21_214  [key=0, style=solid];
m21_213 -> m21_36  [key=2, style=dotted];
m21_206 -> m21_207  [key=0, style=solid];
m21_206 -> m21_236  [key=2, style=dotted];
m21_207 -> m21_208  [key=0, style=solid];
m21_207 -> m21_210  [key=0, style=solid];
m21_207 -> m21_240  [key=2, style=dotted];
m21_208 -> m21_209  [key=0, style=solid];
m21_208 -> m21_224  [key=1, style=dashed, color=darkseagreen4, label=existingSessionDetected];
m21_209 -> m21_196  [key=0, style=solid];
m21_209 -> m21_241  [key=2, style=dotted];
m21_211 -> m21_196  [key=0, style=solid];
m21_211 -> m21_242  [key=2, style=dotted];
m21_212 -> m21_196  [key=0, style=solid];
m21_212 -> m21_101  [key=2, style=dotted];
m21_214 -> m21_215  [key=0, style=solid];
m21_214 -> m21_216  [key=0, style=solid];
m21_215 -> m21_196  [key=0, style=solid];
m21_215 -> m21_241  [key=2, style=dotted];
m21_216 -> m21_217  [key=0, style=solid];
m21_216 -> m21_222  [key=0, style=solid];
m21_216 -> m21_243  [key=2, style=dotted];
m21_217 -> m21_218  [key=0, style=solid];
m21_217 -> m21_36  [key=2, style=dotted];
m21_222 -> m21_233  [key=0, style=solid];
m21_222 -> m21_244  [key=2, style=dotted];
m21_218 -> m21_219  [key=0, style=solid];
m21_218 -> m21_236  [key=2, style=dotted];
m21_220 -> m21_196  [key=0, style=solid];
m21_220 -> m21_242  [key=2, style=dotted];
m21_221 -> m21_196  [key=0, style=solid];
m21_221 -> m21_101  [key=2, style=dotted];
m21_223 -> m21_224  [key=0, style=solid];
m21_225 -> m21_226  [key=0, style=solid];
m21_225 -> m21_245  [key=2, style=dotted];
m21_226 -> m21_233  [key=0, style=solid];
m21_228 -> m21_196  [key=0, style=solid];
m21_228 -> m21_242  [key=2, style=dotted];
m21_229 -> m21_230  [key=0, style=solid];
m21_229 -> m21_245  [key=2, style=dotted];
m21_230 -> m21_231  [key=0, style=solid];
m21_230 -> m21_232  [key=0, style=solid];
m21_230 -> m21_246  [key=2, style=dotted];
m21_231 -> m21_233  [key=0, style=solid];
m21_231 -> m21_247  [key=2, style=dotted];
m21_232 -> m21_233  [key=0, style=solid];
m21_233 -> m21_188  [key=0, style=bold, color=blue];
m21_1228 -> m21_1229  [key=0, style=solid];
m21_1228 -> m21_1230  [key=0, style=bold, color=crimson];
m21_1228 -> m21_1250  [key=0, style=bold, color=crimson];
m21_1228 -> m21_1231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1233  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1244  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1247  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1228 -> m21_1248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1229 -> m21_1230  [key=0, style=solid];
m21_1229 -> m21_1231  [key=0, style=solid];
m21_1229 -> m21_1056  [key=2, style=dotted];
m21_1229 -> m21_1058  [key=2, style=dotted];
m21_1230 -> m21_1231  [key=0, style=solid];
m21_1250 -> m21_1249  [key=0, style=solid];
m21_1231 -> m21_1232  [key=0, style=solid];
m21_1231 -> m21_331  [key=2, style=dotted];
m21_1231 -> m21_1236  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_1231 -> m21_1243  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_1231 -> m21_1244  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_1231 -> m21_1246  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_1232 -> m21_1233  [key=0, style=solid];
m21_1232 -> m21_929  [key=2, style=dotted];
m21_1232 -> m21_1243  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m21_1232 -> m21_1244  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m21_1232 -> m21_1246  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m21_1233 -> m21_1234  [key=0, style=solid];
m21_1233 -> m21_941  [key=2, style=dotted];
m21_1233 -> m21_1243  [key=1, style=dashed, color=darkseagreen4, label=duration];
m21_1233 -> m21_1244  [key=1, style=dashed, color=darkseagreen4, label=duration];
m21_1233 -> m21_1246  [key=1, style=dashed, color=darkseagreen4, label=duration];
m21_1234 -> m21_1235  [key=0, style=solid];
m21_1234 -> m21_1236  [key=1, style=dashed, color=darkseagreen4, label=startTime];
m21_1234 -> m21_1243  [key=1, style=dashed, color=darkseagreen4, label=startTime];
m21_1234 -> m21_1244  [key=1, style=dashed, color=darkseagreen4, label=startTime];
m21_1234 -> m21_1246  [key=1, style=dashed, color=darkseagreen4, label=startTime];
m21_1235 -> m21_1236  [key=0, style=solid];
m21_1235 -> m21_1243  [key=1, style=dashed, color=darkseagreen4, label=endTime];
m21_1235 -> m21_1244  [key=1, style=dashed, color=darkseagreen4, label=endTime];
m21_1235 -> m21_1246  [key=1, style=dashed, color=darkseagreen4, label=endTime];
m21_1236 -> m21_1237  [key=0, style=solid];
m21_1236 -> m21_501  [key=2, style=dotted];
m21_1238 -> m21_1239  [key=0, style=solid];
m21_1238 -> m21_1241  [key=0, style=solid];
m21_1238 -> m21_720  [key=2, style=dotted];
m21_1238 -> m21_1243  [key=1, style=dashed, color=darkseagreen4, label=exchangeTimeZone];
m21_1238 -> m21_1244  [key=1, style=dashed, color=darkseagreen4, label=exchangeTimeZone];
m21_1238 -> m21_1246  [key=1, style=dashed, color=darkseagreen4, label=exchangeTimeZone];
m21_1238 -> m21_1247  [key=1, style=dashed, color=darkseagreen4, label=exchangeTimeZone];
m21_1238 -> m21_1248  [key=1, style=dashed, color=darkseagreen4, label=exchangeTimeZone];
m21_1239 -> m21_1240  [key=0, style=solid];
m21_1239 -> m21_1104  [key=2, style=dotted];
m21_1239 -> m21_1105  [key=2, style=dotted];
m21_1239 -> m21_1243  [key=1, style=dashed, color=darkseagreen4, label=exchangeTimeZone];
m21_1239 -> m21_1244  [key=1, style=dashed, color=darkseagreen4, label=exchangeTimeZone];
m21_1239 -> m21_1246  [key=1, style=dashed, color=darkseagreen4, label=exchangeTimeZone];
m21_1239 -> m21_1247  [key=1, style=dashed, color=darkseagreen4, label=exchangeTimeZone];
m21_1239 -> m21_1248  [key=1, style=dashed, color=darkseagreen4, label=exchangeTimeZone];
m21_1240 -> m21_1241  [key=0, style=solid];
m21_1240 -> m21_1059  [key=2, style=dotted];
m21_1242 -> m21_1243  [key=0, style=solid];
m21_1242 -> m21_1246  [key=0, style=solid];
m21_1243 -> m21_1244  [key=0, style=solid];
m21_1243 -> m21_1253  [key=2, style=dotted];
m21_1243 -> m21_1245  [key=1, style=dashed, color=darkseagreen4, label=historyBid];
m21_1244 -> m21_1245  [key=0, style=solid];
m21_1244 -> m21_1253  [key=2, style=dotted];
m21_1246 -> m21_1247  [key=0, style=solid];
m21_1246 -> m21_1253  [key=2, style=dotted];
m21_1246 -> m21_1249  [key=1, style=dashed, color=darkseagreen4, label=history];
m21_1247 -> m21_1248  [key=0, style=solid];
m21_1247 -> m21_1012  [key=2, style=dotted];
m21_1247 -> m21_1249  [key=1, style=dashed, color=darkseagreen4, label=requestStartTime];
m21_1247 -> m21_1267  [key=1, style=dashed, color=darkseagreen4, label=requestStartTime];
m21_1248 -> m21_1249  [key=0, style=solid];
m21_1248 -> m21_1012  [key=2, style=dotted];
m21_1248 -> m21_1267  [key=1, style=dashed, color=darkseagreen4, label=requestEndTime];
m21_1237 -> m21_1238  [key=0, style=solid];
m21_1241 -> m21_1242  [key=0, style=solid];
m21_1245 -> m21_1247  [key=0, style=solid];
m21_1245 -> m21_1254  [key=2, style=dotted];
m21_1245 -> m21_1255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1245 -> m21_1258  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1245 -> m21_1261  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1245 -> m21_1249  [key=1, style=dashed, color=darkseagreen4, label=history];
m21_1249 -> m21_1250  [key=0, style=solid];
m21_1249 -> m21_1251  [key=0, style=solid];
m21_1249 -> m21_119  [key=2, style=dotted];
m21_1249 -> m21_1266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1251 -> m21_1252  [key=0, style=solid];
m21_1251 -> m21_36  [key=2, style=dotted];
m21_1252 -> m21_1228  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [key=0, style=bold, color=blue];
m21_592 -> m21_593  [key=0, style=solid];
m21_593 -> m21_594  [key=0, style=solid];
m21_594 -> m21_595  [key=0, style=solid];
m21_595 -> m21_596  [key=0, style=solid];
m21_595 -> m21_601  [key=2, style=dotted];
m21_595 -> m21_599  [key=1, style=dashed, color=darkseagreen4, label=subscribedSymbols];
m21_596 -> m21_597  [key=0, style=solid];
m21_596 -> m21_234  [key=2, style=dotted];
m21_599 -> m21_600  [key=0, style=solid];
m21_599 -> m21_603  [key=2, style=dotted];
m21_597 -> m21_598  [key=0, style=solid];
m21_597 -> m21_234  [key=2, style=dotted];
m21_598 -> m21_599  [key=0, style=solid];
m21_598 -> m21_602  [key=2, style=dotted];
m21_600 -> m21_592  [key=0, style=bold, color=blue];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.IOrderProvider"];
m21_4 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.ISecurityProvider"];
m21_4 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_4 -> m21_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_4 -> m21_10  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_4 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_5 -> m21_6  [key=0, style=solid];
m21_6 -> m21_7  [key=0, style=solid];
m21_7 -> m21_8  [key=0, style=solid];
m21_8 -> m21_9  [key=0, style=solid];
m21_9 -> m21_10  [key=0, style=solid];
m21_10 -> m21_11  [key=0, style=solid];
m21_12 -> m21_13  [key=0, style=solid];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_25  [key=2, style=dotted];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_26  [key=2, style=dotted];
m21_14 -> m21_15  [key=0, style=solid];
m21_15 -> m21_16  [key=0, style=solid];
m21_16 -> m21_17  [key=0, style=solid];
m21_17 -> m21_18  [key=0, style=solid];
m21_18 -> m21_19  [key=0, style=solid];
m21_19 -> m21_20  [key=0, style=solid];
m21_20 -> m21_21  [key=0, style=solid];
m21_21 -> m21_22  [key=0, style=solid];
m21_22 -> m21_23  [key=0, style=solid];
m21_22 -> m21_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs"];
m21_22 -> m21_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs"];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_27  [key=2, style=dotted];
m21_23 -> m21_28  [key=2, style=dotted];
m21_23 -> m21_44  [key=1, style=dashed, color=darkseagreen4, label=exception];
m21_23 -> m21_48  [key=1, style=dashed, color=darkseagreen4, label=exception];
m21_24 -> m21_4  [key=0, style=bold, color=blue];
m21_403 -> m21_415  [key=0, style=solid];
m21_403 -> m21_417  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_403 -> m21_424  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_415 -> m21_416  [key=0, style=solid];
m21_415 -> m21_425  [key=1, style=dashed, color=darkseagreen4, label=timeout];
m21_415 -> m21_426  [key=1, style=dashed, color=darkseagreen4, label=timeout];
m21_417 -> m21_418  [key=0, style=solid];
m21_424 -> m21_425  [key=0, style=solid];
m21_424 -> m21_386  [key=2, style=dotted];
m21_416 -> m21_417  [key=0, style=solid];
m21_416 -> m21_177  [key=2, style=dotted];
m21_416 -> m21_424  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_425 -> m21_426  [key=0, style=solid];
m21_425 -> m21_427  [key=0, style=solid];
m21_425 -> m21_100  [key=2, style=dotted];
m21_426 -> m21_427  [key=0, style=solid];
m21_426 -> m21_387  [key=2, style=dotted];
m21_418 -> m21_419  [key=0, style=solid];
m21_418 -> m21_98  [key=2, style=dotted];
m21_418 -> m21_421  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_418 -> m21_435  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_418 -> m21_425  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_419 -> m21_420  [key=0, style=solid];
m21_419 -> m21_97  [key=2, style=dotted];
m21_419 -> m21_432  [key=1, style=dashed, color=darkseagreen4, label=contractDetails];
m21_419 -> m21_429  [key=1, style=dashed, color=darkseagreen4, label=contractDetails];
m21_421 -> m21_422  [key=0, style=solid];
m21_421 -> m21_423  [key=1, style=dashed, color=darkseagreen4, label=clientOnContractDetailsEnd];
m21_421 -> m21_427  [key=1, style=dashed, color=darkseagreen4, label=clientOnContractDetailsEnd];
m21_420 -> m21_421  [key=0, style=solid];
m21_420 -> m21_432  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs"];
m21_420 -> m21_422  [key=1, style=dashed, color=darkseagreen4, label=clientOnContractDetails];
m21_420 -> m21_428  [key=1, style=dashed, color=darkseagreen4, label=clientOnContractDetails];
m21_429 -> m21_430  [key=0, style=solid];
m21_422 -> m21_423  [key=0, style=solid];
m21_428 -> m21_429  [key=0, style=solid];
m21_423 -> m21_424  [key=0, style=solid];
m21_427 -> m21_428  [key=0, style=solid];
m21_430 -> m21_403  [key=0, style=bold, color=blue];
m21_344 -> m21_345  [key=0, style=solid];
m21_344 -> m21_346  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_344 -> m21_348  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_345 -> m21_346  [key=0, style=solid];
m21_346 -> m21_347  [key=0, style=solid];
m21_346 -> m21_348  [key=0, style=solid];
m21_346 -> m21_340  [key=2, style=dotted];
m21_346 -> m21_353  [key=2, style=dotted];
m21_348 -> m21_349  [key=0, style=solid];
m21_348 -> m21_354  [key=2, style=dotted];
m21_348 -> m21_351  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_347 -> m21_352  [key=0, style=solid];
m21_349 -> m21_350  [key=0, style=solid];
m21_349 -> m21_351  [key=0, style=solid];
m21_351 -> m21_352  [key=0, style=solid];
m21_350 -> m21_352  [key=0, style=solid];
m21_352 -> m21_344  [key=0, style=bold, color=blue];
m21_398 -> m21_399  [key=0, style=solid];
m21_399 -> m21_400  [key=0, style=solid];
m21_399 -> m21_403  [key=2, style=dotted];
m21_399 -> m21_401  [key=1, style=dashed, color=darkseagreen4, label=contractDetails];
m21_400 -> m21_401  [key=0, style=solid];
m21_400 -> m21_404  [key=2, style=dotted];
m21_400 -> m21_405  [key=2, style=dotted];
m21_400 -> m21_412  [key=1, style=dashed, color=darkseagreen4, label=exchanges];
m21_401 -> m21_402  [key=0, style=solid];
m21_401 -> m21_118  [key=2, style=dotted];
m21_401 -> m21_406  [key=2, style=dotted];
m21_401 -> m21_407  [key=2, style=dotted];
m21_401 -> m21_408  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_401 -> m21_411  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_402 -> m21_398  [key=0, style=bold, color=blue];
m21_1192 -> m21_1193  [key=0, style=solid];
m21_1192 -> m21_1194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m21_1192 -> m21_1196  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m21_1192 -> m21_1215  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m21_1192 -> m21_1197  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_1192 -> m21_1199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m21_1193 -> m21_1194  [key=0, style=solid];
m21_1193 -> m21_188  [key=2, style=dotted];
m21_1194 -> m21_1195  [key=0, style=solid];
m21_1194 -> m21_1197  [key=1, style=dashed, color=darkseagreen4, label=exchangeSpecifier];
m21_1196 -> m21_1197  [key=0, style=solid];
m21_1196 -> m21_1215  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_1196 -> m21_1205  [key=1, style=dashed, color=darkseagreen4, label=exchangeFilter];
m21_1196 -> m21_1225  [key=1, style=dashed, color=darkseagreen4, label=exchangeFilter];
m21_1197 -> m21_1198  [key=0, style=solid];
m21_1197 -> m21_812  [key=2, style=dotted];
m21_1197 -> m21_1209  [key=2, style=dotted];
m21_1197 -> m21_810  [key=2, style=dotted];
m21_1197 -> m21_1200  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_1197 -> m21_1202  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_1197 -> m21_1204  [key=1, style=dashed, color=darkseagreen4, label=contract];
m21_1199 -> m21_1200  [key=0, style=solid];
m21_1199 -> m21_1204  [key=0, style=solid];
m21_1195 -> m21_1196  [key=0, style=solid];
m21_1195 -> m21_404  [key=2, style=dotted];
m21_1195 -> m21_405  [key=2, style=dotted];
m21_1195 -> m21_1215  [key=1, style=dashed, color=darkseagreen4, label=futuresExchanges];
m21_1205 -> m21_1206  [key=0, style=solid];
m21_1205 -> m21_118  [key=2, style=dotted];
m21_1205 -> m21_1211  [key=2, style=dotted];
m21_1205 -> m21_406  [key=2, style=dotted];
m21_1205 -> m21_407  [key=2, style=dotted];
m21_1205 -> m21_1218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1205 -> m21_1221  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1205 -> m21_1224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1205 -> m21_1207  [key=1, style=dashed, color=darkseagreen4, label=filteredResults];
m21_1198 -> m21_1199  [key=0, style=solid];
m21_1198 -> m21_501  [key=2, style=dotted];
m21_1200 -> m21_1201  [key=0, style=solid];
m21_1200 -> m21_499  [key=2, style=dotted];
m21_1202 -> m21_1203  [key=0, style=solid];
m21_1202 -> m21_501  [key=2, style=dotted];
m21_1204 -> m21_1205  [key=0, style=solid];
m21_1204 -> m21_403  [key=2, style=dotted];
m21_1201 -> m21_1202  [key=0, style=solid];
m21_1201 -> m21_1210  [key=2, style=dotted];
m21_1201 -> m21_601  [key=2, style=dotted];
m21_1201 -> m21_1203  [key=1, style=dashed, color=darkseagreen4, label=symbols];
m21_1203 -> m21_1208  [key=0, style=solid];
m21_1206 -> m21_1207  [key=0, style=solid];
m21_1206 -> m21_1212  [key=2, style=dotted];
m21_1206 -> m21_235  [key=2, style=dotted];
m21_1207 -> m21_1208  [key=0, style=solid];
m21_1207 -> m21_118  [key=2, style=dotted];
m21_1207 -> m21_1213  [key=2, style=dotted];
m21_1208 -> m21_1192  [key=0, style=bold, color=blue];
m21_1061 -> m21_1062  [key=0, style=solid];
m21_1062 -> m21_1063  [key=0, style=solid];
m21_1062 -> m21_1081  [key=0, style=solid];
m21_1062 -> m21_1083  [key=0, style=solid];
m21_1062 -> m21_1065  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1062 -> m21_1066  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1062 -> m21_1067  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1062 -> m21_1069  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_1063 -> m21_1064  [key=0, style=solid];
m21_1063 -> m21_1062  [key=0, style=solid];
m21_1063 -> m21_1056  [key=2, style=dotted];
m21_1081 -> m21_1082  [key=0, style=solid];
m21_1065 -> m21_1066  [key=0, style=solid];
m21_1065 -> m21_36  [key=2, style=dotted];
m21_1066 -> m21_1067  [key=0, style=solid];
m21_1066 -> m21_1068  [key=0, style=solid];
m21_1067 -> m21_1068  [key=0, style=solid];
m21_1067 -> m21_721  [key=2, style=dotted];
m21_1069 -> m21_1070  [key=0, style=solid];
m21_1069 -> m21_1062  [key=0, style=solid];
m21_1069 -> m21_1084  [key=2, style=dotted];
m21_1069 -> m21_1072  [key=1, style=dashed, color=darkseagreen4, label=id];
m21_1069 -> m21_1077  [key=1, style=dashed, color=darkseagreen4, label=id];
m21_1069 -> m21_1078  [key=1, style=dashed, color=darkseagreen4, label=id];
m21_1069 -> m21_1080  [key=1, style=dashed, color=darkseagreen4, label=id];
m21_1064 -> m21_1065  [key=0, style=solid];
m21_1068 -> m21_1069  [key=0, style=solid];
m21_1070 -> m21_1071  [key=0, style=solid];
m21_1070 -> m21_1060  [key=2, style=dotted];
m21_1072 -> m21_1073  [key=0, style=solid];
m21_1072 -> m21_1078  [key=0, style=solid];
m21_1072 -> m21_720  [key=2, style=dotted];
m21_1077 -> m21_1078  [key=0, style=solid];
m21_1077 -> m21_721  [key=2, style=dotted];
m21_1078 -> m21_1079  [key=0, style=solid];
m21_1078 -> m21_1086  [key=2, style=dotted];
m21_1080 -> m21_1062  [key=0, style=solid];
m21_1080 -> m21_1084  [key=2, style=dotted];
m21_1071 -> m21_1072  [key=0, style=solid];
m21_1073 -> m21_1074  [key=0, style=solid];
m21_1073 -> m21_1075  [key=1, style=dashed, color=darkseagreen4, label=timeSinceSubscription];
m21_1074 -> m21_1075  [key=0, style=solid];
m21_1074 -> m21_1077  [key=0, style=solid];
m21_1075 -> m21_1076  [key=0, style=solid];
m21_1075 -> m21_1085  [key=2, style=dotted];
m21_1076 -> m21_1077  [key=0, style=solid];
m21_1076 -> m21_242  [key=2, style=dotted];
m21_1079 -> m21_1080  [key=0, style=solid];
m21_1082 -> m21_1083  [key=0, style=solid];
m21_1082 -> m21_52  [key=2, style=dotted];
m21_1083 -> m21_1061  [key=0, style=bold, color=blue];
m21_668 -> m21_709  [key=0, style=solid];
m21_668 -> m21_712  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_668 -> m21_713  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_668 -> m21_715  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_668 -> m21_716  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_668 -> m21_717  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_709 -> m21_710  [key=0, style=solid];
m21_709 -> m21_711  [key=0, style=solid];
m21_712 -> m21_713  [key=0, style=solid];
m21_712 -> m21_715  [key=0, style=solid];
m21_712 -> m21_720  [key=2, style=dotted];
m21_713 -> m21_714  [key=0, style=solid];
m21_713 -> m21_715  [key=0, style=solid];
m21_715 -> m21_716  [key=0, style=solid];
m21_715 -> m21_717  [key=0, style=solid];
m21_716 -> m21_718  [key=0, style=solid];
m21_717 -> m21_718  [key=0, style=solid];
m21_717 -> m21_721  [key=2, style=dotted];
m21_710 -> m21_719  [key=0, style=solid];
m21_711 -> m21_712  [key=0, style=solid];
m21_714 -> m21_719  [key=0, style=solid];
m21_718 -> m21_719  [key=0, style=solid];
m21_719 -> m21_668  [key=0, style=bold, color=blue];
m21_340 -> m21_341  [key=0, style=solid];
m21_341 -> m21_342  [key=0, style=solid];
m21_341 -> m21_343  [key=2, style=dotted];
m21_342 -> m21_340  [key=0, style=bold, color=blue];
m21_240 -> m21_1329  [key=0, style=solid];
m21_1329 -> m21_1330  [key=0, style=solid];
m21_1329 -> m21_1345  [key=2, style=dotted];
m21_1329 -> m21_1346  [key=2, style=dotted];
m21_1330 -> m21_1331  [key=0, style=solid];
m21_1330 -> m21_1347  [key=2, style=dotted];
m21_1330 -> m21_1333  [key=1, style=dashed, color=darkseagreen4, label=files];
m21_1331 -> m21_1332  [key=0, style=solid];
m21_1331 -> m21_1335  [key=1, style=dashed, color=darkseagreen4, label=lastLogUpdateTime];
m21_1333 -> m21_1334  [key=0, style=solid];
m21_1333 -> m21_1338  [key=0, style=solid];
m21_1333 -> m21_1337  [key=1, style=dashed, color=darkseagreen4, label=file];
m21_1332 -> m21_1333  [key=0, style=solid];
m21_1332 -> m21_1338  [key=1, style=dashed, color=darkseagreen4, label=ibControllerLogFileName];
m21_1332 -> m21_1340  [key=1, style=dashed, color=darkseagreen4, label=ibControllerLogFileName];
m21_1335 -> m21_1336  [key=0, style=solid];
m21_1335 -> m21_1333  [key=0, style=solid];
m21_1338 -> m21_1339  [key=0, style=solid];
m21_1338 -> m21_1340  [key=0, style=solid];
m21_1338 -> m21_1349  [key=2, style=dotted];
m21_1340 -> m21_1341  [key=0, style=solid];
m21_1340 -> m21_1350  [key=2, style=dotted];
m21_1340 -> m21_601  [key=2, style=dotted];
m21_1340 -> m21_1342  [key=1, style=dashed, color=darkseagreen4, label=lines];
m21_1340 -> m21_1343  [key=1, style=dashed, color=darkseagreen4, label=lines];
m21_1334 -> m21_1335  [key=0, style=solid];
m21_1334 -> m21_1348  [key=2, style=dotted];
m21_1334 -> m21_1336  [key=1, style=dashed, color=darkseagreen4, label=time];
m21_1337 -> m21_1333  [key=0, style=solid];
m21_1337 -> m21_1338  [key=1, style=dashed, color=darkseagreen4, label=ibControllerLogFileName];
m21_1337 -> m21_1340  [key=1, style=dashed, color=darkseagreen4, label=ibControllerLogFileName];
m21_1336 -> m21_1337  [key=0, style=solid];
m21_1339 -> m21_1344  [key=0, style=solid];
m21_1341 -> m21_1342  [key=0, style=solid];
m21_1341 -> m21_1351  [key=2, style=dotted];
m21_1341 -> m21_1356  [key=1, style=dashed, color=darkseagreen4, label=separatorLine];
m21_1342 -> m21_1343  [key=0, style=solid];
m21_1342 -> m21_1352  [key=2, style=dotted];
m21_1342 -> m21_1355  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1343 -> m21_1344  [key=0, style=solid];
m21_1343 -> m21_1353  [key=2, style=dotted];
m21_1343 -> m21_1354  [key=2, style=dotted];
m21_1343 -> m21_1358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1344 -> m21_240  [key=0, style=bold, color=blue];
m21_1368 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_250  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_251  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_280  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_261  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_265  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_268  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_270  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_274  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_286  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_287  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_288  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_289  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_296  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_297  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_298  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_299  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_300  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_306  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_309  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_310  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_314  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_317  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_323  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_325  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_326  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_327  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_346  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_348  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_357  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_359  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_366  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_368  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_375  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_376  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_378  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_393  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_379  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_380  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_383  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_399  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_400  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_416  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_417  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_422  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_423  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_424  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_427  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_428  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_447  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_449  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_450  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_456  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_457  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_460  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_461  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_464  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_471  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_472  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_477  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_478  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_479  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_481  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_493  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_494  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_495  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_540  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_548  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_549  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_550  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_552  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_554  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_557  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_561  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_564  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_565  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_575  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_576  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_578  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_584  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_586  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_587  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_594  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_595  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_596  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_597  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_598  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_599  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_604  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_608  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_610  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_611  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_613  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_622  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_614  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_625  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_628  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_629  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_639  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_640  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_641  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_644  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_654  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_655  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_661  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_673  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_674  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_675  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_678  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_687  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_688  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_698  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_701  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_705  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_712  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_716  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_717  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_723  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_724  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_725  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_728  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_735  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_737  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_739  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_752  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_753  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_786  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_793  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_800  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_806  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_807  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_963  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_967  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_972  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_977  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_982  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_983  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_991  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_993  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_997  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_999  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1015  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1020  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1021  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1022  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1025  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1027  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1034  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1035  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1037  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1041  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1044  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1045  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1046  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1047  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1048  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1049  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1050  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1051  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1063  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1064  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1067  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1069  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1070  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1072  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1074  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1075  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1077  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1078  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1080  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1096  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1098  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1170  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1197  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1233  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1244  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1277  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1278  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1282  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1283  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1284  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1289  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1290  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1291  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1368 -> m21_1364  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage"];
m21_1369 -> m21_103  [key=1, style=dashed, color=darkseagreen4, label=orders];
m21_1370 -> m21_108  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_1371 -> m21_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m21_1372 -> m21_143  [key=1, style=dashed, color=darkseagreen4, label=currency];
m21_1373 -> m21_180  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_1373 -> m21_184  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_1374 -> m21_181  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_1375 -> m21_185  [key=1, style=dashed, color=darkseagreen4, label=details];
m21_1376 -> m21_252  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_1377 -> m21_283  [key=1, style=dashed, color=darkseagreen4, label=firstAccountUpdateReceived];
m21_1378 -> m21_389  [key=1, style=dashed, color=darkseagreen4, label=requestId];
m21_1379 -> m21_392  [key=1, style=dashed, color=darkseagreen4, label=Contract];
m21_1380 -> m21_394  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_1381 -> m21_412  [key=1, style=dashed, color=darkseagreen4, label=exchanges];
m21_1382 -> m21_432  [key=1, style=dashed, color=darkseagreen4, label=contractDetails];
m21_1383 -> m21_435  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_1384 -> m21_510  [key=1, style=dashed, color=darkseagreen4, label=invertedSymbol];
m21_1385 -> m21_510  [key=1, style=dashed, color=darkseagreen4, label=normalSymbol];
m21_1386 -> m21_513  [key=1, style=dashed, color=darkseagreen4, label=marketDataTicker];
m21_1387 -> m21_515  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_1388 -> m21_516  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_1388 -> m21_525  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
m21_1389 -> m21_520  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_1389 -> m21_524  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_1390 -> m21_521  [key=1, style=dashed, color=darkseagreen4, label=data];
m21_1391 -> m21_1215  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m21_1392 -> m21_1215  [key=1, style=dashed, color=darkseagreen4, label=futuresExchanges];
m21_1393 -> m21_1225  [key=1, style=dashed, color=darkseagreen4, label=exchangeFilter];
m21_1394 -> m21_1267  [key=1, style=dashed, color=darkseagreen4, label=requestStartTime];
m21_1395 -> m21_1267  [key=1, style=dashed, color=darkseagreen4, label=requestEndTime];
m21_1396 -> m21_1309  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_1396 -> m21_1317  [key=1, style=dashed, color=darkseagreen4, label=historicalTicker];
m21_1397 -> m21_1310  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1397 -> m21_1311  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m21_1398 -> m21_1312  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m21_1399 -> m21_1313  [key=1, style=dashed, color=darkseagreen4, label=historyPiece];
m21_1400 -> m21_1314  [key=1, style=dashed, color=darkseagreen4, label=dataDownloading];
m21_1401 -> m21_1318  [key=1, style=dashed, color=darkseagreen4, label=dataDownloaded];
m21_1401 -> m21_1324  [key=1, style=dashed, color=darkseagreen4, label=dataDownloaded];
m21_1402 -> m21_1356  [key=1, style=dashed, color=darkseagreen4, label=separatorLine];
m22_138 -> m22_139  [key=0, style=solid];
m22_138 -> m22_75  [key=2, style=dotted];
m22_138 -> m22_153  [key=2, style=dotted];
m22_48 -> m22_49  [key=0, style=solid];
m22_48 -> m22_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m22_48 -> m22_46  [key=0, style=solid];
m22_49 -> m22_50  [key=0, style=solid];
m22_49 -> m22_58  [key=2, style=dotted];
m22_49 -> m22_52  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_49 -> m22_55  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_49 -> m22_56  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_51 -> m22_52  [key=0, style=solid, color=green];
m22_51 -> d78  [key=2, style=dotted, color=green];
m22_51 -> m22_57  [key=2, style=dotted, color=green];
m22_51 -> m22_58  [key=2, style=dotted, color=green];
m22_51 -> m22_27  [key=2, style=dotted, color=green];
m22_51 -> m22_80  [key=1, style=dashed, color=green, label="lambda expression"];
m22_51 -> m22_83  [key=1, style=dashed, color=green, label="lambda expression"];
m22_50 -> m22_51  [key=0, style=solid, color=green];
m22_50 -> m22_52  [key=0, style=solid];
m22_50 -> m22_62  [key=2, style=dotted];
m22_52 -> m22_53  [key=0, style=solid];
m22_52 -> m22_59  [key=2, style=dotted];
m22_52 -> m22_64  [key=2, style=dotted];
m22_52 -> m22_65  [key=2, style=dotted];
m22_52 -> m22_66  [key=2, style=dotted];
m22_52 -> m22_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_55 -> m22_56  [key=0, style=solid];
m22_55 -> m22_60  [key=2, style=dotted];
m22_56 -> m22_57  [key=0, style=solid];
m22_56 -> m22_60  [key=2, style=dotted];
m22_53 -> m22_54  [key=0, style=solid];
m22_53 -> m22_32  [key=0, style=bold, color=blue];
m22_54 -> m22_55  [key=0, style=solid];
m22_57 -> m22_48  [key=0, style=bold, color=blue];
m22_14 -> m22_15  [key=0, style=solid];
m22_14 -> m22_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_14 -> m22_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_14 -> m22_18  [key=1, style=dashed, color=red, label="QuantConnect.Data.Market.Tick"];
m22_14 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_14 -> m22_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_14 -> m22_21  [key=1, style=dashed, color=red, label="QuantConnect.Data.Market.Tick"];
m22_14 -> m22_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_14 -> m22_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_14 -> m22_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_14 -> m22_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_14 -> m22_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_15 -> m22_16  [key=0, style=solid];
m22_15 -> m22_21  [key=2, style=dotted];
m22_16 -> m22_17  [key=0, style=solid];
m22_16 -> m22_29  [key=2, style=dotted];
m22_16 -> m22_8  [key=0, style=bold, color=blue];
m22_17 -> m22_18  [key=0, style=solid, color=red];
m22_17 -> m22_140  [key=0, style=solid];
m22_18 -> m22_19  [key=0, style=solid, color=red];
m22_19 -> m22_20  [key=0, style=solid];
m22_20 -> m22_21  [key=0, style=solid, color=red];
m22_21 -> m22_22  [key=0, style=solid, color=red];
m22_22 -> m22_23  [key=0, style=solid, color=green];
m22_23 -> m22_24  [key=0, style=solid, color=green];
m22_23 -> m22_25  [key=2, style=dotted, color=green];
m22_23 -> m22_26  [key=2, style=dotted, color=green];
m22_23 -> m22_27  [key=2, style=dotted, color=green];
m22_23 -> m22_28  [key=1, style=dashed, color=green, label="lambda expression"];
m22_25 -> m22_26  [key=0, style=solid];
m22_26 -> m22_27  [key=0, style=solid];
m22_27 -> m22_28  [key=0, style=solid];
m22_24 -> m22_25  [key=0, style=solid];
m22_24 -> m22_22  [key=0, style=bold, color=blue];
m22_28 -> m22_14  [key=0, style=bold, color=blue];
m22_28 -> m22_29  [key=0, style=solid, color=green];
m22_140 -> m22_141  [key=0, style=solid];
m22_140 -> m22_142  [key=0, style=solid];
m22_141 -> m22_150  [key=0, style=solid];
m22_141 -> m22_151  [key=2, style=dotted];
m22_141 -> m22_152  [key=2, style=dotted];
m22_141 -> m22_142  [key=0, style=solid];
m22_142 -> m22_143  [key=0, style=solid];
m22_142 -> m22_144  [key=0, style=solid];
m22_142 -> m22_146  [key=0, style=solid];
m22_143 -> m22_150  [key=0, style=solid];
m22_143 -> m22_151  [key=2, style=dotted];
m22_143 -> m22_152  [key=2, style=dotted];
m22_143 -> m22_144  [key=0, style=solid];
m22_143 -> m22_145  [key=0, style=solid];
m22_144 -> m22_145  [key=0, style=solid];
m22_144 -> m22_146  [key=0, style=solid];
m22_144 -> m22_147  [key=0, style=solid];
m22_144 -> m22_149  [key=0, style=solid];
m22_145 -> m22_150  [key=0, style=solid];
m22_145 -> m22_151  [key=2, style=dotted];
m22_145 -> m22_152  [key=2, style=dotted];
m22_145 -> m22_147  [key=0, style=solid];
m22_145 -> m22_149  [key=0, style=solid];
m22_146 -> m22_147  [key=0, style=solid];
m22_146 -> m22_148  [key=0, style=solid];
m22_146 -> m22_149  [key=0, style=solid];
m22_147 -> m22_150  [key=0, style=solid];
m22_147 -> m22_151  [key=2, style=dotted];
m22_147 -> m22_152  [key=2, style=dotted];
m22_147 -> m22_148  [key=0, style=solid];
m22_148 -> m22_149  [key=0, style=solid];
m22_148 -> m22_150  [key=0, style=solid];
m22_148 -> m22_154  [key=2, style=dotted];
m22_149 -> m22_150  [key=0, style=solid];
m22_149 -> m22_151  [key=2, style=dotted];
m22_149 -> m22_152  [key=2, style=dotted];
m22_149 -> m22_78  [key=0, style=bold, color=blue];
m22_150 -> m22_17  [key=0, style=bold, color=blue];
m22_101 -> m22_102  [key=0, style=solid];
m22_101 -> m22_147  [key=0, style=solid];
m22_101 -> m22_149  [key=0, style=solid];
m22_102 -> m22_103  [key=0, style=solid];
m22_103 -> m22_101  [key=0, style=bold, color=blue];
m22_103 -> m22_104  [key=0, style=solid];
m22_172 -> m22_173  [key=0, style=solid];
m22_172 -> m22_174  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_172 -> m22_175  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_172 -> m22_176  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_172 -> m22_177  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_172 -> m22_178  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_173 -> m22_174  [key=0, style=solid];
m22_174 -> m22_175  [key=0, style=solid];
m22_175 -> m22_176  [key=0, style=solid];
m22_176 -> m22_177  [key=0, style=solid];
m22_177 -> m22_178  [key=0, style=solid];
m22_178 -> m22_179  [key=0, style=solid];
m22_178 -> m22_180  [key=2, style=dotted];
m22_179 -> m22_172  [key=0, style=bold, color=blue];
m22_7 -> m22_8  [key=0, style=solid];
m22_137 -> m22_138  [key=0, style=solid];
m22_137 -> m22_140  [key=0, style=solid];
m22_29 -> m22_30  [key=0, style=solid, color=green];
m22_29 -> m22_31  [key=2, style=dotted, color=green];
m22_165 -> m22_166  [key=0, style=solid];
m22_165 -> m22_170  [key=2, style=dotted];
m22_165 -> m22_165  [key=1, style=dashed, color=darkseagreen4, label=source];
m22_160 -> m22_161  [key=0, style=solid];
m22_160 -> m22_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_160 -> m22_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_160 -> m22_165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_161 -> m22_162  [key=0, style=solid];
m22_161 -> m22_163  [key=0, style=solid];
m22_163 -> m22_164  [key=0, style=solid];
m22_163 -> m22_169  [key=2, style=dotted];
m22_163 -> m22_165  [key=1, style=dashed, color=darkseagreen4, label=source];
m22_163 -> m22_166  [key=1, style=dashed, color=darkseagreen4, label=source];
m22_164 -> m22_165  [key=0, style=solid];
m22_164 -> m22_166  [key=0, style=solid];
m22_162 -> m22_167  [key=0, style=solid];
m22_162 -> m22_168  [key=2, style=dotted];
m22_166 -> m22_167  [key=0, style=solid];
m22_166 -> m22_171  [key=2, style=dotted];
m22_167 -> m22_160  [key=0, style=bold, color=blue];
m22_39 -> m22_40  [key=0, style=solid];
m22_39 -> m22_41  [key=1, style=dashed, color=darkseagreen4, label=target];
m22_39 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m22_39 -> m22_43  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_39 -> m22_45  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_39 -> m22_46  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_40 -> m22_41  [key=0, style=solid];
m22_41 -> m22_42  [key=0, style=solid];
m22_41 -> m22_39  [key=0, style=solid];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_45  [key=0, style=solid];
m22_43 -> m22_44  [key=0, style=solid, color=green];
m22_43 -> m22_45  [key=0, style=solid];
m22_43 -> m22_62  [key=2, style=dotted];
m22_45 -> m22_46  [key=0, style=solid];
m22_45 -> m22_51  [key=1, style=dashed, color=green, label=riskTargetOverrides];
m22_45 -> m22_63  [key=2, style=dotted];
m22_45 -> m22_61  [key=2, style=dotted];
m22_45 -> m22_50  [key=1, style=dashed, color=darkseagreen4, label=riskTargetOverrides];
m22_45 -> m22_52  [key=1, style=dashed, color=darkseagreen4, label=riskTargetOverrides];
m22_46 -> m22_47  [key=0, style=solid];
m22_46 -> m22_49  [key=0, style=solid];
m22_46 -> m22_48  [key=1, style=dashed, color=darkseagreen4, label=target];
m22_44 -> m22_45  [key=0, style=solid, color=green];
m22_44 -> d78  [key=2, style=dotted, color=green];
m22_44 -> m22_57  [key=2, style=dotted, color=green];
m22_44 -> m22_58  [key=2, style=dotted, color=green];
m22_44 -> m22_27  [key=2, style=dotted, color=green];
m22_44 -> m22_73  [key=1, style=dashed, color=green, label="lambda expression"];
m22_44 -> m22_77  [key=1, style=dashed, color=green, label="lambda expression"];
m22_47 -> m22_39  [key=0, style=bold, color=blue];
m22_47 -> m22_48  [key=0, style=solid];
m22_70 -> m22_71  [key=0, style=solid];
m22_30 -> m22_28  [key=0, style=bold, color=blue];
m22_30 -> m22_31  [key=0, style=solid];
m22_30 -> m22_32  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m22_30 -> m22_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m22_30 -> m22_34  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_30 -> m22_36  [key=1, style=dashed, color=red, label=decimal];
m22_30 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m22_73 -> m22_74  [key=0, style=solid, color=green];
m22_77 -> m22_78  [key=0, style=solid, color=green];
m22_80 -> m22_81  [key=0, style=solid, color=green];
m22_80 -> m22_76  [key=2, style=dotted];
m22_80 -> m22_86  [key=1, style=dashed, color=darkseagreen4, label=scaleFactor];
m22_80 -> m22_127  [key=1, style=dashed, color=darkseagreen4, label=scaleFactor];
m22_80 -> m22_135  [key=1, style=dashed, color=darkseagreen4, label=scaleFactor];
m22_80 -> m22_138  [key=1, style=dashed, color=darkseagreen4, label=scaleFactor];
m22_83 -> m22_84  [key=0, style=solid, color=green];
m22_83 -> m22_150  [key=2, style=dotted];
m22_83 -> m22_85  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_83 -> m22_86  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_83 -> m22_88  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_83 -> m22_89  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_83 -> m22_90  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_83 -> m22_91  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_83 -> m22_92  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_74 -> m22_75  [key=0, style=solid, color=green];
m22_74 -> m22_76  [key=2, style=dotted, color=green];
m22_75 -> m22_73  [key=0, style=bold, color=blue];
m22_78 -> m22_79  [key=0, style=solid, color=green];
m22_78 -> m22_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_78 -> m22_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_78 -> m22_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_78 -> m22_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_112  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_78 -> m22_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_78 -> m22_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_78 -> m22_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_79 -> m22_77  [key=0, style=bold, color=blue];
m22_79 -> m22_80  [key=0, style=solid];
m22_81 -> m22_82  [key=0, style=solid, color=green];
m22_81 -> m22_76  [key=2, style=dotted, color=green];
m22_81 -> m22_93  [key=0, style=solid];
m22_81 -> m22_102  [key=0, style=solid];
m22_81 -> m22_120  [key=0, style=solid];
m22_82 -> m22_80  [key=0, style=bold, color=blue];
m22_82 -> m22_83  [key=0, style=solid];
m22_84 -> m22_85  [key=0, style=solid, color=green];
m22_85 -> m22_83  [key=0, style=bold, color=blue];
m22_85 -> m22_86  [key=0, style=solid];
m22_85 -> m22_151  [key=2, style=dotted];
m22_85 -> m22_74  [key=2, style=dotted];
m22_85 -> m22_152  [key=2, style=dotted];
m22_68 -> m22_31  [key=2, style=dotted];
m22_68 -> m22_69  [key=0, style=solid];
m22_68 -> m22_75  [key=2, style=dotted];
m22_86 -> m22_87  [key=0, style=solid];
m22_86 -> m22_75  [key=2, style=dotted];
m22_86 -> m22_153  [key=2, style=dotted];
m22_67 -> m22_68  [key=0, style=solid];
m22_69 -> m22_67  [key=0, style=bold, color=blue];
m22_69 -> m22_70  [key=0, style=solid];
m22_69 -> m22_77  [key=2, style=dotted];
m22_88 -> m22_86  [key=0, style=bold, color=blue];
m22_88 -> m22_89  [key=0, style=solid];
m22_88 -> m22_75  [key=2, style=dotted];
m22_87 -> m22_88  [key=0, style=solid];
m22_71 -> m22_72  [key=0, style=solid];
m22_71 -> m22_73  [key=2, style=dotted];
m22_72 -> m22_70  [key=0, style=bold, color=blue];
m22_72 -> m22_61  [key=0, style=bold, color=blue];
m22_31 -> m22_32  [key=0, style=solid];
m22_98 -> m22_99  [key=0, style=solid];
m22_98 -> m22_151  [key=2, style=dotted];
m22_98 -> m22_74  [key=2, style=dotted];
m22_98 -> m22_152  [key=2, style=dotted];
m22_99 -> m22_100  [key=0, style=solid];
m22_99 -> m22_75  [key=2, style=dotted];
m22_100 -> m22_98  [key=0, style=bold, color=blue];
m22_100 -> m22_101  [key=0, style=solid];
m22_100 -> m22_75  [key=2, style=dotted];
m22_61 -> m22_62  [key=0, style=solid];
m22_61 -> m22_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m22_61 -> m22_65  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m22_61 -> m22_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m22_62 -> m22_63  [key=0, style=solid, color=red];
m22_62 -> m22_58  [key=2, style=dotted];
m22_62 -> m22_65  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_62 -> m22_66  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_62 -> m22_68  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_62 -> m22_69  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_62 -> m22_70  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_62 -> m22_71  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_64 -> m22_65  [key=0, style=solid];
m22_65 -> m22_66  [key=0, style=solid];
m22_65 -> m22_73  [key=2, style=dotted];
m22_65 -> m22_74  [key=2, style=dotted];
m22_66 -> m22_67  [key=0, style=solid];
m22_66 -> m22_75  [key=2, style=dotted];
m22_66 -> m22_76  [key=2, style=dotted];
m22_63 -> m22_64  [key=0, style=solid, color=red];
m22_155 -> m22_156  [key=0, style=solid];
m22_155 -> m22_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m22_156 -> m22_157  [key=0, style=solid];
m22_156 -> m22_158  [key=0, style=solid];
m22_158 -> m22_159  [key=0, style=solid];
m22_158 -> m22_78  [key=2, style=dotted];
m22_157 -> m22_159  [key=0, style=solid];
m22_157 -> m22_0  [key=2, style=dotted];
m22_159 -> m22_155  [key=0, style=bold, color=blue];
m22_76 -> m22_187  [key=0, style=solid];
m22_97 -> m22_98  [key=0, style=solid];
m22_104 -> m22_105  [key=0, style=solid];
m22_105 -> m22_106  [key=0, style=solid];
m22_106 -> m22_104  [key=0, style=bold, color=blue];
m22_106 -> m22_107  [key=0, style=solid];
m22_106 -> m22_111  [key=0, style=solid];
m22_95 -> m22_96  [key=0, style=solid];
m22_95 -> m22_150  [key=2, style=dotted];
m22_95 -> m22_98  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_95 -> m22_99  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_95 -> m22_100  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_95 -> m22_97  [key=2, style=dotted];
m22_96 -> m22_97  [key=0, style=solid];
m22_96 -> m22_89  [key=0, style=bold, color=blue];
m22_107 -> m22_108  [key=0, style=solid];
m22_107 -> m22_150  [key=2, style=dotted];
m22_107 -> m22_109  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_107 -> m22_110  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_108 -> m22_109  [key=0, style=solid];
m22_108 -> m22_151  [key=2, style=dotted];
m22_108 -> m22_74  [key=2, style=dotted];
m22_108 -> m22_152  [key=2, style=dotted];
m22_112 -> m22_113  [key=0, style=solid];
m22_112 -> m22_150  [key=2, style=dotted];
m22_112 -> m22_114  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_112 -> m22_115  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_112 -> m22_116  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_112 -> m22_117  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_112 -> m22_118  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_112 -> m22_110  [key=0, style=bold, color=blue];
m22_113 -> m22_114  [key=0, style=solid];
m22_113 -> m22_151  [key=2, style=dotted];
m22_113 -> m22_74  [key=2, style=dotted];
m22_113 -> m22_152  [key=2, style=dotted];
m22_113 -> m22_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m22_113 -> m22_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m22_113 -> m22_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m22_113 -> m22_113  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Algorithm.Framework.Alphas.Insight SetGeneratedAndClosedTimes"];
m22_113 -> m22_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m22_113 -> m22_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m22_113 -> m22_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m22_113 -> m22_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m22_122 -> m22_123  [key=0, style=solid];
m22_122 -> m22_150  [key=2, style=dotted];
m22_122 -> m22_124  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_127  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_128  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_129  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_130  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_131  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_133  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_134  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_135  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_136  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_137  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_138  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_139  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_140  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_141  [key=1, style=dashed, color=darkseagreen4, label=csv];
m22_122 -> m22_125  [key=1, style=dashed, color=darkseagreen4, label=barSize];
m22_123 -> m22_124  [key=0, style=solid];
m22_123 -> m22_135  [key=2, style=dotted];
m22_123 -> m22_127  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
m22_124 -> m22_125  [key=0, style=solid];
m22_124 -> m22_151  [key=2, style=dotted];
m22_124 -> m22_74  [key=2, style=dotted];
m22_124 -> m22_152  [key=2, style=dotted];
m22_124 -> m22_136  [key=2, style=dotted];
m22_124 -> m22_127  [key=1, style=dashed, color=darkseagreen4, label=localStart];
m22_125 -> m22_126  [key=0, style=solid];
m22_125 -> m22_125  [key=1, style=dashed, color=darkseagreen4, label=barSize];
m22_125 -> m22_137  [key=2, style=dotted];
m22_127 -> m22_128  [key=0, style=solid];
m22_127 -> m22_75  [key=2, style=dotted];
m22_127 -> m22_153  [key=2, style=dotted];
m22_127 -> m22_138  [key=2, style=dotted];
m22_127 -> m22_139  [key=2, style=dotted];
m22_135 -> m22_136  [key=0, style=solid];
m22_135 -> m22_75  [key=2, style=dotted];
m22_135 -> m22_153  [key=2, style=dotted];
m22_93 -> m22_94  [key=0, style=solid];
m22_93 -> m22_97  [key=2, style=dotted];
m22_120 -> m22_121  [key=0, style=solid];
m22_120 -> m22_124  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
m22_120 -> m22_127  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
m22_89 -> m22_90  [key=0, style=solid, color=green];
m22_89 -> m22_147  [key=0, style=solid];
m22_89 -> m22_149  [key=0, style=solid];
m22_89 -> m22_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m22_89 -> m22_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m22_89 -> m22_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m22_89 -> m22_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m22_89 -> m22_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m22_90 -> m22_91  [key=0, style=solid, color=green];
m22_90 -> m22_92  [key=0, style=solid, color=green];
m22_91 -> m22_92  [key=0, style=solid];
m22_91 -> m22_27  [key=2, style=dotted];
m22_92 -> m22_147  [key=0, style=solid];
m22_92 -> m22_149  [key=0, style=solid];
m22_92 -> m22_93  [key=0, style=solid];
m22_92 -> m22_97  [key=2, style=dotted];
m22_94 -> m22_95  [key=0, style=solid];
m22_94 -> m22_97  [key=2, style=dotted];
m22_111 -> m22_112  [key=0, style=solid];
m22_111 -> m22_147  [key=0, style=solid];
m22_111 -> m22_149  [key=0, style=solid];
m22_109 -> m22_110  [key=0, style=solid];
m22_109 -> m22_75  [key=2, style=dotted];
m22_109 -> m22_107  [key=0, style=bold, color=blue];
m22_110 -> m22_111  [key=0, style=solid];
m22_110 -> m22_75  [key=2, style=dotted];
m22_114 -> m22_115  [key=0, style=solid];
m22_114 -> m22_75  [key=2, style=dotted];
m22_115 -> m22_116  [key=0, style=solid];
m22_115 -> m22_75  [key=2, style=dotted];
m22_115 -> m22_130  [key=2, style=dotted];
m22_115 -> m22_131  [key=2, style=dotted];
m22_116 -> m22_117  [key=0, style=solid];
m22_116 -> m22_75  [key=2, style=dotted];
m22_117 -> m22_118  [key=0, style=solid];
m22_117 -> m22_75  [key=2, style=dotted];
m22_118 -> m22_119  [key=0, style=solid];
m22_118 -> m22_75  [key=2, style=dotted];
m22_119 -> m22_147  [key=0, style=solid];
m22_119 -> m22_149  [key=0, style=solid];
m22_119 -> m22_120  [key=0, style=solid];
m22_119 -> m22_122  [key=0, style=solid];
m22_119 -> m22_132  [key=2, style=dotted];
m22_119 -> m22_121  [key=1, style=dashed, color=darkseagreen4, label=security];
m22_121 -> m22_122  [key=0, style=solid];
m22_121 -> m22_124  [key=0, style=solid];
m22_121 -> m22_133  [key=2, style=dotted];
m22_121 -> m22_125  [key=1, style=dashed, color=darkseagreen4, label=barSize];
m22_128 -> m22_129  [key=0, style=solid];
m22_128 -> m22_75  [key=2, style=dotted];
m22_129 -> m22_130  [key=0, style=solid];
m22_129 -> m22_113  [key=0, style=bold, color=blue];
m22_130 -> m22_131  [key=0, style=solid];
m22_131 -> m22_147  [key=0, style=solid];
m22_131 -> m22_149  [key=0, style=solid];
m22_133 -> m22_147  [key=0, style=solid];
m22_133 -> m22_149  [key=0, style=solid];
m22_133 -> m22_75  [key=2, style=dotted];
m22_134 -> m22_135  [key=0, style=solid];
m22_134 -> m22_137  [key=0, style=solid];
m22_136 -> m22_137  [key=0, style=solid];
m22_136 -> m22_75  [key=2, style=dotted];
m22_139 -> m22_140  [key=0, style=solid];
m22_139 -> m22_75  [key=2, style=dotted];
m22_126 -> m22_127  [key=0, style=solid];
m22_126 -> m22_132  [key=0, style=solid];
m22_126 -> m22_126  [key=1, style=dashed, color=darkseagreen4, label=barSize];
m22_132 -> m22_133  [key=0, style=solid];
m22_132 -> m22_134  [key=0, style=solid];
m22_153 -> m22_12  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_23  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_44  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_51  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_90  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_153 -> m22_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m22_181 -> m22_182  [key=0, style=solid];
m22_182 -> m22_183  [key=0, style=solid];
m22_183 -> m22_181  [key=0, style=bold, color=blue];
m22_5 -> m22_6  [key=0, style=solid];
m22_0 -> m22_1  [key=0, style=solid, color=red];
m22_1 -> m22_2  [key=0, style=solid, color=red];
m22_1 -> m22_5  [key=2, style=dotted];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_6  [key=2, style=dotted];
m22_2 -> m22_13  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_7  [key=2, style=dotted];
m22_4 -> m22_0  [key=0, style=bold, color=blue];
m22_4 -> m22_5  [key=0, style=solid];
m22_32 -> m22_33  [key=0, style=solid];
m22_38 -> m22_44  [key=1, style=dashed, color=green, label=targets];
m22_38 -> m22_39  [key=0, style=solid];
m22_38 -> m22_60  [key=2, style=dotted];
m22_38 -> m22_61  [key=2, style=dotted];
m22_38 -> m22_43  [key=1, style=dashed, color=darkseagreen4, label=targets];
m22_38 -> m22_52  [key=1, style=dashed, color=darkseagreen4, label=targets];
m22_38 -> m22_30  [key=0, style=bold, color=blue];
m22_33 -> m22_38  [key=1, style=dashed, color=darkseagreen4, label=insights];
m22_33 -> d78  [key=2, style=dotted];
m22_33 -> m22_34  [key=0, style=solid];
m22_33 -> m22_54  [key=2, style=dotted];
m22_33 -> m22_56  [key=2, style=dotted];
m22_33 -> m22_36  [key=1, style=dashed, color=darkseagreen4, label=insights];
m22_33 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label=insights];
m22_35 -> m22_36  [key=0, style=solid, color=red];
m22_35 -> m22_37  [key=0, style=solid];
m22_36 -> m22_27  [key=2, style=dotted];
m22_36 -> d78  [key=2, style=dotted];
m22_36 -> m22_57  [key=2, style=dotted];
m22_36 -> m22_58  [key=2, style=dotted];
m22_36 -> m22_37  [key=0, style=solid, color=red];
m22_36 -> m22_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_36 -> m22_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_59  [key=2, style=dotted];
m22_34 -> m22_38  [key=0, style=solid];
m22_34 -> m22_35  [key=0, style=solid];
m22_6 -> m22_7  [key=0, style=solid];
m22_187 -> m22_188  [key=0, style=solid];
m22_188 -> m22_76  [key=0, style=bold, color=blue];
m22_8 -> m22_9  [key=0, style=solid];
m22_12 -> m22_13  [key=0, style=solid, color=green];
m22_12 -> m22_23  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Alphas.InsightCollection"];
m22_12 -> m22_0  [key=0, style=bold, color=blue];
m22_10 -> m22_12  [key=0, style=solid, color=green];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_18  [key=2, style=dotted];
m22_13 -> m22_14  [key=0, style=solid];
m22_13 -> m22_15  [key=0, style=solid];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_17  [key=2, style=dotted];
m22_11 -> m22_10  [key=0, style=solid];
m22_11 -> m22_19  [key=2, style=dotted];
m22_11 -> m22_12  [key=0, style=solid];
m22_184 -> m22_185  [key=0, style=solid];
m22_185 -> m22_186  [key=0, style=solid];
m22_185 -> m22_14  [key=2, style=dotted];
m22_186 -> m22_184  [key=0, style=bold, color=blue];
m22_189 -> m22_1  [key=1, style=dashed, color=red, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_18  [key=1, style=dashed, color=red, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_21  [key=1, style=dashed, color=red, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_36  [key=1, style=dashed, color=red, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_44  [key=1, style=dashed, color=red, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_63  [key=1, style=dashed, color=red, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_175  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_178  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_182  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m22_189 -> m22_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_27  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m23_25 -> m23_29  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m23_26 -> m23_27  [key=0, style=solid];
m23_27 -> m23_28  [key=0, style=solid, color=green];
m23_27 -> m23_29  [key=0, style=solid];
m23_27 -> m23_6  [key=2, style=dotted];
m23_29 -> m23_30  [key=0, style=solid];
m23_29 -> m23_32  [key=2, style=dotted];
m23_28 -> m23_30  [key=0, style=solid, color=green];
m23_28 -> m23_31  [key=2, style=dotted, color=green];
m23_30 -> m23_25  [key=0, style=bold, color=blue];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_11  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m23_9 -> m23_13  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m23_10 -> m23_11  [key=0, style=solid];
m23_11 -> m23_12  [key=0, style=solid];
m23_11 -> m23_13  [key=0, style=solid];
m23_11 -> m23_6  [key=2, style=dotted];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_16  [key=2, style=dotted];
m23_12 -> m23_14  [key=0, style=solid];
m23_12 -> m23_15  [key=2, style=dotted];
m23_14 -> m23_9  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_0 -> m23_2  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m23_0 -> m23_4  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m23_1 -> m23_2  [key=0, style=solid];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_4  [key=0, style=solid];
m23_2 -> m23_6  [key=2, style=dotted];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_8  [key=2, style=dotted];
m23_3 -> m23_5  [key=0, style=solid];
m23_3 -> m23_7  [key=2, style=dotted];
m23_5 -> m23_0  [key=0, style=bold, color=blue];
m23_17 -> m23_18  [key=0, style=solid];
m23_17 -> m23_19  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m23_17 -> m23_21  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m23_18 -> m23_19  [key=0, style=solid];
m23_19 -> m23_20  [key=0, style=solid];
m23_19 -> m23_21  [key=0, style=solid];
m23_19 -> m23_6  [key=2, style=dotted];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_24  [key=2, style=dotted];
m23_20 -> m23_22  [key=0, style=solid];
m23_20 -> m23_23  [key=2, style=dotted];
m23_22 -> m23_17  [key=0, style=bold, color=blue];
m23_33 -> m23_34  [key=0, style=solid];
m23_33 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m23_33 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m23_34 -> m23_35  [key=0, style=solid];
m23_35 -> m23_36  [key=0, style=solid];
m23_35 -> m23_37  [key=0, style=solid];
m23_35 -> m23_6  [key=2, style=dotted];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_40  [key=2, style=dotted];
m23_36 -> m23_38  [key=0, style=solid];
m23_36 -> m23_39  [key=2, style=dotted];
m23_38 -> m23_33  [key=0, style=bold, color=blue];
m23_41 -> m23_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m23_41 -> m23_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m23_41 -> m23_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m23_41 -> m23_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m23_41 -> m23_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m23_41 -> m23_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m23_41 -> m23_28  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m23_41 -> m23_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m23_41 -> m23_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m23_41 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m24_0 -> m24_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m24_0 -> m24_1  [key=0, style=solid];
m24_0 -> m24_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m24_0 -> m24_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m24_8 -> m24_13  [key=2, style=dotted];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> m24_18  [key=2, style=dotted];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_10  [key=0, style=solid];
m24_7 -> m24_17  [key=2, style=dotted];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_14  [key=2, style=dotted];
m24_9 -> m24_15  [key=2, style=dotted];
m24_9 -> m24_19  [key=2, style=dotted];
m24_9 -> m24_20  [key=2, style=dotted];
m24_3 -> m24_7  [key=0, style=solid];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_13  [key=2, style=dotted];
m24_6 -> m24_7  [key=0, style=solid];
m24_6 -> m24_12  [key=2, style=dotted];
m24_6 -> m24_17  [key=2, style=dotted];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_16  [key=2, style=dotted];
m24_10 -> m24_0  [key=0, style=bold, color=blue];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_12  [key=2, style=dotted];
m24_1 -> m24_11  [key=2, style=dotted];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_12  [key=2, style=dotted];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_12  [key=2, style=dotted];
m24_4 -> m24_14  [key=2, style=dotted];
m24_4 -> m24_15  [key=2, style=dotted];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_12  [key=2, style=dotted];
m24_5 -> m24_16  [key=2, style=dotted];
m24_5 -> m24_7  [key=1, style=dashed, color=darkseagreen4, label=equity];
m24_11 -> m24_0  [key=0, style=bold, color=blue];
m24_20 -> m24_51  [key=1, style=dashed, color=green, label=basicTemplateFrameworkStatistics];
m24_20 -> m24_21  [key=0, style=solid];
m24_20 -> m24_13  [key=2, style=dotted];
m24_41 -> m24_51  [key=1, style=dashed, color=green, label=basicTemplateDailyStatistics];
m24_41 -> m24_42  [key=0, style=solid];
m24_41 -> m24_13  [key=2, style=dotted];
m24_33 -> m24_51  [key=1, style=dashed, color=green, label=coarseFineFundamentalRegressionAlgorithmStatistics];
m24_33 -> m24_34  [key=0, style=solid];
m24_33 -> m24_13  [key=2, style=dotted];
m24_18 -> m24_51  [key=1, style=dashed, color=green, label=emptyStatistics];
m24_18 -> m24_19  [key=0, style=solid];
m24_18 -> m24_13  [key=2, style=dotted];
m24_57 -> m24_58  [key=0, style=solid];
m24_35 -> m24_36  [key=0, style=solid];
m24_35 -> m24_51  [key=1, style=dashed, color=green, label=optionSplitRegressionAlgorithmStatistics];
m24_35 -> m24_13  [key=2, style=dotted];
m24_36 -> m24_37  [key=0, style=solid];
m24_36 -> m24_51  [key=1, style=dashed, color=green, label=optionRenameRegressionAlgorithmStatistics];
m24_36 -> m24_13  [key=2, style=dotted];
m24_37 -> m24_35  [key=0, style=bold, color=blue];
m24_37 -> m24_51  [key=1, style=dashed, color=green, label=optionOpenInterestRegressionAlgorithmStatistics];
m24_37 -> m24_38  [key=0, style=solid];
m24_37 -> m24_13  [key=2, style=dotted];
m24_58 -> m24_59  [key=0, style=solid];
m24_58 -> m24_60  [key=2, style=dotted];
m24_58 -> m24_61  [key=2, style=dotted];
m24_59 -> m24_57  [key=0, style=bold, color=blue];
m24_21 -> m24_22  [key=0, style=solid];
m24_21 -> m24_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
m24_21 -> m24_51  [key=1, style=dashed, color=green, label=basicTemplateOptionsStatistics];
m24_21 -> m24_13  [key=2, style=dotted];
m24_22 -> m24_23  [key=0, style=solid];
m24_22 -> m24_27  [key=0, style=solid];
m24_22 -> m24_51  [key=1, style=dashed, color=green, label=limitFillRegressionStatistics];
m24_22 -> m24_13  [key=2, style=dotted];
m24_23 -> m24_24  [key=0, style=solid];
m24_23 -> m24_27  [key=0, style=solid];
m24_23 -> m24_51  [key=1, style=dashed, color=green, label=updateOrderRegressionStatistics];
m24_23 -> m24_13  [key=2, style=dotted];
m24_27 -> m24_28  [key=0, style=solid];
m24_27 -> m24_29  [key=0, style=solid];
m24_27 -> m24_51  [key=1, style=dashed, color=green, label=addRemoveSecurityRegressionStatistics];
m24_27 -> m24_13  [key=2, style=dotted];
m24_24 -> m24_25  [key=0, style=solid];
m24_24 -> m24_30  [key=2, style=dotted];
m24_24 -> m24_31  [key=2, style=dotted];
m24_24 -> m24_32  [key=2, style=dotted];
m24_24 -> m24_24  [key=1, style=dashed, color=darkseagreen4, label=chain];
m24_24 -> m24_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_24 -> m24_26  [key=1, style=dashed, color=darkseagreen4, label=contract];
m24_24 -> m24_51  [key=1, style=dashed, color=green, label=regressionStatistics];
m24_24 -> m24_13  [key=2, style=dotted];
m24_25 -> m24_26  [key=0, style=solid];
m24_25 -> m24_23  [key=0, style=solid];
m24_25 -> m24_51  [key=1, style=dashed, color=green, label=universeSelectionRegressionStatistics];
m24_25 -> m24_13  [key=2, style=dotted];
m24_26 -> m24_23  [key=0, style=solid];
m24_26 -> m24_33  [key=2, style=dotted];
m24_26 -> m24_51  [key=1, style=dashed, color=green, label=customDataRegressionStatistics];
m24_26 -> m24_27  [key=0, style=solid];
m24_26 -> m24_13  [key=2, style=dotted];
m24_28 -> m24_29  [key=0, style=solid];
m24_28 -> m24_34  [key=2, style=dotted];
m24_28 -> m24_51  [key=1, style=dashed, color=green, label=dropboxBaseDataUniverseSelectionStatistics];
m24_28 -> m24_13  [key=2, style=dotted];
m24_29 -> m24_21  [key=0, style=bold, color=blue];
m24_29 -> m24_51  [key=1, style=dashed, color=green, label=dropboxUniverseSelectionStatistics];
m24_29 -> m24_30  [key=0, style=solid];
m24_29 -> m24_13  [key=2, style=dotted];
m24_54 -> m24_62  [key=0, style=solid];
m24_54 -> m24_63  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m24_54 -> m24_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Language"];
m24_62 -> m24_63  [key=0, style=solid];
m24_63 -> m24_64  [key=0, style=solid];
m24_64 -> m24_65  [key=0, style=solid];
m24_65 -> m24_54  [key=0, style=bold, color=blue];
m24_17 -> m24_18  [key=0, style=solid];
m24_42 -> m24_43  [key=0, style=solid];
m24_42 -> m24_51  [key=1, style=dashed, color=green, label=hourSplitStatistics];
m24_42 -> m24_13  [key=2, style=dotted];
m24_43 -> m24_44  [key=0, style=solid];
m24_43 -> m24_45  [key=2, style=dotted];
m24_43 -> m24_46  [key=2, style=dotted];
m24_43 -> m24_51  [key=1, style=dashed, color=green, label=hourReverseSplitStatistics];
m24_43 -> m24_13  [key=2, style=dotted];
m24_44 -> m24_42  [key=0, style=bold, color=blue];
m24_44 -> m24_51  [key=1, style=dashed, color=green, label=fractionalQuantityRegressionStatistics];
m24_44 -> m24_45  [key=0, style=solid];
m24_44 -> m24_13  [key=2, style=dotted];
m24_19 -> m24_51  [key=1, style=dashed, color=green, label=basicTemplateStatistics];
m24_19 -> m24_20  [key=0, style=solid];
m24_19 -> m24_13  [key=2, style=dotted];
m24_32 -> m24_51  [key=1, style=dashed, color=green, label=coarseFundamentalTop5AlgorithmStatistics];
m24_32 -> m24_33  [key=0, style=solid];
m24_32 -> m24_13  [key=2, style=dotted];
m24_46 -> m24_51  [key=1, style=dashed, color=green, label=basicTemplateCryptoAlgorithmStatistics];
m24_46 -> m24_47  [key=0, style=solid];
m24_46 -> m24_13  [key=2, style=dotted];
m24_30 -> m24_51  [key=1, style=dashed, color=green, label=parameterizedStatistics];
m24_30 -> m24_31  [key=0, style=solid];
m24_30 -> m24_13  [key=2, style=dotted];
m24_38 -> m24_39  [key=0, style=solid];
m24_38 -> m24_51  [key=1, style=dashed, color=green, label=optionChainConsistencyRegressionAlgorithmStatistics];
m24_38 -> m24_13  [key=2, style=dotted];
m24_39 -> m24_40  [key=0, style=solid];
m24_39 -> m24_41  [key=2, style=dotted];
m24_39 -> m24_51  [key=1, style=dashed, color=green, label=weeklyUniverseSelectionRegressionAlgorithmStatistics];
m24_39 -> m24_13  [key=2, style=dotted];
m24_40 -> m24_38  [key=0, style=bold, color=blue];
m24_40 -> m24_51  [key=1, style=dashed, color=green, label=optionExerciseAssignRegressionAlgorithmStatistics];
m24_40 -> m24_41  [key=0, style=solid];
m24_40 -> m24_13  [key=2, style=dotted];
m24_34 -> m24_51  [key=1, style=dashed, color=green, label=macdTrendAlgorithmStatistics];
m24_34 -> m24_35  [key=0, style=solid];
m24_34 -> m24_13  [key=2, style=dotted];
m24_51 -> m24_52  [key=0, style=solid, color=green];
m24_51 -> m24_53  [key=2, style=dotted, color=green];
m24_51 -> m24_54  [key=2, style=dotted, color=green];
m24_51 -> d78  [key=2, style=dotted, color=green];
m24_51 -> m24_56  [key=2, style=dotted, color=green];
m24_51 -> m24_57  [key=1, style=dashed, color=green, label="lambda expression"];
m24_31 -> m24_51  [key=1, style=dashed, color=green, label=historyAlgorithmStatistics];
m24_31 -> m24_32  [key=0, style=solid];
m24_31 -> m24_13  [key=2, style=dotted];
m24_45 -> m24_51  [key=1, style=dashed, color=green, label=basicTemplateFuturesAlgorithmDailyStatistics];
m24_45 -> m24_46  [key=0, style=solid];
m24_45 -> m24_13  [key=2, style=dotted];
m24_47 -> m24_51  [key=1, style=dashed, color=green, label=indicatorSuiteAlgorithmStatistics];
m24_47 -> m24_48  [key=0, style=solid];
m24_47 -> m24_13  [key=2, style=dotted];
m24_47 -> m24_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_47 -> m24_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm"];
m24_48 -> m24_51  [key=1, style=dashed, color=green, label=basicTemplateIntrinioEconomicData];
m24_48 -> m24_49  [key=0, style=solid];
m24_48 -> m24_13  [key=2, style=dotted];
m24_49 -> m24_51  [key=1, style=dashed, color=green, label=volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics];
m24_49 -> m24_50  [key=0, style=solid];
m24_49 -> m24_13  [key=2, style=dotted];
m24_50 -> m24_51  [key=0, style=solid, color=green];
m24_50 -> m24_13  [key=2, style=dotted];
m24_52 -> m24_17  [key=0, style=bold, color=blue];
m24_66 -> m24_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m24_66 -> m24_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m24_66 -> m24_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m25_1 -> m25_2  [key=0, style=solid];
m25_2 -> m25_3  [key=0, style=solid];
m25_3 -> m25_0  [key=0, style=bold, color=blue];
m25_66 -> m25_67  [key=0, style=solid, color=red];
m25_63 -> m25_64  [key=0, style=solid];
m25_64 -> m25_65  [key=0, style=solid];
m25_65 -> m25_63  [key=0, style=bold, color=blue];
m25_67 -> m25_68  [key=0, style=solid, color=red];
m25_68 -> m25_66  [key=0, style=bold, color=blue];
m25_58 -> m25_81  [key=0, style=solid];
m25_58 -> m25_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.RelativeStrengthIndex"];
m25_81 -> m25_82  [key=0, style=solid];
m25_82 -> m25_83  [key=0, style=solid];
m25_83 -> m25_84  [key=0, style=solid];
m25_84 -> m25_58  [key=0, style=bold, color=blue];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_21  [key=2, style=dotted];
m25_5 -> m25_15  [key=1, style=dashed, color=red, label=insights];
m25_5 -> m25_17  [key=1, style=dashed, color=red, label=insights];
m25_5 -> m25_19  [key=1, style=dashed, color=darkseagreen4, label=insights];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_19  [key=0, style=solid];
m25_15 -> m25_18  [key=0, style=solid, color=red];
m25_15 -> m25_25  [key=2, style=dotted, color=red];
m25_15 -> m25_26  [key=2, style=dotted, color=red];
m25_17 -> m25_18  [key=0, style=solid, color=red];
m25_17 -> m25_25  [key=2, style=dotted, color=red];
m25_17 -> m25_26  [key=2, style=dotted, color=red];
m25_19 -> m25_20  [key=0, style=solid];
m25_7 -> m25_8  [key=0, style=solid];
m25_7 -> m25_7  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m25_7 -> m25_15  [key=1, style=dashed, color=red, label=symbol];
m25_7 -> m25_17  [key=1, style=dashed, color=red, label=symbol];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_8  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m25_8 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label=rsi];
m25_8 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=rsi];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m25_9 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=previousState];
m25_9 -> m25_18  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_22  [key=2, style=dotted];
m25_10 -> m25_13  [key=1, style=dashed, color=darkseagreen4, label=state];
m25_10 -> m25_18  [key=1, style=dashed, color=darkseagreen4, label=state];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_18  [key=0, style=solid];
m25_18 -> m25_6  [key=0, style=solid];
m25_18 -> m25_18  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_16  [key=0, style=solid];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_23  [key=2, style=dotted];
m25_12 -> m25_24  [key=2, style=dotted];
m25_12 -> m25_15  [key=1, style=dashed, color=red, label=insightPeriod];
m25_12 -> m25_17  [key=1, style=dashed, color=red, label=insightPeriod];
m25_14 -> m25_15  [key=0, style=solid, color=red];
m25_16 -> m25_17  [key=0, style=solid, color=red];
m25_20 -> m25_4  [key=0, style=bold, color=blue];
m25_27 -> m25_28  [key=0, style=solid];
m25_27 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m25_27 -> m25_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m25_27 -> m25_34  [key=1, style=dashed, color=red, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m25_27 -> m25_36  [key=1, style=dashed, color=red, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m25_27 -> m25_38  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m25_27 -> m25_42  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m25_28 -> m25_29  [key=0, style=solid];
m25_28 -> m25_34  [key=0, style=solid, color=red];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_52  [key=2, style=dotted];
m25_29 -> m25_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_29 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=removed];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_34  [key=0, style=solid, color=red];
m25_30 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m25_30 -> m25_33  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m25_34 -> m25_35  [key=0, style=solid, color=red];
m25_34 -> m25_51  [key=0, style=solid, color=red];
m25_36 -> m25_37  [key=0, style=solid, color=red];
m25_36 -> m25_42  [key=0, style=solid, color=red];
m25_36 -> m25_38  [key=1, style=dashed, color=red, label=added];
m25_36 -> m25_39  [key=1, style=dashed, color=red, label=added];
m25_36 -> m25_40  [key=1, style=dashed, color=red, label=added];
m25_38 -> m25_39  [key=0, style=solid, color=red];
m25_38 -> m25_57  [key=2, style=dotted, color=red];
m25_42 -> m25_43  [key=0, style=solid, color=red];
m25_42 -> d78  [key=2, style=dotted, color=red];
m25_42 -> m25_60  [key=2, style=dotted, color=red];
m25_42 -> m25_66  [key=1, style=dashed, color=red, label="lambda expression"];
m25_31 -> m25_32  [key=0, style=solid];
m25_31 -> m25_30  [key=0, style=solid];
m25_31 -> m25_53  [key=2, style=dotted];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_54  [key=2, style=dotted];
m25_33 -> m25_30  [key=0, style=solid];
m25_33 -> m25_55  [key=2, style=dotted];
m25_35 -> m25_36  [key=0, style=solid, color=red];
m25_35 -> m25_21  [key=2, style=dotted, color=red];
m25_35 -> m25_41  [key=1, style=dashed, color=red, label=newSymbolData];
m25_35 -> m25_42  [key=1, style=dashed, color=red, label=newSymbolData];
m25_41 -> m25_36  [key=0, style=solid, color=red];
m25_41 -> m25_26  [key=2, style=dotted, color=red];
m25_37 -> m25_38  [key=0, style=solid, color=red];
m25_37 -> m25_36  [key=0, style=solid, color=red];
m25_37 -> m25_56  [key=2, style=dotted, color=red];
m25_39 -> m25_40  [key=0, style=solid, color=red];
m25_39 -> m25_58  [key=2, style=dotted, color=red];
m25_39 -> m25_41  [key=1, style=dashed, color=red, label=symbolData];
m25_40 -> m25_41  [key=0, style=solid, color=red];
m25_43 -> m25_44  [key=0, style=solid, color=red];
m25_43 -> m25_51  [key=0, style=solid, color=red];
m25_43 -> m25_45  [key=1, style=dashed, color=red, label=slice];
m25_44 -> m25_45  [key=0, style=solid, color=red];
m25_44 -> m25_43  [key=0, style=solid, color=red];
m25_44 -> m25_49  [key=1, style=dashed, color=red, label=symbol];
m25_45 -> m25_46  [key=0, style=solid, color=red];
m25_45 -> m25_47  [key=1, style=dashed, color=red, label=value];
m25_49 -> m25_50  [key=0, style=solid, color=red];
m25_49 -> m25_44  [key=0, style=solid, color=red];
m25_49 -> m25_61  [key=2, style=dotted, color=red];
m25_46 -> m25_47  [key=0, style=solid, color=red];
m25_47 -> m25_48  [key=0, style=solid, color=red];
m25_47 -> m25_50  [key=1, style=dashed, color=red, label=data];
m25_48 -> m25_49  [key=0, style=solid, color=red];
m25_50 -> m25_44  [key=0, style=solid, color=red];
m25_50 -> m25_62  [key=2, style=dotted];
m25_51 -> m25_27  [key=0, style=bold, color=blue];
m25_22 -> m25_69  [key=0, style=solid];
m25_22 -> m25_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.RelativeStrengthIndex"];
m25_22 -> m25_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State"];
m25_22 -> m25_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.RelativeStrengthIndex"];
m25_22 -> m25_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State"];
m25_22 -> m25_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.RelativeStrengthIndex"];
m25_22 -> m25_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State"];
m25_22 -> m25_8  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.RelativeStrengthIndex rsi"];
m25_22 -> m25_9  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State previous"];
m25_22 -> m25_38  [key=3, color=red, style=bold, label="method methodReturn QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State GetState"];
m25_22 -> m25_72  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State GetState"];
m25_22 -> m25_75  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State GetState"];
m25_22 -> m25_22  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State GetState"];
m25_69 -> m25_70  [key=0, style=solid];
m25_69 -> m25_71  [key=0, style=solid];
m25_71 -> m25_72  [key=0, style=solid];
m25_71 -> m25_73  [key=0, style=solid];
m25_73 -> m25_74  [key=0, style=solid];
m25_73 -> m25_76  [key=0, style=solid];
m25_74 -> m25_75  [key=0, style=solid];
m25_74 -> m25_76  [key=0, style=solid];
m25_76 -> m25_77  [key=0, style=solid];
m25_76 -> m25_79  [key=0, style=solid];
m25_77 -> m25_78  [key=0, style=solid];
m25_77 -> m25_79  [key=0, style=solid];
m25_79 -> m25_80  [key=0, style=solid];
m25_70 -> m25_80  [key=0, style=solid];
m25_72 -> m25_80  [key=0, style=solid];
m25_75 -> m25_80  [key=0, style=solid];
m25_78 -> m25_80  [key=0, style=solid];
m25_80 -> m25_22  [key=0, style=bold, color=blue];
m25_85 -> m25_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel"];
m25_85 -> m25_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel"];
m25_85 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel"];
m25_85 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel"];
m25_85 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel"];
m25_85 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel"];
m25_85 -> m25_37  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel"];
m25_85 -> m25_38  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel"];
m25_85 -> m25_40  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel"];
m25_85 -> m25_42  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel"];
m25_85 -> m25_49  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel"];
m25_86 -> m25_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData"];
m25_86 -> m25_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData"];
m25_86 -> m25_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData"];
m26_447 -> m26_448  [key=0, style=solid];
m26_447 -> m26_449  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_448 -> m26_449  [key=0, style=solid];
m26_449 -> m26_450  [key=0, style=solid];
m26_449 -> m26_7  [key=2, style=dotted];
m26_449 -> m26_451  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_449 -> m26_452  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_449 -> m26_453  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_449 -> m26_454  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_449 -> m26_455  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_450 -> m26_451  [key=0, style=solid];
m26_450 -> m26_8  [key=2, style=dotted];
m26_451 -> m26_452  [key=0, style=solid];
m26_451 -> m26_55  [key=2, style=dotted];
m26_452 -> m26_453  [key=0, style=solid];
m26_452 -> m26_56  [key=2, style=dotted];
m26_453 -> m26_454  [key=0, style=solid];
m26_453 -> m26_8  [key=2, style=dotted];
m26_454 -> m26_455  [key=0, style=solid];
m26_454 -> m26_10  [key=2, style=dotted];
m26_455 -> m26_456  [key=0, style=solid];
m26_455 -> m26_9  [key=2, style=dotted];
m26_456 -> m26_457  [key=0, style=solid];
m26_456 -> m26_10  [key=2, style=dotted];
m26_457 -> m26_447  [key=0, style=bold, color=blue];
m26_437 -> m26_438  [key=0, style=solid];
m26_437 -> m26_439  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_438 -> m26_439  [key=0, style=solid];
m26_439 -> m26_440  [key=0, style=solid];
m26_439 -> m26_7  [key=2, style=dotted];
m26_439 -> m26_441  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_439 -> m26_442  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_439 -> m26_443  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_439 -> m26_444  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_440 -> m26_441  [key=0, style=solid];
m26_440 -> m26_8  [key=2, style=dotted];
m26_441 -> m26_442  [key=0, style=solid];
m26_441 -> m26_55  [key=2, style=dotted];
m26_442 -> m26_443  [key=0, style=solid];
m26_442 -> m26_56  [key=2, style=dotted];
m26_443 -> m26_444  [key=0, style=solid];
m26_443 -> m26_8  [key=2, style=dotted];
m26_444 -> m26_445  [key=0, style=solid];
m26_444 -> m26_9  [key=2, style=dotted];
m26_445 -> m26_446  [key=0, style=solid];
m26_445 -> m26_10  [key=2, style=dotted];
m26_446 -> m26_437  [key=0, style=bold, color=blue];
m26_346 -> m26_347  [key=0, style=solid];
m26_346 -> m26_348  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_347 -> m26_348  [key=0, style=solid];
m26_348 -> m26_349  [key=0, style=solid];
m26_348 -> m26_7  [key=2, style=dotted];
m26_348 -> m26_350  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_348 -> m26_351  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_348 -> m26_352  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_348 -> m26_353  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_349 -> m26_350  [key=0, style=solid];
m26_349 -> m26_8  [key=2, style=dotted];
m26_350 -> m26_351  [key=0, style=solid];
m26_350 -> m26_55  [key=2, style=dotted];
m26_351 -> m26_352  [key=0, style=solid];
m26_351 -> m26_56  [key=2, style=dotted];
m26_352 -> m26_353  [key=0, style=solid];
m26_352 -> m26_8  [key=2, style=dotted];
m26_353 -> m26_354  [key=0, style=solid];
m26_353 -> m26_9  [key=2, style=dotted];
m26_354 -> m26_355  [key=0, style=solid];
m26_354 -> m26_10  [key=2, style=dotted];
m26_355 -> m26_346  [key=0, style=bold, color=blue];
m26_426 -> m26_427  [key=0, style=solid];
m26_426 -> m26_428  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_427 -> m26_428  [key=0, style=solid];
m26_428 -> m26_429  [key=0, style=solid];
m26_428 -> m26_7  [key=2, style=dotted];
m26_428 -> m26_430  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_428 -> m26_431  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_428 -> m26_432  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_428 -> m26_433  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_428 -> m26_434  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_429 -> m26_430  [key=0, style=solid];
m26_429 -> m26_8  [key=2, style=dotted];
m26_430 -> m26_431  [key=0, style=solid];
m26_430 -> m26_55  [key=2, style=dotted];
m26_431 -> m26_432  [key=0, style=solid];
m26_431 -> m26_56  [key=2, style=dotted];
m26_432 -> m26_433  [key=0, style=solid];
m26_432 -> m26_8  [key=2, style=dotted];
m26_433 -> m26_434  [key=0, style=solid];
m26_433 -> m26_10  [key=2, style=dotted];
m26_434 -> m26_435  [key=0, style=solid];
m26_434 -> m26_9  [key=2, style=dotted];
m26_435 -> m26_436  [key=0, style=solid];
m26_435 -> m26_10  [key=2, style=dotted];
m26_436 -> m26_426  [key=0, style=bold, color=blue];
m26_237 -> m26_238  [key=0, style=solid];
m26_237 -> m26_239  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_238 -> m26_239  [key=0, style=solid];
m26_239 -> m26_240  [key=0, style=solid];
m26_239 -> m26_7  [key=2, style=dotted];
m26_239 -> m26_241  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_239 -> m26_242  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_239 -> m26_243  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_240 -> m26_241  [key=0, style=solid];
m26_240 -> m26_8  [key=2, style=dotted];
m26_241 -> m26_242  [key=0, style=solid];
m26_241 -> m26_55  [key=2, style=dotted];
m26_242 -> m26_243  [key=0, style=solid];
m26_242 -> m26_56  [key=2, style=dotted];
m26_243 -> m26_244  [key=0, style=solid];
m26_243 -> m26_9  [key=2, style=dotted];
m26_244 -> m26_245  [key=0, style=solid];
m26_244 -> m26_10  [key=2, style=dotted];
m26_245 -> m26_237  [key=0, style=bold, color=blue];
m26_147 -> m26_148  [key=0, style=solid];
m26_147 -> m26_149  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_148 -> m26_149  [key=0, style=solid];
m26_149 -> m26_150  [key=0, style=solid];
m26_149 -> m26_7  [key=2, style=dotted];
m26_149 -> m26_151  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_149 -> m26_152  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_149 -> m26_153  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_150 -> m26_151  [key=0, style=solid];
m26_150 -> m26_8  [key=2, style=dotted];
m26_151 -> m26_152  [key=0, style=solid];
m26_151 -> m26_55  [key=2, style=dotted];
m26_152 -> m26_153  [key=0, style=solid];
m26_152 -> m26_56  [key=2, style=dotted];
m26_153 -> m26_154  [key=0, style=solid];
m26_153 -> m26_9  [key=2, style=dotted];
m26_154 -> m26_155  [key=0, style=solid];
m26_154 -> m26_10  [key=2, style=dotted];
m26_155 -> m26_147  [key=0, style=bold, color=blue];
m26_416 -> m26_417  [key=0, style=solid];
m26_416 -> m26_418  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_417 -> m26_418  [key=0, style=solid];
m26_418 -> m26_419  [key=0, style=solid];
m26_418 -> m26_7  [key=2, style=dotted];
m26_418 -> m26_420  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_418 -> m26_421  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_418 -> m26_422  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_418 -> m26_423  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_419 -> m26_420  [key=0, style=solid];
m26_419 -> m26_8  [key=2, style=dotted];
m26_420 -> m26_421  [key=0, style=solid];
m26_420 -> m26_55  [key=2, style=dotted];
m26_421 -> m26_422  [key=0, style=solid];
m26_421 -> m26_56  [key=2, style=dotted];
m26_422 -> m26_423  [key=0, style=solid];
m26_422 -> m26_8  [key=2, style=dotted];
m26_423 -> m26_424  [key=0, style=solid];
m26_423 -> m26_9  [key=2, style=dotted];
m26_424 -> m26_425  [key=0, style=solid];
m26_424 -> m26_10  [key=2, style=dotted];
m26_425 -> m26_416  [key=0, style=bold, color=blue];
m26_356 -> m26_357  [key=0, style=solid];
m26_356 -> m26_358  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_357 -> m26_358  [key=0, style=solid];
m26_358 -> m26_359  [key=0, style=solid];
m26_358 -> m26_7  [key=2, style=dotted];
m26_358 -> m26_360  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_358 -> m26_361  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_358 -> m26_362  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_358 -> m26_363  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_359 -> m26_360  [key=0, style=solid];
m26_359 -> m26_8  [key=2, style=dotted];
m26_360 -> m26_361  [key=0, style=solid];
m26_360 -> m26_55  [key=2, style=dotted];
m26_361 -> m26_362  [key=0, style=solid];
m26_361 -> m26_56  [key=2, style=dotted];
m26_362 -> m26_363  [key=0, style=solid];
m26_362 -> m26_8  [key=2, style=dotted];
m26_363 -> m26_364  [key=0, style=solid];
m26_363 -> m26_9  [key=2, style=dotted];
m26_364 -> m26_365  [key=0, style=solid];
m26_364 -> m26_10  [key=2, style=dotted];
m26_365 -> m26_356  [key=0, style=bold, color=blue];
m26_102 -> m26_103  [key=0, style=solid];
m26_102 -> m26_104  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_103 -> m26_104  [key=0, style=solid];
m26_104 -> m26_105  [key=0, style=solid];
m26_104 -> m26_7  [key=2, style=dotted];
m26_104 -> m26_106  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_104 -> m26_107  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_104 -> m26_108  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_105 -> m26_106  [key=0, style=solid];
m26_105 -> m26_8  [key=2, style=dotted];
m26_106 -> m26_107  [key=0, style=solid];
m26_106 -> m26_55  [key=2, style=dotted];
m26_107 -> m26_108  [key=0, style=solid];
m26_107 -> m26_56  [key=2, style=dotted];
m26_108 -> m26_109  [key=0, style=solid];
m26_108 -> m26_9  [key=2, style=dotted];
m26_109 -> m26_110  [key=0, style=solid];
m26_109 -> m26_10  [key=2, style=dotted];
m26_110 -> m26_102  [key=0, style=bold, color=blue];
m26_219 -> m26_220  [key=0, style=solid];
m26_219 -> m26_221  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_220 -> m26_221  [key=0, style=solid];
m26_221 -> m26_222  [key=0, style=solid];
m26_221 -> m26_7  [key=2, style=dotted];
m26_221 -> m26_223  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_221 -> m26_224  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_221 -> m26_225  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_222 -> m26_223  [key=0, style=solid];
m26_222 -> m26_8  [key=2, style=dotted];
m26_223 -> m26_224  [key=0, style=solid];
m26_223 -> m26_55  [key=2, style=dotted];
m26_224 -> m26_225  [key=0, style=solid];
m26_224 -> m26_56  [key=2, style=dotted];
m26_225 -> m26_226  [key=0, style=solid];
m26_225 -> m26_9  [key=2, style=dotted];
m26_226 -> m26_227  [key=0, style=solid];
m26_226 -> m26_10  [key=2, style=dotted];
m26_227 -> m26_219  [key=0, style=bold, color=blue];
m26_406 -> m26_407  [key=0, style=solid];
m26_406 -> m26_408  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_407 -> m26_408  [key=0, style=solid];
m26_408 -> m26_409  [key=0, style=solid];
m26_408 -> m26_7  [key=2, style=dotted];
m26_408 -> m26_410  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_408 -> m26_411  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_408 -> m26_412  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_408 -> m26_413  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_409 -> m26_410  [key=0, style=solid];
m26_409 -> m26_8  [key=2, style=dotted];
m26_410 -> m26_411  [key=0, style=solid];
m26_410 -> m26_55  [key=2, style=dotted];
m26_411 -> m26_412  [key=0, style=solid];
m26_411 -> m26_56  [key=2, style=dotted];
m26_412 -> m26_413  [key=0, style=solid];
m26_412 -> m26_8  [key=2, style=dotted];
m26_413 -> m26_414  [key=0, style=solid];
m26_413 -> m26_9  [key=2, style=dotted];
m26_414 -> m26_415  [key=0, style=solid];
m26_414 -> m26_10  [key=2, style=dotted];
m26_415 -> m26_406  [key=0, style=bold, color=blue];
m26_396 -> m26_397  [key=0, style=solid];
m26_396 -> m26_398  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_397 -> m26_398  [key=0, style=solid];
m26_398 -> m26_399  [key=0, style=solid];
m26_398 -> m26_7  [key=2, style=dotted];
m26_398 -> m26_400  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_398 -> m26_401  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_398 -> m26_402  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_398 -> m26_403  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_399 -> m26_400  [key=0, style=solid];
m26_399 -> m26_8  [key=2, style=dotted];
m26_400 -> m26_401  [key=0, style=solid];
m26_400 -> m26_55  [key=2, style=dotted];
m26_401 -> m26_402  [key=0, style=solid];
m26_401 -> m26_56  [key=2, style=dotted];
m26_402 -> m26_403  [key=0, style=solid];
m26_402 -> m26_8  [key=2, style=dotted];
m26_403 -> m26_404  [key=0, style=solid];
m26_403 -> m26_9  [key=2, style=dotted];
m26_404 -> m26_405  [key=0, style=solid];
m26_404 -> m26_10  [key=2, style=dotted];
m26_405 -> m26_396  [key=0, style=bold, color=blue];
m26_301 -> m26_302  [key=0, style=solid];
m26_301 -> m26_303  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_302 -> m26_303  [key=0, style=solid];
m26_303 -> m26_304  [key=0, style=solid];
m26_303 -> m26_273  [key=2, style=dotted];
m26_303 -> m26_305  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_303 -> m26_306  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_303 -> m26_307  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_304 -> m26_305  [key=0, style=solid];
m26_304 -> m26_8  [key=2, style=dotted];
m26_305 -> m26_306  [key=0, style=solid];
m26_305 -> m26_55  [key=2, style=dotted];
m26_306 -> m26_307  [key=0, style=solid];
m26_306 -> m26_56  [key=2, style=dotted];
m26_307 -> m26_308  [key=0, style=solid];
m26_307 -> m26_9  [key=2, style=dotted];
m26_308 -> m26_309  [key=0, style=solid];
m26_308 -> m26_10  [key=2, style=dotted];
m26_309 -> m26_301  [key=0, style=bold, color=blue];
m26_246 -> m26_247  [key=0, style=solid];
m26_246 -> m26_248  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_247 -> m26_248  [key=0, style=solid];
m26_248 -> m26_249  [key=0, style=solid];
m26_248 -> m26_7  [key=2, style=dotted];
m26_248 -> m26_250  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_248 -> m26_251  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_248 -> m26_252  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_249 -> m26_250  [key=0, style=solid];
m26_249 -> m26_8  [key=2, style=dotted];
m26_250 -> m26_251  [key=0, style=solid];
m26_250 -> m26_55  [key=2, style=dotted];
m26_251 -> m26_252  [key=0, style=solid];
m26_251 -> m26_56  [key=2, style=dotted];
m26_252 -> m26_253  [key=0, style=solid];
m26_252 -> m26_9  [key=2, style=dotted];
m26_253 -> m26_254  [key=0, style=solid];
m26_253 -> m26_10  [key=2, style=dotted];
m26_254 -> m26_246  [key=0, style=bold, color=blue];
m26_8 -> m26_615  [key=0, style=solid];
m26_615 -> m26_616  [key=0, style=solid];
m26_615 -> m26_617  [key=2, style=dotted];
m26_615 -> m26_618  [key=2, style=dotted];
m26_616 -> m26_8  [key=0, style=bold, color=blue];
m26_32 -> m26_33  [key=0, style=solid];
m26_32 -> m26_34  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_33 -> m26_34  [key=0, style=solid];
m26_34 -> m26_35  [key=0, style=solid];
m26_34 -> m26_7  [key=2, style=dotted];
m26_34 -> m26_36  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_35 -> m26_36  [key=0, style=solid];
m26_35 -> m26_8  [key=2, style=dotted];
m26_36 -> m26_37  [key=0, style=solid];
m26_36 -> m26_9  [key=2, style=dotted];
m26_37 -> m26_38  [key=0, style=solid];
m26_37 -> m26_10  [key=2, style=dotted];
m26_38 -> m26_32  [key=0, style=bold, color=blue];
m26_292 -> m26_293  [key=0, style=solid];
m26_292 -> m26_294  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_293 -> m26_294  [key=0, style=solid];
m26_294 -> m26_295  [key=0, style=solid];
m26_294 -> m26_273  [key=2, style=dotted];
m26_294 -> m26_296  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_294 -> m26_297  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_294 -> m26_298  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_295 -> m26_296  [key=0, style=solid];
m26_295 -> m26_8  [key=2, style=dotted];
m26_296 -> m26_297  [key=0, style=solid];
m26_296 -> m26_55  [key=2, style=dotted];
m26_297 -> m26_298  [key=0, style=solid];
m26_297 -> m26_56  [key=2, style=dotted];
m26_298 -> m26_299  [key=0, style=solid];
m26_298 -> m26_9  [key=2, style=dotted];
m26_299 -> m26_300  [key=0, style=solid];
m26_299 -> m26_10  [key=2, style=dotted];
m26_300 -> m26_292  [key=0, style=bold, color=blue];
m26_319 -> m26_320  [key=0, style=solid];
m26_319 -> m26_321  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_320 -> m26_321  [key=0, style=solid];
m26_321 -> m26_322  [key=0, style=solid];
m26_321 -> m26_273  [key=2, style=dotted];
m26_321 -> m26_323  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_321 -> m26_324  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_321 -> m26_325  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_322 -> m26_323  [key=0, style=solid];
m26_322 -> m26_8  [key=2, style=dotted];
m26_323 -> m26_324  [key=0, style=solid];
m26_323 -> m26_55  [key=2, style=dotted];
m26_324 -> m26_325  [key=0, style=solid];
m26_324 -> m26_56  [key=2, style=dotted];
m26_325 -> m26_326  [key=0, style=solid];
m26_325 -> m26_9  [key=2, style=dotted];
m26_326 -> m26_327  [key=0, style=solid];
m26_326 -> m26_10  [key=2, style=dotted];
m26_327 -> m26_319  [key=0, style=bold, color=blue];
m26_210 -> m26_211  [key=0, style=solid];
m26_210 -> m26_212  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_211 -> m26_212  [key=0, style=solid];
m26_212 -> m26_213  [key=0, style=solid];
m26_212 -> m26_7  [key=2, style=dotted];
m26_212 -> m26_214  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_212 -> m26_215  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_212 -> m26_216  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_213 -> m26_214  [key=0, style=solid];
m26_213 -> m26_8  [key=2, style=dotted];
m26_214 -> m26_215  [key=0, style=solid];
m26_214 -> m26_55  [key=2, style=dotted];
m26_215 -> m26_216  [key=0, style=solid];
m26_215 -> m26_56  [key=2, style=dotted];
m26_216 -> m26_217  [key=0, style=solid];
m26_216 -> m26_9  [key=2, style=dotted];
m26_217 -> m26_218  [key=0, style=solid];
m26_217 -> m26_10  [key=2, style=dotted];
m26_218 -> m26_210  [key=0, style=bold, color=blue];
m26_310 -> m26_311  [key=0, style=solid];
m26_310 -> m26_312  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_311 -> m26_312  [key=0, style=solid];
m26_312 -> m26_313  [key=0, style=solid];
m26_312 -> m26_273  [key=2, style=dotted];
m26_312 -> m26_314  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_312 -> m26_315  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_312 -> m26_316  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_313 -> m26_314  [key=0, style=solid];
m26_313 -> m26_8  [key=2, style=dotted];
m26_314 -> m26_315  [key=0, style=solid];
m26_314 -> m26_55  [key=2, style=dotted];
m26_315 -> m26_316  [key=0, style=solid];
m26_315 -> m26_56  [key=2, style=dotted];
m26_316 -> m26_317  [key=0, style=solid];
m26_316 -> m26_9  [key=2, style=dotted];
m26_317 -> m26_318  [key=0, style=solid];
m26_317 -> m26_10  [key=2, style=dotted];
m26_318 -> m26_310  [key=0, style=bold, color=blue];
m26_592 -> m26_593  [key=0, style=solid];
m26_593 -> m26_594  [key=0, style=solid];
m26_593 -> m26_595  [key=2, style=dotted];
m26_593 -> m26_596  [key=2, style=dotted];
m26_594 -> m26_592  [key=0, style=bold, color=blue];
m26_468 -> m26_469  [key=0, style=solid];
m26_469 -> m26_470  [key=0, style=solid];
m26_469 -> m26_479  [key=2, style=dotted];
m26_469 -> m26_471  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_469 -> m26_472  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_469 -> m26_473  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_469 -> m26_474  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_469 -> m26_476  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_470 -> m26_471  [key=0, style=solid];
m26_470 -> m26_480  [key=2, style=dotted];
m26_471 -> m26_472  [key=0, style=solid];
m26_471 -> m26_481  [key=2, style=dotted];
m26_472 -> m26_473  [key=0, style=solid];
m26_472 -> m26_482  [key=2, style=dotted];
m26_473 -> m26_474  [key=0, style=solid];
m26_473 -> m26_483  [key=2, style=dotted];
m26_474 -> m26_475  [key=0, style=solid];
m26_476 -> m26_477  [key=0, style=solid];
m26_476 -> m26_9  [key=2, style=dotted];
m26_475 -> m26_476  [key=0, style=solid];
m26_475 -> m26_8  [key=2, style=dotted];
m26_477 -> m26_478  [key=0, style=solid];
m26_477 -> m26_10  [key=2, style=dotted];
m26_478 -> m26_468  [key=0, style=bold, color=blue];
m26_120 -> m26_121  [key=0, style=solid];
m26_120 -> m26_122  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_121 -> m26_122  [key=0, style=solid];
m26_122 -> m26_123  [key=0, style=solid];
m26_122 -> m26_7  [key=2, style=dotted];
m26_122 -> m26_124  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_122 -> m26_125  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_122 -> m26_126  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_123 -> m26_124  [key=0, style=solid];
m26_123 -> m26_8  [key=2, style=dotted];
m26_124 -> m26_125  [key=0, style=solid];
m26_124 -> m26_55  [key=2, style=dotted];
m26_125 -> m26_126  [key=0, style=solid];
m26_125 -> m26_56  [key=2, style=dotted];
m26_126 -> m26_127  [key=0, style=solid];
m26_126 -> m26_9  [key=2, style=dotted];
m26_127 -> m26_128  [key=0, style=solid];
m26_127 -> m26_10  [key=2, style=dotted];
m26_128 -> m26_120  [key=0, style=bold, color=blue];
m26_93 -> m26_94  [key=0, style=solid];
m26_93 -> m26_95  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_94 -> m26_95  [key=0, style=solid];
m26_95 -> m26_96  [key=0, style=solid];
m26_95 -> m26_7  [key=2, style=dotted];
m26_95 -> m26_97  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_95 -> m26_98  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_95 -> m26_99  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_96 -> m26_97  [key=0, style=solid];
m26_96 -> m26_8  [key=2, style=dotted];
m26_97 -> m26_98  [key=0, style=solid];
m26_97 -> m26_55  [key=2, style=dotted];
m26_98 -> m26_99  [key=0, style=solid];
m26_98 -> m26_56  [key=2, style=dotted];
m26_99 -> m26_100  [key=0, style=solid];
m26_99 -> m26_9  [key=2, style=dotted];
m26_100 -> m26_101  [key=0, style=solid];
m26_100 -> m26_10  [key=2, style=dotted];
m26_101 -> m26_93  [key=0, style=bold, color=blue];
m26_138 -> m26_139  [key=0, style=solid];
m26_138 -> m26_140  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_139 -> m26_140  [key=0, style=solid];
m26_140 -> m26_141  [key=0, style=solid];
m26_140 -> m26_7  [key=2, style=dotted];
m26_140 -> m26_142  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_140 -> m26_143  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_140 -> m26_144  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_141 -> m26_142  [key=0, style=solid];
m26_141 -> m26_8  [key=2, style=dotted];
m26_142 -> m26_143  [key=0, style=solid];
m26_142 -> m26_55  [key=2, style=dotted];
m26_143 -> m26_144  [key=0, style=solid];
m26_143 -> m26_56  [key=2, style=dotted];
m26_144 -> m26_145  [key=0, style=solid];
m26_144 -> m26_9  [key=2, style=dotted];
m26_145 -> m26_146  [key=0, style=solid];
m26_145 -> m26_10  [key=2, style=dotted];
m26_146 -> m26_138  [key=0, style=bold, color=blue];
m26_66 -> m26_67  [key=0, style=solid];
m26_66 -> m26_68  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_67 -> m26_68  [key=0, style=solid];
m26_68 -> m26_69  [key=0, style=solid];
m26_68 -> m26_7  [key=2, style=dotted];
m26_68 -> m26_70  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_68 -> m26_71  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_68 -> m26_72  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_69 -> m26_70  [key=0, style=solid];
m26_69 -> m26_8  [key=2, style=dotted];
m26_70 -> m26_71  [key=0, style=solid];
m26_70 -> m26_55  [key=2, style=dotted];
m26_71 -> m26_72  [key=0, style=solid];
m26_71 -> m26_56  [key=2, style=dotted];
m26_72 -> m26_73  [key=0, style=solid];
m26_72 -> m26_9  [key=2, style=dotted];
m26_73 -> m26_74  [key=0, style=solid];
m26_73 -> m26_10  [key=2, style=dotted];
m26_74 -> m26_66  [key=0, style=bold, color=blue];
m26_495 -> m26_496  [key=0, style=solid];
m26_496 -> m26_497  [key=0, style=solid];
m26_496 -> m26_479  [key=2, style=dotted];
m26_496 -> m26_498  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_496 -> m26_499  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_496 -> m26_500  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_496 -> m26_501  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_496 -> m26_503  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_497 -> m26_498  [key=0, style=solid];
m26_497 -> m26_480  [key=2, style=dotted];
m26_498 -> m26_499  [key=0, style=solid];
m26_498 -> m26_481  [key=2, style=dotted];
m26_499 -> m26_500  [key=0, style=solid];
m26_499 -> m26_482  [key=2, style=dotted];
m26_500 -> m26_501  [key=0, style=solid];
m26_500 -> m26_483  [key=2, style=dotted];
m26_501 -> m26_502  [key=0, style=solid];
m26_503 -> m26_504  [key=0, style=solid];
m26_503 -> m26_9  [key=2, style=dotted];
m26_502 -> m26_503  [key=0, style=solid];
m26_502 -> m26_8  [key=2, style=dotted];
m26_504 -> m26_505  [key=0, style=solid];
m26_504 -> m26_10  [key=2, style=dotted];
m26_505 -> m26_495  [key=0, style=bold, color=blue];
m26_129 -> m26_130  [key=0, style=solid];
m26_129 -> m26_131  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_130 -> m26_131  [key=0, style=solid];
m26_131 -> m26_132  [key=0, style=solid];
m26_131 -> m26_7  [key=2, style=dotted];
m26_131 -> m26_133  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_131 -> m26_134  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_131 -> m26_135  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_132 -> m26_133  [key=0, style=solid];
m26_132 -> m26_8  [key=2, style=dotted];
m26_133 -> m26_134  [key=0, style=solid];
m26_133 -> m26_55  [key=2, style=dotted];
m26_134 -> m26_135  [key=0, style=solid];
m26_134 -> m26_56  [key=2, style=dotted];
m26_135 -> m26_136  [key=0, style=solid];
m26_135 -> m26_9  [key=2, style=dotted];
m26_136 -> m26_137  [key=0, style=solid];
m26_136 -> m26_10  [key=2, style=dotted];
m26_137 -> m26_129  [key=0, style=bold, color=blue];
m26_458 -> m26_459  [key=0, style=solid];
m26_458 -> m26_460  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_459 -> m26_460  [key=0, style=solid];
m26_460 -> m26_461  [key=0, style=solid];
m26_460 -> m26_7  [key=2, style=dotted];
m26_460 -> m26_462  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_460 -> m26_463  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_460 -> m26_464  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_460 -> m26_465  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_461 -> m26_462  [key=0, style=solid];
m26_461 -> m26_8  [key=2, style=dotted];
m26_462 -> m26_463  [key=0, style=solid];
m26_462 -> m26_55  [key=2, style=dotted];
m26_463 -> m26_464  [key=0, style=solid];
m26_463 -> m26_56  [key=2, style=dotted];
m26_464 -> m26_465  [key=0, style=solid];
m26_464 -> m26_8  [key=2, style=dotted];
m26_465 -> m26_466  [key=0, style=solid];
m26_465 -> m26_9  [key=2, style=dotted];
m26_466 -> m26_467  [key=0, style=solid];
m26_466 -> m26_10  [key=2, style=dotted];
m26_467 -> m26_458  [key=0, style=bold, color=blue];
m26_506 -> m26_507  [key=0, style=solid];
m26_507 -> m26_508  [key=0, style=solid];
m26_508 -> m26_509  [key=0, style=solid];
m26_508 -> m26_7  [key=2, style=dotted];
m26_508 -> m26_510  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_514  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_515  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_516  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_517  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_518  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_519  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_520  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_521  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_522  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_523  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_524  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_525  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_526  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_527  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_528  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_529  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_530  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_531  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_532  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_533  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_534  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_535  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_536  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_537  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_538  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_539  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_540  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_541  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_542  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_543  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_544  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_545  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_546  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_547  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_548  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_549  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_508 -> m26_551  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_509 -> m26_510  [key=0, style=solid];
m26_509 -> m26_8  [key=2, style=dotted];
m26_510 -> m26_511  [key=0, style=solid];
m26_510 -> m26_55  [key=2, style=dotted];
m26_514 -> m26_515  [key=0, style=solid];
m26_514 -> m26_558  [key=2, style=dotted];
m26_515 -> m26_516  [key=0, style=solid];
m26_515 -> m26_559  [key=2, style=dotted];
m26_516 -> m26_517  [key=0, style=solid];
m26_516 -> m26_560  [key=2, style=dotted];
m26_517 -> m26_518  [key=0, style=solid];
m26_517 -> m26_561  [key=2, style=dotted];
m26_518 -> m26_519  [key=0, style=solid];
m26_518 -> m26_562  [key=2, style=dotted];
m26_519 -> m26_520  [key=0, style=solid];
m26_519 -> m26_563  [key=2, style=dotted];
m26_520 -> m26_521  [key=0, style=solid];
m26_520 -> m26_564  [key=2, style=dotted];
m26_521 -> m26_522  [key=0, style=solid];
m26_521 -> m26_565  [key=2, style=dotted];
m26_522 -> m26_523  [key=0, style=solid];
m26_522 -> m26_566  [key=2, style=dotted];
m26_523 -> m26_524  [key=0, style=solid];
m26_523 -> m26_567  [key=2, style=dotted];
m26_524 -> m26_525  [key=0, style=solid];
m26_524 -> m26_568  [key=2, style=dotted];
m26_525 -> m26_526  [key=0, style=solid];
m26_525 -> m26_569  [key=2, style=dotted];
m26_526 -> m26_527  [key=0, style=solid];
m26_526 -> m26_568  [key=2, style=dotted];
m26_527 -> m26_528  [key=0, style=solid];
m26_527 -> m26_570  [key=2, style=dotted];
m26_528 -> m26_529  [key=0, style=solid];
m26_528 -> m26_571  [key=2, style=dotted];
m26_529 -> m26_530  [key=0, style=solid];
m26_529 -> m26_572  [key=2, style=dotted];
m26_530 -> m26_531  [key=0, style=solid];
m26_530 -> m26_571  [key=2, style=dotted];
m26_531 -> m26_532  [key=0, style=solid];
m26_531 -> m26_573  [key=2, style=dotted];
m26_532 -> m26_533  [key=0, style=solid];
m26_532 -> m26_574  [key=2, style=dotted];
m26_533 -> m26_534  [key=0, style=solid];
m26_533 -> m26_575  [key=2, style=dotted];
m26_534 -> m26_535  [key=0, style=solid];
m26_534 -> m26_576  [key=2, style=dotted];
m26_535 -> m26_536  [key=0, style=solid];
m26_535 -> m26_577  [key=2, style=dotted];
m26_536 -> m26_537  [key=0, style=solid];
m26_536 -> m26_578  [key=2, style=dotted];
m26_537 -> m26_538  [key=0, style=solid];
m26_537 -> m26_579  [key=2, style=dotted];
m26_538 -> m26_539  [key=0, style=solid];
m26_538 -> m26_580  [key=2, style=dotted];
m26_539 -> m26_540  [key=0, style=solid];
m26_539 -> m26_581  [key=2, style=dotted];
m26_540 -> m26_541  [key=0, style=solid];
m26_540 -> m26_582  [key=2, style=dotted];
m26_541 -> m26_542  [key=0, style=solid];
m26_541 -> m26_583  [key=2, style=dotted];
m26_542 -> m26_543  [key=0, style=solid];
m26_542 -> m26_584  [key=2, style=dotted];
m26_543 -> m26_544  [key=0, style=solid];
m26_543 -> m26_585  [key=2, style=dotted];
m26_544 -> m26_545  [key=0, style=solid];
m26_544 -> m26_586  [key=2, style=dotted];
m26_545 -> m26_546  [key=0, style=solid];
m26_545 -> m26_587  [key=2, style=dotted];
m26_546 -> m26_547  [key=0, style=solid];
m26_546 -> m26_588  [key=2, style=dotted];
m26_547 -> m26_548  [key=0, style=solid];
m26_547 -> m26_589  [key=2, style=dotted];
m26_548 -> m26_549  [key=0, style=solid];
m26_548 -> m26_590  [key=2, style=dotted];
m26_549 -> m26_550  [key=0, style=solid];
m26_549 -> m26_591  [key=2, style=dotted];
m26_551 -> m26_552  [key=0, style=solid];
m26_551 -> m26_10  [key=2, style=dotted];
m26_511 -> m26_512  [key=0, style=solid];
m26_511 -> m26_553  [key=2, style=dotted];
m26_511 -> m26_513  [key=1, style=dashed, color=darkseagreen4, label=mock];
m26_511 -> m26_514  [key=1, style=dashed, color=darkseagreen4, label=mock];
m26_512 -> m26_513  [key=0, style=solid];
m26_512 -> m26_554  [key=2, style=dotted];
m26_513 -> m26_514  [key=0, style=solid];
m26_513 -> m26_555  [key=2, style=dotted];
m26_513 -> m26_556  [key=2, style=dotted];
m26_513 -> m26_557  [key=2, style=dotted];
m26_513 -> m26_592  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_550 -> m26_551  [key=0, style=solid];
m26_552 -> m26_506  [key=0, style=bold, color=blue];
m26_18 -> m26_19  [key=0, style=solid];
m26_18 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_19 -> m26_20  [key=0, style=solid];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_7  [key=2, style=dotted];
m26_20 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_8  [key=2, style=dotted];
m26_22 -> m26_23  [key=0, style=solid];
m26_22 -> m26_9  [key=2, style=dotted];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_10  [key=2, style=dotted];
m26_24 -> m26_18  [key=0, style=bold, color=blue];
m26_255 -> m26_256  [key=0, style=solid];
m26_255 -> m26_257  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_256 -> m26_257  [key=0, style=solid];
m26_257 -> m26_258  [key=0, style=solid];
m26_257 -> m26_7  [key=2, style=dotted];
m26_257 -> m26_259  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_257 -> m26_260  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_257 -> m26_261  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_258 -> m26_259  [key=0, style=solid];
m26_258 -> m26_8  [key=2, style=dotted];
m26_259 -> m26_260  [key=0, style=solid];
m26_259 -> m26_55  [key=2, style=dotted];
m26_260 -> m26_261  [key=0, style=solid];
m26_260 -> m26_56  [key=2, style=dotted];
m26_261 -> m26_262  [key=0, style=solid];
m26_261 -> m26_9  [key=2, style=dotted];
m26_262 -> m26_263  [key=0, style=solid];
m26_262 -> m26_10  [key=2, style=dotted];
m26_263 -> m26_255  [key=0, style=bold, color=blue];
m26_283 -> m26_284  [key=0, style=solid];
m26_283 -> m26_285  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_284 -> m26_285  [key=0, style=solid];
m26_285 -> m26_286  [key=0, style=solid];
m26_285 -> m26_273  [key=2, style=dotted];
m26_285 -> m26_287  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_285 -> m26_288  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_285 -> m26_289  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_286 -> m26_287  [key=0, style=solid];
m26_286 -> m26_8  [key=2, style=dotted];
m26_287 -> m26_288  [key=0, style=solid];
m26_287 -> m26_55  [key=2, style=dotted];
m26_288 -> m26_289  [key=0, style=solid];
m26_288 -> m26_56  [key=2, style=dotted];
m26_289 -> m26_290  [key=0, style=solid];
m26_289 -> m26_9  [key=2, style=dotted];
m26_290 -> m26_291  [key=0, style=solid];
m26_290 -> m26_10  [key=2, style=dotted];
m26_291 -> m26_283  [key=0, style=bold, color=blue];
m26_75 -> m26_76  [key=0, style=solid];
m26_75 -> m26_77  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_76 -> m26_77  [key=0, style=solid];
m26_77 -> m26_78  [key=0, style=solid];
m26_77 -> m26_7  [key=2, style=dotted];
m26_77 -> m26_79  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_77 -> m26_80  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_77 -> m26_81  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_78 -> m26_79  [key=0, style=solid];
m26_78 -> m26_8  [key=2, style=dotted];
m26_79 -> m26_80  [key=0, style=solid];
m26_79 -> m26_55  [key=2, style=dotted];
m26_80 -> m26_81  [key=0, style=solid];
m26_80 -> m26_56  [key=2, style=dotted];
m26_81 -> m26_82  [key=0, style=solid];
m26_81 -> m26_9  [key=2, style=dotted];
m26_82 -> m26_83  [key=0, style=solid];
m26_82 -> m26_10  [key=2, style=dotted];
m26_83 -> m26_75  [key=0, style=bold, color=blue];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_12 -> m26_13  [key=0, style=solid];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_7  [key=2, style=dotted];
m26_13 -> m26_15  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_14 -> m26_15  [key=0, style=solid];
m26_14 -> m26_8  [key=2, style=dotted];
m26_15 -> m26_16  [key=0, style=solid];
m26_15 -> m26_9  [key=2, style=dotted];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_10  [key=2, style=dotted];
m26_17 -> m26_11  [key=0, style=bold, color=blue];
m26_7 -> m26_597  [key=0, style=solid];
m26_7 -> m26_600  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_7 -> m26_602  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_597 -> m26_598  [key=0, style=solid];
m26_597 -> m26_479  [key=2, style=dotted];
m26_597 -> m26_599  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_597 -> m26_600  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_597 -> m26_601  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_597 -> m26_603  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_600 -> m26_601  [key=0, style=solid];
m26_600 -> m26_483  [key=2, style=dotted];
m26_602 -> m26_603  [key=0, style=solid];
m26_602 -> m26_605  [key=2, style=dotted];
m26_598 -> m26_599  [key=0, style=solid];
m26_598 -> m26_480  [key=2, style=dotted];
m26_599 -> m26_600  [key=0, style=solid];
m26_599 -> m26_481  [key=2, style=dotted];
m26_601 -> m26_602  [key=0, style=solid];
m26_601 -> m26_604  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
m26_603 -> m26_604  [key=0, style=solid];
m26_604 -> m26_7  [key=0, style=bold, color=blue];
m26_376 -> m26_377  [key=0, style=solid];
m26_376 -> m26_378  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_377 -> m26_378  [key=0, style=solid];
m26_378 -> m26_379  [key=0, style=solid];
m26_378 -> m26_7  [key=2, style=dotted];
m26_378 -> m26_380  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_378 -> m26_381  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_378 -> m26_382  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_378 -> m26_383  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_379 -> m26_380  [key=0, style=solid];
m26_379 -> m26_8  [key=2, style=dotted];
m26_380 -> m26_381  [key=0, style=solid];
m26_380 -> m26_55  [key=2, style=dotted];
m26_381 -> m26_382  [key=0, style=solid];
m26_381 -> m26_56  [key=2, style=dotted];
m26_382 -> m26_383  [key=0, style=solid];
m26_382 -> m26_8  [key=2, style=dotted];
m26_383 -> m26_384  [key=0, style=solid];
m26_383 -> m26_9  [key=2, style=dotted];
m26_384 -> m26_385  [key=0, style=solid];
m26_384 -> m26_10  [key=2, style=dotted];
m26_385 -> m26_376  [key=0, style=bold, color=blue];
m26_228 -> m26_229  [key=0, style=solid];
m26_228 -> m26_230  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_229 -> m26_230  [key=0, style=solid];
m26_230 -> m26_231  [key=0, style=solid];
m26_230 -> m26_7  [key=2, style=dotted];
m26_230 -> m26_232  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_230 -> m26_233  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_230 -> m26_234  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_231 -> m26_232  [key=0, style=solid];
m26_231 -> m26_8  [key=2, style=dotted];
m26_232 -> m26_233  [key=0, style=solid];
m26_232 -> m26_55  [key=2, style=dotted];
m26_233 -> m26_234  [key=0, style=solid];
m26_233 -> m26_56  [key=2, style=dotted];
m26_234 -> m26_235  [key=0, style=solid];
m26_234 -> m26_9  [key=2, style=dotted];
m26_235 -> m26_236  [key=0, style=solid];
m26_235 -> m26_10  [key=2, style=dotted];
m26_236 -> m26_228  [key=0, style=bold, color=blue];
m26_386 -> m26_387  [key=0, style=solid];
m26_386 -> m26_388  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_387 -> m26_388  [key=0, style=solid];
m26_388 -> m26_389  [key=0, style=solid];
m26_388 -> m26_7  [key=2, style=dotted];
m26_388 -> m26_390  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_388 -> m26_391  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_388 -> m26_392  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_388 -> m26_393  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_389 -> m26_390  [key=0, style=solid];
m26_389 -> m26_8  [key=2, style=dotted];
m26_390 -> m26_391  [key=0, style=solid];
m26_390 -> m26_55  [key=2, style=dotted];
m26_391 -> m26_392  [key=0, style=solid];
m26_391 -> m26_56  [key=2, style=dotted];
m26_392 -> m26_393  [key=0, style=solid];
m26_392 -> m26_8  [key=2, style=dotted];
m26_393 -> m26_394  [key=0, style=solid];
m26_393 -> m26_9  [key=2, style=dotted];
m26_394 -> m26_395  [key=0, style=solid];
m26_394 -> m26_10  [key=2, style=dotted];
m26_395 -> m26_386  [key=0, style=bold, color=blue];
m26_201 -> m26_202  [key=0, style=solid];
m26_201 -> m26_203  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_202 -> m26_203  [key=0, style=solid];
m26_203 -> m26_204  [key=0, style=solid];
m26_203 -> m26_7  [key=2, style=dotted];
m26_203 -> m26_205  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_203 -> m26_206  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_203 -> m26_207  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_204 -> m26_205  [key=0, style=solid];
m26_204 -> m26_8  [key=2, style=dotted];
m26_205 -> m26_206  [key=0, style=solid];
m26_205 -> m26_55  [key=2, style=dotted];
m26_206 -> m26_207  [key=0, style=solid];
m26_206 -> m26_56  [key=2, style=dotted];
m26_207 -> m26_208  [key=0, style=solid];
m26_207 -> m26_9  [key=2, style=dotted];
m26_208 -> m26_209  [key=0, style=solid];
m26_208 -> m26_10  [key=2, style=dotted];
m26_209 -> m26_201  [key=0, style=bold, color=blue];
m26_46 -> m26_47  [key=0, style=solid];
m26_46 -> m26_48  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_47 -> m26_48  [key=0, style=solid];
m26_48 -> m26_49  [key=0, style=solid];
m26_48 -> m26_7  [key=2, style=dotted];
m26_48 -> m26_50  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_48 -> m26_51  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_48 -> m26_52  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_49 -> m26_50  [key=0, style=solid];
m26_49 -> m26_8  [key=2, style=dotted];
m26_50 -> m26_51  [key=0, style=solid];
m26_50 -> m26_55  [key=2, style=dotted];
m26_51 -> m26_52  [key=0, style=solid];
m26_51 -> m26_56  [key=2, style=dotted];
m26_52 -> m26_53  [key=0, style=solid];
m26_52 -> m26_9  [key=2, style=dotted];
m26_53 -> m26_54  [key=0, style=solid];
m26_53 -> m26_10  [key=2, style=dotted];
m26_54 -> m26_46  [key=0, style=bold, color=blue];
m26_183 -> m26_184  [key=0, style=solid];
m26_183 -> m26_185  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_184 -> m26_185  [key=0, style=solid];
m26_185 -> m26_186  [key=0, style=solid];
m26_185 -> m26_7  [key=2, style=dotted];
m26_185 -> m26_187  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_185 -> m26_188  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_185 -> m26_189  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_186 -> m26_187  [key=0, style=solid];
m26_186 -> m26_8  [key=2, style=dotted];
m26_187 -> m26_188  [key=0, style=solid];
m26_187 -> m26_55  [key=2, style=dotted];
m26_188 -> m26_189  [key=0, style=solid];
m26_188 -> m26_56  [key=2, style=dotted];
m26_189 -> m26_190  [key=0, style=solid];
m26_189 -> m26_9  [key=2, style=dotted];
m26_190 -> m26_191  [key=0, style=solid];
m26_190 -> m26_10  [key=2, style=dotted];
m26_191 -> m26_183  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_0 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_1 -> m26_2  [key=0, style=solid];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_7  [key=2, style=dotted];
m26_2 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_8  [key=2, style=dotted];
m26_4 -> m26_5  [key=0, style=solid];
m26_4 -> m26_9  [key=2, style=dotted];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_10  [key=2, style=dotted];
m26_6 -> m26_0  [key=0, style=bold, color=blue];
m26_165 -> m26_166  [key=0, style=solid];
m26_165 -> m26_167  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_166 -> m26_167  [key=0, style=solid];
m26_167 -> m26_168  [key=0, style=solid];
m26_167 -> m26_7  [key=2, style=dotted];
m26_167 -> m26_169  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_167 -> m26_170  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_167 -> m26_171  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_168 -> m26_169  [key=0, style=solid];
m26_168 -> m26_8  [key=2, style=dotted];
m26_169 -> m26_170  [key=0, style=solid];
m26_169 -> m26_55  [key=2, style=dotted];
m26_170 -> m26_171  [key=0, style=solid];
m26_170 -> m26_56  [key=2, style=dotted];
m26_171 -> m26_172  [key=0, style=solid];
m26_171 -> m26_9  [key=2, style=dotted];
m26_172 -> m26_173  [key=0, style=solid];
m26_172 -> m26_10  [key=2, style=dotted];
m26_173 -> m26_165  [key=0, style=bold, color=blue];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_26 -> m26_27  [key=0, style=solid];
m26_27 -> m26_28  [key=0, style=solid];
m26_27 -> m26_7  [key=2, style=dotted];
m26_27 -> m26_29  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_28 -> m26_29  [key=0, style=solid];
m26_28 -> m26_8  [key=2, style=dotted];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_9  [key=2, style=dotted];
m26_30 -> m26_31  [key=0, style=solid];
m26_30 -> m26_10  [key=2, style=dotted];
m26_31 -> m26_25  [key=0, style=bold, color=blue];
m26_174 -> m26_175  [key=0, style=solid];
m26_174 -> m26_176  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_175 -> m26_176  [key=0, style=solid];
m26_176 -> m26_177  [key=0, style=solid];
m26_176 -> m26_7  [key=2, style=dotted];
m26_176 -> m26_178  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_176 -> m26_179  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_176 -> m26_180  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_177 -> m26_178  [key=0, style=solid];
m26_177 -> m26_8  [key=2, style=dotted];
m26_178 -> m26_179  [key=0, style=solid];
m26_178 -> m26_55  [key=2, style=dotted];
m26_179 -> m26_180  [key=0, style=solid];
m26_179 -> m26_56  [key=2, style=dotted];
m26_180 -> m26_181  [key=0, style=solid];
m26_180 -> m26_9  [key=2, style=dotted];
m26_181 -> m26_182  [key=0, style=solid];
m26_181 -> m26_10  [key=2, style=dotted];
m26_182 -> m26_174  [key=0, style=bold, color=blue];
m26_328 -> m26_329  [key=0, style=solid];
m26_328 -> m26_330  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_329 -> m26_330  [key=0, style=solid];
m26_330 -> m26_331  [key=0, style=solid];
m26_330 -> m26_273  [key=2, style=dotted];
m26_330 -> m26_332  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_330 -> m26_333  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_330 -> m26_334  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_331 -> m26_332  [key=0, style=solid];
m26_331 -> m26_8  [key=2, style=dotted];
m26_332 -> m26_333  [key=0, style=solid];
m26_332 -> m26_55  [key=2, style=dotted];
m26_333 -> m26_334  [key=0, style=solid];
m26_333 -> m26_56  [key=2, style=dotted];
m26_334 -> m26_335  [key=0, style=solid];
m26_334 -> m26_9  [key=2, style=dotted];
m26_335 -> m26_336  [key=0, style=solid];
m26_335 -> m26_10  [key=2, style=dotted];
m26_336 -> m26_328  [key=0, style=bold, color=blue];
m26_274 -> m26_275  [key=0, style=solid];
m26_274 -> m26_276  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_275 -> m26_276  [key=0, style=solid];
m26_276 -> m26_277  [key=0, style=solid];
m26_276 -> m26_273  [key=2, style=dotted];
m26_276 -> m26_278  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_276 -> m26_279  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_276 -> m26_280  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_277 -> m26_278  [key=0, style=solid];
m26_277 -> m26_8  [key=2, style=dotted];
m26_278 -> m26_279  [key=0, style=solid];
m26_278 -> m26_55  [key=2, style=dotted];
m26_279 -> m26_280  [key=0, style=solid];
m26_279 -> m26_56  [key=2, style=dotted];
m26_280 -> m26_281  [key=0, style=solid];
m26_280 -> m26_9  [key=2, style=dotted];
m26_281 -> m26_282  [key=0, style=solid];
m26_281 -> m26_10  [key=2, style=dotted];
m26_282 -> m26_274  [key=0, style=bold, color=blue];
m26_192 -> m26_193  [key=0, style=solid];
m26_192 -> m26_194  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_193 -> m26_194  [key=0, style=solid];
m26_194 -> m26_195  [key=0, style=solid];
m26_194 -> m26_7  [key=2, style=dotted];
m26_194 -> m26_196  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_194 -> m26_197  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_194 -> m26_198  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_195 -> m26_196  [key=0, style=solid];
m26_195 -> m26_8  [key=2, style=dotted];
m26_196 -> m26_197  [key=0, style=solid];
m26_196 -> m26_55  [key=2, style=dotted];
m26_197 -> m26_198  [key=0, style=solid];
m26_197 -> m26_56  [key=2, style=dotted];
m26_198 -> m26_199  [key=0, style=solid];
m26_198 -> m26_9  [key=2, style=dotted];
m26_199 -> m26_200  [key=0, style=solid];
m26_199 -> m26_10  [key=2, style=dotted];
m26_200 -> m26_192  [key=0, style=bold, color=blue];
m26_111 -> m26_112  [key=0, style=solid];
m26_111 -> m26_113  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_112 -> m26_113  [key=0, style=solid];
m26_113 -> m26_114  [key=0, style=solid];
m26_113 -> m26_7  [key=2, style=dotted];
m26_113 -> m26_115  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_113 -> m26_116  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_113 -> m26_117  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_114 -> m26_115  [key=0, style=solid];
m26_114 -> m26_8  [key=2, style=dotted];
m26_115 -> m26_116  [key=0, style=solid];
m26_115 -> m26_55  [key=2, style=dotted];
m26_116 -> m26_117  [key=0, style=solid];
m26_116 -> m26_56  [key=2, style=dotted];
m26_117 -> m26_118  [key=0, style=solid];
m26_117 -> m26_9  [key=2, style=dotted];
m26_118 -> m26_119  [key=0, style=solid];
m26_118 -> m26_10  [key=2, style=dotted];
m26_119 -> m26_111  [key=0, style=bold, color=blue];
m26_264 -> m26_265  [key=0, style=solid];
m26_264 -> m26_266  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_265 -> m26_266  [key=0, style=solid];
m26_266 -> m26_267  [key=0, style=solid];
m26_266 -> m26_273  [key=2, style=dotted];
m26_266 -> m26_268  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_266 -> m26_269  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_266 -> m26_270  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_267 -> m26_268  [key=0, style=solid];
m26_267 -> m26_8  [key=2, style=dotted];
m26_268 -> m26_269  [key=0, style=solid];
m26_268 -> m26_55  [key=2, style=dotted];
m26_269 -> m26_270  [key=0, style=solid];
m26_269 -> m26_56  [key=2, style=dotted];
m26_270 -> m26_271  [key=0, style=solid];
m26_270 -> m26_9  [key=2, style=dotted];
m26_271 -> m26_272  [key=0, style=solid];
m26_271 -> m26_10  [key=2, style=dotted];
m26_272 -> m26_264  [key=0, style=bold, color=blue];
m26_366 -> m26_367  [key=0, style=solid];
m26_366 -> m26_368  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_367 -> m26_368  [key=0, style=solid];
m26_368 -> m26_369  [key=0, style=solid];
m26_368 -> m26_7  [key=2, style=dotted];
m26_368 -> m26_370  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_368 -> m26_371  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_368 -> m26_372  [key=1, style=dashed, color=darkseagreen4, label=msft];
m26_368 -> m26_373  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_369 -> m26_370  [key=0, style=solid];
m26_369 -> m26_8  [key=2, style=dotted];
m26_370 -> m26_371  [key=0, style=solid];
m26_370 -> m26_55  [key=2, style=dotted];
m26_371 -> m26_372  [key=0, style=solid];
m26_371 -> m26_56  [key=2, style=dotted];
m26_372 -> m26_373  [key=0, style=solid];
m26_372 -> m26_8  [key=2, style=dotted];
m26_373 -> m26_374  [key=0, style=solid];
m26_373 -> m26_9  [key=2, style=dotted];
m26_374 -> m26_375  [key=0, style=solid];
m26_374 -> m26_10  [key=2, style=dotted];
m26_375 -> m26_366  [key=0, style=bold, color=blue];
m26_337 -> m26_338  [key=0, style=solid];
m26_337 -> m26_339  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_338 -> m26_339  [key=0, style=solid];
m26_339 -> m26_340  [key=0, style=solid];
m26_339 -> m26_273  [key=2, style=dotted];
m26_339 -> m26_341  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_339 -> m26_342  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_339 -> m26_343  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_340 -> m26_341  [key=0, style=solid];
m26_340 -> m26_8  [key=2, style=dotted];
m26_341 -> m26_342  [key=0, style=solid];
m26_341 -> m26_55  [key=2, style=dotted];
m26_342 -> m26_343  [key=0, style=solid];
m26_342 -> m26_56  [key=2, style=dotted];
m26_343 -> m26_344  [key=0, style=solid];
m26_343 -> m26_9  [key=2, style=dotted];
m26_344 -> m26_345  [key=0, style=solid];
m26_344 -> m26_10  [key=2, style=dotted];
m26_345 -> m26_337  [key=0, style=bold, color=blue];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_41  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_40 -> m26_41  [key=0, style=solid];
m26_41 -> m26_42  [key=0, style=solid];
m26_41 -> m26_7  [key=2, style=dotted];
m26_41 -> m26_43  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_42 -> m26_43  [key=0, style=solid];
m26_42 -> m26_8  [key=2, style=dotted];
m26_43 -> m26_44  [key=0, style=solid];
m26_43 -> m26_9  [key=2, style=dotted];
m26_44 -> m26_45  [key=0, style=solid];
m26_44 -> m26_10  [key=2, style=dotted];
m26_45 -> m26_39  [key=0, style=bold, color=blue];
m26_84 -> m26_85  [key=0, style=solid];
m26_84 -> m26_86  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_85 -> m26_86  [key=0, style=solid];
m26_86 -> m26_87  [key=0, style=solid];
m26_86 -> m26_7  [key=2, style=dotted];
m26_86 -> m26_88  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_86 -> m26_89  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_86 -> m26_90  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_87 -> m26_88  [key=0, style=solid];
m26_87 -> m26_8  [key=2, style=dotted];
m26_88 -> m26_89  [key=0, style=solid];
m26_88 -> m26_55  [key=2, style=dotted];
m26_89 -> m26_90  [key=0, style=solid];
m26_89 -> m26_56  [key=2, style=dotted];
m26_90 -> m26_91  [key=0, style=solid];
m26_90 -> m26_9  [key=2, style=dotted];
m26_91 -> m26_92  [key=0, style=solid];
m26_91 -> m26_10  [key=2, style=dotted];
m26_92 -> m26_84  [key=0, style=bold, color=blue];
m26_156 -> m26_157  [key=0, style=solid];
m26_156 -> m26_158  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_157 -> m26_158  [key=0, style=solid];
m26_158 -> m26_159  [key=0, style=solid];
m26_158 -> m26_7  [key=2, style=dotted];
m26_158 -> m26_160  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_158 -> m26_161  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_158 -> m26_162  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_159 -> m26_160  [key=0, style=solid];
m26_159 -> m26_8  [key=2, style=dotted];
m26_160 -> m26_161  [key=0, style=solid];
m26_160 -> m26_55  [key=2, style=dotted];
m26_161 -> m26_162  [key=0, style=solid];
m26_161 -> m26_56  [key=2, style=dotted];
m26_162 -> m26_163  [key=0, style=solid];
m26_162 -> m26_9  [key=2, style=dotted];
m26_163 -> m26_164  [key=0, style=solid];
m26_163 -> m26_10  [key=2, style=dotted];
m26_164 -> m26_156  [key=0, style=bold, color=blue];
m26_484 -> m26_485  [key=0, style=solid];
m26_485 -> m26_486  [key=0, style=solid];
m26_485 -> m26_479  [key=2, style=dotted];
m26_485 -> m26_487  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_485 -> m26_488  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_485 -> m26_489  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_485 -> m26_490  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_485 -> m26_492  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_486 -> m26_487  [key=0, style=solid];
m26_486 -> m26_480  [key=2, style=dotted];
m26_487 -> m26_488  [key=0, style=solid];
m26_487 -> m26_481  [key=2, style=dotted];
m26_488 -> m26_489  [key=0, style=solid];
m26_488 -> m26_482  [key=2, style=dotted];
m26_489 -> m26_490  [key=0, style=solid];
m26_489 -> m26_483  [key=2, style=dotted];
m26_490 -> m26_491  [key=0, style=solid];
m26_492 -> m26_493  [key=0, style=solid];
m26_492 -> m26_9  [key=2, style=dotted];
m26_491 -> m26_492  [key=0, style=solid];
m26_491 -> m26_8  [key=2, style=dotted];
m26_493 -> m26_494  [key=0, style=solid];
m26_493 -> m26_10  [key=2, style=dotted];
m26_494 -> m26_484  [key=0, style=bold, color=blue];
m26_57 -> m26_58  [key=0, style=solid];
m26_57 -> m26_59  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_58 -> m26_59  [key=0, style=solid];
m26_59 -> m26_60  [key=0, style=solid];
m26_59 -> m26_7  [key=2, style=dotted];
m26_59 -> m26_61  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_59 -> m26_62  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_59 -> m26_63  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_60 -> m26_61  [key=0, style=solid];
m26_60 -> m26_8  [key=2, style=dotted];
m26_61 -> m26_62  [key=0, style=solid];
m26_61 -> m26_55  [key=2, style=dotted];
m26_62 -> m26_63  [key=0, style=solid];
m26_62 -> m26_56  [key=2, style=dotted];
m26_63 -> m26_64  [key=0, style=solid];
m26_63 -> m26_9  [key=2, style=dotted];
m26_64 -> m26_65  [key=0, style=solid];
m26_64 -> m26_10  [key=2, style=dotted];
m26_65 -> m26_57  [key=0, style=bold, color=blue];
m26_273 -> m26_606  [key=0, style=solid];
m26_273 -> m26_609  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_273 -> m26_611  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m26_606 -> m26_607  [key=0, style=solid];
m26_606 -> m26_479  [key=2, style=dotted];
m26_606 -> m26_608  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_606 -> m26_609  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_606 -> m26_610  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_606 -> m26_612  [key=1, style=dashed, color=darkseagreen4, label=algo];
m26_609 -> m26_610  [key=0, style=solid];
m26_609 -> m26_483  [key=2, style=dotted];
m26_611 -> m26_612  [key=0, style=solid];
m26_611 -> m26_614  [key=2, style=dotted];
m26_607 -> m26_608  [key=0, style=solid];
m26_607 -> m26_480  [key=2, style=dotted];
m26_608 -> m26_609  [key=0, style=solid];
m26_608 -> m26_481  [key=2, style=dotted];
m26_610 -> m26_611  [key=0, style=solid];
m26_610 -> m26_613  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
m26_612 -> m26_613  [key=0, style=solid];
m26_613 -> m26_273  [key=0, style=bold, color=blue];
m26_619 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_249  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_266  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_267  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_276  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_277  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_286  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_294  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_295  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_303  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_304  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_312  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_313  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_322  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_330  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_331  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_339  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_340  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_348  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_349  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_352  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_358  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_359  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_362  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_368  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_369  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_372  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_378  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_379  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_382  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_388  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_389  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_392  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_398  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_399  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_402  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_408  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_409  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_412  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_418  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_419  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_422  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_428  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_429  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_432  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_439  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_440  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_443  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_449  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_450  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_453  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_460  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_461  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_464  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_475  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_491  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_502  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_508  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m26_619 -> m26_509  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
m27_37 -> m27_38  [key=0, style=solid, color=green];
m27_37 -> m27_41  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m27_37 -> m27_45  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m27_37 -> m27_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m27_37 -> m27_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m27_37 -> m27_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m27_37 -> m27_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m27_38 -> m27_39  [key=0, style=solid, color=green];
m27_38 -> m27_61  [key=2, style=dotted, color=green];
m27_38 -> m27_42  [key=1, style=dashed, color=green, label=addedSymbolData];
m27_38 -> m27_44  [key=1, style=dashed, color=green, label=addedSymbolData];
m27_38 -> m27_45  [key=1, style=dashed, color=green, label=addedSymbolData];
m27_39 -> m27_41  [key=1, style=dashed, color=green, label=added];
m27_39 -> m27_42  [key=1, style=dashed, color=green, label=added];
m27_39 -> m27_44  [key=0, style=solid, color=green];
m27_39 -> m27_43  [key=1, style=dashed, color=green, label=added];
m27_39 -> m27_40  [key=0, style=solid];
m27_42 -> m27_43  [key=0, style=solid, color=green];
m27_42 -> m27_64  [key=2, style=dotted, color=green];
m27_44 -> m27_45  [key=0, style=solid, color=green];
m27_44 -> m27_54  [key=0, style=solid, color=green];
m27_45 -> m27_46  [key=0, style=solid, color=green];
m27_45 -> m27_65  [key=2, style=dotted, color=green];
m27_41 -> m27_42  [key=0, style=solid, color=green];
m27_41 -> m27_63  [key=2, style=dotted, color=green];
m27_41 -> m27_43  [key=1, style=dashed, color=green, label=symbolData];
m27_40 -> m27_41  [key=0, style=solid, color=green];
m27_40 -> m27_39  [key=0, style=solid];
m27_40 -> m27_62  [key=2, style=dotted];
m27_43 -> m27_39  [key=0, style=solid, color=green];
m27_46 -> m27_47  [key=0, style=solid, color=green];
m27_46 -> m27_54  [key=0, style=solid, color=green];
m27_46 -> m27_48  [key=1, style=dashed, color=green, label=slice];
m27_54 -> m27_55  [key=0, style=solid];
m27_54 -> m27_60  [key=0, style=solid];
m27_54 -> m27_56  [key=1, style=dashed, color=darkseagreen4, label=removed];
m27_54 -> m27_57  [key=1, style=dashed, color=darkseagreen4, label=removed];
m27_54 -> m27_58  [key=1, style=dashed, color=darkseagreen4, label=removed];
m27_54 -> m27_59  [key=1, style=dashed, color=darkseagreen4, label=removed];
m27_47 -> m27_46  [key=0, style=solid, color=green];
m27_47 -> m27_48  [key=0, style=solid, color=green];
m27_47 -> m27_52  [key=1, style=dashed, color=green, label=symbol];
m27_48 -> m27_49  [key=0, style=solid, color=green];
m27_48 -> m27_50  [key=1, style=dashed, color=green, label=value];
m27_52 -> m27_47  [key=0, style=solid, color=green];
m27_52 -> m27_53  [key=0, style=solid];
m27_52 -> m27_29  [key=2, style=dotted];
m27_53 -> m27_47  [key=0, style=solid, color=green];
m27_53 -> m27_66  [key=2, style=dotted];
m27_49 -> m27_50  [key=0, style=solid, color=green];
m27_50 -> m27_51  [key=0, style=solid, color=green];
m27_50 -> m27_53  [key=1, style=dashed, color=green, label=data];
m27_51 -> m27_52  [key=0, style=solid];
m27_57 -> m27_54  [key=0, style=solid];
m27_57 -> m27_67  [key=2, style=dotted];
m27_57 -> m27_58  [key=0, style=solid];
m27_59 -> m27_54  [key=0, style=solid];
m27_59 -> m27_69  [key=2, style=dotted];
m27_56 -> m27_54  [key=0, style=solid];
m27_56 -> m27_57  [key=0, style=solid];
m27_56 -> m27_59  [key=1, style=dashed, color=darkseagreen4, label=data];
m27_56 -> m27_29  [key=2, style=dotted];
m27_58 -> m27_59  [key=0, style=solid];
m27_58 -> m27_68  [key=2, style=dotted];
m27_55 -> m27_56  [key=0, style=solid];
m27_60 -> m27_37  [key=0, style=bold, color=blue];
m27_101 -> m27_102  [key=0, style=solid];
m27_101 -> m27_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m27_84 -> m27_84  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>"];
m27_84 -> m27_85  [key=0, style=solid];
m27_84 -> m27_86  [key=2, style=dotted];
m27_83 -> m27_84  [key=0, style=solid];
m27_85 -> m27_83  [key=0, style=bold, color=blue];
m27_102 -> m27_103  [key=0, style=solid];
m27_102 -> m27_105  [key=2, style=dotted];
m27_103 -> m27_104  [key=0, style=solid];
m27_103 -> m27_105  [key=2, style=dotted];
m27_104 -> m27_101  [key=0, style=bold, color=blue];
m27_30 -> m27_70  [key=0, style=solid];
m27_30 -> m27_13  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal unorderedQuantity"];
m27_30 -> m27_14  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData data"];
m27_30 -> m27_71  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m27_30 -> m27_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_30 -> m27_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_30 -> m27_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_30 -> m27_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_30 -> m27_74  [key=3, color=darkorchid, style=bold, label="method methodReturn bool PriceIsFavorable"];
m27_30 -> m27_78  [key=3, color=darkorchid, style=bold, label="method methodReturn bool PriceIsFavorable"];
m27_70 -> m27_71  [key=0, style=solid];
m27_70 -> m27_73  [key=1, style=dashed, color=darkseagreen4, label=deviations];
m27_70 -> m27_76  [key=1, style=dashed, color=darkseagreen4, label=deviations];
m27_71 -> m27_72  [key=0, style=solid];
m27_71 -> m27_75  [key=0, style=solid];
m27_73 -> m27_74  [key=0, style=solid];
m27_73 -> m27_78  [key=0, style=solid];
m27_76 -> m27_77  [key=0, style=solid];
m27_76 -> m27_78  [key=0, style=solid];
m27_72 -> m27_73  [key=0, style=solid];
m27_75 -> m27_76  [key=0, style=solid];
m27_74 -> m27_79  [key=0, style=solid];
m27_78 -> m27_79  [key=0, style=solid];
m27_77 -> m27_79  [key=0, style=solid];
m27_79 -> m27_30  [key=0, style=bold, color=blue];
m27_63 -> m27_87  [key=0, style=solid];
m27_63 -> m27_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m27_63 -> m27_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m27_63 -> m27_90  [key=1, style=dashed, color=darkseagreen4, label=int];
m27_63 -> m27_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m27_63 -> m27_92  [key=1, style=dashed, color=darkseagreen4, label=int];
m27_63 -> m27_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m27_87 -> m27_88  [key=0, style=solid];
m27_88 -> m27_89  [key=0, style=solid];
m27_88 -> m27_96  [key=2, style=dotted];
m27_89 -> m27_90  [key=0, style=solid];
m27_89 -> m27_97  [key=2, style=dotted];
m27_90 -> m27_91  [key=0, style=solid];
m27_90 -> m27_98  [key=2, style=dotted];
m27_91 -> m27_92  [key=0, style=solid];
m27_91 -> m27_97  [key=2, style=dotted];
m27_92 -> m27_93  [key=0, style=solid];
m27_92 -> m27_99  [key=2, style=dotted];
m27_93 -> m27_94  [key=0, style=solid];
m27_93 -> m27_100  [key=2, style=dotted];
m27_94 -> m27_95  [key=0, style=solid];
m27_94 -> m27_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m27_94 -> m27_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m27_95 -> m27_63  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_2  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m27_0 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m27_1 -> m27_2  [key=0, style=solid];
m27_2 -> m27_3  [key=0, style=solid];
m27_3 -> m27_4  [key=0, style=solid];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_7  [key=2, style=dotted];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_8  [key=2, style=dotted];
m27_6 -> m27_0  [key=0, style=bold, color=blue];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m27_9 -> m27_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m27_9 -> m27_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_27  [key=2, style=dotted];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_26  [key=0, style=solid];
m27_11 -> m27_13  [key=1, style=dashed, color=darkseagreen4, label=target];
m27_11 -> m27_23  [key=1, style=dashed, color=darkseagreen4, label=target];
m27_11 -> m27_25  [key=1, style=dashed, color=darkseagreen4, label=target];
m27_15 -> m27_11  [key=0, style=solid];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_29  [key=2, style=dotted];
m27_15 -> m27_17  [key=1, style=dashed, color=darkseagreen4, label=data];
m27_15 -> m27_18  [key=1, style=dashed, color=darkseagreen4, label=data];
m27_15 -> m27_20  [key=1, style=dashed, color=darkseagreen4, label=data];
m27_17 -> m27_18  [key=0, style=solid];
m27_17 -> m27_23  [key=0, style=solid];
m27_17 -> m27_30  [key=2, style=dotted];
m27_18 -> m27_19  [key=0, style=solid];
m27_18 -> m27_31  [key=2, style=dotted];
m27_25 -> m27_11  [key=0, style=solid];
m27_25 -> m27_36  [key=2, style=dotted];
m27_16 -> m27_11  [key=0, style=solid];
m27_16 -> m27_17  [key=0, style=solid];
m27_24 -> m27_11  [key=0, style=solid];
m27_24 -> m27_25  [key=0, style=solid];
m27_12 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_22  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m27_13 -> m27_17  [key=1, style=dashed, color=darkseagreen4, label=unorderedQuantity];
m27_13 -> m27_14  [key=0, style=solid];
m27_13 -> m27_28  [key=2, style=dotted];
m27_13 -> m27_19  [key=1, style=dashed, color=darkseagreen4, label=unorderedQuantity];
m27_13 -> m27_22  [key=1, style=dashed, color=darkseagreen4, label=unorderedQuantity];
m27_23 -> m27_24  [key=0, style=solid];
m27_23 -> m27_28  [key=2, style=dotted];
m27_14 -> m27_15  [key=0, style=solid];
m27_20 -> m27_20  [key=1, style=dashed, color=darkseagreen4, label=orderSize];
m27_20 -> m27_21  [key=0, style=solid];
m27_20 -> m27_22  [key=1, style=dashed, color=darkseagreen4, label=orderSize];
m27_19 -> m27_20  [key=0, style=solid];
m27_19 -> m27_32  [key=2, style=dotted];
m27_19 -> m27_33  [key=2, style=dotted];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_34  [key=2, style=dotted];
m27_22 -> m27_35  [key=2, style=dotted];
m27_21 -> m27_23  [key=0, style=solid];
m27_21 -> m27_22  [key=0, style=solid];
m27_26 -> m27_9  [key=0, style=bold, color=blue];
m27_67 -> m27_37  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Algorithm.Framework.QCAlgorithmFramework algorithm"];
m27_67 -> m27_80  [key=0, style=solid];
m27_67 -> m27_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m27_80 -> m27_81  [key=0, style=solid];
m27_80 -> m27_82  [key=2, style=dotted];
m27_80 -> m27_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_81 -> m27_67  [key=0, style=bold, color=blue];
m27_106 -> m27_41  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_45  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_43  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_106 -> m27_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel"];
m27_108 -> m27_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_108 -> m27_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_108 -> m27_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_108 -> m27_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_108 -> m27_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_108 -> m27_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_108 -> m27_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_108 -> m27_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData"];
m27_107 -> m27_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m28_29 -> m28_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_29 -> m28_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_29 -> m28_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_29 -> m28_39  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_29 -> m28_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_29 -> m28_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_29 -> m28_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_29 -> m28_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_29 -> m28_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m28_30 -> m28_31  [key=0, style=solid];
m28_30 -> m28_52  [key=2, style=dotted];
m28_30 -> m28_53  [key=2, style=dotted];
m28_30 -> m28_34  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m28_30 -> m28_36  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m28_30 -> m28_38  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m28_30 -> m28_41  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m28_30 -> m28_43  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m28_30 -> m28_45  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m28_30 -> m28_47  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m28_30 -> m28_50  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m28_32 -> m28_33  [key=0, style=solid];
m28_32 -> m28_35  [key=0, style=solid];
m28_32 -> m28_37  [key=0, style=solid];
m28_32 -> m28_40  [key=0, style=solid];
m28_32 -> m28_42  [key=0, style=solid];
m28_32 -> m28_44  [key=0, style=solid];
m28_32 -> m28_46  [key=0, style=solid];
m28_32 -> m28_48  [key=0, style=solid];
m28_32 -> m28_34  [key=2, style=dotted];
m28_34 -> m28_50  [key=0, style=solid];
m28_34 -> m28_54  [key=2, style=dotted];
m28_36 -> m28_50  [key=0, style=solid];
m28_36 -> m28_55  [key=2, style=dotted];
m28_38 -> m28_39  [key=0, style=solid];
m28_38 -> m28_55  [key=2, style=dotted];
m28_39 -> m28_50  [key=0, style=solid];
m28_39 -> m28_56  [key=2, style=dotted];
m28_41 -> m28_50  [key=0, style=solid];
m28_41 -> m28_57  [key=2, style=dotted];
m28_43 -> m28_50  [key=0, style=solid];
m28_43 -> m28_58  [key=2, style=dotted];
m28_45 -> m28_50  [key=0, style=solid];
m28_45 -> m28_59  [key=2, style=dotted];
m28_47 -> m28_50  [key=0, style=solid];
m28_47 -> m28_60  [key=2, style=dotted];
m28_49 -> m28_51  [key=0, style=solid];
m28_49 -> n40  [key=2, style=dotted];
m28_31 -> m28_32  [key=0, style=solid];
m28_31 -> m28_33  [key=0, style=solid];
m28_50 -> m28_51  [key=0, style=solid];
m28_50 -> m28_62  [key=2, style=dotted];
m28_33 -> m28_34  [key=0, style=solid];
m28_33 -> m28_29  [key=0, style=bold, color=blue];
m28_35 -> m28_36  [key=0, style=solid];
m28_35 -> m28_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable"];
m28_35 -> m28_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable"];
m28_35 -> m28_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable"];
m28_37 -> m28_38  [key=0, style=solid];
m28_40 -> m28_41  [key=0, style=solid];
m28_42 -> m28_43  [key=0, style=solid];
m28_44 -> m28_45  [key=0, style=solid];
m28_46 -> m28_47  [key=0, style=solid];
m28_48 -> m28_49  [key=0, style=solid];
m28_51 -> m28_29  [key=0, style=bold, color=blue];
m28_5 -> m28_0  [key=0, style=bold, color=blue];
m28_63 -> m28_64  [key=0, style=solid];
m28_63 -> m28_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m28_64 -> m28_65  [key=0, style=solid];
m28_64 -> m28_67  [key=0, style=solid];
m28_64 -> m28_69  [key=2, style=dotted];
m28_65 -> m28_66  [key=0, style=solid];
m28_65 -> m28_70  [key=2, style=dotted];
m28_65 -> m28_71  [key=2, style=dotted];
m28_67 -> m28_68  [key=0, style=solid];
m28_66 -> m28_68  [key=0, style=solid];
m28_68 -> m28_63  [key=0, style=bold, color=blue];
m28_10 -> m28_11  [key=0, style=solid];
m28_10 -> m28_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UniverseSettings"];
m28_10 -> m28_13  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>"];
m28_10 -> m28_16  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>"];
m28_10 -> m28_14  [key=2, style=dotted];
m28_11 -> m28_12  [key=0, style=solid];
m28_11 -> m28_14  [key=2, style=dotted];
m28_12 -> m28_13  [key=0, style=solid];
m28_12 -> m28_7  [key=0, style=bold, color=blue];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_16  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m28_13 -> m28_27  [key=0, style=solid];
m28_14 -> m28_10  [key=0, style=bold, color=blue];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_25  [key=0, style=bold, color=blue];
m28_28 -> m28_13  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>"];
m28_0 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UniverseSettings"];
m28_1 -> m28_2  [key=0, style=solid];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_6  [key=2, style=dotted];
m28_2 -> m28_5  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_6  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_0  [key=0, style=bold, color=blue];
m28_24 -> m28_25  [key=0, style=solid, color=green];
m28_7 -> m28_8  [key=0, style=solid];
m28_8 -> m28_9  [key=0, style=solid];
m28_8 -> m28_13  [key=2, style=dotted];
m28_8 -> m28_11  [key=1, style=dashed, color=darkseagreen4, label=disposable];
m28_9 -> m28_7  [key=0, style=bold, color=blue];
m28_9 -> m28_10  [key=0, style=solid];
m28_9 -> m28_5  [key=2, style=dotted];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_21  [key=2, style=dotted];
m28_16 -> m28_22  [key=2, style=dotted];
m28_16 -> m28_19  [key=1, style=dashed, color=darkseagreen4, label=selectSymbolsResult];
m28_15 -> m28_16  [key=0, style=solid];
m28_17 -> m28_18  [key=0, style=solid, color=green];
m28_17 -> m28_19  [key=0, style=solid];
m28_17 -> m28_23  [key=2, style=dotted];
m28_17 -> m28_13  [key=2, style=dotted];
m28_17 -> m28_21  [key=1, style=dashed, color=darkseagreen4, label=disposable];
m28_19 -> m28_20  [key=0, style=solid];
m28_19 -> m28_24  [key=2, style=dotted];
m28_19 -> m28_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_19 -> m28_6  [key=2, style=dotted];
m28_18 -> m28_20  [key=0, style=solid];
m28_18 -> m28_19  [key=0, style=solid, color=green];
m28_18 -> m28_23  [key=2, style=dotted, color=green];
m28_18 -> m28_24  [key=1, style=dashed, color=green, label="lambda expression"];
m28_20 -> m28_15  [key=0, style=bold, color=blue];
m28_20 -> m28_21  [key=0, style=solid];
m28_20 -> m28_14  [key=2, style=dotted];
m28_25 -> m28_26  [key=0, style=solid, color=green];
m28_26 -> m28_27  [key=0, style=solid];
m28_26 -> m28_28  [key=2, style=dotted];
m28_26 -> m28_24  [key=0, style=bold, color=blue];
m28_97 -> m28_98  [key=0, style=solid];
m28_98 -> m28_99  [key=0, style=solid];
m28_99 -> m28_97  [key=0, style=bold, color=blue];
m28_71 -> m28_100  [key=0, style=solid];
m28_71 -> m28_102  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m28_100 -> m28_101  [key=0, style=solid];
m28_100 -> m28_102  [key=1, style=dashed, color=darkseagreen4, label=handler];
m28_102 -> m28_103  [key=0, style=solid];
m28_102 -> m28_104  [key=2, style=dotted];
m28_101 -> m28_102  [key=0, style=solid];
m28_101 -> m28_103  [key=0, style=solid];
m28_103 -> m28_71  [key=0, style=bold, color=blue];
m28_79 -> m28_80  [key=0, style=solid];
m28_80 -> m28_81  [key=0, style=solid];
m28_80 -> m28_22  [key=2, style=dotted];
m28_81 -> m28_79  [key=0, style=bold, color=blue];
m28_22 -> m28_15  [key=0, style=bold, color=blue];
m28_72 -> m28_73  [key=0, style=solid];
m28_72 -> m28_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m28_73 -> m28_74  [key=0, style=solid];
m28_73 -> m28_76  [key=0, style=solid];
m28_73 -> m28_78  [key=2, style=dotted];
m28_74 -> m28_75  [key=0, style=solid];
m28_74 -> m28_70  [key=2, style=dotted];
m28_74 -> m28_71  [key=2, style=dotted];
m28_76 -> m28_77  [key=0, style=solid];
m28_75 -> m28_77  [key=0, style=solid];
m28_77 -> m28_72  [key=0, style=bold, color=blue];
m28_21 -> m28_22  [key=0, style=solid];
m28_21 -> m28_14  [key=2, style=dotted];
m28_82 -> m28_83  [key=0, style=solid];
m28_82 -> m28_89  [key=0, style=bold, color=crimson];
m28_82 -> m28_92  [key=0, style=bold, color=crimson];
m28_82 -> m28_84  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m28_82 -> m28_85  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m28_83 -> m28_84  [key=0, style=solid];
m28_83 -> m28_94  [key=2, style=dotted];
m28_83 -> m28_85  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
m28_83 -> m28_91  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
m28_89 -> m28_90  [key=0, style=solid];
m28_92 -> m28_87  [key=0, style=solid];
m28_84 -> m28_85  [key=0, style=solid];
m28_84 -> m28_21  [key=2, style=dotted];
m28_84 -> m28_87  [key=1, style=dashed, color=darkseagreen4, label=localStartTime];
m28_85 -> m28_86  [key=0, style=solid];
m28_85 -> m28_21  [key=2, style=dotted];
m28_85 -> m28_87  [key=1, style=dashed, color=darkseagreen4, label=localEndTime];
m28_91 -> m28_92  [key=0, style=solid];
m28_91 -> m28_87  [key=0, style=solid];
m28_91 -> m28_96  [key=2, style=dotted];
m28_87 -> m28_88  [key=0, style=solid];
m28_87 -> m28_93  [key=0, style=solid];
m28_87 -> m28_95  [key=2, style=dotted];
m28_87 -> m28_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_87 -> m28_89  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m28_87 -> m28_91  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m28_87 -> m28_92  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m28_86 -> m28_87  [key=0, style=solid];
m28_86 -> m28_88  [key=1, style=dashed, color=darkseagreen4, label=first];
m28_88 -> m28_89  [key=0, style=solid];
m28_88 -> m28_91  [key=0, style=solid];
m28_90 -> m28_87  [key=0, style=solid];
m28_93 -> m28_82  [key=0, style=bold, color=blue];
m28_105 -> m28_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_105 -> m28_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse"];
m28_106 -> m28_16  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>"];
m29_0 -> m29_1  [key=0, style=solid];
m29_0 -> m29_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.MarketHoursDatabase"];
m29_1 -> m29_2  [key=0, style=solid];
m29_2 -> m29_3  [key=0, style=solid];
m29_3 -> m29_0  [key=0, style=bold, color=blue];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> m29_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_7  [key=2, style=dotted];
m29_5 -> d78  [key=2, style=dotted];
m29_5 -> m29_9  [key=2, style=dotted];
m29_5 -> m29_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_6 -> m29_4  [key=0, style=bold, color=blue];
m29_10 -> m29_11  [key=0, style=solid];
m29_11 -> m29_12  [key=0, style=solid];
m29_11 -> m29_13  [key=2, style=dotted];
m29_12 -> m29_10  [key=0, style=bold, color=blue];
m29_14 -> m29_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory"];
m29_14 -> m29_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory"];
m29_14 -> m29_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory"];
m29_15 -> m29_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m30_50 -> m30_51  [key=0, style=solid];
m30_50 -> m30_55  [key=0, style=solid];
m30_89 -> m30_96  [key=0, style=solid];
m30_89 -> m30_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_89 -> m30_75  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.BaseData input"];
m30_89 -> m30_76  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal averagePrice"];
m30_89 -> m30_55  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryGetVolumeAndAveragePrice"];
m30_89 -> m30_59  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryGetVolumeAndAveragePrice"];
m30_89 -> m30_82  [key=0, style=bold, color=blue];
m30_96 -> m30_97  [key=0, style=solid];
m30_96 -> m30_98  [key=1, style=dashed, color=darkseagreen4, label=tick];
m30_96 -> m30_99  [key=1, style=dashed, color=darkseagreen4, label=tick];
m30_96 -> m30_104  [key=2, style=dotted];
m30_96 -> m30_105  [key=2, style=dotted];
m30_101 -> m30_102  [key=0, style=solid];
m30_101 -> m30_103  [key=1, style=dashed, color=darkseagreen4, label=tradeBar];
m30_101 -> m30_104  [key=1, style=dashed, color=darkseagreen4, label=tradeBar];
m30_101 -> m30_5  [key=2, style=dotted];
m30_97 -> m30_98  [key=0, style=solid];
m30_97 -> m30_101  [key=0, style=solid];
m30_97 -> m30_5  [key=2, style=dotted];
m30_97 -> m30_104  [key=2, style=dotted];
m30_98 -> m30_99  [key=0, style=solid];
m30_98 -> m30_104  [key=2, style=dotted];
m30_98 -> m30_105  [key=2, style=dotted];
m30_99 -> m30_100  [key=0, style=solid];
m30_99 -> m30_5  [key=2, style=dotted];
m30_99 -> m30_104  [key=2, style=dotted];
m30_100 -> m30_109  [key=0, style=solid];
m30_100 -> m30_101  [key=0, style=solid];
m30_100 -> m30_104  [key=2, style=dotted];
m30_100 -> m30_105  [key=2, style=dotted];
m30_102 -> m30_103  [key=0, style=solid];
m30_102 -> m30_106  [key=0, style=solid];
m30_102 -> m30_104  [key=2, style=dotted];
m30_102 -> m30_105  [key=2, style=dotted];
m30_103 -> m30_104  [key=0, style=solid];
m30_103 -> m30_90  [key=0, style=bold, color=blue];
m30_104 -> m30_105  [key=0, style=solid];
m30_106 -> m30_107  [key=0, style=solid];
m30_106 -> m30_109  [key=1, style=dashed, color=darkseagreen4, label="out decimal"];
m30_105 -> m30_109  [key=0, style=solid];
m30_107 -> m30_108  [key=0, style=solid];
m30_107 -> m30_109  [key=1, style=dashed, color=darkseagreen4, label="out decimal"];
m30_107 -> m30_113  [key=2, style=dotted];
m30_107 -> m30_112  [key=2, style=dotted];
m30_108 -> m30_109  [key=0, style=solid];
m30_108 -> m30_113  [key=2, style=dotted];
m30_108 -> m30_112  [key=2, style=dotted];
m30_109 -> m30_89  [key=0, style=bold, color=blue];
m30_109 -> m30_113  [key=2, style=dotted];
m30_109 -> m30_110  [key=0, style=solid];
m30_109 -> m30_112  [key=2, style=dotted];
m30_11 -> m30_12  [key=0, style=solid, color=green];
m30_11 -> m30_13  [key=1, style=dashed, color=darkseagreen4, label=orderSize];
m30_11 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label=orderSize];
m30_12 -> m30_13  [key=0, style=solid, color=green];
m30_12 -> m30_15  [key=2, style=dotted, color=green];
m30_12 -> m30_14  [key=0, style=solid];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_5  [key=2, style=dotted];
m30_13 -> m30_25  [key=2, style=dotted];
m30_13 -> m30_26  [key=2, style=dotted];
m30_14 -> m30_11  [key=0, style=bold, color=blue];
m30_14 -> m30_15  [key=0, style=solid];
m30_14 -> m30_19  [key=2, style=dotted];
m30_21 -> m30_51  [key=0, style=solid];
m30_21 -> m30_52  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m30_21 -> m30_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData"];
m30_21 -> m30_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData"];
m30_21 -> m30_5  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData data"];
m30_21 -> m30_4  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal unorderedQuantity"];
m30_21 -> m30_55  [key=3, color=darkorchid, style=bold, label="method methodReturn bool PriceIsFavorable"];
m30_21 -> m30_59  [key=3, color=darkorchid, style=bold, label="method methodReturn bool PriceIsFavorable"];
m30_21 -> m30_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_21 -> m30_22  [key=0, style=solid];
m30_21 -> m30_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_21 -> m30_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_51 -> m30_52  [key=0, style=solid];
m30_51 -> m30_54  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_51 -> m30_57  [key=1, style=dashed, color=darkseagreen4, label=vwap];
m30_51 -> m30_53  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_52 -> m30_53  [key=0, style=solid];
m30_52 -> m30_56  [key=0, style=solid];
m30_52 -> m30_54  [key=1, style=dashed, color=darkseagreen4, label=actual];
m30_53 -> m30_54  [key=0, style=solid];
m30_53 -> m30_67  [key=2, style=dotted];
m30_56 -> m30_57  [key=0, style=solid];
m30_56 -> m30_60  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_56 -> m30_61  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_56 -> m30_58  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_56 -> m30_59  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_54 -> m30_55  [key=0, style=solid];
m30_54 -> m30_59  [key=0, style=solid];
m30_54 -> m30_5  [key=2, style=dotted];
m30_54 -> m30_62  [key=0, style=solid];
m30_57 -> m30_58  [key=0, style=solid];
m30_57 -> m30_59  [key=0, style=solid];
m30_57 -> m30_60  [key=1, style=dashed, color=darkseagreen4, label=actual];
m30_57 -> m30_61  [key=1, style=dashed, color=darkseagreen4, label=actual];
m30_55 -> m30_60  [key=0, style=solid];
m30_55 -> m30_62  [key=0, style=solid];
m30_55 -> m30_56  [key=0, style=solid];
m30_59 -> m30_60  [key=0, style=solid];
m30_59 -> m30_67  [key=2, style=dotted];
m30_58 -> m30_60  [key=0, style=solid];
m30_58 -> m30_59  [key=0, style=solid];
m30_58 -> m30_67  [key=2, style=dotted];
m30_60 -> m30_21  [key=0, style=bold, color=blue];
m30_60 -> m30_5  [key=2, style=dotted];
m30_60 -> m30_61  [key=0, style=solid];
m30_63 -> m30_64  [key=0, style=solid];
m30_63 -> m30_68  [key=2, style=dotted];
m30_42 -> m30_5  [key=2, style=dotted];
m30_42 -> m30_43  [key=0, style=solid];
m30_227 -> m30_271  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_227 -> m30_272  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_227 -> m30_256  [key=0, style=solid];
m30_227 -> m30_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m30_227 -> m30_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m30_227 -> m30_259  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_227 -> m30_260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_227 -> m30_261  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_227 -> m30_263  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_227 -> m30_265  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_227 -> m30_268  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_227 -> m30_274  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_227 -> m30_275  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_271 -> m30_63  [key=2, style=dotted];
m30_271 -> m30_272  [key=0, style=solid];
m30_272 -> m30_63  [key=2, style=dotted];
m30_272 -> m30_273  [key=0, style=solid];
m30_272 -> m30_274  [key=0, style=solid];
m30_270 -> m30_63  [key=2, style=dotted];
m30_270 -> m30_271  [key=0, style=solid];
m30_270 -> m30_255  [key=2, style=dotted];
m30_273 -> m30_274  [key=0, style=solid];
m30_274 -> m30_275  [key=0, style=solid];
m30_274 -> m30_276  [key=0, style=solid];
m30_268 -> m30_270  [key=0, style=solid];
m30_268 -> m30_269  [key=0, style=solid];
m30_269 -> m30_270  [key=0, style=solid];
m30_256 -> m30_257  [key=0, style=solid];
m30_257 -> m30_258  [key=0, style=solid];
m30_258 -> m30_259  [key=0, style=solid];
m30_259 -> m30_260  [key=0, style=solid];
m30_262 -> m30_268  [key=0, style=solid];
m30_264 -> m30_268  [key=0, style=solid];
m30_266 -> m30_268  [key=0, style=solid];
m30_275 -> m30_276  [key=0, style=solid];
m30_260 -> m30_261  [key=0, style=solid];
m30_260 -> m30_263  [key=0, style=solid];
m30_261 -> m30_262  [key=0, style=solid];
m30_263 -> m30_264  [key=0, style=solid];
m30_263 -> m30_265  [key=0, style=solid];
m30_265 -> m30_266  [key=0, style=solid];
m30_265 -> m30_267  [key=0, style=solid];
m30_267 -> m30_276  [key=0, style=solid];
m30_267 -> m30_277  [key=2, style=dotted];
m30_276 -> m30_227  [key=0, style=bold, color=blue];
m30_243 -> m30_244  [key=0, style=solid];
m30_214 -> m30_238  [key=0, style=solid];
m30_214 -> m30_239  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m30_214 -> m30_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m30_214 -> m30_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TickType"];
m30_214 -> m30_242  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_214 -> m30_243  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_214 -> m30_244  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_214 -> m30_246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m30_214 -> m30_247  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m30_214 -> m30_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m30_214 -> m30_250  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m30_238 -> m30_239  [key=0, style=solid];
m30_239 -> m30_240  [key=0, style=solid];
m30_240 -> m30_241  [key=0, style=solid];
m30_241 -> m30_242  [key=0, style=solid];
m30_242 -> m30_243  [key=0, style=solid];
m30_244 -> m30_245  [key=0, style=solid];
m30_244 -> m30_252  [key=2, style=dotted];
m30_244 -> m30_253  [key=2, style=dotted];
m30_244 -> m30_254  [key=2, style=dotted];
m30_246 -> m30_247  [key=0, style=solid];
m30_247 -> m30_248  [key=0, style=solid];
m30_248 -> m30_249  [key=0, style=solid];
m30_248 -> m30_250  [key=0, style=solid];
m30_250 -> m30_251  [key=0, style=solid];
m30_250 -> m30_255  [key=2, style=dotted];
m30_245 -> m30_246  [key=0, style=solid];
m30_245 -> m30_252  [key=2, style=dotted];
m30_249 -> m30_250  [key=0, style=solid];
m30_251 -> m30_214  [key=0, style=bold, color=blue];
m30_31 -> m30_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_31 -> m30_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_31 -> m30_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_31 -> m30_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_31 -> m30_32  [key=0, style=solid];
m30_31 -> m30_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_31 -> m30_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_31 -> m30_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_31 -> m30_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_31 -> m30_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_31 -> m30_29  [key=0, style=solid];
m30_35 -> m30_5  [key=2, style=dotted];
m30_35 -> m30_36  [key=0, style=solid];
m30_35 -> m30_32  [key=0, style=solid];
m30_35 -> m30_41  [key=2, style=dotted];
m30_36 -> m30_5  [key=2, style=dotted];
m30_36 -> m30_37  [key=0, style=solid];
m30_36 -> m30_42  [key=2, style=dotted];
m30_37 -> m30_5  [key=2, style=dotted];
m30_37 -> m30_38  [key=0, style=solid];
m30_37 -> m30_32  [key=0, style=solid];
m30_37 -> m30_43  [key=2, style=dotted];
m30_38 -> m30_5  [key=2, style=dotted];
m30_38 -> m30_39  [key=0, style=solid];
m30_38 -> m30_28  [key=0, style=bold, color=blue];
m30_43 -> m30_5  [key=2, style=dotted];
m30_43 -> m30_44  [key=0, style=solid];
m30_44 -> m30_5  [key=2, style=dotted];
m30_44 -> m30_45  [key=0, style=solid];
m30_44 -> m30_46  [key=2, style=dotted];
m30_44 -> m30_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_45 -> m30_5  [key=2, style=dotted];
m30_45 -> m30_46  [key=0, style=solid];
m30_45 -> m30_41  [key=0, style=bold, color=blue];
m30_46 -> m30_5  [key=2, style=dotted];
m30_46 -> m30_47  [key=0, style=solid];
m30_47 -> m30_5  [key=2, style=dotted];
m30_47 -> m30_48  [key=0, style=solid];
m30_48 -> m30_5  [key=2, style=dotted];
m30_48 -> m30_49  [key=0, style=solid];
m30_48 -> m30_50  [key=2, style=dotted];
m30_48 -> m30_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>"];
m30_49 -> m30_5  [key=2, style=dotted];
m30_49 -> m30_62  [key=0, style=solid];
m30_49 -> m30_47  [key=0, style=bold, color=blue];
m30_61 -> m30_5  [key=2, style=dotted];
m30_61 -> m30_62  [key=0, style=solid];
m30_33 -> m30_35  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m30_33 -> m30_36  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m30_33 -> m30_37  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m30_33 -> m30_38  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m30_33 -> m30_34  [key=0, style=solid];
m30_33 -> m30_65  [key=2, style=dotted];
m30_33 -> m30_39  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m30_33 -> m30_41  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m30_33 -> m30_50  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m30_33 -> m30_52  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m30_33 -> m30_55  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m30_33 -> m30_57  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m30_34 -> m30_35  [key=0, style=solid];
m30_34 -> m30_66  [key=2, style=dotted];
m30_34 -> m30_32  [key=0, style=solid];
m30_34 -> m30_20  [key=2, style=dotted];
m30_34 -> m30_37  [key=1, style=dashed, color=darkseagreen4, label=data];
m30_39 -> m30_40  [key=0, style=solid];
m30_39 -> m30_50  [key=0, style=solid];
m30_40 -> m30_42  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_40 -> m30_43  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_40 -> m30_44  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_40 -> m30_45  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_40 -> m30_46  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_40 -> m30_47  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_40 -> m30_48  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_40 -> m30_49  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_40 -> m30_41  [key=0, style=solid];
m30_40 -> m30_61  [key=0, style=solid];
m30_40 -> m30_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m30_40 -> m30_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m30_40 -> m30_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m30_41 -> m30_42  [key=0, style=solid];
m30_41 -> m30_43  [key=1, style=dashed, color=darkseagreen4, label=actual];
m30_41 -> m30_44  [key=1, style=dashed, color=darkseagreen4, label=actual];
m30_41 -> m30_45  [key=1, style=dashed, color=darkseagreen4, label=actual];
m30_41 -> m30_46  [key=1, style=dashed, color=darkseagreen4, label=actual];
m30_41 -> m30_47  [key=1, style=dashed, color=darkseagreen4, label=actual];
m30_41 -> m30_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m30_41 -> m30_49  [key=1, style=dashed, color=darkseagreen4, label=actual];
m30_41 -> m30_28  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Algorithm.Framework.QCAlgorithmFramework algorithm"];
m30_32 -> m30_33  [key=0, style=solid];
m30_32 -> m30_63  [key=2, style=dotted];
m30_32 -> m30_64  [key=2, style=dotted];
m30_32 -> m30_38  [key=0, style=solid];
m30_32 -> m30_34  [key=1, style=dashed, color=darkseagreen4, label=removed];
m30_32 -> m30_35  [key=1, style=dashed, color=darkseagreen4, label=removed];
m30_32 -> m30_36  [key=1, style=dashed, color=darkseagreen4, label=removed];
m30_32 -> m30_37  [key=1, style=dashed, color=darkseagreen4, label=removed];
m30_62 -> m30_31  [key=0, style=bold, color=blue];
m30_62 -> m30_63  [key=0, style=solid];
m30_62 -> m30_67  [key=2, style=dotted];
m30_113 -> m30_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap"];
m30_113 -> m30_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap"];
m30_113 -> m30_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap"];
m30_113 -> m30_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap"];
m30_113 -> m30_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap"];
m30_113 -> m30_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap"];
m30_113 -> m30_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap"];
m30_113 -> m30_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap"];
m30_113 -> m30_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap"];
m30_28 -> m30_29  [key=0, style=solid];
m30_28 -> m30_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m30_28 -> m30_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m30_28 -> m30_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m30_28 -> m30_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m30_28 -> m30_21  [key=0, style=bold, color=blue];
m30_29 -> m30_30  [key=0, style=solid];
m30_29 -> m30_32  [key=0, style=solid];
m30_29 -> m30_31  [key=1, style=dashed, color=darkseagreen4, label=added];
m30_30 -> m30_31  [key=0, style=solid];
m30_30 -> m30_29  [key=0, style=solid];
m30_30 -> m30_39  [key=2, style=dotted];
m30_9 -> m30_6  [key=0, style=bold, color=blue];
m30_9 -> m30_10  [key=0, style=solid];
m30_9 -> m30_22  [key=2, style=dotted];
m30_8 -> m30_5  [key=2, style=dotted];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_14  [key=0, style=solid];
m30_8 -> m30_21  [key=2, style=dotted];
m30_6 -> m30_8  [key=1, style=dashed, color=darkseagreen4, label=data];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_2  [key=0, style=solid];
m30_6 -> m30_20  [key=2, style=dotted];
m30_6 -> m30_9  [key=1, style=dashed, color=darkseagreen4, label=data];
m30_6 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label=data];
m30_6 -> m30_13  [key=1, style=dashed, color=darkseagreen4, label=data];
m30_7 -> m30_8  [key=0, style=solid];
m30_7 -> m30_10  [key=2, style=dotted];
m30_7 -> m30_2  [key=0, style=solid];
m30_15 -> m30_16  [key=0, style=solid];
m30_15 -> m30_2  [key=0, style=solid];
m30_23 -> m30_5  [key=2, style=dotted];
m30_23 -> m30_24  [key=0, style=solid];
m30_19 -> m30_16  [key=0, style=bold, color=blue];
m30_4 -> m30_5  [key=0, style=solid];
m30_4 -> m30_19  [key=2, style=dotted];
m30_4 -> m30_8  [key=1, style=dashed, color=darkseagreen4, label=unorderedQuantity];
m30_4 -> m30_10  [key=1, style=dashed, color=darkseagreen4, label=unorderedQuantity];
m30_4 -> m30_13  [key=1, style=dashed, color=darkseagreen4, label=unorderedQuantity];
m30_235 -> m30_236  [key=0, style=solid];
m30_71 -> m30_72  [key=0, style=solid];
m30_71 -> m30_20  [key=2, style=dotted];
m30_72 -> m30_73  [key=0, style=solid];
m30_72 -> m30_76  [key=1, style=dashed, color=darkseagreen4, label=normalizeZipFilePath];
m30_72 -> m30_79  [key=2, style=dotted];
m30_73 -> m30_71  [key=0, style=bold, color=blue];
m30_73 -> m30_75  [key=1, style=dashed, color=darkseagreen4, label=indexOfHash];
m30_73 -> m30_74  [key=0, style=solid];
m30_73 -> m30_80  [key=2, style=dotted];
m30_217 -> m30_218  [key=0, style=solid];
m30_219 -> m30_217  [key=0, style=bold, color=blue];
m30_218 -> m30_219  [key=0, style=solid];
m30_218 -> m30_220  [key=2, style=dotted];
m30_218 -> m30_221  [key=2, style=dotted];
m30_236 -> m30_220  [key=2, style=dotted];
m30_236 -> m30_221  [key=2, style=dotted];
m30_236 -> m30_237  [key=0, style=solid];
m30_237 -> m30_235  [key=0, style=bold, color=blue];
m30_82 -> m30_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_82 -> m30_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_82 -> m30_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_82 -> m30_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_82 -> m30_83  [key=0, style=solid];
m30_88 -> m30_5  [key=2, style=dotted];
m30_88 -> m30_89  [key=0, style=solid];
m30_88 -> m30_75  [key=0, style=bold, color=blue];
m30_84 -> m30_88  [key=1, style=dashed, color=darkseagreen4, label=source];
m30_84 -> m30_85  [key=0, style=solid];
m30_84 -> m30_78  [key=2, style=dotted];
m30_85 -> m30_88  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_85 -> m30_86  [key=0, style=solid];
m30_85 -> m30_87  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_86 -> m30_88  [key=0, style=solid];
m30_86 -> m30_87  [key=0, style=solid];
m30_87 -> m30_88  [key=0, style=solid];
m30_87 -> m30_87  [key=1, style=dashed, color=darkseagreen4, label=expected];
m30_83 -> m30_84  [key=0, style=solid];
m30_83 -> m30_64  [key=2, style=dotted];
m30_120 -> m30_121  [key=0, style=solid];
m30_125 -> m30_141  [key=2, style=dotted];
m30_125 -> m30_126  [key=0, style=solid];
m30_125 -> m30_114  [key=2, style=dotted];
m30_127 -> m30_141  [key=2, style=dotted];
m30_127 -> m30_128  [key=0, style=solid];
m30_127 -> m30_114  [key=2, style=dotted];
m30_129 -> m30_141  [key=2, style=dotted];
m30_129 -> m30_130  [key=0, style=solid];
m30_129 -> m30_114  [key=2, style=dotted];
m30_131 -> m30_141  [key=2, style=dotted];
m30_131 -> m30_132  [key=0, style=solid];
m30_131 -> m30_114  [key=2, style=dotted];
m30_133 -> m30_141  [key=2, style=dotted];
m30_133 -> m30_134  [key=0, style=solid];
m30_133 -> m30_114  [key=2, style=dotted];
m30_135 -> m30_141  [key=2, style=dotted];
m30_135 -> m30_136  [key=0, style=solid];
m30_135 -> m30_114  [key=2, style=dotted];
m30_137 -> m30_141  [key=2, style=dotted];
m30_137 -> m30_138  [key=0, style=solid];
m30_137 -> m30_114  [key=2, style=dotted];
m30_139 -> m30_141  [key=2, style=dotted];
m30_139 -> m30_140  [key=0, style=solid];
m30_139 -> m30_114  [key=2, style=dotted];
m30_124 -> m30_125  [key=0, style=solid];
m30_124 -> m30_124  [key=3, color=darkorchid, style=bold, label="Local variable string invalidPath"];
m30_126 -> m30_127  [key=0, style=solid];
m30_126 -> m30_126  [key=3, color=darkorchid, style=bold, label="Local variable string nonExistantPath"];
m30_128 -> m30_129  [key=0, style=solid];
m30_128 -> m30_128  [key=3, color=darkorchid, style=bold, label="Local variable string notAPath"];
m30_130 -> m30_131  [key=0, style=solid];
m30_130 -> m30_130  [key=3, color=darkorchid, style=bold, label="Local variable string emptyPath"];
m30_132 -> m30_133  [key=0, style=solid];
m30_132 -> m30_132  [key=3, color=darkorchid, style=bold, label="Local variable string nullPath"];
m30_134 -> m30_135  [key=0, style=solid];
m30_134 -> m30_134  [key=3, color=darkorchid, style=bold, label="Local variable string optionsTradePath"];
m30_136 -> m30_137  [key=0, style=solid];
m30_136 -> m30_136  [key=3, color=darkorchid, style=bold, label="Local variable string optionsOpenInterestPath"];
m30_138 -> m30_139  [key=0, style=solid];
m30_138 -> m30_138  [key=3, color=darkorchid, style=bold, label="Local variable string optionsQuotePath"];
m30_123 -> m30_124  [key=0, style=solid];
m30_122 -> m30_123  [key=0, style=solid];
m30_121 -> m30_122  [key=0, style=solid];
m30_140 -> m30_120  [key=0, style=bold, color=blue];
m30_25 -> m30_5  [key=2, style=dotted];
m30_25 -> m30_26  [key=0, style=solid];
m30_25 -> m30_30  [key=2, style=dotted];
m30_27 -> m30_5  [key=2, style=dotted];
m30_27 -> m30_28  [key=0, style=solid];
m30_27 -> m30_30  [key=2, style=dotted];
m30_22 -> m30_23  [key=0, style=solid];
m30_22 -> m30_25  [key=1, style=dashed, color=darkseagreen4, label=line];
m30_22 -> m30_27  [key=1, style=dashed, color=darkseagreen4, label=line];
m30_22 -> m30_29  [key=2, style=dotted];
m30_24 -> m30_25  [key=0, style=solid];
m30_24 -> m30_26  [key=0, style=solid];
m30_26 -> m30_27  [key=0, style=solid];
m30_26 -> m30_28  [key=0, style=solid];
m30_0 -> m30_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_0 -> m30_1  [key=0, style=solid];
m30_0 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m30_0 -> m30_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m30_0 -> m30_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m30_2 -> m30_5  [key=2, style=dotted];
m30_2 -> m30_3  [key=0, style=solid];
m30_2 -> m30_17  [key=0, style=solid];
m30_2 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label=target];
m30_2 -> m30_14  [key=1, style=dashed, color=darkseagreen4, label=target];
m30_2 -> m30_16  [key=1, style=dashed, color=darkseagreen4, label=target];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_4  [key=2, style=dotted];
m30_1 -> m30_18  [key=2, style=dotted];
m30_3 -> m30_0  [key=0, style=bold, color=blue];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_6  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_16 -> m30_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_16 -> m30_17  [key=0, style=solid];
m30_16 -> m30_2  [key=0, style=solid];
m30_16 -> m30_27  [key=2, style=dotted];
m30_18 -> m30_5  [key=2, style=dotted];
m30_18 -> m30_19  [key=0, style=solid];
m30_17 -> m30_18  [key=0, style=solid];
m30_17 -> m30_20  [key=2, style=dotted];
m30_17 -> m30_0  [key=0, style=bold, color=blue];
m30_90 -> m30_91  [key=0, style=solid];
m30_95 -> m30_5  [key=2, style=dotted];
m30_95 -> m30_96  [key=0, style=solid];
m30_95 -> m30_104  [key=2, style=dotted];
m30_91 -> m30_95  [key=1, style=dashed, color=darkseagreen4, label=tickType];
m30_91 -> m30_92  [key=0, style=solid];
m30_91 -> m30_96  [key=1, style=dashed, color=darkseagreen4, label=tickType];
m30_94 -> m30_95  [key=0, style=solid];
m30_94 -> m30_101  [key=1, style=dashed, color=darkseagreen4, label=tradeBarType];
m30_94 -> m30_102  [key=1, style=dashed, color=darkseagreen4, label=tradeBarType];
m30_92 -> m30_97  [key=1, style=dashed, color=darkseagreen4, label=openInterestType];
m30_92 -> m30_93  [key=0, style=solid];
m30_92 -> m30_98  [key=1, style=dashed, color=darkseagreen4, label=openInterestType];
m30_92 -> m30_94  [key=2, style=dotted];
m30_92 -> m30_95  [key=2, style=dotted];
m30_93 -> m30_99  [key=1, style=dashed, color=darkseagreen4, label=quoteBarType];
m30_93 -> m30_94  [key=0, style=solid];
m30_93 -> m30_100  [key=1, style=dashed, color=darkseagreen4, label=quoteBarType];
m30_93 -> m30_91  [key=0, style=bold, color=blue];
m30_78 -> m30_88  [key=0, style=solid];
m30_78 -> m30_90  [key=2, style=dotted];
m30_112 -> m30_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData"];
m30_112 -> m30_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData"];
m30_112 -> m30_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData"];
m30_112 -> m30_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData"];
m30_79 -> m30_80  [key=0, style=solid];
m30_79 -> m30_83  [key=0, style=solid];
m30_69 -> m30_74  [key=0, style=solid];
m30_69 -> m30_70  [key=0, style=solid];
m30_69 -> m30_78  [key=2, style=dotted];
m30_74 -> m30_69  [key=0, style=bold, color=blue];
m30_74 -> m30_76  [key=0, style=solid];
m30_74 -> m30_75  [key=0, style=solid];
m30_80 -> m30_81  [key=0, style=solid];
m30_142 -> m30_143  [key=0, style=solid];
m30_148 -> m30_5  [key=2, style=dotted];
m30_148 -> m30_149  [key=0, style=solid];
m30_149 -> m30_5  [key=2, style=dotted];
m30_149 -> m30_150  [key=0, style=solid];
m30_150 -> m30_5  [key=2, style=dotted];
m30_150 -> m30_151  [key=0, style=solid];
m30_151 -> m30_5  [key=2, style=dotted];
m30_151 -> m30_152  [key=0, style=solid];
m30_151 -> m30_196  [key=2, style=dotted];
m30_152 -> m30_5  [key=2, style=dotted];
m30_152 -> m30_153  [key=0, style=solid];
m30_152 -> m30_197  [key=2, style=dotted];
m30_155 -> m30_5  [key=2, style=dotted];
m30_155 -> m30_156  [key=0, style=solid];
m30_156 -> m30_5  [key=2, style=dotted];
m30_156 -> m30_157  [key=0, style=solid];
m30_157 -> m30_5  [key=2, style=dotted];
m30_157 -> m30_158  [key=0, style=solid];
m30_158 -> m30_5  [key=2, style=dotted];
m30_158 -> m30_159  [key=0, style=solid];
m30_158 -> m30_196  [key=2, style=dotted];
m30_159 -> m30_5  [key=2, style=dotted];
m30_159 -> m30_160  [key=0, style=solid];
m30_159 -> m30_197  [key=2, style=dotted];
m30_162 -> m30_5  [key=2, style=dotted];
m30_162 -> m30_163  [key=0, style=solid];
m30_163 -> m30_5  [key=2, style=dotted];
m30_163 -> m30_164  [key=0, style=solid];
m30_164 -> m30_5  [key=2, style=dotted];
m30_164 -> m30_165  [key=0, style=solid];
m30_165 -> m30_5  [key=2, style=dotted];
m30_165 -> m30_166  [key=0, style=solid];
m30_165 -> m30_196  [key=2, style=dotted];
m30_166 -> m30_5  [key=2, style=dotted];
m30_166 -> m30_167  [key=0, style=solid];
m30_169 -> m30_5  [key=2, style=dotted];
m30_169 -> m30_170  [key=0, style=solid];
m30_170 -> m30_5  [key=2, style=dotted];
m30_170 -> m30_171  [key=0, style=solid];
m30_171 -> m30_5  [key=2, style=dotted];
m30_171 -> m30_172  [key=0, style=solid];
m30_172 -> m30_5  [key=2, style=dotted];
m30_172 -> m30_173  [key=0, style=solid];
m30_172 -> m30_196  [key=2, style=dotted];
m30_173 -> m30_5  [key=2, style=dotted];
m30_173 -> m30_174  [key=0, style=solid];
m30_173 -> m30_197  [key=2, style=dotted];
m30_176 -> m30_5  [key=2, style=dotted];
m30_176 -> m30_177  [key=0, style=solid];
m30_177 -> m30_5  [key=2, style=dotted];
m30_177 -> m30_178  [key=0, style=solid];
m30_178 -> m30_5  [key=2, style=dotted];
m30_178 -> m30_179  [key=0, style=solid];
m30_179 -> m30_5  [key=2, style=dotted];
m30_179 -> m30_180  [key=0, style=solid];
m30_179 -> m30_196  [key=2, style=dotted];
m30_180 -> m30_5  [key=2, style=dotted];
m30_180 -> m30_181  [key=0, style=solid];
m30_183 -> m30_5  [key=2, style=dotted];
m30_183 -> m30_184  [key=0, style=solid];
m30_184 -> m30_5  [key=2, style=dotted];
m30_184 -> m30_185  [key=0, style=solid];
m30_185 -> m30_5  [key=2, style=dotted];
m30_185 -> m30_186  [key=0, style=solid];
m30_186 -> m30_5  [key=2, style=dotted];
m30_186 -> m30_187  [key=0, style=solid];
m30_186 -> m30_196  [key=2, style=dotted];
m30_187 -> m30_5  [key=2, style=dotted];
m30_187 -> m30_188  [key=0, style=solid];
m30_187 -> m30_197  [key=2, style=dotted];
m30_190 -> m30_5  [key=2, style=dotted];
m30_190 -> m30_191  [key=0, style=solid];
m30_191 -> m30_5  [key=2, style=dotted];
m30_191 -> m30_192  [key=0, style=solid];
m30_192 -> m30_5  [key=2, style=dotted];
m30_192 -> m30_193  [key=0, style=solid];
m30_193 -> m30_5  [key=2, style=dotted];
m30_193 -> m30_194  [key=0, style=solid];
m30_193 -> m30_196  [key=2, style=dotted];
m30_194 -> m30_5  [key=2, style=dotted];
m30_194 -> m30_195  [key=0, style=solid];
m30_194 -> m30_197  [key=2, style=dotted];
m30_147 -> m30_148  [key=0, style=solid];
m30_147 -> m30_149  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_147 -> m30_150  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m30_147 -> m30_151  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_147 -> m30_152  [key=1, style=dashed, color=darkseagreen4, label=date];
m30_147 -> m30_141  [key=2, style=dotted];
m30_147 -> m30_113  [key=2, style=dotted];
m30_153 -> m30_153  [key=3, color=darkorchid, style=bold, label="Local variable string mixedPathSeperators"];
m30_153 -> m30_154  [key=0, style=solid];
m30_154 -> m30_155  [key=0, style=solid];
m30_154 -> m30_156  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_154 -> m30_157  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m30_154 -> m30_158  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_154 -> m30_159  [key=1, style=dashed, color=darkseagreen4, label=date];
m30_154 -> m30_141  [key=2, style=dotted];
m30_154 -> m30_113  [key=2, style=dotted];
m30_160 -> m30_160  [key=3, color=darkorchid, style=bold, label="Local variable string longRelativePath"];
m30_160 -> m30_161  [key=0, style=solid];
m30_161 -> m30_162  [key=0, style=solid];
m30_161 -> m30_163  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_161 -> m30_164  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m30_161 -> m30_165  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_161 -> m30_166  [key=1, style=dashed, color=darkseagreen4, label=date];
m30_161 -> m30_141  [key=2, style=dotted];
m30_161 -> m30_113  [key=2, style=dotted];
m30_167 -> m30_167  [key=3, color=darkorchid, style=bold, label="Local variable string shortRelativePath"];
m30_167 -> m30_168  [key=0, style=solid];
m30_168 -> m30_169  [key=0, style=solid];
m30_168 -> m30_170  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_168 -> m30_171  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m30_168 -> m30_172  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_168 -> m30_173  [key=1, style=dashed, color=darkseagreen4, label=date];
m30_168 -> m30_141  [key=2, style=dotted];
m30_168 -> m30_113  [key=2, style=dotted];
m30_174 -> m30_174  [key=3, color=darkorchid, style=bold, label="Local variable string dailyEquitiesPath"];
m30_174 -> m30_175  [key=0, style=solid];
m30_175 -> m30_176  [key=0, style=solid];
m30_175 -> m30_177  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_175 -> m30_178  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m30_175 -> m30_179  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_175 -> m30_180  [key=1, style=dashed, color=darkseagreen4, label=date];
m30_175 -> m30_141  [key=2, style=dotted];
m30_175 -> m30_113  [key=2, style=dotted];
m30_181 -> m30_181  [key=3, color=darkorchid, style=bold, label="Local variable string minuteEquitiesPath"];
m30_181 -> m30_182  [key=0, style=solid];
m30_182 -> m30_183  [key=0, style=solid];
m30_182 -> m30_184  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_182 -> m30_185  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m30_182 -> m30_186  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_182 -> m30_187  [key=1, style=dashed, color=darkseagreen4, label=date];
m30_182 -> m30_141  [key=2, style=dotted];
m30_182 -> m30_113  [key=2, style=dotted];
m30_188 -> m30_188  [key=3, color=darkorchid, style=bold, label="Local variable string cfdPath"];
m30_188 -> m30_189  [key=0, style=solid];
m30_189 -> m30_190  [key=0, style=solid];
m30_189 -> m30_191  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_189 -> m30_192  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m30_189 -> m30_193  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m30_189 -> m30_194  [key=1, style=dashed, color=darkseagreen4, label=date];
m30_189 -> m30_141  [key=2, style=dotted];
m30_189 -> m30_113  [key=2, style=dotted];
m30_146 -> m30_147  [key=0, style=solid];
m30_146 -> m30_146  [key=3, color=darkorchid, style=bold, label="Local variable string customPath"];
m30_145 -> m30_146  [key=0, style=solid];
m30_143 -> m30_144  [key=0, style=solid];
m30_144 -> m30_145  [key=0, style=solid];
m30_195 -> m30_142  [key=0, style=bold, color=blue];
m30_64 -> m30_65  [key=0, style=solid];
m30_64 -> m30_69  [key=2, style=dotted];
m30_65 -> m30_66  [key=0, style=solid];
m30_65 -> m30_70  [key=2, style=dotted];
m30_65 -> m30_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_66 -> m30_40  [key=0, style=bold, color=blue];
m30_115 -> m30_116  [key=0, style=solid];
m30_116 -> m30_5  [key=2, style=dotted];
m30_116 -> m30_117  [key=0, style=solid];
m30_116 -> m30_119  [key=2, style=dotted];
m30_117 -> m30_5  [key=2, style=dotted];
m30_117 -> m30_118  [key=0, style=solid];
m30_117 -> m30_119  [key=2, style=dotted];
m30_118 -> m30_115  [key=0, style=bold, color=blue];
m30_68 -> m30_69  [key=0, style=solid];
m30_68 -> m30_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_76 -> m30_5  [key=2, style=dotted];
m30_76 -> m30_77  [key=0, style=solid];
m30_70 -> m30_76  [key=1, style=dashed, color=darkseagreen4, label=normalizedSourcePath];
m30_70 -> m30_71  [key=0, style=solid];
m30_70 -> m30_79  [key=2, style=dotted];
m30_70 -> m30_73  [key=1, style=dashed, color=darkseagreen4, label=normalizedSourcePath];
m30_70 -> m30_75  [key=1, style=dashed, color=darkseagreen4, label=normalizedSourcePath];
m30_75 -> m30_76  [key=0, style=solid];
m30_75 -> m30_75  [key=1, style=dashed, color=darkseagreen4, label=normalizedSourcePath];
m30_75 -> m30_81  [key=2, style=dotted];
m30_75 -> m30_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_75 -> m30_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_75 -> m30_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_75 -> m30_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m30_77 -> m30_68  [key=0, style=bold, color=blue];
m30_77 -> m30_78  [key=0, style=solid];
m30_77 -> m30_79  [key=0, style=solid];
m30_77 -> m30_89  [key=2, style=dotted];
m30_77 -> m30_83  [key=1, style=dashed, color=darkseagreen4, label=volume];
m30_77 -> m30_84  [key=1, style=dashed, color=darkseagreen4, label=volume];
m30_5 -> m30_6  [key=0, style=solid];
m30_10 -> m30_11  [key=0, style=solid];
m30_10 -> m30_23  [key=2, style=dotted];
m30_10 -> m30_24  [key=2, style=dotted];
m30_10 -> m30_214  [key=3, color=darkorchid, style=bold, label="Field variable QuantConnect.TickType TickType"];
m30_67 -> m30_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m30_67 -> m30_203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m30_67 -> m30_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m30_67 -> m30_205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m30_67 -> m30_51  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Market.IBar expected"];
m30_67 -> m30_52  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Market.IBar actual"];
m30_67 -> m30_198  [key=0, style=solid];
m30_67 -> m30_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m30_202 -> m30_5  [key=2, style=dotted];
m30_202 -> m30_203  [key=0, style=solid];
m30_203 -> m30_5  [key=2, style=dotted];
m30_203 -> m30_204  [key=0, style=solid];
m30_204 -> m30_5  [key=2, style=dotted];
m30_204 -> m30_205  [key=0, style=solid];
m30_205 -> m30_5  [key=2, style=dotted];
m30_205 -> m30_206  [key=0, style=solid];
m30_200 -> m30_202  [key=0, style=solid];
m30_200 -> m30_201  [key=0, style=solid];
m30_201 -> m30_202  [key=0, style=solid];
m30_201 -> m30_207  [key=2, style=dotted];
m30_198 -> m30_200  [key=0, style=solid];
m30_198 -> m30_199  [key=0, style=solid];
m30_199 -> m30_206  [key=0, style=solid];
m30_206 -> m30_67  [key=0, style=bold, color=blue];
m30_208 -> m30_209  [key=0, style=solid];
m30_210 -> m30_214  [key=2, style=dotted];
m30_210 -> m30_211  [key=0, style=solid];
m30_210 -> m30_213  [key=2, style=dotted];
m30_210 -> d78  [key=2, style=dotted];
m30_210 -> m30_216  [key=2, style=dotted];
m30_210 -> m30_217  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_209 -> m30_210  [key=0, style=solid];
m30_209 -> m30_212  [key=2, style=dotted];
m30_211 -> m30_208  [key=0, style=bold, color=blue];
m30_110 -> m30_114  [key=2, style=dotted];
m30_110 -> m30_112  [key=2, style=dotted];
m30_110 -> m30_111  [key=0, style=solid];
m30_110 -> m30_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel"];
m30_110 -> m30_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel"];
m30_110 -> m30_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel"];
m30_110 -> m30_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel"];
m30_110 -> m30_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel"];
m30_110 -> m30_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel"];
m30_110 -> m30_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel"];
m30_110 -> m30_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel"];
m30_110 -> m30_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel"];
m30_110 -> m30_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel"];
m30_110 -> m30_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel"];
m30_111 -> m30_106  [key=0, style=bold, color=blue];
m30_111 -> m30_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m30_81 -> m30_82  [key=0, style=solid];
m30_222 -> m30_223  [key=0, style=solid];
m30_224 -> m30_213  [key=2, style=dotted];
m30_224 -> d78  [key=2, style=dotted];
m30_224 -> m30_216  [key=2, style=dotted];
m30_224 -> m30_227  [key=2, style=dotted];
m30_224 -> m30_225  [key=0, style=solid];
m30_224 -> m30_228  [key=2, style=dotted];
m30_224 -> m30_229  [key=2, style=dotted];
m30_224 -> m30_230  [key=2, style=dotted];
m30_224 -> m30_231  [key=2, style=dotted];
m30_224 -> m30_232  [key=2, style=dotted];
m30_224 -> m30_233  [key=2, style=dotted];
m30_224 -> m30_234  [key=2, style=dotted];
m30_224 -> m30_235  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_223 -> m30_224  [key=0, style=solid];
m30_223 -> m30_226  [key=2, style=dotted];
m30_225 -> m30_222  [key=0, style=bold, color=blue];
m30_278 -> m30_238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_278 -> m30_239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_278 -> m30_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_278 -> m30_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_278 -> m30_242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_278 -> m30_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_278 -> m30_244  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_278 -> m30_246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_278 -> m30_247  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_278 -> m30_250  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_278 -> m30_245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_278 -> m30_249  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m30_279 -> m30_271  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_272  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_270  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_256  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_259  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_266  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m30_279 -> m30_275  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
}
