digraph  {
n59 [label="QuantConnect.Indicators.KeltnerChannels", span=""];
n0 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(int, decimal, QuantConnect.Indicators.MovingAverageType)", label="Entry QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(int, decimal, QuantConnect.Indicators.MovingAverageType)", span="68-68"];
n1 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(int, decimal, QuantConnect.Indicators.MovingAverageType)", label="Exit QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(int, decimal, QuantConnect.Indicators.MovingAverageType)", span="68-68"];
n2 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", label="Entry QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="80-80"];
n3 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", label="_k = k", span="83-83"];
n4 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", label="AverageTrueRange = new AverageTrueRange(name + ''_AverageTrueRange'', period, MovingAverageType.Simple)", span="86-86"];
n5 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", label="MiddleBand = movingAverageType.AsIndicator(name + ''_MiddleBand'', period)", span="87-87"];
n6 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", label="LowerBand = new FunctionalIndicator<TradeBar>(name + ''_LowerBand'',\r\n                input => ComputeLowerBand(),\r\n                lowerBand => MiddleBand.IsReady,\r\n                () => MiddleBand.Reset()\r\n                )", span="90-94"];
n7 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", label="UpperBand = new FunctionalIndicator<TradeBar>(name + ''_UpperBand'',\r\n                input => ComputeUpperBand(),\r\n                upperBand => MiddleBand.IsReady,\r\n                () => MiddleBand.Reset()\r\n                )", span="97-101"];
n9 [cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="56-56"];
n10 [cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", span="75-75"];
n11 [cluster="QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>, System.Action)", label="Entry QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>, System.Action)", span="55-55"];
n8 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", label="Exit QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="80-80"];
n12 [cluster="lambda expression", label="Entry lambda expression", span="91-91"];
n13 [cluster="lambda expression", label="ComputeLowerBand()", span="91-91"];
n14 [cluster="lambda expression", label="Exit lambda expression", span="91-91"];
n15 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", label="Entry QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", span="146-146"];
n16 [cluster="lambda expression", label="Entry lambda expression", span="92-92"];
n17 [cluster="lambda expression", label="MiddleBand.IsReady", span="92-92"];
n18 [cluster="lambda expression", label="Exit lambda expression", span="92-92"];
n19 [cluster="lambda expression", label="Entry lambda expression", span="93-93"];
n20 [cluster="lambda expression", label="MiddleBand.Reset()", span="93-93"];
n21 [cluster="lambda expression", label="Exit lambda expression", span="93-93"];
n22 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="102-102"];
n23 [cluster="lambda expression", label="Entry lambda expression", span="98-98"];
n24 [cluster="lambda expression", label="ComputeUpperBand()", span="98-98"];
n25 [cluster="lambda expression", label="Exit lambda expression", span="98-98"];
n26 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", label="Entry QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", span="154-154"];
n27 [cluster="lambda expression", label="Entry lambda expression", span="99-99"];
n28 [cluster="lambda expression", label="MiddleBand.IsReady", span="99-99"];
n29 [cluster="lambda expression", label="Exit lambda expression", span="99-99"];
n30 [cluster="lambda expression", label="Entry lambda expression", span="100-100"];
n31 [cluster="lambda expression", label="MiddleBand.Reset()", span="100-100"];
n32 [cluster="lambda expression", label="Exit lambda expression", span="100-100"];
n33 [cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", label="Entry QuantConnect.Indicators.KeltnerChannels.Reset()", span="115-115"];
n34 [cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", label="AverageTrueRange.Reset()", span="117-117"];
n35 [cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", label="MiddleBand.Reset()", span="118-118"];
n36 [cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", label="UpperBand.Reset()", span="119-119"];
n37 [cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", label="LowerBand.Reset()", span="120-120"];
n38 [cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", label="base.Reset()", span="121-121"];
n39 [cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", label="Exit QuantConnect.Indicators.KeltnerChannels.Reset()", span="115-115"];
n40 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="Entry QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="129-129"];
n41 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="AverageTrueRange.Update(input)", span="131-131"];
n42 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="var typicalPrice = (input.High + input.Low + input.Close)/3m", span="133-133"];
n43 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="MiddleBand.Update(input.Time, typicalPrice)", span="134-134"];
n44 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", color=red, community=0, label="0: Console.WriteLine(input.Time.ToString(''yyyymmdd'') + ''\t'' + typicalPrice.SmartRounding() + ''\t'' + MiddleBand.Current.Value.SmartRounding())", span="135-135"];
n45 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="LowerBand.Update(input)", span="138-138"];
n46 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="UpperBand.Update(input)", span="139-139"];
n49 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
n50 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="36-36"];
n51 [cluster="System.DateTime.ToString(string)", label="Entry System.DateTime.ToString(string)", span="0-0"];
n52 [cluster="decimal.SmartRounding()", label="Entry decimal.SmartRounding()", span="173-173"];
n53 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
n47 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="return MiddleBand;", span="140-140"];
n48 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="Exit QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="129-129"];
n54 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", label="return MiddleBand.IsReady ? MiddleBand - AverageTrueRange*_k : new decimal(0.0);", span="148-148"];
n55 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", label="Exit QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", span="146-146"];
n56 [cluster="decimal.Decimal(double)", label="Entry decimal.Decimal(double)", span="0-0"];
n57 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", label="return MiddleBand.IsReady ? MiddleBand + AverageTrueRange*_k : new decimal(0.0);", span="156-156"];
n58 [cluster="QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", label="Exit QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", span="154-154"];
m0_6 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m0_32 [cluster="QuantConnect.Data.Auxiliary.FactorFile.Read(string, string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.FactorFile.Read(string, string)", span="48-48"];
m0_23 [cluster="QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", span="124-124"];
m0_0 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", span="35-35"];
m0_1 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", span="35-35"];
m0_7 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", span="56-56"];
m0_8 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="FactorFile factorFile", span="58-58"];
m0_9 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="_cache.TryGetValue(symbol, out factorFile)", span="59-59"];
m0_11 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="var market = symbol.ID.Market", span="64-64"];
m0_14 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return GetFactorFile(symbol, symbol.Value, market);", span="70-70"];
m0_15 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", color=green, community=0, file="LocalDiskFactorFileProvider.cs", label="0: var mapFile = mapFileResolver.ResolveMapFile(symbol.Value, symbol.ID.Date)", span="73-73"];
m0_17 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return GetFactorFile(symbol, symbol.Value, market);", span="76-76"];
m0_18 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return GetFactorFile(symbol, mapFile.Permtick, market);", span="79-79"];
m0_10 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return factorFile;", span="61-61"];
m0_12 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="var mapFileResolver = _mapFileProvider.Get(market)", span="67-67"];
m0_13 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="mapFileResolver == null", span="68-68"];
m0_16 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="mapFile.IsNullOrEmpty()", span="74-74"];
m0_19 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", span="56-56"];
m0_33 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m0_21 [cluster="QuantConnect.Interfaces.IMapFileProvider.Get(string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Interfaces.IMapFileProvider.Get(string)", span="33-33"];
m0_31 [cluster="QuantConnect.Data.Auxiliary.FactorFile.HasScalingFactors(string, string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.FactorFile.HasScalingFactors(string, string)", span="86-86"];
m0_2 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", span="45-45"];
m0_3 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="_mapFileProvider = mapFileProvider", span="47-47"];
m0_4 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="_cache = new ConcurrentDictionary<Symbol, FactorFile>()", span="48-48"];
m0_5 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", span="45-45"];
m0_22 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", span="85-85"];
m0_25 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="FactorFile.HasScalingFactors(permtick, market)", span="87-87"];
m0_26 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="var factorFile = FactorFile.Read(permtick, market)", span="89-89"];
m0_27 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="_cache.AddOrUpdate(symbol, factorFile, (s, c) => factorFile)", span="90-90"];
m0_29 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="return null;", span="94-94"];
m0_28 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="return factorFile;", span="91-91"];
m0_30 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", span="85-85"];
m0_24 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m0_20 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m0_34 [cluster="lambda expression", file="LocalDiskFactorFileProvider.cs", label="Entry lambda expression", span="90-90"];
m0_35 [cluster="lambda expression", file="LocalDiskFactorFileProvider.cs", label=factorFile, span="90-90"];
m0_36 [cluster="lambda expression", file="LocalDiskFactorFileProvider.cs", label="Exit lambda expression", span="90-90"];
m0_37 [file="LocalDiskFactorFileProvider.cs", label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", span=""];
m0_38 [file="LocalDiskFactorFileProvider.cs", label=factorFile, span=""];
m1_79 [cluster="Unk.Save", file="MapFileResolverTests.cs", label="Entry Unk.Save", span=""];
m1_86 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label="var entry = zipStream.GetNextEntry()", span="216-216"];
m1_81 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label=config, span=""];
m1_82 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label=lastSourceRefreshTime, span=""];
m1_83 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label=sourceFactory, span=""];
m1_90 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label="data.Add(entry.Name, buffer.GetString())", span="225-225"];
m1_93 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label="return data;", span="240-240"];
m1_84 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label="QuantConnect.Interfaces.IDataProvider", span=""];
m1_85 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label=frontier, span=""];
m1_89 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="222-222"];
m1_91 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label=Exception, span="236-236"];
m1_87 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label="entry != null", span="218-218"];
m1_88 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label="var buffer = new byte[entry.Size]", span="221-221"];
m1_92 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label="Log.Error(err)", span="238-238"];
m1_94 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.UnzipData(byte[])", span="201-201"];
m1_17 [cluster="ZipOutputStream.cstr", file="MapFileResolverTests.cs", label="Entry ZipOutputStream.cstr", span=""];
m1_45 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="return success;", span="127-127"];
m1_288 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="617-617"];
m1_284 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="617-617"];
m1_285 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="MapFileResolverTests.cs", label="var entryReader = new StreamReader(entry.OpenReader())", span="619-619"];
m1_287 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="MapFileResolverTests.cs", label="yield return entryReader.ReadLine();", span="623-623"];
m1_286 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="MapFileResolverTests.cs", label="!entryReader.EndOfStream", span="621-621"];
m1_80 [cluster="ZipFile.cstr", file="MapFileResolverTests.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", span=""];
m1_158 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs", label="stream.PutNextEntry(entry)", span="354-354"];
m1_155 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.Zip(string, string, string)", span="349-349"];
m1_156 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="351-351"];
m1_157 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs", label="var entry = new ZipEntry(zipEntry)", span="353-353"];
m1_160 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs", label="var dataReader = new MemoryStream(Encoding.Default.GetBytes(data))", span="356-356"];
m1_163 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs", label="stream.Write(buffer, 0, sourceBytes)", span="362-362"];
m1_159 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs", label="var buffer = new byte[4096]", span="355-355"];
m1_162 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs", label="sourceBytes = dataReader.Read(buffer, 0, buffer.Length)", span="361-361"];
m1_161 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs", label="int sourceBytes", span="358-358"];
m1_164 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs", label="sourceBytes > 0", span="364-364"];
m1_165 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.Zip(string, string, string)", span="349-349"];
m1_335 [cluster="string.LastIndexOf(char)", file="MapFileResolverTests.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m1_51 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="var writer = new StreamWriter(stream)", span="142-142"];
m1_148 [cluster="System.IO.File.OpenRead(string)", file="MapFileResolverTests.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m1_19 [cluster="lambda expression", file="MapFileResolverTests.cs", label="var utcNow = _timeProvider.GetUtcNow()", span="62-62"];
m1_47 [cluster="lambda expression", file="MapFileResolverTests.cs", label="Entry lambda expression", span="91-95"];
m1_137 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="stream.PutNextEntry(entry)", span="312-312"];
m1_133 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.Zip(string, string, string, bool)", span="303-303"];
m1_134 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="var buffer = new byte[4096]", span="307-307"];
m1_135 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="var stream = new ZipOutputStream(File.Create(destination))", span="308-308"];
m1_136 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="var entry = new ZipEntry(zipEntryName)", span="311-311"];
m1_138 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="var fs = File.OpenRead(source)", span="314-314"];
m1_143 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label=deleteOriginal, span="327-327"];
m1_144 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="File.Delete(source)", span="329-329"];
m1_140 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="sourceBytes = fs.Read(buffer, 0, buffer.Length)", span="319-319"];
m1_141 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="stream.Write(buffer, 0, sourceBytes)", span="320-320"];
m1_139 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="int sourceBytes", span="316-316"];
m1_142 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="sourceBytes > 0", span="322-322"];
m1_145 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label=Exception, span="332-332"];
m1_146 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="Log.Error(err)", span="334-334"];
m1_147 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.Zip(string, string, string, bool)", span="303-303"];
m1_23 [cluster="lambda expression", color=green, community=0, file="MapFileResolverTests.cs", label="0: lastSourceRefreshTime = utcNow", span="69-69"];
m1_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", span="106-106"];
m1_98 [cluster="byte[].GetString(System.Text.Encoding)", file="MapFileResolverTests.cs", label="Entry byte[].GetString(System.Text.Encoding)", span="84-84"];
m1_64 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs", label="File.Exists(path)", span="171-171"];
m1_37 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="sourceBytes = ms.Read(buffer, 0, buffer.Length)", span="110-110"];
m1_257 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="MapFileResolverTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_303 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m1_270 [cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs", label="return ReadLinesImpl(filename, firstEntryOnly: true).Single().Value;", span="591-591"];
m1_266 [cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.ReadLines(string)", span="581-581"];
m1_267 [cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs", label="!File.Exists(filename)", span="583-583"];
m1_268 [cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs", label="Log.Error(''Compression.ReadFirstZipEntry(): File does not exist: '' + filename)", span="585-585"];
m1_269 [cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs", label="return Enumerable.Empty<string>();", span="586-586"];
m1_271 [cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs", label=Exception, span="593-593"];
m1_272 [cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs", label="Log.Error(err)", span="595-595"];
m1_273 [cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs", label="return Enumerable.Empty<string>();", span="597-597"];
m1_274 [cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.ReadLines(string)", span="581-581"];
m1_372 [cluster="System.IO.MemoryStream.ToArray()", file="MapFileResolverTests.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m1_21 [cluster="lambda expression", file="MapFileResolverTests.cs", label="utcNow - lastSourceRefreshTime < minimumTimeBetweenCalls", span="64-64"];
m1_14 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="MapFileResolverTests.cs", label="return false;", span="77-77"];
m1_340 [cluster="System.Collections.Generic.List<T>.Add(T)", file="MapFileResolverTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_103 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs", label="var entry = archive.CreateEntry(zipEntryName)", span="254-254"];
m1_100 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.ZipBytes(byte[], string)", span="249-249"];
m1_101 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs", label="var memoryStream = new MemoryStream()", span="251-251"];
m1_105 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs", label="entryStream.Write(bytes, 0, bytes.Length)", span="257-257"];
m1_102 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs", label="var archive = new ZipArchive(memoryStream, ZipArchiveMode.Create, true)", span="252-252"];
m1_106 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs", label="return memoryStream.GetBuffer();", span="260-260"];
m1_104 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs", label="var entryStream = entry.Open()", span="255-255"];
m1_107 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.ZipBytes(byte[], string)", span="249-249"];
m1_304 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", span="665-665"];
m1_305 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="zipFile = ZipFile.Read(zipstream)", span="667-667"];
m1_306 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="var entry = zipFile.Entries.FirstOrDefault()", span="672-672"];
m1_307 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="entry != null", span="674-674"];
m1_308 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="return entry.OpenReader();", span="676-676"];
m1_309 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label=Exception, span="679-679"];
m1_311 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="return null;", span="684-684"];
m1_310 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="Log.Error(err)", span="681-681"];
m1_312 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", span="665-665"];
m1_242 [cluster="System.IO.StreamReader.Close()", file="MapFileResolverTests.cs", label="Entry System.IO.StreamReader.Close()", span="0-0"];
m1_348 [cluster="Unk.CreateInputTarArchive", file="MapFileResolverTests.cs", label="Entry Unk.CreateInputTarArchive", span=""];
m1_388 [cluster="System.Math.Max(int, int)", file="MapFileResolverTests.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m1_27 [cluster="lambda expression", color=green, community=0, file="MapFileResolverTests.cs", label="0: SourceRequiresFastForward(source)", span="76-76"];
m1_78 [cluster="System.TimeSpan.FromSeconds(double)", file="MapFileResolverTests.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m1_52 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="var entry = new ZipEntry(zipEntry)", span="144-144"];
m1_334 [cluster="System.Collections.Generic.List<T>.List()", file="MapFileResolverTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_350 [cluster="System.IO.Stream.Close()", file="MapFileResolverTests.cs", label="Entry System.IO.Stream.Close()", span="0-0"];
m1_175 [cluster="Unk.CreateFromDirectory", file="MapFileResolverTests.cs", label="Entry Unk.CreateFromDirectory", span=""];
m1_18 [cluster="System.IO.File.Create(string)", file="MapFileResolverTests.cs", label="Entry System.IO.File.Create(string)", span="0-0"];
m1_245 [cluster="lambda expression", file="MapFileResolverTests.cs", label="zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0", span="501-501"];
m1_244 [cluster="lambda expression", file="MapFileResolverTests.cs", label="Entry lambda expression", span="501-501"];
m1_246 [cluster="lambda expression", file="MapFileResolverTests.cs", label="Exit lambda expression", span="501-501"];
m1_26 [cluster="Unk.Close", color=green, community=0, file="MapFileResolverTests.cs", label="1: Entry Unk.Close", span=""];
m1_24 [cluster="Unk.CloseEntry", color=green, community=0, file="MapFileResolverTests.cs", label="0: Entry Unk.CloseEntry", span=""];
m1_25 [cluster="Unk.Finish", color=green, community=0, file="MapFileResolverTests.cs", label="2: Entry Unk.Finish", span=""];
m1_29 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="var success = true", span="90-90"];
m1_30 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="var buffer = new byte[4096]", span="91-91"];
m1_31 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="96-96"];
m1_28 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", span="88-88"];
m1_32 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", color=green, community=0, file="MapFileResolverTests.cs", label="0: filenamesAndData", span="98-98"];
m1_33 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", color=green, community=0, file="MapFileResolverTests.cs", label="1: var entry = new ZipEntry(file.Key)", span="101-101"];
m1_34 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="stream.PutNextEntry(entry)", span="103-103"];
m1_20 [cluster="ZipEntry.cstr", file="MapFileResolverTests.cs", label="Entry ZipEntry.cstr", span=""];
m1_22 [cluster="Unk.PutNextEntry", file="MapFileResolverTests.cs", label="Entry Unk.PutNextEntry", span=""];
m1_48 [cluster="System.IO.MemoryStream.Read(byte[], int, int)", file="MapFileResolverTests.cs", label="Entry System.IO.MemoryStream.Read(byte[], int, int)", span="0-0"];
m1_49 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="137-137"];
m1_50 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="141-141"];
m1_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs", label="var config = request.Configuration", span="50-50"];
m1_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", span="37-37"];
m1_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", file="MapFileResolverTests.cs", label="_timeProvider = timeProvider", span="39-39"];
m1_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="48-48"];
m1_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs", label="var frontier = Ref.Create(DateTime.MinValue)", span="54-54"];
m1_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", span="37-37"];
m1_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs", label="var sourceFactory = (BaseData) ObjectActivator.GetActivator(config.Type).Invoke(new object[] {config.Type})", span="56-56"];
m1_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", color=green, community=0, file="MapFileResolverTests.cs", label="0: var refresher = new RefreshEnumerator<BaseData>(() =>\r\n            {\r\n                // rate limit the refresh of this enumerator stack\r\n                var utcNow = _timeProvider.GetUtcNow();\r\n                var minimumTimeBetweenCalls = GetMinimumTimeBetweenCalls(config.Increment);\r\n                if (utcNow - lastSourceRefreshTime < minimumTimeBetweenCalls)\r\n                {\r\n                    return Enumerable.Empty<BaseData>().GetEnumerator();\r\n                }\r\n\r\n                lastSourceRefreshTime = utcNow;\r\n                var localDate = utcNow.ConvertFromUtc(config.ExchangeTimeZone).Date;\r\n                var source = sourceFactory.GetSource(config, localDate, true);\r\n\r\n                // fetch the new source and enumerate the data source reader\r\n                var enumerator = EnumerateDataSourceReader(config, dataProvider, frontier, source, localDate);\r\n\r\n                if (SourceRequiresFastForward(source))\r\n                {\r\n                    // apply fast forward logic for file transport mediums\r\n                    var maximumDataAge = GetMaximumDataAge(config.Increment);\r\n                    enumerator = new FastForwardEnumerator(enumerator, _timeProvider, config.ExchangeTimeZone, maximumDataAge);\r\n                }\r\n                else\r\n                {\r\n                    // rate limit calls to this enumerator stack\r\n                    enumerator = new RateLimitEnumerator<BaseData>(enumerator, _timeProvider, minimumTimeBetweenCalls);\r\n                }\r\n\r\n                if (source.Format == FileFormat.Collection)\r\n                {\r\n                    // unroll collections into individual data points after fast forward/rate limiting applied\r\n                    enumerator = enumerator.SelectMany(data =>\r\n                    {\r\n                        var collection = data as BaseDataCollection;\r\n                        return collection?.Data.GetEnumerator() ?? new List<BaseData> {data}.GetEnumerator();\r\n                    });\r\n                }\r\n\r\n                return enumerator;\r\n            })", span="59-99"];
m1_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", color=green, community=0, file="MapFileResolverTests.cs", label="0: var timeZoneOffsetProvider = new TimeZoneOffsetProvider(request.Security.Exchange.TimeZone, request.StartTimeUtc, request.EndTimeUtc)", span="102-102"];
m1_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", color=green, community=0, file="MapFileResolverTests.cs", label="0: return new FrontierAwareEnumerator(refresher, _timeProvider, timeZoneOffsetProvider);", span="103-103"];
m1_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="48-48"];
m1_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs", label="var lastSourceRefreshTime = DateTime.MinValue", span="55-55"];
m1_12 [cluster="QuantConnect.Util.Ref.Create<T>(T)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Util.Ref.Create<T>(T)", span="100-100"];
m1_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", span="38-38"];
m1_13 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="49-49"];
m1_16 [cluster="QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", file="MapFileResolverTests.cs", label="Entry QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", span="51-51"];
m1_390 [cluster="QuantConnect.Compression.ValidateZip(string)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.ValidateZip(string)", span="840-840"];
m1_391 [cluster="QuantConnect.Compression.ValidateZip(string)", file="MapFileResolverTests.cs", label="var zip = new ICSharpCode.SharpZipLib.Zip.ZipFile(path)", span="842-842"];
m1_392 [cluster="QuantConnect.Compression.ValidateZip(string)", file="MapFileResolverTests.cs", label="return zip.TestArchive(true);", span="844-844"];
m1_393 [cluster="QuantConnect.Compression.ValidateZip(string)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.ValidateZip(string)", span="840-840"];
m1_199 [cluster="System.IO.DirectoryInfo.Create()", file="MapFileResolverTests.cs", label="Entry System.IO.DirectoryInfo.Create()", span="0-0"];
m1_371 [cluster="KeyValuePair<string, byte[]>.cstr", file="MapFileResolverTests.cs", label="Entry KeyValuePair<string, byte[]>.cstr", span=""];
m1_44 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="success = false", span="125-125"];
m1_122 [cluster="System.IO.Path.GetFileNameWithoutExtension(string)", file="MapFileResolverTests.cs", label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0"];
m1_112 [cluster="System.IO.MemoryStream.GetBuffer()", file="MapFileResolverTests.cs", label="Entry System.IO.MemoryStream.GetBuffer()", span="0-0"];
m1_99 [cluster="Unk.Add", file="MapFileResolverTests.cs", label="Entry Unk.Add", span=""];
m1_150 [cluster="System.IO.File.Delete(string)", file="MapFileResolverTests.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m1_96 [cluster="ZipInputStream.cstr", file="MapFileResolverTests.cs", label="Entry ZipInputStream.cstr", span=""];
m1_241 [cluster="Unk.Dispose", file="MapFileResolverTests.cs", label="Entry Unk.Dispose", span=""];
m1_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMaximumDataAge(System.TimeSpan)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMaximumDataAge(System.TimeSpan)", span="152-152"];
m1_38 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="stream.Write(buffer, 0, sourceBytes)", span="111-111"];
m1_40 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="stream.Finish()", span="118-118"];
m1_198 [cluster="System.IO.FileInfo.FileInfo(string)", file="MapFileResolverTests.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m1_214 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m1_36 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="int sourceBytes", span="107-107"];
m1_71 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs", label=Exception, span="188-188"];
m1_72 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs", label="Log.Error(err)", span="190-190"];
m1_176 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.Unzip(string, string, bool)", span="397-397"];
m1_177 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="!File.Exists(zip)", span="399-399"];
m1_179 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="!overwrite", span="403-403"];
m1_180 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="System.IO.Compression.ZipFile.ExtractToDirectory(zip, directory)", span="405-405"];
m1_181 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="var archive = new ZipArchive(File.OpenRead(zip))", span="409-409"];
m1_184 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="var filepath = Path.Combine(directory, file.FullName)", span="415-415"];
m1_178 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="return false;", span="399-399"];
m1_182 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="archive.Entries", span="411-411"];
m1_183 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="file.Name == ''''", span="414-414"];
m1_191 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="return true;", span="427-427"];
m1_190 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="file.ExtractToFile(outputFile.FullName, true)", span="422-422"];
m1_185 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="OS.IsLinux", span="416-416"];
m1_186 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="filepath = filepath.Replace(@''\'', ''/'')", span="416-416"];
m1_187 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="var outputFile = new FileInfo(filepath)", span="417-417"];
m1_188 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="!outputFile.Directory.Exists", span="418-418"];
m1_189 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="outputFile.Directory.Create()", span="420-420"];
m1_192 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label=Exception, span="429-429"];
m1_193 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="Log.Error(err)", span="431-431"];
m1_194 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="return false;", span="432-432"];
m1_195 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.Unzip(string, string, bool)", span="397-397"];
m1_154 [cluster="System.IO.Path.GetFileName(string)", file="MapFileResolverTests.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m1_39 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="sourceBytes > 0", span="113-113"];
m1_247 [cluster="Unk.Compare", file="MapFileResolverTests.cs", label="Entry Unk.Compare", span=""];
m1_43 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs", label="Log.Error(err)", span="124-124"];
m1_76 [cluster="System.IO.File.Exists(string)", file="MapFileResolverTests.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m1_294 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="var entry = zipStream.GetNextEntry()", span="643-643"];
m1_290 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", span="631-631"];
m1_291 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="StreamReader reader = null", span="633-633"];
m1_293 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="var zipStream = new ZipInputStream(zipstream)", span="640-640"];
m1_292 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="MemoryStream file", span="637-637"];
m1_296 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="645-645"];
m1_295 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="var buffer = new byte[entry.Size]", span="644-644"];
m1_297 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="file = new MemoryStream(buffer)", span="648-648"];
m1_298 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="reader = new StreamReader(file)", span="652-652"];
m1_299 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label=Exception, span="654-654"];
m1_301 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="return reader;", span="659-659"];
m1_300 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="Log.Error(err)", span="656-656"];
m1_302 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", span="631-631"];
m1_97 [cluster="Unk.GetNextEntry", file="MapFileResolverTests.cs", label="Entry Unk.GetNextEntry", span=""];
m1_113 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.UnGZip(string, string)", span="268-268"];
m1_114 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs", label="var dataBuffer = new byte[4096]", span="271-271"];
m1_115 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs", label="var newFileOutput = Path.Combine(targetDirectory, Path.GetFileNameWithoutExtension(gzipFileName))", span="272-272"];
m1_116 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs", label="Stream fileStream = new FileStream(gzipFileName, FileMode.Open, FileAccess.Read)", span="273-273"];
m1_119 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs", label="StreamUtils.Copy(gzipStream, fileOutput, dataBuffer)", span="277-277"];
m1_118 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs", label="var fileOutput = File.Create(newFileOutput)", span="275-275"];
m1_120 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs", label="return newFileOutput;", span="279-279"];
m1_117 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs", label="var gzipStream = new GZipInputStream(fileStream)", span="274-274"];
m1_121 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.UnGZip(string, string)", span="268-268"];
m1_68 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs", label="var zip = new ZipFile(path)", span="181-181"];
m1_110 [cluster="Unk.CreateEntry", file="MapFileResolverTests.cs", label="Entry Unk.CreateEntry", span=""];
m1_275 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="MapFileResolverTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m1_289 [cluster="System.IO.StreamReader.ReadLine()", file="MapFileResolverTests.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m1_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", span="106-106"];
m1_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", file="MapFileResolverTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", span="30-30"];
m1_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.SourceRequiresFastForward(QuantConnect.Data.SubscriptionDataSource)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.SourceRequiresFastForward(QuantConnect.Data.SubscriptionDataSource)", span="141-141"];
m1_46 [cluster="System.Collections.Generic.IEnumerator<T>.SelectMany<T, TResult>(System.Func<T, System.Collections.Generic.IEnumerator<TResult>>)", file="MapFileResolverTests.cs", label="Entry System.Collections.Generic.IEnumerator<T>.SelectMany<T, TResult>(System.Func<T, System.Collections.Generic.IEnumerator<TResult>>)", span="59-59"];
m1_124 [cluster="System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", file="MapFileResolverTests.cs", label="Entry System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", span="0-0"];
m1_394 [cluster="Unk.TestArchive", file="MapFileResolverTests.cs", label="Entry Unk.TestArchive", span=""];
m1_351 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.UnTarGzFiles(string, string)", span="765-765"];
m1_352 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs", label="var inStream = File.OpenRead(source)", span="767-767"];
m1_355 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs", label="tarArchive.ExtractContents(destination)", span="770-770"];
m1_353 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs", label="var gzipStream = new GZipInputStream(inStream)", span="768-768"];
m1_358 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs", label="inStream.Close()", span="773-773"];
m1_354 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(gzipStream)", span="769-769"];
m1_357 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs", label="gzipStream.Close()", span="772-772"];
m1_356 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs", label="tarArchive.Close()", span="771-771"];
m1_359 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.UnTarGzFiles(string, string)", span="765-765"];
m1_341 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.UnTarFiles(string, string)", span="751-751"];
m1_342 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs", label="var inStream = File.OpenRead(source)", span="753-753"];
m1_344 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs", label="tarArchive.ExtractContents(destination)", span="755-755"];
m1_343 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(inStream)", span="754-754"];
m1_346 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs", label="inStream.Close()", span="757-757"];
m1_345 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs", label="tarArchive.Close()", span="756-756"];
m1_347 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.UnTarFiles(string, string)", span="751-751"];
m1_239 [cluster="StreamReader.cstr", file="MapFileResolverTests.cs", label="Entry StreamReader.cstr", span=""];
m1_207 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="var entry = new ZipEntry(Path.GetFileName(file))", span="454-454"];
m1_201 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="439-439"];
m1_202 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="var zipStream = new ZipOutputStream(File.Create(destination))", span="443-443"];
m1_204 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label=files, span="446-446"];
m1_203 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="var buffer = new byte[4096]", span="445-445"];
m1_208 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="zipStream.PutNextEntry(entry)", span="455-455"];
m1_210 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="StreamUtils.Copy(fstream, zipStream, buffer)", span="458-458"];
m1_205 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="!File.Exists(file)", span="448-448"];
m1_211 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label=Exception, span="463-463"];
m1_206 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="Log.Trace(''ZipFiles(): File does not exist: '' + file)", span="450-450"];
m1_209 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="var fstream = File.OpenRead(file)", span="456-456"];
m1_212 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="Log.Error(err)", span="465-465"];
m1_213 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="439-439"];
m1_349 [cluster="Unk.ExtractContents", file="MapFileResolverTests.cs", label="Entry Unk.ExtractContents", span=""];
m1_238 [cluster="Unk.FirstOrDefault", file="MapFileResolverTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m1_62 [cluster="System.IO.TextWriter.WriteLine(string)", file="MapFileResolverTests.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m1_389 [cluster="string.Substring(int)", file="MapFileResolverTests.cs", label="Entry string.Substring(int)", span="0-0"];
m1_125 [cluster="GZipInputStream.cstr", file="MapFileResolverTests.cs", label="Entry GZipInputStream.cstr", span=""];
m1_337 [cluster="ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", file="MapFileResolverTests.cs", label="Entry ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", span=""];
m1_277 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs", label=firstEntryOnly, span="604-604"];
m1_258 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.ReadLinesImpl(string, bool)", span="600-600"];
m1_276 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs", label="var zip = ZipFile.Read(filename)", span="602-602"];
m1_279 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="607-607"];
m1_280 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs", label="yield break;", span="608-608"];
m1_282 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="612-612"];
m1_278 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs", label="var entry = zip[0]", span="606-606"];
m1_281 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs", label=zip, span="610-610"];
m1_283 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.ReadLinesImpl(string, bool)", span="600-600"];
m1_123 [cluster="System.IO.Path.Combine(string, string)", file="MapFileResolverTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m1_75 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.ZipCreateAppendData(string, string, string)", span="167-167"];
m1_111 [cluster="Unk.Open", file="MapFileResolverTests.cs", label="Entry Unk.Open", span=""];
m1_366 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs", label="tar.CopyEntryContents(output)", span="793-793"];
m1_360 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="782-782"];
m1_361 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs", label="var tar = new TarInputStream(isTarGz ? (Stream)new GZipInputStream(stream) : stream)", span="784-784"];
m1_367 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs", label="yield return new KeyValuePair<string, byte[]>(entry.Name, output.ToArray());", span="794-794"];
m1_362 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs", label="TarEntry entry", span="786-786"];
m1_363 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs", label="(entry = tar.GetNextEntry()) != null", span="787-787"];
m1_364 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs", label="entry.IsDirectory", span="789-789"];
m1_365 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs", label="var output = new MemoryStream()", span="791-791"];
m1_368 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="782-782"];
m1_265 [cluster="Unk.ReadZipEntry", file="MapFileResolverTests.cs", label="Entry Unk.ReadZipEntry", span=""];
m1_240 [cluster="Unk.OpenReader", file="MapFileResolverTests.cs", label="Entry Unk.OpenReader", span=""];
m1_339 [cluster="Unk.GetInputStream", file="MapFileResolverTests.cs", label="Entry Unk.GetInputStream", span=""];
m1_324 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="var entryFileName = Path.GetFileName(zipEntry.Name)", span="715-715"];
m1_313 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.UnzipToFolder(string)", span="692-692"];
m1_314 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="var files = new List<string>()", span="695-695"];
m1_315 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="var slash = zipFile.LastIndexOf(Path.DirectorySeparatorChar)", span="696-696"];
m1_318 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="outFolder = zipFile.Substring(0, slash)", span="700-700"];
m1_320 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="var fs = File.OpenRead(zipFile)", span="706-706"];
m1_329 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="files.Add(fullZipToPath)", span="725-725"];
m1_332 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="return files;", span="743-743"];
m1_316 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="var outFolder = ''''", span="697-697"];
m1_317 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="slash > 0", span="698-698"];
m1_328 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="var fullZipToPath = Path.Combine(outFolder, entryFileName)", span="722-722"];
m1_319 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="ICSharpCode.SharpZipLib.Zip.ZipFile zf = null", span="702-702"];
m1_321 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="zf = new ICSharpCode.SharpZipLib.Zip.ZipFile(fs)", span="707-707"];
m1_322 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label=zf, span="709-709"];
m1_327 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="var zipStream = zf.GetInputStream(zipEntry)", span="719-719"];
m1_323 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="!zipEntry.IsFile", span="712-712"];
m1_325 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="entryFileName == null", span="716-716"];
m1_326 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="var buffer = new byte[4096]", span="718-718"];
m1_331 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="StreamUtils.Copy(zipStream, streamWriter, buffer)", span="731-731"];
m1_330 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="var streamWriter = File.Create(fullZipToPath)", span="729-729"];
m1_333 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.UnzipToFolder(string)", span="692-692"];
m1_338 [cluster="Unk.GetFileName", file="MapFileResolverTests.cs", label="Entry Unk.GetFileName", span=""];
m1_53 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="stream.PutNextEntry(entry)", span="145-145"];
m1_55 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="writer.WriteLine(line)", span="148-148"];
m1_58 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="Log.Error(err)", span="155-155"];
m1_54 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label=lines, span="146-146"];
m1_56 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="return true;", span="151-151"];
m1_57 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label=Exception, span="153-153"];
m1_60 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="137-137"];
m1_59 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs", label="return false;", span="156-156"];
m1_223 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="var entry = zip.FirstOrDefault(x => zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0)", span="501-501"];
m1_218 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="489-489"];
m1_219 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="StreamReader reader = null", span="491-491"];
m1_221 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="File.Exists(filename)", span="496-496"];
m1_222 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="zip = new ZipFile(filename)", span="500-500"];
m1_233 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="Log.Error(''Data.UnZip(2): File doesn't exist: '' + filename)", span="519-519"];
m1_235 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="Log.Error(err, ''File: '' + filename)", span="524-524"];
m1_220 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="zip = null", span="492-492"];
m1_236 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="return reader;", span="526-526"];
m1_229 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="zip != null", span="513-513"];
m1_230 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="zip.Dispose()", span="513-513"];
m1_224 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="entry == null", span="502-502"];
m1_226 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="reader = new StreamReader(entry.OpenReader())", span="508-508"];
m1_225 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="return null;", span="505-505"];
m1_227 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label=Exception, span="510-510"];
m1_234 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label=Exception, span="522-522"];
m1_231 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="reader != null", span="514-514"];
m1_232 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="reader.Close()", span="514-514"];
m1_228 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="Log.Error(err, ''Inner try/catch'')", span="512-512"];
m1_237 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="489-489"];
m1_108 [cluster="System.IO.MemoryStream.MemoryStream()", file="MapFileResolverTests.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m1_166 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.ZipDirectory(string, string, bool)", span="376-376"];
m1_167 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs", label="File.Exists(destination)", span="380-380"];
m1_168 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs", label="File.Delete(destination)", span="380-380"];
m1_169 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs", label="System.IO.Compression.ZipFile.CreateFromDirectory(directory, destination, CompressionLevel.Fastest, includeRootInZip)", span="381-381"];
m1_170 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs", label="return true;", span="382-382"];
m1_171 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs", label=Exception, span="384-384"];
m1_172 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs", label="Log.Error(err)", span="386-386"];
m1_173 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs", label="return false;", span="387-387"];
m1_174 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.ZipDirectory(string, string, bool)", span="376-376"];
m1_264 [cluster="KeyValuePair<string, IEnumerable<string>>.cstr", file="MapFileResolverTests.cs", label="Entry KeyValuePair<string, IEnumerable<string>>.cstr", span=""];
m1_262 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="MapFileResolverTests.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="571-571"];
m1_259 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.Unzip(System.IO.Stream)", span="565-565"];
m1_260 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="MapFileResolverTests.cs", label="var zip = ZipFile.Read(stream)", span="567-567"];
m1_261 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="MapFileResolverTests.cs", label=zip, span="569-569"];
m1_263 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.Unzip(System.IO.Stream)", span="565-565"];
m1_151 [cluster="QuantConnect.Compression.Zip(string, bool)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.Zip(string, bool)", span="344-344"];
m1_152 [cluster="QuantConnect.Compression.Zip(string, bool)", file="MapFileResolverTests.cs", label="return Zip(textPath, Path.GetFileName(textPath), deleteOriginal);", span="346-346"];
m1_153 [cluster="QuantConnect.Compression.Zip(string, bool)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.Zip(string, bool)", span="344-344"];
m1_197 [cluster="Unk.Combine", file="MapFileResolverTests.cs", label="Entry Unk.Combine", span=""];
m1_336 [cluster="string.Substring(int, int)", file="MapFileResolverTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m1_65 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs", label="var zip = ZipFile.Read(path)", span="173-173"];
m1_243 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m1_73 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs", label="return false;", span="191-191"];
m1_126 [cluster="Unk.Copy", file="MapFileResolverTests.cs", label="Entry Unk.Copy", span=""];
m1_215 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="476-476"];
m1_216 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="return Unzip(filename, null, out zip);", span="478-478"];
m1_217 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="476-476"];
m1_370 [cluster="Unk.CopyEntryContents", file="MapFileResolverTests.cs", label="Entry Unk.CopyEntryContents", span=""];
m1_248 [cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.Unzip(string)", span="540-540"];
m1_249 [cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs", label="!File.Exists(filename)", span="542-542"];
m1_250 [cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs", label="Log.Error(''Compression.Unzip(): File does not exist: '' + filename)", span="544-544"];
m1_252 [cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs", label="return ReadLinesImpl(filename);", span="550-550"];
m1_251 [cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs", label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="545-545"];
m1_253 [cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs", label=Exception, span="552-552"];
m1_254 [cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs", label="Log.Error(err)", span="554-554"];
m1_255 [cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs", label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="556-556"];
m1_256 [cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.Unzip(string)", span="540-540"];
m1_369 [cluster="TarInputStream.cstr", file="MapFileResolverTests.cs", label="Entry TarInputStream.cstr", span=""];
m1_132 [cluster="string.Replace(string, string)", file="MapFileResolverTests.cs", label="Entry string.Replace(string, string)", span="0-0"];
m1_129 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="MapFileResolverTests.cs", label="Zip(textPath, zipPath, zipEntryName, deleteOriginal)", span="292-292"];
m1_127 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.Zip(string, string, bool)", span="289-289"];
m1_128 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="MapFileResolverTests.cs", label="var zipPath = textPath.Replace(''.csv'', ''.zip'').Replace(''.txt'', ''.zip'')", span="291-291"];
m1_130 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="MapFileResolverTests.cs", label="return zipPath;", span="293-293"];
m1_131 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.Zip(string, string, bool)", span="289-289"];
m1_74 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs", label="return true;", span="193-193"];
m1_382 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="tarEntry.IsDirectory", span="823-823"];
m1_373 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Compression.UnTar(string)", span="805-805"];
m1_374 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="var gzip = (source.Substring(Math.Max(0, source.Length - 6)) == ''tar.gz'')", span="808-808"];
m1_385 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="yield return new KeyValuePair<string, byte[]>(tarEntry.Name, stream.ToArray());", span="828-828"];
m1_375 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="var file = File.OpenRead(source)", span="810-810"];
m1_377 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label=gzip, span="814-814"];
m1_376 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="var tarIn = new TarInputStream(file)", span="812-812"];
m1_378 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="var gzipStream = new GZipInputStream(file)", span="816-816"];
m1_381 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="(tarEntry = tarIn.GetNextEntry()) != null", span="821-821"];
m1_384 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="tarIn.CopyEntryContents(stream)", span="827-827"];
m1_386 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="tarIn.Close()", span="831-831"];
m1_380 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="TarEntry tarEntry", span="820-820"];
m1_379 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="tarIn = new TarInputStream(gzipStream)", span="817-817"];
m1_383 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="var stream = new MemoryStream()", span="825-825"];
m1_387 [cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Compression.UnTar(string)", span="805-805"];
m1_95 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MapFileResolverTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_149 [cluster="System.IO.FileStream.Read(byte[], int, int)", file="MapFileResolverTests.cs", label="Entry System.IO.FileStream.Read(byte[], int, int)", span="0-0"];
m1_69 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs", label="zip.AddEntry(entry, data)", span="183-183"];
m1_70 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs", label="zip.Save()", span="184-184"];
m1_200 [cluster="Unk.ExtractToFile", file="MapFileResolverTests.cs", label="Entry Unk.ExtractToFile", span=""];
m1_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="132-132"];
m1_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="MapFileResolverTests.cs", label="return SubscriptionDataSourceReader.ForSource(source, dataCacheProvider, config, date, true);", span="138-138"];
m1_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="MapFileResolverTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="132-132"];
m1_196 [cluster="Unk.ExtractToDirectory", file="MapFileResolverTests.cs", label="Entry Unk.ExtractToDirectory", span=""];
m1_109 [cluster="ZipArchive.cstr", file="MapFileResolverTests.cs", label="Entry ZipArchive.cstr", span=""];
m1_395 [file="MapFileResolverTests.cs", label=string, span=""];
m2_160 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Split.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m2_182 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="396-396"];
m2_183 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="Split.cs", label="MarketSimulation?.SimulateMarketConditions(this, Algorithm)", span="399-399"];
m2_184 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="396-396"];
m2_175 [cluster="Unk.All", file="Split.cs", label="Entry Unk.All", span=""];
m2_203 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m2_52 [cluster="int.ToString()", file="Split.cs", label="Entry int.ToString()", span="0-0"];
m2_56 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="424-424"];
m2_198 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs", label="e.Status.IsClosed() && _pendingOptionAssignments.Contains(e.Symbol)", span="426-426"];
m2_199 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs", label="_pendingOptionAssignments.Remove(e.Symbol)", span="428-428"];
m2_200 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs", label="base.OnOrderEvent(e)", span="431-431"];
m2_201 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="424-424"];
m2_159 [cluster="QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Split.cs", label="Entry QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="48-48"];
m2_163 [cluster="QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="Split.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="54-54"];
m2_164 [cluster="QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="Split.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="38-38"];
m2_195 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="Split.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m2_210 [cluster="QuantConnect.Orders.Order.Clone()", file="Split.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="241-241"];
m2_179 [cluster="lambda expression", file="Split.cs", label="Entry lambda expression", span="378-378"];
m2_24 [cluster="lambda expression", file="Split.cs", label="Entry lambda expression", span="108-108"];
m2_25 [cluster="lambda expression", file="Split.cs", label="x.Value.Symbol", span="108-108"];
m2_26 [cluster="lambda expression", file="Split.cs", label="Exit lambda expression", span="108-108"];
m2_31 [cluster="lambda expression", file="Split.cs", label="Entry lambda expression", span="119-119"];
m2_32 [cluster="lambda expression", file="Split.cs", label="x.Value", span="119-119"];
m2_33 [cluster="lambda expression", file="Split.cs", label="Exit lambda expression", span="119-119"];
m2_176 [cluster="lambda expression", file="Split.cs", label="Entry lambda expression", span="245-245"];
m2_177 [cluster="lambda expression", file="Split.cs", label="x.Key", span="245-245"];
m2_178 [cluster="lambda expression", file="Split.cs", label="Exit lambda expression", span="245-245"];
m2_180 [cluster="lambda expression", file="Split.cs", label="x.Status.IsClosed()", span="378-378"];
m2_181 [cluster="lambda expression", file="Split.cs", label="Exit lambda expression", span="378-378"];
m2_34 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127"];
m2_35 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Algorithm.LiveMode", span="129-129"];
m2_36 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Log.Trace(''BacktestingBrokerage.PlaceOrder(): Type: '' + order.Type + '' Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="131-131"];
m2_37 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="order.Status == OrderStatus.New", span="134-134"];
m2_40 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="SetPendingOrder(order)", span="139-139"];
m2_41 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="var orderId = order.Id.ToString()", span="142-142"];
m2_42 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="!order.BrokerId.Contains(orderId)", span="143-143"];
m2_43 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="order.BrokerId.Add(orderId)", span="143-143"];
m2_45 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="var submitted = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="147-147"];
m2_38 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label=_needsScanLock, span="136-136"];
m2_48 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="return false;", span="152-152"];
m2_39 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="_needsScan = true", span="138-138"];
m2_44 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="int orderFee = 0", span="146-146"];
m2_46 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="OnOrderEvent(submitted)", span="148-148"];
m2_47 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="return true;", span="150-150"];
m2_49 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127"];
m2_27 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="117-117"];
m2_28 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="Split.cs", label="return Algorithm.Portfolio.CashBook.Select(x => x.Value).ToList();", span="119-119"];
m2_29 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="117-117"];
m2_155 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Split.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m2_5 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="62-62"];
m2_6 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Split.cs", label="Algorithm = algorithm", span="65-65"];
m2_7 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Split.cs", label="_pending = new ConcurrentDictionary<int, Order>()", span="66-66"];
m2_8 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="62-62"];
m2_158 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Split.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78"];
m2_185 [cluster="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="31-31"];
m2_14 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="96-96"];
m2_15 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="Split.cs", label="return Algorithm.Transactions.GetOpenOrders();", span="98-98"];
m2_16 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="96-96"];
m2_202 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="Split.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m2_174 [cluster="QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", file="Split.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", span="132-132"];
m2_23 [cluster="Unk.ToList", file="Split.cs", label="Entry Unk.ToList", span=""];
m2_91 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232"];
m2_92 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label=_needsScanLock, span="234-234"];
m2_93 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="!_needsScan", span="237-237"];
m2_94 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="return;", span="239-239"];
m2_95 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="var stillNeedsScan = false", span="242-242"];
m2_96 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="_pending.OrderBy(x => x.Key)", span="245-245"];
m2_153 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="_needsScan = stillNeedsScan", span="389-389"];
m2_97 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="var order = kvp.Value", span="247-247"];
m2_98 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="order == null", span="248-248"];
m2_99 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="Log.Error(''BacktestingBrokerage.Scan(): Null pending order found: '' + kvp.Key)", span="250-250"];
m2_101 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="order.Status.IsClosed()", span="255-255"];
m2_102 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="_pending.TryRemove(order.Id, out order)", span="258-258"];
m2_103 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="order.Time == Algorithm.UtcTime && order.Type != OrderType.Market", span="263-263"];
m2_105 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="var fills = new[] { new OrderEvent(order, Algorithm.UtcTime, 0) }", span="269-269"];
m2_107 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="!Algorithm.Securities.TryGetValue(order.Symbol, out security)", span="272-272"];
m2_108 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="Log.Error(''BacktestingBrokerage.Scan(): Unable to process order: '' + order.Id + ''. The security no longer exists.'')", span="274-274"];
m2_109 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0m){Status = OrderStatus.Invalid})", span="276-276"];
m2_110 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="_pending.TryRemove(order.Id, out order)", span="277-277"];
m2_111 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="!Algorithm.BrokerageModel.CanExecuteOrder(security, order)", span="282-282"];
m2_113 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="hasSufficientBuyingPower = security.BuyingPowerModel.HasSufficientBuyingPowerForOrder(Algorithm.Portfolio, security, order)", span="291-291"];
m2_116 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="_pending.TryRemove(order.Id, out pending)", span="297-297"];
m2_117 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="order.Status = OrderStatus.Invalid", span="298-298"];
m2_118 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0, ''Error in GetSufficientCapitalForOrder''))", span="299-299"];
m2_120 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="302-302"];
m2_123 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="order.Type", span="315-315"];
m2_125 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="fills = new[] { model.LimitFill(security, order as LimitOrder) }", span="318-318"];
m2_127 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="fills = new[] { model.StopMarketFill(security, order as StopMarketOrder) }", span="322-322"];
m2_129 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="fills = new[] { model.MarketFill(security, order as MarketOrder) }", span="326-326"];
m2_131 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="fills = new[] { model.StopLimitFill(security, order as StopLimitOrder) }", span="330-330"];
m2_133 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="fills = new[] { model.MarketOnOpenFill(security, order as MarketOnOpenOrder) }", span="334-334"];
m2_135 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="fills = new[] { model.MarketOnCloseFill(security, order as MarketOnCloseOrder) }", span="338-338"];
m2_138 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="fills = option.OptionExerciseModel.OptionExercise(option, order as OptionExerciseOrder).ToArray()", span="343-343"];
m2_141 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'',\r\n                                order.Id, order.Type, err.Message))", span="350-351"];
m2_142 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="order.Status = OrderStatus.Invalid", span="357-357"];
m2_143 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id,\r\n                            order.GetValue(security).SmartRounding()))", span="358-359"];
m2_145 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="order.Status != fill.Status || fill.FillQuantity != 0", span="365-365"];
m2_147 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="order.Type == OrderType.OptionExercise", span="371-371"];
m2_148 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="fill.Message = order.Tag", span="373-373"];
m2_151 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="_pending.TryRemove(order.Id, out order)", span="380-380"];
m2_100 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="_pending.TryRemove(kvp.Key, out order)", span="251-251"];
m2_104 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="stillNeedsScan = true", span="265-265"];
m2_106 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="Security security", span="271-271"];
m2_144 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label=fills, span="362-362"];
m2_150 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="fills.All(x => x.Status.IsClosed())", span="378-378"];
m2_122 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="var model = security.FillModel", span="310-310"];
m2_137 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="var option = (Option)security", span="342-342"];
m2_112 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="bool hasSufficientBuyingPower", span="288-288"];
m2_114 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label=Exception, span="293-293"];
m2_121 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label=hasSufficientBuyingPower, span="307-307"];
m2_115 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="Order pending", span="296-296"];
m2_119 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="Log.Error(err)", span="301-301"];
m2_124 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="OrderType.Limit", span="317-317"];
m2_126 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="OrderType.StopMarket", span="321-321"];
m2_128 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="OrderType.Market", span="325-325"];
m2_130 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="OrderType.StopLimit", span="329-329"];
m2_132 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="OrderType.MarketOnOpen", span="333-333"];
m2_134 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="OrderType.MarketOnClose", span="337-337"];
m2_136 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="OrderType.OptionExercise", span="341-341"];
m2_139 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label=Exception, span="347-347"];
m2_140 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="Log.Error(err)", span="349-349"];
m2_146 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="OnOrderEvent(fill)", span="368-368"];
m2_149 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="OnOptionPositionAssigned(fill)", span="374-374"];
m2_152 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="stillNeedsScan = true", span="384-384"];
m2_154 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232"];
m2_162 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="Split.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="426-426"];
m2_74 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Split.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_22 [cluster="Holding.cstr", file="Split.cs", label="Entry Holding.cstr", span=""];
m2_90 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="Split.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m2_194 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="Split.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m2_9 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74"];
m2_10 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="Split.cs", label="Algorithm = algorithm", span="77-77"];
m2_11 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="Split.cs", label="MarketSimulation = marketSimulation", span="78-78"];
m2_12 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="Split.cs", label="_pending = new ConcurrentDictionary<int, Order>()", span="79-79"];
m2_13 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74"];
m2_4 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="Split.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m2_172 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Split.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
m2_0 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50"];
m2_1 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Split.cs", label="Algorithm = algorithm", span="53-53"];
m2_2 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", color=red, community=0, file="Split.cs", label="0: _pending = new ConcurrentDictionary<int, Order>()", span="54-54"];
m2_3 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50"];
m2_57 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160"];
m2_58 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Algorithm.LiveMode", span="162-162"];
m2_59 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Log.Trace(''BacktestingBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="164-164"];
m2_62 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="!_pending.TryGetValue(order.Id, out pending)", span="170-170"];
m2_65 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="SetPendingOrder(order)", span="177-177"];
m2_66 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="var orderId = order.Id.ToString()", span="180-180"];
m2_67 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="!order.BrokerId.Contains(orderId)", span="181-181"];
m2_68 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="order.BrokerId.Add(orderId)", span="181-181"];
m2_70 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="var updated = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="185-185"];
m2_60 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label=_needsScanLock, span="167-167"];
m2_61 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Order pending", span="169-169"];
m2_63 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="return false;", span="173-173"];
m2_64 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="_needsScan = true", span="176-176"];
m2_69 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="int orderFee = 0", span="184-184"];
m2_71 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="OnOrderEvent(updated)", span="186-186"];
m2_72 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="return true;", span="188-188"];
m2_73 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160"];
m2_186 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="407-407"];
m2_187 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs", label="_pendingOptionAssignments.Contains(option.Symbol)", span="410-410"];
m2_189 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs", label="_pendingOptionAssignments.Add(option.Symbol)", span="412-412"];
m2_190 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, -quantity, 0m, 0m, Algorithm.UtcTime, ''Simulated option assignment before expiration'')", span="414-414"];
m2_188 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs", label="return;", span="410-410"];
m2_191 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs", label="var ticket = Algorithm.Transactions.ProcessRequest(request)", span="416-416"];
m2_192 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs", label="Log.Trace($''BacktestingBrokerage.ActivateOptionAssignment(): OrderId: {ticket.OrderId}'')", span="417-417"];
m2_193 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="407-407"];
m2_53 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Split.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m2_170 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Split.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m2_17 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="Split.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="259-259"];
m2_157 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="Split.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
m2_169 [cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="Split.cs", label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33"];
m2_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Split.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m2_165 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Split.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="30-30"];
m2_204 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="437-437"];
m2_205 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="437-437"];
m2_196 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="Split.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m2_75 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196"];
m2_76 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Algorithm.LiveMode", span="198-198"];
m2_77 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Log.Trace(''BacktestingBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="200-200"];
m2_80 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="!_pending.TryRemove(order.Id, out pending)", span="206-206"];
m2_82 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="var orderId = order.Id.ToString()", span="213-213"];
m2_83 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="!order.BrokerId.Contains(orderId)", span="214-214"];
m2_84 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="order.BrokerId.Add(order.Id.ToString())", span="214-214"];
m2_86 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="var canceled = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Canceled }", span="218-218"];
m2_78 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label=_needsScanLock, span="203-203"];
m2_79 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Order pending", span="205-205"];
m2_81 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="return false;", span="209-209"];
m2_85 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="int orderFee = 0", span="217-217"];
m2_87 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="OnOrderEvent(canceled)", span="219-219"];
m2_88 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="return true;", span="221-221"];
m2_89 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196"];
m2_166 [cluster="QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="Split.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="46-46"];
m2_197 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="Split.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133"];
m2_171 [cluster="string.Format(string, object, object, object)", file="Split.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m2_54 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Split.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_206 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="445-445"];
m2_207 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="445-445"];
m2_51 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="455-455"];
m2_208 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="Split.cs", label="_pending[order.Id] = order.Clone()", span="458-458"];
m2_209 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="455-455"];
m2_156 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="Split.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m2_168 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="Split.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="70-70"];
m2_167 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="Split.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="62-62"];
m2_161 [cluster="string.Format(string, object, object)", file="Split.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_18 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="Split.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="105-105"];
m2_19 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="Split.cs", label="return (from kvp in Algorithm.Portfolio.Securities.OrderBy(x => x.Value.Symbol)\r\n                    where kvp.Value.Holdings.AbsoluteQuantity > 0\r\n                    select new Holding(kvp.Value)).ToList();", span="108-110"];
m2_20 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="Split.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="105-105"];
m2_50 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Split.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m2_30 [cluster="Unk.Select", file="Split.cs", label="Entry Unk.Select", span=""];
m2_55 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="Split.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m2_211 [file="Split.cs", label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span=""];
n59 -> n3  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n4  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n6  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n17  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n20  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n7  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n24  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n28  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n31  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n34  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n35  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n36  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n37  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n38  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n41  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n43  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n44  [color=red, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n45  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n46  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n47  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n54  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n59 -> n57  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.KeltnerChannels", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [color=darkseagreen4, key=1, label=string, style=dashed];
n2 -> n5  [color=darkseagreen4, key=1, label=string, style=dashed];
n2 -> n6  [color=darkseagreen4, key=1, label=string, style=dashed];
n2 -> n7  [color=darkseagreen4, key=1, label=string, style=dashed];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n9  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n10  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n11  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n11  [key=2, style=dotted];
n8 -> n2  [color=blue, key=0, style=bold];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=2, style=dotted];
n14 -> n12  [color=blue, key=0, style=bold];
n15 -> n54  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n18 -> n16  [color=blue, key=0, style=bold];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=2, style=dotted];
n21 -> n19  [color=blue, key=0, style=bold];
n23 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=2, style=dotted];
n25 -> n23  [color=blue, key=0, style=bold];
n26 -> n57  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n29 -> n27  [color=blue, key=0, style=bold];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n22  [key=2, style=dotted];
n32 -> n30  [color=blue, key=0, style=bold];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n22  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n22  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n22  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n22  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n22  [key=2, style=dotted];
n39 -> n33  [color=blue, key=0, style=bold];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
n40 -> n43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
n40 -> n44  [color=red, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
n40 -> n45  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
n40 -> n46  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
n41 -> n42  [key=0, style=solid];
n41 -> n49  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n44  [color=red, key=1, label=typicalPrice, style=dashed];
n43 -> n44  [color=red, key=0, style=solid];
n43 -> n50  [key=2, style=dotted];
n44 -> n45  [color=red, key=0, style=solid];
n44 -> n51  [color=red, key=2, style=dotted];
n44 -> n52  [color=red, key=2, style=dotted];
n44 -> n53  [color=red, key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n49  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n49  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n48 -> n40  [color=blue, key=0, style=bold];
n54 -> n55  [key=0, style=solid];
n54 -> n56  [key=2, style=dotted];
n55 -> n15  [color=blue, key=0, style=bold];
n57 -> n58  [key=0, style=solid];
n57 -> n56  [key=2, style=dotted];
n58 -> n26  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_7 -> m0_11  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_7 -> m0_14  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_7 -> m0_15  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m0_7 -> m0_17  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_7 -> m0_18  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_7 -> m0_22  [color=green, key=3, label="method methodReturn QuantConnect.Data.Auxiliary.FactorFile Get", style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_20  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [color=darkseagreen4, key=1, label=market, style=dashed];
m0_11 -> m0_17  [color=darkseagreen4, key=1, label=market, style=dashed];
m0_11 -> m0_18  [color=darkseagreen4, key=1, label=market, style=dashed];
m0_14 -> m0_19  [key=0, style=solid];
m0_14 -> m0_22  [key=2, style=dotted];
m0_15 -> m0_16  [color=green, key=0, style=solid];
m0_15 -> m0_23  [color=green, key=2, style=dotted];
m0_15 -> m0_18  [color=green, key=1, label=mapFile, style=dashed];
m0_17 -> m0_19  [key=0, style=solid];
m0_17 -> m0_22  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_22  [key=2, style=dotted];
m0_10 -> m0_19  [key=0, style=solid];
m0_10 -> m0_11  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Brokerages.GDAX.AuthenticationToken GetAuthenticationToken", style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_21  [key=2, style=dotted];
m0_12 -> m0_15  [color=green, key=1, label=mapFileResolver, style=dashed];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [color=green, key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=0, style=solid];
m0_16 -> m0_24  [key=2, style=dotted];
m0_19 -> m0_7  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_2  [color=darkorchid, key=3, label="Field variable string TimeHeader", style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=2, style=dotted];
m0_5 -> m0_2  [color=blue, key=0, style=bold];
m0_22 -> m0_25  [key=0, style=solid];
m0_22 -> m0_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_22 -> m0_27  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_22 -> m0_7  [color=green, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m0_22 -> m0_29  [color=green, key=3, label="method methodReturn QuantConnect.Data.Auxiliary.FactorFile GetFactorFile", style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_29  [key=0, style=solid];
m0_25 -> m0_31  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_32  [key=2, style=dotted];
m0_26 -> m0_35  [color=darkseagreen4, key=1, label=factorFile, style=dashed];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=factorFile, style=dashed];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_33  [key=2, style=dotted];
m0_27 -> m0_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_29 -> m0_30  [key=0, style=solid];
m0_28 -> m0_30  [key=0, style=solid];
m0_30 -> m0_22  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_34  [color=blue, key=0, style=bold];
m0_37 -> m0_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m0_37 -> m0_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m0_37 -> m0_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m0_37 -> m0_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m0_37 -> m0_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m0_37 -> m0_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m0_37 -> m0_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m0_37 -> m0_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m0_38 -> m0_35  [color=darkseagreen4, key=1, label=factorFile, style=dashed];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_97  [key=2, style=dotted];
m1_86 -> m1_88  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_86 -> m1_89  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_86 -> m1_90  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_83  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m1_81 -> m1_26  [color=green, key=1, label=config, style=dashed];
m1_81 -> m1_24  [color=green, key=1, label=config, style=dashed];
m1_81 -> m1_25  [color=green, key=1, label=config, style=dashed];
m1_81 -> m1_20  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_81 -> m1_28  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_81 -> m1_29  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_95  [key=2, style=dotted];
m1_82 -> m1_90  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_82 -> m1_93  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_82 -> m1_21  [color=darkseagreen4, key=1, label=lastSourceRefreshTime, style=dashed];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_47  [key=2, style=dotted];
m1_83 -> m1_25  [color=green, key=1, label=sourceFactory, style=dashed];
m1_90 -> m1_85  [key=0, style=solid];
m1_90 -> m1_98  [key=2, style=dotted];
m1_90 -> m1_99  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_96  [key=2, style=dotted];
m1_84 -> m1_86  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m1_84 -> m1_89  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m1_84 -> m1_26  [color=green, key=1, label="QuantConnect.Interfaces.IDataProvider", style=dashed];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_91  [key=0, style=solid];
m1_85 -> m1_93  [key=0, style=solid];
m1_85 -> m1_26  [color=green, key=1, label=frontier, style=dashed];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_77  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_91  [key=0, style=solid];
m1_87 -> m1_93  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_90  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_27  [key=2, style=dotted];
m1_94 -> m1_81  [color=blue, key=0, style=bold];
m1_45 -> m1_46  [key=0, style=solid];
m1_288 -> m1_284  [color=blue, key=0, style=bold];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_287  [color=crimson, key=0, style=bold];
m1_285 -> m1_286  [key=0, style=solid];
m1_285 -> m1_239  [key=2, style=dotted];
m1_285 -> m1_240  [key=2, style=dotted];
m1_285 -> m1_287  [color=darkseagreen4, key=1, label=entryReader, style=dashed];
m1_287 -> m1_286  [key=0, style=solid];
m1_287 -> m1_289  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_288  [key=0, style=solid];
m1_80 -> m1_8  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", style=dashed];
m1_80 -> m1_26  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", style=dashed];
m1_80 -> m1_10  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", style=dashed];
m1_80 -> m1_27  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", style=dashed];
m1_80 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", style=dashed];
m1_80 -> m1_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", style=dashed];
m1_80 -> m1_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", style=dashed];
m1_80 -> m1_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", style=dashed];
m1_80 -> m1_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", style=dashed];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_22  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_155 -> m1_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_17  [key=2, style=dotted];
m1_156 -> m1_18  [key=2, style=dotted];
m1_156 -> m1_158  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_156 -> m1_163  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_20  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_47  [key=2, style=dotted];
m1_160 -> m1_21  [key=2, style=dotted];
m1_160 -> m1_162  [color=darkseagreen4, key=1, label=dataReader, style=dashed];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_23  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_162  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_159 -> m1_163  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_48  [key=2, style=dotted];
m1_162 -> m1_164  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m1_161 -> m1_162  [key=0, style=solid];
m1_164 -> m1_161  [key=0, style=solid];
m1_164 -> m1_165  [key=0, style=solid];
m1_165 -> m1_155  [color=blue, key=0, style=bold];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_61  [key=2, style=dotted];
m1_51 -> m1_55  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_19 -> m1_24  [color=green, key=1, label=utcNow, style=dashed];
m1_19 -> m1_23  [color=green, key=1, label=utcNow, style=dashed];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_35  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_22  [key=2, style=dotted];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_135  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_133 -> m1_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_133 -> m1_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_133 -> m1_143  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_133 -> m1_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_140  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_134 -> m1_141  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_17  [key=2, style=dotted];
m1_135 -> m1_18  [key=2, style=dotted];
m1_135 -> m1_137  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_135 -> m1_141  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_20  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_148  [key=2, style=dotted];
m1_138 -> m1_140  [color=darkseagreen4, key=1, label=fs, style=dashed];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=0, style=solid];
m1_143 -> m1_147  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_147  [key=0, style=solid];
m1_144 -> m1_150  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_149  [key=2, style=dotted];
m1_140 -> m1_142  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_23  [key=2, style=dotted];
m1_139 -> m1_140  [key=0, style=solid];
m1_142 -> m1_139  [key=0, style=solid];
m1_142 -> m1_143  [key=0, style=solid];
m1_145 -> m1_146  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_27  [key=2, style=dotted];
m1_147 -> m1_133  [color=blue, key=0, style=bold];
m1_23 -> m1_8  [color=green, key=1, label=lastSourceRefreshTime, style=dashed];
m1_23 -> m1_24  [color=green, key=0, style=solid];
m1_61 -> m1_41  [color=blue, key=0, style=bold];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_68  [key=0, style=solid];
m1_64 -> m1_76  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_48  [key=2, style=dotted];
m1_37 -> m1_39  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m1_270 -> m1_274  [key=0, style=solid];
m1_270 -> m1_258  [key=2, style=dotted];
m1_270 -> m1_275  [key=2, style=dotted];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_266 -> m1_270  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_270  [key=0, style=solid];
m1_267 -> m1_76  [key=2, style=dotted];
m1_268 -> m1_269  [key=0, style=solid];
m1_268 -> m1_243  [key=2, style=dotted];
m1_269 -> m1_274  [key=0, style=solid];
m1_269 -> m1_257  [key=2, style=dotted];
m1_271 -> m1_272  [key=0, style=solid];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_27  [key=2, style=dotted];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_257  [key=2, style=dotted];
m1_274 -> m1_266  [color=blue, key=0, style=bold];
m1_21 -> m1_23  [color=green, key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_14 -> m1_16  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_110  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_100 -> m1_105  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_108  [key=2, style=dotted];
m1_101 -> m1_106  [color=darkseagreen4, key=1, label=memoryStream, style=dashed];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_23  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_109  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_112  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_111  [key=2, style=dotted];
m1_107 -> m1_100  [color=blue, key=0, style=bold];
m1_304 -> m1_305  [key=0, style=solid];
m1_305 -> m1_306  [key=0, style=solid];
m1_305 -> m1_77  [key=2, style=dotted];
m1_305 -> m1_312  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m1_306 -> m1_307  [key=0, style=solid];
m1_306 -> m1_238  [key=2, style=dotted];
m1_306 -> m1_308  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_307 -> m1_308  [key=0, style=solid];
m1_307 -> m1_309  [key=0, style=solid];
m1_307 -> m1_311  [key=0, style=solid];
m1_308 -> m1_312  [key=0, style=solid];
m1_308 -> m1_240  [key=2, style=dotted];
m1_309 -> m1_310  [key=0, style=solid];
m1_311 -> m1_312  [key=0, style=solid];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_27  [key=2, style=dotted];
m1_312 -> m1_304  [color=blue, key=0, style=bold];
m1_27 -> m1_28  [color=green, key=0, style=solid];
m1_27 -> m1_30  [color=green, key=0, style=solid];
m1_27 -> m1_42  [color=green, key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_20  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_247  [key=2, style=dotted];
m1_244 -> m1_245  [key=0, style=solid];
m1_246 -> m1_244  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [color=green, key=0, style=solid];
m1_26 -> m1_41  [color=green, key=2, style=dotted];
m1_26 -> m1_29  [color=green, key=1, label=enumerator, style=dashed];
m1_26 -> m1_30  [color=green, key=1, label=enumerator, style=dashed];
m1_24 -> m1_26  [color=green, key=1, label=localDate, style=dashed];
m1_24 -> m1_25  [color=green, key=0, style=solid];
m1_24 -> m1_39  [color=green, key=2, style=dotted];
m1_25 -> m1_26  [color=green, key=0, style=solid];
m1_25 -> m1_40  [color=green, key=2, style=dotted];
m1_25 -> m1_27  [color=green, key=1, label=source, style=dashed];
m1_25 -> m1_31  [color=green, key=1, label=source, style=dashed];
m1_29 -> m1_32  [color=green, key=1, label=enumerator, style=dashed];
m1_29 -> m1_33  [color=green, key=1, label=enumerator, style=dashed];
m1_29 -> m1_29  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
m1_29 -> m1_31  [key=0, style=solid];
m1_29 -> m1_44  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_32  [color=green, key=1, label=enumerator, style=dashed];
m1_30 -> m1_33  [color=green, key=1, label=enumerator, style=dashed];
m1_30 -> m1_30  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_45  [key=2, style=dotted];
m1_30 -> m1_37  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_30 -> m1_38  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_31 -> m1_32  [color=green, key=0, style=solid];
m1_31 -> m1_33  [color=green, key=0, style=solid];
m1_31 -> m1_17  [key=2, style=dotted];
m1_31 -> m1_18  [key=2, style=dotted];
m1_31 -> m1_34  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_31 -> m1_38  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_31 -> m1_40  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_31 -> m1_41  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_43  [key=2, style=dotted];
m1_28 -> m1_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_28 -> m1_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>", style=dashed];
m1_32 -> m1_32  [color=green, key=1, label=enumerator, style=dashed];
m1_32 -> m1_33  [color=green, key=0, style=solid];
m1_32 -> m1_46  [color=green, key=2, style=dotted];
m1_32 -> m1_47  [color=green, key=1, label="lambda expression", style=dashed];
m1_32 -> m1_40  [key=0, style=solid];
m1_33 -> m1_34  [color=green, key=0, style=solid];
m1_33 -> m1_20  [key=2, style=dotted];
m1_33 -> m1_33  [color=darkseagreen4, key=1, label=file, style=dashed];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label=file, style=dashed];
m1_34 -> m1_18  [color=blue, key=0, style=bold];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_30  [color=darkseagreen4, key=1, label=minimumTimeBetweenCalls, style=dashed];
m1_20 -> m1_36  [key=2, style=dotted];
m1_22 -> m1_34  [key=0, style=solid];
m1_22 -> m1_37  [key=2, style=dotted];
m1_22 -> m1_38  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_51  [key=2, style=dotted];
m1_49 -> m1_52  [key=2, style=dotted];
m1_49 -> m1_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_50 -> m1_47  [color=blue, key=0, style=bold];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_17  [key=2, style=dotted];
m1_50 -> m1_18  [key=2, style=dotted];
m1_50 -> m1_53  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_20  [key=2, style=dotted];
m1_4 -> m1_7  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_4 -> m1_8  [color=green, key=1, label=config, style=dashed];
m1_4 -> m1_26  [color=green, key=1, label=config, style=dashed];
m1_4 -> m1_24  [color=green, key=1, label=config, style=dashed];
m1_4 -> m1_25  [color=green, key=1, label=config, style=dashed];
m1_4 -> m1_28  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_4 -> m1_29  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_17  [key=2, style=dotted];
m1_1 -> m1_18  [key=2, style=dotted];
m1_1 -> m1_7  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_1 -> m1_8  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_1 -> m1_9  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_1 -> m1_10  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_1 -> m1_11  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_10  [key=0, style=solid];
m1_3 -> m1_5  [color=darkseagreen4, key=1, label=filename, style=dashed];
m1_3 -> m1_8  [color=green, key=1, label="QuantConnect.Interfaces.IDataProvider", style=dashed];
m1_3 -> m1_26  [color=green, key=1, label="QuantConnect.Interfaces.IDataProvider", style=dashed];
m1_3 -> m1_9  [color=green, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [color=green, key=1, label=frontier, style=dashed];
m1_5 -> m1_26  [color=green, key=1, label=frontier, style=dashed];
m1_5 -> m1_12  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_19  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [color=green, key=0, style=solid];
m1_7 -> m1_22  [key=2, style=dotted];
m1_7 -> m1_25  [color=green, key=1, label=sourceFactory, style=dashed];
m1_7 -> m1_13  [key=2, style=dotted];
m1_7 -> m1_14  [key=2, style=dotted];
m1_8 -> m1_9  [color=green, key=0, style=solid];
m1_8 -> m1_23  [key=2, style=dotted];
m1_8 -> m1_8  [color=green, key=1, label=lastSourceRefreshTime, style=dashed];
m1_8 -> m1_15  [color=green, key=2, style=dotted];
m1_8 -> m1_21  [color=green, key=1, label=lastSourceRefreshTime, style=dashed];
m1_8 -> m1_10  [color=green, key=1, label=refresher, style=dashed];
m1_9 -> m1_3  [key=0, style=solid];
m1_9 -> m1_24  [key=2, style=dotted];
m1_9 -> m1_10  [color=green, key=0, style=solid];
m1_9 -> m1_16  [color=green, key=2, style=dotted];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_10 -> m1_25  [key=2, style=dotted];
m1_10 -> m1_17  [color=green, key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_15  [key=0, style=solid];
m1_11 -> m1_26  [key=2, style=dotted];
m1_11 -> m1_3  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_21  [key=2, style=dotted];
m1_6 -> m1_8  [color=green, key=1, label=lastSourceRefreshTime, style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_27  [key=2, style=dotted];
m1_16 -> m1_0  [color=blue, key=0, style=bold];
m1_390 -> m1_391  [key=0, style=solid];
m1_391 -> m1_392  [key=0, style=solid];
m1_391 -> m1_337  [key=2, style=dotted];
m1_392 -> m1_393  [key=0, style=solid];
m1_392 -> m1_394  [key=2, style=dotted];
m1_393 -> m1_390  [color=blue, key=0, style=bold];
m1_44 -> m1_45  [key=0, style=solid];
m1_77 -> m1_43  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_23  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_25  [key=2, style=dotted];
m1_36 -> m1_71  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_71  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_71 -> m1_73  [key=2, style=dotted];
m1_71 -> m1_74  [key=2, style=dotted];
m1_71 -> m1_75  [key=2, style=dotted];
m1_72 -> m1_36  [color=blue, key=0, style=bold];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_27  [key=2, style=dotted];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_179  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_176 -> m1_180  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_176 -> m1_181  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_176 -> m1_184  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_179  [key=0, style=solid];
m1_177 -> m1_76  [key=2, style=dotted];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_181  [key=0, style=solid];
m1_180 -> m1_191  [key=0, style=solid];
m1_180 -> m1_196  [key=2, style=dotted];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_109  [key=2, style=dotted];
m1_181 -> m1_148  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_197  [key=2, style=dotted];
m1_184 -> m1_186  [color=darkseagreen4, key=1, label=filepath, style=dashed];
m1_184 -> m1_187  [color=darkseagreen4, key=1, label=filepath, style=dashed];
m1_178 -> m1_195  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_191  [key=0, style=solid];
m1_182 -> m1_184  [color=darkseagreen4, key=1, label=file, style=dashed];
m1_182 -> m1_190  [color=darkseagreen4, key=1, label=file, style=dashed];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_182  [key=0, style=solid];
m1_191 -> m1_195  [key=0, style=solid];
m1_190 -> m1_182  [key=0, style=solid];
m1_190 -> m1_200  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_187  [key=0, style=solid];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_132  [key=2, style=dotted];
m1_186 -> m1_186  [color=darkseagreen4, key=1, label=filepath, style=dashed];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_198  [key=2, style=dotted];
m1_187 -> m1_189  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m1_187 -> m1_190  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_190  [key=0, style=solid];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_199  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_27  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_195 -> m1_176  [color=blue, key=0, style=bold];
m1_39 -> m1_36  [key=0, style=solid];
m1_39 -> m1_32  [key=0, style=solid];
m1_43 -> m1_76  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_27  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_76  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_76 -> m1_78  [key=2, style=dotted];
m1_76 -> m1_79  [key=2, style=dotted];
m1_76 -> m1_75  [key=2, style=dotted];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_97  [key=2, style=dotted];
m1_294 -> m1_296  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_293  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m1_291 -> m1_292  [key=0, style=solid];
m1_293 -> m1_294  [key=0, style=solid];
m1_293 -> m1_96  [key=2, style=dotted];
m1_293 -> m1_296  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m1_292 -> m1_293  [key=0, style=solid];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_77  [key=2, style=dotted];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_297  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_297 -> m1_298  [key=0, style=solid];
m1_297 -> m1_47  [key=2, style=dotted];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_301  [key=0, style=solid];
m1_298 -> m1_303  [key=2, style=dotted];
m1_299 -> m1_300  [key=0, style=solid];
m1_301 -> m1_302  [key=0, style=solid];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_27  [key=2, style=dotted];
m1_302 -> m1_290  [color=blue, key=0, style=bold];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_113 -> m1_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_119  [color=darkseagreen4, key=1, label=dataBuffer, style=dashed];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_122  [key=2, style=dotted];
m1_115 -> m1_123  [key=2, style=dotted];
m1_115 -> m1_118  [color=darkseagreen4, key=1, label=newFileOutput, style=dashed];
m1_115 -> m1_120  [color=darkseagreen4, key=1, label=newFileOutput, style=dashed];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_124  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_126  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_18  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_125  [key=2, style=dotted];
m1_117 -> m1_119  [color=darkseagreen4, key=1, label=gzipStream, style=dashed];
m1_121 -> m1_113  [color=blue, key=0, style=bold];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_80  [key=2, style=dotted];
m1_68 -> m1_70  [color=darkseagreen4, key=1, label=zip, style=dashed];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_45  [key=0, style=solid];
m1_41 -> m1_26  [key=2, style=dotted];
m1_41 -> m1_53  [key=0, style=solid];
m1_41 -> m1_58  [color=crimson, key=0, style=bold];
m1_41 -> m1_54  [color=darkseagreen4, key=1, label="QuantConnect.Util.Ref<System.DateTime>", style=dashed];
m1_41 -> m1_55  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m1_41 -> m1_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m1_41 -> m1_57  [color=darkseagreen4, key=1, label="QuantConnect.Util.Ref<System.DateTime>", style=dashed];
m1_41 -> m1_60  [color=darkseagreen4, key=1, label="QuantConnect.Util.Ref<System.DateTime>", style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_47  [key=2, style=dotted];
m1_35 -> m1_35  [color=darkseagreen4, key=1, label=file, style=dashed];
m1_35 -> m1_37  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_69  [key=0, style=solid];
m1_46 -> m1_28  [color=blue, key=0, style=bold];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_355  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_148  [key=2, style=dotted];
m1_352 -> m1_358  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_349  [key=2, style=dotted];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_125  [key=2, style=dotted];
m1_353 -> m1_357  [color=darkseagreen4, key=1, label=gzipStream, style=dashed];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_350  [key=2, style=dotted];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_348  [key=2, style=dotted];
m1_354 -> m1_356  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_26  [key=2, style=dotted];
m1_356 -> m1_357  [key=0, style=solid];
m1_356 -> m1_26  [key=2, style=dotted];
m1_359 -> m1_351  [color=blue, key=0, style=bold];
m1_341 -> m1_342  [key=0, style=solid];
m1_341 -> m1_344  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_148  [key=2, style=dotted];
m1_342 -> m1_346  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_349  [key=2, style=dotted];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_348  [key=2, style=dotted];
m1_343 -> m1_345  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_350  [key=2, style=dotted];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_26  [key=2, style=dotted];
m1_347 -> m1_341  [color=blue, key=0, style=bold];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_20  [key=2, style=dotted];
m1_207 -> m1_154  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_204  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_17  [key=2, style=dotted];
m1_202 -> m1_18  [key=2, style=dotted];
m1_202 -> m1_208  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m1_202 -> m1_210  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_211  [key=0, style=solid];
m1_204 -> m1_213  [key=0, style=solid];
m1_204 -> m1_206  [color=darkseagreen4, key=1, label=file, style=dashed];
m1_204 -> m1_207  [color=darkseagreen4, key=1, label=file, style=dashed];
m1_204 -> m1_209  [color=darkseagreen4, key=1, label=file, style=dashed];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_210  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_22  [key=2, style=dotted];
m1_210 -> m1_204  [key=0, style=solid];
m1_210 -> m1_126  [key=2, style=dotted];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_207  [key=0, style=solid];
m1_205 -> m1_76  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_206 -> m1_204  [key=0, style=solid];
m1_206 -> m1_214  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_148  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_27  [key=2, style=dotted];
m1_213 -> m1_201  [color=blue, key=0, style=bold];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_281  [key=0, style=solid];
m1_258 -> m1_276  [key=0, style=solid];
m1_258 -> m1_279  [color=crimson, key=0, style=bold];
m1_258 -> m1_280  [color=crimson, key=0, style=bold];
m1_258 -> m1_282  [color=crimson, key=0, style=bold];
m1_258 -> m1_277  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_77  [key=2, style=dotted];
m1_276 -> m1_278  [color=darkseagreen4, key=1, label=zip, style=dashed];
m1_276 -> m1_281  [color=darkseagreen4, key=1, label=zip, style=dashed];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_264  [key=2, style=dotted];
m1_279 -> m1_265  [key=2, style=dotted];
m1_280 -> m1_281  [key=0, style=solid];
m1_282 -> m1_281  [key=0, style=solid];
m1_282 -> m1_264  [key=2, style=dotted];
m1_282 -> m1_265  [key=2, style=dotted];
m1_278 -> m1_279  [key=0, style=solid];
m1_281 -> m1_282  [key=0, style=solid];
m1_281 -> m1_283  [key=0, style=solid];
m1_283 -> m1_258  [color=blue, key=0, style=bold];
m1_75 -> m1_63  [color=blue, key=0, style=bold];
m1_366 -> m1_367  [key=0, style=solid];
m1_366 -> m1_370  [key=2, style=dotted];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_367  [color=crimson, key=0, style=bold];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_369  [key=2, style=dotted];
m1_361 -> m1_125  [key=2, style=dotted];
m1_361 -> m1_363  [color=darkseagreen4, key=1, label=tar, style=dashed];
m1_361 -> m1_366  [color=darkseagreen4, key=1, label=tar, style=dashed];
m1_367 -> m1_363  [key=0, style=solid];
m1_367 -> m1_371  [key=2, style=dotted];
m1_367 -> m1_372  [key=2, style=dotted];
m1_362 -> m1_363  [key=0, style=solid];
m1_363 -> m1_364  [key=0, style=solid];
m1_363 -> m1_368  [key=0, style=solid];
m1_363 -> m1_97  [key=2, style=dotted];
m1_363 -> m1_367  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_364 -> m1_365  [key=0, style=solid];
m1_364 -> m1_363  [key=0, style=solid];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_108  [key=2, style=dotted];
m1_365 -> m1_367  [color=darkseagreen4, key=1, label=output, style=dashed];
m1_368 -> m1_360  [color=blue, key=0, style=bold];
m1_324 -> m1_325  [key=0, style=solid];
m1_324 -> m1_338  [key=2, style=dotted];
m1_324 -> m1_328  [color=darkseagreen4, key=1, label=entryFileName, style=dashed];
m1_313 -> m1_314  [key=0, style=solid];
m1_313 -> m1_315  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_313 -> m1_318  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_313 -> m1_320  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_314 -> m1_315  [key=0, style=solid];
m1_314 -> m1_334  [key=2, style=dotted];
m1_314 -> m1_329  [color=darkseagreen4, key=1, label=files, style=dashed];
m1_314 -> m1_332  [color=darkseagreen4, key=1, label=files, style=dashed];
m1_315 -> m1_316  [key=0, style=solid];
m1_315 -> m1_335  [key=2, style=dotted];
m1_315 -> m1_317  [color=darkseagreen4, key=1, label=slash, style=dashed];
m1_315 -> m1_318  [color=darkseagreen4, key=1, label=slash, style=dashed];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_336  [key=2, style=dotted];
m1_318 -> m1_328  [color=darkseagreen4, key=1, label=outFolder, style=dashed];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> m1_148  [key=2, style=dotted];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_340  [key=2, style=dotted];
m1_332 -> m1_333  [key=0, style=solid];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_328  [color=darkseagreen4, key=1, label=outFolder, style=dashed];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_319  [key=0, style=solid];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_123  [key=2, style=dotted];
m1_328 -> m1_330  [color=darkseagreen4, key=1, label=fullZipToPath, style=dashed];
m1_319 -> m1_320  [key=0, style=solid];
m1_321 -> m1_322  [key=0, style=solid];
m1_321 -> m1_337  [key=2, style=dotted];
m1_321 -> m1_327  [color=darkseagreen4, key=1, label=zf, style=dashed];
m1_322 -> m1_323  [key=0, style=solid];
m1_322 -> m1_332  [key=0, style=solid];
m1_322 -> m1_324  [color=darkseagreen4, key=1, label=zipEntry, style=dashed];
m1_322 -> m1_327  [color=darkseagreen4, key=1, label=zipEntry, style=dashed];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_339  [key=2, style=dotted];
m1_327 -> m1_331  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_322  [key=0, style=solid];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_322  [key=0, style=solid];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_331  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_331 -> m1_322  [key=0, style=solid];
m1_331 -> m1_126  [key=2, style=dotted];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_18  [key=2, style=dotted];
m1_333 -> m1_313  [color=blue, key=0, style=bold];
m1_53 -> m1_55  [color=darkseagreen4, key=1, label=dataCacheProvider, style=dashed];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_62  [key=2, style=dotted];
m1_53 -> m1_22  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_63  [key=2, style=dotted];
m1_55 -> m1_54  [key=0, style=solid];
m1_55 -> m1_62  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_27  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_59  [color=darkseagreen4, key=1, label=newLocalFrontier, style=dashed];
m1_54 -> m1_60  [color=darkseagreen4, key=1, label=newLocalFrontier, style=dashed];
m1_54 -> m1_56  [key=0, style=solid];
m1_56 -> m1_58  [color=darkseagreen4, key=1, label=datum, style=dashed];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_60  [key=0, style=solid];
m1_56 -> m1_64  [key=2, style=dotted];
m1_56 -> m1_59  [color=darkseagreen4, key=1, label=datum, style=dashed];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_59  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_49  [color=blue, key=0, style=bold];
m1_59 -> m1_56  [key=0, style=solid];
m1_59 -> m1_60  [color=darkseagreen4, key=1, label=newLocalFrontier, style=dashed];
m1_59 -> m1_59  [color=darkseagreen4, key=1, label=newLocalFrontier, style=dashed];
m1_59 -> m1_65  [key=2, style=dotted];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_238  [key=2, style=dotted];
m1_223 -> m1_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_223 -> m1_226  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_221  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_218 -> m1_222  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_218 -> m1_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_218 -> m1_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_218 -> m1_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_218 -> m1_235  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_236  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_233  [key=0, style=solid];
m1_221 -> m1_76  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_80  [key=2, style=dotted];
m1_222 -> m1_229  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m1_222 -> m1_230  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m1_222 -> m1_237  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_236  [key=0, style=solid];
m1_233 -> m1_243  [key=2, style=dotted];
m1_235 -> m1_236  [key=0, style=solid];
m1_235 -> m1_27  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_237  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m1_236 -> m1_237  [key=0, style=solid];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_231  [key=0, style=solid];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_241  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_226  [key=0, style=solid];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_234  [key=0, style=solid];
m1_226 -> m1_236  [key=0, style=solid];
m1_226 -> m1_239  [key=2, style=dotted];
m1_226 -> m1_240  [key=2, style=dotted];
m1_226 -> m1_231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_226 -> m1_232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_225 -> m1_237  [key=0, style=solid];
m1_227 -> m1_228  [key=0, style=solid];
m1_234 -> m1_235  [key=0, style=solid];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_234  [key=0, style=solid];
m1_231 -> m1_236  [key=0, style=solid];
m1_232 -> m1_234  [key=0, style=solid];
m1_232 -> m1_236  [key=0, style=solid];
m1_232 -> m1_242  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_27  [key=2, style=dotted];
m1_237 -> m1_218  [color=blue, key=0, style=bold];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_168  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_166 -> m1_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_169  [key=0, style=solid];
m1_167 -> m1_76  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_150  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_175  [key=2, style=dotted];
m1_170 -> m1_174  [key=0, style=solid];
m1_171 -> m1_172  [key=0, style=solid];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_27  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_174 -> m1_166  [color=blue, key=0, style=bold];
m1_262 -> m1_261  [key=0, style=solid];
m1_262 -> m1_264  [key=2, style=dotted];
m1_262 -> m1_265  [key=2, style=dotted];
m1_259 -> m1_260  [key=0, style=solid];
m1_259 -> m1_262  [color=crimson, key=0, style=bold];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_77  [key=2, style=dotted];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_263  [key=0, style=solid];
m1_263 -> m1_259  [color=blue, key=0, style=bold];
m1_151 -> m1_152  [key=0, style=solid];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_154  [key=2, style=dotted];
m1_152 -> m1_127  [key=2, style=dotted];
m1_153 -> m1_151  [color=blue, key=0, style=bold];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_77  [key=2, style=dotted];
m1_65 -> m1_67  [color=darkseagreen4, key=1, label=zip, style=dashed];
m1_73 -> m1_75  [key=0, style=solid];
m1_215 -> m1_216  [key=0, style=solid];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_218  [key=2, style=dotted];
m1_217 -> m1_215  [color=blue, key=0, style=bold];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_248 -> m1_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> m1_252  [key=0, style=solid];
m1_249 -> m1_76  [key=2, style=dotted];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_243  [key=2, style=dotted];
m1_252 -> m1_256  [key=0, style=solid];
m1_252 -> m1_258  [key=2, style=dotted];
m1_251 -> m1_256  [key=0, style=solid];
m1_251 -> m1_257  [key=2, style=dotted];
m1_253 -> m1_254  [key=0, style=solid];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_27  [key=2, style=dotted];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_257  [key=2, style=dotted];
m1_256 -> m1_248  [color=blue, key=0, style=bold];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_133  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_132  [key=2, style=dotted];
m1_128 -> m1_130  [color=darkseagreen4, key=1, label=zipPath, style=dashed];
m1_130 -> m1_131  [key=0, style=solid];
m1_131 -> m1_127  [color=blue, key=0, style=bold];
m1_74 -> m1_75  [key=0, style=solid];
m1_382 -> m1_383  [key=0, style=solid];
m1_382 -> m1_381  [key=0, style=solid];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_385  [color=crimson, key=0, style=bold];
m1_373 -> m1_375  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_388  [key=2, style=dotted];
m1_374 -> m1_389  [key=2, style=dotted];
m1_374 -> m1_377  [color=darkseagreen4, key=1, label=gzip, style=dashed];
m1_385 -> m1_381  [key=0, style=solid];
m1_385 -> m1_371  [key=2, style=dotted];
m1_385 -> m1_372  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_148  [key=2, style=dotted];
m1_375 -> m1_378  [color=darkseagreen4, key=1, label=file, style=dashed];
m1_377 -> m1_378  [key=0, style=solid];
m1_377 -> m1_380  [key=0, style=solid];
m1_376 -> m1_377  [key=0, style=solid];
m1_376 -> m1_369  [key=2, style=dotted];
m1_376 -> m1_381  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m1_376 -> m1_384  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m1_376 -> m1_386  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m1_378 -> m1_379  [key=0, style=solid];
m1_378 -> m1_125  [key=2, style=dotted];
m1_381 -> m1_382  [key=0, style=solid];
m1_381 -> m1_386  [key=0, style=solid];
m1_381 -> m1_97  [key=2, style=dotted];
m1_381 -> m1_385  [color=darkseagreen4, key=1, label=tarEntry, style=dashed];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_370  [key=2, style=dotted];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_26  [key=2, style=dotted];
m1_380 -> m1_381  [key=0, style=solid];
m1_379 -> m1_380  [key=0, style=solid];
m1_379 -> m1_369  [key=2, style=dotted];
m1_379 -> m1_381  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m1_379 -> m1_384  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m1_379 -> m1_386  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m1_383 -> m1_384  [key=0, style=solid];
m1_383 -> m1_108  [key=2, style=dotted];
m1_383 -> m1_385  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_387 -> m1_373  [color=blue, key=0, style=bold];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_78  [key=2, style=dotted];
m1_70 -> m1_42  [color=blue, key=0, style=bold];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_74  [key=0, style=solid];
m1_70 -> m1_79  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_63 -> m1_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_63 -> m1_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_63 -> m1_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_78  [key=2, style=dotted];
m1_66 -> m1_68  [key=2, style=dotted];
m1_67 -> m1_71  [key=0, style=solid];
m1_67 -> m1_74  [key=0, style=solid];
m1_67 -> m1_79  [key=2, style=dotted];
m1_67 -> m1_63  [color=blue, key=0, style=bold];
m1_395 -> m1_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_182 -> m2_183  [key=0, style=solid];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_185  [key=2, style=dotted];
m2_184 -> m2_182  [color=blue, key=0, style=bold];
m2_56 -> m2_198  [key=0, style=solid];
m2_56 -> m2_199  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_56 -> m2_200  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_200  [key=0, style=solid];
m2_198 -> m2_156  [key=2, style=dotted];
m2_198 -> m2_194  [key=2, style=dotted];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_202  [key=2, style=dotted];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_203  [key=2, style=dotted];
m2_201 -> m2_56  [color=blue, key=0, style=bold];
m2_179 -> m2_180  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m2_26 -> m2_24  [color=blue, key=0, style=bold];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>", style=dashed];
m2_33 -> m2_31  [color=blue, key=0, style=bold];
m2_176 -> m2_177  [key=0, style=solid];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_177  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m2_178 -> m2_176  [color=blue, key=0, style=bold];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_156  [key=2, style=dotted];
m2_181 -> m2_179  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_36  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_34 -> m2_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_34 -> m2_40  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_34 -> m2_41  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_34 -> m2_42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_34 -> m2_43  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_34 -> m2_45  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_37  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_50  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_48  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_51  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_52  [key=2, style=dotted];
m2_41 -> m2_43  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=0, style=solid];
m2_42 -> m2_53  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_54  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_55  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_56  [key=2, style=dotted];
m2_47 -> m2_49  [key=0, style=solid];
m2_49 -> m2_34  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_75  [color=darkorchid, key=3, label="Local variable QuantConnect.Interfaces.IBrokerage brokerage", style=bold];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=2, style=dotted];
m2_28 -> m2_23  [key=2, style=dotted];
m2_28 -> m2_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_29 -> m2_27  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_4  [key=2, style=dotted];
m2_8 -> m2_5  [color=blue, key=0, style=bold];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=2, style=dotted];
m2_16 -> m2_14  [color=blue, key=0, style=bold];
m2_91 -> m2_92  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_95  [key=0, style=solid];
m2_94 -> m2_154  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_153  [color=darkseagreen4, key=1, label=stillNeedsScan, style=dashed];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_153  [key=0, style=solid];
m2_96 -> m2_21  [key=2, style=dotted];
m2_96 -> m2_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_153 -> m2_154  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_97  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m2_97 -> m2_99  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m2_97 -> m2_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_108  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_109  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_113  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_125  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_127  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_129  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_131  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_133  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_138  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_142  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_148  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_97 -> m2_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_101  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_155  [key=2, style=dotted];
m2_99 -> m2_99  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_103  [key=0, style=solid];
m2_101 -> m2_156  [key=2, style=dotted];
m2_102 -> m2_96  [key=0, style=solid];
m2_102 -> m2_90  [key=2, style=dotted];
m2_102 -> m2_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_108  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_109  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_113  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_125  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_127  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_129  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_131  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_133  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_138  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_142  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_148  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_102 -> m2_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_105  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_55  [key=2, style=dotted];
m2_105 -> m2_144  [color=darkseagreen4, key=1, label=fills, style=dashed];
m2_105 -> m2_150  [color=darkseagreen4, key=1, label=fills, style=dashed];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_111  [key=0, style=solid];
m2_107 -> m2_157  [key=2, style=dotted];
m2_107 -> m2_113  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_107 -> m2_122  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_107 -> m2_125  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_107 -> m2_127  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_107 -> m2_129  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_107 -> m2_131  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_107 -> m2_133  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_107 -> m2_135  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_107 -> m2_137  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_107 -> m2_143  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_155  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_55  [key=2, style=dotted];
m2_109 -> m2_56  [key=2, style=dotted];
m2_110 -> m2_96  [key=0, style=solid];
m2_110 -> m2_90  [key=2, style=dotted];
m2_110 -> m2_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_113  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_125  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_127  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_129  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_131  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_133  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_138  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_142  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_148  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_110 -> m2_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_96  [key=0, style=solid];
m2_111 -> m2_158  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_121  [key=0, style=solid];
m2_113 -> m2_159  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_90  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_55  [key=2, style=dotted];
m2_118 -> m2_56  [key=2, style=dotted];
m2_120 -> m2_96  [key=0, style=solid];
m2_120 -> m2_161  [key=2, style=dotted];
m2_120 -> m2_162  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_126  [key=0, style=solid];
m2_123 -> m2_128  [key=0, style=solid];
m2_123 -> m2_130  [key=0, style=solid];
m2_123 -> m2_132  [key=0, style=solid];
m2_123 -> m2_134  [key=0, style=solid];
m2_123 -> m2_136  [key=0, style=solid];
m2_125 -> m2_139  [key=0, style=solid];
m2_125 -> m2_144  [key=0, style=solid];
m2_125 -> m2_163  [key=2, style=dotted];
m2_127 -> m2_139  [key=0, style=solid];
m2_127 -> m2_144  [key=0, style=solid];
m2_127 -> m2_164  [key=2, style=dotted];
m2_129 -> m2_139  [key=0, style=solid];
m2_129 -> m2_144  [key=0, style=solid];
m2_129 -> m2_165  [key=2, style=dotted];
m2_131 -> m2_139  [key=0, style=solid];
m2_131 -> m2_144  [key=0, style=solid];
m2_131 -> m2_166  [key=2, style=dotted];
m2_133 -> m2_139  [key=0, style=solid];
m2_133 -> m2_144  [key=0, style=solid];
m2_133 -> m2_167  [key=2, style=dotted];
m2_135 -> m2_139  [key=0, style=solid];
m2_135 -> m2_144  [key=0, style=solid];
m2_135 -> m2_168  [key=2, style=dotted];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_144  [key=0, style=solid];
m2_138 -> m2_169  [key=2, style=dotted];
m2_138 -> m2_170  [key=2, style=dotted];
m2_138 -> m2_150  [color=darkseagreen4, key=1, label=fills, style=dashed];
m2_141 -> m2_144  [key=0, style=solid];
m2_141 -> m2_171  [key=2, style=dotted];
m2_141 -> m2_162  [key=2, style=dotted];
m2_142 -> m2_143  [key=0, style=solid];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_172  [key=2, style=dotted];
m2_143 -> n52  [key=2, style=dotted];
m2_143 -> m2_161  [key=2, style=dotted];
m2_143 -> m2_162  [key=2, style=dotted];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_147  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_144  [key=0, style=solid];
m2_148 -> m2_149  [key=0, style=solid];
m2_151 -> m2_96  [key=0, style=solid];
m2_151 -> m2_90  [key=2, style=dotted];
m2_151 -> m2_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_96  [key=0, style=solid];
m2_100 -> m2_90  [key=2, style=dotted];
m2_100 -> m2_100  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m2_100 -> m2_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_108  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_109  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_113  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_125  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_127  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_129  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_131  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_133  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_138  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_142  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_148  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_100 -> m2_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_104 -> m2_96  [key=0, style=solid];
m2_104 -> m2_153  [color=darkseagreen4, key=1, label=stillNeedsScan, style=dashed];
m2_106 -> m2_107  [key=0, style=solid];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_150  [key=0, style=solid];
m2_144 -> m2_146  [color=darkseagreen4, key=1, label=fill, style=dashed];
m2_144 -> m2_148  [color=darkseagreen4, key=1, label=fill, style=dashed];
m2_144 -> m2_149  [color=darkseagreen4, key=1, label=fill, style=dashed];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_152  [key=0, style=solid];
m2_150 -> m2_175  [key=2, style=dotted];
m2_150 -> m2_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_125  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_122 -> m2_127  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_122 -> m2_129  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_122 -> m2_131  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_122 -> m2_133  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_122 -> m2_135  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_137 -> m2_138  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_114 -> m2_115  [key=0, style=solid];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_142  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_160  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_134 -> m2_135  [key=0, style=solid];
m2_136 -> m2_137  [key=0, style=solid];
m2_139 -> m2_140  [key=0, style=solid];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_160  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_56  [key=2, style=dotted];
m2_149 -> m2_144  [key=0, style=solid];
m2_149 -> m2_174  [key=2, style=dotted];
m2_152 -> m2_96  [key=0, style=solid];
m2_152 -> m2_153  [color=darkseagreen4, key=1, label=stillNeedsScan, style=dashed];
m2_154 -> m2_91  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation", style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_4  [key=2, style=dotted];
m2_13 -> m2_9  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [color=red, key=0, style=solid];
m2_2 -> m2_3  [color=red, key=0, style=solid];
m2_2 -> m2_4  [color=red, key=2, style=dotted];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_57 -> m2_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_57 -> m2_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_57 -> m2_66  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_57 -> m2_67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_57 -> m2_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_57 -> m2_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_50  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_64  [key=0, style=solid];
m2_62 -> m2_74  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_51  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_52  [key=2, style=dotted];
m2_66 -> m2_68  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_69  [key=0, style=solid];
m2_67 -> m2_53  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_54  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_55  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_63 -> m2_73  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_56  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_73 -> m2_57  [color=blue, key=0, style=bold];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_189  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m2_186 -> m2_190  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_189  [key=0, style=solid];
m2_187 -> m2_194  [key=2, style=dotted];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_195  [key=2, style=dotted];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_196  [key=2, style=dotted];
m2_188 -> m2_193  [key=0, style=solid];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_197  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_50  [key=2, style=dotted];
m2_193 -> m2_186  [color=blue, key=0, style=bold];
m2_204 -> m2_205  [key=0, style=solid];
m2_205 -> m2_204  [color=blue, key=0, style=bold];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_75 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_75 -> m2_82  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_75 -> m2_83  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_75 -> m2_84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_75 -> m2_86  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_78  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_50  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_82  [key=0, style=solid];
m2_80 -> m2_90  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_52  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_85  [key=0, style=solid];
m2_83 -> m2_53  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_52  [key=2, style=dotted];
m2_84 -> m2_54  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_55  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_81 -> m2_89  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_56  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_89 -> m2_75  [color=blue, key=0, style=bold];
m2_206 -> m2_207  [key=0, style=solid];
m2_207 -> m2_206  [color=blue, key=0, style=bold];
m2_51 -> m2_208  [key=0, style=solid];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_210  [key=2, style=dotted];
m2_209 -> m2_51  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=2, style=dotted];
m2_19 -> m2_22  [key=2, style=dotted];
m2_19 -> m2_23  [key=2, style=dotted];
m2_19 -> m2_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_19 -> m2_19  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m2_20 -> m2_18  [color=blue, key=0, style=bold];
m2_211 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_2  [color=red, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_35  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_40  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_45  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_46  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_58  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_62  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_64  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_65  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_70  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_71  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_76  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_78  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_86  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_87  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_92  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_93  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_96  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_102  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_103  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_105  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_107  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_109  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_110  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_111  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_113  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_118  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_120  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_141  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_143  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_146  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_149  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_153  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_187  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_189  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_190  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_191  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_198  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_199  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_200  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_211 -> m2_208  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
}
