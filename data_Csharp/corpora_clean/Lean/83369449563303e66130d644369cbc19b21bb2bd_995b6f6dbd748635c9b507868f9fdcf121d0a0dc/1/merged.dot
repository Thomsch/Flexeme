digraph  {
n59 [label="QuantConnect.Indicators.KeltnerChannels", span=""];
n0 [label="Entry QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(int, decimal, QuantConnect.Indicators.MovingAverageType)", span="68-68", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(int, decimal, QuantConnect.Indicators.MovingAverageType)"];
n1 [label="Exit QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(int, decimal, QuantConnect.Indicators.MovingAverageType)", span="68-68", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(int, decimal, QuantConnect.Indicators.MovingAverageType)"];
n2 [label="Entry QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="80-80", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)"];
n3 [label="_k = k", span="83-83", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)"];
n4 [label="AverageTrueRange = new AverageTrueRange(name + ''_AverageTrueRange'', period, MovingAverageType.Simple)", span="86-86", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)"];
n5 [label="MiddleBand = movingAverageType.AsIndicator(name + ''_MiddleBand'', period)", span="87-87", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)"];
n6 [label="LowerBand = new FunctionalIndicator<TradeBar>(name + ''_LowerBand'',\r\n                input => ComputeLowerBand(),\r\n                lowerBand => MiddleBand.IsReady,\r\n                () => MiddleBand.Reset()\r\n                )", span="90-94", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)"];
n7 [label="UpperBand = new FunctionalIndicator<TradeBar>(name + ''_UpperBand'',\r\n                input => ComputeUpperBand(),\r\n                upperBand => MiddleBand.IsReady,\r\n                () => MiddleBand.Reset()\r\n                )", span="97-101", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)"];
n9 [label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="56-56", cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)"];
n10 [label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", span="75-75", cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)"];
n11 [label="Entry QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>, System.Action)", span="55-55", cluster="QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>, System.Action)"];
n8 [label="Exit QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="80-80", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)"];
n12 [label="Entry lambda expression", span="91-91", cluster="lambda expression"];
n13 [label="ComputeLowerBand()", span="91-91", cluster="lambda expression"];
n14 [label="Exit lambda expression", span="91-91", cluster="lambda expression"];
n15 [label="Entry QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", span="146-146", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()"];
n16 [label="Entry lambda expression", span="92-92", cluster="lambda expression"];
n17 [label="MiddleBand.IsReady", span="92-92", cluster="lambda expression"];
n18 [label="Exit lambda expression", span="92-92", cluster="lambda expression"];
n19 [label="Entry lambda expression", span="93-93", cluster="lambda expression"];
n20 [label="MiddleBand.Reset()", span="93-93", cluster="lambda expression"];
n21 [label="Exit lambda expression", span="93-93", cluster="lambda expression"];
n22 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="102-102", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()"];
n23 [label="Entry lambda expression", span="98-98", cluster="lambda expression"];
n24 [label="ComputeUpperBand()", span="98-98", cluster="lambda expression"];
n25 [label="Exit lambda expression", span="98-98", cluster="lambda expression"];
n26 [label="Entry QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", span="154-154", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()"];
n27 [label="Entry lambda expression", span="99-99", cluster="lambda expression"];
n28 [label="MiddleBand.IsReady", span="99-99", cluster="lambda expression"];
n29 [label="Exit lambda expression", span="99-99", cluster="lambda expression"];
n30 [label="Entry lambda expression", span="100-100", cluster="lambda expression"];
n31 [label="MiddleBand.Reset()", span="100-100", cluster="lambda expression"];
n32 [label="Exit lambda expression", span="100-100", cluster="lambda expression"];
n33 [label="Entry QuantConnect.Indicators.KeltnerChannels.Reset()", span="115-115", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()"];
n34 [label="AverageTrueRange.Reset()", span="117-117", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()"];
n35 [label="MiddleBand.Reset()", span="118-118", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()"];
n36 [label="UpperBand.Reset()", span="119-119", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()"];
n37 [label="LowerBand.Reset()", span="120-120", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()"];
n38 [label="base.Reset()", span="121-121", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()"];
n39 [label="Exit QuantConnect.Indicators.KeltnerChannels.Reset()", span="115-115", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()"];
n40 [label="Entry QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="129-129", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n41 [label="AverageTrueRange.Update(input)", span="131-131", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n42 [label="var typicalPrice = (input.High + input.Low + input.Close)/3m", span="133-133", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n43 [label="MiddleBand.Update(input.Time, typicalPrice)", span="134-134", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n44 [label="Console.WriteLine(input.Time.ToString(''yyyymmdd'') + ''\t'' + typicalPrice.SmartRounding() + ''\t'' + MiddleBand.Current.Value.SmartRounding())", span="135-135", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", color=red, community=0];
n45 [label="LowerBand.Update(input)", span="138-138", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n46 [label="UpperBand.Update(input)", span="139-139", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n49 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)"];
n50 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="36-36", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)"];
n51 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)"];
n52 [label="Entry decimal.SmartRounding()", span="173-173", cluster="decimal.SmartRounding()"];
n53 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)"];
n47 [label="return MiddleBand;", span="140-140", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n48 [label="Exit QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="129-129", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n54 [label="return MiddleBand.IsReady ? MiddleBand - AverageTrueRange*_k : new decimal(0.0);", span="148-148", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()"];
n55 [label="Exit QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", span="146-146", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()"];
n56 [label="Entry decimal.Decimal(double)", span="0-0", cluster="decimal.Decimal(double)"];
n57 [label="return MiddleBand.IsReady ? MiddleBand + AverageTrueRange*_k : new decimal(0.0);", span="156-156", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()"];
n58 [label="Exit QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", span="154-154", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()"];
m0_6 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="LocalDiskFactorFileProvider.cs"];
m0_32 [label="Entry QuantConnect.Data.Auxiliary.FactorFile.Read(string, string)", span="48-48", cluster="QuantConnect.Data.Auxiliary.FactorFile.Read(string, string)", file="LocalDiskFactorFileProvider.cs"];
m0_23 [label="Entry QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", span="124-124", cluster="QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", file="LocalDiskFactorFileProvider.cs"];
m0_0 [label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", span="35-35", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", file="LocalDiskFactorFileProvider.cs"];
m0_1 [label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", span="35-35", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", file="LocalDiskFactorFileProvider.cs"];
m0_7 [label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", span="56-56", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_8 [label="FactorFile factorFile", span="58-58", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_9 [label="_cache.TryGetValue(symbol, out factorFile)", span="59-59", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_11 [label="var market = symbol.ID.Market", span="64-64", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_14 [label="return GetFactorFile(symbol, symbol.Value, market);", span="70-70", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_15 [label="var mapFile = mapFileResolver.ResolveMapFile(symbol.Value, symbol.ID.Date)", span="73-73", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", color=green, community=0, file="LocalDiskFactorFileProvider.cs"];
m0_17 [label="return GetFactorFile(symbol, symbol.Value, market);", span="76-76", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_18 [label="return GetFactorFile(symbol, mapFile.Permtick, market);", span="79-79", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_10 [label="return factorFile;", span="61-61", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_12 [label="var mapFileResolver = _mapFileProvider.Get(market)", span="67-67", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_13 [label="mapFileResolver == null", span="68-68", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_16 [label="mapFile.IsNullOrEmpty()", span="74-74", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_19 [label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", span="56-56", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs"];
m0_33 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="LocalDiskFactorFileProvider.cs"];
m0_21 [label="Entry QuantConnect.Interfaces.IMapFileProvider.Get(string)", span="33-33", cluster="QuantConnect.Interfaces.IMapFileProvider.Get(string)", file="LocalDiskFactorFileProvider.cs"];
m0_31 [label="Entry QuantConnect.Data.Auxiliary.FactorFile.HasScalingFactors(string, string)", span="86-86", cluster="QuantConnect.Data.Auxiliary.FactorFile.HasScalingFactors(string, string)", file="LocalDiskFactorFileProvider.cs"];
m0_2 [label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", span="45-45", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs"];
m0_3 [label="_mapFileProvider = mapFileProvider", span="47-47", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs"];
m0_4 [label="_cache = new ConcurrentDictionary<Symbol, FactorFile>()", span="48-48", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs"];
m0_5 [label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", span="45-45", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs"];
m0_22 [label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", span="85-85", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs"];
m0_25 [label="FactorFile.HasScalingFactors(permtick, market)", span="87-87", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs"];
m0_26 [label="var factorFile = FactorFile.Read(permtick, market)", span="89-89", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs"];
m0_27 [label="_cache.AddOrUpdate(symbol, factorFile, (s, c) => factorFile)", span="90-90", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs"];
m0_29 [label="return null;", span="94-94", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs"];
m0_28 [label="return factorFile;", span="91-91", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs"];
m0_30 [label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", span="85-85", cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs"];
m0_24 [label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105", cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="LocalDiskFactorFileProvider.cs"];
m0_20 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LocalDiskFactorFileProvider.cs"];
m0_34 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="LocalDiskFactorFileProvider.cs"];
m0_35 [label=factorFile, span="90-90", cluster="lambda expression", file="LocalDiskFactorFileProvider.cs"];
m0_36 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="LocalDiskFactorFileProvider.cs"];
m0_37 [label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", span="", file="LocalDiskFactorFileProvider.cs"];
m0_38 [label=factorFile, span="", file="LocalDiskFactorFileProvider.cs"];
m1_79 [label="Entry Unk.Save", span="", cluster="Unk.Save", file="MapFileResolverTests.cs"];
m1_86 [label="var entry = zipStream.GetNextEntry()", span="216-216", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_81 [label=config, span="", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_82 [label=lastSourceRefreshTime, span="", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_83 [label=sourceFactory, span="", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_90 [label="data.Add(entry.Name, buffer.GetString())", span="225-225", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_93 [label="return data;", span="240-240", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_84 [label="QuantConnect.Interfaces.IDataProvider", span="", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_85 [label=frontier, span="", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_89 [label="zipStream.Read(buffer, 0, (int)entry.Size)", span="222-222", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_91 [label=Exception, span="236-236", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_87 [label="entry != null", span="218-218", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_88 [label="var buffer = new byte[entry.Size]", span="221-221", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_92 [label="Log.Error(err)", span="238-238", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_94 [label="Exit QuantConnect.Compression.UnzipData(byte[])", span="201-201", cluster="QuantConnect.Compression.UnzipData(byte[])", file="MapFileResolverTests.cs"];
m1_17 [label="Entry ZipOutputStream.cstr", span="", cluster="ZipOutputStream.cstr", file="MapFileResolverTests.cs"];
m1_45 [label="return success;", span="127-127", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_288 [label="Exit QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="617-617", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="MapFileResolverTests.cs"];
m1_284 [label="Entry QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="617-617", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="MapFileResolverTests.cs"];
m1_285 [label="var entryReader = new StreamReader(entry.OpenReader())", span="619-619", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="MapFileResolverTests.cs"];
m1_287 [label="yield return entryReader.ReadLine();", span="623-623", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="MapFileResolverTests.cs"];
m1_286 [label="!entryReader.EndOfStream", span="621-621", cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="MapFileResolverTests.cs"];
m1_80 [label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", span="", cluster="ZipFile.cstr", file="MapFileResolverTests.cs"];
m1_158 [label="stream.PutNextEntry(entry)", span="354-354", cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs"];
m1_155 [label="Entry QuantConnect.Compression.Zip(string, string, string)", span="349-349", cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs"];
m1_156 [label="var stream = new ZipOutputStream(File.Create(zipPath))", span="351-351", cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs"];
m1_157 [label="var entry = new ZipEntry(zipEntry)", span="353-353", cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs"];
m1_160 [label="var dataReader = new MemoryStream(Encoding.Default.GetBytes(data))", span="356-356", cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs"];
m1_163 [label="stream.Write(buffer, 0, sourceBytes)", span="362-362", cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs"];
m1_159 [label="var buffer = new byte[4096]", span="355-355", cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs"];
m1_162 [label="sourceBytes = dataReader.Read(buffer, 0, buffer.Length)", span="361-361", cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs"];
m1_161 [label="int sourceBytes", span="358-358", cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs"];
m1_164 [label="sourceBytes > 0", span="364-364", cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs"];
m1_165 [label="Exit QuantConnect.Compression.Zip(string, string, string)", span="349-349", cluster="QuantConnect.Compression.Zip(string, string, string)", file="MapFileResolverTests.cs"];
m1_335 [label="Entry string.LastIndexOf(char)", span="0-0", cluster="string.LastIndexOf(char)", file="MapFileResolverTests.cs"];
m1_51 [label="var writer = new StreamWriter(stream)", span="142-142", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_148 [label="Entry System.IO.File.OpenRead(string)", span="0-0", cluster="System.IO.File.OpenRead(string)", file="MapFileResolverTests.cs"];
m1_19 [label="var utcNow = _timeProvider.GetUtcNow()", span="62-62", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_47 [label="Entry lambda expression", span="91-95", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_137 [label="stream.PutNextEntry(entry)", span="312-312", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_133 [label="Entry QuantConnect.Compression.Zip(string, string, string, bool)", span="303-303", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_134 [label="var buffer = new byte[4096]", span="307-307", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_135 [label="var stream = new ZipOutputStream(File.Create(destination))", span="308-308", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_136 [label="var entry = new ZipEntry(zipEntryName)", span="311-311", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_138 [label="var fs = File.OpenRead(source)", span="314-314", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_143 [label=deleteOriginal, span="327-327", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_144 [label="File.Delete(source)", span="329-329", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_140 [label="sourceBytes = fs.Read(buffer, 0, buffer.Length)", span="319-319", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_141 [label="stream.Write(buffer, 0, sourceBytes)", span="320-320", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_139 [label="int sourceBytes", span="316-316", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_142 [label="sourceBytes > 0", span="322-322", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_145 [label=Exception, span="332-332", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_146 [label="Log.Error(err)", span="334-334", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_147 [label="Exit QuantConnect.Compression.Zip(string, string, string, bool)", span="303-303", cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="MapFileResolverTests.cs"];
m1_23 [label="lastSourceRefreshTime = utcNow", span="69-69", cluster="lambda expression", file="MapFileResolverTests.cs", color=green, community=0];
m1_61 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", span="106-106", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", file="MapFileResolverTests.cs"];
m1_98 [label="Entry byte[].GetString(System.Text.Encoding)", span="84-84", cluster="byte[].GetString(System.Text.Encoding)", file="MapFileResolverTests.cs"];
m1_64 [label="File.Exists(path)", span="171-171", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs"];
m1_37 [label="sourceBytes = ms.Read(buffer, 0, buffer.Length)", span="110-110", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_257 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="MapFileResolverTests.cs"];
m1_303 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_270 [label="return ReadLinesImpl(filename, firstEntryOnly: true).Single().Value;", span="591-591", cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs"];
m1_266 [label="Entry QuantConnect.Compression.ReadLines(string)", span="581-581", cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs"];
m1_267 [label="!File.Exists(filename)", span="583-583", cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs"];
m1_268 [label="Log.Error(''Compression.ReadFirstZipEntry(): File does not exist: '' + filename)", span="585-585", cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs"];
m1_269 [label="return Enumerable.Empty<string>();", span="586-586", cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs"];
m1_271 [label=Exception, span="593-593", cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs"];
m1_272 [label="Log.Error(err)", span="595-595", cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs"];
m1_273 [label="return Enumerable.Empty<string>();", span="597-597", cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs"];
m1_274 [label="Exit QuantConnect.Compression.ReadLines(string)", span="581-581", cluster="QuantConnect.Compression.ReadLines(string)", file="MapFileResolverTests.cs"];
m1_372 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="MapFileResolverTests.cs"];
m1_21 [label="utcNow - lastSourceRefreshTime < minimumTimeBetweenCalls", span="64-64", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_14 [label="return false;", span="77-77", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="MapFileResolverTests.cs"];
m1_340 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="MapFileResolverTests.cs"];
m1_103 [label="var entry = archive.CreateEntry(zipEntryName)", span="254-254", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs"];
m1_100 [label="Entry QuantConnect.Compression.ZipBytes(byte[], string)", span="249-249", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs"];
m1_101 [label="var memoryStream = new MemoryStream()", span="251-251", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs"];
m1_105 [label="entryStream.Write(bytes, 0, bytes.Length)", span="257-257", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs"];
m1_102 [label="var archive = new ZipArchive(memoryStream, ZipArchiveMode.Create, true)", span="252-252", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs"];
m1_106 [label="return memoryStream.GetBuffer();", span="260-260", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs"];
m1_104 [label="var entryStream = entry.Open()", span="255-255", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs"];
m1_107 [label="Exit QuantConnect.Compression.ZipBytes(byte[], string)", span="249-249", cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="MapFileResolverTests.cs"];
m1_304 [label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", span="665-665", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_305 [label="zipFile = ZipFile.Read(zipstream)", span="667-667", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_306 [label="var entry = zipFile.Entries.FirstOrDefault()", span="672-672", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_307 [label="entry != null", span="674-674", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_308 [label="return entry.OpenReader();", span="676-676", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_309 [label=Exception, span="679-679", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_311 [label="return null;", span="684-684", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_310 [label="Log.Error(err)", span="681-681", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_312 [label="Exit QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", span="665-665", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_242 [label="Entry System.IO.StreamReader.Close()", span="0-0", cluster="System.IO.StreamReader.Close()", file="MapFileResolverTests.cs"];
m1_348 [label="Entry Unk.CreateInputTarArchive", span="", cluster="Unk.CreateInputTarArchive", file="MapFileResolverTests.cs"];
m1_388 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="MapFileResolverTests.cs"];
m1_27 [label="SourceRequiresFastForward(source)", span="76-76", cluster="lambda expression", file="MapFileResolverTests.cs", color=green, community=0];
m1_78 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="MapFileResolverTests.cs"];
m1_52 [label="var entry = new ZipEntry(zipEntry)", span="144-144", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_334 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="MapFileResolverTests.cs"];
m1_350 [label="Entry System.IO.Stream.Close()", span="0-0", cluster="System.IO.Stream.Close()", file="MapFileResolverTests.cs"];
m1_175 [label="Entry Unk.CreateFromDirectory", span="", cluster="Unk.CreateFromDirectory", file="MapFileResolverTests.cs"];
m1_18 [label="Entry System.IO.File.Create(string)", span="0-0", cluster="System.IO.File.Create(string)", file="MapFileResolverTests.cs"];
m1_245 [label="zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0", span="501-501", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_244 [label="Entry lambda expression", span="501-501", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_246 [label="Exit lambda expression", span="501-501", cluster="lambda expression", file="MapFileResolverTests.cs"];
m1_26 [label="Entry Unk.Close", span="", cluster="Unk.Close", color=green, community=0, file="MapFileResolverTests.cs"];
m1_24 [label="Entry Unk.CloseEntry", span="", cluster="Unk.CloseEntry", color=green, community=0, file="MapFileResolverTests.cs"];
m1_25 [label="Entry Unk.Finish", span="", cluster="Unk.Finish", color=green, community=0, file="MapFileResolverTests.cs"];
m1_29 [label="var success = true", span="90-90", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_30 [label="var buffer = new byte[4096]", span="91-91", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_31 [label="var stream = new ZipOutputStream(File.Create(zipPath))", span="96-96", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_28 [label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", span="88-88", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_32 [label=filenamesAndData, span="98-98", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", color=green, community=0, file="MapFileResolverTests.cs"];
m1_33 [label="var entry = new ZipEntry(file.Key)", span="101-101", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", color=green, community=0, file="MapFileResolverTests.cs"];
m1_34 [label="stream.PutNextEntry(entry)", span="103-103", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_20 [label="Entry ZipEntry.cstr", span="", cluster="ZipEntry.cstr", file="MapFileResolverTests.cs"];
m1_22 [label="Entry Unk.PutNextEntry", span="", cluster="Unk.PutNextEntry", file="MapFileResolverTests.cs"];
m1_48 [label="Entry System.IO.MemoryStream.Read(byte[], int, int)", span="0-0", cluster="System.IO.MemoryStream.Read(byte[], int, int)", file="MapFileResolverTests.cs"];
m1_49 [label="Entry QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="137-137", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_50 [label="var stream = new ZipOutputStream(File.Create(zipPath))", span="141-141", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_4 [label="var config = request.Configuration", span="50-50", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs"];
m1_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", span="37-37", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", file="MapFileResolverTests.cs"];
m1_1 [label="_timeProvider = timeProvider", span="39-39", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", file="MapFileResolverTests.cs"];
m1_3 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs"];
m1_5 [label="var frontier = Ref.Create(DateTime.MinValue)", span="54-54", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs"];
m1_2 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", span="37-37", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", file="MapFileResolverTests.cs"];
m1_7 [label="var sourceFactory = (BaseData) ObjectActivator.GetActivator(config.Type).Invoke(new object[] {config.Type})", span="56-56", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs"];
m1_8 [label="var refresher = new RefreshEnumerator<BaseData>(() =>\r\n            {\r\n                // rate limit the refresh of this enumerator stack\r\n                var utcNow = _timeProvider.GetUtcNow();\r\n                var minimumTimeBetweenCalls = GetMinimumTimeBetweenCalls(config.Increment);\r\n                if (utcNow - lastSourceRefreshTime < minimumTimeBetweenCalls)\r\n                {\r\n                    return Enumerable.Empty<BaseData>().GetEnumerator();\r\n                }\r\n\r\n                lastSourceRefreshTime = utcNow;\r\n                var localDate = utcNow.ConvertFromUtc(config.ExchangeTimeZone).Date;\r\n                var source = sourceFactory.GetSource(config, localDate, true);\r\n\r\n                // fetch the new source and enumerate the data source reader\r\n                var enumerator = EnumerateDataSourceReader(config, dataProvider, frontier, source, localDate);\r\n\r\n                if (SourceRequiresFastForward(source))\r\n                {\r\n                    // apply fast forward logic for file transport mediums\r\n                    var maximumDataAge = GetMaximumDataAge(config.Increment);\r\n                    enumerator = new FastForwardEnumerator(enumerator, _timeProvider, config.ExchangeTimeZone, maximumDataAge);\r\n                }\r\n                else\r\n                {\r\n                    // rate limit calls to this enumerator stack\r\n                    enumerator = new RateLimitEnumerator<BaseData>(enumerator, _timeProvider, minimumTimeBetweenCalls);\r\n                }\r\n\r\n                if (source.Format == FileFormat.Collection)\r\n                {\r\n                    // unroll collections into individual data points after fast forward/rate limiting applied\r\n                    enumerator = enumerator.SelectMany(data =>\r\n                    {\r\n                        var collection = data as BaseDataCollection;\r\n                        return collection?.Data.GetEnumerator() ?? new List<BaseData> {data}.GetEnumerator();\r\n                    });\r\n                }\r\n\r\n                return enumerator;\r\n            })", span="59-99", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs", color=green, community=0];
m1_9 [label="var timeZoneOffsetProvider = new TimeZoneOffsetProvider(request.Security.Exchange.TimeZone, request.StartTimeUtc, request.EndTimeUtc)", span="102-102", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs", color=green, community=0];
m1_10 [label="return new FrontierAwareEnumerator(refresher, _timeProvider, timeZoneOffsetProvider);", span="103-103", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs", color=green, community=0];
m1_11 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs"];
m1_6 [label="var lastSourceRefreshTime = DateTime.MinValue", span="55-55", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="MapFileResolverTests.cs"];
m1_12 [label="Entry QuantConnect.Util.Ref.Create<T>(T)", span="100-100", cluster="QuantConnect.Util.Ref.Create<T>(T)", file="MapFileResolverTests.cs"];
m1_15 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", span="38-38", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="MapFileResolverTests.cs"];
m1_13 [label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="49-49", cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="MapFileResolverTests.cs"];
m1_16 [label="Entry QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", span="51-51", cluster="QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", file="MapFileResolverTests.cs"];
m1_390 [label="Entry QuantConnect.Compression.ValidateZip(string)", span="840-840", cluster="QuantConnect.Compression.ValidateZip(string)", file="MapFileResolverTests.cs"];
m1_391 [label="var zip = new ICSharpCode.SharpZipLib.Zip.ZipFile(path)", span="842-842", cluster="QuantConnect.Compression.ValidateZip(string)", file="MapFileResolverTests.cs"];
m1_392 [label="return zip.TestArchive(true);", span="844-844", cluster="QuantConnect.Compression.ValidateZip(string)", file="MapFileResolverTests.cs"];
m1_393 [label="Exit QuantConnect.Compression.ValidateZip(string)", span="840-840", cluster="QuantConnect.Compression.ValidateZip(string)", file="MapFileResolverTests.cs"];
m1_199 [label="Entry System.IO.DirectoryInfo.Create()", span="0-0", cluster="System.IO.DirectoryInfo.Create()", file="MapFileResolverTests.cs"];
m1_371 [label="Entry KeyValuePair<string, byte[]>.cstr", span="", cluster="KeyValuePair<string, byte[]>.cstr", file="MapFileResolverTests.cs"];
m1_44 [label="success = false", span="125-125", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_122 [label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0", cluster="System.IO.Path.GetFileNameWithoutExtension(string)", file="MapFileResolverTests.cs"];
m1_112 [label="Entry System.IO.MemoryStream.GetBuffer()", span="0-0", cluster="System.IO.MemoryStream.GetBuffer()", file="MapFileResolverTests.cs"];
m1_99 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="MapFileResolverTests.cs"];
m1_150 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="MapFileResolverTests.cs"];
m1_96 [label="Entry ZipInputStream.cstr", span="", cluster="ZipInputStream.cstr", file="MapFileResolverTests.cs"];
m1_241 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="MapFileResolverTests.cs"];
m1_77 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMaximumDataAge(System.TimeSpan)", span="152-152", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMaximumDataAge(System.TimeSpan)", file="MapFileResolverTests.cs"];
m1_38 [label="stream.Write(buffer, 0, sourceBytes)", span="111-111", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_40 [label="stream.Finish()", span="118-118", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_198 [label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0", cluster="System.IO.FileInfo.FileInfo(string)", file="MapFileResolverTests.cs"];
m1_214 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="MapFileResolverTests.cs"];
m1_36 [label="int sourceBytes", span="107-107", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_71 [label=Exception, span="188-188", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs"];
m1_72 [label="Log.Error(err)", span="190-190", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs"];
m1_176 [label="Entry QuantConnect.Compression.Unzip(string, string, bool)", span="397-397", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_177 [label="!File.Exists(zip)", span="399-399", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_179 [label="!overwrite", span="403-403", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_180 [label="System.IO.Compression.ZipFile.ExtractToDirectory(zip, directory)", span="405-405", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_181 [label="var archive = new ZipArchive(File.OpenRead(zip))", span="409-409", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_184 [label="var filepath = Path.Combine(directory, file.FullName)", span="415-415", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_178 [label="return false;", span="399-399", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_182 [label="archive.Entries", span="411-411", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_183 [label="file.Name == ''''", span="414-414", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_191 [label="return true;", span="427-427", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_190 [label="file.ExtractToFile(outputFile.FullName, true)", span="422-422", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_185 [label="OS.IsLinux", span="416-416", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_186 [label="filepath = filepath.Replace(@''\'', ''/'')", span="416-416", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_187 [label="var outputFile = new FileInfo(filepath)", span="417-417", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_188 [label="!outputFile.Directory.Exists", span="418-418", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_189 [label="outputFile.Directory.Create()", span="420-420", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_192 [label=Exception, span="429-429", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_193 [label="Log.Error(err)", span="431-431", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_194 [label="return false;", span="432-432", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_195 [label="Exit QuantConnect.Compression.Unzip(string, string, bool)", span="397-397", cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_154 [label="Entry System.IO.Path.GetFileName(string)", span="0-0", cluster="System.IO.Path.GetFileName(string)", file="MapFileResolverTests.cs"];
m1_39 [label="sourceBytes > 0", span="113-113", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_247 [label="Entry Unk.Compare", span="", cluster="Unk.Compare", file="MapFileResolverTests.cs"];
m1_43 [label="Log.Error(err)", span="124-124", cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="MapFileResolverTests.cs"];
m1_76 [label="Entry System.IO.File.Exists(string)", span="0-0", cluster="System.IO.File.Exists(string)", file="MapFileResolverTests.cs"];
m1_294 [label="var entry = zipStream.GetNextEntry()", span="643-643", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_290 [label="Entry QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", span="631-631", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_291 [label="StreamReader reader = null", span="633-633", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_293 [label="var zipStream = new ZipInputStream(zipstream)", span="640-640", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_292 [label="MemoryStream file", span="637-637", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_296 [label="zipStream.Read(buffer, 0, (int)entry.Size)", span="645-645", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_295 [label="var buffer = new byte[entry.Size]", span="644-644", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_297 [label="file = new MemoryStream(buffer)", span="648-648", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_298 [label="reader = new StreamReader(file)", span="652-652", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_299 [label=Exception, span="654-654", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_301 [label="return reader;", span="659-659", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_300 [label="Log.Error(err)", span="656-656", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_302 [label="Exit QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", span="631-631", cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_97 [label="Entry Unk.GetNextEntry", span="", cluster="Unk.GetNextEntry", file="MapFileResolverTests.cs"];
m1_113 [label="Entry QuantConnect.Compression.UnGZip(string, string)", span="268-268", cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs"];
m1_114 [label="var dataBuffer = new byte[4096]", span="271-271", cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs"];
m1_115 [label="var newFileOutput = Path.Combine(targetDirectory, Path.GetFileNameWithoutExtension(gzipFileName))", span="272-272", cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs"];
m1_116 [label="Stream fileStream = new FileStream(gzipFileName, FileMode.Open, FileAccess.Read)", span="273-273", cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs"];
m1_119 [label="StreamUtils.Copy(gzipStream, fileOutput, dataBuffer)", span="277-277", cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs"];
m1_118 [label="var fileOutput = File.Create(newFileOutput)", span="275-275", cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs"];
m1_120 [label="return newFileOutput;", span="279-279", cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs"];
m1_117 [label="var gzipStream = new GZipInputStream(fileStream)", span="274-274", cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs"];
m1_121 [label="Exit QuantConnect.Compression.UnGZip(string, string)", span="268-268", cluster="QuantConnect.Compression.UnGZip(string, string)", file="MapFileResolverTests.cs"];
m1_68 [label="var zip = new ZipFile(path)", span="181-181", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs"];
m1_110 [label="Entry Unk.CreateEntry", span="", cluster="Unk.CreateEntry", file="MapFileResolverTests.cs"];
m1_275 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="MapFileResolverTests.cs"];
m1_289 [label="Entry System.IO.StreamReader.ReadLine()", span="0-0", cluster="System.IO.StreamReader.ReadLine()", file="MapFileResolverTests.cs"];
m1_41 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", span="106-106", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", file="MapFileResolverTests.cs"];
m1_35 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", span="30-30", cluster="QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", file="MapFileResolverTests.cs"];
m1_42 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.SourceRequiresFastForward(QuantConnect.Data.SubscriptionDataSource)", span="141-141", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.SourceRequiresFastForward(QuantConnect.Data.SubscriptionDataSource)", file="MapFileResolverTests.cs"];
m1_46 [label="Entry System.Collections.Generic.IEnumerator<T>.SelectMany<T, TResult>(System.Func<T, System.Collections.Generic.IEnumerator<TResult>>)", span="59-59", cluster="System.Collections.Generic.IEnumerator<T>.SelectMany<T, TResult>(System.Func<T, System.Collections.Generic.IEnumerator<TResult>>)", file="MapFileResolverTests.cs"];
m1_124 [label="Entry System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", span="0-0", cluster="System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", file="MapFileResolverTests.cs"];
m1_394 [label="Entry Unk.TestArchive", span="", cluster="Unk.TestArchive", file="MapFileResolverTests.cs"];
m1_351 [label="Entry QuantConnect.Compression.UnTarGzFiles(string, string)", span="765-765", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs"];
m1_352 [label="var inStream = File.OpenRead(source)", span="767-767", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs"];
m1_355 [label="tarArchive.ExtractContents(destination)", span="770-770", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs"];
m1_353 [label="var gzipStream = new GZipInputStream(inStream)", span="768-768", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs"];
m1_358 [label="inStream.Close()", span="773-773", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs"];
m1_354 [label="var tarArchive = TarArchive.CreateInputTarArchive(gzipStream)", span="769-769", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs"];
m1_357 [label="gzipStream.Close()", span="772-772", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs"];
m1_356 [label="tarArchive.Close()", span="771-771", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs"];
m1_359 [label="Exit QuantConnect.Compression.UnTarGzFiles(string, string)", span="765-765", cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="MapFileResolverTests.cs"];
m1_341 [label="Entry QuantConnect.Compression.UnTarFiles(string, string)", span="751-751", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs"];
m1_342 [label="var inStream = File.OpenRead(source)", span="753-753", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs"];
m1_344 [label="tarArchive.ExtractContents(destination)", span="755-755", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs"];
m1_343 [label="var tarArchive = TarArchive.CreateInputTarArchive(inStream)", span="754-754", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs"];
m1_346 [label="inStream.Close()", span="757-757", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs"];
m1_345 [label="tarArchive.Close()", span="756-756", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs"];
m1_347 [label="Exit QuantConnect.Compression.UnTarFiles(string, string)", span="751-751", cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="MapFileResolverTests.cs"];
m1_239 [label="Entry StreamReader.cstr", span="", cluster="StreamReader.cstr", file="MapFileResolverTests.cs"];
m1_207 [label="var entry = new ZipEntry(Path.GetFileName(file))", span="454-454", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_201 [label="Entry QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="439-439", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_202 [label="var zipStream = new ZipOutputStream(File.Create(destination))", span="443-443", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_204 [label=files, span="446-446", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_203 [label="var buffer = new byte[4096]", span="445-445", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_208 [label="zipStream.PutNextEntry(entry)", span="455-455", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_210 [label="StreamUtils.Copy(fstream, zipStream, buffer)", span="458-458", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_205 [label="!File.Exists(file)", span="448-448", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_211 [label=Exception, span="463-463", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_206 [label="Log.Trace(''ZipFiles(): File does not exist: '' + file)", span="450-450", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_209 [label="var fstream = File.OpenRead(file)", span="456-456", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_212 [label="Log.Error(err)", span="465-465", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_213 [label="Exit QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="439-439", cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_349 [label="Entry Unk.ExtractContents", span="", cluster="Unk.ExtractContents", file="MapFileResolverTests.cs"];
m1_238 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="MapFileResolverTests.cs"];
m1_62 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)", file="MapFileResolverTests.cs"];
m1_389 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="MapFileResolverTests.cs"];
m1_125 [label="Entry GZipInputStream.cstr", span="", cluster="GZipInputStream.cstr", file="MapFileResolverTests.cs"];
m1_337 [label="Entry ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", span="", cluster="ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", file="MapFileResolverTests.cs"];
m1_277 [label=firstEntryOnly, span="604-604", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs"];
m1_258 [label="Entry QuantConnect.Compression.ReadLinesImpl(string, bool)", span="600-600", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs"];
m1_276 [label="var zip = ZipFile.Read(filename)", span="602-602", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs"];
m1_279 [label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="607-607", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs"];
m1_280 [label="yield break;", span="608-608", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs"];
m1_282 [label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="612-612", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs"];
m1_278 [label="var entry = zip[0]", span="606-606", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs"];
m1_281 [label=zip, span="610-610", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs"];
m1_283 [label="Exit QuantConnect.Compression.ReadLinesImpl(string, bool)", span="600-600", cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="MapFileResolverTests.cs"];
m1_123 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="MapFileResolverTests.cs"];
m1_75 [label="Exit QuantConnect.Compression.ZipCreateAppendData(string, string, string)", span="167-167", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs"];
m1_111 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="MapFileResolverTests.cs"];
m1_366 [label="tar.CopyEntryContents(output)", span="793-793", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs"];
m1_360 [label="Entry QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="782-782", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs"];
m1_361 [label="var tar = new TarInputStream(isTarGz ? (Stream)new GZipInputStream(stream) : stream)", span="784-784", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs"];
m1_367 [label="yield return new KeyValuePair<string, byte[]>(entry.Name, output.ToArray());", span="794-794", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs"];
m1_362 [label="TarEntry entry", span="786-786", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs"];
m1_363 [label="(entry = tar.GetNextEntry()) != null", span="787-787", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs"];
m1_364 [label="entry.IsDirectory", span="789-789", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs"];
m1_365 [label="var output = new MemoryStream()", span="791-791", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs"];
m1_368 [label="Exit QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="782-782", cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="MapFileResolverTests.cs"];
m1_265 [label="Entry Unk.ReadZipEntry", span="", cluster="Unk.ReadZipEntry", file="MapFileResolverTests.cs"];
m1_240 [label="Entry Unk.OpenReader", span="", cluster="Unk.OpenReader", file="MapFileResolverTests.cs"];
m1_339 [label="Entry Unk.GetInputStream", span="", cluster="Unk.GetInputStream", file="MapFileResolverTests.cs"];
m1_324 [label="var entryFileName = Path.GetFileName(zipEntry.Name)", span="715-715", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_313 [label="Entry QuantConnect.Compression.UnzipToFolder(string)", span="692-692", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_314 [label="var files = new List<string>()", span="695-695", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_315 [label="var slash = zipFile.LastIndexOf(Path.DirectorySeparatorChar)", span="696-696", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_318 [label="outFolder = zipFile.Substring(0, slash)", span="700-700", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_320 [label="var fs = File.OpenRead(zipFile)", span="706-706", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_329 [label="files.Add(fullZipToPath)", span="725-725", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_332 [label="return files;", span="743-743", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_316 [label="var outFolder = ''''", span="697-697", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_317 [label="slash > 0", span="698-698", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_328 [label="var fullZipToPath = Path.Combine(outFolder, entryFileName)", span="722-722", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_319 [label="ICSharpCode.SharpZipLib.Zip.ZipFile zf = null", span="702-702", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_321 [label="zf = new ICSharpCode.SharpZipLib.Zip.ZipFile(fs)", span="707-707", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_322 [label=zf, span="709-709", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_327 [label="var zipStream = zf.GetInputStream(zipEntry)", span="719-719", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_323 [label="!zipEntry.IsFile", span="712-712", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_325 [label="entryFileName == null", span="716-716", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_326 [label="var buffer = new byte[4096]", span="718-718", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_331 [label="StreamUtils.Copy(zipStream, streamWriter, buffer)", span="731-731", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_330 [label="var streamWriter = File.Create(fullZipToPath)", span="729-729", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_333 [label="Exit QuantConnect.Compression.UnzipToFolder(string)", span="692-692", cluster="QuantConnect.Compression.UnzipToFolder(string)", file="MapFileResolverTests.cs"];
m1_338 [label="Entry Unk.GetFileName", span="", cluster="Unk.GetFileName", file="MapFileResolverTests.cs"];
m1_53 [label="stream.PutNextEntry(entry)", span="145-145", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_55 [label="writer.WriteLine(line)", span="148-148", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_58 [label="Log.Error(err)", span="155-155", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_54 [label=lines, span="146-146", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_56 [label="return true;", span="151-151", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_57 [label=Exception, span="153-153", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_60 [label="Exit QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="137-137", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_59 [label="return false;", span="156-156", cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="MapFileResolverTests.cs"];
m1_223 [label="var entry = zip.FirstOrDefault(x => zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0)", span="501-501", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_218 [label="Entry QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="489-489", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_219 [label="StreamReader reader = null", span="491-491", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_221 [label="File.Exists(filename)", span="496-496", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_222 [label="zip = new ZipFile(filename)", span="500-500", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_233 [label="Log.Error(''Data.UnZip(2): File doesn't exist: '' + filename)", span="519-519", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_235 [label="Log.Error(err, ''File: '' + filename)", span="524-524", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_220 [label="zip = null", span="492-492", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_236 [label="return reader;", span="526-526", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_229 [label="zip != null", span="513-513", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_230 [label="zip.Dispose()", span="513-513", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_224 [label="entry == null", span="502-502", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_226 [label="reader = new StreamReader(entry.OpenReader())", span="508-508", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_225 [label="return null;", span="505-505", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_227 [label=Exception, span="510-510", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_234 [label=Exception, span="522-522", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_231 [label="reader != null", span="514-514", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_232 [label="reader.Close()", span="514-514", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_228 [label="Log.Error(err, ''Inner try/catch'')", span="512-512", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_237 [label="Exit QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="489-489", cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_108 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="MapFileResolverTests.cs"];
m1_166 [label="Entry QuantConnect.Compression.ZipDirectory(string, string, bool)", span="376-376", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs"];
m1_167 [label="File.Exists(destination)", span="380-380", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs"];
m1_168 [label="File.Delete(destination)", span="380-380", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs"];
m1_169 [label="System.IO.Compression.ZipFile.CreateFromDirectory(directory, destination, CompressionLevel.Fastest, includeRootInZip)", span="381-381", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs"];
m1_170 [label="return true;", span="382-382", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs"];
m1_171 [label=Exception, span="384-384", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs"];
m1_172 [label="Log.Error(err)", span="386-386", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs"];
m1_173 [label="return false;", span="387-387", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs"];
m1_174 [label="Exit QuantConnect.Compression.ZipDirectory(string, string, bool)", span="376-376", cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="MapFileResolverTests.cs"];
m1_264 [label="Entry KeyValuePair<string, IEnumerable<string>>.cstr", span="", cluster="KeyValuePair<string, IEnumerable<string>>.cstr", file="MapFileResolverTests.cs"];
m1_262 [label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="571-571", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_259 [label="Entry QuantConnect.Compression.Unzip(System.IO.Stream)", span="565-565", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_260 [label="var zip = ZipFile.Read(stream)", span="567-567", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_261 [label=zip, span="569-569", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_263 [label="Exit QuantConnect.Compression.Unzip(System.IO.Stream)", span="565-565", cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="MapFileResolverTests.cs"];
m1_151 [label="Entry QuantConnect.Compression.Zip(string, bool)", span="344-344", cluster="QuantConnect.Compression.Zip(string, bool)", file="MapFileResolverTests.cs"];
m1_152 [label="return Zip(textPath, Path.GetFileName(textPath), deleteOriginal);", span="346-346", cluster="QuantConnect.Compression.Zip(string, bool)", file="MapFileResolverTests.cs"];
m1_153 [label="Exit QuantConnect.Compression.Zip(string, bool)", span="344-344", cluster="QuantConnect.Compression.Zip(string, bool)", file="MapFileResolverTests.cs"];
m1_197 [label="Entry Unk.Combine", span="", cluster="Unk.Combine", file="MapFileResolverTests.cs"];
m1_336 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="MapFileResolverTests.cs"];
m1_65 [label="var zip = ZipFile.Read(path)", span="173-173", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs"];
m1_243 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="MapFileResolverTests.cs"];
m1_73 [label="return false;", span="191-191", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs"];
m1_126 [label="Entry Unk.Copy", span="", cluster="Unk.Copy", file="MapFileResolverTests.cs"];
m1_215 [label="Entry QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="476-476", cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_216 [label="return Unzip(filename, null, out zip);", span="478-478", cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_217 [label="Exit QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="476-476", cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="MapFileResolverTests.cs"];
m1_370 [label="Entry Unk.CopyEntryContents", span="", cluster="Unk.CopyEntryContents", file="MapFileResolverTests.cs"];
m1_248 [label="Entry QuantConnect.Compression.Unzip(string)", span="540-540", cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs"];
m1_249 [label="!File.Exists(filename)", span="542-542", cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs"];
m1_250 [label="Log.Error(''Compression.Unzip(): File does not exist: '' + filename)", span="544-544", cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs"];
m1_252 [label="return ReadLinesImpl(filename);", span="550-550", cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs"];
m1_251 [label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="545-545", cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs"];
m1_253 [label=Exception, span="552-552", cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs"];
m1_254 [label="Log.Error(err)", span="554-554", cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs"];
m1_255 [label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="556-556", cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs"];
m1_256 [label="Exit QuantConnect.Compression.Unzip(string)", span="540-540", cluster="QuantConnect.Compression.Unzip(string)", file="MapFileResolverTests.cs"];
m1_369 [label="Entry TarInputStream.cstr", span="", cluster="TarInputStream.cstr", file="MapFileResolverTests.cs"];
m1_132 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="MapFileResolverTests.cs"];
m1_129 [label="Zip(textPath, zipPath, zipEntryName, deleteOriginal)", span="292-292", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_127 [label="Entry QuantConnect.Compression.Zip(string, string, bool)", span="289-289", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_128 [label="var zipPath = textPath.Replace(''.csv'', ''.zip'').Replace(''.txt'', ''.zip'')", span="291-291", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_130 [label="return zipPath;", span="293-293", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_131 [label="Exit QuantConnect.Compression.Zip(string, string, bool)", span="289-289", cluster="QuantConnect.Compression.Zip(string, string, bool)", file="MapFileResolverTests.cs"];
m1_74 [label="return true;", span="193-193", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs"];
m1_382 [label="tarEntry.IsDirectory", span="823-823", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_373 [label="Entry QuantConnect.Compression.UnTar(string)", span="805-805", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_374 [label="var gzip = (source.Substring(Math.Max(0, source.Length - 6)) == ''tar.gz'')", span="808-808", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_385 [label="yield return new KeyValuePair<string, byte[]>(tarEntry.Name, stream.ToArray());", span="828-828", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_375 [label="var file = File.OpenRead(source)", span="810-810", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_377 [label=gzip, span="814-814", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_376 [label="var tarIn = new TarInputStream(file)", span="812-812", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_378 [label="var gzipStream = new GZipInputStream(file)", span="816-816", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_381 [label="(tarEntry = tarIn.GetNextEntry()) != null", span="821-821", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_384 [label="tarIn.CopyEntryContents(stream)", span="827-827", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_386 [label="tarIn.Close()", span="831-831", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_380 [label="TarEntry tarEntry", span="820-820", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_379 [label="tarIn = new TarInputStream(gzipStream)", span="817-817", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_383 [label="var stream = new MemoryStream()", span="825-825", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_387 [label="Exit QuantConnect.Compression.UnTar(string)", span="805-805", cluster="QuantConnect.Compression.UnTar(string)", file="MapFileResolverTests.cs"];
m1_95 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MapFileResolverTests.cs"];
m1_149 [label="Entry System.IO.FileStream.Read(byte[], int, int)", span="0-0", cluster="System.IO.FileStream.Read(byte[], int, int)", file="MapFileResolverTests.cs"];
m1_69 [label="zip.AddEntry(entry, data)", span="183-183", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs"];
m1_70 [label="zip.Save()", span="184-184", cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="MapFileResolverTests.cs"];
m1_200 [label="Entry Unk.ExtractToFile", span="", cluster="Unk.ExtractToFile", file="MapFileResolverTests.cs"];
m1_63 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="132-132", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="MapFileResolverTests.cs"];
m1_66 [label="return SubscriptionDataSourceReader.ForSource(source, dataCacheProvider, config, date, true);", span="138-138", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="MapFileResolverTests.cs"];
m1_67 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="132-132", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="MapFileResolverTests.cs"];
m1_196 [label="Entry Unk.ExtractToDirectory", span="", cluster="Unk.ExtractToDirectory", file="MapFileResolverTests.cs"];
m1_109 [label="Entry ZipArchive.cstr", span="", cluster="ZipArchive.cstr", file="MapFileResolverTests.cs"];
m1_395 [label=string, span="", file="MapFileResolverTests.cs"];
m2_160 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Split.cs"];
m2_182 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="396-396", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="Split.cs"];
m2_183 [label="MarketSimulation?.SimulateMarketConditions(this, Algorithm)", span="399-399", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="Split.cs"];
m2_184 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="396-396", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="Split.cs"];
m2_175 [label="Entry Unk.All", span="", cluster="Unk.All", file="Split.cs"];
m2_203 [label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113", cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs"];
m2_52 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="Split.cs"];
m2_56 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="424-424", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs"];
m2_198 [label="e.Status.IsClosed() && _pendingOptionAssignments.Contains(e.Symbol)", span="426-426", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs"];
m2_199 [label="_pendingOptionAssignments.Remove(e.Symbol)", span="428-428", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs"];
m2_200 [label="base.OnOrderEvent(e)", span="431-431", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs"];
m2_201 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="424-424", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Split.cs"];
m2_159 [label="Entry QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="48-48", cluster="QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Split.cs"];
m2_163 [label="Entry QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="54-54", cluster="QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="Split.cs"];
m2_164 [label="Entry QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="38-38", cluster="QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="Split.cs"];
m2_195 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="Split.cs"];
m2_210 [label="Entry QuantConnect.Orders.Order.Clone()", span="241-241", cluster="QuantConnect.Orders.Order.Clone()", file="Split.cs"];
m2_179 [label="Entry lambda expression", span="378-378", cluster="lambda expression", file="Split.cs"];
m2_24 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="Split.cs"];
m2_25 [label="x.Value.Symbol", span="108-108", cluster="lambda expression", file="Split.cs"];
m2_26 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="Split.cs"];
m2_31 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="Split.cs"];
m2_32 [label="x.Value", span="119-119", cluster="lambda expression", file="Split.cs"];
m2_33 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="Split.cs"];
m2_176 [label="Entry lambda expression", span="245-245", cluster="lambda expression", file="Split.cs"];
m2_177 [label="x.Key", span="245-245", cluster="lambda expression", file="Split.cs"];
m2_178 [label="Exit lambda expression", span="245-245", cluster="lambda expression", file="Split.cs"];
m2_180 [label="x.Status.IsClosed()", span="378-378", cluster="lambda expression", file="Split.cs"];
m2_181 [label="Exit lambda expression", span="378-378", cluster="lambda expression", file="Split.cs"];
m2_34 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_35 [label="Algorithm.LiveMode", span="129-129", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_36 [label="Log.Trace(''BacktestingBrokerage.PlaceOrder(): Type: '' + order.Type + '' Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="131-131", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_37 [label="order.Status == OrderStatus.New", span="134-134", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_40 [label="SetPendingOrder(order)", span="139-139", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_41 [label="var orderId = order.Id.ToString()", span="142-142", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_42 [label="!order.BrokerId.Contains(orderId)", span="143-143", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_43 [label="order.BrokerId.Add(orderId)", span="143-143", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_45 [label="var submitted = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="147-147", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_38 [label=_needsScanLock, span="136-136", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_48 [label="return false;", span="152-152", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_39 [label="_needsScan = true", span="138-138", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_44 [label="int orderFee = 0", span="146-146", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_46 [label="OnOrderEvent(submitted)", span="148-148", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_47 [label="return true;", span="150-150", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_49 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_27 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="117-117", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="Split.cs"];
m2_28 [label="return Algorithm.Portfolio.CashBook.Select(x => x.Value).ToList();", span="119-119", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="Split.cs"];
m2_29 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="117-117", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="Split.cs"];
m2_155 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Split.cs"];
m2_5 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="62-62", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Split.cs"];
m2_6 [label="Algorithm = algorithm", span="65-65", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Split.cs"];
m2_7 [label="_pending = new ConcurrentDictionary<int, Order>()", span="66-66", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Split.cs"];
m2_8 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="62-62", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Split.cs"];
m2_158 [label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78", cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Split.cs"];
m2_185 [label="Entry QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="31-31", cluster="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", file="Split.cs"];
m2_14 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="96-96", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="Split.cs"];
m2_15 [label="return Algorithm.Transactions.GetOpenOrders();", span="98-98", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="Split.cs"];
m2_16 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="96-96", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="Split.cs"];
m2_202 [label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="Split.cs"];
m2_174 [label="Entry QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", span="132-132", cluster="QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", file="Split.cs"];
m2_23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="Split.cs"];
m2_91 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_92 [label=_needsScanLock, span="234-234", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_93 [label="!_needsScan", span="237-237", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_94 [label="return;", span="239-239", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_95 [label="var stillNeedsScan = false", span="242-242", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_96 [label="_pending.OrderBy(x => x.Key)", span="245-245", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_153 [label="_needsScan = stillNeedsScan", span="389-389", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_97 [label="var order = kvp.Value", span="247-247", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_98 [label="order == null", span="248-248", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_99 [label="Log.Error(''BacktestingBrokerage.Scan(): Null pending order found: '' + kvp.Key)", span="250-250", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_101 [label="order.Status.IsClosed()", span="255-255", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_102 [label="_pending.TryRemove(order.Id, out order)", span="258-258", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_103 [label="order.Time == Algorithm.UtcTime && order.Type != OrderType.Market", span="263-263", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_105 [label="var fills = new[] { new OrderEvent(order, Algorithm.UtcTime, 0) }", span="269-269", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_107 [label="!Algorithm.Securities.TryGetValue(order.Symbol, out security)", span="272-272", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_108 [label="Log.Error(''BacktestingBrokerage.Scan(): Unable to process order: '' + order.Id + ''. The security no longer exists.'')", span="274-274", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_109 [label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0m){Status = OrderStatus.Invalid})", span="276-276", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_110 [label="_pending.TryRemove(order.Id, out order)", span="277-277", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_111 [label="!Algorithm.BrokerageModel.CanExecuteOrder(security, order)", span="282-282", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_113 [label="hasSufficientBuyingPower = security.BuyingPowerModel.HasSufficientBuyingPowerForOrder(Algorithm.Portfolio, security, order)", span="291-291", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_116 [label="_pending.TryRemove(order.Id, out pending)", span="297-297", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_117 [label="order.Status = OrderStatus.Invalid", span="298-298", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_118 [label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0, ''Error in GetSufficientCapitalForOrder''))", span="299-299", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_120 [label="Algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="302-302", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_123 [label="order.Type", span="315-315", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_125 [label="fills = new[] { model.LimitFill(security, order as LimitOrder) }", span="318-318", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_127 [label="fills = new[] { model.StopMarketFill(security, order as StopMarketOrder) }", span="322-322", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_129 [label="fills = new[] { model.MarketFill(security, order as MarketOrder) }", span="326-326", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_131 [label="fills = new[] { model.StopLimitFill(security, order as StopLimitOrder) }", span="330-330", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_133 [label="fills = new[] { model.MarketOnOpenFill(security, order as MarketOnOpenOrder) }", span="334-334", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_135 [label="fills = new[] { model.MarketOnCloseFill(security, order as MarketOnCloseOrder) }", span="338-338", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_138 [label="fills = option.OptionExerciseModel.OptionExercise(option, order as OptionExerciseOrder).ToArray()", span="343-343", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_141 [label="Algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'',\r\n                                order.Id, order.Type, err.Message))", span="350-351", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_142 [label="order.Status = OrderStatus.Invalid", span="357-357", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_143 [label="Algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id,\r\n                            order.GetValue(security).SmartRounding()))", span="358-359", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_145 [label="order.Status != fill.Status || fill.FillQuantity != 0", span="365-365", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_147 [label="order.Type == OrderType.OptionExercise", span="371-371", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_148 [label="fill.Message = order.Tag", span="373-373", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_151 [label="_pending.TryRemove(order.Id, out order)", span="380-380", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_100 [label="_pending.TryRemove(kvp.Key, out order)", span="251-251", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_104 [label="stillNeedsScan = true", span="265-265", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_106 [label="Security security", span="271-271", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_144 [label=fills, span="362-362", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_150 [label="fills.All(x => x.Status.IsClosed())", span="378-378", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_122 [label="var model = security.FillModel", span="310-310", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_137 [label="var option = (Option)security", span="342-342", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_112 [label="bool hasSufficientBuyingPower", span="288-288", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_114 [label=Exception, span="293-293", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_121 [label=hasSufficientBuyingPower, span="307-307", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_115 [label="Order pending", span="296-296", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_119 [label="Log.Error(err)", span="301-301", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_124 [label="OrderType.Limit", span="317-317", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_126 [label="OrderType.StopMarket", span="321-321", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_128 [label="OrderType.Market", span="325-325", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_130 [label="OrderType.StopLimit", span="329-329", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_132 [label="OrderType.MarketOnOpen", span="333-333", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_134 [label="OrderType.MarketOnClose", span="337-337", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_136 [label="OrderType.OptionExercise", span="341-341", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_139 [label=Exception, span="347-347", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_140 [label="Log.Error(err)", span="349-349", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_146 [label="OnOrderEvent(fill)", span="368-368", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_149 [label="OnOptionPositionAssigned(fill)", span="374-374", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_152 [label="stillNeedsScan = true", span="384-384", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_154 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Split.cs"];
m2_162 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="426-426", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="Split.cs"];
m2_74 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Split.cs"];
m2_22 [label="Entry Holding.cstr", span="", cluster="Holding.cstr", file="Split.cs"];
m2_90 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="Split.cs"];
m2_194 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="Split.cs"];
m2_9 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="Split.cs"];
m2_10 [label="Algorithm = algorithm", span="77-77", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="Split.cs"];
m2_11 [label="MarketSimulation = marketSimulation", span="78-78", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="Split.cs"];
m2_12 [label="_pending = new ConcurrentDictionary<int, Order>()", span="79-79", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="Split.cs"];
m2_13 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="Split.cs"];
m2_4 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="Split.cs"];
m2_172 [label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191", cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Split.cs"];
m2_0 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Split.cs"];
m2_1 [label="Algorithm = algorithm", span="53-53", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Split.cs"];
m2_2 [label="_pending = new ConcurrentDictionary<int, Order>()", span="54-54", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", color=red, community=0, file="Split.cs"];
m2_3 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Split.cs"];
m2_57 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_58 [label="Algorithm.LiveMode", span="162-162", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_59 [label="Log.Trace(''BacktestingBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="164-164", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_62 [label="!_pending.TryGetValue(order.Id, out pending)", span="170-170", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_65 [label="SetPendingOrder(order)", span="177-177", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_66 [label="var orderId = order.Id.ToString()", span="180-180", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_67 [label="!order.BrokerId.Contains(orderId)", span="181-181", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_68 [label="order.BrokerId.Add(orderId)", span="181-181", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_70 [label="var updated = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="185-185", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_60 [label=_needsScanLock, span="167-167", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_61 [label="Order pending", span="169-169", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_63 [label="return false;", span="173-173", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_64 [label="_needsScan = true", span="176-176", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_69 [label="int orderFee = 0", span="184-184", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_71 [label="OnOrderEvent(updated)", span="186-186", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_72 [label="return true;", span="188-188", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_73 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_186 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="407-407", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs"];
m2_187 [label="_pendingOptionAssignments.Contains(option.Symbol)", span="410-410", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs"];
m2_189 [label="_pendingOptionAssignments.Add(option.Symbol)", span="412-412", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs"];
m2_190 [label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, -quantity, 0m, 0m, Algorithm.UtcTime, ''Simulated option assignment before expiration'')", span="414-414", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs"];
m2_188 [label="return;", span="410-410", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs"];
m2_191 [label="var ticket = Algorithm.Transactions.ProcessRequest(request)", span="416-416", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs"];
m2_192 [label="Log.Trace($''BacktestingBrokerage.ActivateOptionAssignment(): OrderId: {ticket.OrderId}'')", span="417-417", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs"];
m2_193 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="407-407", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="Split.cs"];
m2_53 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="Split.cs"];
m2_170 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Split.cs"];
m2_17 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="259-259", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="Split.cs"];
m2_157 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="Split.cs"];
m2_169 [label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33", cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="Split.cs"];
m2_21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Split.cs"];
m2_165 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="30-30", cluster="QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Split.cs"];
m2_204 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="437-437", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="Split.cs"];
m2_205 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="437-437", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="Split.cs"];
m2_196 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="Split.cs"];
m2_75 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_76 [label="Algorithm.LiveMode", span="198-198", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_77 [label="Log.Trace(''BacktestingBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="200-200", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_80 [label="!_pending.TryRemove(order.Id, out pending)", span="206-206", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_82 [label="var orderId = order.Id.ToString()", span="213-213", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_83 [label="!order.BrokerId.Contains(orderId)", span="214-214", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_84 [label="order.BrokerId.Add(order.Id.ToString())", span="214-214", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_86 [label="var canceled = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Canceled }", span="218-218", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_78 [label=_needsScanLock, span="203-203", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_79 [label="Order pending", span="205-205", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_81 [label="return false;", span="209-209", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_85 [label="int orderFee = 0", span="217-217", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_87 [label="OnOrderEvent(canceled)", span="219-219", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_88 [label="return true;", span="221-221", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_89 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_166 [label="Entry QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="46-46", cluster="QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="Split.cs"];
m2_197 [label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="Split.cs"];
m2_171 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="Split.cs"];
m2_54 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="Split.cs"];
m2_206 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="445-445", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="Split.cs"];
m2_207 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="445-445", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="Split.cs"];
m2_51 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="455-455", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_208 [label="_pending[order.Id] = order.Clone()", span="458-458", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_209 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="455-455", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="Split.cs"];
m2_156 [label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27", cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="Split.cs"];
m2_168 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="70-70", cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="Split.cs"];
m2_167 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="62-62", cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="Split.cs"];
m2_161 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="Split.cs"];
m2_18 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="105-105", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="Split.cs"];
m2_19 [label="return (from kvp in Algorithm.Portfolio.Securities.OrderBy(x => x.Value.Symbol)\r\n                    where kvp.Value.Holdings.AbsoluteQuantity > 0\r\n                    select new Holding(kvp.Value)).ToList();", span="108-110", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="Split.cs"];
m2_20 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="105-105", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="Split.cs"];
m2_50 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Split.cs"];
m2_30 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Split.cs"];
m2_55 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="Split.cs"];
m2_211 [label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span="", file="Split.cs"];
n59 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n44  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n59 -> n57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=1, style=dashed, color=darkseagreen4, label=string];
n2 -> n5  [key=1, style=dashed, color=darkseagreen4, label=string];
n2 -> n6  [key=1, style=dashed, color=darkseagreen4, label=string];
n2 -> n7  [key=1, style=dashed, color=darkseagreen4, label=string];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n9  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n10  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n11  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n11  [key=2, style=dotted];
n8 -> n2  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=2, style=dotted];
n14 -> n12  [key=0, style=bold, color=blue];
n15 -> n54  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n18 -> n16  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=2, style=dotted];
n21 -> n19  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=2, style=dotted];
n25 -> n23  [key=0, style=bold, color=blue];
n26 -> n57  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n29 -> n27  [key=0, style=bold, color=blue];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n22  [key=2, style=dotted];
n32 -> n30  [key=0, style=bold, color=blue];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n22  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n22  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n22  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n22  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n22  [key=2, style=dotted];
n39 -> n33  [key=0, style=bold, color=blue];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
n40 -> n43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
n40 -> n44  [key=1, style=dashed, color=red, label="QuantConnect.Data.Market.TradeBar"];
n40 -> n45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
n40 -> n46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
n41 -> n42  [key=0, style=solid];
n41 -> n49  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n44  [key=1, style=dashed, color=red, label=typicalPrice];
n43 -> n44  [key=0, style=solid, color=red];
n43 -> n50  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid, color=red];
n44 -> n51  [key=2, style=dotted, color=red];
n44 -> n52  [key=2, style=dotted, color=red];
n44 -> n53  [key=2, style=dotted, color=red];
n45 -> n46  [key=0, style=solid];
n45 -> n49  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n49  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n48 -> n40  [key=0, style=bold, color=blue];
n54 -> n55  [key=0, style=solid];
n54 -> n56  [key=2, style=dotted];
n55 -> n15  [key=0, style=bold, color=blue];
n57 -> n58  [key=0, style=solid];
n57 -> n56  [key=2, style=dotted];
n58 -> n26  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m0_7 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m0_7 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m0_7 -> m0_15  [key=1, style=dashed, color=green, label="QuantConnect.Symbol"];
m0_7 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m0_7 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m0_7 -> m0_22  [key=3, color=green, style=bold, label="method methodReturn QuantConnect.Data.Auxiliary.FactorFile Get"];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_20  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=market];
m0_11 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=market];
m0_11 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=market];
m0_14 -> m0_19  [key=0, style=solid];
m0_14 -> m0_22  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid, color=green];
m0_15 -> m0_23  [key=2, style=dotted, color=green];
m0_15 -> m0_18  [key=1, style=dashed, color=green, label=mapFile];
m0_17 -> m0_19  [key=0, style=solid];
m0_17 -> m0_22  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_22  [key=2, style=dotted];
m0_10 -> m0_19  [key=0, style=solid];
m0_10 -> m0_11  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Brokerages.GDAX.AuthenticationToken GetAuthenticationToken"];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_21  [key=2, style=dotted];
m0_12 -> m0_15  [key=1, style=dashed, color=green, label=mapFileResolver];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid, color=green];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=0, style=solid];
m0_16 -> m0_24  [key=2, style=dotted];
m0_19 -> m0_7  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_2  [key=3, color=darkorchid, style=bold, label="Field variable string TimeHeader"];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=2, style=dotted];
m0_5 -> m0_2  [key=0, style=bold, color=blue];
m0_22 -> m0_25  [key=0, style=solid];
m0_22 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_22 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m0_22 -> m0_7  [key=3, color=green, style=bold, label="Parameter variable QuantConnect.Symbol symbol"];
m0_22 -> m0_29  [key=3, color=green, style=bold, label="method methodReturn QuantConnect.Data.Auxiliary.FactorFile GetFactorFile"];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_29  [key=0, style=solid];
m0_25 -> m0_31  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_32  [key=2, style=dotted];
m0_26 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=factorFile];
m0_26 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=factorFile];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_33  [key=2, style=dotted];
m0_27 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_29 -> m0_30  [key=0, style=solid];
m0_28 -> m0_30  [key=0, style=solid];
m0_30 -> m0_22  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_34  [key=0, style=bold, color=blue];
m0_37 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider"];
m0_37 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider"];
m0_37 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider"];
m0_37 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider"];
m0_37 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider"];
m0_37 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider"];
m0_37 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider"];
m0_37 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider"];
m0_38 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=factorFile];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_97  [key=2, style=dotted];
m1_86 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label=entry];
m1_86 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label=entry];
m1_86 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=entry];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m1_81 -> m1_26  [key=1, style=dashed, color=green, label=config];
m1_81 -> m1_24  [key=1, style=dashed, color=green, label=config];
m1_81 -> m1_25  [key=1, style=dashed, color=green, label=config];
m1_81 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=config];
m1_81 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=config];
m1_81 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=config];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_95  [key=2, style=dotted];
m1_82 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=data];
m1_82 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=data];
m1_82 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=lastSourceRefreshTime];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_47  [key=2, style=dotted];
m1_83 -> m1_25  [key=1, style=dashed, color=green, label=sourceFactory];
m1_90 -> m1_85  [key=0, style=solid];
m1_90 -> m1_98  [key=2, style=dotted];
m1_90 -> m1_99  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_96  [key=2, style=dotted];
m1_84 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m1_84 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m1_84 -> m1_26  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IDataProvider"];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_91  [key=0, style=solid];
m1_85 -> m1_93  [key=0, style=solid];
m1_85 -> m1_26  [key=1, style=dashed, color=green, label=frontier];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_77  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_91  [key=0, style=solid];
m1_87 -> m1_93  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_27  [key=2, style=dotted];
m1_94 -> m1_81  [key=0, style=bold, color=blue];
m1_45 -> m1_46  [key=0, style=solid];
m1_288 -> m1_284  [key=0, style=bold, color=blue];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_287  [key=0, style=bold, color=crimson];
m1_285 -> m1_286  [key=0, style=solid];
m1_285 -> m1_239  [key=2, style=dotted];
m1_285 -> m1_240  [key=2, style=dotted];
m1_285 -> m1_287  [key=1, style=dashed, color=darkseagreen4, label=entryReader];
m1_287 -> m1_286  [key=0, style=solid];
m1_287 -> m1_289  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_288  [key=0, style=solid];
m1_80 -> m1_8  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory"];
m1_80 -> m1_26  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory"];
m1_80 -> m1_10  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory"];
m1_80 -> m1_27  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory"];
m1_80 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory"];
m1_80 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory"];
m1_80 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory"];
m1_80 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory"];
m1_80 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory"];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_22  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_155 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_17  [key=2, style=dotted];
m1_156 -> m1_18  [key=2, style=dotted];
m1_156 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_156 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_20  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_47  [key=2, style=dotted];
m1_160 -> m1_21  [key=2, style=dotted];
m1_160 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label=dataReader];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_23  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m1_159 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_48  [key=2, style=dotted];
m1_162 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=sourceBytes];
m1_161 -> m1_162  [key=0, style=solid];
m1_164 -> m1_161  [key=0, style=solid];
m1_164 -> m1_165  [key=0, style=solid];
m1_165 -> m1_155  [key=0, style=bold, color=blue];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_61  [key=2, style=dotted];
m1_51 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_19 -> m1_24  [key=1, style=dashed, color=green, label=utcNow];
m1_19 -> m1_23  [key=1, style=dashed, color=green, label=utcNow];
m1_19 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_35  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_22  [key=2, style=dotted];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_133 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_133 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_133 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_133 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m1_134 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_17  [key=2, style=dotted];
m1_135 -> m1_18  [key=2, style=dotted];
m1_135 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_135 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_20  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_148  [key=2, style=dotted];
m1_138 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label=fs];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=0, style=solid];
m1_143 -> m1_147  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_147  [key=0, style=solid];
m1_144 -> m1_150  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_149  [key=2, style=dotted];
m1_140 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label=sourceBytes];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_23  [key=2, style=dotted];
m1_139 -> m1_140  [key=0, style=solid];
m1_142 -> m1_139  [key=0, style=solid];
m1_142 -> m1_143  [key=0, style=solid];
m1_145 -> m1_146  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_27  [key=2, style=dotted];
m1_147 -> m1_133  [key=0, style=bold, color=blue];
m1_23 -> m1_8  [key=1, style=dashed, color=green, label=lastSourceRefreshTime];
m1_23 -> m1_24  [key=0, style=solid, color=green];
m1_61 -> m1_41  [key=0, style=bold, color=blue];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_68  [key=0, style=solid];
m1_64 -> m1_76  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_48  [key=2, style=dotted];
m1_37 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=sourceBytes];
m1_270 -> m1_274  [key=0, style=solid];
m1_270 -> m1_258  [key=2, style=dotted];
m1_270 -> m1_275  [key=2, style=dotted];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_268  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_266 -> m1_270  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_270  [key=0, style=solid];
m1_267 -> m1_76  [key=2, style=dotted];
m1_268 -> m1_269  [key=0, style=solid];
m1_268 -> m1_243  [key=2, style=dotted];
m1_269 -> m1_274  [key=0, style=solid];
m1_269 -> m1_257  [key=2, style=dotted];
m1_271 -> m1_272  [key=0, style=solid];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_27  [key=2, style=dotted];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_257  [key=2, style=dotted];
m1_274 -> m1_266  [key=0, style=bold, color=blue];
m1_21 -> m1_23  [key=0, style=solid, color=green];
m1_21 -> m1_22  [key=0, style=solid];
m1_14 -> m1_16  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_110  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_100 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_108  [key=2, style=dotted];
m1_101 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label=memoryStream];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_23  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_109  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_112  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_111  [key=2, style=dotted];
m1_107 -> m1_100  [key=0, style=bold, color=blue];
m1_304 -> m1_305  [key=0, style=solid];
m1_305 -> m1_306  [key=0, style=solid];
m1_305 -> m1_77  [key=2, style=dotted];
m1_305 -> m1_312  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m1_306 -> m1_307  [key=0, style=solid];
m1_306 -> m1_238  [key=2, style=dotted];
m1_306 -> m1_308  [key=1, style=dashed, color=darkseagreen4, label=entry];
m1_307 -> m1_308  [key=0, style=solid];
m1_307 -> m1_309  [key=0, style=solid];
m1_307 -> m1_311  [key=0, style=solid];
m1_308 -> m1_312  [key=0, style=solid];
m1_308 -> m1_240  [key=2, style=dotted];
m1_309 -> m1_310  [key=0, style=solid];
m1_311 -> m1_312  [key=0, style=solid];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_27  [key=2, style=dotted];
m1_312 -> m1_304  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid, color=green];
m1_27 -> m1_30  [key=0, style=solid, color=green];
m1_27 -> m1_42  [key=2, style=dotted, color=green];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_20  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_247  [key=2, style=dotted];
m1_244 -> m1_245  [key=0, style=solid];
m1_246 -> m1_244  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid, color=green];
m1_26 -> m1_41  [key=2, style=dotted, color=green];
m1_26 -> m1_29  [key=1, style=dashed, color=green, label=enumerator];
m1_26 -> m1_30  [key=1, style=dashed, color=green, label=enumerator];
m1_24 -> m1_26  [key=1, style=dashed, color=green, label=localDate];
m1_24 -> m1_25  [key=0, style=solid, color=green];
m1_24 -> m1_39  [key=2, style=dotted, color=green];
m1_25 -> m1_26  [key=0, style=solid, color=green];
m1_25 -> m1_40  [key=2, style=dotted, color=green];
m1_25 -> m1_27  [key=1, style=dashed, color=green, label=source];
m1_25 -> m1_31  [key=1, style=dashed, color=green, label=source];
m1_29 -> m1_32  [key=1, style=dashed, color=green, label=enumerator];
m1_29 -> m1_33  [key=1, style=dashed, color=green, label=enumerator];
m1_29 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
m1_29 -> m1_31  [key=0, style=solid];
m1_29 -> m1_44  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_32  [key=1, style=dashed, color=green, label=enumerator];
m1_30 -> m1_33  [key=1, style=dashed, color=green, label=enumerator];
m1_30 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_45  [key=2, style=dotted];
m1_30 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m1_30 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m1_31 -> m1_32  [key=0, style=solid, color=green];
m1_31 -> m1_33  [key=0, style=solid, color=green];
m1_31 -> m1_17  [key=2, style=dotted];
m1_31 -> m1_18  [key=2, style=dotted];
m1_31 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_31 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_31 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_31 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_43  [key=2, style=dotted];
m1_28 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_28 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>"];
m1_32 -> m1_32  [key=1, style=dashed, color=green, label=enumerator];
m1_32 -> m1_33  [key=0, style=solid, color=green];
m1_32 -> m1_46  [key=2, style=dotted, color=green];
m1_32 -> m1_47  [key=1, style=dashed, color=green, label="lambda expression"];
m1_32 -> m1_40  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid, color=green];
m1_33 -> m1_20  [key=2, style=dotted];
m1_33 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=file];
m1_33 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=file];
m1_34 -> m1_18  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=minimumTimeBetweenCalls];
m1_20 -> m1_36  [key=2, style=dotted];
m1_22 -> m1_34  [key=0, style=solid];
m1_22 -> m1_37  [key=2, style=dotted];
m1_22 -> m1_38  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_51  [key=2, style=dotted];
m1_49 -> m1_52  [key=2, style=dotted];
m1_49 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_50 -> m1_47  [key=0, style=bold, color=blue];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_17  [key=2, style=dotted];
m1_50 -> m1_18  [key=2, style=dotted];
m1_50 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_20  [key=2, style=dotted];
m1_4 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=config];
m1_4 -> m1_8  [key=1, style=dashed, color=green, label=config];
m1_4 -> m1_26  [key=1, style=dashed, color=green, label=config];
m1_4 -> m1_24  [key=1, style=dashed, color=green, label=config];
m1_4 -> m1_25  [key=1, style=dashed, color=green, label=config];
m1_4 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=config];
m1_4 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=config];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m1_0 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_17  [key=2, style=dotted];
m1_1 -> m1_18  [key=2, style=dotted];
m1_1 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_1 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_1 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_1 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_1 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_10  [key=0, style=solid];
m1_3 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=filename];
m1_3 -> m1_8  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IDataProvider"];
m1_3 -> m1_26  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IDataProvider"];
m1_3 -> m1_9  [key=1, style=dashed, color=green, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [key=1, style=dashed, color=green, label=frontier];
m1_5 -> m1_26  [key=1, style=dashed, color=green, label=frontier];
m1_5 -> m1_12  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_19  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid, color=green];
m1_7 -> m1_22  [key=2, style=dotted];
m1_7 -> m1_25  [key=1, style=dashed, color=green, label=sourceFactory];
m1_7 -> m1_13  [key=2, style=dotted];
m1_7 -> m1_14  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid, color=green];
m1_8 -> m1_23  [key=2, style=dotted];
m1_8 -> m1_8  [key=1, style=dashed, color=green, label=lastSourceRefreshTime];
m1_8 -> m1_15  [key=2, style=dotted, color=green];
m1_8 -> m1_21  [key=1, style=dashed, color=green, label=lastSourceRefreshTime];
m1_8 -> m1_10  [key=1, style=dashed, color=green, label=refresher];
m1_9 -> m1_3  [key=0, style=solid];
m1_9 -> m1_24  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid, color=green];
m1_9 -> m1_16  [key=2, style=dotted, color=green];
m1_10 -> m1_11  [key=0, style=solid, color=green];
m1_10 -> m1_25  [key=2, style=dotted];
m1_10 -> m1_17  [key=2, style=dotted, color=green];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_15  [key=0, style=solid];
m1_11 -> m1_26  [key=2, style=dotted];
m1_11 -> m1_3  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_21  [key=2, style=dotted];
m1_6 -> m1_8  [key=1, style=dashed, color=green, label=lastSourceRefreshTime];
m1_12 -> m1_13  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_27  [key=2, style=dotted];
m1_16 -> m1_0  [key=0, style=bold, color=blue];
m1_390 -> m1_391  [key=0, style=solid];
m1_391 -> m1_392  [key=0, style=solid];
m1_391 -> m1_337  [key=2, style=dotted];
m1_392 -> m1_393  [key=0, style=solid];
m1_392 -> m1_394  [key=2, style=dotted];
m1_393 -> m1_390  [key=0, style=bold, color=blue];
m1_44 -> m1_45  [key=0, style=solid];
m1_77 -> m1_43  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_23  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_25  [key=2, style=dotted];
m1_36 -> m1_71  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_71 -> m1_73  [key=2, style=dotted];
m1_71 -> m1_74  [key=2, style=dotted];
m1_71 -> m1_75  [key=2, style=dotted];
m1_72 -> m1_36  [key=0, style=bold, color=blue];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_27  [key=2, style=dotted];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_176 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_176 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_176 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_179  [key=0, style=solid];
m1_177 -> m1_76  [key=2, style=dotted];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_181  [key=0, style=solid];
m1_180 -> m1_191  [key=0, style=solid];
m1_180 -> m1_196  [key=2, style=dotted];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_109  [key=2, style=dotted];
m1_181 -> m1_148  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_197  [key=2, style=dotted];
m1_184 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label=filepath];
m1_184 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=filepath];
m1_178 -> m1_195  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_191  [key=0, style=solid];
m1_182 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label=file];
m1_182 -> m1_190  [key=1, style=dashed, color=darkseagreen4, label=file];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_182  [key=0, style=solid];
m1_191 -> m1_195  [key=0, style=solid];
m1_190 -> m1_182  [key=0, style=solid];
m1_190 -> m1_200  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_187  [key=0, style=solid];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_132  [key=2, style=dotted];
m1_186 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label=filepath];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_198  [key=2, style=dotted];
m1_187 -> m1_189  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m1_187 -> m1_190  [key=1, style=dashed, color=darkseagreen4, label=outputFile];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_190  [key=0, style=solid];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_199  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_27  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_195 -> m1_176  [key=0, style=bold, color=blue];
m1_39 -> m1_36  [key=0, style=solid];
m1_39 -> m1_32  [key=0, style=solid];
m1_43 -> m1_76  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_27  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_76 -> m1_78  [key=2, style=dotted];
m1_76 -> m1_79  [key=2, style=dotted];
m1_76 -> m1_75  [key=2, style=dotted];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_97  [key=2, style=dotted];
m1_294 -> m1_296  [key=1, style=dashed, color=darkseagreen4, label=entry];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_293  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m1_291 -> m1_292  [key=0, style=solid];
m1_293 -> m1_294  [key=0, style=solid];
m1_293 -> m1_96  [key=2, style=dotted];
m1_293 -> m1_296  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m1_292 -> m1_293  [key=0, style=solid];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_77  [key=2, style=dotted];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_297  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m1_297 -> m1_298  [key=0, style=solid];
m1_297 -> m1_47  [key=2, style=dotted];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_301  [key=0, style=solid];
m1_298 -> m1_303  [key=2, style=dotted];
m1_299 -> m1_300  [key=0, style=solid];
m1_301 -> m1_302  [key=0, style=solid];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_27  [key=2, style=dotted];
m1_302 -> m1_290  [key=0, style=bold, color=blue];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_113 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=dataBuffer];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_122  [key=2, style=dotted];
m1_115 -> m1_123  [key=2, style=dotted];
m1_115 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label=newFileOutput];
m1_115 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=newFileOutput];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_124  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_126  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_18  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_125  [key=2, style=dotted];
m1_117 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=gzipStream];
m1_121 -> m1_113  [key=0, style=bold, color=blue];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_80  [key=2, style=dotted];
m1_68 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=zip];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_45  [key=0, style=solid];
m1_41 -> m1_26  [key=2, style=dotted];
m1_41 -> m1_53  [key=0, style=solid];
m1_41 -> m1_58  [key=0, style=bold, color=crimson];
m1_41 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Util.Ref<System.DateTime>"];
m1_41 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m1_41 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataSource"];
m1_41 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Util.Ref<System.DateTime>"];
m1_41 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Util.Ref<System.DateTime>"];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_47  [key=2, style=dotted];
m1_35 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=file];
m1_35 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_69  [key=0, style=solid];
m1_46 -> m1_28  [key=0, style=bold, color=blue];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_148  [key=2, style=dotted];
m1_352 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=inStream];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_349  [key=2, style=dotted];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_125  [key=2, style=dotted];
m1_353 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label=gzipStream];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_350  [key=2, style=dotted];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_348  [key=2, style=dotted];
m1_354 -> m1_356  [key=1, style=dashed, color=darkseagreen4, label=tarArchive];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_26  [key=2, style=dotted];
m1_356 -> m1_357  [key=0, style=solid];
m1_356 -> m1_26  [key=2, style=dotted];
m1_359 -> m1_351  [key=0, style=bold, color=blue];
m1_341 -> m1_342  [key=0, style=solid];
m1_341 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_148  [key=2, style=dotted];
m1_342 -> m1_346  [key=1, style=dashed, color=darkseagreen4, label=inStream];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_349  [key=2, style=dotted];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_348  [key=2, style=dotted];
m1_343 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label=tarArchive];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_350  [key=2, style=dotted];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_26  [key=2, style=dotted];
m1_347 -> m1_341  [key=0, style=bold, color=blue];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_20  [key=2, style=dotted];
m1_207 -> m1_154  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_17  [key=2, style=dotted];
m1_202 -> m1_18  [key=2, style=dotted];
m1_202 -> m1_208  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m1_202 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_211  [key=0, style=solid];
m1_204 -> m1_213  [key=0, style=solid];
m1_204 -> m1_206  [key=1, style=dashed, color=darkseagreen4, label=file];
m1_204 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label=file];
m1_204 -> m1_209  [key=1, style=dashed, color=darkseagreen4, label=file];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_22  [key=2, style=dotted];
m1_210 -> m1_204  [key=0, style=solid];
m1_210 -> m1_126  [key=2, style=dotted];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_207  [key=0, style=solid];
m1_205 -> m1_76  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_206 -> m1_204  [key=0, style=solid];
m1_206 -> m1_214  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_148  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_27  [key=2, style=dotted];
m1_213 -> m1_201  [key=0, style=bold, color=blue];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_281  [key=0, style=solid];
m1_258 -> m1_276  [key=0, style=solid];
m1_258 -> m1_279  [key=0, style=bold, color=crimson];
m1_258 -> m1_280  [key=0, style=bold, color=crimson];
m1_258 -> m1_282  [key=0, style=bold, color=crimson];
m1_258 -> m1_277  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_77  [key=2, style=dotted];
m1_276 -> m1_278  [key=1, style=dashed, color=darkseagreen4, label=zip];
m1_276 -> m1_281  [key=1, style=dashed, color=darkseagreen4, label=zip];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_264  [key=2, style=dotted];
m1_279 -> m1_265  [key=2, style=dotted];
m1_280 -> m1_281  [key=0, style=solid];
m1_282 -> m1_281  [key=0, style=solid];
m1_282 -> m1_264  [key=2, style=dotted];
m1_282 -> m1_265  [key=2, style=dotted];
m1_278 -> m1_279  [key=0, style=solid];
m1_281 -> m1_282  [key=0, style=solid];
m1_281 -> m1_283  [key=0, style=solid];
m1_283 -> m1_258  [key=0, style=bold, color=blue];
m1_75 -> m1_63  [key=0, style=bold, color=blue];
m1_366 -> m1_367  [key=0, style=solid];
m1_366 -> m1_370  [key=2, style=dotted];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_367  [key=0, style=bold, color=crimson];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_369  [key=2, style=dotted];
m1_361 -> m1_125  [key=2, style=dotted];
m1_361 -> m1_363  [key=1, style=dashed, color=darkseagreen4, label=tar];
m1_361 -> m1_366  [key=1, style=dashed, color=darkseagreen4, label=tar];
m1_367 -> m1_363  [key=0, style=solid];
m1_367 -> m1_371  [key=2, style=dotted];
m1_367 -> m1_372  [key=2, style=dotted];
m1_362 -> m1_363  [key=0, style=solid];
m1_363 -> m1_364  [key=0, style=solid];
m1_363 -> m1_368  [key=0, style=solid];
m1_363 -> m1_97  [key=2, style=dotted];
m1_363 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label=entry];
m1_364 -> m1_365  [key=0, style=solid];
m1_364 -> m1_363  [key=0, style=solid];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_108  [key=2, style=dotted];
m1_365 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label=output];
m1_368 -> m1_360  [key=0, style=bold, color=blue];
m1_324 -> m1_325  [key=0, style=solid];
m1_324 -> m1_338  [key=2, style=dotted];
m1_324 -> m1_328  [key=1, style=dashed, color=darkseagreen4, label=entryFileName];
m1_313 -> m1_314  [key=0, style=solid];
m1_313 -> m1_315  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_313 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_313 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_314 -> m1_315  [key=0, style=solid];
m1_314 -> m1_334  [key=2, style=dotted];
m1_314 -> m1_329  [key=1, style=dashed, color=darkseagreen4, label=files];
m1_314 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label=files];
m1_315 -> m1_316  [key=0, style=solid];
m1_315 -> m1_335  [key=2, style=dotted];
m1_315 -> m1_317  [key=1, style=dashed, color=darkseagreen4, label=slash];
m1_315 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=slash];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_336  [key=2, style=dotted];
m1_318 -> m1_328  [key=1, style=dashed, color=darkseagreen4, label=outFolder];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> m1_148  [key=2, style=dotted];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_340  [key=2, style=dotted];
m1_332 -> m1_333  [key=0, style=solid];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_328  [key=1, style=dashed, color=darkseagreen4, label=outFolder];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_319  [key=0, style=solid];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_123  [key=2, style=dotted];
m1_328 -> m1_330  [key=1, style=dashed, color=darkseagreen4, label=fullZipToPath];
m1_319 -> m1_320  [key=0, style=solid];
m1_321 -> m1_322  [key=0, style=solid];
m1_321 -> m1_337  [key=2, style=dotted];
m1_321 -> m1_327  [key=1, style=dashed, color=darkseagreen4, label=zf];
m1_322 -> m1_323  [key=0, style=solid];
m1_322 -> m1_332  [key=0, style=solid];
m1_322 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=zipEntry];
m1_322 -> m1_327  [key=1, style=dashed, color=darkseagreen4, label=zipEntry];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_339  [key=2, style=dotted];
m1_327 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=zipStream];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_322  [key=0, style=solid];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_322  [key=0, style=solid];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m1_331 -> m1_322  [key=0, style=solid];
m1_331 -> m1_126  [key=2, style=dotted];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_18  [key=2, style=dotted];
m1_333 -> m1_313  [key=0, style=bold, color=blue];
m1_53 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=dataCacheProvider];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_62  [key=2, style=dotted];
m1_53 -> m1_22  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_63  [key=2, style=dotted];
m1_55 -> m1_54  [key=0, style=solid];
m1_55 -> m1_62  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_27  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=newLocalFrontier];
m1_54 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=newLocalFrontier];
m1_54 -> m1_56  [key=0, style=solid];
m1_56 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=datum];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_60  [key=0, style=solid];
m1_56 -> m1_64  [key=2, style=dotted];
m1_56 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=datum];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_59  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_49  [key=0, style=bold, color=blue];
m1_59 -> m1_56  [key=0, style=solid];
m1_59 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=newLocalFrontier];
m1_59 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=newLocalFrontier];
m1_59 -> m1_65  [key=2, style=dotted];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_238  [key=2, style=dotted];
m1_223 -> m1_244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_223 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label=entry];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_221  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_218 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_218 -> m1_223  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_218 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_218 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_218 -> m1_235  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_236  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_233  [key=0, style=solid];
m1_221 -> m1_76  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_80  [key=2, style=dotted];
m1_222 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m1_222 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m1_222 -> m1_237  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_236  [key=0, style=solid];
m1_233 -> m1_243  [key=2, style=dotted];
m1_235 -> m1_236  [key=0, style=solid];
m1_235 -> m1_27  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_237  [key=1, style=dashed, color=darkseagreen4, label="out Ionic.Zip.ZipFile"];
m1_236 -> m1_237  [key=0, style=solid];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_231  [key=0, style=solid];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_241  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_226  [key=0, style=solid];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_234  [key=0, style=solid];
m1_226 -> m1_236  [key=0, style=solid];
m1_226 -> m1_239  [key=2, style=dotted];
m1_226 -> m1_240  [key=2, style=dotted];
m1_226 -> m1_231  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_226 -> m1_232  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_225 -> m1_237  [key=0, style=solid];
m1_227 -> m1_228  [key=0, style=solid];
m1_234 -> m1_235  [key=0, style=solid];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_234  [key=0, style=solid];
m1_231 -> m1_236  [key=0, style=solid];
m1_232 -> m1_234  [key=0, style=solid];
m1_232 -> m1_236  [key=0, style=solid];
m1_232 -> m1_242  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_27  [key=2, style=dotted];
m1_237 -> m1_218  [key=0, style=bold, color=blue];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_166 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_169  [key=0, style=solid];
m1_167 -> m1_76  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_150  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_175  [key=2, style=dotted];
m1_170 -> m1_174  [key=0, style=solid];
m1_171 -> m1_172  [key=0, style=solid];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_27  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_174 -> m1_166  [key=0, style=bold, color=blue];
m1_262 -> m1_261  [key=0, style=solid];
m1_262 -> m1_264  [key=2, style=dotted];
m1_262 -> m1_265  [key=2, style=dotted];
m1_259 -> m1_260  [key=0, style=solid];
m1_259 -> m1_262  [key=0, style=bold, color=crimson];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_77  [key=2, style=dotted];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_263  [key=0, style=solid];
m1_263 -> m1_259  [key=0, style=bold, color=blue];
m1_151 -> m1_152  [key=0, style=solid];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_154  [key=2, style=dotted];
m1_152 -> m1_127  [key=2, style=dotted];
m1_153 -> m1_151  [key=0, style=bold, color=blue];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_77  [key=2, style=dotted];
m1_65 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label=zip];
m1_73 -> m1_75  [key=0, style=solid];
m1_215 -> m1_216  [key=0, style=solid];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_218  [key=2, style=dotted];
m1_217 -> m1_215  [key=0, style=bold, color=blue];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_248 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> m1_252  [key=0, style=solid];
m1_249 -> m1_76  [key=2, style=dotted];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_243  [key=2, style=dotted];
m1_252 -> m1_256  [key=0, style=solid];
m1_252 -> m1_258  [key=2, style=dotted];
m1_251 -> m1_256  [key=0, style=solid];
m1_251 -> m1_257  [key=2, style=dotted];
m1_253 -> m1_254  [key=0, style=solid];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_27  [key=2, style=dotted];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_257  [key=2, style=dotted];
m1_256 -> m1_248  [key=0, style=bold, color=blue];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_133  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_132  [key=2, style=dotted];
m1_128 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=zipPath];
m1_130 -> m1_131  [key=0, style=solid];
m1_131 -> m1_127  [key=0, style=bold, color=blue];
m1_74 -> m1_75  [key=0, style=solid];
m1_382 -> m1_383  [key=0, style=solid];
m1_382 -> m1_381  [key=0, style=solid];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_385  [key=0, style=bold, color=crimson];
m1_373 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_388  [key=2, style=dotted];
m1_374 -> m1_389  [key=2, style=dotted];
m1_374 -> m1_377  [key=1, style=dashed, color=darkseagreen4, label=gzip];
m1_385 -> m1_381  [key=0, style=solid];
m1_385 -> m1_371  [key=2, style=dotted];
m1_385 -> m1_372  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_148  [key=2, style=dotted];
m1_375 -> m1_378  [key=1, style=dashed, color=darkseagreen4, label=file];
m1_377 -> m1_378  [key=0, style=solid];
m1_377 -> m1_380  [key=0, style=solid];
m1_376 -> m1_377  [key=0, style=solid];
m1_376 -> m1_369  [key=2, style=dotted];
m1_376 -> m1_381  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m1_376 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m1_376 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m1_378 -> m1_379  [key=0, style=solid];
m1_378 -> m1_125  [key=2, style=dotted];
m1_381 -> m1_382  [key=0, style=solid];
m1_381 -> m1_386  [key=0, style=solid];
m1_381 -> m1_97  [key=2, style=dotted];
m1_381 -> m1_385  [key=1, style=dashed, color=darkseagreen4, label=tarEntry];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_370  [key=2, style=dotted];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_26  [key=2, style=dotted];
m1_380 -> m1_381  [key=0, style=solid];
m1_379 -> m1_380  [key=0, style=solid];
m1_379 -> m1_369  [key=2, style=dotted];
m1_379 -> m1_381  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m1_379 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m1_379 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label=tarIn];
m1_383 -> m1_384  [key=0, style=solid];
m1_383 -> m1_108  [key=2, style=dotted];
m1_383 -> m1_385  [key=1, style=dashed, color=darkseagreen4, label=stream];
m1_387 -> m1_373  [key=0, style=bold, color=blue];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_78  [key=2, style=dotted];
m1_70 -> m1_42  [key=0, style=bold, color=blue];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_74  [key=0, style=solid];
m1_70 -> m1_79  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_63 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_63 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_63 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_78  [key=2, style=dotted];
m1_66 -> m1_68  [key=2, style=dotted];
m1_67 -> m1_71  [key=0, style=solid];
m1_67 -> m1_74  [key=0, style=solid];
m1_67 -> m1_79  [key=2, style=dotted];
m1_67 -> m1_63  [key=0, style=bold, color=blue];
m1_395 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_182 -> m2_183  [key=0, style=solid];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_185  [key=2, style=dotted];
m2_184 -> m2_182  [key=0, style=bold, color=blue];
m2_56 -> m2_198  [key=0, style=solid];
m2_56 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m2_56 -> m2_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_200  [key=0, style=solid];
m2_198 -> m2_156  [key=2, style=dotted];
m2_198 -> m2_194  [key=2, style=dotted];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_202  [key=2, style=dotted];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_203  [key=2, style=dotted];
m2_201 -> m2_56  [key=0, style=bold, color=blue];
m2_179 -> m2_180  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
m2_26 -> m2_24  [key=0, style=bold, color=blue];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>"];
m2_33 -> m2_31  [key=0, style=bold, color=blue];
m2_176 -> m2_177  [key=0, style=solid];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m2_178 -> m2_176  [key=0, style=bold, color=blue];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_156  [key=2, style=dotted];
m2_181 -> m2_179  [key=0, style=bold, color=blue];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_34 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_34 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_34 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_34 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_34 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_34 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_37  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_50  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_48  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_51  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_52  [key=2, style=dotted];
m2_41 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=orderId];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=0, style=solid];
m2_42 -> m2_53  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_54  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_55  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_56  [key=2, style=dotted];
m2_47 -> m2_49  [key=0, style=solid];
m2_49 -> m2_34  [key=0, style=bold, color=blue];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_75  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Interfaces.IBrokerage brokerage"];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=2, style=dotted];
m2_28 -> m2_23  [key=2, style=dotted];
m2_28 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_29 -> m2_27  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_4  [key=2, style=dotted];
m2_8 -> m2_5  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=2, style=dotted];
m2_16 -> m2_14  [key=0, style=bold, color=blue];
m2_91 -> m2_92  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_95  [key=0, style=solid];
m2_94 -> m2_154  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_153  [key=0, style=solid];
m2_96 -> m2_21  [key=2, style=dotted];
m2_96 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_153 -> m2_154  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m2_97 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m2_97 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_97 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_101  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_155  [key=2, style=dotted];
m2_99 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_103  [key=0, style=solid];
m2_101 -> m2_156  [key=2, style=dotted];
m2_102 -> m2_96  [key=0, style=solid];
m2_102 -> m2_90  [key=2, style=dotted];
m2_102 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_102 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_105  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_55  [key=2, style=dotted];
m2_105 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=fills];
m2_105 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label=fills];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_111  [key=0, style=solid];
m2_107 -> m2_157  [key=2, style=dotted];
m2_107 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_107 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_107 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_107 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_107 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_107 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_107 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_107 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_107 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_107 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_155  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_55  [key=2, style=dotted];
m2_109 -> m2_56  [key=2, style=dotted];
m2_110 -> m2_96  [key=0, style=solid];
m2_110 -> m2_90  [key=2, style=dotted];
m2_110 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_110 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_96  [key=0, style=solid];
m2_111 -> m2_158  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_121  [key=0, style=solid];
m2_113 -> m2_159  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_90  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_55  [key=2, style=dotted];
m2_118 -> m2_56  [key=2, style=dotted];
m2_120 -> m2_96  [key=0, style=solid];
m2_120 -> m2_161  [key=2, style=dotted];
m2_120 -> m2_162  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_126  [key=0, style=solid];
m2_123 -> m2_128  [key=0, style=solid];
m2_123 -> m2_130  [key=0, style=solid];
m2_123 -> m2_132  [key=0, style=solid];
m2_123 -> m2_134  [key=0, style=solid];
m2_123 -> m2_136  [key=0, style=solid];
m2_125 -> m2_139  [key=0, style=solid];
m2_125 -> m2_144  [key=0, style=solid];
m2_125 -> m2_163  [key=2, style=dotted];
m2_127 -> m2_139  [key=0, style=solid];
m2_127 -> m2_144  [key=0, style=solid];
m2_127 -> m2_164  [key=2, style=dotted];
m2_129 -> m2_139  [key=0, style=solid];
m2_129 -> m2_144  [key=0, style=solid];
m2_129 -> m2_165  [key=2, style=dotted];
m2_131 -> m2_139  [key=0, style=solid];
m2_131 -> m2_144  [key=0, style=solid];
m2_131 -> m2_166  [key=2, style=dotted];
m2_133 -> m2_139  [key=0, style=solid];
m2_133 -> m2_144  [key=0, style=solid];
m2_133 -> m2_167  [key=2, style=dotted];
m2_135 -> m2_139  [key=0, style=solid];
m2_135 -> m2_144  [key=0, style=solid];
m2_135 -> m2_168  [key=2, style=dotted];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_144  [key=0, style=solid];
m2_138 -> m2_169  [key=2, style=dotted];
m2_138 -> m2_170  [key=2, style=dotted];
m2_138 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label=fills];
m2_141 -> m2_144  [key=0, style=solid];
m2_141 -> m2_171  [key=2, style=dotted];
m2_141 -> m2_162  [key=2, style=dotted];
m2_142 -> m2_143  [key=0, style=solid];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_172  [key=2, style=dotted];
m2_143 -> n52  [key=2, style=dotted];
m2_143 -> m2_161  [key=2, style=dotted];
m2_143 -> m2_162  [key=2, style=dotted];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_147  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_144  [key=0, style=solid];
m2_148 -> m2_149  [key=0, style=solid];
m2_151 -> m2_96  [key=0, style=solid];
m2_151 -> m2_90  [key=2, style=dotted];
m2_151 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_96  [key=0, style=solid];
m2_100 -> m2_90  [key=2, style=dotted];
m2_100 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m2_100 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_100 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_104 -> m2_96  [key=0, style=solid];
m2_104 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
m2_106 -> m2_107  [key=0, style=solid];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_150  [key=0, style=solid];
m2_144 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=fill];
m2_144 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=fill];
m2_144 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label=fill];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_152  [key=0, style=solid];
m2_150 -> m2_175  [key=2, style=dotted];
m2_150 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label=model];
m2_122 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=model];
m2_122 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=model];
m2_122 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=model];
m2_122 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=model];
m2_122 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=model];
m2_137 -> m2_138  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_114 -> m2_115  [key=0, style=solid];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_142  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_160  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_134 -> m2_135  [key=0, style=solid];
m2_136 -> m2_137  [key=0, style=solid];
m2_139 -> m2_140  [key=0, style=solid];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_160  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_56  [key=2, style=dotted];
m2_149 -> m2_144  [key=0, style=solid];
m2_149 -> m2_174  [key=2, style=dotted];
m2_152 -> m2_96  [key=0, style=solid];
m2_152 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
m2_154 -> m2_91  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation"];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_4  [key=2, style=dotted];
m2_13 -> m2_9  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid, color=red];
m2_2 -> m2_3  [key=0, style=solid, color=red];
m2_2 -> m2_4  [key=2, style=dotted, color=red];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_57 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_57 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_57 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_57 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_57 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_57 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_50  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_64  [key=0, style=solid];
m2_62 -> m2_74  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_51  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_52  [key=2, style=dotted];
m2_66 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label=orderId];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_69  [key=0, style=solid];
m2_67 -> m2_53  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_54  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_55  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_63 -> m2_73  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_56  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_73 -> m2_57  [key=0, style=bold, color=blue];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
m2_186 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_189  [key=0, style=solid];
m2_187 -> m2_194  [key=2, style=dotted];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_195  [key=2, style=dotted];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_196  [key=2, style=dotted];
m2_188 -> m2_193  [key=0, style=solid];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_197  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_50  [key=2, style=dotted];
m2_193 -> m2_186  [key=0, style=bold, color=blue];
m2_204 -> m2_205  [key=0, style=solid];
m2_205 -> m2_204  [key=0, style=bold, color=blue];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_75 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_75 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_75 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_75 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_75 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_78  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_50  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_82  [key=0, style=solid];
m2_80 -> m2_90  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_52  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_85  [key=0, style=solid];
m2_83 -> m2_53  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_52  [key=2, style=dotted];
m2_84 -> m2_54  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_55  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_81 -> m2_89  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_56  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_89 -> m2_75  [key=0, style=bold, color=blue];
m2_206 -> m2_207  [key=0, style=solid];
m2_207 -> m2_206  [key=0, style=bold, color=blue];
m2_51 -> m2_208  [key=0, style=solid];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_210  [key=2, style=dotted];
m2_209 -> m2_51  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=2, style=dotted];
m2_19 -> m2_22  [key=2, style=dotted];
m2_19 -> m2_23  [key=2, style=dotted];
m2_19 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_19 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m2_20 -> m2_18  [key=0, style=bold, color=blue];
m2_211 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_2  [key=1, style=dashed, color=red, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
m2_211 -> m2_208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
}
