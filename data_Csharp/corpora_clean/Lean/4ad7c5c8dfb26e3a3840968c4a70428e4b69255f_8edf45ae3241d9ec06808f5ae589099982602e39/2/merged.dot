digraph  {
n289 [label="QuantConnect.Tests.Brokerages.BrokerageTests", span=""];
n290 [label=sync, span=""];
n291 [label=remaining, span=""];
n292 [label=manualResetEvent, span=""];
n293 [label=filledResetEvent, span=""];
n294 [label="QuantConnect.Orders.Order", span=""];
n295 [label=requiredStatusEvent, span=""];
n296 [label="QuantConnect.Orders.OrderStatus", span=""];
n297 [label=desiredStatusEvent, span=""];
n0 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", span="58-58", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n1 [label="Log.Trace('''')", span="60-60", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n2 [label="Log.Trace('''')", span="61-61", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n14 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
n3 [label="Log.Trace(''--- SETUP ---'')", span="62-62", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n4 [label="Log.Trace('''')", span="63-63", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n5 [label="Log.Trace('''')", span="64-64", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n6 [label="_brokerage = null", span="66-66", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n7 [label="_orderProvider = null", span="67-67", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n8 [label="_securityProvider = null", span="68-68", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n9 [label="Thread.Sleep(1000)", span="69-69", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n10 [label="CancelOpenOrders()", span="70-70", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n15 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)"];
n11 [label="LiquidateHoldings()", span="71-71", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n16 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", span="233-233", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()"];
n12 [label="Thread.Sleep(1000)", span="72-72", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n17 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", span="215-215", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n13 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", span="58-58", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()"];
n18 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", span="76-76", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()"];
n19 [label="Log.Trace('''')", span="80-80", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()"];
n20 [label="Log.Trace('''')", span="81-81", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()"];
n21 [label="Log.Trace(''--- TEARDOWN ---'')", span="82-82", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()"];
n22 [label="Log.Trace('''')", span="83-83", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()"];
n23 [label="Log.Trace('''')", span="84-84", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()"];
n24 [label="Thread.Sleep(1000)", span="85-85", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()"];
n25 [label="CancelOpenOrders()", span="86-86", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()"];
n26 [label="LiquidateHoldings()", span="87-87", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()"];
n27 [label="Thread.Sleep(1000)", span="88-88", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()"];
n28 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", span="76-76", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()"];
n29 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", span="111-111", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n30 [label="Log.Trace('''')", span="113-113", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n31 [label="Log.Trace(''- INITIALIZING BROKERAGE -'')", span="114-114", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n32 [label="Log.Trace('''')", span="115-115", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n33 [label="var brokerage = CreateBrokerage(OrderProvider, SecurityProvider)", span="117-117", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n34 [label="brokerage.Connect()", span="118-118", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n52 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="202-202", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)"];
n35 [label="!brokerage.IsConnected", span="120-120", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n37 [label="brokerage.Name == ''GDAX''", span="126-126", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n38 [label="((QuantConnect.Brokerages.GDAX.GDAXBrokerage)brokerage).Subscribe(null, new[] { Symbol })", span="128-128", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n42 [label="brokerage.GetOpenOrders()", span="134-134", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n47 [label="brokerage.GetAccountHoldings()", span="142-142", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n49 [label="brokerage.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                Log.Trace('''');\r\n                Log.Trace(''ORDER STATUS CHANGED: '' + args);\r\n                Log.Trace('''');\r\n\r\n                // we need to keep this maintained properly\r\n                if (args.Status == OrderStatus.Filled || args.Status == OrderStatus.PartiallyFilled)\r\n                {\r\n                    Log.Trace(''FILL EVENT: '' + args.FillQuantity + '' units of '' + args.Symbol.ToString());\r\n\r\n                    Security security;\r\n                    if (_securityProvider.TryGetValue(args.Symbol, out security))\r\n                    {\r\n                        var holding = _securityProvider[args.Symbol].Holdings;\r\n                        holding.SetHoldings(args.FillPrice, holding.Quantity + args.FillQuantity);\r\n                    }\r\n                    else\r\n                    {\r\n                        _securityProvider[args.Symbol] = CreateSecurity(args.Symbol);\r\n                        _securityProvider[args.Symbol].Holdings.SetHoldings(args.FillPrice, args.FillQuantity);\r\n                    }\r\n\r\n                    Log.Trace(''--HOLDINGS: '' + _securityProvider[args.Symbol]);\r\n\r\n                    // update order mapping\r\n                    var order = _orderProvider.GetOrderById(args.OrderId);\r\n                    order.Status = args.Status;\r\n                }\r\n            }", span="148-177", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n50 [label="return brokerage;", span="178-178", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n53 [label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103", cluster="QuantConnect.Interfaces.IBrokerage.Connect()"];
n36 [label="Assert.Fail(''Failed to connect to brokerage'')", span="122-122", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n54 [label="Entry Unk.Fail", span="", cluster="Unk.Fail"];
n39 [label="Log.Trace('''')", span="131-131", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n55 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="259-259", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)"];
n40 [label="Log.Trace(''GET OPEN ORDERS'')", span="132-132", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n41 [label="Log.Trace('''')", span="133-133", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n43 [label="OrderProvider.Add(openOrder)", span="136-136", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n44 [label="Log.Trace('''')", span="139-139", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n56 [label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="65-65", cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()"];
n57 [label="Entry QuantConnect.Tests.Brokerages.OrderProvider.Add(QuantConnect.Orders.Order)", span="42-42", cluster="QuantConnect.Tests.Brokerages.OrderProvider.Add(QuantConnect.Orders.Order)"];
n45 [label="Log.Trace(''GET ACCOUNT HOLDINGS'')", span="140-140", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n46 [label="Log.Trace('''')", span="141-141", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n48 [label="SecurityProvider[accountHolding.Symbol] = CreateSecurity(accountHolding.Symbol)", span="146-146", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n58 [label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="71-71", cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()"];
n59 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", span="181-181", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)"];
n62 [label="Log.Trace(''ORDER STATUS CHANGED: '' + args)", span="151-151", cluster="lambda expression"];
n64 [label="args.Status == OrderStatus.Filled || args.Status == OrderStatus.PartiallyFilled", span="155-155", cluster="lambda expression"];
n65 [label="Log.Trace(''FILL EVENT: '' + args.FillQuantity + '' units of '' + args.Symbol.ToString())", span="157-157", cluster="lambda expression"];
n67 [label="_securityProvider.TryGetValue(args.Symbol, out security)", span="160-160", cluster="lambda expression"];
n68 [label="var holding = _securityProvider[args.Symbol].Holdings", span="162-162", cluster="lambda expression"];
n69 [label="holding.SetHoldings(args.FillPrice, holding.Quantity + args.FillQuantity)", span="163-163", cluster="lambda expression"];
n70 [label="_securityProvider[args.Symbol] = CreateSecurity(args.Symbol)", span="167-167", cluster="lambda expression"];
n71 [label="_securityProvider[args.Symbol].Holdings.SetHoldings(args.FillPrice, args.FillQuantity)", span="168-168", cluster="lambda expression"];
n72 [label="Log.Trace(''--HOLDINGS: '' + _securityProvider[args.Symbol])", span="171-171", cluster="lambda expression"];
n73 [label="var order = _orderProvider.GetOrderById(args.OrderId)", span="174-174", cluster="lambda expression"];
n74 [label="order.Status = args.Status", span="175-175", cluster="lambda expression"];
n51 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", span="111-111", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()"];
n60 [label="Entry lambda expression", span="148-177", cluster="lambda expression"];
n61 [label="Log.Trace('''')", span="150-150", cluster="lambda expression"];
n63 [label="Log.Trace('''')", span="152-152", cluster="lambda expression"];
n75 [label="Exit lambda expression", span="148-177", cluster="lambda expression"];
n66 [label="Security security", span="159-159", cluster="lambda expression"];
n76 [label="Entry QuantConnect.Symbol.ToString()", span="350-350", cluster="QuantConnect.Symbol.ToString()"];
n77 [label="Entry QuantConnect.Tests.Brokerages.SecurityProvider.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="52-52", cluster="QuantConnect.Tests.Brokerages.SecurityProvider.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)"];
n78 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", span="392-392", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)"];
n79 [label="Entry QuantConnect.Tests.Brokerages.OrderProvider.GetOrderById(int)", span="53-53", cluster="QuantConnect.Tests.Brokerages.OrderProvider.GetOrderById(int)"];
n80 [label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork),\r\n                new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, false, false, false),\r\n                new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="183-185", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", color=red, community=0];
n81 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", span="181-181", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)"];
n82 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)"];
n83 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)"];
n84 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)"];
n85 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)"];
n86 [label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84", cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)"];
n87 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="202-202", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)"];
n88 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", span="208-208", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)"];
n89 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", span="208-208", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)"];
n90 [label="Log.Trace('''')", span="217-217", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n91 [label="Log.Trace(''LIQUIDATE HOLDINGS'')", span="218-218", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n92 [label="Log.Trace('''')", span="219-219", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n93 [label="var holdings = Brokerage.GetAccountHoldings()", span="221-221", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n94 [label=holdings, span="223-223", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n95 [label="holding.Quantity == 0", span="225-225", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n100 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", span="215-215", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n96 [label="Log.Trace(''Liquidating: '' + holding)", span="226-226", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n97 [label="var order = new MarketOrder(holding.Symbol, (int)-holding.Quantity, DateTime.Now)", span="227-227", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n98 [label="_orderProvider.Add(order)", span="228-228", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n101 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)"];
n99 [label="PlaceOrderWaitForStatus(order, OrderStatus.Filled)", span="229-229", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()"];
n102 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", span="498-498", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)"];
n103 [label="Log.Trace('''')", span="235-235", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()"];
n104 [label="Log.Trace(''CANCEL OPEN ORDERS'')", span="236-236", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()"];
n105 [label="Log.Trace('''')", span="237-237", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()"];
n106 [label="var openOrders = Brokerage.GetOpenOrders()", span="238-238", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()"];
n107 [label=openOrders, span="239-239", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()"];
n108 [label="Log.Trace(''Canceling: '' + openOrder)", span="241-241", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()"];
n110 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", span="233-233", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()"];
n109 [label="Brokerage.CancelOrder(openOrder)", span="242-242", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()"];
n111 [label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="98-98", cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n112 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", span="271-271", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)"];
n113 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", span="271-271", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)"];
n114 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", span="276-276", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()"];
n115 [label="return 1;", span="278-278", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()"];
n116 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", span="276-276", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()"];
n117 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", span="282-282", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()"];
n118 [label="Assert.IsTrue(Brokerage.IsConnected)", span="284-284", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()"];
n119 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", span="282-282", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()"];
n120 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue"];
n121 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="288-288", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n122 [label="Log.Trace('''')", span="290-290", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n125 [label="PlaceOrderWaitForStatus(parameters.CreateLongOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="293-293", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n123 [label="Log.Trace(''LONG FROM ZERO'')", span="291-291", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n124 [label="Log.Trace('''')", span="292-292", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n126 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="288-288", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n127 [label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(decimal)", span="51-51", cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(decimal)"];
n128 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="297-297", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n129 [label="Log.Trace('''')", span="299-299", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n132 [label="PlaceOrderWaitForStatus(parameters.CreateLongMarketOrder(GetDefaultQuantity()), OrderStatus.Filled)", span="303-303", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n133 [label="PlaceOrderWaitForStatus(parameters.CreateShortOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="306-306", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n130 [label="Log.Trace(''CLOSE FROM LONG'')", span="300-300", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n131 [label="Log.Trace('''')", span="301-301", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n135 [label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(decimal)", span="35-35", cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(decimal)"];
n134 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="297-297", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n136 [label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(decimal)", span="47-47", cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(decimal)"];
n137 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="310-310", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n138 [label="Log.Trace('''')", span="312-312", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n141 [label="PlaceOrderWaitForStatus(parameters.CreateShortOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="315-315", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n139 [label="Log.Trace(''SHORT FROM ZERO'')", span="313-313", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n140 [label="Log.Trace('''')", span="314-314", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n142 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="310-310", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n143 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="319-319", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n144 [label="Log.Trace('''')", span="321-321", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n147 [label="PlaceOrderWaitForStatus(parameters.CreateShortMarketOrder(GetDefaultQuantity()), OrderStatus.Filled)", span="325-325", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n148 [label="PlaceOrderWaitForStatus(parameters.CreateLongOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="328-328", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n145 [label="Log.Trace(''CLOSE FROM SHORT'')", span="322-322", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n146 [label="Log.Trace('''')", span="323-323", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n150 [label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(decimal)", span="39-39", cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(decimal)"];
n149 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="319-319", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n151 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="332-332", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n152 [label="Log.Trace('''')", span="334-334", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n155 [label="PlaceOrderWaitForStatus(parameters.CreateLongMarketOrder(GetDefaultQuantity()))", span="338-338", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n156 [label="var order = PlaceOrderWaitForStatus(parameters.CreateShortOrder(2 * GetDefaultQuantity()), parameters.ExpectedStatus)", span="341-341", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n157 [label="parameters.ModifyUntilFilled", span="343-343", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n158 [label="ModifyOrderUntilFilled(order, parameters)", span="345-345", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n153 [label="Log.Trace(''SHORT FROM LONG'')", span="335-335", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n154 [label="Log.Trace('''')", span="336-336", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n159 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="332-332", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n160 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", span="439-439", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n161 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="350-350", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n162 [label="Log.Trace('''')", span="352-352", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n165 [label="PlaceOrderWaitForStatus(parameters.CreateShortMarketOrder(-GetDefaultQuantity()), OrderStatus.Filled)", span="356-356", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n166 [label="var order = PlaceOrderWaitForStatus(parameters.CreateLongOrder(2 * GetDefaultQuantity()), parameters.ExpectedStatus)", span="359-359", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n167 [label="parameters.ModifyUntilFilled", span="361-361", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n168 [label="ModifyOrderUntilFilled(order, parameters)", span="363-363", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n163 [label="Log.Trace(''LONG FROM SHORT'')", span="353-353", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n164 [label="Log.Trace('''')", span="354-354", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n169 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="350-350", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)"];
n170 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", span="368-368", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()"];
n171 [label="Log.Trace('''')", span="370-370", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()"];
n172 [label="Log.Trace(''GET CASH BALANCE'')", span="371-371", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()"];
n173 [label="Log.Trace('''')", span="372-372", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()"];
n174 [label="var balance = Brokerage.GetCashBalance()", span="373-373", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()"];
n175 [label="Assert.AreEqual(1, balance.Count(x => x.Symbol == ''USD''))", span="374-374", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()"];
n177 [label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77", cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()"];
n176 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", span="368-368", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()"];
n178 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)"];
n179 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual"];
n180 [label="Entry lambda expression", span="374-374", cluster="lambda expression"];
n181 [label="x.Symbol == ''USD''", span="374-374", cluster="lambda expression"];
n182 [label="Exit lambda expression", span="374-374", cluster="lambda expression"];
n183 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", span="378-378", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n184 [label="Log.Trace('''')", span="380-380", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n185 [label="Log.Trace(''GET ACCOUNT HOLDINGS'')", span="381-381", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n186 [label="Log.Trace('''')", span="382-382", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n187 [label="var before = Brokerage.GetAccountHoldings()", span="383-383", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n188 [label="PlaceOrderWaitForStatus(new MarketOrder(Symbol, GetDefaultQuantity(), DateTime.Now))", span="385-385", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n190 [label="var beforeHoldings = before.FirstOrDefault(x => x.Symbol == Symbol)", span="389-389", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n189 [label="var after = Brokerage.GetAccountHoldings()", span="387-387", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n191 [label="var afterHoldings = after.FirstOrDefault(x => x.Symbol == Symbol)", span="390-390", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n196 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault"];
n197 [label="Entry lambda expression", span="389-389", cluster="lambda expression"];
n192 [label="var beforeQuantity = beforeHoldings == null ? 0 : beforeHoldings.Quantity", span="392-392", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n200 [label="Entry lambda expression", span="390-390", cluster="lambda expression"];
n193 [label="var afterQuantity = afterHoldings == null ? 0 : afterHoldings.Quantity", span="393-393", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n194 [label="Assert.AreEqual(GetDefaultQuantity(), afterQuantity - beforeQuantity)", span="395-395", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n195 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", span="378-378", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()"];
n198 [label="x.Symbol == Symbol", span="389-389", cluster="lambda expression"];
n199 [label="Exit lambda expression", span="389-389", cluster="lambda expression"];
n201 [label="x.Symbol == Symbol", span="390-390", cluster="lambda expression"];
n202 [label="Exit lambda expression", span="390-390", cluster="lambda expression"];
n203 [label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", span="399-399", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n204 [label="var manualResetEvent = new ManualResetEvent(false)", span="401-401", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n205 [label="var qty = 1000000m", span="403-403", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n218 [label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0", cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)"];
n208 [label="Brokerage.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                lock (sync)\r\n                {\r\n                    remaining -= orderEvent.FillQuantity;\r\n                    Console.WriteLine(''Remaining: '' + remaining + '' FillQuantity: '' + orderEvent.FillQuantity);\r\n                    if (orderEvent.Status == OrderStatus.Filled)\r\n                    {\r\n                        manualResetEvent.Set();\r\n                    }\r\n                }\r\n            }", span="406-417", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n228 [label="manualResetEvent.Set()", span="414-414", cluster="lambda expression"];
n212 [label="manualResetEvent.WaitOne(2500)", span="425-425", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n213 [label="manualResetEvent.WaitOne(2500)", span="426-426", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n214 [label="manualResetEvent.WaitOne(2500)", span="427-427", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n206 [label="var remaining = qty", span="404-404", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n210 [label="var order = new MarketOrder(symbol, qty, DateTime.UtcNow) { Id = 1 }", span="421-421", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n207 [label="var sync = new object()", span="405-405", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n219 [label="Entry object.Object()", span="0-0", cluster="object.Object()"];
n224 [label=sync, span="408-408", cluster="lambda expression"];
n209 [label="var symbol = Symbols.EURUSD", span="420-420", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n225 [label="remaining -= orderEvent.FillQuantity", span="410-410", cluster="lambda expression"];
n226 [label="Console.WriteLine(''Remaining: '' + remaining + '' FillQuantity: '' + orderEvent.FillQuantity)", span="411-411", cluster="lambda expression"];
n227 [label="orderEvent.Status == OrderStatus.Filled", span="412-412", cluster="lambda expression"];
n211 [label="Brokerage.PlaceOrder(order)", span="422-422", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n220 [label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="84-84", cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n221 [label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(int)"];
n215 [label="Console.WriteLine(''Remaining: '' + remaining)", span="429-429", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n216 [label="Assert.AreEqual(0, remaining)", span="430-430", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n222 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)"];
n217 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", span="399-399", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()"];
n223 [label="Entry lambda expression", span="406-417", cluster="lambda expression"];
n229 [label="Exit lambda expression", span="406-417", cluster="lambda expression"];
n230 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()"];
n231 [label="order.Status == OrderStatus.Filled", span="441-441", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n234 [label="EventHandler<OrderEvent> brokerageOnOrderStatusChanged = (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    filledResetEvent.Set();\r\n                }\r\n                if (args.Status == OrderStatus.Canceled || args.Status == OrderStatus.Invalid)\r\n                {\r\n                    Log.Trace(''ModifyOrderUntilFilled(): '' + order);\r\n                    Assert.Fail(''Unexpected order status: '' + args.Status);\r\n                }\r\n            }", span="447-458", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n261 [label="Log.Trace(''ModifyOrderUntilFilled(): '' + order)", span="455-455", cluster="lambda expression"];
n237 [label="Log.Trace(''MODIFY UNTIL FILLED: '' + order)", span="463-463", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n240 [label="!filledResetEvent.WaitOne(3000) && stopwatch.Elapsed.TotalSeconds < secondsTimeout", span="466-466", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n242 [label="order.Status == OrderStatus.PartiallyFilled", span="469-469", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n243 [label="var marketPrice = GetAskPrice(order.Symbol)", span="471-471", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n245 [label="var updateOrder = parameters.ModifyOrderToFill(Brokerage, order, marketPrice)", span="474-474", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n247 [label="order.Status == OrderStatus.Filled", span="477-477", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n248 [label="Log.Trace(''BrokerageTests.ModifyOrderUntilFilled(): '' + order)", span="479-479", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n249 [label="!Brokerage.UpdateOrder(order)", span="480-480", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n232 [label="return;", span="443-443", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n233 [label="var filledResetEvent = new ManualResetEvent(false)", span="446-446", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n259 [label="filledResetEvent.Set()", span="451-451", cluster="lambda expression"];
n241 [label="filledResetEvent.Reset()", span="468-468", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n235 [label="Brokerage.OrderStatusChanged += brokerageOnOrderStatusChanged", span="460-460", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n258 [label="args.Status == OrderStatus.Filled", span="449-449", cluster="lambda expression"];
n260 [label="args.Status == OrderStatus.Canceled || args.Status == OrderStatus.Invalid", span="453-453", cluster="lambda expression"];
n262 [label="Assert.Fail(''Unexpected order status: '' + args.Status)", span="456-456", cluster="lambda expression"];
n251 [label="Brokerage.OrderStatusChanged -= brokerageOnOrderStatusChanged", span="487-487", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n236 [label="Log.Trace('''')", span="462-462", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n238 [label="Log.Trace('''')", span="464-464", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n239 [label="var stopwatch = Stopwatch.StartNew()", span="465-465", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n253 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()"];
n254 [label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0", cluster="System.Threading.EventWaitHandle.Reset()"];
n244 [label="Log.Trace(''BrokerageTests.ModifyOrderUntilFilled(): Ask: '' + marketPrice)", span="472-472", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n246 [label=updateOrder, span="475-475", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n255 [label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="55-55", cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)"];
n250 [label="Assert.Fail(''Brokerage failed to update the order'')", span="482-482", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n256 [label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="91-91", cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n252 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", span="439-439", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)"];
n257 [label="Entry lambda expression", span="447-458", cluster="lambda expression"];
n263 [label="Exit lambda expression", span="447-458", cluster="lambda expression"];
n264 [label="var requiredStatusEvent = new ManualResetEvent(false)", span="500-500", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)"];
n266 [label="EventHandler<OrderEvent> brokerageOnOrderStatusChanged = (sender, args) =>\r\n            {\r\n                // no matter what, every order should fire at least one of these\r\n                if (args.Status == OrderStatus.Submitted || args.Status == OrderStatus.Invalid)\r\n                {\r\n                    Log.Trace('''');\r\n                    Log.Trace(''SUBMITTED: '' + args);\r\n                    Log.Trace('''');\r\n                    requiredStatusEvent.Set();\r\n                }\r\n                // make sure we fire the status we're expecting\r\n                if (args.Status == expectedStatus)\r\n                {\r\n                    Log.Trace('''');\r\n                    Log.Trace(''EXPECTED: '' + args);\r\n                    Log.Trace('''');\r\n                    desiredStatusEvent.Set();\r\n                }\r\n            }", span="502-520", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)"];
n283 [label="args.Status == expectedStatus", span="513-513", cluster="lambda expression"];
n268 [label="OrderProvider.Add(order)", span="524-524", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)"];
n269 [label="!Brokerage.PlaceOrder(order) && !allowFailedSubmission", span="525-525", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)"];
n270 [label="Assert.Fail(''Brokerage failed to place the order: '' + order)", span="527-527", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)"];
n271 [label="requiredStatusEvent.WaitOneAssertFail((int) (1000*secondsTimeout), ''Expected every order to fire a submitted or invalid status event'')", span="529-529", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", color=red, community=0];
n272 [label="desiredStatusEvent.WaitOneAssertFail((int) (1000*secondsTimeout), ''OrderStatus '' + expectedStatus + '' was not encountered within the timeout. Order Id:'' + order.Id)", span="530-530", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", color=red, community=0];
n274 [label="return order;", span="534-534", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)"];
n265 [label="var desiredStatusEvent = new ManualResetEvent(false)", span="501-501", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)"];
n282 [label="requiredStatusEvent.Set()", span="510-510", cluster="lambda expression"];
n287 [label="desiredStatusEvent.Set()", span="518-518", cluster="lambda expression"];
n267 [label="Brokerage.OrderStatusChanged += brokerageOnOrderStatusChanged", span="522-522", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)"];
n278 [label="args.Status == OrderStatus.Submitted || args.Status == OrderStatus.Invalid", span="505-505", cluster="lambda expression"];
n280 [label="Log.Trace(''SUBMITTED: '' + args)", span="508-508", cluster="lambda expression"];
n285 [label="Log.Trace(''EXPECTED: '' + args)", span="516-516", cluster="lambda expression"];
n273 [label="Brokerage.OrderStatusChanged -= brokerageOnOrderStatusChanged", span="532-532", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)"];
n276 [label="Entry System.Threading.WaitHandle.WaitOneAssertFail(int, string)", span="32-32", cluster="System.Threading.WaitHandle.WaitOneAssertFail(int, string)"];
n275 [label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", span="498-498", cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)"];
n277 [label="Entry lambda expression", span="502-520", cluster="lambda expression"];
n279 [label="Log.Trace('''')", span="507-507", cluster="lambda expression"];
n281 [label="Log.Trace('''')", span="509-509", cluster="lambda expression"];
n284 [label="Log.Trace('''')", span="515-515", cluster="lambda expression"];
n288 [label="Exit lambda expression", span="502-520", cluster="lambda expression"];
n286 [label="Log.Trace('''')", span="517-517", cluster="lambda expression"];
m0_150 [label="Entry QuantConnect.Holding.Holding()", span="83-83", cluster="QuantConnect.Holding.Holding()", file="GDAXBrokerage.cs"];
m0_54 [label="Entry QuantConnect.Util.Composer.Reset()", span="198-198", cluster="QuantConnect.Util.Composer.Reset()", file="GDAXBrokerage.cs"];
m0_80 [label="var algorithmManager = new AlgorithmManager(false)", span="84-84", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_81 [label="engine.Run(job, algorithmManager, algorithmPath)", span="85-85", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_82 [label="Exit lambda expression", span="80-86", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_102 [label="s.TotalAlphasClosed", span="115-115", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_105 [label="s.TotalAlphasGenerated", span="116-116", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_110 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_83 [label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="36-36", cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="GDAXBrokerage.cs"];
m0_84 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="108-108", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="GDAXBrokerage.cs"];
m0_85 [label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="GDAXBrokerage.cs"];
m0_86 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_103 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_87 [label="s.MeanPopulationScore.Direction", span="110-110", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_88 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_89 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_90 [label="s.MeanPopulationScore.Magnitude", span="111-111", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_91 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_92 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_93 [label="s.RollingAveragedPopulationScore.Direction", span="112-112", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_94 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_95 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_96 [label="s.RollingAveragedPopulationScore.Magnitude", span="113-113", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_97 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_98 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_100 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_101 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_99 [label="s.LongShortRatio", span="114-114", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_104 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_106 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_107 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_109 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_108 [label="s.TotalEstimatedAlphaValue", span="117-117", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_111 [label="s.TotalAlphasAnalysisCompleted", span="118-118", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_40 [label="AssertAlphaStatistics(expectedAlphaStatistics, alphaStatistics, s => s.RollingAveragedPopulationScore.Direction)", span="112-112", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="GDAXBrokerage.cs"];
m0_35 [label="Assert.AreEqual(true, statistics.ContainsKey(stat.Key), ''Missing key: '' + stat.Key)", span="104-104", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="GDAXBrokerage.cs"];
m0_116 [label="var expectedValue = func(expected)", span="136-136", cluster="QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", file="GDAXBrokerage.cs"];
m0_74 [label=a, span="146-146", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_113 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41", cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="GDAXBrokerage.cs"];
m0_115 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="GDAXBrokerage.cs"];
m0_117 [label="Entry Unk.ConvertProductId", span="", cluster="Unk.ConvertProductId", file="GDAXBrokerage.cs"];
m0_119 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="GDAXBrokerage.cs"];
m0_120 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="GDAXBrokerage.cs"];
m0_114 [label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="GDAXBrokerage.cs"];
m0_118 [label="Entry Unk.ConvertOrderStatus", span="", cluster="Unk.ConvertOrderStatus", file="GDAXBrokerage.cs"];
m0_121 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="GDAXBrokerage.cs"];
m0_125 [label="Exit lambda expression", span="214-214", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_49 [label="File.Delete(passedFile)", span="125-125", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="GDAXBrokerage.cs"];
m0_0 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="49-49", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_31 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid })", span="111-111", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="GDAXBrokerage.cs"];
m0_16 [label="Log.Error(''GDAXBrokerage.PlaceOrder: Error parsing response from place order'')", span="77-77", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_30 [label="return true;", span="107-107", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_32 [label="Log.Trace(''GDAXBrokerage.PlaceOrder(): Order failed Order Id: '' + order.Id + '' timestamp:'' + order.Time + '' quantity: '' + order.Quantity.ToString()\r\n                + '' content:'' + response.Content)", span="112-113", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="GDAXBrokerage.cs"];
m0_34 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="49-49", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_33 [label="return false;", span="114-114", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_15 [label="raw == null || raw.id == null", span="75-75", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_17 [label="return false;", span="79-79", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_29 [label="Log.Trace(''GDAXBrokerage.PlaceOrder: Order completed successfully orderid:'' + order.Id.ToString())", span="106-106", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_38 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="GDAXBrokerage.cs"];
m0_39 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="GDAXBrokerage.cs"];
m0_41 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.cs"];
m0_42 [label="Entry Unk.AddJsonBody", span="", cluster="Unk.AddJsonBody", file="GDAXBrokerage.cs"];
m0_43 [label="Entry Unk.GetAuthenticationToken", span="", cluster="Unk.GetAuthenticationToken", file="GDAXBrokerage.cs"];
m0_44 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="GDAXBrokerage.cs"];
m0_45 [label="Entry Unk.>", span="", cluster="Unk.>", file="GDAXBrokerage.cs"];
m0_46 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="GDAXBrokerage.cs"];
m0_36 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="GDAXBrokerage.cs"];
m0_37 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="GDAXBrokerage.cs"];
m0_14 [label="dynamic raw = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="73-73", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_4 [label="payload.side = order.Direction.ToString().ToLower()", span="56-56", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_18 [label="string brokerId = raw.id", span="82-82", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_19 [label="CachedOrderIDs.ContainsKey(order.Id)", span="83-83", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_28 [label="FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="103-103", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", color=red, community=0];
m0_47 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="GDAXBrokerage.cs"];
m0_1 [label="var req = new RestRequest(''/orders'', Method.POST)", span="51-51", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_7 [label="payload.product_id = ConvertSymbol(order.Symbol)", span="59-59", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_23 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted })", span="93-93", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_13 [label="response.StatusCode == System.Net.HttpStatusCode.OK && response.Content != null", span="71-71", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_8 [label="_algorithm.BrokerageModel.AccountType == AccountType.Margin", span="61-61", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_9 [label="payload.overdraft_enabled = true", span="63-63", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_10 [label="req.AddJsonBody(payload)", span="66-66", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_11 [label="GetAuthenticationToken(req)", span="68-68", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_12 [label="var response = RestClient.Execute(req)", span="69-69", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_3 [label="payload.size = Math.Abs(order.Quantity)", span="55-55", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_5 [label="payload.type = ConvertOrderType(order.Type)", span="57-57", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_6 [label="payload.price = order is LimitOrder ? ((LimitOrder)order).LimitPrice : order is StopMarketOrder ? ((StopMarketOrder)order).StopPrice : 0", span="58-58", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_50 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="GDAXBrokerage.cs"];
m0_20 [label="CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="85-85", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_25 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, (decimal)raw.fill_fees, ''GDAX Order Event'') { Status = OrderStatus.Filled })", span="97-97", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_27 [label="CachedOrderIDs.TryRemove(order.Id, out outOrder)", span="99-99", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_48 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="GDAXBrokerage.cs"];
m0_2 [label="dynamic payload = new ExpandoObject()", span="53-53", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_22 [label="CachedOrderIDs.TryAdd(order.Id, order)", span="90-90", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_24 [label="order.Type == OrderType.Market", span="95-95", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_21 [label="order.BrokerId.Add(brokerId)", span="89-89", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_26 [label="Orders.Order outOrder = null", span="98-98", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_51 [label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113", cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="GDAXBrokerage.cs"];
m0_55 [label="Entry System.Enum.ToLower()", span="909-909", cluster="System.Enum.ToLower()", file="GDAXBrokerage.cs"];
m0_64 [label="order.BrokerId", span="137-137", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_79 [label="var job = systemHandlers.JobQueue.NextJob(out algorithmPath)", span="83-83", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_146 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="GDAXBrokerage.cs"];
m0_128 [label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0", cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="GDAXBrokerage.cs"];
m0_129 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="GDAXBrokerage.cs"];
m0_130 [label=systemHandlers, span="", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_142 [label="list.Add(new Holding\r\n                    {\r\n                        Symbol = ConvertProductId(item.ProductId),\r\n                        Quantity = item.Side == ''sell'' ? -item.FilledSize : item.FilledSize,\r\n                        Type = SecurityType.Forex,\r\n                        CurrencySymbol = item.ProductId.Substring(0, 3).ToUpper(),\r\n                        ConversionRate = conversionRate,\r\n                        MarketPrice = item.Price,\r\n                        //todo: check this\r\n                        AveragePrice = item.FilledSize > 0 ? item.ExecutedValue / item.FilledSize : 0\r\n                    })", span="256-266", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_143 [label="return list;", span="270-270", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_131 [label=engine, span="", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_132 [label="var response = RestClient.Execute(req)", span="236-236", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_133 [label="response != null", span="237-237", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_134 [label="JsonConvert.DeserializeObject<Messages.Order[]>(response.Content)", span="239-239", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_135 [label="decimal conversionRate", span="242-242", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_136 [label="!item.ProductId.EndsWith(''USD'', StringComparison.InvariantCultureIgnoreCase)", span="243-243", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_137 [label="var baseSymbol = (item.ProductId.Substring(0, 3) + ''USD'').ToLower()", span="246-246", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_140 [label="var tick = this.GetTick(ConvertProductId(item.ProductId))", span="252-252", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_138 [label="var tick = this.GetTick(Symbol.Create(baseSymbol, SecurityType.Forex, Market.GDAX))", span="247-247", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_139 [label="conversionRate = tick.Price", span="248-248", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_141 [label="conversionRate = tick.Price", span="253-253", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_144 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="230-230", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs"];
m0_122 [label="Entry Unk.First", span="", cluster="Unk.First", file="GDAXBrokerage.cs"];
m0_56 [label="Entry decimal.ToString()", span="0-0", cluster="decimal.ToString()", file="GDAXBrokerage.cs"];
m0_62 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="133-133", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_71 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerage.cs"];
m0_152 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="277-277", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_153 [label="var list = new List<Securities.Cash>()", span="279-279", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_154 [label="var req = new RestRequest(''/accounts'', Method.GET)", span="281-281", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_160 [label="list.Add(new Securities.Cash(item.Currency, item.Balance, 1))", span="291-291", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_162 [label="list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, tick.Price))", span="297-297", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_163 [label="return list;", span="301-301", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_155 [label="GetAuthenticationToken(req)", span="282-282", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_156 [label="var response = RestClient.Execute(req)", span="283-283", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_157 [label="JsonConvert.DeserializeObject<Messages.Account[]>(response.Content)", span="285-285", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_158 [label="item.Balance > 0", span="287-287", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_159 [label="item.Currency == ''USD''", span="289-289", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_161 [label="var tick = GetTick(Symbol.Create(item.Currency + ''USD'', SecurityType.Forex, Market.GDAX))", span="295-295", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_164 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="277-277", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs"];
m0_69 [label="return success.All(a => a);", span="146-146", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_124 [label="c.Value.BrokerId.Contains(item.BrokerId.First())", span="214-214", cluster="lambda expression", file="GDAXBrokerage.cs"];
m0_126 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="GDAXBrokerage.cs"];
m0_61 [label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="33-33", cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="GDAXBrokerage.cs"];
m0_72 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="GDAXBrokerage.cs"];
m0_65 [label="var req = new RestRequest(''/orders/'' + id, Method.DELETE)", span="139-139", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_77 [label="WebSocket.Close()", span="154-154", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs"];
m0_73 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="GDAXBrokerage.cs"];
m0_75 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="GDAXBrokerage.cs"];
m0_123 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="GDAXBrokerage.cs"];
m0_112 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28", cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXBrokerage.cs"];
m0_78 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="152-152", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs"];
m0_166 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="GDAXBrokerage.cs"];
m0_63 [label="List<bool> success = new List<bool>()", span="135-135", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_68 [label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="GDAXBrokerage.cs"];
m0_66 [label="Entry QuantConnect.Logging.ILogHandler.Trace(string)", span="42-42", cluster="QuantConnect.Logging.ILogHandler.Trace(string)", file="GDAXBrokerage.cs"];
m0_67 [label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="62-62", cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="GDAXBrokerage.cs"];
m0_70 [label="Entry System.Threading.Tasks.Task.Wait()", span="0-0", cluster="System.Threading.Tasks.Task.Wait()", file="GDAXBrokerage.cs"];
m0_58 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="123-123", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_60 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="123-123", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_76 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="152-152", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs"];
m0_145 [label="Entry Unk.EndsWith", span="", cluster="Unk.EndsWith", file="GDAXBrokerage.cs"];
m0_165 [label="Entry Securities.Cash.cstr", span="", cluster="Securities.Cash.cstr", file="GDAXBrokerage.cs"];
m0_57 [label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0", cluster="System.IO.Directory.CreateDirectory(string)", file="GDAXBrokerage.cs"];
m0_174 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="GDAXBrokerage.cs"];
m0_151 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="GDAXBrokerage.cs"];
m0_53 [label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49", cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_59 [label="throw new NotSupportedException(''Order update not supported. Please cancel and re-create.'');", span="125-125", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_149 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="202-202", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.cs"];
m0_52 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="GDAXBrokerage.cs"];
m0_127 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="GDAXBrokerage.cs"];
m0_175 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="324-324", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_176 [label="var totalFee = 0m", span="326-326", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_177 [label="order.BrokerId", span="328-328", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_182 [label="totalFee += (decimal)fill.fill_fees", span="335-335", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_183 [label="return totalFee;", span="338-338", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_178 [label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="330-330", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_179 [label="GetAuthenticationToken(req)", span="331-331", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_180 [label="var response = RestClient.Execute(req)", span="332-332", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_181 [label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="333-333", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_184 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="324-324", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs"];
m0_167 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="308-308", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs"];
m0_168 [label=Ticks, span="310-310", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs"];
m0_169 [label="var copy = Ticks.ToArray()", span="312-312", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs"];
m0_170 [label="Ticks.Clear()", span="313-313", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs"];
m0_171 [label="return copy;", span="314-314", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs"];
m0_172 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="308-308", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs"];
m0_147 [label="Entry Unk.ToLower", span="", cluster="Unk.ToLower", file="GDAXBrokerage.cs"];
m0_148 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="GDAXBrokerage.cs"];
m0_173 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="GDAXBrokerage.cs"];
m0_185 [label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span="", file="GDAXBrokerage.cs"];
m0_186 [label=item, span="", file="GDAXBrokerage.cs"];
m1_0 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33", cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="GDAXBrokerage.Messaging.cs"];
m1_1 [label="CommissionReport = commissionReport", span="35-35", cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="GDAXBrokerage.Messaging.cs"];
m1_2 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33", cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="GDAXBrokerage.Messaging.cs"];
m1_3 [label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs", span="", file="GDAXBrokerage.Messaging.cs"];
m2_8 [label="Entry RestSharp.RestClient.cstr", span="", cluster="RestSharp.RestClient.cstr", file="GDAXBrokerageIntegrationTests.cs"];
m2_10 [label="Entry GDAXBrokerage.cstr", span="", cluster="GDAXBrokerage.cstr", file="GDAXBrokerageIntegrationTests.cs"];
m2_3 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="57-57", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="GDAXBrokerageIntegrationTests.cs"];
m2_4 [label="var restClient = new RestSharp.RestClient()", span="59-59", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", color=red, community=0, file="GDAXBrokerageIntegrationTests.cs"];
m2_5 [label="var webSocketClient = new WebSocketWrapper()", span="60-60", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="GDAXBrokerageIntegrationTests.cs"];
m2_6 [label="return new GDAXBrokerage(Config.Get(''gdax-url'', ''wss://ws-feed.gdax.com''), webSocketClient, restClient, Config.Get(''gdax-api-key''), Config.Get(''gdax-api-secret''), \r\n                Config.Get(''gdax-passphrase''));", span="62-63", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", color=red, community=0, file="GDAXBrokerageIntegrationTests.cs"];
m2_7 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="57-57", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="GDAXBrokerageIntegrationTests.cs"];
m2_12 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.GetAskPrice(QuantConnect.Symbol)", span="66-66", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.GetAskPrice(QuantConnect.Symbol)", file="GDAXBrokerageIntegrationTests.cs"];
m2_13 [label="var tick = ((GDAXBrokerage)this.Brokerage).GetTick(symbol)", span="68-68", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.GetAskPrice(QuantConnect.Symbol)", file="GDAXBrokerageIntegrationTests.cs"];
m2_14 [label="return tick.AskPrice;", span="69-69", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.GetAskPrice(QuantConnect.Symbol)", file="GDAXBrokerageIntegrationTests.cs"];
m2_15 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.GetAskPrice(QuantConnect.Symbol)", span="66-66", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.GetAskPrice(QuantConnect.Symbol)", file="GDAXBrokerageIntegrationTests.cs"];
m2_0 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.GetDefaultQuantity()", span="51-51", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.GetDefaultQuantity()", file="GDAXBrokerageIntegrationTests.cs"];
m2_1 [label="return 0.00001m;", span="53-53", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.GetDefaultQuantity()", color=red, community=0, file="GDAXBrokerageIntegrationTests.cs"];
m2_2 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.GetDefaultQuantity()", span="51-51", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests.GetDefaultQuantity()", file="GDAXBrokerageIntegrationTests.cs"];
m2_11 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="GDAXBrokerageIntegrationTests.cs"];
m2_9 [label="Entry QuantConnect.Brokerages.WebSocketWrapper.WebSocketWrapper()", span="29-29", cluster="QuantConnect.Brokerages.WebSocketWrapper.WebSocketWrapper()", file="GDAXBrokerageIntegrationTests.cs"];
m2_16 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="202-202", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerageIntegrationTests.cs"];
m2_17 [label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests", span="", file="GDAXBrokerageIntegrationTests.cs"];
m3_92 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", span="124-124", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_93 [label="string json = _matchData", span="126-126", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_95 [label="expectedQuantity == 99", span="129-129", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_104 [label="Assert.AreEqual(raised.WaitOne(1000), expectedQuantity != 99)", span="156-156", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_94 [label="string id = ''132fb6ae-456b-4654-b4e0-d681ac05cea1''", span="127-127", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_96 [label="json = json.Replace(id, Guid.NewGuid().ToString())", span="131-131", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_103 [label="_unit.OnMessage(_unit, GDAXTestsHelpers.GetArgs(json))", span="153-153", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_98 [label="GDAXTestsHelpers.AddOrder(_unit, 1, id, orderQuantity)", span="135-135", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_97 [label="decimal orderQuantity = 6.1m", span="134-134", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_102 [label="_unit.OrderStatusChanged += (s, e) =>\r\n            {\r\n                Assert.AreEqual(''BTCUSD'', e.Symbol.Value);\r\n                actualFee += e.OrderFee;\r\n                actualQuantity += e.AbsoluteFillQuantity;\r\n\r\n                Assert.AreEqual(actualQuantity != orderQuantity ? Orders.OrderStatus.PartiallyFilled : Orders.OrderStatus.Filled, e.Status);\r\n                Assert.AreEqual(5.23512m, actualQuantity);\r\n                Assert.AreEqual(0.01m, Math.Round(actualFee, 8));\r\n                raised.Set();\r\n            }", span="141-151", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_99 [label="ManualResetEvent raised = new ManualResetEvent(false)", span="136-136", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_100 [label="decimal actualFee = 0", span="138-138", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_101 [label="decimal actualQuantity = 0", span="139-139", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_105 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", span="124-124", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs"];
m3_219 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="GDAXBrokerageTests.cs"];
m3_135 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", span="179-179", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_136 [label="var response = new\r\n            {\r\n                id = _brokerId,\r\n                fill_fees = ''0.11''\r\n            }", span="181-185", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_137 [label="SetupResponse(JsonConvert.SerializeObject(response), httpStatus)", span="186-186", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_139 [label="orderType == OrderType.Market && httpStatus == HttpStatusCode.OK", span="190-190", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_142 [label="_unit.OrderStatusChanged += (s, e) =>\r\n            {\r\n                if (orderType == OrderType.Market && e.Status == OrderStatus.Filled)\r\n                {\r\n                    hasFilled = true;\r\n                    Assert.AreEqual(0.11, e.OrderFee);\r\n                }\r\n                else\r\n                {\r\n                    Assert.AreEqual(status, e.Status);\r\n                    if (orderId != null)\r\n                    {\r\n                        Assert.AreEqual(''BTCUSD'', e.Symbol.Value);\r\n                        Assert.That((quantity > 0 && e.Direction == Orders.OrderDirection.Buy) || (quantity < 0 && e.Direction == Orders.OrderDirection.Sell));\r\n                        Assert.IsTrue(orderId == null || _unit.CachedOrderIDs.SelectMany(c => c.Value.BrokerId.Where(b => b == _brokerId)).Any());\r\n                    }\r\n                    raised.Set();\r\n                }\r\n            }", span="196-214", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_144 [label="orderType == OrderType.Limit", span="217-217", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_145 [label="order = new Orders.LimitOrder(_symbol, quantity, price, DateTime.UtcNow)", span="219-219", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_146 [label="orderType == OrderType.Market", span="221-221", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_147 [label="order = new Orders.MarketOrder(_symbol, quantity, DateTime.UtcNow)", span="223-223", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_148 [label="order = new Orders.StopMarketOrder(_symbol, quantity, price, DateTime.UtcNow)", span="227-227", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_150 [label="Assert.IsTrue(actual || (orderId == null && !actual))", span="232-232", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_138 [label="bool? hasFilled = null", span="188-188", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_140 [label="hasFilled = false", span="192-192", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_141 [label="ManualResetEvent raised = new ManualResetEvent(false)", span="195-195", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_152 [label="Assert.IsTrue(raised.WaitOne(1000))", span="234-234", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_143 [label="Order order = null", span="216-216", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_151 [label="Assert.IsTrue(hasFilled ?? true)", span="233-233", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_149 [label="bool actual = _unit.PlaceOrder(order)", span="230-230", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_153 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", span="179-179", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs"];
m3_177 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="GDAXBrokerageTests.cs"];
m3_15 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)", file="GDAXBrokerageTests.cs"];
m3_226 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", span="287-287", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m3_227 [label="SetupResponse(_holdingData)", span="289-289", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m3_228 [label="_unit.CachedOrderIDs.TryAdd(1, new Orders.MarketOrder { BrokerId = new List<string> { ''1'' }, Price = 123 })", span="291-291", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m3_229 [label="var actual = _unit.GetAccountHoldings()", span="293-293", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m3_230 [label="Assert.AreEqual(2, actual.Count())", span="295-295", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m3_231 [label="Assert.AreEqual(0.005m, actual.First().Quantity)", span="296-296", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m3_232 [label="Assert.AreEqual(10m, actual.First().AveragePrice)", span="297-297", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m3_233 [label="Assert.AreEqual(-0.5m, actual.Last().Quantity)", span="299-299", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m3_234 [label="Assert.AreEqual(1000m, actual.Last().AveragePrice)", span="300-300", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m3_235 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", span="287-287", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs"];
m3_67 [label="Entry Unk.Verifiable", span="", cluster="Unk.Verifiable", file="GDAXBrokerageTests.cs"];
m3_155 [label="Entry Unk.SetupResponse", span="", cluster="Unk.SetupResponse", file="GDAXBrokerageTests.cs"];
m3_237 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", span="306-306", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m3_238 [label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''1'')))).Returns(new RestSharp.RestResponse\r\n            {\r\n                StatusCode = code\r\n            })", span="308-311", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m3_239 [label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''2'')))).Returns(new RestSharp.RestResponse\r\n            {\r\n                StatusCode = code2\r\n            })", span="313-316", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m3_241 [label="Assert.AreEqual(expected, actual)", span="320-320", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m3_240 [label="var actual = _unit.CancelOrder(new Orders.LimitOrder { BrokerId = new List<string> { ''1'', ''2'' } })", span="318-318", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m3_242 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", span="306-306", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs"];
m3_73 [label="Entry Unk.Connect", span="", cluster="Unk.Connect", file="GDAXBrokerageTests.cs"];
m3_156 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53", cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="GDAXBrokerageTests.cs"];
m3_69 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="GDAXBrokerageTests.cs"];
m3_133 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", span="81-81", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="GDAXBrokerageTests.cs"];
m3_194 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerageTests.cs"];
m3_243 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41", cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="GDAXBrokerageTests.cs"];
m3_18 [label="Entry RestSharp.RestResponse.cstr", span="", cluster="RestSharp.RestResponse.cstr", file="GDAXBrokerageTests.cs"];
m3_112 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, MessageReceivedEventArgs)", span="75-75", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, MessageReceivedEventArgs)", file="GDAXBrokerageTests.cs"];
m3_277 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="GDAXBrokerageTests.cs"];
m3_61 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", span="102-102", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m3_62 [label="_wss.Setup(m => m.Connect()).Verifiable()", span="104-104", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m3_63 [label="_wss.Setup(m => m.IsOpen).Returns(true)", span="105-105", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m3_64 [label="_unit.Connect()", span="107-107", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m3_65 [label="_wss.Verify()", span="108-108", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m3_66 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", span="102-102", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs"];
m3_154 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="GDAXBrokerageTests.cs"];
m3_199 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="GDAXBrokerageTests.cs"];
m3_206 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="202-202", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerageTests.cs"];
m3_284 [label="Entry lambda expression", span="335-335", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_20 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_29 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_35 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_21 [label="m.Execute(It.Is<IRestRequest>(r => r.Resource.StartsWith(''/products/'')))", span="67-67", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_22 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_25 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_26 [label="r.Resource.StartsWith(''/products/'')", span="67-67", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_27 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_30 [label="m.Execute(It.Is<IRestRequest>(r => r.Resource.StartsWith(''/orders/'' + _brokerId) || r.Resource.StartsWith(''/orders/'' + _matchBrokerId)))", span="73-73", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_31 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_32 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_33 [label="r.Resource.StartsWith(''/orders/'' + _brokerId) || r.Resource.StartsWith(''/orders/'' + _matchBrokerId)", span="73-73", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_34 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_36 [label="a.BrokerageModel.AccountType", span="80-80", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_37 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_41 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_42 [label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId)))", span="85-85", cluster="lambda expression", color=red, community=0, file="GDAXBrokerageTests.cs"];
m3_43 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_44 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_45 [label="!r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId)", span="85-85", cluster="lambda expression", color=red, community=0, file="GDAXBrokerageTests.cs"];
m3_46 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_55 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_58 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_56 [label="w.IsOpen", span="95-95", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_57 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_59 [label="w.IsOpen", span="97-97", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_60 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_70 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_74 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_71 [label="m.Connect()", span="104-104", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_72 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_75 [label="m.IsOpen", span="105-105", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_76 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_85 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_89 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_86 [label="m.Close()", span="114-114", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_87 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_90 [label="m.IsOpen", span="115-115", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_91 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_119 [label="Assert.AreEqual(actualQuantity != orderQuantity ? Orders.OrderStatus.PartiallyFilled : Orders.OrderStatus.Filled, e.Status)", span="147-147", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_122 [label="raised.Set()", span="150-150", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_116 [label="Assert.AreEqual(''BTCUSD'', e.Symbol.Value)", span="143-143", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_117 [label="actualFee += e.OrderFee", span="144-144", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_118 [label="actualQuantity += e.AbsoluteFillQuantity", span="145-145", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_115 [label="Entry lambda expression", span="141-151", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_121 [label="Assert.AreEqual(0.01m, Math.Round(actualFee, 8))", span="149-149", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_120 [label="Assert.AreEqual(5.23512m, actualQuantity)", span="148-148", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_123 [label="Exit lambda expression", span="141-151", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_161 [label="orderType == OrderType.Market && e.Status == OrderStatus.Filled", span="198-198", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_164 [label="Assert.AreEqual(status, e.Status)", span="205-205", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_165 [label="orderId != null", span="206-206", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_167 [label="Assert.That((quantity > 0 && e.Direction == Orders.OrderDirection.Buy) || (quantity < 0 && e.Direction == Orders.OrderDirection.Sell))", span="209-209", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_168 [label="Assert.IsTrue(orderId == null || _unit.CachedOrderIDs.SelectMany(c => c.Value.BrokerId.Where(b => b == _brokerId)).Any())", span="210-210", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_169 [label="raised.Set()", span="212-212", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_163 [label="Assert.AreEqual(0.11, e.OrderFee)", span="201-201", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_166 [label="Assert.AreEqual(''BTCUSD'', e.Symbol.Value)", span="208-208", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_160 [label="Entry lambda expression", span="196-214", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_162 [label="hasFilled = true", span="200-200", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_170 [label="Exit lambda expression", span="196-214", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_174 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_175 [label="c.Value.BrokerId.Where(b => b == _brokerId)", span="210-210", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_176 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_178 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_179 [label="b == _brokerId", span="210-210", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_180 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_220 [label="Entry lambda expression", span="277-277", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_223 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_221 [label="a.Symbol == ''USD''", span="277-277", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_222 [label="Exit lambda expression", span="277-277", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_224 [label="a.Symbol == ''BTC''", span="278-278", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_225 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_245 [label="Entry lambda expression", span="308-308", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_252 [label="Entry lambda expression", span="313-313", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_246 [label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''1'')))", span="308-308", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_247 [label="Exit lambda expression", span="308-308", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_248 [label="Entry lambda expression", span="308-308", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_249 [label="!r.Resource.EndsWith(''1'')", span="308-308", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_250 [label="Exit lambda expression", span="308-308", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_253 [label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''2'')))", span="313-313", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_254 [label="Exit lambda expression", span="313-313", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_255 [label="Entry lambda expression", span="313-313", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_256 [label="!r.Resource.EndsWith(''2'')", span="313-313", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_257 [label="Exit lambda expression", span="313-313", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_261 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_262 [label="_unit.UpdateOrder(new LimitOrder())", span="327-327", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_263 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_280 [label="Entry lambda expression", span="335-335", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_281 [label="w.Send(It.IsAny<string>())", span="335-335", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_282 [label="Exit lambda expression", span="335-335", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_285 [label="actual = c", span="335-335", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_286 [label="Exit lambda expression", span="335-335", cluster="lambda expression", file="GDAXBrokerageTests.cs"];
m3_54 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="GDAXBrokerageTests.cs"];
m3_17 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="GDAXBrokerageTests.cs"];
m3_264 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="123-123", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs"];
m3_196 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="161-161", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerageTests.cs"];
m3_0 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", span="54-54", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_1 [label="_unit = new GDAXBrokerage(''wss://localhost'', _wss.Object, _rest.Object, ''abc'', ''MTIz'', ''pass'', _algo.Object)", span="56-56", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_2 [label="_orderData = File.ReadAllText(''TestData//gdax_order.txt'')", span="57-57", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_3 [label="_matchData = File.ReadAllText(''TestData//gdax_match.txt'')", span="58-58", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_4 [label="_openOrderData = File.ReadAllText(''TestData//gdax_openOrders.txt'')", span="59-59", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_5 [label="_accountsData = File.ReadAllText(''TestData//gdax_accounts.txt'')", span="60-60", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_6 [label="_holdingData = File.ReadAllText(''TestData//gdax_holding.txt'')", span="61-61", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_7 [label="_orderByIdData = File.ReadAllText(''TestData//gdax_orderById.txt'')", span="62-62", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_8 [label="_tickerData = File.ReadAllText(''TestData//gdax_ticker.txt'')", span="63-63", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_9 [label="_symbol = Symbol.Create(''BTCUSD'', SecurityType.Forex, Market.GDAX)", span="65-65", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_10 [label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => r.Resource.StartsWith(''/products/'')))).Returns(new RestSharp.RestResponse\r\n            {\r\n                Content = File.ReadAllText(''TestData//gdax_tick.txt''),\r\n                StatusCode = HttpStatusCode.OK\r\n            })", span="67-71", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_11 [label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => r.Resource.StartsWith(''/orders/'' + _brokerId) || r.Resource.StartsWith(''/orders/'' + _matchBrokerId))))\r\n            .Returns(new RestSharp.RestResponse\r\n            {\r\n                Content = File.ReadAllText(''TestData//gdax_orderById.txt''),\r\n                StatusCode = HttpStatusCode.OK\r\n            })", span="73-78", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_12 [label="_algo.Setup(a => a.BrokerageModel.AccountType).Returns(_accountType)", span="80-80", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_13 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", span="54-54", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs"];
m3_38 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", span="83-83", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", file="GDAXBrokerageTests.cs"];
m3_39 [label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId)))).Returns(new RestSharp.RestResponse\r\n            {\r\n                Content = body,\r\n                StatusCode = httpStatus\r\n            })", span="85-89", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", color=red, community=1, file="GDAXBrokerageTests.cs"];
m3_40 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", span="83-83", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", file="GDAXBrokerageTests.cs"];
m3_109 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="25-25", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXBrokerageTests.cs"];
m3_159 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="49-49", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs"];
m3_107 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="GDAXBrokerageTests.cs"];
m3_68 [label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", span="100-100", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="GDAXBrokerageTests.cs"];
m3_53 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="GDAXBrokerageTests.cs"];
m3_158 [label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="GDAXBrokerageTests.cs"];
m3_195 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="GDAXBrokerageTests.cs"];
m3_16 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="GDAXBrokerageTests.cs"];
m3_23 [label="Entry Unk.>", span="", cluster="Unk.>", file="GDAXBrokerageTests.cs"];
m3_244 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="133-133", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs"];
m3_193 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28", cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXBrokerageTests.cs"];
m3_200 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", span="258-258", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m3_201 [label="var actual = _unit.GetTick(_symbol)", span="260-260", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m3_202 [label="Assert.AreEqual(333.98m, actual.BidPrice)", span="261-261", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m3_203 [label="Assert.AreEqual(333.99m, actual.AskPrice)", span="262-262", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m3_204 [label="Assert.AreEqual(5957.11914015, actual.Quantity)", span="264-264", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m3_205 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", span="258-258", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs"];
m3_19 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="GDAXBrokerageTests.cs"];
m3_258 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", span="325-325", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs"];
m3_259 [label="Assert.Throws<NotSupportedException>(() => _unit.UpdateOrder(new LimitOrder()))", span="327-327", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs"];
m3_260 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", span="325-325", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs"];
m3_47 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", span="93-93", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m3_48 [label="_wss.Setup(w => w.IsOpen).Returns(true)", span="95-95", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m3_49 [label="Assert.IsTrue(_unit.IsConnected)", span="96-96", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m3_50 [label="_wss.Setup(w => w.IsOpen).Returns(false)", span="97-97", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m3_51 [label="Assert.IsFalse(_unit.IsConnected)", span="98-98", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m3_52 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", span="93-93", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs"];
m3_111 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXBrokerageTests.cs"];
m3_265 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", span="331-331", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_266 [label="string actual = null", span="333-333", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_267 [label="string expected = ''[\''BTC-USD\'',\''BTC-ETH\'']''", span="334-334", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_268 [label="_wss.Setup(w => w.Send(It.IsAny<string>())).Callback<string>(c => actual = c)", span="335-335", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_271 [label="StringAssert.Contains(expected, actual)", span="342-342", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_269 [label="_unit.Ticks.Clear()", span="337-337", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_270 [label="_unit.Subscribe(Mock.Of<LiveNodePacket>(), new[] { Symbol.Create(''BTCUSD'', SecurityType.Forex, Market.GDAX), Symbol.Create(''GBPUSD'', SecurityType.Forex, Market.GDAX),\r\n                Symbol.Create(''BTCETH'', SecurityType.Forex, Market.GDAX)})", span="339-340", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_272 [label="Assert.AreEqual(2, _unit.Ticks.Count())", span="344-344", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_273 [label="Assert.AreEqual(333.98, _unit.Ticks.First().BidPrice)", span="345-345", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_274 [label="Assert.AreEqual(333.99, _unit.Ticks.First().AskPrice)", span="346-346", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_275 [label="Assert.AreEqual(333.985, _unit.Ticks.First().Price)", span="347-347", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_276 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", span="331-331", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs"];
m3_114 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="GDAXBrokerageTests.cs"];
m3_197 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="GDAXBrokerageTests.cs"];
m3_236 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="230-230", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerageTests.cs"];
m3_108 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="GDAXBrokerageTests.cs"];
m3_207 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", span="269-269", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m3_208 [label="SetupResponse(_accountsData)", span="271-271", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m3_209 [label="var actual = _unit.GetCashBalance()", span="273-273", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m3_210 [label="Assert.AreEqual(2, actual.Count())", span="275-275", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m3_211 [label="var usd = actual.Single(a => a.Symbol == ''USD'')", span="277-277", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m3_212 [label="var btc = actual.Single(a => a.Symbol == ''BTC'')", span="278-278", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m3_213 [label="Assert.AreEqual(80.2301373066930000m, usd.Amount)", span="280-280", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m3_214 [label="Assert.AreEqual(1, usd.ConversionRate)", span="281-281", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m3_215 [label="Assert.AreEqual(1.1, btc.Amount)", span="282-282", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m3_216 [label="Assert.AreEqual(333.985m, btc.ConversionRate)", span="283-283", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m3_217 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", span="269-269", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs"];
m3_88 [label="Entry Unk.Close", span="", cluster="Unk.Close", file="GDAXBrokerageTests.cs"];
m3_84 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="152-152", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerageTests.cs"];
m3_283 [label="Entry Unk.Send", span="", cluster="Unk.Send", file="GDAXBrokerageTests.cs"];
m3_173 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="GDAXBrokerageTests.cs"];
m3_124 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)", file="GDAXBrokerageTests.cs"];
m3_181 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", span="238-238", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_182 [label="SetupResponse(_openOrderData)", span="240-240", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_183 [label="_unit.CachedOrderIDs.TryAdd(1, new Orders.MarketOrder { BrokerId = new List<string> { ''1'' }, Price = 123 })", span="242-242", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_184 [label="var actual = _unit.GetOpenOrders()", span="244-244", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_185 [label="Assert.AreEqual(2, actual.Count())", span="246-246", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_186 [label="Assert.AreEqual(0.01, actual.First().Quantity)", span="247-247", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_187 [label="Assert.AreEqual(OrderDirection.Buy, actual.First().Direction)", span="248-248", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_188 [label="Assert.AreEqual(0.1, actual.First().Price)", span="249-249", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_189 [label="Assert.AreEqual(-1, actual.Last().Quantity)", span="251-251", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_190 [label="Assert.AreEqual(OrderDirection.Sell, actual.Last().Direction)", span="252-252", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_191 [label="Assert.AreEqual(1, actual.Last().Price)", span="253-253", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_192 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", span="238-238", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs"];
m3_106 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="GDAXBrokerageTests.cs"];
m3_24 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="GDAXBrokerageTests.cs"];
m3_171 [label="Entry Unk.That", span="", cluster="Unk.That", file="GDAXBrokerageTests.cs"];
m3_218 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="277-277", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerageTests.cs"];
m3_14 [label="Entry GDAXBrokerage.cstr", span="", cluster="GDAXBrokerage.cstr", file="GDAXBrokerageTests.cs"];
m3_251 [label="Entry Unk.EndsWith", span="", cluster="Unk.EndsWith", file="GDAXBrokerageTests.cs"];
m3_172 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="GDAXBrokerageTests.cs"];
m3_279 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="GDAXBrokerageTests.cs"];
m3_134 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="GDAXBrokerageTests.cs"];
m3_77 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", span="112-112", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m3_78 [label="_wss.Setup(m => m.Close()).Verifiable()", span="114-114", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m3_79 [label="_wss.Setup(m => m.IsOpen).Returns(true)", span="115-115", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m3_80 [label="_unit.Connect()", span="116-116", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m3_81 [label="_unit.Disconnect()", span="117-117", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m3_82 [label="_wss.Verify()", span="118-118", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m3_83 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", span="112-112", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs"];
m3_126 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", span="160-160", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m3_127 [label="var actual = _unit.GetAuthenticationToken('''', ''POST'', ''http://localhost'')", span="162-162", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m3_128 [label="Assert.IsFalse(string.IsNullOrEmpty(actual.Signature))", span="164-164", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m3_129 [label="Assert.IsFalse(string.IsNullOrEmpty(actual.Timestamp))", span="165-165", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m3_130 [label="Assert.AreEqual(''pass'', actual.Passphrase)", span="166-166", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m3_131 [label="Assert.AreEqual(''abc'', actual.Key)", span="167-167", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m3_132 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", span="160-160", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs"];
m3_287 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", span="351-351", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_288 [label="string json = _tickerData", span="353-353", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_289 [label="_unit.OnMessage(_unit, GDAXTestsHelpers.GetArgs(json))", span="355-355", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_290 [label="var actual = _unit.Ticks.First()", span="357-357", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_291 [label="Assert.AreEqual(''BTCUSD'', actual.Symbol.Value)", span="359-359", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_292 [label="Assert.AreEqual(4388.005m, actual.Price)", span="360-360", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_293 [label="Assert.AreEqual(4388m, actual.BidPrice)", span="361-361", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_294 [label="Assert.AreEqual(4388.01m, actual.AskPrice)", span="362-362", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_295 [label="actual = _unit.Ticks.Last()", span="364-364", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_296 [label="Assert.AreEqual(''BTCUSD'', actual.Symbol.Value)", span="366-366", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_297 [label="Assert.AreEqual(4388.01m, actual.Price)", span="367-367", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_298 [label="Assert.AreEqual(0.03m, actual.Quantity)", span="368-368", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_299 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", span="351-351", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs"];
m3_28 [label="Entry Unk.StartsWith", span="", cluster="Unk.StartsWith", file="GDAXBrokerageTests.cs"];
m3_198 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="GDAXBrokerageTests.cs"];
m3_113 [label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(int)", file="GDAXBrokerageTests.cs"];
m3_125 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="GDAXBrokerageTests.cs"];
m3_278 [label="Entry Unk.Subscribe", span="", cluster="Unk.Subscribe", file="GDAXBrokerageTests.cs"];
m3_157 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="GDAXBrokerageTests.cs"];
m3_300 [label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", span="", file="GDAXBrokerageTests.cs"];
m3_301 [label=actualFee, span="", file="GDAXBrokerageTests.cs"];
m3_302 [label=actualQuantity, span="", file="GDAXBrokerageTests.cs"];
m3_303 [label=orderQuantity, span="", file="GDAXBrokerageTests.cs"];
m3_304 [label=raised, span="", file="GDAXBrokerageTests.cs"];
m3_305 [label="QuantConnect.Orders.OrderType", span="", file="GDAXBrokerageTests.cs"];
m3_306 [label="QuantConnect.Orders.OrderStatus", span="", file="GDAXBrokerageTests.cs"];
m3_307 [label=string, span="", file="GDAXBrokerageTests.cs"];
m3_308 [label=decimal, span="", file="GDAXBrokerageTests.cs"];
m3_309 [label=raised, span="", file="GDAXBrokerageTests.cs"];
n289 -> n6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n211  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n249  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n251  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n267  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n268  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n289 -> n273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.BrokerageTests"];
n290 -> n224  [key=1, style=dashed, color=darkseagreen4, label=sync];
n291 -> n225  [key=1, style=dashed, color=darkseagreen4, label=remaining];
n292 -> n228  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n293 -> n259  [key=1, style=dashed, color=darkseagreen4, label=filledResetEvent];
n294 -> n261  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n295 -> n282  [key=1, style=dashed, color=darkseagreen4, label=requiredStatusEvent];
n296 -> n283  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderStatus"];
n297 -> n287  [key=1, style=dashed, color=darkseagreen4, label=desiredStatusEvent];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n14  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n14  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n14  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n14  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n14  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n15  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n16  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n17  [key=2, style=dotted];
n16 -> n103  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=2, style=dotted];
n17 -> n90  [key=0, style=solid];
n13 -> n0  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n14  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n14  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n14  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n14  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n14  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n15  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n16  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n17  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n15  [key=2, style=dotted];
n28 -> n18  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n29 -> n33  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Interfaces.IBrokerage InitializeBrokerage"];
n30 -> n31  [key=0, style=solid];
n30 -> n14  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n14  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n14  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n52  [key=2, style=dotted];
n33 -> n35  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n33 -> n37  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n33 -> n38  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n33 -> n42  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n33 -> n47  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n33 -> n49  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n33 -> n50  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n34 -> n35  [key=0, style=solid];
n34 -> n53  [key=2, style=dotted];
n52 -> n87  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n35 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n55  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n44  [key=0, style=solid];
n42 -> n56  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n49  [key=0, style=solid];
n47 -> n58  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n49 -> n64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n49 -> n65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n49 -> n67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n49 -> n68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n49 -> n69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n49 -> n70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n49 -> n71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n49 -> n72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n49 -> n73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n49 -> n74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n50 -> n51  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n54  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n14  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n14  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n14  [key=2, style=dotted];
n43 -> n42  [key=0, style=solid];
n43 -> n57  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n14  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n14  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n14  [key=2, style=dotted];
n48 -> n47  [key=0, style=solid];
n48 -> n59  [key=2, style=dotted];
n59 -> n80  [key=0, style=solid, color=red];
n62 -> n63  [key=0, style=solid];
n62 -> n14  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n75  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n65 -> n76  [key=2, style=dotted];
n65 -> n14  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n70  [key=0, style=solid];
n67 -> n77  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n69 -> n72  [key=0, style=solid];
n69 -> n78  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n59  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n78  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n14  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n79  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n51 -> n29  [key=0, style=bold, color=blue];
n60 -> n61  [key=0, style=solid];
n60 -> n62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n60 -> n64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n60 -> n65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n60 -> n67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n60 -> n68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n60 -> n69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n60 -> n70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n60 -> n71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n60 -> n72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n60 -> n73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n60 -> n74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n61 -> n62  [key=0, style=solid];
n61 -> n14  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n14  [key=2, style=dotted];
n75 -> n60  [key=0, style=bold, color=blue];
n66 -> n67  [key=0, style=solid];
n80 -> n81  [key=0, style=solid, color=red];
n80 -> n82  [key=2, style=dotted, color=red];
n80 -> n83  [key=2, style=dotted, color=red];
n80 -> n84  [key=2, style=dotted, color=red];
n80 -> n85  [key=2, style=dotted, color=red];
n80 -> n86  [key=2, style=dotted, color=red];
n81 -> n59  [key=0, style=bold, color=blue];
n87 -> n52  [key=0, style=bold, color=blue];
n88 -> n89  [key=0, style=solid];
n89 -> n88  [key=0, style=bold, color=blue];
n90 -> n91  [key=0, style=solid];
n90 -> n14  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n14  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n14  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n93 -> n58  [key=2, style=dotted];
n94 -> n95  [key=0, style=solid];
n94 -> n100  [key=0, style=solid];
n94 -> n96  [key=1, style=dashed, color=darkseagreen4, label=holding];
n94 -> n97  [key=1, style=dashed, color=darkseagreen4, label=holding];
n95 -> n96  [key=0, style=solid];
n95 -> n94  [key=0, style=solid];
n100 -> n17  [key=0, style=bold, color=blue];
n96 -> n97  [key=0, style=solid];
n96 -> n14  [key=2, style=dotted];
n97 -> n98  [key=0, style=solid];
n97 -> n101  [key=2, style=dotted];
n97 -> n99  [key=1, style=dashed, color=darkseagreen4, label=order];
n98 -> n99  [key=0, style=solid];
n98 -> n57  [key=2, style=dotted];
n99 -> n94  [key=0, style=solid];
n99 -> n102  [key=2, style=dotted];
n102 -> n264  [key=0, style=solid];
n102 -> n266  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderStatus"];
n102 -> n283  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderStatus"];
n102 -> n268  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n102 -> n269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n102 -> n270  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n102 -> n271  [key=1, style=dashed, color=red, label=double];
n102 -> n272  [key=1, style=dashed, color=red, label="QuantConnect.Orders.Order"];
n102 -> n274  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n102 -> n97  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
n102 -> n99  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderStatus expectedStatus"];
n102 -> n102  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Orders.Order PlaceOrderWaitForStatus"];
n103 -> n104  [key=0, style=solid];
n103 -> n14  [key=2, style=dotted];
n104 -> n105  [key=0, style=solid];
n104 -> n14  [key=2, style=dotted];
n105 -> n106  [key=0, style=solid];
n105 -> n14  [key=2, style=dotted];
n106 -> n107  [key=0, style=solid];
n106 -> n56  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n107 -> n110  [key=0, style=solid];
n107 -> n109  [key=1, style=dashed, color=darkseagreen4, label=openOrder];
n108 -> n109  [key=0, style=solid];
n108 -> n14  [key=2, style=dotted];
n110 -> n16  [key=0, style=bold, color=blue];
n109 -> n107  [key=0, style=solid];
n109 -> n111  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n113 -> n112  [key=0, style=bold, color=blue];
n114 -> n115  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n116 -> n114  [key=0, style=bold, color=blue];
n117 -> n118  [key=0, style=solid];
n118 -> n119  [key=0, style=solid];
n118 -> n120  [key=2, style=dotted];
n119 -> n117  [key=0, style=bold, color=blue];
n121 -> n122  [key=0, style=solid];
n121 -> n125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n122 -> n123  [key=0, style=solid];
n122 -> n14  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n125 -> n114  [key=2, style=dotted];
n125 -> n127  [key=2, style=dotted];
n125 -> n102  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n123 -> n14  [key=2, style=dotted];
n124 -> n125  [key=0, style=solid];
n124 -> n14  [key=2, style=dotted];
n126 -> n121  [key=0, style=bold, color=blue];
n128 -> n129  [key=0, style=solid];
n128 -> n132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n128 -> n133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n129 -> n130  [key=0, style=solid];
n129 -> n14  [key=2, style=dotted];
n132 -> n133  [key=0, style=solid];
n132 -> n114  [key=2, style=dotted];
n132 -> n135  [key=2, style=dotted];
n132 -> n102  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n114  [key=2, style=dotted];
n133 -> n136  [key=2, style=dotted];
n133 -> n102  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n14  [key=2, style=dotted];
n131 -> n132  [key=0, style=solid];
n131 -> n14  [key=2, style=dotted];
n134 -> n128  [key=0, style=bold, color=blue];
n137 -> n138  [key=0, style=solid];
n137 -> n141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n138 -> n139  [key=0, style=solid];
n138 -> n14  [key=2, style=dotted];
n141 -> n142  [key=0, style=solid];
n141 -> n114  [key=2, style=dotted];
n141 -> n136  [key=2, style=dotted];
n141 -> n102  [key=2, style=dotted];
n139 -> n140  [key=0, style=solid];
n139 -> n14  [key=2, style=dotted];
n140 -> n141  [key=0, style=solid];
n140 -> n14  [key=2, style=dotted];
n142 -> n137  [key=0, style=bold, color=blue];
n143 -> n144  [key=0, style=solid];
n143 -> n147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n143 -> n148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n144 -> n145  [key=0, style=solid];
n144 -> n14  [key=2, style=dotted];
n147 -> n148  [key=0, style=solid];
n147 -> n114  [key=2, style=dotted];
n147 -> n150  [key=2, style=dotted];
n147 -> n102  [key=2, style=dotted];
n148 -> n149  [key=0, style=solid];
n148 -> n114  [key=2, style=dotted];
n148 -> n127  [key=2, style=dotted];
n148 -> n102  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n14  [key=2, style=dotted];
n146 -> n147  [key=0, style=solid];
n146 -> n14  [key=2, style=dotted];
n149 -> n143  [key=0, style=bold, color=blue];
n151 -> n152  [key=0, style=solid];
n151 -> n155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n151 -> n156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n151 -> n157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n151 -> n158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n152 -> n153  [key=0, style=solid];
n152 -> n14  [key=2, style=dotted];
n155 -> n156  [key=0, style=solid];
n155 -> n114  [key=2, style=dotted];
n155 -> n135  [key=2, style=dotted];
n155 -> n102  [key=2, style=dotted];
n156 -> n157  [key=0, style=solid];
n156 -> n114  [key=2, style=dotted];
n156 -> n136  [key=2, style=dotted];
n156 -> n102  [key=2, style=dotted];
n156 -> n158  [key=1, style=dashed, color=darkseagreen4, label=order];
n157 -> n158  [key=0, style=solid];
n157 -> n159  [key=0, style=solid];
n158 -> n159  [key=0, style=solid];
n158 -> n160  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n14  [key=2, style=dotted];
n154 -> n155  [key=0, style=solid];
n154 -> n14  [key=2, style=dotted];
n159 -> n151  [key=0, style=bold, color=blue];
n160 -> n231  [key=0, style=solid];
n160 -> n234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n160 -> n261  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n160 -> n237  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n160 -> n240  [key=1, style=dashed, color=darkseagreen4, label=double];
n160 -> n242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n160 -> n243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n160 -> n245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n160 -> n247  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n160 -> n248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n160 -> n249  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n160 -> n156  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
n160 -> n166  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
n160 -> n151  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Tests.Brokerages.OrderTestParameters parameters"];
n160 -> n76  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Tests.Brokerages.OrderTestParameters parameters"];
n161 -> n162  [key=0, style=solid];
n161 -> n165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n161 -> n166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n161 -> n167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n161 -> n168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.OrderTestParameters"];
n162 -> n163  [key=0, style=solid];
n162 -> n14  [key=2, style=dotted];
n165 -> n166  [key=0, style=solid];
n165 -> n114  [key=2, style=dotted];
n165 -> n150  [key=2, style=dotted];
n165 -> n102  [key=2, style=dotted];
n166 -> n167  [key=0, style=solid];
n166 -> n114  [key=2, style=dotted];
n166 -> n127  [key=2, style=dotted];
n166 -> n102  [key=2, style=dotted];
n166 -> n168  [key=1, style=dashed, color=darkseagreen4, label=order];
n167 -> n168  [key=0, style=solid];
n167 -> n169  [key=0, style=solid];
n168 -> n169  [key=0, style=solid];
n168 -> n160  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n163 -> n14  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n164 -> n14  [key=2, style=dotted];
n169 -> n161  [key=0, style=bold, color=blue];
n170 -> n171  [key=0, style=solid];
n171 -> n172  [key=0, style=solid];
n171 -> n14  [key=2, style=dotted];
n172 -> n173  [key=0, style=solid];
n172 -> n14  [key=2, style=dotted];
n173 -> n174  [key=0, style=solid];
n173 -> n14  [key=2, style=dotted];
n174 -> n175  [key=0, style=solid];
n174 -> n177  [key=2, style=dotted];
n175 -> n176  [key=0, style=solid];
n175 -> n178  [key=2, style=dotted];
n175 -> n179  [key=2, style=dotted];
n175 -> n180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n176 -> n170  [key=0, style=bold, color=blue];
n180 -> n181  [key=0, style=solid];
n181 -> n182  [key=0, style=solid];
n182 -> n180  [key=0, style=bold, color=blue];
n183 -> n184  [key=0, style=solid];
n184 -> n185  [key=0, style=solid];
n184 -> n14  [key=2, style=dotted];
n185 -> n186  [key=0, style=solid];
n185 -> n14  [key=2, style=dotted];
n186 -> n187  [key=0, style=solid];
n186 -> n14  [key=2, style=dotted];
n187 -> n188  [key=0, style=solid];
n187 -> n58  [key=2, style=dotted];
n187 -> n190  [key=1, style=dashed, color=darkseagreen4, label=before];
n188 -> n189  [key=0, style=solid];
n188 -> n101  [key=2, style=dotted];
n188 -> n114  [key=2, style=dotted];
n188 -> n102  [key=2, style=dotted];
n190 -> n191  [key=0, style=solid];
n190 -> n196  [key=2, style=dotted];
n190 -> n197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n190 -> n192  [key=1, style=dashed, color=darkseagreen4, label=beforeHoldings];
n189 -> n190  [key=0, style=solid];
n189 -> n58  [key=2, style=dotted];
n189 -> n191  [key=1, style=dashed, color=darkseagreen4, label=after];
n191 -> n192  [key=0, style=solid];
n191 -> n196  [key=2, style=dotted];
n191 -> n200  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n191 -> n193  [key=1, style=dashed, color=darkseagreen4, label=afterHoldings];
n197 -> n198  [key=0, style=solid];
n192 -> n193  [key=0, style=solid];
n192 -> n194  [key=1, style=dashed, color=darkseagreen4, label=beforeQuantity];
n200 -> n201  [key=0, style=solid];
n193 -> n194  [key=0, style=solid];
n194 -> n195  [key=0, style=solid];
n194 -> n114  [key=2, style=dotted];
n194 -> n179  [key=2, style=dotted];
n195 -> n183  [key=0, style=bold, color=blue];
n198 -> n199  [key=0, style=solid];
n199 -> n197  [key=0, style=bold, color=blue];
n201 -> n202  [key=0, style=solid];
n202 -> n200  [key=0, style=bold, color=blue];
n203 -> n204  [key=0, style=solid];
n204 -> n205  [key=0, style=solid];
n204 -> n218  [key=2, style=dotted];
n204 -> n208  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n204 -> n228  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n204 -> n212  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n204 -> n213  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n204 -> n214  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n205 -> n206  [key=0, style=solid];
n205 -> n210  [key=1, style=dashed, color=darkseagreen4, label=qty];
n205 -> n205  [key=3, color=darkorchid, style=bold, label="Local variable decimal qty"];
n208 -> n209  [key=0, style=solid];
n208 -> n208  [key=1, style=dashed, color=darkseagreen4, label=remaining];
n208 -> n225  [key=1, style=dashed, color=darkseagreen4, label=remaining];
n208 -> n226  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n208 -> n227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n228 -> n229  [key=0, style=solid];
n228 -> n230  [key=2, style=dotted];
n212 -> n213  [key=0, style=solid];
n212 -> n221  [key=2, style=dotted];
n213 -> n214  [key=0, style=solid];
n213 -> n221  [key=2, style=dotted];
n214 -> n215  [key=0, style=solid];
n214 -> n221  [key=2, style=dotted];
n206 -> n207  [key=0, style=solid];
n206 -> n208  [key=1, style=dashed, color=darkseagreen4, label=remaining];
n206 -> n205  [key=3, color=darkorchid, style=bold, label="Local variable decimal remaining"];
n210 -> n211  [key=0, style=solid];
n210 -> n101  [key=2, style=dotted];
n207 -> n208  [key=0, style=solid];
n207 -> n219  [key=2, style=dotted];
n207 -> n224  [key=1, style=dashed, color=darkseagreen4, label=sync];
n224 -> n225  [key=0, style=solid];
n209 -> n210  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n225 -> n225  [key=1, style=dashed, color=darkseagreen4, label=remaining];
n225 -> n215  [key=1, style=dashed, color=darkseagreen4, label=remaining];
n225 -> n216  [key=1, style=dashed, color=darkseagreen4, label=remaining];
n225 -> n229  [key=1, style=dashed, color=darkseagreen4, label=remaining];
n226 -> n227  [key=0, style=solid];
n226 -> n222  [key=2, style=dotted];
n227 -> n228  [key=0, style=solid];
n227 -> n229  [key=0, style=solid];
n211 -> n212  [key=0, style=solid];
n211 -> n220  [key=2, style=dotted];
n215 -> n216  [key=0, style=solid];
n215 -> n222  [key=2, style=dotted];
n216 -> n217  [key=0, style=solid];
n216 -> n179  [key=2, style=dotted];
n217 -> n203  [key=0, style=bold, color=blue];
n223 -> n224  [key=0, style=solid];
n223 -> n225  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n223 -> n226  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n223 -> n227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n229 -> n223  [key=0, style=bold, color=blue];
n231 -> n232  [key=0, style=solid];
n231 -> n233  [key=0, style=solid];
n234 -> n235  [key=0, style=solid];
n234 -> n258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n234 -> n260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n234 -> n262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n234 -> n251  [key=1, style=dashed, color=darkseagreen4, label=brokerageOnOrderStatusChanged];
n234 -> n234  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<QuantConnect.Orders.OrderEvent> brokerageOnOrderStatusChanged"];
n261 -> n262  [key=0, style=solid];
n261 -> n14  [key=2, style=dotted];
n237 -> n238  [key=0, style=solid];
n237 -> n14  [key=2, style=dotted];
n240 -> n241  [key=0, style=solid];
n240 -> n251  [key=0, style=solid];
n240 -> n221  [key=2, style=dotted];
n242 -> n243  [key=0, style=solid];
n242 -> n240  [key=0, style=solid];
n243 -> n244  [key=0, style=solid];
n243 -> n112  [key=2, style=dotted];
n243 -> n245  [key=1, style=dashed, color=darkseagreen4, label=marketPrice];
n245 -> n246  [key=0, style=solid];
n245 -> n255  [key=2, style=dotted];
n247 -> n248  [key=0, style=solid];
n247 -> n251  [key=0, style=solid];
n248 -> n249  [key=0, style=solid];
n248 -> n14  [key=2, style=dotted];
n249 -> n250  [key=0, style=solid];
n249 -> n240  [key=0, style=solid];
n249 -> n256  [key=2, style=dotted];
n232 -> n252  [key=0, style=solid];
n233 -> n234  [key=0, style=solid];
n233 -> n218  [key=2, style=dotted];
n233 -> n259  [key=1, style=dashed, color=darkseagreen4, label=filledResetEvent];
n233 -> n240  [key=1, style=dashed, color=darkseagreen4, label=filledResetEvent];
n233 -> n241  [key=1, style=dashed, color=darkseagreen4, label=filledResetEvent];
n259 -> n260  [key=0, style=solid];
n259 -> n230  [key=2, style=dotted];
n241 -> n242  [key=0, style=solid];
n241 -> n254  [key=2, style=dotted];
n235 -> n236  [key=0, style=solid];
n258 -> n259  [key=0, style=solid];
n258 -> n260  [key=0, style=solid];
n260 -> n261  [key=0, style=solid];
n260 -> n263  [key=0, style=solid];
n262 -> n263  [key=0, style=solid];
n262 -> n54  [key=2, style=dotted];
n251 -> n252  [key=0, style=solid];
n236 -> n237  [key=0, style=solid];
n236 -> n14  [key=2, style=dotted];
n238 -> n239  [key=0, style=solid];
n238 -> n14  [key=2, style=dotted];
n239 -> n240  [key=0, style=solid];
n239 -> n253  [key=2, style=dotted];
n244 -> n245  [key=0, style=solid];
n244 -> n14  [key=2, style=dotted];
n246 -> n247  [key=0, style=solid];
n246 -> n240  [key=0, style=solid];
n250 -> n240  [key=0, style=solid];
n250 -> n54  [key=2, style=dotted];
n252 -> n160  [key=0, style=bold, color=blue];
n257 -> n258  [key=0, style=solid];
n257 -> n260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n257 -> n262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n263 -> n257  [key=0, style=bold, color=blue];
n264 -> n265  [key=0, style=solid];
n264 -> n218  [key=2, style=dotted];
n264 -> n266  [key=1, style=dashed, color=darkseagreen4, label=requiredStatusEvent];
n264 -> n282  [key=1, style=dashed, color=darkseagreen4, label=requiredStatusEvent];
n264 -> n271  [key=1, style=dashed, color=red, label=requiredStatusEvent];
n266 -> n267  [key=0, style=solid];
n266 -> n278  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n266 -> n280  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n266 -> n283  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n266 -> n285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n266 -> n273  [key=1, style=dashed, color=darkseagreen4, label=brokerageOnOrderStatusChanged];
n266 -> n266  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<QuantConnect.Orders.OrderEvent> brokerageOnOrderStatusChanged"];
n283 -> n284  [key=0, style=solid];
n283 -> n288  [key=0, style=solid];
n268 -> n269  [key=0, style=solid];
n268 -> n57  [key=2, style=dotted];
n269 -> n270  [key=0, style=solid];
n269 -> n271  [key=0, style=solid, color=red];
n269 -> n220  [key=2, style=dotted];
n270 -> n271  [key=0, style=solid, color=red];
n270 -> n54  [key=2, style=dotted];
n271 -> n272  [key=0, style=solid, color=red];
n271 -> n276  [key=2, style=dotted, color=red];
n272 -> n273  [key=0, style=solid, color=red];
n272 -> n276  [key=2, style=dotted, color=red];
n274 -> n275  [key=0, style=solid];
n265 -> n266  [key=0, style=solid];
n265 -> n218  [key=2, style=dotted];
n265 -> n287  [key=1, style=dashed, color=darkseagreen4, label=desiredStatusEvent];
n265 -> n272  [key=1, style=dashed, color=red, label=desiredStatusEvent];
n282 -> n283  [key=0, style=solid];
n282 -> n230  [key=2, style=dotted];
n287 -> n288  [key=0, style=solid];
n287 -> n230  [key=2, style=dotted];
n267 -> n268  [key=0, style=solid];
n278 -> n279  [key=0, style=solid];
n278 -> n283  [key=0, style=solid];
n280 -> n281  [key=0, style=solid];
n280 -> n14  [key=2, style=dotted];
n285 -> n286  [key=0, style=solid];
n285 -> n14  [key=2, style=dotted];
n273 -> n274  [key=0, style=solid];
n275 -> n102  [key=0, style=bold, color=blue];
n277 -> n278  [key=0, style=solid];
n277 -> n280  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n277 -> n283  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n277 -> n285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n279 -> n280  [key=0, style=solid];
n279 -> n14  [key=2, style=dotted];
n281 -> n282  [key=0, style=solid];
n281 -> n14  [key=2, style=dotted];
n284 -> n285  [key=0, style=solid];
n284 -> n14  [key=2, style=dotted];
n288 -> n277  [key=0, style=bold, color=blue];
n286 -> n287  [key=0, style=solid];
n286 -> n14  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_84  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_71  [key=2, style=dotted];
m0_81 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_81 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_81 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_81 -> m0_85  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_35  [key=2, style=dotted];
m0_82 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=req];
m0_82 -> m0_77  [key=0, style=bold, color=blue];
m0_102 -> m0_87  [key=0, style=solid];
m0_102 -> m0_48  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_110  [key=0, style=solid];
m0_105 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_110 -> m0_111  [key=0, style=solid];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_43  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_44  [key=2, style=dotted];
m0_84 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_103  [key=0, style=solid];
m0_85 -> m0_105  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_45  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_101  [key=0, style=bold, color=blue];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_103  [key=0, style=solid];
m0_87 -> m0_105  [key=0, style=solid];
m0_87 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_87 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_87 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_87 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_87 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_87 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_87 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_87 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_87 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_87 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_87 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_87 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_88 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_88 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_88 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_88 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_88 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_88 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_88 -> m0_26  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Orders.Order order"];
m0_88 -> m0_86  [key=0, style=bold, color=blue];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_91  [key=0, style=solid];
m0_90 -> m0_96  [key=0, style=solid];
m0_90 -> m0_112  [key=2, style=dotted];
m0_90 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_90 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_90 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_90 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_90 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_90 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_93  [key=0, style=solid];
m0_91 -> m0_89  [key=0, style=bold, color=blue];
m0_92 -> m0_96  [key=0, style=solid];
m0_92 -> m0_113  [key=2, style=dotted];
m0_92 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_92 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_92 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_92 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_92 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_92 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_95  [key=0, style=solid];
m0_94 -> m0_96  [key=0, style=solid];
m0_94 -> m0_114  [key=2, style=dotted];
m0_94 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_94 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_94 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_94 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_94 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_94 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_94 -> m0_92  [key=0, style=bold, color=blue];
m0_95 -> m0_87  [key=0, style=solid];
m0_95 -> m0_115  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_71  [key=2, style=dotted];
m0_97 -> m0_116  [key=2, style=dotted];
m0_97 -> m0_95  [key=0, style=bold, color=blue];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_117  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_118  [key=2, style=dotted];
m0_100 -> m0_98  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_104 -> m0_111  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_105  [key=0, style=solid];
m0_106 -> m0_119  [key=2, style=dotted];
m0_106 -> m0_104  [key=0, style=bold, color=blue];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_120  [key=2, style=dotted];
m0_107 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_107 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=cached];
m0_109 -> m0_105  [key=0, style=solid];
m0_109 -> m0_122  [key=2, style=dotted];
m0_109 -> m0_107  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_105  [key=0, style=solid];
m0_108 -> m0_121  [key=2, style=dotted];
m0_111 -> m0_80  [key=0, style=bold, color=blue];
m0_111 -> m0_112  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_74  [key=2, style=dotted];
m0_40 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=stat];
m0_35 -> m0_72  [key=2, style=dotted];
m0_35 -> m0_73  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_129  [key=2, style=dotted];
m0_116 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=expectedValue];
m0_116 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=expectedValue];
m0_116 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=expectedValue];
m0_74 -> m0_113  [key=0, style=solid];
m0_74 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>"];
m0_74 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_74 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_74 -> m0_75  [key=0, style=solid];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_122  [key=2, style=dotted];
m0_113 -> m0_123  [key=2, style=dotted];
m0_113 -> m0_124  [key=2, style=dotted];
m0_113 -> m0_125  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_128  [key=2, style=dotted];
m0_115 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=func];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_129  [key=2, style=dotted];
m0_117 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=actualValue];
m0_117 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=actualValue];
m0_119 -> m0_73  [key=2, style=dotted];
m0_119 -> m0_121  [key=0, style=solid];
m0_120 -> m0_73  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=field];
m0_114 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=field];
m0_114 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=field];
m0_114 -> m0_126  [key=2, style=dotted];
m0_114 -> m0_127  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_120  [key=0, style=solid];
m0_121 -> m0_74  [key=0, style=bold, color=blue];
m0_125 -> m0_123  [key=0, style=bold, color=blue];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_58  [key=2, style=dotted];
m0_0 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m0_0 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Language"];
m0_0 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_28  [key=1, style=dashed, color=red, label="QuantConnect.Orders.Order"];
m0_0 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_17  [key=3, color=darkorchid, style=bold, label="method methodReturn bool PlaceOrder"];
m0_0 -> m0_30  [key=3, color=darkorchid, style=bold, label="method methodReturn bool PlaceOrder"];
m0_31 -> m0_32  [key=0, style=solid, color=green];
m0_31 -> m0_34  [key=0, style=solid, color=green];
m0_31 -> m0_50  [key=2, style=dotted];
m0_31 -> m0_51  [key=2, style=dotted];
m0_16 -> m0_31  [key=1, style=dashed, color=green, label=debugEnabled];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_46  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid, color=green];
m0_30 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_34  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid, color=green];
m0_32 -> m0_56  [key=2, style=dotted];
m0_32 -> m0_57  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_37  [key=0, style=solid];
m0_34 -> m0_0  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_71  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_59  [key=2, style=dotted];
m0_15 -> m0_18  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_61  [key=2, style=dotted];
m0_17 -> m0_62  [key=2, style=dotted];
m0_17 -> m0_34  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_54  [key=2, style=dotted];
m0_29 -> n14  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_74  [key=2, style=dotted];
m0_38 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_74  [key=2, style=dotted];
m0_39 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_74  [key=2, style=dotted];
m0_41 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_74  [key=2, style=dotted];
m0_42 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_74  [key=2, style=dotted];
m0_43 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_74  [key=2, style=dotted];
m0_44 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_74  [key=2, style=dotted];
m0_45 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_74  [key=2, style=dotted];
m0_46 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_36 -> m0_34  [key=0, style=solid];
m0_36 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=stat];
m0_36 -> m0_73  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_47  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_60  [key=2, style=dotted];
m0_14 -> m0_59  [key=2, style=dotted];
m0_14 -> m0_45  [key=2, style=dotted];
m0_14 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=raw];
m0_14 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=raw];
m0_4 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=logFile];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_55  [key=2, style=dotted];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=logFile];
m0_4 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=logFile];
m0_4 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=logFile];
m0_4 -> m0_38  [key=2, style=dotted];
m0_4 -> m0_39  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_63  [key=2, style=dotted];
m0_18 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=brokerId];
m0_18 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=brokerId];
m0_19 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=algorithmHandlers];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_64  [key=2, style=dotted];
m0_19 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=algorithmHandlers];
m0_19 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=algorithmHandlers];
m0_19 -> m0_21  [key=0, style=solid];
m0_19 -> m0_47  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid, color=red];
m0_28 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m0_28 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m0_28 -> m0_53  [key=2, style=dotted, color=red];
m0_28 -> m0_49  [key=2, style=dotted, color=red];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_75  [key=2, style=dotted];
m0_47 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=passedFile];
m0_47 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=passedFile];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_52  [key=2, style=dotted];
m0_1 -> m0_35  [key=2, style=dotted];
m0_1 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=req];
m0_1 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=req];
m0_1 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=req];
m0_7 -> m0_59  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_41  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_67  [key=2, style=dotted];
m0_23 -> m0_50  [key=2, style=dotted];
m0_23 -> m0_51  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_59  [key=2, style=dotted];
m0_13 -> m0_31  [key=0, style=solid];
m0_8 -> m0_59  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=0, style=solid];
m0_9 -> m0_59  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_59  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_42  [key=2, style=dotted];
m0_11 -> m0_59  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_43  [key=2, style=dotted];
m0_12 -> m0_59  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_44  [key=2, style=dotted];
m0_12 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_12 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_54  [key=2, style=dotted];
m0_3 -> m0_37  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_56  [key=2, style=dotted];
m0_5 -> m0_57  [key=2, style=dotted];
m0_5 -> m0_40  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_58  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_76  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_65  [key=2, style=dotted];
m0_20 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m0_20 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m0_20 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m0_20 -> m0_23  [key=0, style=solid];
m0_20 -> m0_48  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_68  [key=2, style=dotted];
m0_25 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=engine];
m0_25 -> m0_50  [key=2, style=dotted];
m0_25 -> m0_51  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=0, style=solid];
m0_27 -> m0_52  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_56  [key=2, style=dotted];
m0_48 -> m0_57  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_53  [key=2, style=dotted];
m0_2 -> m0_36  [key=2, style=dotted];
m0_2 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_2 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_2 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_2 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_2 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_2 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_66  [key=2, style=dotted];
m0_22 -> m0_49  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_66  [key=2, style=dotted];
m0_24 -> m0_28  [key=0, style=solid, color=red];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_48  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_69  [key=2, style=dotted];
m0_26 -> m0_70  [key=2, style=dotted];
m0_26 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_26 -> m0_26  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Orders.Order outOrder"];
m0_51 -> m0_0  [key=0, style=bold, color=blue];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_69  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_83  [key=2, style=dotted];
m0_79 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=algorithmPath];
m0_128 -> m0_129  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_71  [key=2, style=dotted];
m0_129 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_129 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_35  [key=2, style=dotted];
m0_130 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=req];
m0_130 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m0_142 -> m0_134  [key=0, style=solid];
m0_142 -> m0_150  [key=2, style=dotted];
m0_142 -> m0_117  [key=2, style=dotted];
m0_142 -> m0_146  [key=2, style=dotted];
m0_142 -> m0_151  [key=2, style=dotted];
m0_142 -> m0_48  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_43  [key=2, style=dotted];
m0_131 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=engine];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_44  [key=2, style=dotted];
m0_132 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_143  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_143  [key=0, style=solid];
m0_134 -> m0_45  [key=2, style=dotted];
m0_134 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_134 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_134 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_134 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_135 -> m0_136  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_140  [key=0, style=solid];
m0_136 -> m0_145  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_146  [key=2, style=dotted];
m0_137 -> m0_147  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_117  [key=2, style=dotted];
m0_140 -> m0_149  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_148  [key=2, style=dotted];
m0_138 -> m0_149  [key=2, style=dotted];
m0_139 -> m0_142  [key=0, style=solid];
m0_141 -> m0_142  [key=0, style=solid];
m0_144 -> m0_128  [key=0, style=bold, color=blue];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_152 -> m0_153  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_71  [key=2, style=dotted];
m0_153 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_153 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_153 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_35  [key=2, style=dotted];
m0_154 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=req];
m0_160 -> m0_157  [key=0, style=solid];
m0_160 -> m0_165  [key=2, style=dotted];
m0_160 -> m0_48  [key=2, style=dotted];
m0_162 -> m0_157  [key=0, style=solid];
m0_162 -> m0_165  [key=2, style=dotted];
m0_162 -> m0_151  [key=2, style=dotted];
m0_162 -> m0_48  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_43  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_44  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_163  [key=0, style=solid];
m0_157 -> m0_45  [key=2, style=dotted];
m0_157 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_157 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_157 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_157 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_157  [key=0, style=solid];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_161  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_166  [key=2, style=dotted];
m0_161 -> m0_149  [key=2, style=dotted];
m0_164 -> m0_152  [key=0, style=bold, color=blue];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_72  [key=2, style=dotted];
m0_69 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_126  [key=2, style=dotted];
m0_124 -> m0_127  [key=2, style=dotted];
m0_124 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_35  [key=2, style=dotted];
m0_65 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=req];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_75 -> m0_73  [key=0, style=bold, color=blue];
m0_123 -> m0_124  [key=0, style=solid];
m0_112 -> m0_110  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_76  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_71  [key=2, style=dotted];
m0_63 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=success];
m0_63 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=success];
m0_68 -> m0_64  [key=0, style=solid];
m0_68 -> m0_48  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_43  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_44  [key=2, style=dotted];
m0_70 -> m0_62  [key=0, style=bold, color=blue];
m0_58 -> m0_59  [key=0, style=solid];
m0_60 -> m0_58  [key=0, style=bold, color=blue];
m0_76 -> m0_77  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_61  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
m0_176 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
m0_176 -> m0_176  [key=3, color=darkorchid, style=bold, label="Local variable decimal totalFee"];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_183  [key=0, style=solid];
m0_182 -> m0_177  [key=0, style=solid];
m0_182 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
m0_182 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
m0_183 -> m0_184  [key=0, style=solid];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_35  [key=2, style=dotted];
m0_178 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label=req];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_43  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_44  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_45  [key=2, style=dotted];
m0_184 -> m0_175  [key=0, style=bold, color=blue];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_169  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> GetNextTicks"];
m0_168 -> m0_169  [key=0, style=solid];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_173  [key=2, style=dotted];
m0_169 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=copy];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_174  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_172 -> m0_167  [key=0, style=bold, color=blue];
m0_185 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_28  [key=1, style=dashed, color=red, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_186 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_3 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs"];
m2_3 -> m2_4  [key=0, style=solid, color=red];
m2_4 -> m2_5  [key=0, style=solid, color=red];
m2_4 -> m2_8  [key=2, style=dotted, color=red];
m2_4 -> m2_6  [key=1, style=dashed, color=red, label=restClient];
m2_5 -> m2_6  [key=0, style=solid, color=red];
m2_5 -> m2_9  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid, color=red];
m2_6 -> m2_10  [key=2, style=dotted, color=red];
m2_6 -> m2_11  [key=2, style=dotted, color=red];
m2_7 -> m2_3  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_12  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=red];
m2_1 -> m2_2  [key=0, style=solid, color=red];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_17 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageIntegrationTests"];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_92 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_93 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_97  [key=0, style=solid];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_113  [key=2, style=dotted];
m3_104 -> m3_114  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label=id];
m3_94 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label=id];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_106  [key=2, style=dotted];
m3_96 -> m3_107  [key=2, style=dotted];
m3_96 -> m3_108  [key=2, style=dotted];
m3_96 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_96 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_111  [key=2, style=dotted];
m3_103 -> m3_112  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_109  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_97 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_97 -> m3_97  [key=3, color=darkorchid, style=bold, label="Local variable decimal orderQuantity"];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m3_102 -> m3_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_102 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m3_102 -> m3_118  [key=1, style=dashed, color=darkseagreen4, label=actualQuantity];
m3_102 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> n218  [key=2, style=dotted];
m3_99 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=raised];
m3_99 -> m3_122  [key=1, style=dashed, color=darkseagreen4, label=raised];
m3_99 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label=raised];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m3_100 -> m3_100  [key=3, color=darkorchid, style=bold, label="Local variable decimal actualFee"];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_100  [key=3, color=darkorchid, style=bold, label="Local variable decimal actualQuantity"];
m3_105 -> m3_92  [key=0, style=bold, color=blue];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_137  [key=1, style=dashed, color=darkseagreen4, label="System.Net.HttpStatusCode"];
m3_135 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label="System.Net.HttpStatusCode"];
m3_135 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_135 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderType"];
m3_135 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderStatus"];
m3_135 -> m3_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_135 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_135 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_135 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderType"];
m3_135 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_135 -> m3_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderType"];
m3_135 -> m3_147  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_135 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_135 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_136 -> m3_137  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_154  [key=2, style=dotted];
m3_137 -> m3_155  [key=2, style=dotted];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_141  [key=0, style=solid];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_142 -> m3_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_142 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_142 -> m3_166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_142 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_142 -> m3_151  [key=1, style=dashed, color=darkseagreen4, label=hasFilled];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_146  [key=0, style=solid];
m3_145 -> m3_149  [key=0, style=solid];
m3_145 -> m3_156  [key=2, style=dotted];
m3_146 -> m3_147  [key=0, style=solid];
m3_146 -> m3_148  [key=0, style=solid];
m3_147 -> m3_149  [key=0, style=solid];
m3_147 -> m3_157  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_158  [key=2, style=dotted];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_53  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_138  [key=3, color=darkorchid, style=bold, label="Local variable bool? hasFilled"];
m3_140 -> m3_141  [key=0, style=solid];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> n218  [key=2, style=dotted];
m3_141 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=raised];
m3_141 -> m3_152  [key=1, style=dashed, color=darkseagreen4, label=raised];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_113  [key=2, style=dotted];
m3_152 -> m3_53  [key=2, style=dotted];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_138  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Orders.Order order"];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_53  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_159  [key=2, style=dotted];
m3_153 -> m3_135  [key=0, style=bold, color=blue];
m3_226 -> m3_227  [key=0, style=solid];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_38  [key=2, style=dotted];
m3_228 -> m3_229  [key=0, style=solid];
m3_228 -> m3_193  [key=2, style=dotted];
m3_228 -> m3_194  [key=2, style=dotted];
m3_228 -> m3_195  [key=2, style=dotted];
m3_229 -> m3_230  [key=0, style=solid];
m3_229 -> m3_236  [key=2, style=dotted];
m3_229 -> m3_231  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_229 -> m3_232  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_229 -> m3_233  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_229 -> m3_234  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_230 -> m3_231  [key=0, style=solid];
m3_230 -> m3_197  [key=2, style=dotted];
m3_230 -> m3_114  [key=2, style=dotted];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_198  [key=2, style=dotted];
m3_231 -> m3_114  [key=2, style=dotted];
m3_232 -> m3_233  [key=0, style=solid];
m3_232 -> m3_198  [key=2, style=dotted];
m3_232 -> m3_114  [key=2, style=dotted];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_199  [key=2, style=dotted];
m3_233 -> m3_114  [key=2, style=dotted];
m3_234 -> m3_235  [key=0, style=solid];
m3_234 -> m3_199  [key=2, style=dotted];
m3_234 -> m3_114  [key=2, style=dotted];
m3_235 -> m3_226  [key=0, style=bold, color=blue];
m3_237 -> m3_238  [key=0, style=solid];
m3_237 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label="System.Net.HttpStatusCode"];
m3_237 -> m3_241  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_238 -> m3_239  [key=0, style=solid];
m3_238 -> m3_17  [key=2, style=dotted];
m3_238 -> m3_18  [key=2, style=dotted];
m3_238 -> m3_19  [key=2, style=dotted];
m3_238 -> m3_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_17  [key=2, style=dotted];
m3_239 -> m3_18  [key=2, style=dotted];
m3_239 -> m3_19  [key=2, style=dotted];
m3_239 -> m3_252  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_241 -> m3_242  [key=0, style=solid];
m3_241 -> m3_114  [key=2, style=dotted];
m3_240 -> m3_241  [key=0, style=solid];
m3_240 -> m3_243  [key=2, style=dotted];
m3_240 -> m3_194  [key=2, style=dotted];
m3_240 -> m3_244  [key=2, style=dotted];
m3_242 -> m3_237  [key=0, style=bold, color=blue];
m3_61 -> m3_62  [key=0, style=solid];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_17  [key=2, style=dotted];
m3_62 -> m3_67  [key=2, style=dotted];
m3_62 -> m3_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_17  [key=2, style=dotted];
m3_63 -> m3_19  [key=2, style=dotted];
m3_63 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_68  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_69  [key=2, style=dotted];
m3_66 -> m3_61  [key=0, style=bold, color=blue];
m3_284 -> m3_285  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [key=2, style=dotted];
m3_21 -> m3_24  [key=2, style=dotted];
m3_21 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_22 -> m3_20  [key=0, style=bold, color=blue];
m3_25 -> m3_26  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_28  [key=2, style=dotted];
m3_27 -> m3_25  [key=0, style=bold, color=blue];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_23  [key=2, style=dotted];
m3_30 -> m3_24  [key=2, style=dotted];
m3_30 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_31 -> m3_29  [key=0, style=bold, color=blue];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_28  [key=2, style=dotted];
m3_34 -> m3_32  [key=0, style=bold, color=blue];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_35  [key=0, style=bold, color=blue];
m3_41 -> m3_42  [key=0, style=solid, color=red];
m3_42 -> m3_43  [key=0, style=solid, color=red];
m3_42 -> m3_23  [key=2, style=dotted, color=red];
m3_42 -> m3_24  [key=2, style=dotted, color=red];
m3_42 -> m3_44  [key=1, style=dashed, color=red, label="lambda expression"];
m3_43 -> m3_41  [key=0, style=bold, color=blue];
m3_44 -> m3_45  [key=0, style=solid, color=red];
m3_45 -> m3_46  [key=0, style=solid, color=red];
m3_45 -> m3_28  [key=2, style=dotted, color=red];
m3_46 -> m3_44  [key=0, style=bold, color=blue];
m3_55 -> m3_56  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_57 -> m3_55  [key=0, style=bold, color=blue];
m3_59 -> m3_60  [key=0, style=solid];
m3_60 -> m3_58  [key=0, style=bold, color=blue];
m3_70 -> m3_71  [key=0, style=solid];
m3_74 -> m3_75  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_73  [key=2, style=dotted];
m3_72 -> m3_70  [key=0, style=bold, color=blue];
m3_75 -> m3_76  [key=0, style=solid];
m3_76 -> m3_74  [key=0, style=bold, color=blue];
m3_85 -> m3_86  [key=0, style=solid];
m3_89 -> m3_90  [key=0, style=solid];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_88  [key=2, style=dotted];
m3_87 -> m3_85  [key=0, style=bold, color=blue];
m3_90 -> m3_91  [key=0, style=solid];
m3_91 -> m3_89  [key=0, style=bold, color=blue];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_114  [key=2, style=dotted];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_125  [key=2, style=dotted];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_114  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m3_117 -> m3_121  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_118  [key=1, style=dashed, color=darkseagreen4, label=actualQuantity];
m3_118 -> m3_120  [key=1, style=dashed, color=darkseagreen4, label=actualQuantity];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_115 -> m3_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_115 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_124  [key=2, style=dotted];
m3_121 -> m3_114  [key=2, style=dotted];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_114  [key=2, style=dotted];
m3_123 -> m3_115  [key=0, style=bold, color=blue];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_164  [key=0, style=solid];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_114  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_169  [key=0, style=solid];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_171  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_172  [key=2, style=dotted];
m3_168 -> m3_173  [key=2, style=dotted];
m3_168 -> m3_53  [key=2, style=dotted];
m3_168 -> m3_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_125  [key=2, style=dotted];
m3_163 -> m3_170  [key=0, style=solid];
m3_163 -> m3_114  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> m3_114  [key=2, style=dotted];
m3_160 -> m3_161  [key=0, style=solid];
m3_160 -> m3_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_160 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_160 -> m3_166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_160 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_162 -> m3_163  [key=0, style=solid];
m3_162 -> m3_151  [key=1, style=dashed, color=darkseagreen4, label=hasFilled];
m3_162 -> m3_170  [key=1, style=dashed, color=darkseagreen4, label=hasFilled];
m3_170 -> m3_160  [key=0, style=bold, color=blue];
m3_174 -> m3_175  [key=0, style=solid];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_177  [key=2, style=dotted];
m3_175 -> m3_175  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m3_175 -> m3_178  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_176 -> m3_174  [key=0, style=bold, color=blue];
m3_178 -> m3_179  [key=0, style=solid];
m3_179 -> m3_180  [key=0, style=solid];
m3_180 -> m3_178  [key=0, style=bold, color=blue];
m3_220 -> m3_221  [key=0, style=solid];
m3_223 -> m3_224  [key=0, style=solid];
m3_221 -> m3_222  [key=0, style=solid];
m3_222 -> m3_220  [key=0, style=bold, color=blue];
m3_224 -> m3_225  [key=0, style=solid];
m3_225 -> m3_223  [key=0, style=bold, color=blue];
m3_245 -> m3_246  [key=0, style=solid];
m3_252 -> m3_253  [key=0, style=solid];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_23  [key=2, style=dotted];
m3_246 -> m3_24  [key=2, style=dotted];
m3_246 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_247 -> m3_245  [key=0, style=bold, color=blue];
m3_248 -> m3_249  [key=0, style=solid];
m3_249 -> m3_250  [key=0, style=solid];
m3_249 -> m3_251  [key=2, style=dotted];
m3_250 -> m3_248  [key=0, style=bold, color=blue];
m3_253 -> m3_254  [key=0, style=solid];
m3_253 -> m3_23  [key=2, style=dotted];
m3_253 -> m3_24  [key=2, style=dotted];
m3_253 -> m3_255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_254 -> m3_252  [key=0, style=bold, color=blue];
m3_255 -> m3_256  [key=0, style=solid];
m3_256 -> m3_257  [key=0, style=solid];
m3_256 -> m3_251  [key=2, style=dotted];
m3_257 -> m3_255  [key=0, style=bold, color=blue];
m3_261 -> m3_262  [key=0, style=solid];
m3_262 -> m3_263  [key=0, style=solid];
m3_262 -> m3_243  [key=2, style=dotted];
m3_262 -> m3_264  [key=2, style=dotted];
m3_263 -> m3_261  [key=0, style=bold, color=blue];
m3_280 -> m3_281  [key=0, style=solid];
m3_281 -> m3_282  [key=0, style=solid];
m3_281 -> m3_23  [key=2, style=dotted];
m3_281 -> m3_283  [key=2, style=dotted];
m3_282 -> m3_280  [key=0, style=bold, color=blue];
m3_285 -> m3_286  [key=0, style=solid];
m3_286 -> m3_284  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_14  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_15  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_15  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_15  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_15  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_15  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_15  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_15  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_16  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_17  [key=2, style=dotted];
m3_10 -> m3_18  [key=2, style=dotted];
m3_10 -> m3_15  [key=2, style=dotted];
m3_10 -> m3_19  [key=2, style=dotted];
m3_10 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_17  [key=2, style=dotted];
m3_11 -> m3_18  [key=2, style=dotted];
m3_11 -> m3_15  [key=2, style=dotted];
m3_11 -> m3_19  [key=2, style=dotted];
m3_11 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_17  [key=2, style=dotted];
m3_12 -> m3_19  [key=2, style=dotted];
m3_12 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_13 -> m3_0  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid, color=red];
m3_38 -> m3_16  [key=3, color=darkorchid, style=bold, label="Parameter variable string body"];
m3_39 -> m3_40  [key=0, style=solid, color=red];
m3_39 -> m3_17  [key=2, style=dotted, color=red];
m3_39 -> m3_18  [key=2, style=dotted, color=red];
m3_39 -> m3_19  [key=2, style=dotted, color=red];
m3_39 -> m3_41  [key=1, style=dashed, color=red, label="lambda expression"];
m3_40 -> m3_38  [key=0, style=bold, color=blue];
m3_159 -> m3_159  [key=3, color=darkorchid, style=bold, label="Field variable string _brokerId"];
m3_200 -> m3_201  [key=0, style=solid];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_206  [key=2, style=dotted];
m3_201 -> m3_203  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_201 -> m3_204  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_202 -> m3_203  [key=0, style=solid];
m3_202 -> m3_114  [key=2, style=dotted];
m3_203 -> m3_204  [key=0, style=solid];
m3_203 -> m3_114  [key=2, style=dotted];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_114  [key=2, style=dotted];
m3_205 -> m3_200  [key=0, style=bold, color=blue];
m3_258 -> m3_259  [key=0, style=solid];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_23  [key=2, style=dotted];
m3_259 -> m3_261  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_260 -> m3_258  [key=0, style=bold, color=blue];
m3_47 -> m3_48  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_17  [key=2, style=dotted];
m3_48 -> m3_19  [key=2, style=dotted];
m3_48 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_53  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_17  [key=2, style=dotted];
m3_50 -> m3_19  [key=2, style=dotted];
m3_50 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_54  [key=2, style=dotted];
m3_52 -> m3_47  [key=0, style=bold, color=blue];
m3_265 -> m3_266  [key=0, style=solid];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_138  [key=3, color=darkorchid, style=bold, label="Local variable string actual"];
m3_266 -> m3_268  [key=3, color=darkorchid, style=bold, label="Local variable string actual"];
m3_267 -> m3_268  [key=0, style=solid];
m3_267 -> m3_271  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_267 -> m3_267  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_268 -> m3_269  [key=0, style=solid];
m3_268 -> m3_17  [key=2, style=dotted];
m3_268 -> m3_23  [key=2, style=dotted];
m3_268 -> m3_280  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_268 -> m3_284  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_268 -> m3_271  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_271 -> m3_272  [key=0, style=solid];
m3_271 -> m3_279  [key=2, style=dotted];
m3_269 -> m3_270  [key=0, style=solid];
m3_269 -> m3_277  [key=2, style=dotted];
m3_270 -> m3_271  [key=0, style=solid];
m3_270 -> m3_23  [key=2, style=dotted];
m3_270 -> m3_16  [key=2, style=dotted];
m3_270 -> m3_278  [key=2, style=dotted];
m3_272 -> m3_273  [key=0, style=solid];
m3_272 -> m3_197  [key=2, style=dotted];
m3_272 -> m3_114  [key=2, style=dotted];
m3_273 -> m3_274  [key=0, style=solid];
m3_273 -> m3_198  [key=2, style=dotted];
m3_273 -> m3_114  [key=2, style=dotted];
m3_274 -> m3_275  [key=0, style=solid];
m3_274 -> m3_198  [key=2, style=dotted];
m3_274 -> m3_114  [key=2, style=dotted];
m3_275 -> m3_276  [key=0, style=solid];
m3_275 -> m3_198  [key=2, style=dotted];
m3_275 -> m3_114  [key=2, style=dotted];
m3_276 -> m3_265  [key=0, style=bold, color=blue];
m3_207 -> m3_208  [key=0, style=solid];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_38  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_218  [key=2, style=dotted];
m3_209 -> m3_211  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_209 -> m3_212  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_210 -> m3_211  [key=0, style=solid];
m3_210 -> m3_197  [key=2, style=dotted];
m3_210 -> m3_114  [key=2, style=dotted];
m3_211 -> m3_212  [key=0, style=solid];
m3_211 -> m3_219  [key=2, style=dotted];
m3_211 -> m3_220  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_211 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=usd];
m3_211 -> m3_214  [key=1, style=dashed, color=darkseagreen4, label=usd];
m3_212 -> m3_213  [key=0, style=solid];
m3_212 -> m3_219  [key=2, style=dotted];
m3_212 -> m3_223  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_212 -> m3_215  [key=1, style=dashed, color=darkseagreen4, label=btc];
m3_212 -> m3_216  [key=1, style=dashed, color=darkseagreen4, label=btc];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_114  [key=2, style=dotted];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_114  [key=2, style=dotted];
m3_215 -> m3_216  [key=0, style=solid];
m3_215 -> m3_114  [key=2, style=dotted];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_114  [key=2, style=dotted];
m3_217 -> m3_207  [key=0, style=bold, color=blue];
m3_181 -> m3_182  [key=0, style=solid];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_38  [key=2, style=dotted];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_193  [key=2, style=dotted];
m3_183 -> m3_194  [key=2, style=dotted];
m3_183 -> m3_195  [key=2, style=dotted];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_196  [key=2, style=dotted];
m3_184 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_184 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_184 -> m3_188  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_184 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_184 -> m3_190  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_184 -> m3_191  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_185 -> m3_186  [key=0, style=solid];
m3_185 -> m3_197  [key=2, style=dotted];
m3_185 -> m3_114  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_186 -> m3_198  [key=2, style=dotted];
m3_186 -> m3_114  [key=2, style=dotted];
m3_187 -> m3_188  [key=0, style=solid];
m3_187 -> m3_198  [key=2, style=dotted];
m3_187 -> m3_114  [key=2, style=dotted];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_198  [key=2, style=dotted];
m3_188 -> m3_114  [key=2, style=dotted];
m3_189 -> m3_190  [key=0, style=solid];
m3_189 -> m3_199  [key=2, style=dotted];
m3_189 -> m3_114  [key=2, style=dotted];
m3_190 -> m3_191  [key=0, style=solid];
m3_190 -> m3_199  [key=2, style=dotted];
m3_190 -> m3_114  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_199  [key=2, style=dotted];
m3_191 -> m3_114  [key=2, style=dotted];
m3_192 -> m3_181  [key=0, style=bold, color=blue];
m3_77 -> m3_78  [key=0, style=solid];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_17  [key=2, style=dotted];
m3_78 -> m3_67  [key=2, style=dotted];
m3_78 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_17  [key=2, style=dotted];
m3_79 -> m3_19  [key=2, style=dotted];
m3_79 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_68  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_84  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_69  [key=2, style=dotted];
m3_83 -> m3_77  [key=0, style=bold, color=blue];
m3_126 -> m3_127  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_133  [key=2, style=dotted];
m3_127 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_127 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_127 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_134  [key=2, style=dotted];
m3_128 -> m3_54  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_134  [key=2, style=dotted];
m3_129 -> m3_54  [key=2, style=dotted];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_114  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_114  [key=2, style=dotted];
m3_132 -> m3_126  [key=0, style=bold, color=blue];
m3_287 -> m3_288  [key=0, style=solid];
m3_288 -> m3_289  [key=0, style=solid];
m3_288 -> m3_157  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_289 -> m3_290  [key=0, style=solid];
m3_289 -> m3_111  [key=2, style=dotted];
m3_289 -> m3_112  [key=2, style=dotted];
m3_290 -> m3_291  [key=0, style=solid];
m3_290 -> m3_198  [key=2, style=dotted];
m3_290 -> m3_292  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_290 -> m3_293  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_290 -> m3_294  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_291 -> m3_292  [key=0, style=solid];
m3_291 -> m3_114  [key=2, style=dotted];
m3_292 -> m3_293  [key=0, style=solid];
m3_292 -> m3_114  [key=2, style=dotted];
m3_293 -> m3_294  [key=0, style=solid];
m3_293 -> m3_114  [key=2, style=dotted];
m3_294 -> m3_295  [key=0, style=solid];
m3_294 -> m3_114  [key=2, style=dotted];
m3_295 -> m3_296  [key=0, style=solid];
m3_295 -> m3_199  [key=2, style=dotted];
m3_295 -> m3_297  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_295 -> m3_298  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_296 -> m3_297  [key=0, style=solid];
m3_296 -> m3_114  [key=2, style=dotted];
m3_297 -> m3_298  [key=0, style=solid];
m3_297 -> m3_114  [key=2, style=dotted];
m3_298 -> m3_299  [key=0, style=solid];
m3_298 -> m3_114  [key=2, style=dotted];
m3_299 -> m3_287  [key=0, style=bold, color=blue];
m3_300 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_39  [key=1, style=dashed, color=red, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_182  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_209  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_228  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_259  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_268  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_270  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_272  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_274  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_275  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_288  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_289  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_290  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_300 -> m3_295  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests"];
m3_301 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=actualFee];
m3_302 -> m3_118  [key=1, style=dashed, color=darkseagreen4, label=actualQuantity];
m3_303 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_304 -> m3_122  [key=1, style=dashed, color=darkseagreen4, label=raised];
m3_305 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderType"];
m3_306 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderStatus"];
m3_307 -> m3_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_307 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_308 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_309 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=raised];
}
