digraph  {
d254 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", color=green, community=0, label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var requests = new List<HistoryRequest>();\r\n\r\n                foreach (var config in GetMatchingSubscriptions(x, typeof(BaseData)))\r\n                {\r\n                    var request = CreateHistoryRequest(config, startAlgoTz, endAlgoTz, resolution);\r\n\r\n                    // apply overrides\r\n                    var res = GetResolution(x, resolution);\r\n                    if (fillForward.HasValue) request.FillForwardResolution = fillForward.Value ? res : null;\r\n                    if (extendedMarket.HasValue) request.IncludeExtendedMarketHours = extendedMarket.Value;\r\n\r\n                    requests.Add(request);\r\n                }\r\n\r\n                return requests;\r\n            });", prediction=0, span="600-617"];
d326 [label="QuantConnect.Algorithm.QCAlgorithm", span=""];
d47 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="598-598"];
d255 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="598-598"];
d70 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
d256 [cluster="Unk.SelectMany", label="Entry Unk.SelectMany", span=""];
d257 [cluster="lambda expression", label="Entry lambda expression", span="600-600"];
d260 [cluster="lambda expression", label="Entry lambda expression", span="600-617"];
d262 [cluster="lambda expression", color=green, community=0, label="GetMatchingSubscriptions(x, typeof(BaseData))", prediction=1, span="604-604"];
d261 [cluster="lambda expression", label="var requests = new List<HistoryRequest>()", span="602-602"];
d269 [cluster="lambda expression", label="requests.Add(request)", span="613-613"];
d263 [cluster="lambda expression", label="var request = CreateHistoryRequest(config, startAlgoTz, endAlgoTz, resolution)", span="606-606"];
d270 [cluster="lambda expression", label="return requests;", span="616-616"];
d272 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", span="660-660"];
d1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", label="_warmupBarCount = null", span="53-53"];
d2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", label="_warmupTimeSpan = timeSpan", span="54-54"];
d3 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", label="_warmupResolution = null", span="55-55"];
d6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", label="SetWarmup(timeSpan)", span="64-64"];
d9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", label="_warmupBarCount = null", span="74-74"];
d10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", label="_warmupTimeSpan = timeSpan", span="75-75"];
d11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", label="_warmupResolution = resolution", span="76-76"];
d14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan, QuantConnect.Resolution)", label="SetWarmup(timeSpan, resolution)", span="86-86"];
d17 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", label="_warmupTimeSpan = null", span="98-98"];
d18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", label="_warmupBarCount = barCount", span="99-99"];
d19 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", label="_warmupResolution = null", span="100-100"];
d22 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", label="SetWarmup(barCount)", span="112-112"];
d25 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int, QuantConnect.Resolution)", label="_warmupTimeSpan = null", span="123-123"];
d26 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int, QuantConnect.Resolution)", label="_warmupBarCount = barCount", span="124-124"];
d27 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int, QuantConnect.Resolution)", label="_warmupResolution = resolution", span="125-125"];
d30 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int, QuantConnect.Resolution)", label="SetWarmup(barCount, resolution)", span="136-136"];
d33 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", label="IsWarmingUp = false", span="144-144"];
d34 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", label="OnWarmupFinished()", span="147-147"];
d38 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", label="_warmupBarCount.HasValue", span="163-163"];
d39 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", label="return CreateBarCountHistoryRequests(Securities.Keys, _warmupBarCount.Value, _warmupResolution);", span="165-165"];
d40 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", label="_warmupTimeSpan.HasValue", span="167-167"];
d41 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", label="var end = UtcTime.ConvertFromUtc(TimeZone)", span="169-169"];
d42 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", label="return CreateDateRangeHistoryRequests(Securities.Keys, end - _warmupTimeSpan.Value, end, _warmupResolution);", span="170-170"];
d50 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", label="return History(Securities.Keys, Time - span, Time, resolution).Memoize();", span="187-187"];
d55 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", label="return History(Securities.Keys, periods, resolution).Memoize();", span="200-200"];
d59 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", label="return History<T>(Securities.Keys, span, resolution).Memoize();", span="214-214"];
d62 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="return History<T>(symbols, Time - span, Time, resolution).Memoize();", span="229-229"];
d66 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="var requests = symbols.Select(x =>\r\n            {\r\n                var config = GetMatchingSubscription(x, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                var res = GetResolution(x, resolution);\r\n                var start = GetStartTimeAlgoTz(x, periods, res).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), res);\r\n            })", span="245-253"];
d75 [cluster="lambda expression", label="var config = GetMatchingSubscription(x, typeof(T))", span="247-247"];
d78 [cluster="lambda expression", label="var res = GetResolution(x, resolution)", span="250-250"];
d79 [cluster="lambda expression", label="var start = GetStartTimeAlgoTz(x, periods, res).ConvertToUtc(TimeZone)", span="251-251"];
d80 [cluster="lambda expression", label="return CreateHistoryRequest(config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), res);", span="252-252"];
d67 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="255-255"];
d92 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var requests = symbols.Select(x =>\r\n            {\r\n                var config = GetMatchingSubscription(x, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(config, start, end, resolution);\r\n            })", span="270-276"];
d96 [cluster="lambda expression", label="var config = GetMatchingSubscription(x, typeof(T))", span="272-272"];
d99 [cluster="lambda expression", label="return CreateHistoryRequest(config, start, end, resolution);", span="275-275"];
d93 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="278-278"];
d105 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="return History<T>(symbol, Time - span, Time, resolution).Memoize();", span="292-292"];
d110 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="305-305"];
d113 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Error(''Calling History<TradeBar> method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="310-310"];
d114 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="resolution = GetResolution(symbol, resolution)", span="313-313"];
d115 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="314-314"];
d116 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="return History(new[] { symbol }, start, Time.RoundDown(resolution.Value.ToTimeSpan()), resolution).Get(symbol).Memoize();", span="316-316"];
d125 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="332-332"];
d127 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var config = GetMatchingSubscription(symbol, requestedType)", span="336-336"];
d129 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var actualType = Securities[symbol].Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="339-339"];
d131 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="resolution = GetResolution(symbol, resolution)", span="343-343"];
d132 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="344-344"];
d133 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="return History<T>(symbol, start, Time.RoundDown(resolution.Value.ToTimeSpan()), resolution).Memoize();", span="345-345"];
d143 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="359-359"];
d145 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var config = GetMatchingSubscription(symbol, requestedType)", span="362-362"];
d147 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var actualType = Securities[symbol].Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="365-365"];
d149 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var request = CreateHistoryRequest(config, start, end, resolution)", span="369-369"];
d150 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="return History(request).Get<T>(symbol).Memoize();", span="370-370"];
d160 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="Error(''Calling History<TradeBar> method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="385-385"];
d161 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="return History(new[] { symbol }, span, resolution).Get(symbol).Memoize();", span="388-388"];
d167 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Error(''Calling History<TradeBar> method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="404-404"];
d168 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="return History(new[] { symbol }, start, end, resolution).Get(symbol).Memoize();", span="407-407"];
d170 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="return History(symbols, Time - span, Time, resolution).Memoize();", span="421-421"];
d174 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="return History(CreateBarCountHistoryRequests(symbols, periods, resolution)).Memoize();", span="436-436"];
d177 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", label="return History(CreateDateRangeHistoryRequests(symbols, start, end, resolution, fillForward, extendedMarket)).Memoize();", span="451-451"];
d180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="resolution = GetResolution(symbol, resolution)", span="461-461"];
d181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var exchange = GetExchangeHours(symbol)", span="462-462"];
d182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var isExtendedMarketHours = Securities.TryGetValue(symbol, out security) ? security.IsExtendedMarketHours : false", span="463-463"];
d185 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(exchange, UtcTime.ConvertFromUtc(exchange.TimeZone), timeSpan, periods, isExtendedMarketHours)", span="468-468"];
d186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="return localStartTime.ConvertTo(exchange.TimeZone, TimeZone);", span="469-469"];
d192 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", label="return History(new[] { request }).Memoize();", span="479-479"];
d194 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", label="return History(requests, TimeZone).Memoize();", span="489-489"];
d198 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="security.Symbol.IsCanonical() || HistoryProvider == null", span="500-500"];
d201 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var startTime = GetStartTimeAlgoTzForSecurity(security, 1, resolution)", span="508-508"];
d202 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var endTime   = Time.RoundDown(resolution.ToTimeSpan())", span="509-509"];
d206 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var subscriptionDataConfig = GetMatchingSubscription(security.Symbol, dataType)", span="519-519"];
d210 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var request = new HistoryRequest(\r\n                startTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                endTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                subscriptionDataConfig == null ? typeof(TradeBar) : subscriptionDataConfig.Type,\r\n                security.Symbol,\r\n                resolution,\r\n                security.Exchange.Hours,\r\n                MarketHoursDatabase.FromDataFolder().GetDataTimeZone(security.Symbol.ID.Market, security.Symbol, security.Symbol.SecurityType),\r\n                resolution,\r\n                security.IsExtendedMarketHours,\r\n                security.IsCustomData(),\r\n                security.DataNormalizationMode,\r\n                subscriptionDataConfig == null ? LeanData.GetCommonTickTypeForCommonDataTypes(typeof(TradeBar), security.Type) : subscriptionDataConfig.TickType\r\n            )", span="528-541"];
d211 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var history = History(new List<HistoryRequest> { request }).ToList()", span="543-543"];
d232 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="564-564"];
d233 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="565-565"];
d236 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="var reqs = requests.Where(hr => !UniverseManager.ContainsKey(hr.Symbol)) .ToList()", span="572-572"];
d251 [cluster="lambda expression", label="!UniverseManager.ContainsKey(hr.Symbol)", span="572-572"];
d238 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="request.EndTimeUtc > UtcTime", span="576-576"];
d239 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="request.EndTimeUtc = UtcTime", span="578-578"];
d244 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Debug(''Request for future history modified to end now.'')", span="586-586"];
d245 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="return ((IAlgorithm)this).HistoryProvider.GetHistory(reqs, timeZone);", span="592-592"];
d264 [cluster="lambda expression", label="var res = GetResolution(x, resolution)", span="609-609"];
d274 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var res = GetResolution(x, resolution);\r\n                var start = GetStartTimeAlgoTz(x, periods, res);\r\n                var end = Time.RoundDown(res.Value.ToTimeSpan());\r\n\r\n                return GetMatchingSubscriptions(x, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(config, start, end, resolution));\r\n            });", span="625-633"];
d280 [cluster="lambda expression", label="var res = GetResolution(x, resolution)", span="627-627"];
d281 [cluster="lambda expression", label="var start = GetStartTimeAlgoTz(x, periods, res)", span="628-628"];
d282 [cluster="lambda expression", label="var end = Time.RoundDown(res.Value.ToTimeSpan())", span="629-629"];
d283 [cluster="lambda expression", label="return GetMatchingSubscriptions(x, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(config, start, end, resolution));", span="631-632"];
d286 [cluster="lambda expression", label="CreateHistoryRequest(config, start, end, resolution)", span="632-632"];
d290 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var request = new HistoryRequest(subscription, GetExchangeHours(subscription.Symbol), startAlgoTz.ConvertToUtc(TimeZone), endAlgoTz.ConvertToUtc(TimeZone))\r\n            {\r\n                DataType = dataType,\r\n                Resolution = resolution.Value,\r\n                FillForwardResolution = subscription.FillDataForward ? resolution : null,\r\n                TickType = subscription.TickType\r\n            }", span="643-649"];
d294 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Symbol, System.Type)", label="return GetMatchingSubscriptions(symbol, type).FirstOrDefault();", span="657-657"];
d298 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", label="Securities.TryGetValue(symbol, out security)", span="663-663"];
d300 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", label="var resolution = UniverseSettings.Resolution", span="672-672"];
d301 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", label="var timeZone = GetExchangeHours(symbol).TimeZone", span="673-673"];
d302 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", label="var subscriptionDataTypes = SubscriptionManager.LookupSubscriptionConfigDataTypes(symbol.SecurityType, resolution, symbol.IsCanonical())", span="674-674"];
d303 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", label="return subscriptionDataTypes.Select(x => new SubscriptionDataConfig(x.Item1, symbol, resolution, timeZone, timeZone, UniverseSettings.FillForward, UniverseSettings.ExtendedMarketHours, false, false, x.Item2));", span="675-675"];
d312 [cluster="lambda expression", label="new SubscriptionDataConfig(x.Item1, symbol, resolution, timeZone, timeZone, UniverseSettings.FillForward, UniverseSettings.ExtendedMarketHours, false, false, x.Item2)", span="675-675"];
d316 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", label="Securities.TryGetValue(symbol, out security)", span="682-682"];
d318 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", label="return MarketHoursDatabase.GetEntry(symbol.ID.Market, symbol, symbol.ID.SecurityType).ExchangeHours;", span="687-687"];
d322 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", label="Securities.TryGetValue(symbol, out security)", span="693-693"];
d324 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", label="return resolution ?? UniverseSettings.Resolution;", span="699-699"];
d265 [cluster="lambda expression", label="fillForward.HasValue", span="610-610"];
d266 [cluster="lambda expression", label="request.FillForwardResolution = fillForward.Value ? res : null", span="610-610"];
d267 [cluster="lambda expression", label="extendedMarket.HasValue", span="611-611"];
d268 [cluster="lambda expression", label="request.IncludeExtendedMarketHours = extendedMarket.Value", span="611-611"];
d259 [cluster="lambda expression", label="Exit lambda expression", span="600-600"];
d258 [cluster="lambda expression", label="!x.IsCanonical()", span="600-600"];
d271 [cluster="lambda expression", label="Exit lambda expression", span="600-617"];
d226 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d273 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d332 [label="System.DateTime", span=""];
d333 [label="System.DateTime", span=""];
d334 [label="QuantConnect.Resolution?", span=""];
d88 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="636-636"];
d304 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", span="660-660"];
d297 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", label="Security security", span="662-662"];
d299 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", label="return from sub in security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                       where type.IsAssignableFrom(sub.Type)\r\n                       select sub;", span="666-668"];
d0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
d4 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
d5 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="62-62"];
d7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="62-62"];
d8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", span="72-72"];
d12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", span="72-72"];
d13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan, QuantConnect.Resolution)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan, QuantConnect.Resolution)", span="84-84"];
d15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan, QuantConnect.Resolution)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan, QuantConnect.Resolution)", span="84-84"];
d16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="96-96"];
d20 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="96-96"];
d21 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="110-110"];
d23 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="110-110"];
d24 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int, QuantConnect.Resolution)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int, QuantConnect.Resolution)", span="121-121"];
d28 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int, QuantConnect.Resolution)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int, QuantConnect.Resolution)", span="121-121"];
d29 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int, QuantConnect.Resolution)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int, QuantConnect.Resolution)", span="134-134"];
d31 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int, QuantConnect.Resolution)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int, QuantConnect.Resolution)", span="134-134"];
d32 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="142-142"];
d35 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="142-142"];
d36 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnWarmupFinished()", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnWarmupFinished()", span="569-569"];
d37 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="161-161"];
d44 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="161-161"];
d45 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="623-623"];
d43 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", label="return Enumerable.Empty<HistoryRequest>();", span="174-174"];
d46 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="605-605"];
d49 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="185-185"];
d51 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="185-185"];
d52 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="449-449"];
d53 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218"];
d54 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="198-198"];
d56 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="198-198"];
d57 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="433-433"];
d58 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="211-211"];
d60 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="211-211"];
d61 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="226-226"];
d63 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="226-226"];
d64 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="267-267"];
d65 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="242-242"];
d69 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
d74 [cluster="lambda expression", label="Entry lambda expression", span="245-253"];
d76 [cluster="lambda expression", label="config == null", span="248-248"];
d82 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Symbol, System.Type)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Symbol, System.Type)", span="654-654"];
d327 [label="QuantConnect.Resolution?", span=""];
d83 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", span="690-690"];
d328 [label=int, span=""];
d84 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="457-457"];
d85 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="617-617"];
d81 [cluster="lambda expression", label="Exit lambda expression", span="245-253"];
d86 [cluster="QuantConnect.Resolution.ToTimeSpan()", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="723-723"];
d87 [cluster="System.DateTime.RoundDown(System.TimeSpan)", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="477-477"];
d68 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="242-242"];
d71 [cluster="Unk.History", label="Entry Unk.History", span=""];
d72 [cluster="Unk.>", label="Entry Unk.>", span=""];
d73 [cluster="Unk.Memoize", label="Entry Unk.Memoize", span=""];
d89 [cluster="lambda expression", label="Entry lambda expression", span="255-255"];
d95 [cluster="lambda expression", label="Entry lambda expression", span="270-276"];
d97 [cluster="lambda expression", label="config == null", span="273-273"];
d329 [label="System.DateTime", span=""];
d330 [label="System.DateTime", span=""];
d331 [label="QuantConnect.Resolution?", span=""];
d100 [cluster="lambda expression", label="Exit lambda expression", span="270-276"];
d94 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="267-267"];
d101 [cluster="lambda expression", label="Entry lambda expression", span="278-278"];
d104 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="289-289"];
d106 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="289-289"];
d107 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="356-356"];
d109 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="symbol == null", span="305-305"];
d117 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="303-303"];
d118 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
d112 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="308-308"];
d119 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1752-1752"];
d108 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="303-303"];
d120 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", span="55-55"];
d124 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="symbol == null", span="332-332"];
d134 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="328-328"];
d121 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="328-328"];
d126 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var requestedType = typeof(T)", span="335-335"];
d128 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="config == null", span="337-337"];
d130 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="340-340"];
d135 [cluster="Unk.DefaultIfEmpty", label="Entry Unk.DefaultIfEmpty", span=""];
d136 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
d139 [cluster="lambda expression", label="Entry lambda expression", span="339-339"];
d142 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="symbol == null", span="359-359"];
d151 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="356-356"];
d144 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var requestedType = typeof(T)", span="361-361"];
d146 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="config == null", span="363-363"];
d148 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="366-366"];
d154 [cluster="lambda expression", label="Entry lambda expression", span="365-365"];
d152 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="477-477"];
d153 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
d159 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="383-383"];
d157 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="380-380"];
d162 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="380-380"];
d163 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="419-419"];
d166 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="402-402"];
d164 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="399-399"];
d169 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="399-399"];
d171 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="419-419"];
d172 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="resolution == Resolution.Tick", span="435-435"];
d175 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="433-433"];
d176 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="487-487"];
d178 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="449-449"];
d179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Security security", span="459-459"];
d183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var timeSpan = resolution.Value.ToTimeSpan()", span="465-465"];
d188 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", span="679-679"];
d189 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
d184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="467-467"];
d190 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="427-427"];
d187 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="457-457"];
d191 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="586-586"];
d193 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="477-477"];
d195 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="487-487"];
d196 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="568-568"];
d197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="498-498"];
d199 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="return null;", span="502-502"];
d200 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var resolution = (Resolution)Math.Max((int)Resolution.Minute, (int)security.Resolution)", span="506-506"];
d216 [cluster="QuantConnect.Symbol.IsCanonical()", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
d218 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="557-557"];
d203 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var dataType = typeof(BaseData)", span="512-512"];
d204 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="security.Type == SecurityType.Option || security.Type == SecurityType.Future", span="513-513"];
d205 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="dataType = LeanData.GetDataType(resolution, TickType.Quote)", span="515-515"];
d207 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="subscriptionDataConfig != null && subscriptionDataConfig.Resolution == Resolution.Tick", span="522-522"];
d208 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="dataType = LeanData.GetDataType(resolution, subscriptionDataConfig.TickType)", span="524-524"];
d209 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="subscriptionDataConfig = new SubscriptionDataConfig(subscriptionDataConfig, dataType, resolution: resolution)", span="525-525"];
d221 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", span="105-105"];
d222 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
d223 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="87-87"];
d224 [cluster="QuantConnect.Securities.Security.IsCustomData()", label="Entry QuantConnect.Securities.Security.IsCustomData()", span="568-568"];
d225 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="750-750"];
d212 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="history.Any() && history.First().Values.Any()", span="545-545"];
d227 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
d213 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="return history.First().Values.First();", span="547-547"];
d231 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="562-562"];
d234 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="557-557"];
d235 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="var sentMessage = false", span="570-570"];
d237 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label=reqs, span="573-573"];
d247 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
d250 [cluster="lambda expression", label="Entry lambda expression", span="572-572"];
d252 [cluster="lambda expression", label="Exit lambda expression", span="572-572"];
d253 [cluster="QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", span="149-149"];
d240 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="request.StartTimeUtc > request.EndTimeUtc", span="579-579"];
d241 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="request.StartTimeUtc = request.EndTimeUtc", span="581-581"];
d243 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="sentMessage = true", span="585-585"];
d248 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1727-1727"];
d246 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="568-568"];
d249 [cluster="Unk.GetHistory", label="Entry Unk.GetHistory", span=""];
d275 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="623-623"];
d276 [cluster="lambda expression", label="Entry lambda expression", span="625-625"];
d279 [cluster="lambda expression", label="Entry lambda expression", span="625-633"];
d337 [label="QuantConnect.Resolution?", span=""];
d338 [label=int, span=""];
d284 [cluster="lambda expression", label="Exit lambda expression", span="625-633"];
d285 [cluster="lambda expression", label="Entry lambda expression", span="632-632"];
d339 [label=start, span=""];
d340 [label=end, span=""];
d287 [cluster="lambda expression", label="Exit lambda expression", span="632-632"];
d288 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="resolution = resolution ?? subscription.Resolution", span="638-638"];
d289 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var dataType = subscription.IsCustomData ? subscription.Type : LeanData.GetDataType(resolution.Value, subscription.TickType)", span="641-641"];
d291 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="return request;", span="651-651"];
d293 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="139-139"];
d295 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Symbol, System.Type)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Symbol, System.Type)", span="654-654"];
d296 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
d307 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="244-244"];
d311 [cluster="lambda expression", label="Entry lambda expression", span="675-675"];
d341 [label="QuantConnect.Symbol", span=""];
d342 [label=resolution, span=""];
d343 [label=timeZone, span=""];
d313 [cluster="lambda expression", label="Exit lambda expression", span="675-675"];
d314 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
d315 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", label="Security security", span="681-681"];
d317 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", label="return security.Exchange.Hours;", span="684-684"];
d319 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", span="679-679"];
d320 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType)", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="202-202"];
d321 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", label="Security security", span="692-692"];
d323 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", label="return resolution ?? security.Resolution;", span="695-695"];
d325 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", span="690-690"];
d335 [label="bool?", span=""];
d336 [label="bool?", span=""];
d292 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="636-636"];
d305 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
d306 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
d308 [cluster="lambda expression", label="Entry lambda expression", span="666-666"];
d48 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
d77 [cluster="lambda expression", label="return null;", span="248-248"];
d230 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="559-559"];
d91 [cluster="lambda expression", label="Exit lambda expression", span="255-255"];
d90 [cluster="lambda expression", label="x != null", span="255-255"];
d98 [cluster="lambda expression", label="return null;", span="273-273"];
d103 [cluster="lambda expression", label="Exit lambda expression", span="278-278"];
d102 [cluster="lambda expression", label="x != null", span="278-278"];
d111 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var securityType = symbol.ID.SecurityType", span="307-307"];
d123 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="331-331"];
d173 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="435-435"];
d122 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="resolution == Resolution.Tick", span="331-331"];
d137 [cluster="ArgumentException.cstr", label="Entry ArgumentException.cstr", span=""];
d138 [cluster="QuantConnect.Symbol.ToString()", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
d141 [cluster="lambda expression", label="Exit lambda expression", span="339-339"];
d140 [cluster="lambda expression", label="x.Type.Name", span="339-339"];
d156 [cluster="lambda expression", label="Exit lambda expression", span="365-365"];
d155 [cluster="lambda expression", label="x.Type.Name", span="365-365"];
d158 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="var securityType = symbol.ID.SecurityType", span="382-382"];
d165 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var securityType = symbol.ID.SecurityType", span="401-401"];
d215 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="498-498"];
d217 [cluster="System.Math.Max(int, int)", label="Entry System.Math.Max(int, int)", span="0-0"];
d277 [cluster="lambda expression", label="!x.IsCanonical()", span="625-625"];
d219 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
d220 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
d214 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="return null;", span="550-550"];
d228 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
d229 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
d242 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="!sentMessage", span="583-583"];
d278 [cluster="lambda expression", label="Exit lambda expression", span="625-625"];
d310 [cluster="lambda expression", label="Exit lambda expression", span="666-666"];
d309 [cluster="lambda expression", label="s.Resolution", span="666-666"];
m0_2 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, QuantConnect.AlgorithmStatus, string)", file="AlgorithmStatusPacket.cs", label="Entry QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, QuantConnect.AlgorithmStatus, string)", span="67-67"];
m0_3 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, QuantConnect.AlgorithmStatus, string)", file="AlgorithmStatusPacket.cs", label="Status = status", span="70-70"];
m0_4 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, QuantConnect.AlgorithmStatus, string)", file="AlgorithmStatusPacket.cs", label="AlgorithmId = algorithmId", span="71-71"];
m0_5 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, QuantConnect.AlgorithmStatus, string)", file="AlgorithmStatusPacket.cs", label="Message = message", span="72-72"];
m0_6 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, QuantConnect.AlgorithmStatus, string)", file="AlgorithmStatusPacket.cs", label="Exit QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, QuantConnect.AlgorithmStatus, string)", span="67-67"];
m0_0 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket()", file="AlgorithmStatusPacket.cs", label="Entry QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket()", span="60-60"];
m0_1 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket()", file="AlgorithmStatusPacket.cs", label="Exit QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket()", span="60-60"];
m0_7 [file="AlgorithmStatusPacket.cs", label="QuantConnect.Packets.AlgorithmStatusPacket", span=""];
m1_26 [cluster="System.GC.Collect(int, System.GCCollectionMode, bool)", file="BacktestingBrokerage.cs", label="Entry System.GC.Collect(int, System.GCCollectionMode, bool)", span="0-0"];
m1_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.TestLiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.TestLiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket)", span="36-36"];
m1_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.TestLiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket)", file="BacktestingBrokerage.cs", label="_start = DateTime.Now", span="39-39"];
m1_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.TestLiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket)", file="BacktestingBrokerage.cs", label="_current = DateTime.Now", span="40-40"];
m1_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.TestLiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket)", file="BacktestingBrokerage.cs", label="_tickResolution = TimeSpan.FromSeconds(1)", span="41-41"];
m1_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.TestLiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.TestLiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket)", span="36-36"];
m1_25 [cluster="System.Threading.Thread.Sleep(int)", file="BacktestingBrokerage.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", span="48-48"];
m1_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="var ticks = new List<Tick>()", span="50-50"];
m1_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="var sw = Stopwatch.StartNew()", span="51-51"];
m1_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="ticks.Add(new Tick\r\n                {\r\n                    Symbol = ''EURUSD'',\r\n                    Time = _current,\r\n                    Quantity = 10,\r\n                    Value = price,\r\n                    BidPrice = price * 0.99m,\r\n                    AskPrice = price * 1.01m,\r\n                    SaleCondition = '''',\r\n                    DataType = MarketDataType.Tick,\r\n                    Exchange = ''ABC'',\r\n                    Suspicious = false\r\n                })", span="56-68"];
m1_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="return ticks;", span="72-72"];
m1_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="var i = 0", span="52-52"];
m1_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="sw.ElapsedMilliseconds < _delay", span="70-70"];
m1_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="i < _fastForward", span="52-52"];
m1_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="i++", span="52-52"];
m1_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="_current += _tickResolution", span="54-54"];
m1_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="var price = ComputeNextSineValue(_start, _current, _period)", span="55-55"];
m1_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="Thread.Sleep(1)", span="70-70"];
m1_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="GC.Collect(3, GCCollectionMode.Forced, true)", span="71-71"];
m1_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.GetNextTicks()", span="48-48"];
m1_20 [cluster="System.Collections.Generic.List<T>.List()", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_23 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="97-97"];
m1_21 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="BacktestingBrokerage.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m1_30 [cluster="System.Math.Sin(double)", file="BacktestingBrokerage.cs", label="Entry System.Math.Sin(double)", span="0-0"];
m1_5 [cluster="System.TimeSpan.FromSeconds(double)", file="BacktestingBrokerage.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m1_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.ComputeNextSineValue(System.DateTime, System.DateTime, System.TimeSpan)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.ComputeNextSineValue(System.DateTime, System.DateTime, System.TimeSpan)", span="83-83"];
m1_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.ComputeNextSineValue(System.DateTime, System.DateTime, System.TimeSpan)", file="BacktestingBrokerage.cs", label="var percentage = ((current - start).TotalHours / period.TotalHours)", span="85-85"];
m1_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.ComputeNextSineValue(System.DateTime, System.DateTime, System.TimeSpan)", file="BacktestingBrokerage.cs", label="return ( (decimal) Math.Sin(percentage) * 100 ) + 1000;", span="87-87"];
m1_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.ComputeNextSineValue(System.DateTime, System.DateTime, System.TimeSpan)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.ComputeNextSineValue(System.DateTime, System.DateTime, System.TimeSpan)", span="83-83"];
m1_31 [file="BacktestingBrokerage.cs", label="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed", span=""];
m2_193 [cluster="QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", span="40-40"];
m2_348 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="444-444"];
m2_158 [cluster="QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", span="85-85"];
m2_72 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m2_231 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
m2_329 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="841-841"];
m2_330 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="841-841"];
m2_19 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_215 [cluster="System.DateTime.ToString(string)", file="BacktestingResultHandler.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m2_223 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="580-580"];
m2_224 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="message == _errorMessage", span="582-582"];
m2_228 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="Messages.Enqueue(new HandledErrorPacket(_backtestId, message, stacktrace))", span="584-584"];
m2_229 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="_errorMessage = message", span="585-585"];
m2_225 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="return;", span="582-582"];
m2_226 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="Messages.Count > 500", span="583-583"];
m2_227 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="return;", span="583-583"];
m2_230 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="580-580"];
m2_17 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="115-115"];
m2_195 [cluster="System.Console.SetError(System.IO.TextWriter)", file="BacktestingResultHandler.cs", label="Entry System.Console.SetError(System.IO.TextWriter)", span="0-0"];
m2_196 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="529-529"];
m2_197 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="message == _debugMessage", span="531-531"];
m2_199 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="message.Trim() == ''''", span="532-532"];
m2_204 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="message.Length > _debugMessageLength", span="537-537"];
m2_205 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="message = message.Substring(0, 100) + ''...''", span="539-539"];
m2_207 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _backtestId, _compileId, message))", span="547-547"];
m2_208 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="550-550"];
m2_209 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="_debugMessage = message", span="551-551"];
m2_198 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="return;", span="531-531"];
m2_200 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="return;", span="532-532"];
m2_201 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="Messages.Count > 500", span="533-533"];
m2_202 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="return;", span="533-533"];
m2_203 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="_debugMessageCount++ < _debugMessageMax", span="535-535"];
m2_206 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="message = ''Maximum '' + _debugMessageMax + '' messages of '' + _debugMessageLength + '' characters per '' + _debugMessagePeriod + ''. This is to avoid crashing your browser. If you'd like more please use Log() command instead.''", span="544-544"];
m2_210 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="529-529"];
m2_121 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="409-409"];
m2_143 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="var serialized = ''''", span="412-412"];
m2_146 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="packet.Type != PacketType.BacktestResult", span="420-420"];
m2_148 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="var result = packet as BacktestResultPacket", span="423-423"];
m2_153 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="_api.Store(serialized, key, StoragePermissions.Authenticated, async)", span="439-439"];
m2_144 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="var key = ''''", span="413-413"];
m2_145 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label=_chartLock, span="417-417"];
m2_147 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="return;", span="420-420"];
m2_149 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="result != null", span="425-425"];
m2_151 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="serialized = JsonConvert.SerializeObject(result.Results)", span="431-431"];
m2_150 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="key = ''backtests/'' + _job.UserId + ''/'' + _job.ProjectId + ''/'' + _job.BacktestId + ''.json''", span="428-428"];
m2_152 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="Log.Error(''BacktestingResultHandler.StoreResult(): Result Null.'')", span="435-435"];
m2_154 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label=Exception, span="442-442"];
m2_155 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="Log.Error(err)", span="444-444"];
m2_156 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="409-409"];
m2_247 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_254 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="650-650"];
m2_255 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Sample(''Strategy Equity'', ''Daily Performance'', 1, SeriesType.Bar, time, value, ''%'')", span="653-653"];
m2_256 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="650-650"];
m2_257 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="662-662"];
m2_258 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value, ''$'')", span="664-664"];
m2_259 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="662-662"];
m2_139 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_171 [cluster="QuantConnect.Interfaces.IMessagingHandler.BacktestResult(QuantConnect.Packets.BacktestResultPacket, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.BacktestResult(QuantConnect.Packets.BacktestResultPacket, bool)", span="95-95"];
m2_119 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>)", span="239-239"];
m2_250 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="636-636"];
m2_251 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value, ''$'')", span="639-639"];
m2_252 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="_daysProcessed = (time - _job.PeriodStart).TotalDays", span="642-642"];
m2_253 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="636-636"];
m2_271 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="702-702"];
m2_272 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="var logURL = ProcessLogMessages(_job)", span="705-705"];
m2_273 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="logURL != ''''", span="706-706"];
m2_274 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="DebugMessage(''Your log was successfully created and can be downloaded from: '' + logURL)", span="706-706"];
m2_275 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="_exitTriggered = true", span="709-709"];
m2_276 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="702-702"];
m2_270 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m2_79 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m2_12 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
m2_216 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="558-558"];
m2_217 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="BacktestingResultHandler.cs", label="_log.Add(_algorithm.Time.ToString( DateFormat.UI ) + '' '' + message)", span="560-560"];
m2_218 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="558-558"];
m2_282 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="741-741"];
m2_283 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="741-741"];
m2_16 [cluster="QuantConnect.Chart.Chart(string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Chart.Chart(string)", span="60-60"];
m2_326 [cluster="System.Math.Min(int, int)", file="BacktestingResultHandler.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m2_136 [cluster="System.Collections.Generic.List<T>.List()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_357 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Entry lambda expression", span="882-882"];
m2_123 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Entry lambda expression", span="319-319"];
m2_126 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Entry lambda expression", span="319-319"];
m2_124 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="t.Key", span="319-319"];
m2_125 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Exit lambda expression", span="319-319"];
m2_127 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="t.Value", span="319-319"];
m2_128 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Exit lambda expression", span="319-319"];
m2_140 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Entry lambda expression", span="389-389"];
m2_141 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="x.Values.Count", span="389-389"];
m2_142 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Exit lambda expression", span="389-389"];
m2_351 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Entry lambda expression", span="874-874"];
m2_354 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Entry lambda expression", span="878-878"];
m2_352 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="DebugMessage(x)", span="874-874"];
m2_353 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Exit lambda expression", span="874-874"];
m2_355 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="ErrorMessage(x)", span="878-878"];
m2_356 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Exit lambda expression", span="878-878"];
m2_358 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="LogMessage(x)", span="882-882"];
m2_359 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Exit lambda expression", span="882-882"];
m2_239 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="610-610"];
m2_240 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label=_chartLock, span="612-612"];
m2_241 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="!Charts.ContainsKey(chartName)", span="615-615"];
m2_242 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="Charts.AddOrUpdate(chartName, new Chart(chartName))", span="617-617"];
m2_243 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="!Charts[chartName].Series.ContainsKey(seriesName)", span="621-621"];
m2_244 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="623-623"];
m2_245 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="627-627"];
m2_246 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="610-610"];
m2_213 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", span="59-59"];
m2_20 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="195-195"];
m2_21 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_api = api", span="197-197"];
m2_22 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_messagingHandler = messagingHandler", span="198-198"];
m2_23 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_transactionHandler = transactionHandler", span="199-199"];
m2_24 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_job = (BacktestNodePacket)job", span="200-200"];
m2_25 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_job == null", span="201-201"];
m2_26 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="throw new Exception(''BacktestingResultHandler.Constructor(): Submitted Job type invalid.'');", span="201-201"];
m2_27 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_compileId = _job.CompileId", span="202-202"];
m2_28 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_backtestId = _job.BacktestId", span="203-203"];
m2_29 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="var totalMinutes = (_job.PeriodFinish - _job.PeriodStart).TotalMinutes", span="206-206"];
m2_30 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="var resampleMinutes = (totalMinutes < (_minimumSamplePeriod * _samples)) ? _minimumSamplePeriod : (totalMinutes / _samples)", span="207-207"];
m2_31 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_resamplePeriod = TimeSpan.FromMinutes(resampleMinutes)", span="208-208"];
m2_32 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="Log.Trace(''BacktestingResultHandler(): Sample Period Set: '' + resampleMinutes.ToString(''00.00''))", span="209-209"];
m2_33 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="195-195"];
m2_331 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="851-851"];
m2_332 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="var time = _algorithm.Time", span="853-853"];
m2_333 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="time > _nextSample || forceProcess", span="855-855"];
m2_334 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_nextSample = time.Add(ResamplePeriod)", span="858-858"];
m2_335 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="861-861"];
m2_338 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="SampleAssetPrices(security.Symbol, time, security.Price)", span="869-869"];
m2_339 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.DebugMessages.ForEach(x => DebugMessage(x))", span="874-874"];
m2_336 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="SampleRange(_algorithm.GetChartUpdates())", span="864-864"];
m2_337 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.Securities.Values", span="867-867"];
m2_340 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.DebugMessages.Clear()", span="875-875"];
m2_341 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.ErrorMessages.ForEach(x => ErrorMessage(x))", span="878-878"];
m2_342 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.ErrorMessages.Clear()", span="879-879"];
m2_343 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.LogMessages.ForEach(x => LogMessage(x))", span="882-882"];
m2_344 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.LogMessages.Clear()", span="883-883"];
m2_345 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="851-851"];
m2_78 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", span="300-300"];
m2_80 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Algorithm == null || Algorithm.Transactions == null || _processingFinalPacket", span="305-305"];
m2_81 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="return;", span="307-307"];
m2_82 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="DateTime.Now <= _nextUpdate || !(_daysProcessed > (_lastDaysProcessed + 1))", span="310-310"];
m2_83 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="return;", span="310-310"];
m2_84 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var deltaOrders = new Dictionary<int, Order>()", span="313-313"];
m2_85 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="deltaOrders = (from order in _transactionHandler.Orders\r\n                        where order.Value.Time.Date >= _lastUpdate && order.Value.Status == OrderStatus.Filled\r\n                        select order).ToDictionary(t => t.Key, t => t.Value)", span="317-319"];
m2_86 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=Exception, span="321-321"];
m2_88 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="deltaOrders.Count > 50", span="327-327"];
m2_89 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="deltaOrders.Clear()", span="327-327"];
m2_107 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var splitPackets = SplitPackets(deltaCharts, deltaOrders, progress)", span="366-366"];
m2_87 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Log.Error(err, ''Transactions'')", span="323-323"];
m2_90 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="_lastUpdate = Algorithm.Time.Date", span="332-332"];
m2_91 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="_lastDaysProcessed = _daysProcessed", span="333-333"];
m2_92 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="_nextUpdate = DateTime.Now.AddSeconds(0.5)", span="334-334"];
m2_93 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=Exception, span="336-336"];
m2_95 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var deltaCharts = new Dictionary<string, Chart>()", span="341-341"];
m2_94 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Log.Error(err, ''Can't update variables'')", span="338-338"];
m2_96 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=_chartLock, span="342-342"];
m2_98 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="deltaCharts.Add(chart.Name, chart.GetUpdates())", span="347-347"];
m2_97 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Charts.Values", span="345-345"];
m2_99 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var progress = Convert.ToDecimal(_daysProcessed / _jobDays)", span="352-352"];
m2_100 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="progress > 0.999m", span="353-353"];
m2_103 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var complete = new BacktestResultPacket(_job, completeResult, progress)", span="357-357"];
m2_101 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="progress = 0.999m", span="353-353"];
m2_102 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var completeResult = new BacktestResult(Charts, _transactionHandler.Orders, Algorithm.Transactions.TransactionRecord, new Dictionary<string, string>(), new Dictionary<string, AlgorithmPerformance>())", span="356-356"];
m2_104 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="DateTime.Now > _nextS3Update", span="359-359"];
m2_106 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="StoreResult(complete, false)", span="362-362"];
m2_105 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="_nextS3Update = DateTime.Now.AddSeconds(30)", span="361-361"];
m2_108 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=splitPackets, span="368-368"];
m2_109 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="_messagingHandler.Send(backtestingPacket)", span="370-370"];
m2_110 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=Exception, span="373-373"];
m2_111 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Log.Error(err)", span="375-375"];
m2_112 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", span="300-300"];
m2_238 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)", span="54-54"];
m2_38 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="215-215"];
m2_39 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="var lastMessage = ''''", span="218-218"];
m2_40 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_lastDaysProcessed = 5", span="219-219"];
m2_49 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="lastMessage != debug.Message", span="245-245"];
m2_41 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="!(_exitTriggered && Messages.Count == 0)", span="227-227"];
m2_42 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Messages.Count == 0", span="230-230"];
m2_65 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label=Exception, span="285-285"];
m2_68 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Log.Trace(''BacktestingResultHandler.Run(): Ending Thread...'')", span="293-293"];
m2_43 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Thread.Sleep(50)", span="232-232"];
m2_44 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Packet packet", span="237-237"];
m2_45 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Messages.TryDequeue(out packet)", span="238-238"];
m2_46 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="packet.Type", span="240-240"];
m2_64 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Update()", span="281-281"];
m2_48 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="var debug = packet as DebugPacket", span="244-244"];
m2_53 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="var securityPacket = packet as SecurityTypesPacket", span="255-255"];
m2_56 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="var runtime = packet as RuntimeErrorPacket", span="261-261"];
m2_59 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="var handled = packet as HandledErrorPacket", span="266-266"];
m2_62 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_messagingHandler.Send(packet)", span="273-273"];
m2_63 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Log.Trace(''BacktestingResultHandler.Run(): Default packet type: '' + packet.Type)", span="274-274"];
m2_47 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="PacketType.Debug", span="243-243"];
m2_52 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="PacketType.SecurityTypes", span="254-254"];
m2_55 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="PacketType.RuntimeError", span="259-259"];
m2_58 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="PacketType.HandledError", span="265-265"];
m2_50 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_messagingHandler.DebugMessage(debug.Message, debug.ProjectId, _backtestId, _compileId)", span="248-248"];
m2_51 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="lastMessage = debug.Message", span="249-249"];
m2_54 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_messagingHandler.SecurityTypes(securityPacket)", span="256-256"];
m2_57 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_messagingHandler.RuntimeError(_backtestId, runtime.Message, runtime.StackTrace)", span="262-262"];
m2_60 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Log.Error(''BacktestingResultHandler.Run(): HandledError Packet: '' + handled.Message)", span="267-267"];
m2_61 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_messagingHandler.Send(handled)", span="268-268"];
m2_66 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Log.Error(err)", span="288-288"];
m2_67 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_algorithm.RunTimeError = err", span="290-290"];
m2_69 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_isActive = false", span="294-294"];
m2_70 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="215-215"];
m2_37 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m2_114 [cluster="Unk.ToDictionary", file="BacktestingResultHandler.cs", label="Entry Unk.ToDictionary", span=""];
m2_14 [cluster="object.Object()", file="BacktestingResultHandler.cs", label="Entry object.Object()", span="0-0"];
m2_350 [cluster="System.Collections.Generic.List<T>.Clear()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m2_75 [cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="80-80"];
m2_118 [cluster="System.Convert.ToDecimal(double)", file="BacktestingResultHandler.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m2_192 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="566-566"];
m2_219 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="BacktestingResultHandler.cs", label="var packet = new SecurityTypesPacket\r\n            {\r\n                Types = types\r\n            }", span="568-571"];
m2_220 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="BacktestingResultHandler.cs", label="Messages.Enqueue(packet)", span="572-572"];
m2_221 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="566-566"];
m2_159 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="457-457"];
m2_160 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="var charts = new Dictionary<string, Chart>(Charts)", span="462-462"];
m2_162 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="BacktestResultPacket result = new BacktestResultPacket((BacktestNodePacket) job,\r\n                    new BacktestResult(charts, orders, profitLoss, statisticsResults.Summary, statisticsResults.RollingPerformances), 1m)\r\n                {\r\n                    ProcessingTime = (DateTime.Now - _startTime).TotalSeconds,\r\n                    DateFinished = DateTime.Now,\r\n                    Progress = 1\r\n                }", span="466-472"];
m2_161 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="_processingFinalPacket = true", span="463-463"];
m2_163 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="StoreResult(result)", span="475-475"];
m2_164 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="result.Results = new BacktestResult()", span="478-478"];
m2_165 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="_messagingHandler.BacktestResult(result, finalPacket: true)", span="481-481"];
m2_166 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="Log.Trace(''BacktestingResultHandler.SendAnalysisResult(): Processed final packet'')", span="483-483"];
m2_167 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label=Exception, span="485-485"];
m2_168 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="Log.Error(err)", span="487-487"];
m2_169 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="457-457"];
m2_117 [cluster="QuantConnect.Chart.GetUpdates()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Chart.GetUpdates()", span="87-87"];
m2_120 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", span="171-171"];
m2_278 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="717-717"];
m2_279 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="717-717"];
m2_34 [cluster="System.Exception.Exception(string)", file="BacktestingResultHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m2_194 [cluster="System.Console.SetOut(System.IO.TextWriter)", file="BacktestingResultHandler.cs", label="Entry System.Console.SetOut(System.IO.TextWriter)", span="0-0"];
m2_260 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="671-671"];
m2_261 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label=_chartLock, span="673-673"];
m2_262 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label=updates, span="675-675"];
m2_263 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="!Charts.ContainsKey(update.Name)", span="678-678"];
m2_264 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name))", span="680-680"];
m2_265 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="update.Series.Values", span="684-684"];
m2_266 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="687-687"];
m2_267 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit))", span="689-689"];
m2_268 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="693-693"];
m2_269 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="671-671"];
m2_13 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m2_190 [cluster="System.Convert.ToInt32(int)", file="BacktestingResultHandler.cs", label="Entry System.Convert.ToInt32(int)", span="0-0"];
m2_77 [cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50"];
m2_191 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m2_280 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="730-730"];
m2_281 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="730-730"];
m2_172 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="496-496"];
m2_173 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_algorithm = algorithm", span="498-498"];
m2_184 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="var debug = new FuncTextWriter(algorithm.Debug)", span="519-519"];
m2_185 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="var error = new FuncTextWriter(algorithm.Error)", span="520-520"];
m2_174 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_jobDays = Time.TradeableDates(Algorithm.Securities.Values, _job.PeriodStart, _job.PeriodFinish)", span="501-501"];
m2_175 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_debugMessageMax = Convert.ToInt32(10 * _jobDays)", span="504-504"];
m2_176 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_debugMessageMax < _debugMessageMin", span="506-506"];
m2_177 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_debugMessageMax = _debugMessageMin", span="506-506"];
m2_178 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_debugMessagePeriod = ''backtest''", span="508-508"];
m2_179 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="var types = new List<SecurityType>()", span="511-511"];
m2_180 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_algorithm.Securities.Values", span="512-512"];
m2_181 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="!types.Contains(security.Type)", span="514-514"];
m2_182 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="types.Add(security.Type)", span="514-514"];
m2_183 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="SecurityType(types)", span="516-516"];
m2_186 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Console.SetOut(debug)", span="521-521"];
m2_187 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Console.SetError(error)", span="522-522"];
m2_188 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="496-496"];
m2_347 [cluster="System.Math.Round(decimal, int)", file="BacktestingResultHandler.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m2_115 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m2_170 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m2_277 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", span="770-770"];
m2_289 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var remoteUrl = @''http://data.quantconnect.com/''", span="772-772"];
m2_293 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var allowance = _api.ReadLogAllowance(job.UserId, job.Channel)", span="781-781"];
m2_299 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var key = ''backtests/'' + job.UserId + ''/'' + job.ProjectId + ''/'' + job.AlgorithmId + ''-log.txt''", span="788-788"];
m2_310 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="job.UserPlan == UserPlan.Free", span="809-809"];
m2_318 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="_api.UpdateDailyLogUsed(job.UserId, job.AlgorithmId, remoteUrl, logLength, job.Channel, hitLimit)", span="828-828"];
m2_290 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var logLength = 0", span="773-773"];
m2_300 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="remoteUrl += key", span="789-789"];
m2_291 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="!_log.Any()", span="778-778"];
m2_302 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="(logLength + line.Length) < logRemaining", span="793-793"];
m2_304 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="logLength += line.Length", span="796-796"];
m2_292 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="return '''';", span="778-778"];
m2_294 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var logBacktestMax = allowance[0]", span="782-782"];
m2_295 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var logDailyMax = allowance[1]", span="783-783"];
m2_296 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var logRemaining = Math.Min(logBacktestMax, allowance[2])", span="784-784"];
m2_305 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var btMax = Math.Round((double)logBacktestMax / 1024, 0) + ''kb''", span="800-800"];
m2_306 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var dyMax = Math.Round((double)logDailyMax / 1024, 0) + ''kb''", span="801-801"];
m2_297 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var hitLimit = false", span="785-785"];
m2_298 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var serialized = ''''", span="786-786"];
m2_303 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="serialized += line + ''\r\n''", span="795-795"];
m2_314 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="serialized += capNotice", span="818-818"];
m2_317 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="_api.Store(serialized, key, StoragePermissions.Public)", span="826-826"];
m2_301 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label=_log, span="791-791"];
m2_321 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="Log.Trace(''BacktestingResultHandler.ProcessLogMessages(): Ready: '' + remoteUrl)", span="834-834"];
m2_322 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="return remoteUrl;", span="835-835"];
m2_308 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var capNotice = ''You currently have a maximum of '' + btMax + '' of log data per backtest, and '' + dyMax + '' total max per day.''", span="805-805"];
m2_309 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="DebugMessage(''You currently have a maximum of '' + btMax + '' of log data per backtest remaining, and '' + dyMax + '' total max per day.'')", span="806-806"];
m2_307 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="var requestMore = ''''", span="804-804"];
m2_311 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="requestMore =''Please upgrade your account and contact us to request more allocation here: https://www.quantconnect.com/contact''", span="811-811"];
m2_312 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="requestMore = ''If you require more please briefly explain request for more allocation here: https://www.quantconnect.com/contact''", span="815-815"];
m2_313 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="DebugMessage(requestMore)", span="817-817"];
m2_315 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="serialized += requestMore", span="819-819"];
m2_316 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="hitLimit = true", span="820-820"];
m2_319 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label=Exception, span="830-830"];
m2_320 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="Log.Error(err)", span="832-832"];
m2_323 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", span="770-770"];
m2_15 [cluster="System.TimeSpan.FromSeconds(double)", file="BacktestingResultHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m2_286 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="70-70"];
m2_122 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, decimal)", span="382-382"];
m2_129 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, decimal)", file="BacktestingResultHandler.cs", label="var splitPackets = new List<BacktestResultPacket>()", span="385-385"];
m2_130 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, decimal)", file="BacktestingResultHandler.cs", label="deltaCharts.Values", span="386-386"];
m2_132 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, decimal)", file="BacktestingResultHandler.cs", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { Charts = new Dictionary<string, Chart>()\r\n                {\r\n                    {chart.Name,chart}\r\n                }  }, progress))", span="391-394"];
m2_133 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, decimal)", file="BacktestingResultHandler.cs", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { Orders = deltaOrders }, progress))", span="398-398"];
m2_134 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, decimal)", file="BacktestingResultHandler.cs", label="return splitPackets;", span="400-400"];
m2_131 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, decimal)", file="BacktestingResultHandler.cs", label="chart.Series.Values.Sum(x => x.Values.Count) == 0", span="389-389"];
m2_135 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, decimal)", span="382-382"];
m2_248 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_18 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="191-191"];
m2_328 [cluster="QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="41-41"];
m2_157 [cluster="Unk.SerializeObject", file="BacktestingResultHandler.cs", label="Entry Unk.SerializeObject", span=""];
m2_212 [cluster="string.Substring(int, int)", file="BacktestingResultHandler.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_76 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m2_35 [cluster="System.TimeSpan.FromMinutes(double)", file="BacktestingResultHandler.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m2_346 [cluster="System.DateTime.Add(System.TimeSpan)", file="BacktestingResultHandler.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m2_138 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.BacktestResult.BacktestResult()", span="232-232"];
m2_232 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="593-593"];
m2_233 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="BacktestingResultHandler.cs", label="PurgeQueue()", span="595-595"];
m2_234 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="BacktestingResultHandler.cs", label="Messages.Enqueue(new RuntimeErrorPacket(_backtestId, message, stacktrace))", span="596-596"];
m2_235 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="BacktestingResultHandler.cs", label="_errorMessage = message", span="597-597"];
m2_236 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="593-593"];
m2_137 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0"];
m2_287 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="760-760"];
m2_288 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="760-760"];
m2_237 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="749-749"];
m2_284 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="BacktestingResultHandler.cs", label="Messages.Clear()", span="751-751"];
m2_285 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="749-749"];
m2_73 [cluster="QuantConnect.Interfaces.IMessagingHandler.DebugMessage(string, int, string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.DebugMessage(string, int, string, string)", span="59-59"];
m2_325 [cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="36-36"];
m2_36 [cluster="double.ToString(string)", file="BacktestingResultHandler.cs", label="Entry double.ToString(string)", span="0-0"];
m2_71 [cluster="System.Threading.Thread.Sleep(int)", file="BacktestingResultHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m2_222 [cluster="QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", span="52-52"];
m2_327 [cluster="System.Math.Round(double, int)", file="BacktestingResultHandler.cs", label="Entry System.Math.Round(double, int)", span="0-0"];
m2_74 [cluster="QuantConnect.Interfaces.IMessagingHandler.SecurityTypes(QuantConnect.Packets.SecurityTypesPacket)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SecurityTypes(QuantConnect.Packets.SecurityTypesPacket)", span="65-65"];
m2_116 [cluster="System.DateTime.AddSeconds(double)", file="BacktestingResultHandler.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m2_349 [cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0"];
m2_113 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_214 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m2_211 [cluster="string.Trim()", file="BacktestingResultHandler.cs", label="Entry string.Trim()", span="0-0"];
m2_0 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="165-165"];
m2_1 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_messages = new ConcurrentQueue<Packet>()", span="168-168"];
m2_2 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_charts = new ConcurrentDictionary<string, Chart>()", span="169-169"];
m2_3 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_chartLock = new Object()", span="170-170"];
m2_4 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_isActive = true", span="171-171"];
m2_5 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_notificationPeriod = TimeSpan.FromSeconds(2)", span="174-174"];
m2_6 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_exitTriggered = false", span="175-175"];
m2_7 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_startTime = DateTime.Now", span="178-178"];
m2_8 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="Charts.AddOrUpdate(''Strategy Equity'', new Chart(''Strategy Equity''))", span="181-181"];
m2_9 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="Charts[''Strategy Equity''].Series.Add(''Equity'', new Series(''Equity'', SeriesType.Candle, 0, ''$''))", span="182-182"];
m2_10 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="Charts[''Strategy Equity''].Series.Add(''Daily Performance'', new Series(''Daily Performance'', SeriesType.Bar, 1, ''%''))", span="183-183"];
m2_11 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="165-165"];
m2_249 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="287-287"];
m2_189 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="319-319"];
m2_360 [file="BacktestingResultHandler.cs", label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", span=""];
m3_20 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="290-290"];
m3_29 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m3_11 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="47-47"];
m3_13 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(parameters.ExpectedRelativeZipFilePath, relativePath)", span="50-50"];
m3_12 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="var relativePath = LeanData.GenerateRelativeZipFilePath(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="49-49"];
m3_14 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="47-47"];
m3_80 [cluster="string.LastIndexOf(string, System.StringComparison)", file="BrokerageSetupHandler.cs", label="Entry string.LastIndexOf(string, System.StringComparison)", span="0-0"];
m3_142 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218"];
m3_143 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", color=green, community=0, file="BrokerageSetupHandler.cs", label="DateTime date", prediction=2, span="220-220"];
m3_144 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Symbol symbol", span="221-221"];
m3_145 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Resolution resolution", span="222-222"];
m3_147 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.IsTrue(LeanData.TryParsePath(customPath, out symbol, out date, out resolution))", span="225-225"];
m3_154 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.IsTrue(LeanData.TryParsePath(mixedPathSeperators, out symbol, out date, out resolution))", span="233-233"];
m3_161 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.IsTrue(LeanData.TryParsePath(longRelativePath, out symbol, out date, out resolution))", span="241-241"];
m3_168 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.IsTrue(LeanData.TryParsePath(shortRelativePath, out symbol, out date, out resolution))", span="249-249"];
m3_175 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.IsTrue(LeanData.TryParsePath(dailyEquitiesPath, out symbol, out date, out resolution))", span="257-257"];
m3_182 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.IsTrue(LeanData.TryParsePath(minuteEquitiesPath, out symbol, out date, out resolution))", span="265-265"];
m3_189 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.IsTrue(LeanData.TryParsePath(cfdPath, out symbol, out date, out resolution))", span="273-273"];
m3_194 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="278-278"];
m3_146 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="var customPath = ''a/very/custom/path/forex/oanda/tick/eurusd/20170104_quote.zip''", span="224-224"];
m3_148 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="226-226"];
m3_149 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="227-227"];
m3_150 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(resolution, Resolution.Tick)", span="228-228"];
m3_151 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="229-229"];
m3_152 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2017-01-04'').Date)", span="230-230"];
m3_153 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="var mixedPathSeperators = @''Data//forex/fxcm\/minute//eurusd\\20160101_quote.zip''", span="232-232"];
m3_155 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="234-234"];
m3_156 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="235-235"];
m3_157 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="236-236"];
m3_158 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="237-237"];
m3_159 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="238-238"];
m3_160 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="var longRelativePath = ''../../../../../../../../../Data/forex/fxcm/hour/gbpusd.zip''", span="240-240"];
m3_162 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="242-242"];
m3_163 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="243-243"];
m3_164 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(resolution, Resolution.Hour)", span="244-244"];
m3_165 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''gbpusd'')", span="245-245"];
m3_166 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="246-246"];
m3_167 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="var shortRelativePath = ''Data/forex/fxcm/minute/eurusd/20160102_quote.zip''", span="248-248"];
m3_169 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="250-250"];
m3_170 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="251-251"];
m3_171 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="252-252"];
m3_172 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="253-253"];
m3_173 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-02'').Date)", span="254-254"];
m3_174 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="var dailyEquitiesPath = ''Data/equity/usa/daily/aapl.zip''", span="256-256"];
m3_176 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="258-258"];
m3_177 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="259-259"];
m3_178 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(resolution, Resolution.Daily)", span="260-260"];
m3_179 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''aapl'')", span="261-261"];
m3_180 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="262-262"];
m3_181 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="var minuteEquitiesPath = ''Data/equity/usa/minute/googl/20070103_trade.zip''", span="264-264"];
m3_183 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="266-266"];
m3_184 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="267-267"];
m3_185 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="268-268"];
m3_186 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''goog'')", span="269-269"];
m3_187 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2007-01-03'').Date)", span="270-270"];
m3_188 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="var cfdPath = ''Data/cfd/oanda/minute/bcousd/20160101_trade.zip''", span="272-272"];
m3_190 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Cfd)", span="274-274"];
m3_191 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="275-275"];
m3_192 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="276-276"];
m3_193 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''bcousd'')", span="277-277"];
m3_195 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218"];
m3_66 [cluster="Unk.IsInstanceOf", file="BrokerageSetupHandler.cs", label="Entry Unk.IsInstanceOf", span=""];
m3_30 [cluster="string.Split(params char[])", file="BrokerageSetupHandler.cs", label="Entry string.Split(params char[])", span="0-0"];
m3_104 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="258-258"];
m3_63 [cluster="object.GetType()", file="BrokerageSetupHandler.cs", label="Entry object.GetType()", span="0-0"];
m3_119 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="687-687"];
m3_216 [cluster="Unk.ToArray", file="BrokerageSetupHandler.cs", label="Entry Unk.ToArray", span=""];
m3_64 [cluster="System.Activator.CreateInstance(System.Type)", file="BrokerageSetupHandler.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m3_4 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="485-485"];
m3_227 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="433-433"];
m3_256 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="Data = data", span="435-435"];
m3_257 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="SecurityType = securityType", span="436-436"];
m3_258 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="Resolution = resolution", span="437-437"];
m3_259 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="ExpectedLine = expectedLine", span="438-438"];
m3_260 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="data is Tick", span="439-439"];
m3_261 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="var tick = (Tick) data", span="441-441"];
m3_263 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="data is TradeBar", span="444-444"];
m3_265 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="data is QuoteBar", span="448-448"];
m3_268 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="data.Symbol.ID.SecurityType == SecurityType.Forex || data.Symbol.ID.SecurityType == SecurityType.Cfd", span="458-458"];
m3_271 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="Name = SecurityType + ''_'' + data.GetType().Name", span="465-465"];
m3_272 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="data.GetType() != typeof (Tick) || Resolution != Resolution.Tick", span="467-467"];
m3_274 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="data is Tick", span="472-472"];
m3_275 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="Name += ''_'' + ((Tick) data).TickType", span="474-474"];
m3_267 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="throw new NotImplementedException();", span="454-454"];
m3_262 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="TickType = tick.TickType", span="442-442"];
m3_264 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="TickType = TickType.Trade", span="446-446"];
m3_266 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="TickType = TickType.Quote", span="450-450"];
m3_269 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="TickType = TickType.Quote", span="460-460"];
m3_270 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="Config = new SubscriptionDataConfig(Data.GetType(), Data.Symbol, Resolution, TimeZones.Utc, TimeZones.Utc, false, true, false, false, TickType)", span="463-463"];
m3_273 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="Name += ''_'' + Resolution", span="469-469"];
m3_276 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="433-433"];
m3_234 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m3_217 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="335-335"];
m3_235 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="383-383"];
m3_237 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="383-383"];
m3_236 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="new TestCaseData(x).SetName(x.Name)", span="383-383"];
m3_218 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="new TestCaseData(x).SetName(x.Name)", span="335-335"];
m3_219 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="335-335"];
m3_81 [cluster="string.Substring(int, int)", file="BrokerageSetupHandler.cs", label="Entry string.Substring(int, int)", span="0-0"];
m3_114 [cluster="Unk.IsFalse", file="BrokerageSetupHandler.cs", label="Entry Unk.IsFalse", span=""];
m3_82 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="136-136"];
m3_88 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected, source.Source)", span="145-145"];
m3_84 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="var source = factory.GetSource(parameters.Config, parameters.Date, false)", span="139-139"];
m3_85 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="var expected = parameters.ExpectedZipFilePath", span="140-140"];
m3_86 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="parameters.SecurityType == SecurityType.Option", span="141-141"];
m3_87 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="expected += ''#'' + parameters.ExpectedZipEntryName", span="143-143"];
m3_83 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="var factory = (BaseData)Activator.CreateInstance(parameters.BaseDataType)", span="138-138"];
m3_89 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="136-136"];
m3_233 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m3_243 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="ExpectedZipEntryName = expectedZipEntryName", span="408-408"];
m3_214 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="401-401"];
m3_238 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="Symbol = symbol", span="403-403"];
m3_239 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="Date = date", span="404-404"];
m3_240 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="Resolution = resolution", span="405-405"];
m3_241 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="TickType = tickType", span="406-406"];
m3_242 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="ExpectedZipFileName = expectedZipFileName", span="407-407"];
m3_244 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="ExpectedRelativeZipFilePath = Path.Combine(expectedRelativeZipFileDirectory, expectedZipFileName).Replace(''/'', Path.DirectorySeparatorChar.ToString())", span="409-409"];
m3_246 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="Name = SecurityType + ''_'' + resolution", span="412-412"];
m3_247 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="BaseDataType = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="414-414"];
m3_248 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="symbol.ID.SecurityType == SecurityType.Option && resolution != Resolution.Tick", span="415-415"];
m3_250 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="Config = new SubscriptionDataConfig(BaseDataType, symbol, resolution, TimeZones.NewYork, TimeZones.NewYork, true, false, false, false, tickType)", span="419-419"];
m3_245 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="ExpectedZipFilePath = Path.Combine(Globals.DataFolder, ExpectedRelativeZipFilePath)", span="410-410"];
m3_249 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="BaseDataType = typeof(QuoteBar)", span="417-417"];
m3_251 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="401-401"];
m3_230 [cluster="System.TimeSpan.FromMinutes(double)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m3_255 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m3_197 [cluster="System.DateTime.Parse(string)", file="BrokerageSetupHandler.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m3_31 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="78-78"];
m3_35 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(parameters.Data.Time, parsed.Time)", span="85-85"];
m3_36 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(parameters.Data.EndTime, parsed.EndTime)", span="86-86"];
m3_37 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(parameters.Data.Symbol, parsed.Symbol)", span="87-87"];
m3_38 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(parameters.Data.Value, parsed.Value)", span="88-88"];
m3_42 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.Quantity, actual.Quantity)", span="93-93"];
m3_43 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.BidPrice, actual.BidPrice)", span="94-94"];
m3_44 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.AskPrice, actual.AskPrice)", span="95-95"];
m3_45 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.BidSize, actual.BidSize)", span="96-96"];
m3_46 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.AskSize, actual.AskSize)", span="97-97"];
m3_47 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.Exchange, actual.Exchange)", span="98-98"];
m3_48 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.SaleCondition, actual.SaleCondition)", span="99-99"];
m3_49 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.Suspicious, actual.Suspicious)", span="100-100"];
m3_54 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.Volume, actual.Volume)", span="107-107"];
m3_60 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.LastBidSize, actual.LastBidSize)", span="115-115"];
m3_61 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.LastAskSize, actual.LastAskSize)", span="116-116"];
m3_33 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var parsed = factory.Reader(parameters.Config, parameters.ExpectedLine, parameters.Data.Time.Date, false)", span="82-82"];
m3_34 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.IsInstanceOf(parameters.Config.Type, parsed)", span="84-84"];
m3_39 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="parsed is Tick", span="89-89"];
m3_40 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var expected = (Tick) parameters.Data", span="91-91"];
m3_41 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var actual = (Tick) parsed", span="92-92"];
m3_51 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var expected = (TradeBar) parameters.Data", span="104-104"];
m3_52 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var actual = (TradeBar) parsed", span="105-105"];
m3_53 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="AssertBarsAreEqual(expected, actual)", span="106-106"];
m3_56 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var expected = (QuoteBar) parameters.Data", span="111-111"];
m3_57 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var actual = (QuoteBar) parsed", span="112-112"];
m3_59 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="AssertBarsAreEqual(expected.Ask, actual.Ask)", span="114-114"];
m3_32 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var factory = (BaseData) Activator.CreateInstance(parameters.Data.GetType())", span="81-81"];
m3_50 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="parsed is TradeBar", span="102-102"];
m3_55 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="parsed is QuoteBar", span="109-109"];
m3_58 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="AssertBarsAreEqual(expected.Bid, actual.Bid)", span="113-113"];
m3_62 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="78-78"];
m3_253 [cluster="char.ToString()", file="BrokerageSetupHandler.cs", label="Entry char.ToString()", span="0-0"];
m3_141 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="723-723"];
m3_232 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m3_212 [cluster="System.DateTime.DateTime(int, int, int)", file="BrokerageSetupHandler.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m3_113 [cluster="Unk.IsTrue", file="BrokerageSetupHandler.cs", label="Entry Unk.IsTrue", span=""];
m3_115 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179"];
m3_116 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Cfd), TickType.Quote)", span="181-181"];
m3_117 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Forex), TickType.Quote)", span="182-182"];
m3_118 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179"];
m3_277 [cluster="System.NotImplementedException.NotImplementedException()", file="BrokerageSetupHandler.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m3_220 [cluster="TestCaseData.cstr", file="BrokerageSetupHandler.cs", label="Entry TestCaseData.cstr", span=""];
m3_120 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186"];
m3_125 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Assert.IsFalse(LeanData.TryParsePath(invalidPath, out symbol, out date, out resolution))", span="193-193"];
m3_127 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Assert.IsFalse(LeanData.TryParsePath(nonExistantPath, out symbol, out date, out resolution))", span="196-196"];
m3_129 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Assert.IsFalse(LeanData.TryParsePath(notAPath, out symbol, out date, out resolution))", span="199-199"];
m3_131 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Assert.IsFalse(LeanData.TryParsePath(emptyPath, out symbol, out date, out resolution))", span="202-202"];
m3_133 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Assert.IsFalse(LeanData.TryParsePath(nullPath, out symbol, out date, out resolution))", span="205-205"];
m3_135 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsTradePath, out symbol, out date, out resolution))", span="208-208"];
m3_137 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsOpenInterestPath, out symbol, out date, out resolution))", span="211-211"];
m3_139 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsQuotePath, out symbol, out date, out resolution))", span="214-214"];
m3_124 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="var invalidPath = ''forex/fxcm/eurusd/20160101_quote.zip''", span="192-192"];
m3_126 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="var nonExistantPath = ''Data/f/fxcm/eurusd/20160101_quote.zip''", span="195-195"];
m3_128 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="var notAPath = ''ooooooooooooooooooooooooooooooooooooooooooooooooooooooo''", span="198-198"];
m3_130 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="var  emptyPath = ''''", span="201-201"];
m3_132 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="string nullPath = null", span="204-204"];
m3_134 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="var optionsTradePath = ''Data/option/u sa/minute/aapl/20140606_trade_american.zip''", span="207-207"];
m3_136 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="var optionsOpenInterestPath = ''Data/option/usa/minute/aapl/20140609_openinterest_american.zip''", span="210-210"];
m3_138 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="var optionsQuotePath = ''Data/option/usa/minute/aapl/20140609_quote_american.zip''", span="213-213"];
m3_123 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Resolution resolution", span="190-190"];
m3_122 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Symbol symbol", span="189-189"];
m3_121 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="DateTime date", span="188-188"];
m3_140 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186"];
m3_196 [cluster="string.ToLower()", file="BrokerageSetupHandler.cs", label="Entry string.ToLower()", span="0-0"];
m3_21 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="61-61"];
m3_23 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(parameters.ExpectedLine, line)", span="64-64"];
m3_25 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(line.Split(',').Length, 11)", span="68-68"];
m3_27 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(line.Split(',').Length, 6)", span="73-73"];
m3_22 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var line = LeanData.GenerateLine(parameters.Data, parameters.SecurityType, parameters.Resolution)", span="63-63"];
m3_24 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="parameters.Config.Type == typeof(QuoteBar)", span="66-66"];
m3_26 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="parameters.Config.Type == typeof(TradeBar)", span="71-71"];
m3_28 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="61-61"];
m3_68 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="121-121"];
m3_76 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(normalizeZipFilePath, normalizedSourcePath)", span="132-132"];
m3_73 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var indexOfHash = normalizedSourcePath.LastIndexOf(''#'', StringComparison.Ordinal)", span="127-127"];
m3_70 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var normalizedSourcePath = new FileInfo(source.Source).FullName", span="124-124"];
m3_75 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="normalizedSourcePath = normalizedSourcePath.Substring(0, indexOfHash)", span="130-130"];
m3_72 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var normalizeZipFilePath = new FileInfo(zipFilePath).FullName", span="126-126"];
m3_74 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="indexOfHash > 0", span="128-128"];
m3_69 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var source = parameters.Data.GetSource(parameters.Config, parameters.Data.Time.Date, false)", span="123-123"];
m3_71 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="var zipFilePath = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Data.Symbol, parameters.Data.Time.Date, parameters.Resolution, parameters.TickType)", span="125-125"];
m3_77 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="121-121"];
m3_0 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="33-33"];
m3_2 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(parameters.ExpectedZipFileName, zip)", span="36-36"];
m3_1 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="var zip = LeanData.GenerateZipFileName(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="35-35"];
m3_3 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="33-33"];
m3_5 [cluster="Unk.AreEqual", file="BrokerageSetupHandler.cs", label="Entry Unk.AreEqual", span=""];
m3_231 [cluster="System.TimeSpan.FromDays(double)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m3_16 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="54-54"];
m3_18 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(parameters.ExpectedZipFilePath, path)", span="57-57"];
m3_17 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="var path = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="56-56"];
m3_19 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="54-54"];
m3_207 [cluster="Unk.Fail", file="BrokerageSetupHandler.cs", label="Entry Unk.Fail", span=""];
m3_254 [cluster="string.Replace(string, string)", file="BrokerageSetupHandler.cs", label="Entry string.Replace(string, string)", span="0-0"];
m3_90 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="149-149"];
m3_95 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tickType)", span="156-156"];
m3_97 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Second, TickType.OpenInterest), openInterestType)", span="159-159"];
m3_99 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Minute, TickType.Quote), quoteBarType)", span="162-162"];
m3_101 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Hour, TickType.Trade), tradeBarType)", span="165-165"];
m3_96 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Daily, TickType.OpenInterest), tickType)", span="157-157"];
m3_91 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="var tickType = typeof(Tick)", span="151-151"];
m3_94 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="var tradeBarType = typeof(TradeBar)", span="154-154"];
m3_92 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="var openInterestType = typeof(OpenInterest)", span="152-152"];
m3_98 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), openInterestType)", span="160-160"];
m3_93 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="var quoteBarType = typeof(QuoteBar)", span="153-153"];
m3_100 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Second, TickType.Trade), quoteBarType)", span="163-163"];
m3_102 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tradeBarType)", span="166-166"];
m3_103 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="149-149"];
m3_222 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="338-338"];
m3_224 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="BrokerageSetupHandler.cs", label="return new List<LeanDataLineTestParameters>\r\n            {\r\n                //equity\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY, Value = 1, Quantity = 2, TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Equity, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Equity, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Equity, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // options\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, null, 0, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)) {Bid = null}, SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,,,,,0,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, null, 0, TimeSpan.FromDays(1)) {Ask = null}, SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,,,,,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new Tick(time, Symbols.SPY_P_192_Feb19_2016, 0, 1, 3) {Value = 2m, TickType = TickType.Quote, BidSize = 2, AskSize = 4, Exchange = ''EX'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,30000,4,EX,1''),\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY_P_192_Feb19_2016, Value = 1, Quantity = 2,TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // forex\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.EURUSD, BidPrice = 1, Value =1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Forex, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Forex, Resolution.Minute, ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Forex, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n\r\n                // cfd\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.DE10YBEUR, BidPrice = 1, Value = 1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Cfd, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Cfd, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Cfd, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="341-383"];
m3_223 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="BrokerageSetupHandler.cs", label="var time = new DateTime(2016, 02, 18, 9, 30, 0)", span="340-340"];
m3_225 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="338-338"];
m3_9 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="40-40"];
m3_8 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(parameters.ExpectedZipEntryName, entry)", span="43-43"];
m3_6 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="40-40"];
m3_7 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="BrokerageSetupHandler.cs", label="var entry = LeanData.GenerateZipEntryName(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="42-42"];
m3_78 [cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="160-160"];
m3_252 [cluster="System.IO.Path.Combine(string, string)", file="BrokerageSetupHandler.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m3_112 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="274-274"];
m3_226 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="BrokerageSetupHandler.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m3_79 [cluster="System.IO.FileInfo.FileInfo(string)", file="BrokerageSetupHandler.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m3_15 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="350-350"];
m3_105 [cluster="Unk.AreNotEqual", file="BrokerageSetupHandler.cs", label="Entry Unk.AreNotEqual", span=""];
m3_10 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="372-372"];
m3_215 [cluster="Unk.Select", file="BrokerageSetupHandler.cs", label="Entry Unk.Select", span=""];
m3_65 [cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144"];
m3_221 [cluster="Unk.SetName", file="BrokerageSetupHandler.cs", label="Entry Unk.SetName", span=""];
m3_67 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", span="281-281"];
m3_202 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.Open, actual.Open)", span="291-291"];
m3_203 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.High, actual.High)", span="292-292"];
m3_204 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.Low, actual.Low)", span="293-293"];
m3_205 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="BrokerageSetupHandler.cs", label="Assert.AreEqual(expected.Close, actual.Close)", span="294-294"];
m3_200 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="BrokerageSetupHandler.cs", label="expected == null && actual != null", span="287-287"];
m3_201 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="BrokerageSetupHandler.cs", label="Assert.Fail(''Expected null bar'')", span="289-289"];
m3_198 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="BrokerageSetupHandler.cs", label="expected == null && actual == null", span="283-283"];
m3_199 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="BrokerageSetupHandler.cs", label="return;", span="285-285"];
m3_206 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", span="281-281"];
m3_228 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m3_208 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297"];
m3_210 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="BrokerageSetupHandler.cs", label="return new List<LeanDataTestParameters>\r\n            {\r\n                // equity\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Tick, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_Trade_Tick.csv'', ''equity/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Second, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_second_trade.csv'', ''equity/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Minute, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_minute_trade.csv'', ''equity/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Hour, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Daily, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/daily''),\r\n\r\n                // equity option trades\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_tick_trade_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_tick_quote_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_second_trade_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_second_quote_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_minute_trade_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_minute_quote_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n\r\n                // forex\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_tick_quote.csv'', ''forex/fxcm/tick/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_second_quote.csv'', ''forex/fxcm/second/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_minute_quote.csv'', ''forex/fxcm/minute/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Hour, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Daily, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/daily''),\r\n\r\n                // cfd\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_tick_quote.csv'', ''cfd/fxcm/tick/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_second_quote.csv'', ''cfd/fxcm/second/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_minute_quote.csv'', ''cfd/fxcm/minute/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Hour, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Daily, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/daily''),\r\n\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="300-335"];
m3_209 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="BrokerageSetupHandler.cs", label="var date = new DateTime(2016, 02, 17)", span="299-299"];
m3_211 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297"];
m3_106 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="170-170"];
m3_110 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", color=green, community=0, file="BrokerageSetupHandler.cs", label="Assert.IsFalse(LeanData.IsCommonLeanDataType(typeof(Bitcoin)))", prediction=3, span="175-175"];
m3_109 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="BrokerageSetupHandler.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(QuoteBar)))", span="174-174"];
m3_108 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="BrokerageSetupHandler.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(TradeBar)))", span="173-173"];
m3_107 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="BrokerageSetupHandler.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(OpenInterest)))", span="172-172"];
m3_111 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="170-170"];
m3_229 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m3_279 [file="BrokerageSetupHandler.cs", label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", span=""];
m3_278 [file="BrokerageSetupHandler.cs", label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", span=""];
m5_13 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="BusyBlockingCollection.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m5_12 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="BusyBlockingCollection.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="51-51"];
m5_14 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", file="BusyBlockingCollection.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="62-62"];
m5_10 [cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="BusyBlockingCollection.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile, FileFormat.ZipEntryName);", prediction=4, span="55-55"];
m5_6 [cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="BusyBlockingCollection.cs", label="Entry QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="47-47"];
m5_7 [cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="BusyBlockingCollection.cs", label=isLiveMode, span="49-49"];
m5_9 [cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="BusyBlockingCollection.cs", label="var source = LeanData.GenerateZipFilePath(Globals.DataFolder, config.Symbol, date, config.Resolution, config.TickType)", prediction=5, span="54-54"];
m5_8 [cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="BusyBlockingCollection.cs", label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", prediction=6, span="51-51"];
m5_11 [cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="BusyBlockingCollection.cs", label="Exit QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="47-47"];
m5_3 [cluster="QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BusyBlockingCollection.cs", label="Exit QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="34-34"];
m5_0 [cluster="QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BusyBlockingCollection.cs", label="Entry QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="34-34"];
m5_1 [cluster="QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BusyBlockingCollection.cs", label="var symbol = LeanData.ReadSymbolFromZipEntry(config.Symbol, config.Resolution, line)", span="36-36"];
m5_2 [cluster="QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BusyBlockingCollection.cs", label="return new ZipEntryName {Time = date, Symbol = symbol};", span="37-37"];
m5_4 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="BusyBlockingCollection.cs", label="Entry QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="645-645"];
m5_5 [cluster="QuantConnect.Data.Auxiliary.ZipEntryName.ZipEntryName()", file="BusyBlockingCollection.cs", label="Entry QuantConnect.Data.Auxiliary.ZipEntryName.ZipEntryName()", span="23-23"];
m6_64 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="Entry QuantConnect.Compression.UnzipData(byte[])", span="171-171"];
m6_75 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="Log.Error(err)", span="208-208"];
m6_74 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label=Exception, span="206-206"];
m6_76 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="return data;", span="210-210"];
m6_72 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="192-192"];
m6_69 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="var entry = zipStream.GetNextEntry()", span="186-186"];
m6_68 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label=true, span="183-183"];
m6_70 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="entry != null", span="188-188"];
m6_65 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="var data = new Dictionary<string, string>()", span="174-174"];
m6_66 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="var ms = new MemoryStream(zipData)", span="178-178"];
m6_67 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="var zipStream = new ZipInputStream(ms)", span="181-181"];
m6_71 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="var buffer = new byte[entry.Size]", span="191-191"];
m6_73 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="data.Add(entry.Name, buffer.GetString())", span="195-195"];
m6_77 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="Exit QuantConnect.Compression.UnzipData(byte[])", span="171-171"];
m6_239 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Compression.cs", label="Exit QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="517-517"];
m6_236 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Compression.cs", label="var entryReader = new StreamReader(entry.OpenReader())", span="519-519"];
m6_235 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Compression.cs", label="Entry QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="517-517"];
m6_237 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Compression.cs", label="!entryReader.EndOfStream", span="521-521"];
m6_238 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Compression.cs", label="yield return entryReader.ReadLine();", span="523-523"];
m6_193 [cluster="ZipFile.cstr", file="Compression.cs", label="Entry ZipFile.cstr", span=""];
m6_113 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="Entry QuantConnect.Compression.Zip(string, string, string)", span="271-271"];
m6_116 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="stream.PutNextEntry(entry)", span="276-276"];
m6_114 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="273-273"];
m6_115 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="var entry = new ZipEntry(zipEntry)", span="275-275"];
m6_118 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="var dataReader = new MemoryStream(Encoding.Default.GetBytes(data))", span="278-278"];
m6_120 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="sourceBytes = dataReader.Read(buffer, 0, buffer.Length)", span="283-283"];
m6_121 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="stream.Write(buffer, 0, sourceBytes)", span="284-284"];
m6_117 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="var buffer = new byte[4096]", span="277-277"];
m6_119 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="int sourceBytes", span="280-280"];
m6_122 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="sourceBytes > 0", span="286-286"];
m6_123 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="Exit QuantConnect.Compression.Zip(string, string, string)", span="271-271"];
m6_277 [cluster="string.LastIndexOf(char)", file="Compression.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m6_106 [cluster="System.IO.File.OpenRead(string)", file="Compression.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m6_25 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="Compression.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m6_27 [cluster="Unk.Write", file="Compression.cs", label="Entry Unk.Write", span=""];
m6_62 [cluster="StreamWriter.cstr", file="Compression.cs", label="Entry StreamWriter.cstr", span=""];
m6_254 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="Compression.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m6_219 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="Log.Error(''Compression.ReadFirstZipEntry(): File does not exist: '' + filename)", span="485-485"];
m6_218 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="!File.Exists(filename)", span="483-483"];
m6_221 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="return ReadLinesImpl(filename, firstEntryOnly: true).Single().Value;", span="491-491"];
m6_217 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="Entry QuantConnect.Compression.ReadLines(string)", span="481-481"];
m6_223 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="Log.Error(err)", span="495-495"];
m6_220 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="return Enumerable.Empty<string>();", span="486-486"];
m6_222 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label=Exception, span="493-493"];
m6_224 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="return Enumerable.Empty<string>();", span="497-497"];
m6_225 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="Exit QuantConnect.Compression.ReadLines(string)", span="481-481"];
m6_317 [cluster="System.IO.MemoryStream.ToArray()", file="Compression.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m6_23 [cluster="System.Text.Encoding.GetBytes(string)", file="Compression.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m6_283 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Compression.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_197 [cluster="System.IO.StreamReader.Close()", file="Compression.cs", label="Entry System.IO.StreamReader.Close()", span="0-0"];
m6_291 [cluster="Unk.CreateInputTarArchive", file="Compression.cs", label="Entry Unk.CreateInputTarArchive", span=""];
m6_333 [cluster="System.Math.Max(int, int)", file="Compression.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m6_30 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Compression.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m6_276 [cluster="System.Collections.Generic.List<T>.List()", file="Compression.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_293 [cluster="System.IO.Stream.Close()", file="Compression.cs", label="Entry System.IO.Stream.Close()", span="0-0"];
m6_134 [cluster="Unk.CreateFromDirectory", file="Compression.cs", label="Entry Unk.CreateFromDirectory", span=""];
m6_5 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="var entry = new ZipEntry(filename)", span="58-58"];
m6_1 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="var success = true", span="47-47"];
m6_0 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", span="45-45"];
m6_2 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="var buffer = new byte[4096]", span="48-48"];
m6_3 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="53-53"];
m6_4 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="filenamesAndData.Keys", span="55-55"];
m6_6 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="var file = Encoding.Default.GetBytes(filenamesAndData[filename])", span="60-60"];
m6_10 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="sourceBytes = ms.Read(buffer, 0, buffer.Length)", span="68-68"];
m6_11 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="stream.Write(buffer, 0, sourceBytes)", span="69-69"];
m6_16 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="Log.Error(err)", span="82-82"];
m6_18 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="return success;", span="85-85"];
m6_7 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="stream.PutNextEntry(entry)", span="61-61"];
m6_13 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="stream.Finish()", span="76-76"];
m6_14 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="stream.Close()", span="77-77"];
m6_12 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="sourceBytes > 0", span="71-71"];
m6_8 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="var ms = new MemoryStream(file)", span="63-63"];
m6_9 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="int sourceBytes", span="65-65"];
m6_15 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label=Exception, span="80-80"];
m6_17 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="success = false", span="83-83"];
m6_19 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", span="45-45"];
m6_159 [cluster="System.IO.DirectoryInfo.Create()", file="Compression.cs", label="Entry System.IO.DirectoryInfo.Create()", span="0-0"];
m6_316 [cluster="KeyValuePair<string, byte[]>.cstr", file="Compression.cs", label="Entry KeyValuePair<string, byte[]>.cstr", span=""];
m6_82 [cluster="byte[].GetString()", file="Compression.cs", label="Entry byte[].GetString()", span="83-83"];
m6_83 [cluster="Unk.Add", file="Compression.cs", label="Entry Unk.Add", span=""];
m6_108 [cluster="System.IO.File.Delete(string)", file="Compression.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m6_79 [cluster="ZipInputStream.cstr", file="Compression.cs", label="Entry ZipInputStream.cstr", span=""];
m6_196 [cluster="Unk.Dispose", file="Compression.cs", label="Entry Unk.Dispose", span=""];
m6_81 [cluster="Unk.Read", file="Compression.cs", label="Entry Unk.Read", span=""];
m6_158 [cluster="System.IO.FileInfo.FileInfo(string)", file="Compression.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m6_174 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Compression.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m6_135 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.Unzip(string, string, bool)", span="319-319"];
m6_138 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="!overwrite", prediction=7, span="325-325"];
m6_136 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="!File.Exists(zip)", span="321-321"];
m6_139 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="System.IO.Compression.ZipFile.ExtractToDirectory(zip, directory)", prediction=7, span="327-327"];
m6_140 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="var archive = new ZipArchive(File.OpenRead(zip))", prediction=9, span="331-331"];
m6_150 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="return true;", span="349-349"];
m6_141 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="archive.Entries", prediction=10, span="333-333"];
m6_143 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="var filepath = Path.Combine(directory, file.FullName)", prediction=11, span="337-337"];
m6_142 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="file.Name == ''''", prediction=12, span="336-336"];
m6_144 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="OS.IsLinux", prediction=13, span="338-338"];
m6_145 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="filepath = filepath.Replace(@''\'', ''/'')", prediction=14, span="338-338"];
m6_146 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="var outputFile = new FileInfo(filepath)", prediction=10, span="339-339"];
m6_149 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="file.ExtractToFile(outputFile.FullName, true)", prediction=10, span="344-344"];
m6_147 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="!outputFile.Directory.Exists", prediction=17, span="340-340"];
m6_148 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", color=green, community=0, file="Compression.cs", label="outputFile.Directory.Create()", prediction=10, span="342-342"];
m6_137 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="return false;", span="321-321"];
m6_153 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="return false;", span="354-354"];
m6_152 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="Log.Error(err)", span="353-353"];
m6_151 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label=Exception, span="351-351"];
m6_154 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.Unzip(string, string, bool)", span="319-319"];
m6_112 [cluster="System.IO.Path.GetFileName(string)", file="Compression.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m6_22 [cluster="ZipEntry.cstr", file="Compression.cs", label="Entry ZipEntry.cstr", span=""];
m6_80 [cluster="Unk.GetNextEntry", file="Compression.cs", label="Entry Unk.GetNextEntry", span=""];
m6_226 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Compression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m6_240 [cluster="System.IO.StreamReader.ReadLine()", file="Compression.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m6_36 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="var entry = new ZipEntry(file.Key)", span="107-107"];
m6_32 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="var success = true", span="96-96"];
m6_31 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", span="94-94"];
m6_33 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="var buffer = new byte[4096]", span="97-97"];
m6_46 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="Log.Error(err)", span="130-130"];
m6_34 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="102-102"];
m6_35 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label=filenamesAndData, span="104-104"];
m6_40 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="sourceBytes = ms.Read(buffer, 0, buffer.Length)", span="116-116"];
m6_41 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="stream.Write(buffer, 0, sourceBytes)", span="117-117"];
m6_37 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="stream.PutNextEntry(entry)", span="109-109"];
m6_45 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label=Exception, span="128-128"];
m6_47 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="success = false", span="131-131"];
m6_48 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="return success;", span="133-133"];
m6_43 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="stream.Finish()", span="124-124"];
m6_44 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="stream.Close()", span="125-125"];
m6_42 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="sourceBytes > 0", span="119-119"];
m6_38 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="var ms = new MemoryStream(file.Value)", span="111-111"];
m6_39 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="int sourceBytes", span="113-113"];
m6_49 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", span="94-94"];
m6_294 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="Entry QuantConnect.Compression.UnTarGzFiles(string, string)", span="640-640"];
m6_295 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="var inStream = File.OpenRead(source)", span="642-642"];
m6_296 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="var gzipStream = new GZipInputStream(inStream)", span="643-643"];
m6_301 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="inStream.Close()", span="648-648"];
m6_298 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="tarArchive.ExtractContents(destination)", span="645-645"];
m6_297 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(gzipStream)", span="644-644"];
m6_300 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="gzipStream.Close()", span="647-647"];
m6_299 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="tarArchive.Close()", span="646-646"];
m6_302 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="Exit QuantConnect.Compression.UnTarGzFiles(string, string)", span="640-640"];
m6_284 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="Entry QuantConnect.Compression.UnTarFiles(string, string)", span="626-626"];
m6_285 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="var inStream = File.OpenRead(source)", span="628-628"];
m6_286 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(inStream)", span="629-629"];
m6_289 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="inStream.Close()", span="632-632"];
m6_287 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="tarArchive.ExtractContents(destination)", span="630-630"];
m6_288 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="tarArchive.Close()", span="631-631"];
m6_290 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="Exit QuantConnect.Compression.UnTarFiles(string, string)", span="626-626"];
m6_194 [cluster="StreamReader.cstr", file="Compression.cs", label="Entry StreamReader.cstr", span=""];
m6_26 [cluster="System.IO.MemoryStream.Read(byte[], int, int)", file="Compression.cs", label="Entry System.IO.MemoryStream.Read(byte[], int, int)", span="0-0"];
m6_161 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="361-361"];
m6_169 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var fstream = File.OpenRead(file)", span="378-378"];
m6_165 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="!File.Exists(file)", span="370-370"];
m6_164 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label=files, span="368-368"];
m6_168 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="zipStream.PutNextEntry(entry)", span="377-377"];
m6_170 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="StreamUtils.Copy(fstream, zipStream, buffer)", span="380-380"];
m6_166 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Log.Trace(''ZipFiles(): File does not exist: '' + file)", span="372-372"];
m6_167 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var entry = new ZipEntry(Path.GetFileName(file))", span="376-376"];
m6_163 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var buffer = new byte[4096]", span="367-367"];
m6_171 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label=Exception, span="385-385"];
m6_162 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var zipStream = new ZipOutputStream(File.Create(destination))", span="365-365"];
m6_172 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Log.Error(err)", span="387-387"];
m6_173 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="361-361"];
m6_292 [cluster="Unk.ExtractContents", file="Compression.cs", label="Entry Unk.ExtractContents", span=""];
m6_334 [cluster="string.Substring(int)", file="Compression.cs", label="Entry string.Substring(int)", span="0-0"];
m6_303 [cluster="GZipInputStream.cstr", file="Compression.cs", label="Entry GZipInputStream.cstr", span=""];
m6_279 [cluster="ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", file="Compression.cs", label="Entry ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", span=""];
m6_245 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="var entry = zipStream.GetNextEntry()", span="543-543"];
m6_251 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="Log.Error(err)", span="556-556"];
m6_242 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="StreamReader reader = null", span="533-533"];
m6_250 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label=Exception, span="554-554"];
m6_252 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="return reader;", span="559-559"];
m6_247 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="545-545"];
m6_241 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="531-531"];
m6_243 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="MemoryStream file", span="537-537"];
m6_249 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="reader = new StreamReader(file)", span="552-552"];
m6_248 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="file = new MemoryStream(buffer)", span="548-548"];
m6_244 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="var zipStream = new ZipInputStream(zipstream)", span="540-540"];
m6_246 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="var buffer = new byte[entry.Size]", span="544-544"];
m6_253 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Compression.cs", label="Exit QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="531-531"];
m6_228 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label=firstEntryOnly, span="504-504"];
m6_209 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.ReadLinesImpl(string, bool)", span="500-500"];
m6_227 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="var zip = ZipFile.Read(filename)", span="502-502"];
m6_230 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="507-507"];
m6_231 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="yield break;", span="508-508"];
m6_233 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="512-512"];
m6_232 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label=zip, span="510-510"];
m6_229 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="var entry = zip[0]", span="506-506"];
m6_234 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.ReadLinesImpl(string, bool)", span="500-500"];
m6_282 [cluster="System.IO.Path.Combine(string, string)", file="Compression.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m6_310 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="tar.CopyEntryContents(output)", span="668-668"];
m6_305 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="var tar = new TarInputStream(isTarGz ? (Stream)new GZipInputStream(stream) : stream)", span="659-659"];
m6_304 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="657-657"];
m6_306 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="TarEntry entry", span="661-661"];
m6_307 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="(entry = tar.GetNextEntry()) != null", span="662-662"];
m6_311 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="yield return new KeyValuePair<string, byte[]>(entry.Name, output.ToArray());", span="669-669"];
m6_308 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="entry.IsDirectory", span="664-664"];
m6_309 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="var output = new MemoryStream()", span="666-666"];
m6_312 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="657-657"];
m6_216 [cluster="Unk.ReadZipEntry", file="Compression.cs", label="Entry Unk.ReadZipEntry", span=""];
m6_195 [cluster="Unk.OpenReader", file="Compression.cs", label="Entry Unk.OpenReader", span=""];
m6_281 [cluster="Unk.GetInputStream", file="Compression.cs", label="Entry Unk.GetInputStream", span=""];
m6_266 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var entryFileName = Path.GetFileName(zipEntry.Name)", span="590-590"];
m6_262 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var fs = File.OpenRead(zipFile)", span="581-581"];
m6_255 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="Entry QuantConnect.Compression.UnzipToFolder(string)", span="567-567"];
m6_261 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="ICSharpCode.SharpZipLib.Zip.ZipFile zf = null", span="577-577"];
m6_263 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="zf = new ICSharpCode.SharpZipLib.Zip.ZipFile(fs)", span="582-582"];
m6_256 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var files = new List<string>()", span="570-570"];
m6_257 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var slash = zipFile.LastIndexOf(Path.DirectorySeparatorChar)", span="571-571"];
m6_260 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="outFolder = zipFile.Substring(0, slash)", span="575-575"];
m6_259 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="slash > 0", span="573-573"];
m6_264 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label=zf, span="584-584"];
m6_269 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var zipStream = zf.GetInputStream(zipEntry)", span="594-594"];
m6_258 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var outFolder = ''''", span="572-572"];
m6_273 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="StreamUtils.Copy(zipStream, streamWriter, buffer)", span="606-606"];
m6_274 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="return files;", span="618-618"];
m6_271 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="files.Add(fullZipToPath)", span="600-600"];
m6_270 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var fullZipToPath = Path.Combine(outFolder, entryFileName)", span="597-597"];
m6_265 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="!zipEntry.IsFile", span="587-587"];
m6_267 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="entryFileName == null", span="591-591"];
m6_268 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var buffer = new byte[4096]", span="593-593"];
m6_272 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var streamWriter = File.Create(fullZipToPath)", span="604-604"];
m6_275 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="Exit QuantConnect.Compression.UnzipToFolder(string)", span="567-567"];
m6_280 [cluster="Unk.GetFileName", file="Compression.cs", label="Entry Unk.GetFileName", span=""];
m6_314 [cluster="System.IO.MemoryStream.MemoryStream()", file="Compression.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m6_28 [cluster="Unk.Finish", file="Compression.cs", label="Entry Unk.Finish", span=""];
m6_124 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipDirectory(string, string, bool)", span="298-298"];
m6_125 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="File.Exists(destination)", span="302-302"];
m6_126 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="File.Delete(destination)", span="302-302"];
m6_127 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="System.IO.Compression.ZipFile.CreateFromDirectory(directory, destination, CompressionLevel.Fastest, includeRootInZip)", span="303-303"];
m6_130 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="Log.Error(err)", span="308-308"];
m6_128 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="return true;", span="304-304"];
m6_131 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="return false;", span="309-309"];
m6_129 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label=Exception, span="306-306"];
m6_132 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipDirectory(string, string, bool)", span="298-298"];
m6_21 [cluster="System.IO.File.Create(string)", file="Compression.cs", label="Entry System.IO.File.Create(string)", span="0-0"];
m6_215 [cluster="KeyValuePair<string, IEnumerable<string>>.cstr", file="Compression.cs", label="Entry KeyValuePair<string, IEnumerable<string>>.cstr", span=""];
m6_210 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Compression.cs", label="Entry QuantConnect.Compression.Unzip(System.IO.Stream)", span="465-465"];
m6_211 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Compression.cs", label="var zip = ZipFile.Read(stream)", span="467-467"];
m6_213 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Compression.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="471-471"];
m6_212 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Compression.cs", label=zip, span="469-469"];
m6_214 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Compression.cs", label="Exit QuantConnect.Compression.Unzip(System.IO.Stream)", span="465-465"];
m6_109 [cluster="QuantConnect.Compression.Zip(string, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.Zip(string, bool)", span="266-266"];
m6_110 [cluster="QuantConnect.Compression.Zip(string, bool)", file="Compression.cs", label="return Zip(textPath, Path.GetFileName(textPath), deleteOriginal);", span="268-268"];
m6_111 [cluster="QuantConnect.Compression.Zip(string, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.Zip(string, bool)", span="266-266"];
m6_157 [cluster="Unk.Combine", file="Compression.cs", label="Entry Unk.Combine", span=""];
m6_278 [cluster="string.Substring(int, int)", file="Compression.cs", label="Entry string.Substring(int, int)", span="0-0"];
m6_198 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Compression.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m6_175 [cluster="Unk.Copy", file="Compression.cs", label="Entry Unk.Copy", span=""];
m6_176 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Entry QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="398-398"];
m6_179 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="File.Exists(filename)", span="405-405"];
m6_178 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="zip = null", span="401-401"];
m6_180 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="zip = new ZipFile(filename)", span="409-409"];
m6_188 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Log.Error(''Data.UnZip(2): File doesn't exist: '' + filename)", span="422-422"];
m6_177 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="StreamReader reader = null", span="400-400"];
m6_190 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Log.Error(err, ''File: '' + filename)", span="427-427"];
m6_183 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Log.Error(err, ''Inner try/catch'')", span="415-415"];
m6_181 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="reader = new StreamReader(zip[0].OpenReader())", span="411-411"];
m6_184 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="zip != null", span="416-416"];
m6_185 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="zip.Dispose()", span="416-416"];
m6_189 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label=Exception, span="425-425"];
m6_191 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="return reader;", span="429-429"];
m6_182 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label=Exception, span="413-413"];
m6_186 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="reader != null", span="417-417"];
m6_187 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="reader.Close()", span="417-417"];
m6_192 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Exit QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="398-398"];
m6_315 [cluster="Unk.CopyEntryContents", file="Compression.cs", label="Entry Unk.CopyEntryContents", span=""];
m6_199 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="Entry QuantConnect.Compression.Unzip(string)", span="440-440"];
m6_200 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="!File.Exists(filename)", span="442-442"];
m6_203 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="return ReadLinesImpl(filename);", span="450-450"];
m6_201 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="Log.Error(''Compression.Unzip(): File does not exist: '' + filename)", span="444-444"];
m6_205 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="Log.Error(err)", span="454-454"];
m6_202 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="445-445"];
m6_204 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label=Exception, span="452-452"];
m6_206 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="456-456"];
m6_207 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="Exit QuantConnect.Compression.Unzip(string)", span="440-440"];
m6_54 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="stream.PutNextEntry(entry)", span="151-151"];
m6_60 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="return false;", span="162-162"];
m6_50 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="143-143"];
m6_59 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Log.Error(err)", span="161-161"];
m6_51 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="147-147"];
m6_53 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var entry = new ZipEntry(zipEntry)", span="150-150"];
m6_55 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label=lines, span="152-152"];
m6_58 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label=Exception, span="159-159"];
m6_57 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="return true;", span="157-157"];
m6_52 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var writer = new StreamWriter(stream)", span="148-148"];
m6_56 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="writer.WriteLine(line)", span="154-154"];
m6_61 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="143-143"];
m6_313 [cluster="TarInputStream.cstr", file="Compression.cs", label="Entry TarInputStream.cstr", span=""];
m6_105 [cluster="string.Replace(string, string)", file="Compression.cs", label="Entry string.Replace(string, string)", span="0-0"];
m6_133 [cluster="System.IO.File.Exists(string)", file="Compression.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m6_29 [cluster="Unk.Close", file="Compression.cs", label="Entry Unk.Close", span=""];
m6_63 [cluster="System.IO.TextWriter.WriteLine(string)", file="Compression.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m6_90 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="var entry = new ZipEntry(zipEntryName)", span="233-233"];
m6_92 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="var fs = File.OpenRead(textPath)", span="236-236"];
m6_87 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="zipPath = textPath.Replace(''.csv'', ''.zip'')", span="227-227"];
m6_88 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="zipPath = zipPath.Replace(''.txt'', ''.zip'')", span="228-228"];
m6_84 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.Zip(string, string, bool)", span="220-220"];
m6_91 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="stream.PutNextEntry(entry)", span="234-234"];
m6_93 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="int sourceBytes", span="238-238"];
m6_94 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="sourceBytes = fs.Read(buffer, 0, buffer.Length)", span="241-241"];
m6_86 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="var buffer = new byte[4096]", span="226-226"];
m6_89 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="230-230"];
m6_103 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="return zipPath;", span="257-257"];
m6_85 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="var zipPath = ''''", span="222-222"];
m6_99 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label=deleteOriginal, span="251-251"];
m6_100 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="File.Delete(textPath)", span="251-251"];
m6_96 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="sourceBytes > 0", span="244-244"];
m6_95 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="stream.Write(buffer, 0, sourceBytes)", span="242-242"];
m6_97 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="stream.Finish()", span="247-247"];
m6_98 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="stream.Close()", span="248-248"];
m6_102 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="Log.Error(err)", span="255-255"];
m6_101 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label=Exception, span="253-253"];
m6_104 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.Zip(string, string, bool)", span="220-220"];
m6_327 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="tarEntry.IsDirectory", span="698-698"];
m6_320 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="var file = File.OpenRead(source)", span="685-685"];
m6_318 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="Entry QuantConnect.Compression.UnTar(string)", span="680-680"];
m6_319 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="var gzip = (source.Substring(Math.Max(0, source.Length - 6)) == ''tar.gz'')", span="683-683"];
m6_321 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="var tarIn = new TarInputStream(file)", span="687-687"];
m6_323 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="var gzipStream = new GZipInputStream(file)", span="691-691"];
m6_330 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="yield return new KeyValuePair<string, byte[]>(tarEntry.Name, stream.ToArray());", span="703-703"];
m6_322 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label=gzip, span="689-689"];
m6_326 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="(tarEntry = tarIn.GetNextEntry()) != null", span="696-696"];
m6_329 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="tarIn.CopyEntryContents(stream)", span="702-702"];
m6_331 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="tarIn.Close()", span="706-706"];
m6_324 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="tarIn = new TarInputStream(gzipStream)", span="692-692"];
m6_328 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="var stream = new MemoryStream()", span="700-700"];
m6_325 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="TarEntry tarEntry", span="695-695"];
m6_332 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="Exit QuantConnect.Compression.UnTar(string)", span="680-680"];
m6_78 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Compression.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_107 [cluster="System.IO.FileStream.Read(byte[], int, int)", file="Compression.cs", label="Entry System.IO.FileStream.Read(byte[], int, int)", span="0-0"];
m6_24 [cluster="Unk.PutNextEntry", file="Compression.cs", label="Entry Unk.PutNextEntry", span=""];
m6_160 [cluster="Unk.ExtractToFile", file="Compression.cs", label="Entry Unk.ExtractToFile", span=""];
m6_20 [cluster="ZipOutputStream.cstr", file="Compression.cs", label="Entry ZipOutputStream.cstr", span=""];
m6_155 [cluster="Unk.ExtractToDirectory", file="Compression.cs", label="Entry Unk.ExtractToDirectory", span=""];
m6_156 [cluster="ZipArchive.cstr", file="Compression.cs", label="Entry ZipArchive.cstr", span=""];
m8_0 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(int)", file="ConsoleResultHandler.cs", label="Entry QuantConnect.Indicators.RateOfChange.RateOfChange(int)", span="27-27"];
m8_1 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(int)", file="ConsoleResultHandler.cs", label="Exit QuantConnect.Indicators.RateOfChange.RateOfChange(int)", span="27-27"];
m8_4 [cluster="QuantConnect.Indicators.RateOfChange.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="ConsoleResultHandler.cs", label="Entry QuantConnect.Indicators.RateOfChange.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="48-48"];
m8_5 [cluster="QuantConnect.Indicators.RateOfChange.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="ConsoleResultHandler.cs", label="!window.IsReady", span="50-50"];
m8_6 [cluster="QuantConnect.Indicators.RateOfChange.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="ConsoleResultHandler.cs", label="return input - window[window.Count - 1];", span="53-53"];
m8_7 [cluster="QuantConnect.Indicators.RateOfChange.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="ConsoleResultHandler.cs", label="return input - window.MostRecentlyRemoved;", span="56-56"];
m8_8 [cluster="QuantConnect.Indicators.RateOfChange.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="ConsoleResultHandler.cs", label="Exit QuantConnect.Indicators.RateOfChange.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="48-48"];
m8_2 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", file="ConsoleResultHandler.cs", label="Entry QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", span="37-37"];
m8_3 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", file="ConsoleResultHandler.cs", label="Exit QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", span="37-37"];
m10_21 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Run()", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.Run()", span="155-155"];
m10_22 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Run()", file="DesktopResultHandler.cs", label="!_exitTriggered || Messages.Count > 0", span="157-157"];
m10_23 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Run()", file="DesktopResultHandler.cs", label="Thread.Sleep(100)", span="159-159"];
m10_24 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Run()", file="DesktopResultHandler.cs", label="DebugMessage(''DesktopResultHandler: Ending Thread...'')", span="161-161"];
m10_25 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Run()", file="DesktopResultHandler.cs", label="_isActive = false", span="162-162"];
m10_26 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Run()", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.Run()", span="155-155"];
m10_14 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="144-144"];
m10_15 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="DesktopResultHandler.cs", label="_job = job", span="147-147"];
m10_16 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="DesktopResultHandler.cs", label="var desktopLogging = new FunctionalLogHandler(DebugMessage, DebugMessage, ErrorMessage)", span="148-148"];
m10_17 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="DesktopResultHandler.cs", label="Log.LogHandler = new CompositeLogHandler(new[] { desktopLogging, Log.LogHandler })", span="149-149"];
m10_18 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="144-144"];
m10_10 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="DesktopResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
m10_48 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="223-223"];
m10_49 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="DesktopResultHandler.cs", label=_chartLock, span="225-225"];
m10_50 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="DesktopResultHandler.cs", label="!Charts.ContainsKey(chartName)", span="228-228"];
m10_51 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="DesktopResultHandler.cs", label="Charts.AddOrUpdate<string, Chart>(chartName, new Chart(chartName))", span="230-230"];
m10_52 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="DesktopResultHandler.cs", label="!Charts[chartName].Series.ContainsKey(seriesName)", span="234-234"];
m10_53 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="DesktopResultHandler.cs", label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="236-236"];
m10_54 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="DesktopResultHandler.cs", label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="240-240"];
m10_55 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="223-223"];
m10_45 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ErrorMessage(string, string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.ErrorMessage(string, string)", span="207-207"];
m10_46 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ErrorMessage(string, string)", file="DesktopResultHandler.cs", label="Messages.Enqueue(new HandledErrorPacket('''', message, stacktrace))", span="209-209"];
m10_47 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ErrorMessage(string, string)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.ErrorMessage(string, string)", span="207-207"];
m10_57 [cluster="QuantConnect.Chart.Chart(string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Chart.Chart(string)", span="60-60"];
m10_138 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="444-444"];
m10_12 [cluster="object.Object()", file="DesktopResultHandler.cs", label="Entry object.Object()", span="0-0"];
m10_117 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SetChartSubscription(string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.SetChartSubscription(string)", span="427-427"];
m10_118 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SetChartSubscription(string)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.SetChartSubscription(string)", span="427-427"];
m10_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="DesktopResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m10_19 [cluster="QuantConnect.Logging.FunctionalLogHandler.FunctionalLogHandler(System.Action<string>, System.Action<string>, System.Action<string>)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Logging.FunctionalLogHandler.FunctionalLogHandler(System.Action<string>, System.Action<string>, System.Action<string>)", span="42-42"];
m10_108 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.RuntimeStatistic(string, string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.RuntimeStatistic(string, string)", span="399-399"];
m10_109 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.RuntimeStatistic(string, string)", file="DesktopResultHandler.cs", label="DebugMessage(''DesktopResultHandler.RuntimeStatistic(): '' + key + '' : '' + value)", span="401-401"];
m10_110 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.RuntimeStatistic(string, string)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.RuntimeStatistic(string, string)", span="399-399"];
m10_140 [cluster="System.Collections.Generic.List<T>.Clear()", file="DesktopResultHandler.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m10_60 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="191-191"];
m10_78 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="303-303"];
m10_79 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="303-303"];
m10_64 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleEquity(System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleEquity(System.DateTime, decimal)", span="249-249"];
m10_65 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleEquity(System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value, ''$'')", span="251-251"];
m10_66 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleEquity(System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleEquity(System.DateTime, decimal)", span="249-249"];
m10_104 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="388-388"];
m10_105 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="DesktopResultHandler.cs", label="DebugMessage(''DesktopResultHandler.OrderEvent(): id:'' + newEvent.OrderId + '' >> Status:'' + newEvent.Status + '' >> Fill Price: '' + newEvent.FillPrice.ToString(''C'') + '' >> Fill Quantity: '' + newEvent.FillQuantity)", span="390-390"];
m10_106 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="388-388"];
m10_114 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="DesktopResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="70-70"];
m10_44 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
m10_147 [cluster="lambda expression", file="DesktopResultHandler.cs", label="Entry lambda expression", span="468-468"];
m10_141 [cluster="lambda expression", file="DesktopResultHandler.cs", label="Entry lambda expression", span="460-460"];
m10_144 [cluster="lambda expression", file="DesktopResultHandler.cs", label="Entry lambda expression", span="464-464"];
m10_142 [cluster="lambda expression", file="DesktopResultHandler.cs", label="DebugMessage(x)", span="460-460"];
m10_143 [cluster="lambda expression", file="DesktopResultHandler.cs", label="Exit lambda expression", span="460-460"];
m10_145 [cluster="lambda expression", file="DesktopResultHandler.cs", label="ErrorMessage(x)", span="464-464"];
m10_146 [cluster="lambda expression", file="DesktopResultHandler.cs", label="Exit lambda expression", span="464-464"];
m10_148 [cluster="lambda expression", file="DesktopResultHandler.cs", label="LogMessage(x)", span="468-468"];
m10_149 [cluster="lambda expression", file="DesktopResultHandler.cs", label="Exit lambda expression", span="468-468"];
m10_61 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DesktopResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m10_92 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="DesktopResultHandler.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m10_101 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Exit()", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.Exit()", span="378-378"];
m10_102 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Exit()", file="DesktopResultHandler.cs", label="_exitTriggered = true", span="380-380"];
m10_103 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.Exit()", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.Exit()", span="378-378"];
m10_136 [cluster="System.DateTime.Add(System.TimeSpan)", file="DesktopResultHandler.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m10_70 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleBenchmark(System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleBenchmark(System.DateTime, decimal)", span="270-270"];
m10_71 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleBenchmark(System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value)", span="272-272"];
m10_72 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleBenchmark(System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleBenchmark(System.DateTime, decimal)", span="270-270"];
m10_31 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", span="59-59"];
m10_11 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="DesktopResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m10_41 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ErrorMessage(string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.ErrorMessage(string)", span="197-197"];
m10_42 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ErrorMessage(string)", file="DesktopResultHandler.cs", label="Messages.Enqueue(new HandledErrorPacket('''', message, ''''))", span="199-199"];
m10_43 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ErrorMessage(string)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.ErrorMessage(string)", span="197-197"];
m10_115 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="419-419"];
m10_116 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="419-419"];
m10_36 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47"];
m10_27 [cluster="System.Threading.Thread.Sleep(int)", file="DesktopResultHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m10_58 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="DesktopResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="115-115"];
m10_28 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DebugMessage(string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.DebugMessage(string)", span="169-169"];
m10_29 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DebugMessage(string)", file="DesktopResultHandler.cs", label="Messages.Enqueue(new DebugPacket(0, '''', '''', message))", span="171-171"];
m10_30 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DebugMessage(string)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.DebugMessage(string)", span="169-169"];
m10_93 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="351-351"];
m10_94 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="DesktopResultHandler.cs", label="statisticsResults.Summary", span="357-357"];
m10_96 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="DesktopResultHandler.cs", label="FinalStatistics = statisticsResults.Summary", span="362-362"];
m10_95 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="DesktopResultHandler.cs", label="DebugMessage(''STATISTICS:: '' + pair.Key + '' '' + pair.Value)", span="359-359"];
m10_97 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="351-351"];
m10_137 [cluster="System.Math.Round(decimal, int)", file="DesktopResultHandler.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m10_73 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="279-279"];
m10_74 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="279-279"];
m10_139 [cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", file="DesktopResultHandler.cs", label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0"];
m10_37 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.RuntimeError(string, string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.RuntimeError(string, string)", span="188-188"];
m10_38 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.RuntimeError(string, string)", file="DesktopResultHandler.cs", label="Messages.Enqueue(new RuntimeErrorPacket('''', message, stacktrace))", span="190-190"];
m10_39 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.RuntimeError(string, string)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.RuntimeError(string, string)", span="188-188"];
m10_56 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="DesktopResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m10_0 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DesktopResultHandler()", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.DesktopResultHandler()", span="123-123"];
m10_1 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DesktopResultHandler()", file="DesktopResultHandler.cs", label="FinalStatistics = new Dictionary<string, string>()", span="125-125"];
m10_2 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DesktopResultHandler()", file="DesktopResultHandler.cs", label="Messages = new ConcurrentQueue<Packet>()", span="126-126"];
m10_3 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DesktopResultHandler()", file="DesktopResultHandler.cs", label="Charts = new ConcurrentDictionary<string, Chart>()", span="127-127"];
m10_4 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DesktopResultHandler()", file="DesktopResultHandler.cs", label="_chartLock = new Object()", span="129-129"];
m10_5 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DesktopResultHandler()", file="DesktopResultHandler.cs", label="_isActive = true", span="130-130"];
m10_6 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DesktopResultHandler()", file="DesktopResultHandler.cs", label="_resamplePeriod = TimeSpan.FromSeconds(2)", span="131-131"];
m10_7 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DesktopResultHandler()", file="DesktopResultHandler.cs", label="_notificationPeriod = TimeSpan.FromSeconds(2)", span="132-132"];
m10_8 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.DesktopResultHandler()", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.DesktopResultHandler()", span="123-123"];
m10_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DesktopResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_111 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.PurgeQueue()", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.PurgeQueue()", span="408-408"];
m10_112 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.PurgeQueue()", file="DesktopResultHandler.cs", label="Messages.Clear()", span="410-410"];
m10_113 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.PurgeQueue()", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.PurgeQueue()", span="408-408"];
m10_91 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType)", span="162-162"];
m10_32 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="DesktopResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m10_75 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="291-291"];
m10_76 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="DesktopResultHandler.cs", label="DebugMessage(''DesktopResultHandler.SendStatusUpdate(): Algorithm Status: '' + status + '' : '' + message)", span="293-293"];
m10_77 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="291-291"];
m10_119 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", span="437-437"];
m10_120 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="var time = _algorithm.Time", span="439-439"];
m10_121 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="time > _nextSample || forceProcess", span="441-441"];
m10_122 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="_nextSample = time.Add(ResamplePeriod)", span="444-444"];
m10_123 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="447-447"];
m10_126 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="SampleAssetPrices(security.Symbol, time, security.Price)", span="455-455"];
m10_127 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="_algorithm.DebugMessages.ForEach(x => DebugMessage(x))", span="460-460"];
m10_124 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="SampleRange(_algorithm.GetChartUpdates())", span="450-450"];
m10_125 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="_algorithm.Securities.Values", span="453-453"];
m10_128 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="_algorithm.DebugMessages.Clear()", span="461-461"];
m10_129 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="_algorithm.ErrorMessages.ForEach(x => ErrorMessage(x))", span="464-464"];
m10_130 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="_algorithm.ErrorMessages.Clear()", span="465-465"];
m10_131 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="_algorithm.LogMessages.ForEach(x => LogMessage(x))", span="468-468"];
m10_132 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="_algorithm.LogMessages.Clear()", span="469-469"];
m10_133 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="_algorithm.RuntimeStatistics", span="472-472"];
m10_134 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="RuntimeStatistic(pair.Key, pair.Value)", span="474-474"];
m10_135 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.ProcessSynchronousEvents(bool)", span="437-437"];
m10_67 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SamplePerformance(System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.SamplePerformance(System.DateTime, decimal)", span="259-259"];
m10_68 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SamplePerformance(System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Sample(''Strategy Equity'', ''Daily Performance'', 0, SeriesType.Line, time, value, ''%'')", span="261-261"];
m10_69 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SamplePerformance(System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.SamplePerformance(System.DateTime, decimal)", span="259-259"];
m10_62 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="DesktopResultHandler.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="287-287"];
m10_40 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)", span="54-54"];
m10_80 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="313-313"];
m10_81 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="DesktopResultHandler.cs", label=_chartLock, span="315-315"];
m10_82 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="DesktopResultHandler.cs", label=updates, span="317-317"];
m10_83 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="DesktopResultHandler.cs", label="!Charts.ContainsKey(update.Name)", span="320-320"];
m10_84 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="DesktopResultHandler.cs", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name, update.ChartType))", span="322-322"];
m10_85 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="DesktopResultHandler.cs", label="update.Series.Values", span="326-326"];
m10_86 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="DesktopResultHandler.cs", label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="329-329"];
m10_87 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="DesktopResultHandler.cs", label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType))", span="331-331"];
m10_88 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="DesktopResultHandler.cs", label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="335-335"];
m10_89 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="313-313"];
m10_90 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="49-49"];
m10_98 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="370-370"];
m10_99 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="DesktopResultHandler.cs", label="_algorithm = algorithm", span="372-372"];
m10_100 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="370-370"];
m10_13 [cluster="System.TimeSpan.FromSeconds(double)", file="DesktopResultHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m10_107 [cluster="decimal.ToString(string)", file="DesktopResultHandler.cs", label="Entry decimal.ToString(string)", span="0-0"];
m10_33 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.LogMessage(string)", file="DesktopResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.DesktopResultHandler.LogMessage(string)", span="178-178"];
m10_34 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.LogMessage(string)", file="DesktopResultHandler.cs", label="Messages.Enqueue(new LogPacket('''', message))", span="180-180"];
m10_35 [cluster="QuantConnect.Lean.Engine.Results.DesktopResultHandler.LogMessage(string)", file="DesktopResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.DesktopResultHandler.LogMessage(string)", span="178-178"];
m10_20 [cluster="QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(QuantConnect.Logging.ILogHandler[])", file="DesktopResultHandler.cs", label="Entry QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(QuantConnect.Logging.ILogHandler[])", span="38-38"];
m10_150 [file="DesktopResultHandler.cs", label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", span=""];
m11_157 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m11_249 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101"];
m11_180 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DukascopyDataDownloader.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m11_215 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="415-415"];
m11_144 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="53-53"];
m11_147 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", span="41-41"];
m11_138 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="91-91"];
m11_179 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="DukascopyDataDownloader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m11_152 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="193-193"];
m11_190 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="62-62"];
m11_216 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="420-420"];
m11_159 [cluster="object.GetType()", file="DukascopyDataDownloader.cs", label="Entry object.GetType()", span="0-0"];
m11_153 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="DukascopyDataDownloader.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m11_178 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="447-447"];
m11_250 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="DukascopyDataDownloader.cs", label="var orders = transactions.GetOrders(x => x.Status.IsFill())", span="449-449"];
m11_251 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="DukascopyDataDownloader.cs", label="var path = Path.GetDirectoryName(csvFileName)", span="451-451"];
m11_254 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="DukascopyDataDownloader.cs", label="var writer = new StreamWriter(csvFileName)", span="455-455"];
m11_256 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="DukascopyDataDownloader.cs", label="var line = string.Format(''{0},{1},{2},{3},{4}'',\r\n                        order.Time.ToString(''yyyy-MM-dd HH:mm:ss''),\r\n                        order.Symbol.Value,\r\n                        order.Direction,\r\n                        order.Quantity,\r\n                        order.Price)", span="459-464"];
m11_255 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="DukascopyDataDownloader.cs", label=orders, span="457-457"];
m11_252 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="DukascopyDataDownloader.cs", label="path != null && !Directory.Exists(path)", span="452-452"];
m11_253 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="DukascopyDataDownloader.cs", label="Directory.CreateDirectory(path)", span="453-453"];
m11_257 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="DukascopyDataDownloader.cs", label="writer.WriteLine(line)", span="465-465"];
m11_258 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="DukascopyDataDownloader.cs", label="Exit QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="447-447"];
m11_137 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44"];
m11_266 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Entry lambda expression", span="449-449"];
m11_199 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Entry lambda expression", span="133-141"];
m11_201 [cluster="lambda expression", color=green, community=0, file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress))", prediction=19, span="138-139"];
m11_200 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="!algorithm.GetLocked() || algorithm.IsWarmingUp", span="136-136"];
m11_202 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Exit lambda expression", span="133-141"];
m11_219 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _systemHandlers.LeanManagement, isolator.CancellationToken)", span="250-250"];
m11_206 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="algorithm.BrokerageMessageHandler.Handle(message)", span="205-205"];
m11_207 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="algorithm.OnBrokerageMessage(message)", span="208-208"];
m11_210 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="algorithm.OnBrokerageDisconnect()", span="212-212"];
m11_212 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="algorithm.OnBrokerageReconnect()", span="215-215"];
m11_222 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="algorithm.RunTimeError = err", span="256-256"];
m11_218 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Entry lambda expression", span="242-262"];
m11_220 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label=Exception, span="252-252"];
m11_225 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="261-261"];
m11_223 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="algorithmManager.SetStatus(AlgorithmStatus.RuntimeError)", span="257-257"];
m11_208 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="message.Type", span="209-209"];
m11_205 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Entry lambda expression", span="203-218"];
m11_209 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="BrokerageMessageType.Disconnect", span="211-211"];
m11_213 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Exit lambda expression", span="203-218"];
m11_211 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="BrokerageMessageType.Reconnect", span="214-214"];
m11_221 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Log.Error(err)", span="255-255"];
m11_229 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Entry lambda expression", span="317-317"];
m11_226 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Exit lambda expression", span="242-262"];
m11_224 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="return;", span="258-258"];
m11_231 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Exit lambda expression", span="317-317"];
m11_230 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="x.Status.IsFill()", span="317-317"];
m11_267 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="x.Status.IsFill()", span="449-449"];
m11_268 [cluster="lambda expression", file="DukascopyDataDownloader.cs", label="Exit lambda expression", span="449-449"];
m11_227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManagement, System.Threading.CancellationToken)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManagement, System.Threading.CancellationToken)", span="135-135"];
m11_167 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
m11_154 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m11_163 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="42-42"];
m11_148 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="44-44"];
m11_161 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="442-442"];
m11_185 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DukascopyDataDownloader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m11_5 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83"];
m11_28 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", color=green, community=0, file="DukascopyDataDownloader.cs", label="historyProvider.Initialize(job, _algorithmHandlers.DataProvider, historyDataCacheProvider, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, progress =>\r\n                    {\r\n                        // send progress updates to the result handler only during initialization\r\n                        if (!algorithm.GetLocked() || algorithm.IsWarmingUp)\r\n                        {\r\n                            _algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress));\r\n                        }\r\n                    })", prediction=19, span="133-141"];
m11_18 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="algorithm = _algorithmHandlers.Setup.CreateAlgorithmInstance(job, assemblyPath)", span="110-110"];
m11_24 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var historyProvider = GetHistoryProvider(job.HistoryProvider)", span="126-126"];
m11_27 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var historyDataCacheProvider = new ZipDataCacheProvider(_algorithmHandlers.DataProvider)", span="132-132"];
m11_29 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="algorithm.HistoryProvider = historyProvider", span="143-143"];
m11_13 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_systemHandlers.Notify.SetAuthentication(job)", span="98-98"];
m11_14 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.Initialize(job, _systemHandlers.Notify, _systemHandlers.Api, _algorithmHandlers.DataFeed, _algorithmHandlers.Setup, _algorithmHandlers.Transactions)", span="101-101"];
m11_15 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadResults = new Thread(_algorithmHandlers.Results.Run, 0) { IsBackground = true, Name = ''Result Thread'' }", span="103-103"];
m11_19 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_systemHandlers.LeanManagement.SetAlgorithm(algorithm)", span="113-113"];
m11_21 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="brokerage = _algorithmHandlers.Setup.CreateBrokerage(job, algorithm, out factory)", span="117-117"];
m11_22 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.DataFeed.Initialize(algorithm, job, _algorithmHandlers.Results, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, _algorithmHandlers.DataProvider)", span="120-120"];
m11_23 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="algorithm.Transactions.SetOrderProcessor(_algorithmHandlers.Transactions)", span="123-123"];
m11_30 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="algorithm.BrokerageMessageHandler = factory.CreateBrokerageMessageHandler(algorithm, job, _systemHandlers.Api)", span="146-146"];
m11_31 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="initializeComplete = _algorithmHandlers.Setup.Setup(algorithm, brokerage, job, _algorithmHandlers.Results, _algorithmHandlers.Transactions, _algorithmHandlers.RealTime)", span="149-149"];
m11_32 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.SetAlgorithm(algorithm)", span="152-152"];
m11_33 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || _algorithmHandlers.Setup.Errors.Count > 0", span="155-155"];
m11_36 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="errorMessage += String.Join('','', _algorithmHandlers.Setup.Errors)", span="160-160"];
m11_38 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.RuntimeError(errorMessage)", span="162-162"];
m11_39 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, errorMessage)", span="163-163"];
m11_43 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.RuntimeError(runtimeMessage, err.StackTrace)", span="170-170"];
m11_44 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="171-171"];
m11_46 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''         DataFeed:     '' + _algorithmHandlers.DataFeed.GetType().FullName)", span="177-177"];
m11_47 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''         Setup:        '' + _algorithmHandlers.Setup.GetType().FullName)", span="178-178"];
m11_48 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''         RealTime:     '' + _algorithmHandlers.RealTime.GetType().FullName)", span="179-179"];
m11_49 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''         Results:      '' + _algorithmHandlers.Results.GetType().FullName)", span="180-180"];
m11_50 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''         Transactions: '' + _algorithmHandlers.Transactions.GetType().FullName)", span="181-181"];
m11_59 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Transactions.Initialize(algorithm, brokerage, _algorithmHandlers.Results)", span="199-199"];
m11_60 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.RealTime.Setup(algorithm, job, _algorithmHandlers.Results, _systemHandlers.Api)", span="200-200"];
m11_62 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.Running)", span="221-221"];
m11_63 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadFeed = new Thread(_algorithmHandlers.DataFeed.Run) { IsBackground = true, Name = ''DataFeed Thread'' }", span="224-224"];
m11_64 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadTransactions = new Thread(_algorithmHandlers.Transactions.Run) { IsBackground = true, Name = ''Transaction Thread'' }", span="225-225"];
m11_65 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadRealTime = new Thread(_algorithmHandlers.RealTime.Run) { IsBackground = true, Name = ''RealTime Thread'' }", span="226-226"];
m11_69 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Globals.Version))", span="234-234"];
m11_71 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var complete = isolator.ExecuteWithTimeLimit(_algorithmHandlers.Setup.MaximumRuntime, algorithmManager.TimeLoopWithinLimits, () =>\r\n                        {\r\n                            try\r\n                            {\r\n                                //Run Algorithm Job:\r\n                                // -> Using this Data Feed, \r\n                                // -> Send Orders to this TransactionHandler, \r\n                                // -> Send Results to ResultHandler.\r\n                                algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _systemHandlers.LeanManagement, isolator.CancellationToken);\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                //Debugging at this level is difficult, stack trace needed.\r\n                                Log.Error(err);\r\n                                algorithm.RunTimeError = err;\r\n                                algorithmManager.SetStatus(AlgorithmStatus.RuntimeError);\r\n                                return;\r\n                            }\r\n\r\n                            Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n                        }, job.Controls.RamAllocation)", span="242-262"];
m11_73 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Error(''Engine.Main(): Failed to complete in time: '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F''))", span="266-266"];
m11_74 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="throw new Exception(''Failed to complete algorithm within '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F'')\r\n                                + '' seconds. Please make it run faster.'');", span="267-268"];
m11_76 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="HandleAlgorithmError(job, algorithm.RunTimeError)", span="274-274"];
m11_78 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="HandleAlgorithmError(job, err)", span="280-280"];
m11_80 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var charts = new Dictionary<string, Chart>(_algorithmHandlers.Results.Charts)", span="286-286"];
m11_81 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var orders = new Dictionary<int, Order>(_algorithmHandlers.Transactions.Orders)", span="287-287"];
m11_87 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="SaveListOfTrades(_algorithmHandlers.Transactions, csvTransactionsFileName)", span="295-295"];
m11_98 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="statisticsResults = StatisticsBuilder.Generate(trades, profitLoss, equity, performance, benchmark,\r\n                                    _algorithmHandlers.Setup.StartingPortfolioValue, algorithm.Portfolio.TotalFees, totalTransactions)", span="320-321"];
m11_99 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var netReturn = _algorithmHandlers.Setup.StartingPortfolioValue > 0 ?\r\n                                                (algorithm.Portfolio.TotalPortfolioValue - _algorithmHandlers.Setup.StartingPortfolioValue) / _algorithmHandlers.Setup.StartingPortfolioValue\r\n                                                : 0", span="324-326"];
m11_109 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.DebugMessage(\r\n                            string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                                job.AlgorithmId, totalSeconds.ToString(''F2''), ((dataPoints/(double) 1000)/totalSeconds).ToString(''F0''),\r\n                                dataPoints.ToString(''N0'')))", span="344-347"];
m11_110 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statisticsResults, banner)", span="349-349"];
m11_113 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Transactions.Exit()", span="357-357"];
m11_114 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.DataFeed.Exit()", span="358-358"];
m11_115 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.RealTime.Exit()", span="359-359"];
m11_116 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.Exit()", span="363-363"];
m11_118 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="(_algorithmHandlers.Results.IsActive \r\n                    || (_algorithmHandlers.Transactions != null && _algorithmHandlers.Transactions.IsActive) \r\n                    || (_algorithmHandlers.DataFeed != null && _algorithmHandlers.DataFeed.IsActive)\r\n                    || (_algorithmHandlers.RealTime != null && _algorithmHandlers.RealTime.IsActive))\r\n                    && ts.ElapsedMilliseconds < 30*1000", span="367-371"];
m11_130 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Setup != null", span="387-387"];
m11_132 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Setup.Dispose()", span="390-390"];
m11_6 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var algorithm = default(IAlgorithm)", span="85-85"];
m11_7 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var algorithmManager = manager", span="86-86"];
m11_53 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="job is LiveNodePacket", span="186-186"];
m11_57 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="195-195"];
m11_17 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="IBrokerage brokerage = null", span="106-106"];
m11_35 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="159-159"];
m11_51 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="algorithm != null && algorithm.HistoryProvider != null", span="182-182"];
m11_52 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''         History Provider:     '' + algorithm.HistoryProvider.GetType().FullName)", span="184-184"];
m11_58 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="algorithm.SetLocked()", span="196-196"];
m11_61 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="brokerage.Message += (sender, message) =>\r\n                    {\r\n                        algorithm.BrokerageMessageHandler.Handle(message);\r\n\r\n                        // fire brokerage message events\r\n                        algorithm.OnBrokerageMessage(message);\r\n                        switch (message.Type)\r\n                        {\r\n                            case BrokerageMessageType.Disconnect:\r\n                                algorithm.OnBrokerageDisconnect();\r\n                                break;\r\n                            case BrokerageMessageType.Reconnect:\r\n                                algorithm.OnBrokerageReconnect();\r\n                                break;\r\n                        }\r\n                    }", span="203-218"];
m11_75 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="algorithm.RunTimeError != null", span="272-272"];
m11_79 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var trades = algorithm.TradeBuilder.ClosedTrades", span="285-285"];
m11_95 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var profitLoss = new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="316-316"];
m11_96 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var totalTransactions = algorithm.Transactions.GetOrders(x => x.Status.IsFill()).Count()", span="317-317"];
m11_100 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="banner.Add(''Unrealized'', ''$'' + algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="329-329"];
m11_101 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="banner.Add(''Fees'', ''-$'' + algorithm.Portfolio.TotalFees.ToString(''N2''))", span="330-330"];
m11_102 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="banner.Add(''Net Profit'', ''$'' + algorithm.Portfolio.TotalProfit.ToString(''N2''))", span="331-331"];
m11_104 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="banner.Add(''Equity'', ''$'' + algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="333-333"];
m11_108 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var dataPoints = algorithmManager.DataPoints + algorithm.HistoryProvider.DataPointCount", span="343-343"];
m11_25 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="historyProvider is BrokerageHistoryProvider", span="127-127"];
m11_26 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="(historyProvider as BrokerageHistoryProvider).SetBrokerage(brokerage)", span="129-129"];
m11_12 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Thread threadRealTime = null", span="95-95"];
m11_16 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadResults.Start()", span="104-104"];
m11_125 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadResults != null && threadResults.IsAlive", span="380-380"];
m11_126 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadResults.Abort()", span="380-380"];
m11_20 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="IBrokerageFactory factory", span="116-116"];
m11_54 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''         Brokerage:      '' + brokerage.GetType().FullName)", span="186-186"];
m11_127 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="brokerage != null", span="382-382"];
m11_129 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="brokerage.Disconnect()", span="385-385"];
m11_55 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label=initializeComplete, span="189-189"];
m11_34 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="initializeComplete = false", span="157-157"];
m11_40 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label=Exception, span="166-166"];
m11_45 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''JOB HANDLERS: '')", span="176-176"];
m11_37 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Error(''Engine.Run(): '' + errorMessage)", span="161-161"];
m11_42 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="169-169"];
m11_66 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadFeed.Start()", span="229-229"];
m11_121 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadFeed != null && threadFeed.IsAlive", span="378-378"];
m11_122 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadFeed.Abort()", span="378-378"];
m11_67 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadTransactions.Start()", span="230-230"];
m11_123 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadTransactions != null && threadTransactions.IsAlive", span="379-379"];
m11_124 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadTransactions.Abort()", span="379-379"];
m11_68 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="threadRealTime.Start()", span="231-231"];
m11_70 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var isolator = new Isolator()", span="239-239"];
m11_72 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="!complete", span="264-264"];
m11_77 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label=Exception, span="277-277"];
m11_92 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="charts.ContainsKey(strategyEquityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey) &&\r\n                                charts.ContainsKey(benchmarkKey) &&\r\n                                charts[benchmarkKey].Series.ContainsKey(benchmarkKey)", span="307-311"];
m11_93 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="314-314"];
m11_94 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="315-315"];
m11_97 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var benchmark = charts[benchmarkKey].Series[benchmarkKey].Values", span="318-318"];
m11_82 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var holdings = new Dictionary<string, Holding>()", span="288-288"];
m11_85 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var csvTransactionsFileName = Config.Get(''transaction-log'')", span="292-292"];
m11_86 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="!string.IsNullOrEmpty(csvTransactionsFileName)", span="293-293"];
m11_88 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="string strategyEquityKey = ''Strategy Equity''", span="301-301"];
m11_103 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="banner.Add(''Return'', netReturn.ToString(''P''))", span="332-332"];
m11_107 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="342-342"];
m11_83 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var banner = new Dictionary<string, string>()", span="289-289"];
m11_84 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var statisticsResults = new StatisticsResults()", span="290-290"];
m11_111 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label=Exception, span="351-351"];
m11_112 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Error(err, ''Error sending analysis results'')", span="353-353"];
m11_117 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var ts = Stopwatch.StartNew()", span="366-366"];
m11_120 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''Waiting for threads to exit...'')", span="374-374"];
m11_119 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Thread.Sleep(100)", span="373-373"];
m11_131 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''Engine.Run(): Disposing of setup handler...'')", span="389-389"];
m11_133 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="392-392"];
m11_135 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Error(err, ''Error running algorithm'')", span="396-396"];
m11_8 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var initializeComplete = false", span="91-91"];
m11_56 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="var startTime = DateTime.Now", span="192-192"];
m11_105 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label=Exception, span="336-336"];
m11_11 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Thread threadResults = null", span="94-94"];
m11_128 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Trace(''Engine.Run(): Disconnecting from brokerage...'')", span="384-384"];
m11_41 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Error(err)", span="168-168"];
m11_9 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Thread threadFeed = null", span="92-92"];
m11_10 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Thread threadTransactions = null", span="93-93"];
m11_89 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="string equityKey = ''Equity''", span="302-302"];
m11_90 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="string dailyPerformanceKey = ''Daily Performance''", span="303-303"];
m11_91 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="string benchmarkKey = ''Benchmark''", span="304-304"];
m11_106 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Log.Error(err, ''Error generating statistics packet'')", span="338-338"];
m11_134 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label=Exception, span="394-394"];
m11_136 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="DukascopyDataDownloader.cs", label="Exit QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83"];
m11_168 [cluster="QuantConnect.Isolator.Isolator()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m11_171 [cluster="System.Exception.Exception(string)", file="DukascopyDataDownloader.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m11_143 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="89-89"];
m11_198 [cluster="System.IDisposable.Dispose()", file="DukascopyDataDownloader.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m11_172 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="416-416"];
m11_234 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.DataFeed != null", span="419-419"];
m11_235 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.DataFeed.Exit()", span="419-419"];
m11_236 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results != null", span="420-420"];
m11_239 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.LogMessage(message)", span="424-424"];
m11_240 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers.Results.RuntimeError(message, err.StackTrace)", span="425-425"];
m11_241 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="DukascopyDataDownloader.cs", label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err)", span="426-426"];
m11_233 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="DukascopyDataDownloader.cs", label="Log.Error(err, ''Breaking out of parent try catch:'')", span="418-418"];
m11_237 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="DukascopyDataDownloader.cs", label="var message = ''Runtime Error: '' + err", span="422-422"];
m11_238 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="DukascopyDataDownloader.cs", label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="423-423"];
m11_242 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="DukascopyDataDownloader.cs", label="Exit QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="416-416"];
m11_150 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", span="60-60"];
m11_169 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="69-69"];
m11_259 [cluster="QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="65-65"];
m11_264 [cluster="System.DateTime.ToString(string)", file="DukascopyDataDownloader.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m11_162 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="52-52"];
m11_262 [cluster="System.IO.Directory.CreateDirectory(string)", file="DukascopyDataDownloader.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m11_149 [cluster="QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="45-45"];
m11_165 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="DukascopyDataDownloader.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m11_140 [cluster="System.Threading.Thread.Start()", file="DukascopyDataDownloader.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m11_156 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265"];
m11_164 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219"];
m11_263 [cluster="System.IO.StreamWriter.StreamWriter(string)", file="DukascopyDataDownloader.cs", label="Entry System.IO.StreamWriter.StreamWriter(string)", span="0-0"];
m11_197 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="108-108"];
m11_191 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="77-77"];
m11_204 [cluster="string.Format(string, object)", file="DukascopyDataDownloader.cs", label="Entry string.Format(string, object)", span="0-0"];
m11_145 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374"];
m11_196 [cluster="System.Threading.Thread.Abort()", file="DukascopyDataDownloader.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m11_186 [cluster="double.ToString(string)", file="DukascopyDataDownloader.cs", label="Entry double.ToString(string)", span="0-0"];
m11_261 [cluster="System.IO.Directory.Exists(string)", file="DukascopyDataDownloader.cs", label="Entry System.IO.Directory.Exists(string)", span="0-0"];
m11_260 [cluster="System.IO.Path.GetDirectoryName(string)", file="DukascopyDataDownloader.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m11_195 [cluster="System.Threading.Thread.Sleep(int)", file="DukascopyDataDownloader.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m11_181 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292"];
m11_265 [cluster="System.IO.TextWriter.WriteLine(string)", file="DukascopyDataDownloader.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m11_194 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="DukascopyDataDownloader.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m11_192 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="64-64"];
m11_146 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="433-433"];
m11_244 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="DukascopyDataDownloader.cs", label="historyProvider.IsNullOrEmpty()", span="435-435"];
m11_246 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="DukascopyDataDownloader.cs", label="return Composer.Instance.GetExportedValueByTypeName<IHistoryProvider>(historyProvider);", span="439-439"];
m11_245 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="DukascopyDataDownloader.cs", label="historyProvider = Config.Get(''history-provider'', ''SubscriptionDataReaderHistoryProvider'')", span="437-437"];
m11_247 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="DukascopyDataDownloader.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="433-433"];
m11_248 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="DukascopyDataDownloader.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m11_139 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="DukascopyDataDownloader.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0"];
m11_232 [cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50"];
m11_174 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DukascopyDataDownloader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m11_214 [cluster="QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", span="27-27"];
m11_160 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="437-437"];
m11_183 [cluster="QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", span="40-40"];
m11_0 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70"];
m11_1 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="DukascopyDataDownloader.cs", label="_liveMode = liveMode", span="72-72"];
m11_2 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="DukascopyDataDownloader.cs", label="_systemHandlers = systemHandlers", span="73-73"];
m11_3 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="DukascopyDataDownloader.cs", label="_algorithmHandlers = algorithmHandlers", span="74-74"];
m11_4 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="DukascopyDataDownloader.cs", label="Exit QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70"];
m11_141 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="80-80"];
m11_188 [cluster="string.Format(string, params object[])", file="DukascopyDataDownloader.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m11_217 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="425-425"];
m11_142 [cluster="QuantConnect.Lean.Engine.Server.ILeanManagement.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Server.ILeanManagement.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="41-41"];
m11_203 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="447-447"];
m11_228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="673-673"];
m11_166 [cluster="string.Format(string, object, object)", file="DukascopyDataDownloader.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m11_175 [cluster="QuantConnect.Statistics.StatisticsResults.StatisticsResults()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Statistics.StatisticsResults.StatisticsResults()", span="55-55"];
m11_173 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DukascopyDataDownloader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m11_151 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="101-101"];
m11_177 [cluster="string.IsNullOrEmpty(string)", file="DukascopyDataDownloader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_187 [cluster="long.ToString(string)", file="DukascopyDataDownloader.cs", label="Entry long.ToString(string)", span="0-0"];
m11_158 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m11_243 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="120-120"];
m11_182 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="DukascopyDataDownloader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m11_170 [cluster="System.TimeSpan.ToString(string)", file="DukascopyDataDownloader.cs", label="Entry System.TimeSpan.ToString(string)", span="0-0"];
m11_176 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m11_184 [cluster="decimal.ToString(string)", file="DukascopyDataDownloader.cs", label="Entry decimal.ToString(string)", span="0-0"];
m11_193 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="243-243"];
m11_155 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="134-134"];
m11_189 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="DukascopyDataDownloader.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="212-212"];
m11_269 [file="DukascopyDataDownloader.cs", label="QuantConnect.Lean.Engine.Engine", span=""];
m11_270 [file="DukascopyDataDownloader.cs", label=algorithm, span=""];
m11_271 [file="DukascopyDataDownloader.cs", label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
m11_272 [file="DukascopyDataDownloader.cs", label=algorithmManager, span=""];
m11_273 [file="DukascopyDataDownloader.cs", label=isolator, span=""];
m13_49 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="Engine.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData<T>()", span="155-155"];
m13_50 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="Engine.cs", label="BaseData data", span="158-158"];
m13_51 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="Engine.cs", label="_dataByType.TryGetValue(typeof (T), out data)", span="159-159"];
m13_52 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="Engine.cs", label="return data as T;", span="160-160"];
m13_53 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="Engine.cs", label="Exit QuantConnect.Securities.SecurityCache.GetData<T>()", span="155-155"];
m13_45 [cluster="object.GetType()", file="Engine.cs", label="Entry object.GetType()", span="0-0"];
m13_55 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="Engine.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="166-166"];
m13_56 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="Engine.cs", label="_dataByType.Clear()", span="168-168"];
m13_57 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="Engine.cs", label="Exit QuantConnect.Securities.SecurityCache.Reset()", span="166-166"];
m13_58 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="Engine.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m13_46 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="Engine.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData()", span="145-145"];
m13_47 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="Engine.cs", label="return _lastData;", span="147-147"];
m13_48 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="Engine.cs", label="Exit QuantConnect.Securities.SecurityCache.GetData()", span="145-145"];
m13_0 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="89-89"];
m13_1 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="_lastData = data", span="91-91"];
m13_2 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="_dataByType[data.GetType()] = data", span="92-92"];
m13_3 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="Price = data.Value", span="95-95"];
m13_4 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="var tick = data as Tick", span="97-97"];
m13_17 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="var bar = data as IBar", span="109-109"];
m13_19 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="_lastQuoteBarUpdate != data.EndTime", span="112-112"];
m13_5 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="tick != null", span="98-98"];
m13_6 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="tick.LastPrice != 0", span="100-100"];
m13_7 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="Price = tick.LastPrice", span="100-100"];
m13_8 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="tick.BidPrice != 0", span="102-102"];
m13_9 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="BidPrice = tick.BidPrice", span="102-102"];
m13_10 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="tick.BidSize != 0", span="103-103"];
m13_11 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="BidSize = tick.BidSize", span="103-103"];
m13_12 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="tick.AskPrice != 0", span="105-105"];
m13_13 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="AskPrice = tick.AskPrice", span="105-105"];
m13_14 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="tick.AskSize != 0", span="106-106"];
m13_15 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="AskSize = tick.AskSize", span="106-106"];
m13_16 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="return;", span="107-107"];
m13_18 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="bar != null", span="110-110"];
m13_20 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="bar.Open != 0", span="114-114"];
m13_21 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="Open = bar.Open", span="114-114"];
m13_22 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="bar.High != 0", span="115-115"];
m13_23 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="High = bar.High", span="115-115"];
m13_24 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="bar.Low != 0", span="116-116"];
m13_25 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="Low = bar.Low", span="116-116"];
m13_26 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="bar.Close != 0", span="117-117"];
m13_27 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="Price = bar.Close", span="119-119"];
m13_28 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="Close = bar.Close", span="120-120"];
m13_29 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="var tradeBar = bar as TradeBar", span="124-124"];
m13_33 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="var quoteBar = bar as QuoteBar", span="129-129"];
m13_30 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="tradeBar != null", span="125-125"];
m13_31 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="tradeBar.Volume != 0", span="127-127"];
m13_32 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="Volume = tradeBar.Volume", span="127-127"];
m13_34 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="quoteBar != null", span="130-130"];
m13_35 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="_lastQuoteBarUpdate = quoteBar.EndTime", span="132-132"];
m13_36 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="quoteBar.Ask != null && quoteBar.Ask.Close != 0", span="133-133"];
m13_37 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="AskPrice = quoteBar.Ask.Close", span="133-133"];
m13_38 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="quoteBar.Bid != null && quoteBar.Bid.Close != 0", span="134-134"];
m13_39 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="BidPrice = quoteBar.Bid.Close", span="134-134"];
m13_40 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="quoteBar.LastBidSize != 0", span="135-135"];
m13_41 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="BidSize = quoteBar.LastBidSize", span="135-135"];
m13_42 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="quoteBar.LastAskSize != 0", span="136-136"];
m13_43 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="AskSize = quoteBar.LastAskSize", span="136-136"];
m13_44 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Engine.cs", label="Exit QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="89-89"];
m13_54 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Engine.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m13_59 [file="Engine.cs", label="QuantConnect.Securities.SecurityCache", span=""];
m15_0 [cluster="QuantConnect.Interfaces.IMessagingHandler.Initialize()", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Initialize()", span="38-38"];
m15_1 [cluster="QuantConnect.Interfaces.IMessagingHandler.Initialize()", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.Initialize()", span="38-38"];
m15_22 [cluster="QuantConnect.Interfaces.IMessagingHandler.Sms(QuantConnect.Notifications.NotificationSms)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Sms(QuantConnect.Notifications.NotificationSms)", span="113-113"];
m15_23 [cluster="QuantConnect.Interfaces.IMessagingHandler.Sms(QuantConnect.Notifications.NotificationSms)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.Sms(QuantConnect.Notifications.NotificationSms)", span="113-113"];
m15_4 [cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50"];
m15_5 [cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50"];
m15_6 [cluster="QuantConnect.Interfaces.IMessagingHandler.DebugMessage(string, int, string, string)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.DebugMessage(string, int, string, string)", span="59-59"];
m15_7 [cluster="QuantConnect.Interfaces.IMessagingHandler.DebugMessage(string, int, string, string)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.DebugMessage(string, int, string, string)", span="59-59"];
m15_10 [cluster="QuantConnect.Interfaces.IMessagingHandler.LogMessage(string, string)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.LogMessage(string, string)", span="72-72"];
m15_11 [cluster="QuantConnect.Interfaces.IMessagingHandler.LogMessage(string, string)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.LogMessage(string, string)", span="72-72"];
m15_16 [cluster="QuantConnect.Interfaces.IMessagingHandler.BacktestResult(QuantConnect.Packets.BacktestResultPacket, bool)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.BacktestResult(QuantConnect.Packets.BacktestResultPacket, bool)", span="95-95"];
m15_17 [cluster="QuantConnect.Interfaces.IMessagingHandler.BacktestResult(QuantConnect.Packets.BacktestResultPacket, bool)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.BacktestResult(QuantConnect.Packets.BacktestResultPacket, bool)", span="95-95"];
m15_20 [cluster="QuantConnect.Interfaces.IMessagingHandler.Email(QuantConnect.Notifications.NotificationEmail)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Email(QuantConnect.Notifications.NotificationEmail)", span="107-107"];
m15_21 [cluster="QuantConnect.Interfaces.IMessagingHandler.Email(QuantConnect.Notifications.NotificationEmail)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.Email(QuantConnect.Notifications.NotificationEmail)", span="107-107"];
m15_24 [cluster="QuantConnect.Interfaces.IMessagingHandler.Web(QuantConnect.Notifications.NotificationWeb)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Web(QuantConnect.Notifications.NotificationWeb)", span="119-119"];
m15_25 [cluster="QuantConnect.Interfaces.IMessagingHandler.Web(QuantConnect.Notifications.NotificationWeb)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.Web(QuantConnect.Notifications.NotificationWeb)", span="119-119"];
m15_12 [cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="80-80"];
m15_13 [cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="80-80"];
m15_14 [cluster="QuantConnect.Interfaces.IMessagingHandler.AlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.AlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="88-88"];
m15_15 [cluster="QuantConnect.Interfaces.IMessagingHandler.AlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.AlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="88-88"];
m15_2 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", span="44-44"];
m15_3 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", span="44-44"];
m15_8 [cluster="QuantConnect.Interfaces.IMessagingHandler.SecurityTypes(QuantConnect.Packets.SecurityTypesPacket)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SecurityTypes(QuantConnect.Packets.SecurityTypesPacket)", span="65-65"];
m15_9 [cluster="QuantConnect.Interfaces.IMessagingHandler.SecurityTypes(QuantConnect.Packets.SecurityTypesPacket)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.SecurityTypes(QuantConnect.Packets.SecurityTypesPacket)", span="65-65"];
m15_18 [cluster="QuantConnect.Interfaces.IMessagingHandler.LiveTradingResult(QuantConnect.Packets.LiveResultPacket)", file="IMessagingHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.LiveTradingResult(QuantConnect.Packets.LiveResultPacket)", span="101-101"];
m15_19 [cluster="QuantConnect.Interfaces.IMessagingHandler.LiveTradingResult(QuantConnect.Packets.LiveResultPacket)", file="IMessagingHandler.cs", label="Exit QuantConnect.Interfaces.IMessagingHandler.LiveTradingResult(QuantConnect.Packets.LiveResultPacket)", span="101-101"];
m16_25 [cluster="Unk.AddParameter", file="ImmediateFillModel.cs", label="Entry Unk.AddParameter", span=""];
m16_259 [cluster="QuantConnect.Api.Api.GetAlgorithmStatus(string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.GetAlgorithmStatus(string)", span="614-614"];
m16_260 [cluster="QuantConnect.Api.Api.GetAlgorithmStatus(string)", file="ImmediateFillModel.cs", label="return new AlgorithmControl()\r\n            {\r\n                ChartSubscription = ''*''\r\n            };", span="616-619"];
m16_261 [cluster="QuantConnect.Api.Api.GetAlgorithmStatus(string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.GetAlgorithmStatus(string)", span="614-614"];
m16_255 [cluster="System.Uri.Uri(string)", file="ImmediateFillModel.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m16_290 [cluster="QuantConnect.Api.Api.LiveUnsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.LiveUnsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="722-722"];
m16_291 [cluster="QuantConnect.Api.Api.LiveUnsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ImmediateFillModel.cs", label="_socketConnection.Unsubscribe(symbols)", span="724-724"];
m16_292 [cluster="QuantConnect.Api.Api.LiveUnsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.LiveUnsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="722-722"];
m16_211 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", span="534-534"];
m16_212 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="var epochStartTime = startTime == null ? 0 : Time.DateTimeToUnixTimeStamp(startTime.Value)", span="536-536"];
m16_213 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="var epochEndTime   = endTime   == null ? Time.DateTimeToUnixTimeStamp(DateTime.UtcNow) : Time.DateTimeToUnixTimeStamp(endTime.Value)", span="537-537"];
m16_216 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="542-542"];
m16_217 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="request.AddParameter(''algorithmId'', algorithmId)", span="543-543"];
m16_218 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="request.AddParameter(''start'', epochStartTime)", span="544-544"];
m16_214 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''live/read/log'', Method.GET)", span="539-539"];
m16_219 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="request.AddParameter(''end'', epochEndTime)", span="545-545"];
m16_215 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="request.AddParameter(''format'', ''json'')", span="541-541"];
m16_221 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="548-548"];
m16_220 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="LiveLog result", span="547-547"];
m16_222 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="return result;", span="549-549"];
m16_223 [cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", span="534-534"];
m16_276 [cluster="QuantConnect.Securities.MarketHoursSegment.OpenAllDay()", file="ImmediateFillModel.cs", label="Entry QuantConnect.Securities.MarketHoursSegment.OpenAllDay()", span="60-60"];
m16_300 [cluster="QuantConnect.Api.Api.CreateSecureHash(int, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.CreateSecureHash(int, string)", span="751-751"];
m16_301 [cluster="QuantConnect.Api.Api.CreateSecureHash(int, string)", file="ImmediateFillModel.cs", label="var data = string.Format(''{0}:{1}'', token, timestamp)", span="755-755"];
m16_302 [cluster="QuantConnect.Api.Api.CreateSecureHash(int, string)", file="ImmediateFillModel.cs", label="return data.ToSHA256();", span="756-756"];
m16_303 [cluster="QuantConnect.Api.Api.CreateSecureHash(int, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.CreateSecureHash(int, string)", span="751-751"];
m16_275 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m16_281 [cluster="System.IO.Directory.GetCurrentDirectory()", file="ImmediateFillModel.cs", label="Entry System.IO.Directory.GetCurrentDirectory()", span="0-0"];
m16_76 [cluster="QuantConnect.Api.Api.ReadProjectFile(int, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.ReadProjectFile(int, string)", span="221-221"];
m16_77 [cluster="QuantConnect.Api.Api.ReadProjectFile(int, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''files/read'', Method.GET)", span="223-223"];
m16_78 [cluster="QuantConnect.Api.Api.ReadProjectFile(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="225-225"];
m16_79 [cluster="QuantConnect.Api.Api.ReadProjectFile(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''name'', fileName)", span="226-226"];
m16_81 [cluster="QuantConnect.Api.Api.ReadProjectFile(int, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="229-229"];
m16_80 [cluster="QuantConnect.Api.Api.ReadProjectFile(int, string)", file="ImmediateFillModel.cs", label="ProjectFilesResponse result", span="228-228"];
m16_82 [cluster="QuantConnect.Api.Api.ReadProjectFile(int, string)", file="ImmediateFillModel.cs", label="return result;", span="230-230"];
m16_83 [cluster="QuantConnect.Api.Api.ReadProjectFile(int, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.ReadProjectFile(int, string)", span="221-221"];
m16_42 [cluster="QuantConnect.Api.Api.AddProjectFile(int, string, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.AddProjectFile(int, string, string)", span="138-138"];
m16_43 [cluster="QuantConnect.Api.Api.AddProjectFile(int, string, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''files/create'', Method.POST)", span="140-140"];
m16_44 [cluster="QuantConnect.Api.Api.AddProjectFile(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="142-142"];
m16_45 [cluster="QuantConnect.Api.Api.AddProjectFile(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''name'', name)", span="143-143"];
m16_46 [cluster="QuantConnect.Api.Api.AddProjectFile(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''content'', content)", span="144-144"];
m16_48 [cluster="QuantConnect.Api.Api.AddProjectFile(int, string, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="147-147"];
m16_47 [cluster="QuantConnect.Api.Api.AddProjectFile(int, string, string)", file="ImmediateFillModel.cs", label="ProjectFilesResponse result", span="146-146"];
m16_49 [cluster="QuantConnect.Api.Api.AddProjectFile(int, string, string)", file="ImmediateFillModel.cs", label="return result;", span="148-148"];
m16_50 [cluster="QuantConnect.Api.Api.AddProjectFile(int, string, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.AddProjectFile(int, string, string)", span="138-138"];
m16_24 [cluster="Unk.SerializeObject", file="ImmediateFillModel.cs", label="Entry Unk.SerializeObject", span=""];
m16_14 [cluster="OrderJsonConverter.cstr", file="ImmediateFillModel.cs", label="Entry OrderJsonConverter.cstr", span=""];
m16_284 [cluster="QuantConnect.Api.Api.SendUserEmail(string, string, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.SendUserEmail(string, string, string)", span="704-704"];
m16_285 [cluster="QuantConnect.Api.Api.SendUserEmail(string, string, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.SendUserEmail(string, string, string)", span="704-704"];
m16_10 [cluster="lambda expression", file="ImmediateFillModel.cs", label="Entry lambda expression", span="57-60"];
m16_11 [cluster="lambda expression", file="ImmediateFillModel.cs", label="new JsonSerializerSettings\r\n            {\r\n                Converters = { new OrderJsonConverter() }\r\n            }", span="57-60"];
m16_12 [cluster="lambda expression", file="ImmediateFillModel.cs", label="Exit lambda expression", span="57-60"];
m16_282 [cluster="QuantConnect.Api.Api.Store(string, string, QuantConnect.StoragePermissions, bool)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.Store(string, string, QuantConnect.StoragePermissions, bool)", span="692-692"];
m16_283 [cluster="QuantConnect.Api.Api.Store(string, string, QuantConnect.StoragePermissions, bool)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.Store(string, string, QuantConnect.StoragePermissions, bool)", span="692-692"];
m16_257 [cluster="Unk.DownloadData", file="ImmediateFillModel.cs", label="Entry Unk.DownloadData", span=""];
m16_256 [cluster="RestClient.cstr", file="ImmediateFillModel.cs", label="Entry RestClient.cstr", span=""];
m16_297 [cluster="QuantConnect.Api.ApiWebSocketConnection.GetLiveData()", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.ApiWebSocketConnection.GetLiveData()", span="176-176"];
m16_170 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", span="443-443"];
m16_171 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="status.HasValue                        &&\r\n                status != AlgorithmStatus.Running      &&\r\n                status != AlgorithmStatus.RuntimeError &&\r\n                status != AlgorithmStatus.Stopped      &&\r\n                status != AlgorithmStatus.Liquidated", span="448-452"];
m16_174 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="status.HasValue", span="460-460"];
m16_175 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="request.AddParameter(''status'', status.ToString())", span="462-462"];
m16_176 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="var epochStartTime = startTime == null ? 0 : Time.DateTimeToUnixTimeStamp(startTime.Value)", span="465-465"];
m16_177 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="var epochEndTime   = endTime   == null ? Time.DateTimeToUnixTimeStamp(DateTime.UtcNow) : Time.DateTimeToUnixTimeStamp(endTime.Value)", span="466-466"];
m16_172 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="throw new ArgumentException(\r\n                    ''The Api only supports Algorithm Statuses of Running, Stopped, RuntimeError and Liquidated'');", span="454-455"];
m16_173 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''live/read'', Method.GET)", span="458-458"];
m16_178 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="request.AddParameter(''start'', epochStartTime)", span="468-468"];
m16_179 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="request.AddParameter(''end'', epochEndTime)", span="469-469"];
m16_181 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="472-472"];
m16_180 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="LiveList result", span="471-471"];
m16_182 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="return result;", span="473-473"];
m16_183 [cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", span="443-443"];
m16_254 [cluster="System.IO.DirectoryInfo.Create()", file="ImmediateFillModel.cs", label="Entry System.IO.DirectoryInfo.Create()", span="0-0"];
m16_23 [cluster="RestRequest.cstr", file="ImmediateFillModel.cs", label="Entry RestRequest.cstr", span=""];
m16_294 [cluster="QuantConnect.Api.Api.GetLiveData()", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.GetLiveData()", span="731-731"];
m16_295 [cluster="QuantConnect.Api.Api.GetLiveData()", file="ImmediateFillModel.cs", label="return _socketConnection.GetLiveData();", span="733-733"];
m16_296 [cluster="QuantConnect.Api.Api.GetLiveData()", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.GetLiveData()", span="731-731"];
m16_8 [cluster="QuantConnect.Api.ApiWebSocketConnection.ApiWebSocketConnection(int, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.ApiWebSocketConnection.ApiWebSocketConnection(int, string)", span="61-61"];
m16_238 [cluster="System.DateTime.ToString(string)", file="ImmediateFillModel.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m16_278 [cluster="QuantConnect.Api.Api.StoreLogs(System.Collections.Generic.List<string>, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.StoragePermissions, bool)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.StoreLogs(System.Collections.Generic.List<string>, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.StoragePermissions, bool)", span="684-684"];
m16_279 [cluster="QuantConnect.Api.Api.StoreLogs(System.Collections.Generic.List<string>, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.StoragePermissions, bool)", file="ImmediateFillModel.cs", label="return Path.Combine(Directory.GetCurrentDirectory(), ''log.txt'');", span="686-686"];
m16_280 [cluster="QuantConnect.Api.Api.StoreLogs(System.Collections.Generic.List<string>, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.StoragePermissions, bool)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.StoreLogs(System.Collections.Generic.List<string>, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.StoragePermissions, bool)", span="684-684"];
m16_69 [cluster="QuantConnect.Api.Api.ReadProjectFiles(int)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.ReadProjectFiles(int)", span="202-202"];
m16_70 [cluster="QuantConnect.Api.Api.ReadProjectFiles(int)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''files/read'', Method.GET)", span="204-204"];
m16_71 [cluster="QuantConnect.Api.Api.ReadProjectFiles(int)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="206-206"];
m16_73 [cluster="QuantConnect.Api.Api.ReadProjectFiles(int)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="209-209"];
m16_72 [cluster="QuantConnect.Api.Api.ReadProjectFiles(int)", file="ImmediateFillModel.cs", label="ProjectFilesResponse result", span="208-208"];
m16_74 [cluster="QuantConnect.Api.Api.ReadProjectFiles(int)", file="ImmediateFillModel.cs", label="return result;", span="210-210"];
m16_75 [cluster="QuantConnect.Api.Api.ReadProjectFiles(int)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.ReadProjectFiles(int)", span="202-202"];
m16_289 [cluster="QuantConnect.Api.ApiWebSocketConnection.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.ApiWebSocketConnection.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="193-193"];
m16_305 [cluster="string.ToSHA256()", file="ImmediateFillModel.cs", label="Entry string.ToSHA256()", span="112-112"];
m16_51 [cluster="QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", span="160-160"];
m16_52 [cluster="QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''files/update'', Method.POST)", span="162-162"];
m16_53 [cluster="QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="164-164"];
m16_54 [cluster="QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''name'', oldFileName)", span="165-165"];
m16_55 [cluster="QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''newName'', newFileName)", span="166-166"];
m16_57 [cluster="QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="169-169"];
m16_56 [cluster="QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", file="ImmediateFillModel.cs", label="RestResponse result", span="168-168"];
m16_58 [cluster="QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", file="ImmediateFillModel.cs", label="return result;", span="170-170"];
m16_59 [cluster="QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", span="160-160"];
m16_237 [cluster="System.Enum.ToLower()", file="ImmediateFillModel.cs", label="Entry System.Enum.ToLower()", span="826-826"];
m16_116 [cluster="QuantConnect.Api.Api.CreateBacktest(int, string, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.CreateBacktest(int, string, string)", span="316-316"];
m16_117 [cluster="QuantConnect.Api.Api.CreateBacktest(int, string, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''backtests/create'', Method.POST)", span="318-318"];
m16_118 [cluster="QuantConnect.Api.Api.CreateBacktest(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="319-319"];
m16_119 [cluster="QuantConnect.Api.Api.CreateBacktest(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''compileId'', compileId)", span="320-320"];
m16_120 [cluster="QuantConnect.Api.Api.CreateBacktest(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''backtestName'', backtestName)", span="321-321"];
m16_122 [cluster="QuantConnect.Api.Api.CreateBacktest(int, string, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="323-323"];
m16_121 [cluster="QuantConnect.Api.Api.CreateBacktest(int, string, string)", file="ImmediateFillModel.cs", label="Backtest result", span="322-322"];
m16_123 [cluster="QuantConnect.Api.Api.CreateBacktest(int, string, string)", file="ImmediateFillModel.cs", label="return result;", span="324-324"];
m16_124 [cluster="QuantConnect.Api.Api.CreateBacktest(int, string, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.CreateBacktest(int, string, string)", span="316-316"];
m16_224 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", span="560-560"];
m16_225 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''data/read'', Method.GET)", span="562-562"];
m16_227 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="request.AddParameter(''ticker'', symbol.Value.ToLower())", span="565-565"];
m16_228 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="request.AddParameter(''type'', symbol.ID.SecurityType.ToLower())", span="566-566"];
m16_229 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="request.AddParameter(''market'', symbol.ID.Market)", span="567-567"];
m16_230 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="request.AddParameter(''resolution'', resolution)", span="568-568"];
m16_231 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="request.AddParameter(''date'', date.ToString(''yyyyMMdd''))", span="569-569"];
m16_226 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="request.AddParameter(''format'', ''link'')", span="564-564"];
m16_233 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="572-572"];
m16_232 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="Link result", span="571-571"];
m16_234 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="return result;", span="573-573"];
m16_235 [cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", span="560-560"];
m16_26 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", span="75-75"];
m16_236 [cluster="string.ToLower()", file="ImmediateFillModel.cs", label="Entry string.ToLower()", span="0-0"];
m16_203 [cluster="QuantConnect.Api.Api.StopLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.StopLiveAlgorithm(int)", span="515-515"];
m16_204 [cluster="QuantConnect.Api.Api.StopLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''live/update/stop'', Method.POST)", span="517-517"];
m16_206 [cluster="QuantConnect.Api.Api.StopLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="519-519"];
m16_205 [cluster="QuantConnect.Api.Api.StopLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="request.RequestFormat = DataFormat.Json", span="518-518"];
m16_208 [cluster="QuantConnect.Api.Api.StopLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="521-521"];
m16_207 [cluster="QuantConnect.Api.Api.StopLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="RestResponse result", span="520-520"];
m16_209 [cluster="QuantConnect.Api.Api.StopLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="return result;", span="522-522"];
m16_210 [cluster="QuantConnect.Api.Api.StopLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.StopLiveAlgorithm(int)", span="515-515"];
m16_141 [cluster="QuantConnect.Api.Api.ListBacktests(int)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.ListBacktests(int)", span="375-375"];
m16_142 [cluster="QuantConnect.Api.Api.ListBacktests(int)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''backtests/read'', Method.GET)", span="377-377"];
m16_143 [cluster="QuantConnect.Api.Api.ListBacktests(int)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="378-378"];
m16_145 [cluster="QuantConnect.Api.Api.ListBacktests(int)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="380-380"];
m16_144 [cluster="QuantConnect.Api.Api.ListBacktests(int)", file="ImmediateFillModel.cs", label="BacktestList result", span="379-379"];
m16_146 [cluster="QuantConnect.Api.Api.ListBacktests(int)", file="ImmediateFillModel.cs", label="return result;", span="381-381"];
m16_147 [cluster="QuantConnect.Api.Api.ListBacktests(int)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.ListBacktests(int)", span="375-375"];
m16_185 [cluster="System.Nullable<T>.ToString()", file="ImmediateFillModel.cs", label="Entry System.Nullable<T>.ToString()", span="0-0"];
m16_0 [cluster="QuantConnect.Api.Api.Initialize(int, string, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.Initialize(int, string, string)", span="49-49"];
m16_1 [cluster="QuantConnect.Api.Api.Initialize(int, string, string)", file="ImmediateFillModel.cs", label="ApiConnection = new ApiConnection(userId, token)", span="51-51"];
m16_2 [cluster="QuantConnect.Api.Api.Initialize(int, string, string)", file="ImmediateFillModel.cs", label="_socketConnection = new ApiWebSocketConnection(userId, token)", span="52-52"];
m16_3 [cluster="QuantConnect.Api.Api.Initialize(int, string, string)", file="ImmediateFillModel.cs", label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder(dataFolder)", span="53-53"];
m16_4 [cluster="QuantConnect.Api.Api.Initialize(int, string, string)", file="ImmediateFillModel.cs", label="_dataFolder = dataFolder", span="54-54"];
m16_5 [cluster="QuantConnect.Api.Api.Initialize(int, string, string)", file="ImmediateFillModel.cs", label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n            {\r\n                Converters = { new OrderJsonConverter() }\r\n            }", span="57-60"];
m16_6 [cluster="QuantConnect.Api.Api.Initialize(int, string, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.Initialize(int, string, string)", span="49-49"];
m16_27 [cluster="QuantConnect.Api.Api.ReadProject(int)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.ReadProject(int)", span="103-103"];
m16_28 [cluster="QuantConnect.Api.Api.ReadProject(int)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''projects/read'', Method.GET)", span="105-105"];
m16_30 [cluster="QuantConnect.Api.Api.ReadProject(int)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="108-108"];
m16_29 [cluster="QuantConnect.Api.Api.ReadProject(int)", file="ImmediateFillModel.cs", label="request.RequestFormat = DataFormat.Json", span="107-107"];
m16_32 [cluster="QuantConnect.Api.Api.ReadProject(int)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="111-111"];
m16_31 [cluster="QuantConnect.Api.Api.ReadProject(int)", file="ImmediateFillModel.cs", label="ProjectResponse result", span="110-110"];
m16_33 [cluster="QuantConnect.Api.Api.ReadProject(int)", file="ImmediateFillModel.cs", label="return result;", span="112-112"];
m16_34 [cluster="QuantConnect.Api.Api.ReadProject(int)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.ReadProject(int)", span="103-103"];
m16_133 [cluster="QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", span="353-353"];
m16_134 [cluster="QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''backtests/update'', Method.POST)", span="355-355"];
m16_136 [cluster="QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''application/json'', JsonConvert.SerializeObject(new\r\n            {\r\n                projectId = projectId,\r\n                backtestId = backtestId,\r\n                name = name,\r\n                note = note\r\n            }), ParameterType.RequestBody)", span="357-363"];
m16_135 [cluster="QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", file="ImmediateFillModel.cs", label="request.RequestFormat = DataFormat.Json", span="356-356"];
m16_138 [cluster="QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="365-365"];
m16_137 [cluster="QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", file="ImmediateFillModel.cs", label="Backtest result", span="364-364"];
m16_139 [cluster="QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", file="ImmediateFillModel.cs", label="return result;", span="366-366"];
m16_140 [cluster="QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", span="353-353"];
m16_167 [cluster="Unk.AddHeader", file="ImmediateFillModel.cs", label="Entry Unk.AddHeader", span=""];
m16_13 [cluster="JsonSerializerSettings.cstr", file="ImmediateFillModel.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m16_168 [cluster="Unk.Clear", file="ImmediateFillModel.cs", label="Entry Unk.Clear", span=""];
m16_9 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder(string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder(string)", span="130-130"];
m16_125 [cluster="QuantConnect.Api.Api.ReadBacktest(int, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.ReadBacktest(int, string)", span="334-334"];
m16_126 [cluster="QuantConnect.Api.Api.ReadBacktest(int, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''backtests/read'', Method.GET)", span="336-336"];
m16_127 [cluster="QuantConnect.Api.Api.ReadBacktest(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''backtestId'', backtestId)", span="337-337"];
m16_128 [cluster="QuantConnect.Api.Api.ReadBacktest(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="338-338"];
m16_130 [cluster="QuantConnect.Api.Api.ReadBacktest(int, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="340-340"];
m16_129 [cluster="QuantConnect.Api.Api.ReadBacktest(int, string)", file="ImmediateFillModel.cs", label="Backtest result", span="339-339"];
m16_131 [cluster="QuantConnect.Api.Api.ReadBacktest(int, string)", file="ImmediateFillModel.cs", label="return result;", span="341-341"];
m16_132 [cluster="QuantConnect.Api.Api.ReadBacktest(int, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.ReadBacktest(int, string)", span="334-334"];
m16_277 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m16_239 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", span="584-584"];
m16_240 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="var link = ReadDataLink(symbol, resolution, date)", span="587-587"];
m16_243 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="var path = Path.Combine(_dataFolder, LeanData.GenerateRelativeZipFilePath(symbol.Value, symbol.ID.SecurityType, symbol.ID.Market, date, resolution))", span="594-594"];
m16_241 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="!link.Success", span="590-590"];
m16_245 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="var uri     = new Uri(link.DataLink)", span="600-600"];
m16_242 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="return false;", span="591-591"];
m16_244 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="(new FileInfo(path)).Directory.Create()", span="597-597"];
m16_248 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="client.DownloadData(request).SaveAs(path)", span="603-603"];
m16_246 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="var client  = new RestClient(uri.Scheme + ''://'' + uri.Host)", span="601-601"];
m16_247 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="var request = new RestRequest(uri.PathAndQuery, Method.GET)", span="602-602"];
m16_249 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="return true;", span="605-605"];
m16_250 [cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", span="584-584"];
m16_100 [cluster="QuantConnect.Api.Api.CreateCompile(int)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.CreateCompile(int)", span="277-277"];
m16_101 [cluster="QuantConnect.Api.Api.CreateCompile(int)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''compile/create'', Method.POST)", span="279-279"];
m16_102 [cluster="QuantConnect.Api.Api.CreateCompile(int)", file="ImmediateFillModel.cs", label="request.AddParameter(''application/json'', JsonConvert.SerializeObject(new\r\n            {\r\n                projectId = projectId\r\n            }), ParameterType.RequestBody)", span="280-283"];
m16_104 [cluster="QuantConnect.Api.Api.CreateCompile(int)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="285-285"];
m16_103 [cluster="QuantConnect.Api.Api.CreateCompile(int)", file="ImmediateFillModel.cs", label="Compile result", span="284-284"];
m16_105 [cluster="QuantConnect.Api.Api.CreateCompile(int)", file="ImmediateFillModel.cs", label="return result;", span="286-286"];
m16_106 [cluster="QuantConnect.Api.Api.CreateCompile(int)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.CreateCompile(int)", span="277-277"];
m16_298 [cluster="QuantConnect.Api.Api.Dispose()", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.Dispose()", span="741-741"];
m16_299 [cluster="QuantConnect.Api.Api.Dispose()", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.Dispose()", span="741-741"];
m16_157 [cluster="QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", span="414-414"];
m16_158 [cluster="QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''live/create'', Method.POST)", span="420-420"];
m16_161 [cluster="QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="ImmediateFillModel.cs", label="var body = JsonConvert.SerializeObject(new LiveAlgorithmApiSettingsWrapper(projectId, \r\n                                                                                       compileId, \r\n                                                                                       serverType, \r\n                                                                                       baseLiveAlgorithmSettings, \r\n                                                                                       versionId))", span="423-427"];
m16_159 [cluster="QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="ImmediateFillModel.cs", label="request.AddHeader(''Accept'', ''application/json'')", span="421-421"];
m16_160 [cluster="QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="ImmediateFillModel.cs", label="request.Parameters.Clear()", span="422-422"];
m16_162 [cluster="QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''application/json'', body, ParameterType.RequestBody)", span="428-428"];
m16_164 [cluster="QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="431-431"];
m16_163 [cluster="QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="ImmediateFillModel.cs", label="LiveAlgorithm result", span="430-430"];
m16_165 [cluster="QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="ImmediateFillModel.cs", label="return result;", span="432-432"];
m16_166 [cluster="QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", span="414-414"];
m16_286 [cluster="QuantConnect.Api.Api.LiveSubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.LiveSubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="713-713"];
m16_287 [cluster="QuantConnect.Api.Api.LiveSubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ImmediateFillModel.cs", label="_socketConnection.Subscribe(symbols)", span="715-715"];
m16_288 [cluster="QuantConnect.Api.Api.LiveSubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.LiveSubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="713-713"];
m16_195 [cluster="QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", span="499-499"];
m16_196 [cluster="QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''live/update/liquidate'', Method.POST)", span="501-501"];
m16_198 [cluster="QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="503-503"];
m16_197 [cluster="QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="request.RequestFormat = DataFormat.Json", span="502-502"];
m16_200 [cluster="QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="505-505"];
m16_199 [cluster="QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="RestResponse result", span="504-504"];
m16_201 [cluster="QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="return result;", span="506-506"];
m16_202 [cluster="QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", span="499-499"];
m16_252 [cluster="System.IO.Path.Combine(string, string)", file="ImmediateFillModel.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m16_263 [cluster="QuantConnect.Api.Api.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="630-630"];
m16_264 [cluster="QuantConnect.Api.Api.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="630-630"];
m16_107 [cluster="QuantConnect.Api.Api.ReadCompile(int, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.ReadCompile(int, string)", span="296-296"];
m16_108 [cluster="QuantConnect.Api.Api.ReadCompile(int, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''compile/read'', Method.GET)", span="298-298"];
m16_110 [cluster="QuantConnect.Api.Api.ReadCompile(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="300-300"];
m16_111 [cluster="QuantConnect.Api.Api.ReadCompile(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''compileId'', compileId)", span="301-301"];
m16_109 [cluster="QuantConnect.Api.Api.ReadCompile(int, string)", file="ImmediateFillModel.cs", label="request.RequestFormat = DataFormat.Json", span="299-299"];
m16_113 [cluster="QuantConnect.Api.Api.ReadCompile(int, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="303-303"];
m16_112 [cluster="QuantConnect.Api.Api.ReadCompile(int, string)", file="ImmediateFillModel.cs", label="Compile result", span="302-302"];
m16_114 [cluster="QuantConnect.Api.Api.ReadCompile(int, string)", file="ImmediateFillModel.cs", label="return result;", span="304-304"];
m16_115 [cluster="QuantConnect.Api.Api.ReadCompile(int, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.ReadCompile(int, string)", span="296-296"];
m16_84 [cluster="QuantConnect.Api.Api.DeleteProjectFile(int, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.DeleteProjectFile(int, string)", span="240-240"];
m16_85 [cluster="QuantConnect.Api.Api.DeleteProjectFile(int, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''files/delete'', Method.POST)", span="242-242"];
m16_86 [cluster="QuantConnect.Api.Api.DeleteProjectFile(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="244-244"];
m16_87 [cluster="QuantConnect.Api.Api.DeleteProjectFile(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''name'', name)", span="245-245"];
m16_89 [cluster="QuantConnect.Api.Api.DeleteProjectFile(int, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="248-248"];
m16_88 [cluster="QuantConnect.Api.Api.DeleteProjectFile(int, string)", file="ImmediateFillModel.cs", label="RestResponse result", span="247-247"];
m16_90 [cluster="QuantConnect.Api.Api.DeleteProjectFile(int, string)", file="ImmediateFillModel.cs", label="return result;", span="249-249"];
m16_91 [cluster="QuantConnect.Api.Api.DeleteProjectFile(int, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.DeleteProjectFile(int, string)", span="240-240"];
m16_251 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="350-350"];
m16_258 [cluster="Unk.SaveAs", file="ImmediateFillModel.cs", label="Entry Unk.SaveAs", span=""];
m16_7 [cluster="QuantConnect.Api.ApiConnection.ApiConnection(int, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.ApiConnection.ApiConnection(int, string)", span="44-44"];
m16_35 [cluster="QuantConnect.Api.Api.ListProjects()", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.ListProjects()", span="120-120"];
m16_36 [cluster="QuantConnect.Api.Api.ListProjects()", file="ImmediateFillModel.cs", label="var request = new RestRequest(''projects/read'', Method.GET)", span="122-122"];
m16_37 [cluster="QuantConnect.Api.Api.ListProjects()", file="ImmediateFillModel.cs", label="request.RequestFormat = DataFormat.Json", span="123-123"];
m16_38 [cluster="QuantConnect.Api.Api.ListProjects()", file="ImmediateFillModel.cs", label="ProjectResponse result", span="124-124"];
m16_39 [cluster="QuantConnect.Api.Api.ListProjects()", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="125-125"];
m16_40 [cluster="QuantConnect.Api.Api.ListProjects()", file="ImmediateFillModel.cs", label="return result;", span="126-126"];
m16_41 [cluster="QuantConnect.Api.Api.ListProjects()", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.ListProjects()", span="120-120"];
m16_60 [cluster="QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", span="182-182"];
m16_61 [cluster="QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''files/update'', Method.POST)", span="184-184"];
m16_62 [cluster="QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="186-186"];
m16_63 [cluster="QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''name'', fileName)", span="187-187"];
m16_64 [cluster="QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''content'', newFileContents)", span="188-188"];
m16_66 [cluster="QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="191-191"];
m16_65 [cluster="QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", file="ImmediateFillModel.cs", label="RestResponse result", span="190-190"];
m16_67 [cluster="QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", file="ImmediateFillModel.cs", label="return result;", span="192-192"];
m16_68 [cluster="QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", span="182-182"];
m16_186 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="148-148"];
m16_253 [cluster="System.IO.FileInfo.FileInfo(string)", file="ImmediateFillModel.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m16_15 [cluster="QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", span="81-81"];
m16_16 [cluster="QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''projects/create'', Method.POST)", span="83-83"];
m16_18 [cluster="QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", file="ImmediateFillModel.cs", label="request.AddParameter(''application/json'', JsonConvert.SerializeObject(new\r\n            {\r\n                name = name,\r\n                language = language\r\n            }), ParameterType.RequestBody)", span="86-90"];
m16_17 [cluster="QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", file="ImmediateFillModel.cs", label="request.RequestFormat = DataFormat.Json", span="85-85"];
m16_20 [cluster="QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="93-93"];
m16_19 [cluster="QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", file="ImmediateFillModel.cs", label="ProjectResponse result", span="92-92"];
m16_21 [cluster="QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", file="ImmediateFillModel.cs", label="return result;", span="94-94"];
m16_22 [cluster="QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", span="81-81"];
m16_265 [cluster="QuantConnect.Api.Api.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="649-649"];
m16_266 [cluster="QuantConnect.Api.Api.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="649-649"];
m16_262 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="ImmediateFillModel.cs", label="Entry QuantConnect.AlgorithmControl.AlgorithmControl()", span="471-471"];
m16_304 [cluster="string.Format(string, object, object)", file="ImmediateFillModel.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m16_92 [cluster="QuantConnect.Api.Api.DeleteProject(int)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.DeleteProject(int)", span="258-258"];
m16_93 [cluster="QuantConnect.Api.Api.DeleteProject(int)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''projects/delete'', Method.POST)", span="260-260"];
m16_95 [cluster="QuantConnect.Api.Api.DeleteProject(int)", file="ImmediateFillModel.cs", label="request.AddParameter(''application/json'', JsonConvert.SerializeObject(new\r\n            {\r\n                projectId = projectId\r\n            }), ParameterType.RequestBody)", span="262-265"];
m16_94 [cluster="QuantConnect.Api.Api.DeleteProject(int)", file="ImmediateFillModel.cs", label="request.RequestFormat = DataFormat.Json", span="261-261"];
m16_97 [cluster="QuantConnect.Api.Api.DeleteProject(int)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="267-267"];
m16_96 [cluster="QuantConnect.Api.Api.DeleteProject(int)", file="ImmediateFillModel.cs", label="RestResponse result", span="266-266"];
m16_98 [cluster="QuantConnect.Api.Api.DeleteProject(int)", file="ImmediateFillModel.cs", label="return result;", span="268-268"];
m16_99 [cluster="QuantConnect.Api.Api.DeleteProject(int)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.DeleteProject(int)", span="258-258"];
m16_267 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.Symbol)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.Symbol)", span="658-658"];
m16_268 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.Symbol)", file="ImmediateFillModel.cs", label="Config.GetBool(''force-exchange-always-open'')", span="660-660"];
m16_269 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.Symbol)", file="ImmediateFillModel.cs", label="yield return MarketHoursSegment.OpenAllDay();", span="662-662"];
m16_270 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.Symbol)", file="ImmediateFillModel.cs", label="yield break;", span="663-663"];
m16_273 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.Symbol)", file="ImmediateFillModel.cs", label="yield return segment;", span="669-669"];
m16_271 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.Symbol)", file="ImmediateFillModel.cs", label="var hours = _marketHoursDatabase.GetExchangeHours(symbol.ID.Market, symbol, symbol.ID.SecurityType)", span="666-666"];
m16_272 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.Symbol)", file="ImmediateFillModel.cs", label="hours.MarketHours[time.DayOfWeek].Segments", span="667-667"];
m16_274 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.Symbol)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.Symbol)", span="658-658"];
m16_187 [cluster="QuantConnect.Api.Api.ReadLiveAlgorithm(int, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.ReadLiveAlgorithm(int, string)", span="483-483"];
m16_188 [cluster="QuantConnect.Api.Api.ReadLiveAlgorithm(int, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''live/read'', Method.GET)", span="485-485"];
m16_189 [cluster="QuantConnect.Api.Api.ReadLiveAlgorithm(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="486-486"];
m16_190 [cluster="QuantConnect.Api.Api.ReadLiveAlgorithm(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''deployId'', deployId)", span="487-487"];
m16_192 [cluster="QuantConnect.Api.Api.ReadLiveAlgorithm(int, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="489-489"];
m16_191 [cluster="QuantConnect.Api.Api.ReadLiveAlgorithm(int, string)", file="ImmediateFillModel.cs", label="LiveAlgorithmResults result", span="488-488"];
m16_193 [cluster="QuantConnect.Api.Api.ReadLiveAlgorithm(int, string)", file="ImmediateFillModel.cs", label="return result;", span="490-490"];
m16_194 [cluster="QuantConnect.Api.Api.ReadLiveAlgorithm(int, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.ReadLiveAlgorithm(int, string)", span="483-483"];
m16_148 [cluster="QuantConnect.Api.Api.DeleteBacktest(int, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.Api.DeleteBacktest(int, string)", span="391-391"];
m16_149 [cluster="QuantConnect.Api.Api.DeleteBacktest(int, string)", file="ImmediateFillModel.cs", label="var request = new RestRequest(''backtests/delete'', Method.POST)", span="393-393"];
m16_151 [cluster="QuantConnect.Api.Api.DeleteBacktest(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''backtestId'', backtestId)", span="395-395"];
m16_152 [cluster="QuantConnect.Api.Api.DeleteBacktest(int, string)", file="ImmediateFillModel.cs", label="request.AddParameter(''projectId'', projectId)", span="396-396"];
m16_150 [cluster="QuantConnect.Api.Api.DeleteBacktest(int, string)", file="ImmediateFillModel.cs", label="request.RequestFormat = DataFormat.Json", span="394-394"];
m16_154 [cluster="QuantConnect.Api.Api.DeleteBacktest(int, string)", file="ImmediateFillModel.cs", label="ApiConnection.TryRequest(request, out result)", span="398-398"];
m16_153 [cluster="QuantConnect.Api.Api.DeleteBacktest(int, string)", file="ImmediateFillModel.cs", label="RestResponse result", span="397-397"];
m16_155 [cluster="QuantConnect.Api.Api.DeleteBacktest(int, string)", file="ImmediateFillModel.cs", label="return result;", span="399-399"];
m16_156 [cluster="QuantConnect.Api.Api.DeleteBacktest(int, string)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Api.Api.DeleteBacktest(int, string)", span="391-391"];
m16_169 [cluster="QuantConnect.API.LiveAlgorithmApiSettingsWrapper.LiveAlgorithmApiSettingsWrapper(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.API.LiveAlgorithmApiSettingsWrapper.LiveAlgorithmApiSettingsWrapper(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", span="22-22"];
m16_293 [cluster="QuantConnect.Api.ApiWebSocketConnection.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Api.ApiWebSocketConnection.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="225-225"];
m16_306 [file="ImmediateFillModel.cs", label="QuantConnect.Api.Api", span=""];
m17_12 [cluster="QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider, int)", file="IOrderProvider.cs", label="Entry QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider, int)", span="83-83"];
m17_13 [cluster="QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider, int)", file="IOrderProvider.cs", label="return orderProvider.GetOrderByBrokerageId(brokerageId.ToString());", span="85-85"];
m17_14 [cluster="QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider, int)", file="IOrderProvider.cs", label="Exit QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider, int)", span="83-83"];
m17_8 [cluster="QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider, long)", file="IOrderProvider.cs", label="Entry QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider, long)", span="72-72"];
m17_9 [cluster="QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider, long)", file="IOrderProvider.cs", label="return orderProvider.GetOrderByBrokerageId(brokerageId.ToString());", span="74-74"];
m17_10 [cluster="QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider, long)", file="IOrderProvider.cs", label="Exit QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider, long)", span="72-72"];
m17_6 [cluster="QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="IOrderProvider.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="58-58"];
m17_7 [cluster="QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="IOrderProvider.cs", label="Exit QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="58-58"];
m17_15 [cluster="int.ToString()", file="IOrderProvider.cs", label="Entry int.ToString()", span="0-0"];
m17_0 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderById(int)", file="IOrderProvider.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderById(int)", span="36-36"];
m17_1 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderById(int)", file="IOrderProvider.cs", label="Exit QuantConnect.Securities.IOrderProvider.GetOrderById(int)", span="36-36"];
m17_11 [cluster="long.ToString()", file="IOrderProvider.cs", label="Entry long.ToString()", span="0-0"];
m17_4 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="IOrderProvider.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
m17_5 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="IOrderProvider.cs", label="Exit QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
m17_2 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", file="IOrderProvider.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", span="43-43"];
m17_3 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", file="IOrderProvider.cs", label="Exit QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", span="43-43"];
m18_22 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="174-174"];
m18_23 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="174-174"];
m18_0 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="91-91"];
m18_1 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="91-91"];
m18_26 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="187-187"];
m18_27 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="187-187"];
m18_28 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="195-195"];
m18_29 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="195-195"];
m18_44 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="248-248"];
m18_45 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="248-248"];
m18_2 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Run()", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Run()", span="96-96"];
m18_3 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Run()", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.Run()", span="96-96"];
m18_4 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
m18_5 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
m18_10 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", span="121-121"];
m18_11 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", span="121-121"];
m18_20 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="165-165"];
m18_21 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="165-165"];
m18_24 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="181-181"];
m18_25 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="181-181"];
m18_42 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.PurgeQueue()", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.PurgeQueue()", span="243-243"];
m18_43 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.PurgeQueue()", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.PurgeQueue()", span="243-243"];
m18_18 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="157-157"];
m18_19 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="157-157"];
m18_38 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="233-233"];
m18_39 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="233-233"];
m18_6 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="108-108"];
m18_7 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="108-108"];
m18_16 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="149-149"];
m18_17 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="149-149"];
m18_34 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetChartSubscription(string)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetChartSubscription(string)", span="220-220"];
m18_35 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetChartSubscription(string)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.SetChartSubscription(string)", span="220-220"];
m18_32 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="214-214"];
m18_33 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="214-214"];
m18_14 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="141-141"];
m18_15 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="141-141"];
m18_8 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="114-114"];
m18_9 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="114-114"];
m18_36 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeStatistic(string, string)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeStatistic(string, string)", span="227-227"];
m18_37 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeStatistic(string, string)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeStatistic(string, string)", span="227-227"];
m18_40 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="238-238"];
m18_41 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="238-238"];
m18_12 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="128-128"];
m18_13 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="128-128"];
m18_30 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="IResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="206-206"];
m18_31 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="IResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="206-206"];
m19_6 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m19_32 [cluster="QuantConnect.Data.Auxiliary.FactorFile.Read(string, string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.FactorFile.Read(string, string)", span="48-48"];
m19_23 [cluster="QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", span="124-124"];
m19_0 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", span="35-35"];
m19_1 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", span="35-35"];
m19_7 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", span="56-56"];
m19_8 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="FactorFile factorFile", span="58-58"];
m19_9 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="_cache.TryGetValue(symbol, out factorFile)", span="59-59"];
m19_11 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="var market = symbol.ID.Market", span="64-64"];
m19_14 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return GetFactorFile(symbol, symbol.Value, market);", span="70-70"];
m19_15 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="var mapFile = mapFileResolver.ResolveMapFile(symbol.ID.Symbol, symbol.ID.Date)", span="73-73"];
m19_17 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return GetFactorFile(symbol, symbol.Value, market);", span="76-76"];
m19_18 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return GetFactorFile(symbol, mapFile.Permtick, market);", span="79-79"];
m19_10 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return factorFile;", span="61-61"];
m19_12 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="var mapFileResolver = _mapFileProvider.Get(market)", span="67-67"];
m19_13 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="mapFileResolver == null", span="68-68"];
m19_16 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="mapFile.IsNullOrEmpty()", span="74-74"];
m19_19 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", span="56-56"];
m19_33 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m19_21 [cluster="QuantConnect.Interfaces.IMapFileProvider.Get(string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Interfaces.IMapFileProvider.Get(string)", span="33-33"];
m19_31 [cluster="QuantConnect.Data.Auxiliary.FactorFile.HasScalingFactors(string, string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.FactorFile.HasScalingFactors(string, string)", span="86-86"];
m19_2 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", span="45-45"];
m19_3 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="_mapFileProvider = mapFileProvider", span="47-47"];
m19_4 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="_cache = new ConcurrentDictionary<Symbol, FactorFile>()", span="48-48"];
m19_5 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", span="45-45"];
m19_22 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", span="85-85"];
m19_25 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="FactorFile.HasScalingFactors(permtick, market)", span="87-87"];
m19_26 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="var factorFile = FactorFile.Read(permtick, market)", span="89-89"];
m19_27 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="_cache.AddOrUpdate(symbol, factorFile, (s, c) => factorFile)", span="90-90"];
m19_29 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="return null;", span="94-94"];
m19_28 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="return factorFile;", span="91-91"];
m19_30 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", span="85-85"];
m19_24 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="93-93"];
m19_20 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m19_34 [cluster="lambda expression", file="LocalDiskFactorFileProvider.cs", label="Entry lambda expression", span="90-90"];
m19_35 [cluster="lambda expression", file="LocalDiskFactorFileProvider.cs", label=factorFile, span="90-90"];
m19_36 [cluster="lambda expression", file="LocalDiskFactorFileProvider.cs", label="Exit lambda expression", span="90-90"];
m19_37 [file="LocalDiskFactorFileProvider.cs", label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", span=""];
m19_38 [file="LocalDiskFactorFileProvider.cs", label=factorFile, span=""];
m20_39 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="Messaging.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101"];
m20_171 [cluster="QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", span="636-636"];
m20_172 [cluster="QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="return _properties == other._properties \r\n                && _symbol == other._symbol \r\n                && _underlying == other._underlying;", span="638-640"];
m20_173 [cluster="QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", span="636-636"];
m20_98 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", span="470-470"];
m20_99 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="Messaging.cs", label="var stack = new Stack<char>()", span="472-472"];
m20_100 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="Messaging.cs", label="data != 0", span="473-473"];
m20_101 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="Messaging.cs", label="var value = data % 36", span="475-475"];
m20_104 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="Messaging.cs", label="data /= 36", span="481-481"];
m20_103 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="Messaging.cs", label="stack.Push(c)", span="480-480"];
m20_105 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="Messaging.cs", label="return new string(stack.ToArray());", span="483-483"];
m20_102 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="Messaging.cs", label="var c = value < 10\r\n                    ? (char)(value + '0')\r\n                    : (char)(value - 10 + 'A')", span="476-478"];
m20_106 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", span="470-470"];
m20_127 [cluster="Unk.Pow", file="Messaging.cs", label="Entry Unk.Pow", span=""];
m20_165 [cluster="string.Split(params char[])", file="Messaging.cs", label="Entry string.Split(params char[])", span="0-0"];
m20_182 [cluster="object.GetType()", file="Messaging.cs", label="Entry object.GetType()", span="0-0"];
m20_192 [cluster="QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="680-680"];
m20_193 [cluster="QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="return !Equals(left, right);", span="682-682"];
m20_194 [cluster="QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="680-680"];
m20_181 [cluster="object.ReferenceEquals(object, object)", file="Messaging.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m20_54 [cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateForex(string, string)", span="383-383"];
m20_55 [cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="Messaging.cs", label="return Generate(DefaultDate, symbol, SecurityType.Forex, market);", span="385-385"];
m20_56 [cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateForex(string, string)", span="383-383"];
m20_25 [cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", span="318-318"];
m20_26 [cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", file="Messaging.cs", label="return Generate(expiry, symbol, SecurityType.Future, market);", span="322-322"];
m20_27 [cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", span="318-318"];
m20_164 [cluster="string.IsNullOrWhiteSpace(string)", file="Messaging.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m20_46 [cluster="lambda expression", file="Messaging.cs", label="Entry lambda expression", span="343-343"];
m20_47 [cluster="lambda expression", file="Messaging.cs", label="x.Date", span="343-343"];
m20_48 [cluster="lambda expression", file="Messaging.cs", label="Exit lambda expression", span="343-343"];
m20_107 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="Messaging.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m20_188 [cluster="QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="672-672"];
m20_189 [cluster="QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="return Equals(left, right);", span="674-674"];
m20_190 [cluster="QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="672-672"];
m20_195 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.ToString()", span="692-692"];
m20_196 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="Messaging.cs", label="var props = EncodeBase36(_properties)", span="694-694"];
m20_197 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="Messaging.cs", label=HasUnderlying, span="695-695"];
m20_198 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="Messaging.cs", label="return _symbol + ' ' + props + '|' + _underlying.SecurityIdentifier;", span="697-697"];
m20_199 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="Messaging.cs", label="return _symbol + ' ' + props;", span="699-699"];
m20_200 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.ToString()", span="692-692"];
m20_187 [cluster="ulong.GetHashCode()", file="Messaging.cs", label="Entry ulong.GetHashCode()", span="0-0"];
m20_109 [cluster="string.String(char[])", file="Messaging.cs", label="Entry string.String(char[])", span="0-0"];
m20_41 [cluster="QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", file="Messaging.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", span="124-124"];
m20_82 [cluster="QuantConnect.Market.Encode(string)", file="Messaging.cs", label="Entry QuantConnect.Market.Encode(string)", span="156-156"];
m20_85 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", span="490-490"];
m20_111 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="var str = strike", span="492-492"];
m20_112 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="strike == 0", span="494-494"];
m20_115 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="strike *= StrikeDefaultScaleExpanded", span="501-501"];
m20_121 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="throw new ArgumentException(''The specified strike price's precision is too high: '' + str);", span="512-512"];
m20_113 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="scale = 0", span="496-496"];
m20_114 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="return 0;", span="497-497"];
m20_116 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="scale = 0", span="503-503"];
m20_117 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="strike % 10 == 0", span="504-504"];
m20_118 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="strike /= 10", span="506-506"];
m20_120 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="strike >= 1000000", span="510-510"];
m20_122 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="return (ulong)strike;", span="515-515"];
m20_119 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="scale++", span="507-507"];
m20_123 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", span="490-490"];
m20_203 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", span="715-715"];
m20_204 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="ReferenceEquals(null, other)", span="717-717"];
m20_206 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="ReferenceEquals(this, other)", span="718-718"];
m20_208 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="return SecurityIdentifier.Equals(other.SecurityIdentifier);", span="719-719"];
m20_205 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="return false;", span="717-717"];
m20_207 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="return true;", span="718-718"];
m20_209 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", span="715-715"];
m20_210 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.Equals(object)", span="721-721"];
m20_211 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="Messaging.cs", label="ReferenceEquals(null, obj)", span="723-723"];
m20_213 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="Messaging.cs", label="ReferenceEquals(this, obj)", span="724-724"];
m20_215 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="Messaging.cs", label="return obj is SidBox && Equals((SidBox)obj);", span="725-725"];
m20_212 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="Messaging.cs", label="return false;", span="723-723"];
m20_214 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="Messaging.cs", label="return true;", span="724-724"];
m20_216 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.Equals(object)", span="721-721"];
m20_217 [cluster="QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", span="727-727"];
m20_218 [cluster="QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", file="Messaging.cs", label="return SecurityIdentifier.GetHashCode();", span="729-729"];
m20_219 [cluster="QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", span="727-727"];
m20_220 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="731-731"];
m20_221 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="return Equals(left, right);", span="733-733"];
m20_222 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="731-731"];
m20_223 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="735-735"];
m20_224 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="return !Equals(left, right);", span="737-737"];
m20_225 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="735-735"];
m20_167 [cluster="System.FormatException.FormatException(string)", file="Messaging.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m20_0 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", span="250-250"];
m20_1 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="Messaging.cs", label="symbol == null", span="252-252"];
m20_3 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="Messaging.cs", label="symbol.IndexOfAny(InvalidCharacters) != -1", span="256-256"];
m20_5 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="Messaging.cs", label="_symbol = symbol", span="260-260"];
m20_6 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="Messaging.cs", label="_properties = properties", span="261-261"];
m20_2 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="Messaging.cs", label="throw new ArgumentNullException(''symbol'', ''SecurityIdentifier requires a non-null string 'symbol''');", span="254-254"];
m20_4 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="Messaging.cs", label="throw new ArgumentException(''symbol must not contain the characters '|' or ' '.'', ''symbol'');", span="258-258"];
m20_7 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="Messaging.cs", label="_underlying = null", span="262-262"];
m20_8 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", span="250-250"];
m20_12 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", span="272-272"];
m20_13 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="symbol == null", span="275-275"];
m20_15 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="_symbol = symbol", span="279-279"];
m20_16 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="_properties = properties", span="280-280"];
m20_17 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="underlying != Empty", span="281-281"];
m20_18 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="_underlying = new SidBox(underlying)", span="283-283"];
m20_14 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="throw new ArgumentNullException(''symbol'', ''SecurityIdentifier requires a non-null string 'symbol''');", span="277-277"];
m20_19 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", span="272-272"];
m20_21 [cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="301-301"];
m20_22 [cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="Messaging.cs", label="return Generate(expiry, underlying.Symbol, SecurityType.Option, market, strike, optionRight, optionStyle, underlying);", span="308-308"];
m20_23 [cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="301-301"];
m20_80 [cluster="string.ToLower()", file="Messaging.cs", label="Entry string.ToLower()", span="0-0"];
m20_168 [cluster="QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", span="620-620"];
m20_169 [cluster="QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", file="Messaging.cs", label="return (_properties/offset)%width;", span="622-622"];
m20_170 [cluster="QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", span="620-620"];
m20_135 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", span="572-572"];
m20_140 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="Messaging.cs", label="!TryParseProperties(value, out exception, out identifier)", span="574-574"];
m20_141 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="Messaging.cs", label="return false;", span="576-576"];
m20_142 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="Messaging.cs", label="return true;", span="579-579"];
m20_143 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", span="572-572"];
m20_174 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.Equals(object)", span="650-650"];
m20_175 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="Messaging.cs", label="ReferenceEquals(null, obj)", span="652-652"];
m20_177 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="Messaging.cs", label="obj.GetType() != GetType()", span="653-653"];
m20_179 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="Messaging.cs", label="return Equals((SecurityIdentifier)obj);", span="654-654"];
m20_176 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="Messaging.cs", label="return false;", span="652-652"];
m20_178 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="Messaging.cs", label="return false;", span="653-653"];
m20_180 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.Equals(object)", span="650-650"];
m20_191 [cluster="object.Equals(object, object)", file="Messaging.cs", label="Entry object.Equals(object, object)", span="0-0"];
m20_81 [cluster="string.ToUpper()", file="Messaging.cs", label="Entry string.ToUpper()", span="0-0"];
m20_24 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", span="403-403"];
m20_60 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="(ulong)securityType >= SecurityTypeWidth || securityType < 0", span="412-412"];
m20_62 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="(int)optionRight > 1 || optionRight < 0", span="416-416"];
m20_64 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="market = market.ToLower()", span="422-422"];
m20_65 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="symbol = symbol.ToUpper()", span="423-423"];
m20_69 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="var days = (ulong)date.ToOADate() * DaysOffset", span="432-432"];
m20_72 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="var strk = NormalizeStrike(strike, out strikeScale) * StrikeOffset", span="436-436"];
m20_74 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="var style = (ulong)optionStyle * OptionStyleOffset", span="438-438"];
m20_75 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="var putcall = (ulong)optionRight * PutCallOffset", span="439-439"];
m20_76 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="var otherData = putcall + days + style + strk + strikeScale + marketCode + (ulong)securityType", span="441-441"];
m20_77 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="return new SecurityIdentifier(symbol, otherData, underlying ?? Empty);", span="443-443"];
m20_61 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="throw new ArgumentOutOfRangeException(''securityType'', ''securityType must be between 0 and 99'');", span="414-414"];
m20_63 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="throw new ArgumentOutOfRangeException(''optionRight'', ''optionType must be either 0 or 1'');", span="418-418"];
m20_66 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="var marketIdentifier = QuantConnect.Market.Encode(market)", span="425-425"];
m20_68 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="throw new ArgumentOutOfRangeException(''market'', string.Format(''The specified market wasn't found in the markets lookup. Requested: {0}. '' +\r\n                    ''You can add markets by calling QuantConnect.Market.AddMarket(string,ushort)'', market));", span="428-429"];
m20_67 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="!marketIdentifier.HasValue", span="426-426"];
m20_70 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="var marketCode = (ulong)marketIdentifier * MarketOffset", span="433-433"];
m20_71 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="ulong strikeScale", span="435-435"];
m20_73 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="strikeScale *= StrikeScaleOffset", span="437-437"];
m20_78 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", span="403-403"];
m20_20 [cluster="QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", span="711-711"];
m20_201 [cluster="QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="SecurityIdentifier = securityIdentifier", span="713-713"];
m20_202 [cluster="QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", span="711-711"];
m20_84 [cluster="System.DateTime.ToOADate()", file="Messaging.cs", label="Entry System.DateTime.ToOADate()", span="0-0"];
m20_186 [cluster="string.GetHashCode()", file="Messaging.cs", label="Entry string.GetHashCode()", span="0-0"];
m20_83 [cluster="string.Format(string, object)", file="Messaging.cs", label="Entry string.Format(string, object)", span="0-0"];
m20_86 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.DecodeBase36(string)", span="449-449"];
m20_87 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="Messaging.cs", label="int pos = 0", span="451-451"];
m20_89 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="Messaging.cs", label="int i = symbol.Length - 1", span="453-453"];
m20_91 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="Messaging.cs", label="var c = symbol[i]", span="455-455"];
m20_88 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="Messaging.cs", label="ulong result = 0", span="452-452"];
m20_93 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="Messaging.cs", label="result += value * Pow(36, pos++)", span="462-462"];
m20_95 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="Messaging.cs", label="return result;", span="464-464"];
m20_90 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="Messaging.cs", label="i > -1", span="453-453"];
m20_94 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="Messaging.cs", label="i--", span="453-453"];
m20_92 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="Messaging.cs", label="var value = (uint)(c <= 57\r\n                    ? c - '0'\r\n                    : c - 'A' + 10)", span="458-460"];
m20_96 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.DecodeBase36(string)", span="449-449"];
m20_79 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="Messaging.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m20_40 [cluster="QuantConnect.Interfaces.IMapFileProvider.Get(string)", file="Messaging.cs", label="Entry QuantConnect.Interfaces.IMapFileProvider.Get(string)", span="33-33"];
m20_43 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Messaging.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m20_57 [cluster="QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", span="394-394"];
m20_58 [cluster="QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", file="Messaging.cs", label="return Generate(DefaultDate, symbol, SecurityType.Cfd, market);", span="396-396"];
m20_59 [cluster="QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", span="394-394"];
m20_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Messaging.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m20_128 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.Parse(string)", span="543-543"];
m20_129 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="Messaging.cs", label="Exception exception", span="545-545"];
m20_131 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="Messaging.cs", label="!TryParse(value, out identifier, out exception)", span="547-547"];
m20_130 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="Messaging.cs", label="SecurityIdentifier identifier", span="546-546"];
m20_132 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="Messaging.cs", label="throw exception;", span="549-549"];
m20_133 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="Messaging.cs", label="return identifier;", span="552-552"];
m20_134 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.Parse(string)", span="543-543"];
m20_97 [cluster="QuantConnect.SecurityIdentifier.Pow(uint, int)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.Pow(uint, int)", span="521-521"];
m20_125 [cluster="QuantConnect.SecurityIdentifier.Pow(uint, int)", file="Messaging.cs", label="return (ulong)BigInteger.Pow(x, pow);", span="524-524"];
m20_126 [cluster="QuantConnect.SecurityIdentifier.Pow(uint, int)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.Pow(uint, int)", span="521-521"];
m20_108 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="Messaging.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m20_166 [cluster="string.Split(char[], System.StringSplitOptions)", file="Messaging.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m20_183 [cluster="QuantConnect.SecurityIdentifier.GetHashCode()", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.GetHashCode()", span="664-664"];
m20_184 [cluster="QuantConnect.SecurityIdentifier.GetHashCode()", file="Messaging.cs", label="return (_symbol.GetHashCode()*397) ^ _properties.GetHashCode();", span="666-666"];
m20_185 [cluster="QuantConnect.SecurityIdentifier.GetHashCode()", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.GetHashCode()", span="664-664"];
m20_136 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", span="563-563"];
m20_137 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Exception exception", span="565-565"];
m20_138 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="return TryParse(value, out identifier, out exception);", span="566-566"];
m20_139 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", span="563-563"];
m20_11 [cluster="System.ArgumentException.ArgumentException(string, string)", file="Messaging.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m20_144 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", span="585-585"];
m20_145 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="exception = null", span="587-587"];
m20_147 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="string.IsNullOrWhiteSpace(value)", span="590-590"];
m20_149 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="var sids = value.Split('|')", span="595-595"];
m20_146 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="identifier = Empty", span="588-588"];
m20_160 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="identifier = new SecurityIdentifier(symbol, props, identifier)", span="611-611"];
m20_148 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="return true;", span="592-592"];
m20_150 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="var i = sids.Length - 1", span="596-596"];
m20_152 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="var current = sids[i]", span="598-598"];
m20_151 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="i > -1", span="596-596"];
m20_161 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="i--", span="596-596"];
m20_162 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="return true;", span="614-614"];
m20_153 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="var parts = current.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries)", span="599-599"];
m20_154 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="parts.Length != 2", span="600-600"];
m20_157 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="var symbol = parts[0]", span="606-606"];
m20_158 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="var otherData = parts[1]", span="607-607"];
m20_155 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="exception = new FormatException(''The string must be splittable on space into two parts.'')", span="602-602"];
m20_156 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="return false;", span="603-603"];
m20_159 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="var props = DecodeBase36(otherData)", span="608-608"];
m20_163 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", span="585-585"];
m20_44 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Messaging.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m20_51 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="372-372"];
m20_52 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="Messaging.cs", label="return Generate(DefaultDate, symbol, SecurityType.Base, market);", span="374-374"];
m20_53 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="372-372"];
m20_45 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", span="361-361"];
m20_49 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="Messaging.cs", label="return Generate(date, symbol, SecurityType.Equity, market);", span="363-363"];
m20_50 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", span="361-361"];
m20_10 [cluster="string.IndexOfAny(char[])", file="Messaging.cs", label="Entry string.IndexOfAny(char[])", span="0-0"];
m20_9 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="Messaging.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m20_28 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="Messaging.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", span="333-333"];
m20_29 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="Messaging.cs", label=mapSymbol, span="335-335"];
m20_31 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="Messaging.cs", label="var resolver = provider.Get(market)", span="338-338"];
m20_32 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="Messaging.cs", label="var mapFile = resolver.ResolveMapFile(symbol, DateTime.Today)", span="339-339"];
m20_36 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="Messaging.cs", label="return GenerateEquity(firstDate, symbol, market);", span="345-345"];
m20_37 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="Messaging.cs", label="return GenerateEquity(DefaultDate, symbol, market);", span="349-349"];
m20_30 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="Messaging.cs", label="var provider = Composer.Instance.GetExportedValueByTypeName<IMapFileProvider>(MapFileProviderTypeName)", span="337-337"];
m20_33 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="Messaging.cs", label="var firstDate = mapFile.FirstDate", span="340-340"];
m20_34 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="Messaging.cs", label="mapFile.Any()", span="341-341"];
m20_35 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="Messaging.cs", label="symbol = mapFile.OrderBy(x => x.Date).First().MappedSymbol", span="343-343"];
m20_38 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", file="Messaging.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateEquity(string, string, bool)", span="333-333"];
m20_110 [cluster="System.Collections.Generic.Stack<T>.ToArray()", file="Messaging.cs", label="Entry System.Collections.Generic.Stack<T>.ToArray()", span="0-0"];
m20_226 [file="Messaging.cs", label="out QuantConnect.SecurityIdentifier", span=""];
m20_227 [file="Messaging.cs", label="out QuantConnect.SecurityIdentifier", span=""];
m20_228 [file="Messaging.cs", label="QuantConnect.SecurityIdentifier", span=""];
m20_229 [file="Messaging.cs", label="ref QuantConnect.SecurityIdentifier", span=""];
m20_230 [file="Messaging.cs", label="ref QuantConnect.SecurityIdentifier", span=""];
m20_231 [file="Messaging.cs", label="QuantConnect.SecurityIdentifier.SidBox", span=""];
m21_0 [cluster="QuantConnect.Indicators.MomentumPercent.MomentumPercent(int)", file="MomentumPercent.cs", label="Entry QuantConnect.Indicators.MomentumPercent.MomentumPercent(int)", span="28-28"];
m21_1 [cluster="QuantConnect.Indicators.MomentumPercent.MomentumPercent(int)", file="MomentumPercent.cs", label="Exit QuantConnect.Indicators.MomentumPercent.MomentumPercent(int)", span="28-28"];
m21_2 [cluster="QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", file="MomentumPercent.cs", label="Entry QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", span="38-38"];
m21_3 [cluster="QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", file="MomentumPercent.cs", label="Exit QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", span="38-38"];
m23_0 [cluster="QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="OrderProvider.cs", label="Entry QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", span="38-38"];
m23_1 [cluster="QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="OrderProvider.cs", label="return new OptionPriceModelResult(security.Price, new Greeks());", span="40-40"];
m23_2 [cluster="QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="OrderProvider.cs", label="Exit QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", span="38-38"];
m23_4 [cluster="QuantConnect.Data.Market.Greeks.Greeks()", file="OrderProvider.cs", label="Entry QuantConnect.Data.Market.Greeks.Greeks()", span="153-153"];
m23_3 [cluster="QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.Greeks)", file="OrderProvider.cs", label="Entry QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.Greeks)", span="63-63"];
m24_0 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.OandaBrokerageFactory()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.OandaBrokerageFactory()", span="32-32"];
m24_1 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.OandaBrokerageFactory()", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.OandaBrokerageFactory()", span="32-32"];
m24_19 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerage.OandaBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaBrokerage.OandaBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string)", span="52-52"];
m24_17 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Trading.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m24_2 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.Dispose()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.Dispose()", span="40-40"];
m24_3 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.Dispose()", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.Dispose()", span="40-40"];
m24_4 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="78-78"];
m24_5 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="var errors = new List<string>()", span="80-80"];
m24_6 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="var environment = Read<Environment>(job.BrokerageData, ''oanda-environment'', errors)", span="83-83"];
m24_7 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="var accessToken = Read<string>(job.BrokerageData, ''oanda-access-token'', errors)", span="84-84"];
m24_8 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="var accountId = Read<string>(job.BrokerageData, ''oanda-account-id'', errors)", span="85-85"];
m24_11 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="var brokerage = new OandaBrokerage(algorithm.Transactions, algorithm.Portfolio, environment, accessToken, accountId)", span="93-93"];
m24_9 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="errors.Count != 0", span="87-87"];
m24_10 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="throw new Exception(string.Join(System.Environment.NewLine, errors));", span="90-90"];
m24_12 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="Composer.Instance.AddPart<IDataQueueHandler>(brokerage)", span="94-94"];
m24_13 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="return brokerage;", span="96-96"];
m24_14 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="78-78"];
m24_18 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="QCAlgorithm.Trading.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m24_16 [cluster="QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", span="86-86"];
m24_20 [cluster="QuantConnect.Util.Composer.AddPart<T>(T)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Util.Composer.AddPart<T>(T)", span="75-75"];
m25_0 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(int)", file="RateOfChange.cs", label="Entry QuantConnect.Indicators.RateOfChange.RateOfChange(int)", span="27-27"];
m25_1 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(int)", file="RateOfChange.cs", label="Exit QuantConnect.Indicators.RateOfChange.RateOfChange(int)", span="27-27"];
m25_4 [cluster="QuantConnect.Indicators.RateOfChange.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="RateOfChange.cs", label="Entry QuantConnect.Indicators.RateOfChange.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="48-48"];
m25_8 [cluster="QuantConnect.Indicators.RateOfChange.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="RateOfChange.cs", label="Exit QuantConnect.Indicators.RateOfChange.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="48-48"];
m25_2 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", file="RateOfChange.cs", label="Entry QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", span="37-37"];
m25_3 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", file="RateOfChange.cs", label="Exit QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", span="37-37"];
m26_4 [cluster="QuantConnect.Indicators.RateOfChangePercent.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="RateOfChangePercent.cs", label="Entry QuantConnect.Indicators.RateOfChangePercent.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="48-48"];
m26_8 [cluster="QuantConnect.Indicators.RateOfChangePercent.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", color=green, community=0, file="RateOfChangePercent.cs", label="return 100*(input - denominator)/denominator;", prediction=21, span="58-58"];
m26_5 [cluster="QuantConnect.Indicators.RateOfChangePercent.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="RateOfChangePercent.cs", label="decimal denominator = !window.IsReady ? window[window.Count - 1] : window.MostRecentlyRemoved", span="51-51"];
m26_6 [cluster="QuantConnect.Indicators.RateOfChangePercent.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="RateOfChangePercent.cs", label="denominator == 0", span="53-53"];
m26_7 [cluster="QuantConnect.Indicators.RateOfChangePercent.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="RateOfChangePercent.cs", label="return 0;", span="55-55"];
m26_9 [cluster="QuantConnect.Indicators.RateOfChangePercent.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="RateOfChangePercent.cs", label="Exit QuantConnect.Indicators.RateOfChangePercent.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="48-48"];
m27_68 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", span="113-113"];
m27_69 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var left = new Identity(''left'')", span="115-115"];
m27_70 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var right = new Identity(''right'')", span="116-116"];
m27_71 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var composite = left.Plus(right)", span="117-117"];
m27_72 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 1m)", span="119-119"];
m27_75 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 2m)", span="123-123"];
m27_77 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 3m)", span="126-126"];
m27_73 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="right.Update(DateTime.Today, 1m)", span="120-120"];
m27_79 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="right.Update(DateTime.Today, 4m)", span="129-129"];
m27_74 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(2m, composite.Current.Value)", span="121-121"];
m27_76 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(2m, composite.Current.Value)", span="124-124"];
m27_78 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(2m, composite.Current.Value)", span="127-127"];
m27_80 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(7m, composite.Current.Value)", span="130-130"];
m27_81 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", span="113-113"];
m27_40 [cluster="QuantConnect.Indicators.Identity.Identity(string)", file="RateOfChangeTests.cs", label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27"];
m27_0 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", span="25-25"];
m27_1 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="var first = new SimpleMovingAverage(2)", span="27-27"];
m27_3 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="second.Of(first)", span="31-31"];
m27_8 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="first.Update(data1)", span="39-39"];
m27_9 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="Assert.IsFalse(first.IsReady)", span="40-40"];
m27_11 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="first.Update(data2)", span="44-44"];
m27_12 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="Assert.IsTrue(first.IsReady)", span="45-45"];
m27_15 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="first.Update(data3)", span="50-50"];
m27_18 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="first.Update(data4)", span="55-55"];
m27_10 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="Assert.AreEqual(0m, second.Current.Value)", span="41-41"];
m27_13 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="Assert.IsFalse(second.IsReady)", span="46-46"];
m27_14 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="Assert.AreEqual(1.5m, second.Current.Value)", span="47-47"];
m27_16 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="Assert.IsTrue(second.IsReady)", span="51-51"];
m27_17 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="Assert.AreEqual(1.5m, second.Current.Value)", span="52-52"];
m27_19 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="Assert.AreEqual(2.5m, second.Current.Value)", span="56-56"];
m27_4 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="var data1 = new IndicatorDataPoint(DateTime.UtcNow, 1m)", span="33-33"];
m27_5 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="var data2 = new IndicatorDataPoint(DateTime.UtcNow, 2m)", span="34-34"];
m27_6 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="var data3 = new IndicatorDataPoint(DateTime.UtcNow, 3m)", span="35-35"];
m27_7 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="var data4 = new IndicatorDataPoint(DateTime.UtcNow, 4m)", span="36-36"];
m27_20 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="RateOfChangeTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", span="25-25"];
m27_42 [cluster="lambda expression", file="RateOfChangeTests.cs", label="Entry lambda expression", span="65-68"];
m27_43 [cluster="lambda expression", file="RateOfChangeTests.cs", label="sma.Update(consolidated)", span="67-67"];
m27_44 [cluster="lambda expression", file="RateOfChangeTests.cs", label="Exit lambda expression", span="65-68"];
m27_23 [cluster="TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", file="RateOfChangeTests.cs", label="Entry TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", span="47-47"];
m27_26 [cluster="Unk.IsFalse", file="RateOfChangeTests.cs", label="Entry Unk.IsFalse", span=""];
m27_113 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", span="176-176"];
m27_114 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var left = new Identity(''left'')", span="178-178"];
m27_115 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var right = new Identity(''right'')", span="179-179"];
m27_116 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var composite = left.Times(right)", span="180-180"];
m27_117 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 1m)", span="182-182"];
m27_120 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 2m)", span="186-186"];
m27_122 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 3m)", span="189-189"];
m27_118 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="right.Update(DateTime.Today, 1m)", span="183-183"];
m27_124 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="right.Update(DateTime.Today, 4m)", span="192-192"];
m27_119 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="184-184"];
m27_121 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="187-187"];
m27_123 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="190-190"];
m27_125 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(12m, composite.Current.Value)", span="193-193"];
m27_126 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", span="176-176"];
m27_24 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", file="RateOfChangeTests.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="40-40"];
m27_97 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="RateOfChangeTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="131-131"];
m27_45 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", span="80-80"];
m27_46 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="var identity = new Identity(''identity'')", span="82-82"];
m27_47 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="var sma = new SimpleMovingAverage(2)", span="83-83"];
m27_49 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="sma.Of(delay.Of(identity))", span="87-87"];
m27_50 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="identity.Update(DateTime.UtcNow, 1m)", span="89-89"];
m27_51 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsTrue(identity.IsReady)", span="90-90"];
m27_54 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="identity.Update(DateTime.UtcNow, 2m)", span="94-94"];
m27_55 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsTrue(identity.IsReady)", span="95-95"];
m27_58 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="identity.Update(DateTime.UtcNow, 3m)", span="99-99"];
m27_59 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsTrue(identity.IsReady)", span="100-100"];
m27_62 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="identity.Update(DateTime.UtcNow, 4m)", span="104-104"];
m27_63 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsTrue(identity.IsReady)", span="105-105"];
m27_48 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="var delay = new Delay(2)", span="84-84"];
m27_53 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsFalse(sma.IsReady)", span="92-92"];
m27_57 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsFalse(sma.IsReady)", span="97-97"];
m27_61 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsFalse(sma.IsReady)", span="102-102"];
m27_65 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsTrue(sma.IsReady)", span="107-107"];
m27_66 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.AreEqual(1.5m, sma)", span="109-109"];
m27_52 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsFalse(delay.IsReady)", span="91-91"];
m27_56 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsFalse(delay.IsReady)", span="96-96"];
m27_60 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsTrue(delay.IsReady)", span="101-101"];
m27_64 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Assert.IsTrue(delay.IsReady)", span="106-106"];
m27_67 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="RateOfChangeTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", span="80-80"];
m27_112 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="RateOfChangeTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="175-175"];
m27_28 [cluster="Unk.IsTrue", file="RateOfChangeTests.cs", label="Entry Unk.IsTrue", span=""];
m27_21 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", file="RateOfChangeTests.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", span="56-56"];
m27_98 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", span="155-155"];
m27_99 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var left = new Identity(''left'')", span="157-157"];
m27_100 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var right = new Identity(''right'')", span="158-158"];
m27_101 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var composite = left.Over(right)", span="159-159"];
m27_102 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 1m)", span="161-161"];
m27_105 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 2m)", span="165-165"];
m27_107 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 3m)", span="168-168"];
m27_103 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="right.Update(DateTime.Today, 1m)", span="162-162"];
m27_109 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="right.Update(DateTime.Today, 4m)", span="171-171"];
m27_104 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="163-163"];
m27_106 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="166-166"];
m27_108 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="169-169"];
m27_110 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(3m / 4m, composite.Current.Value)", span="172-172"];
m27_111 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", span="155-155"];
m27_127 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="RateOfChangeTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="219-219"];
m27_27 [cluster="Unk.AreEqual", file="RateOfChangeTests.cs", label="Entry Unk.AreEqual", span=""];
m27_83 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", span="134-134"];
m27_84 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var left = new Identity(''left'')", span="136-136"];
m27_85 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var right = new Identity(''right'')", span="137-137"];
m27_86 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="var composite = left.Minus(right)", span="138-138"];
m27_87 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 1m)", span="140-140"];
m27_90 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 2m)", span="144-144"];
m27_92 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="left.Update(DateTime.Today, 3m)", span="147-147"];
m27_88 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="right.Update(DateTime.Today, 1m)", span="141-141"];
m27_94 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="right.Update(DateTime.Today, 4m)", span="150-150"];
m27_89 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(0m, composite.Current.Value)", span="142-142"];
m27_91 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(0m, composite.Current.Value)", span="145-145"];
m27_93 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(0m, composite.Current.Value)", span="148-148"];
m27_95 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Assert.AreEqual(-1m, composite.Current.Value)", span="151-151"];
m27_96 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="RateOfChangeTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", span="134-134"];
m27_22 [cluster="QuantConnect.Indicators.Delay.Delay(int)", file="RateOfChangeTests.cs", label="Entry QuantConnect.Indicators.Delay.Delay(int)", span="26-26"];
m27_25 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="RateOfChangeTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m27_82 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="RateOfChangeTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="87-87"];
m27_41 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="RateOfChangeTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="34-34"];
m27_29 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="RateOfChangeTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", span="60-60"];
m27_30 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="RateOfChangeTests.cs", label="var identity = new Identity(''identity'')", span="62-62"];
m27_31 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="RateOfChangeTests.cs", label="var sma = new SimpleMovingAverage(3)", span="63-63"];
m27_32 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="RateOfChangeTests.cs", label="identity.Updated += (sender, consolidated) =>\r\n            {\r\n                sma.Update(consolidated);\r\n            }", span="65-68"];
m27_33 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="RateOfChangeTests.cs", label="identity.Update(DateTime.UtcNow, 1m)", span="70-70"];
m27_34 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="RateOfChangeTests.cs", label="identity.Update(DateTime.UtcNow, 2m)", span="71-71"];
m27_36 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="RateOfChangeTests.cs", label="identity.Update(DateTime.UtcNow, 3m)", span="74-74"];
m27_35 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="RateOfChangeTests.cs", label="Assert.IsFalse(sma.IsReady)", span="72-72"];
m27_37 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="RateOfChangeTests.cs", label="Assert.IsTrue(sma.IsReady)", span="75-75"];
m27_38 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="RateOfChangeTests.cs", label="Assert.AreEqual(2m, sma)", span="76-76"];
m27_39 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="RateOfChangeTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", span="60-60"];
m27_128 [file="RateOfChangeTests.cs", label=sma, span=""];
m28_41 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="130-130"];
m28_33 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m28_18 [cluster="object.GetType()", file="SecurityPortfolioManagerTests.cs", label="Entry object.GetType()", span="0-0"];
m28_0 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", span="36-36"];
m28_1 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="var brokerage = GetBrokerage()", span="38-38"];
m28_2 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(brokerage.IsConnected)", span="39-39"];
m28_3 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="var method = brokerage.GetType().GetMethod(''GetUsdConversion'', BindingFlags.NonPublic | BindingFlags.Instance)", span="42-42"];
m28_8 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="var value = (decimal)method.Invoke(brokerage, new object[] { currency })", span="49-49"];
m28_12 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="brokerage.Disconnect()", span="56-56"];
m28_13 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="brokerage.Dispose()", span="57-57"];
m28_4 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="string currency = ''SEK''", span="44-44"];
m28_5 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="int count = 20", span="45-45"];
m28_9 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="Console.WriteLine(i + '' - GetUsdConversion({0}) = {1}'', currency, value)", span="51-51"];
m28_6 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="var i = 1", span="47-47"];
m28_7 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="i <= count", span="47-47"];
m28_11 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="i++", span="47-47"];
m28_10 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(value > 0)", span="53-53"];
m28_14 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="InteractiveBrokersGatewayRunner.Stop()", span="58-58"];
m28_15 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.StressTestGetUsdConversion()", span="36-36"];
m28_23 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="650-650"];
m28_19 [cluster="System.Type.GetMethod(string, System.Reflection.BindingFlags)", file="SecurityPortfolioManagerTests.cs", label="Entry System.Type.GetMethod(string, System.Reflection.BindingFlags)", span="0-0"];
m28_24 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="104-104"];
m28_35 [cluster="QuantConnect.Tests.Brokerages.SecurityProvider.SecurityProvider()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Brokerages.SecurityProvider.SecurityProvider()", span="33-33"];
m28_43 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="449-449"];
m28_17 [cluster="Unk.IsTrue", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.IsTrue", span=""];
m28_42 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.OrderProvider(System.Collections.Generic.IList<QuantConnect.Orders.Order>)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.OrderProvider(System.Collections.Generic.IList<QuantConnect.Orders.Order>)", span="32-32"];
m28_16 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.GetBrokerage()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.GetBrokerage()", span="61-61"];
m28_25 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.GetBrokerage()", file="SecurityPortfolioManagerTests.cs", label="InteractiveBrokersGatewayRunner.Start(Config.Get(''ib-controller-dir''),\r\n                Config.Get(''ib-tws-dir''),\r\n                Config.Get(''ib-user-name''),\r\n                Config.Get(''ib-password''),\r\n                Config.Get(''ib-trading-mode''),\r\n                Config.GetBool(''ib-use-tws'')\r\n                )", span="63-69"];
m28_26 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.GetBrokerage()", file="SecurityPortfolioManagerTests.cs", label="var securityProvider = new SecurityProvider()", span="72-72"];
m28_27 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.GetBrokerage()", file="SecurityPortfolioManagerTests.cs", label="securityProvider[Symbols.USDJPY] = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork),\r\n                new SubscriptionDataConfig(typeof(TradeBar), Symbols.USDJPY, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, false, false, false),\r\n                new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="73-75"];
m28_28 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.GetBrokerage()", file="SecurityPortfolioManagerTests.cs", label="var brokerage = new InteractiveBrokersBrokerage(new OrderProvider(_orders), securityProvider)", span="77-77"];
m28_29 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.GetBrokerage()", file="SecurityPortfolioManagerTests.cs", label="brokerage.Connect()", span="78-78"];
m28_30 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.GetBrokerage()", file="SecurityPortfolioManagerTests.cs", label="return brokerage;", span="80-80"];
m28_31 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.GetBrokerage()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests.GetBrokerage()", span="61-61"];
m28_21 [cluster="System.Console.WriteLine(string, object, object)", file="SecurityPortfolioManagerTests.cs", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
m28_22 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="635-635"];
m28_37 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m28_36 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m28_40 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m28_20 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="SecurityPortfolioManagerTests.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m28_39 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m28_32 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m28_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m28_44 [file="SecurityPortfolioManagerTests.cs", label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageAdditionalTests", span=""];
m30_3 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="Entry QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", span="55-55"];
m30_4 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="decimal marginBuffer = 0.10m", span="58-58"];
m30_5 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="totalMargin <= netLiquidationValue * (1 + marginBuffer)", span="60-60"];
m30_7 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="!security.Holdings.Invested", span="65-65"];
m30_9 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="security.QuoteCurrency.ConversionRate == 0m", span="70-70"];
m30_11 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="var deltaInQuoteCurrency = (totalMargin - netLiquidationValue) / security.QuoteCurrency.ConversionRate", span="77-77"];
m30_12 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="var unitPriceInQuoteCurrency = security.Price * security.SymbolProperties.ContractMultiplier", span="80-80"];
m30_13 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="var quantity = Math.Round(deltaInQuoteCurrency / unitPriceInQuoteCurrency, MidpointRounding.AwayFromZero) / maintenanceMarginRequirement", span="81-81"];
m30_14 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="quantity = Math.Max(security.SymbolProperties.LotSize, Math.Min(security.Holdings.AbsoluteQuantity, quantity))", span="84-84"];
m30_15 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="security.Holdings.IsLong", span="85-85"];
m30_17 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="return new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, quantity, 0, 0, security.LocalTime.ConvertToUtc(security.Exchange.TimeZone), ''Margin Call'');", span="91-91"];
m30_6 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="return null;", span="62-62"];
m30_8 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="return null;", span="67-67"];
m30_10 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="return null;", span="73-73"];
m30_16 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="quantity *= -1", span="88-88"];
m30_18 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SpreadSlippageModel.cs", label="Exit QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", span="55-55"];
m30_24 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="Entry QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="100-100"];
m30_25 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="Portfolio.MarginRemaining >= 0", span="103-103"];
m30_28 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="var ordersWithSecurities = generatedMarginCallOrders.ToDictionary(x => x, x => Portfolio[x.Symbol])", span="110-110"];
m30_26 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="return new List<OrderTicket>();", span="105-105"];
m30_27 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="var executedOrders = new List<OrderTicket>()", span="109-109"];
m30_33 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="executedOrders.Add(ticket)", span="116-116"];
m30_35 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="return executedOrders;", span="124-124"];
m30_29 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="var orderedByLosers = ordersWithSecurities.OrderBy(x => x.Value.UnrealizedProfit).Select(x => x.Key)", span="111-111"];
m30_30 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label=orderedByLosers, span="112-112"];
m30_31 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="var ticket = Portfolio.Transactions.AddOrder(request)", span="114-114"];
m30_32 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="Portfolio.Transactions.WaitForOrder(request.OrderId)", span="115-115"];
m30_34 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="Portfolio.MarginRemaining >= 0", span="119-119"];
m30_36 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="SpreadSlippageModel.cs", label="Exit QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="100-100"];
m30_21 [cluster="System.Math.Max(decimal, decimal)", file="SpreadSlippageModel.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m30_20 [cluster="System.Math.Min(decimal, decimal)", file="SpreadSlippageModel.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m30_22 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="SpreadSlippageModel.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m30_41 [cluster="Unk.AddOrder", file="SpreadSlippageModel.cs", label="Entry Unk.AddOrder", span=""];
m30_37 [cluster="System.Collections.Generic.List<T>.List()", file="SpreadSlippageModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m30_19 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="SpreadSlippageModel.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m30_39 [cluster="Unk.OrderBy", file="SpreadSlippageModel.cs", label="Entry Unk.OrderBy", span=""];
m30_42 [cluster="Unk.WaitForOrder", file="SpreadSlippageModel.cs", label="Entry Unk.WaitForOrder", span=""];
m30_40 [cluster="Unk.Select", file="SpreadSlippageModel.cs", label="Entry Unk.Select", span=""];
m30_38 [cluster="Unk.ToDictionary", file="SpreadSlippageModel.cs", label="Entry Unk.ToDictionary", span=""];
m30_23 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="SpreadSlippageModel.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m30_0 [cluster="QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="SpreadSlippageModel.cs", label="Entry QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", span="41-41"];
m30_2 [cluster="QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="SpreadSlippageModel.cs", label="Exit QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", span="41-41"];
m30_53 [cluster="lambda expression", file="SpreadSlippageModel.cs", label="Entry lambda expression", span="111-111"];
m30_44 [cluster="lambda expression", file="SpreadSlippageModel.cs", label="Entry lambda expression", span="110-110"];
m30_47 [cluster="lambda expression", file="SpreadSlippageModel.cs", label="Entry lambda expression", span="110-110"];
m30_50 [cluster="lambda expression", file="SpreadSlippageModel.cs", label="Entry lambda expression", span="111-111"];
m30_45 [cluster="lambda expression", file="SpreadSlippageModel.cs", label=x, span="110-110"];
m30_46 [cluster="lambda expression", file="SpreadSlippageModel.cs", label="Exit lambda expression", span="110-110"];
m30_48 [cluster="lambda expression", file="SpreadSlippageModel.cs", label="Portfolio[x.Symbol]", span="110-110"];
m30_49 [cluster="lambda expression", file="SpreadSlippageModel.cs", label="Exit lambda expression", span="110-110"];
m30_51 [cluster="lambda expression", file="SpreadSlippageModel.cs", label="x.Value.UnrealizedProfit", span="111-111"];
m30_52 [cluster="lambda expression", file="SpreadSlippageModel.cs", label="Exit lambda expression", span="111-111"];
m30_54 [cluster="lambda expression", file="SpreadSlippageModel.cs", label="x.Key", span="111-111"];
m30_55 [cluster="lambda expression", file="SpreadSlippageModel.cs", label="Exit lambda expression", span="111-111"];
m30_56 [file="SpreadSlippageModel.cs", label="QuantConnect.Securities.DefaultMarginCallModel", span=""];
m32_8 [cluster="System.Math.Round(double, int)", file="TestResultHandler.cs", label="Entry System.Math.Round(double, int)", span="0-0"];
m32_4 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="TestResultHandler.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="302-302"];
m32_9 [cluster="QuantConnect.AlphaRuntimeStatistics.SetDate(System.DateTime)", file="TestResultHandler.cs", label="Entry QuantConnect.AlphaRuntimeStatistics.SetDate(System.DateTime)", span="105-105"];
m32_10 [cluster="QuantConnect.AlphaRuntimeStatistics.SetDate(System.DateTime)", file="TestResultHandler.cs", label="_daysCompleted = (now - _startDate).TotalDays", span="107-107"];
m32_11 [cluster="QuantConnect.AlphaRuntimeStatistics.SetDate(System.DateTime)", file="TestResultHandler.cs", label="Exit QuantConnect.AlphaRuntimeStatistics.SetDate(System.DateTime)", span="105-105"];
m32_0 [cluster="QuantConnect.AlphaRuntimeStatistics.ToDictionary()", file="TestResultHandler.cs", label="Entry QuantConnect.AlphaRuntimeStatistics.ToDictionary()", span="80-80"];
m32_1 [cluster="QuantConnect.AlphaRuntimeStatistics.ToDictionary()", file="TestResultHandler.cs", label="var accountCurrencySymbol = Currencies.GetCurrencySymbol(CashBook.AccountCurrency)", span="82-82"];
m32_2 [cluster="QuantConnect.AlphaRuntimeStatistics.ToDictionary()", file="TestResultHandler.cs", label="return new Dictionary<string, string>\r\n            {\r\n                {''Total Insights Generated'', $''{TotalInsightsGenerated}''},\r\n                {''Total Insights Closed'', $''{TotalInsightsClosed}''},\r\n                {''Total Insights Analysis Completed'', $''{TotalInsightsAnalysisCompleted}''},\r\n                {''Long Insight Count'', $''{LongCount}''},\r\n                {''Short Insight Count'', $''{ShortCount}''},\r\n                {''Long/Short Ratio'', $''{Math.Round(100*LongShortRatio, 2)}%''},\r\n                {''Estimated Monthly Alpha Value'', $''{accountCurrencySymbol}{EstimatedMonthlyAlphaValue.SmartRounding()}''},\r\n                {''Total Accumulated Estimated Alpha Value'', $''{accountCurrencySymbol}{TotalAccumulatedEstimatedAlphaValue.SmartRounding()}''},\r\n                {''Mean Population Estimated Insight Value'', $''{accountCurrencySymbol}{MeanPopulationEstimatedInsightValue.SmartRounding()}''},\r\n                {''Mean Population Direction'', $''{Math.Round(100 * MeanPopulationScore.Direction, 4)}%''},\r\n                {''Mean Population Magnitude'', $''{Math.Round(100 * MeanPopulationScore.Magnitude, 4)}%''},\r\n                {''Rolling Averaged Population Direction'', $''{Math.Round(100 * RollingAveragedPopulationScore.Direction, 4)}%''},\r\n                {''Rolling Averaged Population Magnitude'', $''{Math.Round(100 * RollingAveragedPopulationScore.Magnitude, 4)}%''},\r\n            };", span="83-98"];
m32_3 [cluster="QuantConnect.AlphaRuntimeStatistics.ToDictionary()", file="TestResultHandler.cs", label="Exit QuantConnect.AlphaRuntimeStatistics.ToDictionary()", span="80-80"];
m32_12 [cluster="QuantConnect.AlphaRuntimeStatistics.SetStartDate(System.DateTime)", file="TestResultHandler.cs", label="Entry QuantConnect.AlphaRuntimeStatistics.SetStartDate(System.DateTime)", span="114-114"];
m32_13 [cluster="QuantConnect.AlphaRuntimeStatistics.SetStartDate(System.DateTime)", file="TestResultHandler.cs", label="_startDate = algorithmStartDate", span="116-116"];
m32_14 [cluster="QuantConnect.AlphaRuntimeStatistics.SetStartDate(System.DateTime)", file="TestResultHandler.cs", label="Exit QuantConnect.AlphaRuntimeStatistics.SetStartDate(System.DateTime)", span="114-114"];
m32_6 [cluster="System.Math.Round(decimal, int)", file="TestResultHandler.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m32_7 [cluster="decimal.SmartRounding()", file="TestResultHandler.cs", label="Entry decimal.SmartRounding()", span="209-209"];
m32_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TestResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m32_15 [file="TestResultHandler.cs", label="QuantConnect.AlphaRuntimeStatistics", span=""];
m33_79 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m33_82 [cluster="QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", span="35-35"];
m33_84 [cluster="QuantConnect.Data.Market.Splits.Splits(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Splits.Splits(System.DateTime)", span="36-36"];
m33_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="79-79"];
m33_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Time = time", span="81-81"];
m33_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Data = data", span="82-82"];
m33_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Slice = slice", span="83-83"];
m33_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="CustomData = customData", span="84-84"];
m33_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="DataPointCount = dataPointCount", span="85-85"];
m33_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="CashBookUpdateData = cashBookUpdateData", span="86-86"];
m33_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="SecuritiesUpdateData = securitiesUpdateData", span="87-87"];
m33_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="ConsolidatorUpdateData = consolidatorUpdateData", span="88-88"];
m33_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="SecurityChanges = securityChanges", span="89-89"];
m33_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="79-79"];
m33_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="101-101"];
m33_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="int count = 0", span="103-103"];
m33_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var allDataForAlgorithm = new List<BaseData>(data.Count)", span="107-107"];
m33_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var cash = new List<KeyValuePair<Cash, BaseData>>(cashBook.Count)", span="108-108"];
m33_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cashBook.Values", span="111-111"];
m33_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var algorithmTime = utcDateTime.ConvertFromUtc(algorithmTimeZone)", span="121-121"];
m33_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label=data, span="129-129"];
m33_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label=cashBook, span="213-213"];
m33_75 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="return new TimeSlice(utcDateTime, count, slice, data, cash, security, consolidator, custom, changes);", span="228-228"];
m33_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var security = new List<KeyValuePair<Security, BaseData>>()", span="104-104"];
m33_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="count += ((BaseDataCollection) list[0]).Data.Count", span="137-137"];
m33_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="count += list.Count", span="141-141"];
m33_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var custom = new List<KeyValuePair<Security, List<BaseData>>>()", span="105-105"];
m33_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="security.Add(new KeyValuePair<Security, BaseData>(kvp.Key, update))", span="222-222"];
m33_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var consolidator = new List<KeyValuePair<SubscriptionDataConfig, List<BaseData>>>()", span="106-106"];
m33_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="custom.Add(kvp)", span="156-156"];
m33_73 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="consolidator.Add(new KeyValuePair<SubscriptionDataConfig, List<BaseData>>(kvp.Key.SubscriptionDataConfig, consolidatorUpdate))", span="223-223"];
m33_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="allDataForAlgorithm.Add(baseData)", span="152-152"];
m33_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var cashSecurities = new HashSet<Symbol>()", span="110-110"];
m33_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cash.Add(new KeyValuePair<Cash, BaseData>(cashKvp.Value, update))", span="217-217"];
m33_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cashSecurities.Add(cashItem.SecuritySymbol)", span="113-113"];
m33_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="update != null && cashSecurities.Contains(kvp.Key.Symbol)", span="211-211"];
m33_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Split split", span="116-116"];
m33_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Dividend dividend", span="117-117"];
m33_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Delisting delisting", span="118-118"];
m33_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="SymbolChangedEvent symbolChange", span="119-119"];
m33_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var tradeBars = new TradeBars(algorithmTime)", span="122-122"];
m33_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var ticks = new Ticks(algorithmTime)", span="123-123"];
m33_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var splits = new Splits(algorithmTime)", span="124-124"];
m33_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var dividends = new Dividends(algorithmTime)", span="125-125"];
m33_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var delistings = new Delistings(algorithmTime)", span="126-126"];
m33_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var symbolChanges = new SymbolChangedEvents(algorithmTime)", span="127-127"];
m33_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="tradeBars[symbol] = (TradeBar) baseData", span="177-177"];
m33_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!ticks.TryGetValue(symbol, out ticksList)", span="168-168"];
m33_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="ticks[symbol] = ticksList", span="171-171"];
m33_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="splits[symbol] = split", span="198-198"];
m33_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="dividends[symbol] = dividend", span="194-194"];
m33_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="delistings[symbol] = delisting", span="190-190"];
m33_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="symbolChanges[kvp.Key.SubscriptionDataConfig.Symbol] = symbolChange", span="203-203"];
m33_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var list = kvp.Value", span="131-131"];
m33_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var symbol = kvp.Key.Symbol", span="132-132"];
m33_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="list.Count == 1 && list[0] is BaseDataCollection", span="135-135"];
m33_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var consolidatorUpdate = new List<BaseData>(list.Count)", span="145-145"];
m33_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="i < list.Count", span="146-146"];
m33_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var baseData = list[i]", span="148-148"];
m33_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!kvp.Key.SubscriptionDataConfig.IsInternalFeed", span="149-149"];
m33_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="BaseData update = null", span="144-144"];
m33_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="int i = 0", span="146-146"];
m33_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="consolidatorUpdate.Add(baseData)", span="181-181"];
m33_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="i++", span="146-146"];
m33_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="baseData.DataType != MarketDataType.Auxiliary", span="160-160"];
m33_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="baseData.DataType == MarketDataType.Tick", span="165-165"];
m33_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="ticksList = new List<Tick> {(Tick) baseData}", span="170-170"];
m33_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="ticksList.Add((Tick) baseData)", span="173-173"];
m33_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="baseData.DataType == MarketDataType.TradeBar", span="175-175"];
m33_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="update = baseData", span="185-185"];
m33_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(delisting = baseData as Delisting) != null", span="188-188"];
m33_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(dividend = baseData as Dividend) != null", span="192-192"];
m33_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(split = baseData as Split) != null", span="196-196"];
m33_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(symbolChange = baseData as SymbolChangedEvent) != null", span="200-200"];
m33_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="kvp.Key.SubscriptionDataConfig.IsCustomData", span="153-153"];
m33_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!kvp.Key.SubscriptionDataConfig.IsInternalFeed", span="162-162"];
m33_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="List<Tick> ticksList", span="167-167"];
m33_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cashKvp.Value.SecuritySymbol == kvp.Key.Symbol", span="215-215"];
m33_76 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="101-101"];
m33_86 [cluster="QuantConnect.Data.Market.Delistings.Delistings(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Delistings.Delistings(System.DateTime)", span="36-36"];
m33_91 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TimeSlice.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m33_89 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m33_77 [cluster="System.Collections.Generic.List<T>.List()", file="TimeSlice.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m33_83 [cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="37-37"];
m33_87 [cluster="QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents(System.DateTime)", span="36-36"];
m33_78 [cluster="System.Collections.Generic.List<T>.List(int)", file="TimeSlice.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m33_92 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", span="156-156"];
m33_85 [cluster="QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", span="36-36"];
m33_80 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m33_90 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m33_81 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="TimeSlice.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="437-437"];
m33_93 [file="TimeSlice.cs", label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", span=""];
d254 -> d257  [color=green, key=1, label="lambda expression", style=dashed];
d254 -> d260  [color=green, key=1, label="lambda expression", style=dashed];
d326 -> d262  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d116  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d133  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d161  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d168  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d170  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d174  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d177  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d186  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d192  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d194  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d198  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d233  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d251  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d238  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d244  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d245  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d283  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d286  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d294  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d298  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d303  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d312  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d316  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d318  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d326 -> d324  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d47 -> d265  [color=darkseagreen4, key=1, label="bool?", style=dashed];
d47 -> d267  [color=darkseagreen4, key=1, label="bool?", style=dashed];
d260 -> d262  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
d261 -> d269  [color=darkseagreen4, key=1, label=requests, style=dashed];
d261 -> d270  [color=darkseagreen4, key=1, label=requests, style=dashed];
d263 -> d269  [color=darkseagreen4, key=1, label=request, style=dashed];
d272 -> d298  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d272 -> d299  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d272 -> d303  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d272 -> d312  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d66 -> d74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d75 -> d80  [color=darkseagreen4, key=1, label=config, style=dashed];
d78 -> d80  [color=darkseagreen4, key=1, label=res, style=dashed];
d67 -> d89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d92 -> d95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d96 -> d99  [color=darkseagreen4, key=1, label=config, style=dashed];
d93 -> d101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d114 -> d116  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d129 -> d139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d131 -> d133  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d147 -> d154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d181 -> d186  [color=darkseagreen4, key=1, label=exchange, style=dashed];
d211 -> d213  [color=darkseagreen4, key=1, label=history, style=dashed];
d236 -> d250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d236 -> d245  [color=darkseagreen4, key=1, label=reqs, style=dashed];
d274 -> d276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d274 -> d279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d281 -> d283  [color=darkseagreen4, key=1, label=start, style=dashed];
d281 -> d286  [color=darkseagreen4, key=1, label=start, style=dashed];
d282 -> d286  [color=darkseagreen4, key=1, label=end, style=dashed];
d283 -> d285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d300 -> d303  [color=darkseagreen4, key=1, label=resolution, style=dashed];
d300 -> d312  [color=darkseagreen4, key=1, label=resolution, style=dashed];
d301 -> d303  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
d301 -> d312  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
d303 -> d311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d299 -> d299  [color=darkseagreen4, key=1, label=sub, style=dashed];
d299 -> d308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d45 -> d283  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d45 -> d286  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d57 -> d174  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
d64 -> d99  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d83 -> d322  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d83 -> d324  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d83 -> d323  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d329 -> d99  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d330 -> d99  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d331 -> d99  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d107 -> d150  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d107 -> d148  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d108 -> d116  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d121 -> d133  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d121 -> d124  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d121 -> d130  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d126 -> d130  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
d144 -> d148  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
d157 -> d161  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d164 -> d168  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d188 -> d316  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d188 -> d318  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d196 -> d245  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
d197 -> d204  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
d218 -> d233  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
d235 -> d242  [color=darkseagreen4, key=1, label=sentMessage, style=dashed];
d279 -> d283  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d337 -> d283  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d337 -> d286  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d339 -> d286  [color=darkseagreen4, key=1, label=start, style=dashed];
d340 -> d286  [color=darkseagreen4, key=1, label=end, style=dashed];
d341 -> d312  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d342 -> d312  [color=darkseagreen4, key=1, label=resolution, style=dashed];
d343 -> d312  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
d335 -> d265  [color=darkseagreen4, key=1, label="bool?", style=dashed];
d336 -> d267  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m1_7 -> m1_18  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m1_8 -> m1_15  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_9 -> m1_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_14 -> m1_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_31 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed", style=dashed];
m1_31 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed", style=dashed];
m2_223 -> m2_228  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_196 -> m2_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_196 -> m2_204  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_196 -> m2_207  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_196 -> m2_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_205 -> m2_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_206 -> m2_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_121 -> m2_146  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
m2_121 -> m2_153  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_143 -> m2_153  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m2_144 -> m2_153  [color=darkseagreen4, key=1, label=key, style=dashed];
m2_150 -> m2_153  [color=darkseagreen4, key=1, label=key, style=dashed];
m2_272 -> m2_274  [color=darkseagreen4, key=1, label=logURL, style=dashed];
m2_239 -> m2_241  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_239 -> m2_242  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_239 -> m2_243  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_239 -> m2_244  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_239 -> m2_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_30 -> m2_32  [color=darkseagreen4, key=1, label=resampleMinutes, style=dashed];
m2_331 -> m2_333  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_332 -> m2_335  [color=darkseagreen4, key=1, label=time, style=dashed];
m2_332 -> m2_338  [color=darkseagreen4, key=1, label=time, style=dashed];
m2_339 -> m2_351  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_341 -> m2_354  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_343 -> m2_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_85 -> m2_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_85 -> m2_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_85 -> m2_89  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m2_95 -> m2_98  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
m2_103 -> m2_106  [color=darkseagreen4, key=1, label=complete, style=dashed];
m2_39 -> m2_49  [color=darkseagreen4, key=1, label=lastMessage, style=dashed];
m2_45 -> m2_62  [color=darkseagreen4, key=1, label=packet, style=dashed];
m2_45 -> m2_63  [color=darkseagreen4, key=1, label=packet, style=dashed];
m2_48 -> m2_50  [color=darkseagreen4, key=1, label=debug, style=dashed];
m2_59 -> m2_61  [color=darkseagreen4, key=1, label=handled, style=dashed];
m2_162 -> m2_165  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_260 -> m2_262  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Chart>", style=dashed];
m2_262 -> m2_264  [color=darkseagreen4, key=1, label=update, style=dashed];
m2_262 -> m2_265  [color=darkseagreen4, key=1, label=update, style=dashed];
m2_262 -> m2_266  [color=darkseagreen4, key=1, label=update, style=dashed];
m2_262 -> m2_267  [color=darkseagreen4, key=1, label=update, style=dashed];
m2_262 -> m2_268  [color=darkseagreen4, key=1, label=update, style=dashed];
m2_265 -> m2_267  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_265 -> m2_268  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_184 -> m2_186  [color=darkseagreen4, key=1, label=debug, style=dashed];
m2_185 -> m2_187  [color=darkseagreen4, key=1, label=error, style=dashed];
m2_179 -> m2_181  [color=darkseagreen4, key=1, label=types, style=dashed];
m2_179 -> m2_182  [color=darkseagreen4, key=1, label=types, style=dashed];
m2_179 -> m2_183  [color=darkseagreen4, key=1, label=types, style=dashed];
m2_180 -> m2_182  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_277 -> m2_310  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_277 -> m2_318  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_299 -> m2_317  [color=darkseagreen4, key=1, label=key, style=dashed];
m2_290 -> m2_302  [color=darkseagreen4, key=1, label=logLength, style=dashed];
m2_290 -> m2_318  [color=darkseagreen4, key=1, label=logLength, style=dashed];
m2_300 -> m2_318  [color=darkseagreen4, key=1, label=remoteUrl, style=dashed];
m2_300 -> m2_321  [color=darkseagreen4, key=1, label=remoteUrl, style=dashed];
m2_300 -> m2_322  [color=darkseagreen4, key=1, label=remoteUrl, style=dashed];
m2_304 -> m2_318  [color=darkseagreen4, key=1, label=logLength, style=dashed];
m2_296 -> m2_302  [color=darkseagreen4, key=1, label=logRemaining, style=dashed];
m2_305 -> m2_309  [color=darkseagreen4, key=1, label=btMax, style=dashed];
m2_306 -> m2_309  [color=darkseagreen4, key=1, label=dyMax, style=dashed];
m2_297 -> m2_318  [color=darkseagreen4, key=1, label=hitLimit, style=dashed];
m2_298 -> m2_317  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m2_303 -> m2_317  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m2_315 -> m2_317  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m2_316 -> m2_318  [color=darkseagreen4, key=1, label=hitLimit, style=dashed];
m2_122 -> m2_130  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, QuantConnect.Chart>", style=dashed];
m2_129 -> m2_134  [color=darkseagreen4, key=1, label=splitPackets, style=dashed];
m2_131 -> m2_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_232 -> m2_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_360 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_82  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_96  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_104  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_106  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_109  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_145  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_153  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_163  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_165  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_176  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_180  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_183  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_197  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_201  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_203  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_204  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_207  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_208  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_217  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_220  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_228  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_234  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_240  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_241  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_242  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_243  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_244  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_245  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_251  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_255  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_258  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_261  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_263  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_264  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_266  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_267  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_268  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_274  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_284  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_291  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_301  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_309  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_313  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_317  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_318  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_333  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_335  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_336  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_337  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_338  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_339  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_352  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_340  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_341  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_355  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_342  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_343  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_358  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_360 -> m2_344  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m3_11 -> m3_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m3_147 -> m3_149  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_147 -> m3_150  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m3_147 -> m3_151  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_147 -> m3_152  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_154 -> m3_156  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_154 -> m3_157  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m3_154 -> m3_158  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_154 -> m3_159  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_161 -> m3_163  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_161 -> m3_164  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m3_161 -> m3_165  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_161 -> m3_166  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_168 -> m3_170  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_168 -> m3_171  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m3_168 -> m3_172  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_168 -> m3_173  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_175 -> m3_177  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_175 -> m3_178  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m3_175 -> m3_179  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_175 -> m3_180  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_182 -> m3_184  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_182 -> m3_185  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m3_182 -> m3_186  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_182 -> m3_187  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_189 -> m3_191  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_189 -> m3_192  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m3_189 -> m3_193  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_189 -> m3_194  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_227 -> m3_260  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m3_227 -> m3_263  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m3_227 -> m3_265  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m3_227 -> m3_268  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m3_227 -> m3_272  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m3_227 -> m3_274  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m3_82 -> m3_86  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m3_84 -> m3_88  [color=darkseagreen4, key=1, label=source, style=dashed];
m3_85 -> m3_88  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_214 -> m3_248  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_31 -> m3_35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m3_31 -> m3_36  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m3_31 -> m3_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m3_31 -> m3_38  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m3_31 -> m3_34  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m3_33 -> m3_35  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m3_33 -> m3_36  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m3_33 -> m3_37  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m3_33 -> m3_38  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m3_33 -> m3_39  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m3_33 -> m3_50  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m3_33 -> m3_55  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m3_40 -> m3_42  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_40 -> m3_43  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_40 -> m3_44  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_40 -> m3_45  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_40 -> m3_46  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_40 -> m3_47  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_40 -> m3_48  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_40 -> m3_49  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_41 -> m3_43  [color=darkseagreen4, key=1, label=actual, style=dashed];
m3_41 -> m3_44  [color=darkseagreen4, key=1, label=actual, style=dashed];
m3_41 -> m3_45  [color=darkseagreen4, key=1, label=actual, style=dashed];
m3_41 -> m3_46  [color=darkseagreen4, key=1, label=actual, style=dashed];
m3_41 -> m3_47  [color=darkseagreen4, key=1, label=actual, style=dashed];
m3_41 -> m3_48  [color=darkseagreen4, key=1, label=actual, style=dashed];
m3_41 -> m3_49  [color=darkseagreen4, key=1, label=actual, style=dashed];
m3_51 -> m3_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_51 -> m3_53  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_52 -> m3_54  [color=darkseagreen4, key=1, label=actual, style=dashed];
m3_56 -> m3_60  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_56 -> m3_61  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_56 -> m3_58  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_56 -> m3_59  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_57 -> m3_60  [color=darkseagreen4, key=1, label=actual, style=dashed];
m3_57 -> m3_61  [color=darkseagreen4, key=1, label=actual, style=dashed];
m3_57 -> m3_59  [color=darkseagreen4, key=1, label=actual, style=dashed];
m3_21 -> m3_23  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m3_21 -> m3_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m3_21 -> m3_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m3_22 -> m3_25  [color=darkseagreen4, key=1, label=line, style=dashed];
m3_22 -> m3_27  [color=darkseagreen4, key=1, label=line, style=dashed];
m3_70 -> m3_76  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m3_72 -> m3_76  [color=darkseagreen4, key=1, label=normalizeZipFilePath, style=dashed];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m3_16 -> m3_18  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m3_91 -> m3_95  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m3_91 -> m3_96  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m3_94 -> m3_101  [color=darkseagreen4, key=1, label=tradeBarType, style=dashed];
m3_94 -> m3_102  [color=darkseagreen4, key=1, label=tradeBarType, style=dashed];
m3_92 -> m3_97  [color=darkseagreen4, key=1, label=openInterestType, style=dashed];
m3_92 -> m3_98  [color=darkseagreen4, key=1, label=openInterestType, style=dashed];
m3_93 -> m3_99  [color=darkseagreen4, key=1, label=quoteBarType, style=dashed];
m3_93 -> m3_100  [color=darkseagreen4, key=1, label=quoteBarType, style=dashed];
m3_224 -> m3_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_6 -> m3_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m3_67 -> m3_202  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m3_67 -> m3_203  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m3_67 -> m3_204  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m3_67 -> m3_205  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m3_67 -> m3_200  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m3_210 -> m3_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_279 -> m3_272  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m6_69 -> m6_72  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_69 -> m6_73  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_65 -> m6_76  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_65 -> m6_73  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_67 -> m6_72  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m6_71 -> m6_73  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_236 -> m6_238  [color=darkseagreen4, key=1, label=entryReader, style=dashed];
m6_114 -> m6_116  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_114 -> m6_121  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_120 -> m6_122  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m6_117 -> m6_121  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_217 -> m6_221  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_217 -> m6_219  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_5 -> m6_7  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_0 -> m6_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m6_2 -> m6_11  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_3 -> m6_7  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_3 -> m6_11  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_3 -> m6_13  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_3 -> m6_14  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_10 -> m6_12  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m6_135 -> m6_138  [color=green, key=1, label=bool, style=dashed];
m6_135 -> m6_139  [color=green, key=1, label=string, style=dashed];
m6_141 -> m6_149  [color=green, key=1, label=file, style=dashed];
m6_146 -> m6_149  [color=green, key=1, label=outputFile, style=dashed];
m6_146 -> m6_148  [color=green, key=1, label=outputFile, style=dashed];
m6_31 -> m6_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>", style=dashed];
m6_33 -> m6_41  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_34 -> m6_37  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_34 -> m6_41  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_34 -> m6_43  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_34 -> m6_44  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_40 -> m6_42  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m6_294 -> m6_298  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_295 -> m6_301  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m6_296 -> m6_300  [color=darkseagreen4, key=1, label=gzipStream, style=dashed];
m6_297 -> m6_299  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m6_284 -> m6_287  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_285 -> m6_289  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m6_286 -> m6_288  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m6_161 -> m6_164  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m6_164 -> m6_166  [color=darkseagreen4, key=1, label=file, style=dashed];
m6_163 -> m6_170  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_162 -> m6_168  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m6_162 -> m6_170  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m6_245 -> m6_247  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_244 -> m6_247  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m6_209 -> m6_228  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_227 -> m6_232  [color=darkseagreen4, key=1, label=zip, style=dashed];
m6_305 -> m6_310  [color=darkseagreen4, key=1, label=tar, style=dashed];
m6_307 -> m6_311  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_309 -> m6_311  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_256 -> m6_271  [color=darkseagreen4, key=1, label=files, style=dashed];
m6_256 -> m6_274  [color=darkseagreen4, key=1, label=files, style=dashed];
m6_257 -> m6_259  [color=darkseagreen4, key=1, label=slash, style=dashed];
m6_269 -> m6_273  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m6_268 -> m6_273  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_124 -> m6_126  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_124 -> m6_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_176 -> m6_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_176 -> m6_188  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_176 -> m6_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_178 -> m6_192  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m6_180 -> m6_184  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m6_180 -> m6_185  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m6_180 -> m6_192  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m6_177 -> m6_191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_181 -> m6_186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_181 -> m6_187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_199 -> m6_201  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_199 -> m6_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_50 -> m6_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m6_51 -> m6_54  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_52 -> m6_56  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_88 -> m6_103  [color=darkseagreen4, key=1, label=zipPath, style=dashed];
m6_84 -> m6_99  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_84 -> m6_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_94 -> m6_96  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m6_86 -> m6_95  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_89 -> m6_91  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_89 -> m6_95  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_89 -> m6_97  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_89 -> m6_98  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_319 -> m6_322  [color=darkseagreen4, key=1, label=gzip, style=dashed];
m6_321 -> m6_329  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m6_321 -> m6_331  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m6_326 -> m6_330  [color=darkseagreen4, key=1, label=tarEntry, style=dashed];
m6_324 -> m6_329  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m6_324 -> m6_331  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m6_328 -> m6_330  [color=darkseagreen4, key=1, label=stream, style=dashed];
m8_4 -> m8_6  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m8_4 -> m8_7  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m10_48 -> m10_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_48 -> m10_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_48 -> m10_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_48 -> m10_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_48 -> m10_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_95 -> m10_95  [color=darkseagreen4, key=1, label=pair, style=dashed];
m10_119 -> m10_121  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_120 -> m10_123  [color=darkseagreen4, key=1, label=time, style=dashed];
m10_120 -> m10_126  [color=darkseagreen4, key=1, label=time, style=dashed];
m10_127 -> m10_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_129 -> m10_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_131 -> m10_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_134 -> m10_134  [color=darkseagreen4, key=1, label=pair, style=dashed];
m10_80 -> m10_82  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Chart>", style=dashed];
m10_82 -> m10_84  [color=darkseagreen4, key=1, label=update, style=dashed];
m10_82 -> m10_85  [color=darkseagreen4, key=1, label=update, style=dashed];
m10_82 -> m10_86  [color=darkseagreen4, key=1, label=update, style=dashed];
m10_82 -> m10_87  [color=darkseagreen4, key=1, label=update, style=dashed];
m10_82 -> m10_88  [color=darkseagreen4, key=1, label=update, style=dashed];
m10_85 -> m10_87  [color=darkseagreen4, key=1, label=series, style=dashed];
m10_85 -> m10_88  [color=darkseagreen4, key=1, label=series, style=dashed];
m10_150 -> m10_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_51  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_53  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_81  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_88  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_95  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_109  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_112  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_125  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_126  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_127  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_142  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_128  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_129  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_145  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_130  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_131  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_148  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_132  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_133  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m10_150 -> m10_134  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.DesktopResultHandler", style=dashed];
m11_250 -> m11_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_250 -> m11_255  [color=darkseagreen4, key=1, label=orders, style=dashed];
m11_251 -> m11_253  [color=darkseagreen4, key=1, label=path, style=dashed];
m11_254 -> m11_257  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_199 -> m11_201  [color=green, key=1, label=int, style=dashed];
m11_205 -> m11_207  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m11_205 -> m11_208  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m11_5 -> m11_28  [color=green, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_13  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_14  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_22  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_39  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_44  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_53  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_57  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_60  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_69  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_219  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_76  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_78  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_109  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_5 -> m11_110  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_28 -> m11_199  [color=green, key=1, label="lambda expression", style=dashed];
m11_18 -> m11_28  [color=green, key=1, label=algorithm, style=dashed];
m11_18 -> m11_22  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_23  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_200  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_32  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_33  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_51  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_52  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_57  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_58  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_59  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_60  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_206  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_207  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_210  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_212  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_219  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_75  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_76  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_100  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_101  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_102  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_104  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_18 -> m11_110  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_24 -> m11_28  [color=green, key=1, label=historyProvider, style=dashed];
m11_24 -> m11_26  [color=darkseagreen4, key=1, label=historyProvider, style=dashed];
m11_15 -> m11_125  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m11_15 -> m11_126  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m11_21 -> m11_26  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m11_21 -> m11_54  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m11_21 -> m11_59  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m11_21 -> m11_127  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m11_21 -> m11_129  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m11_31 -> m11_33  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m11_31 -> m11_55  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m11_36 -> m11_38  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m11_36 -> m11_39  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m11_63 -> m11_66  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m11_63 -> m11_121  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m11_63 -> m11_122  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m11_64 -> m11_67  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m11_64 -> m11_123  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m11_64 -> m11_124  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m11_65 -> m11_68  [color=darkseagreen4, key=1, label=threadRealTime, style=dashed];
m11_71 -> m11_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_80 -> m11_92  [color=darkseagreen4, key=1, label=charts, style=dashed];
m11_81 -> m11_110  [color=darkseagreen4, key=1, label=orders, style=dashed];
m11_98 -> m11_110  [color=darkseagreen4, key=1, label=statisticsResults, style=dashed];
m11_99 -> m11_103  [color=darkseagreen4, key=1, label=netReturn, style=dashed];
m11_7 -> m11_219  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m11_7 -> m11_223  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m11_61 -> m11_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m11_61 -> m11_207  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m11_61 -> m11_208  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m11_96 -> m11_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_34 -> m11_55  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m11_42 -> m11_44  [color=darkseagreen4, key=1, label=runtimeMessage, style=dashed];
m11_70 -> m11_219  [color=darkseagreen4, key=1, label=isolator, style=dashed];
m11_82 -> m11_110  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m11_85 -> m11_87  [color=darkseagreen4, key=1, label=csvTransactionsFileName, style=dashed];
m11_88 -> m11_92  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m11_107 -> m11_109  [color=darkseagreen4, key=1, label=totalSeconds, style=dashed];
m11_83 -> m11_110  [color=darkseagreen4, key=1, label=banner, style=dashed];
m11_83 -> m11_100  [color=darkseagreen4, key=1, label=banner, style=dashed];
m11_83 -> m11_101  [color=darkseagreen4, key=1, label=banner, style=dashed];
m11_83 -> m11_102  [color=darkseagreen4, key=1, label=banner, style=dashed];
m11_83 -> m11_104  [color=darkseagreen4, key=1, label=banner, style=dashed];
m11_83 -> m11_103  [color=darkseagreen4, key=1, label=banner, style=dashed];
m11_84 -> m11_110  [color=darkseagreen4, key=1, label=statisticsResults, style=dashed];
m11_9 -> m11_121  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m11_9 -> m11_122  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m11_10 -> m11_123  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m11_10 -> m11_124  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m11_89 -> m11_92  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m11_90 -> m11_92  [color=darkseagreen4, key=1, label=dailyPerformanceKey, style=dashed];
m11_172 -> m11_240  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m11_172 -> m11_241  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_237 -> m11_239  [color=darkseagreen4, key=1, label=message, style=dashed];
m11_237 -> m11_240  [color=darkseagreen4, key=1, label=message, style=dashed];
m11_237 -> m11_241  [color=darkseagreen4, key=1, label=message, style=dashed];
m11_146 -> m11_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_269 -> m11_28  [color=green, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_201  [color=green, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_219  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_109  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_110  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_113  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_114  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_115  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_116  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_130  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_132  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_234  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_236  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_239  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_240  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_269 -> m11_241  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m11_270 -> m11_200  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_270 -> m11_219  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_270 -> m11_206  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_270 -> m11_207  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_270 -> m11_210  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_270 -> m11_212  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m11_271 -> m11_219  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m11_272 -> m11_219  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m11_272 -> m11_223  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m11_273 -> m11_219  [color=darkseagreen4, key=1, label=isolator, style=dashed];
m13_0 -> m13_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m13_4 -> m13_6  [color=darkseagreen4, key=1, label=tick, style=dashed];
m13_4 -> m13_8  [color=darkseagreen4, key=1, label=tick, style=dashed];
m13_4 -> m13_10  [color=darkseagreen4, key=1, label=tick, style=dashed];
m13_4 -> m13_12  [color=darkseagreen4, key=1, label=tick, style=dashed];
m13_4 -> m13_14  [color=darkseagreen4, key=1, label=tick, style=dashed];
m13_17 -> m13_20  [color=darkseagreen4, key=1, label=bar, style=dashed];
m13_17 -> m13_22  [color=darkseagreen4, key=1, label=bar, style=dashed];
m13_17 -> m13_24  [color=darkseagreen4, key=1, label=bar, style=dashed];
m13_17 -> m13_26  [color=darkseagreen4, key=1, label=bar, style=dashed];
m13_29 -> m13_31  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m13_33 -> m13_36  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m13_33 -> m13_38  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m13_33 -> m13_40  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m13_33 -> m13_42  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m13_59 -> m13_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m13_59 -> m13_47  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m13_59 -> m13_51  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m13_59 -> m13_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m16_211 -> m16_216  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_211 -> m16_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_212 -> m16_218  [color=darkseagreen4, key=1, label=epochStartTime, style=dashed];
m16_213 -> m16_219  [color=darkseagreen4, key=1, label=epochEndTime, style=dashed];
m16_214 -> m16_216  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_214 -> m16_217  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_214 -> m16_218  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_214 -> m16_219  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_214 -> m16_221  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_76 -> m16_78  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_76 -> m16_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_77 -> m16_79  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_77 -> m16_81  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_42 -> m16_44  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_42 -> m16_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_42 -> m16_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_43 -> m16_45  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_43 -> m16_46  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_43 -> m16_48  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_170 -> m16_174  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus?", style=dashed];
m16_170 -> m16_175  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus?", style=dashed];
m16_176 -> m16_178  [color=darkseagreen4, key=1, label=epochStartTime, style=dashed];
m16_177 -> m16_179  [color=darkseagreen4, key=1, label=epochEndTime, style=dashed];
m16_173 -> m16_175  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_173 -> m16_178  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_173 -> m16_179  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_173 -> m16_181  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_69 -> m16_71  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_70 -> m16_73  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_51 -> m16_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_51 -> m16_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_51 -> m16_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_52 -> m16_54  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_52 -> m16_55  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_52 -> m16_57  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_116 -> m16_118  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_116 -> m16_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_116 -> m16_120  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_117 -> m16_119  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_117 -> m16_120  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_117 -> m16_122  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_224 -> m16_227  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_224 -> m16_228  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_224 -> m16_229  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_224 -> m16_230  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m16_224 -> m16_231  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_225 -> m16_227  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_225 -> m16_228  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_225 -> m16_229  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_225 -> m16_230  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_225 -> m16_231  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_225 -> m16_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_203 -> m16_206  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_205 -> m16_208  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_141 -> m16_143  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_142 -> m16_145  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_27 -> m16_30  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_29 -> m16_32  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_135 -> m16_138  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_125 -> m16_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_125 -> m16_128  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_126 -> m16_128  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_126 -> m16_130  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_243 -> m16_248  [color=darkseagreen4, key=1, label=path, style=dashed];
m16_246 -> m16_248  [color=darkseagreen4, key=1, label=client, style=dashed];
m16_101 -> m16_104  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_158 -> m16_160  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_158 -> m16_162  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_158 -> m16_164  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_195 -> m16_198  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_197 -> m16_200  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_107 -> m16_110  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_107 -> m16_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_109 -> m16_111  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_109 -> m16_113  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_84 -> m16_86  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_84 -> m16_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_85 -> m16_87  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_85 -> m16_89  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_37 -> m16_39  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_60 -> m16_62  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_60 -> m16_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_60 -> m16_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_61 -> m16_63  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_61 -> m16_64  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_61 -> m16_66  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_17 -> m16_20  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_94 -> m16_97  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_267 -> m16_272  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_187 -> m16_189  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_187 -> m16_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_188 -> m16_190  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_188 -> m16_192  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_148 -> m16_151  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_148 -> m16_152  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_150 -> m16_152  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_150 -> m16_154  [color=darkseagreen4, key=1, label=request, style=dashed];
m16_306 -> m16_20  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_32  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_39  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_48  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_57  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_66  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_73  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_81  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_89  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_97  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_104  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_113  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_122  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_130  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_138  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_145  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_154  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_164  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_181  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_192  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_200  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_208  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_221  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_233  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_287  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_291  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m16_306 -> m16_295  [color=darkseagreen4, key=1, label="QuantConnect.Api.Api", style=dashed];
m19_7 -> m19_9  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_7 -> m19_14  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_7 -> m19_17  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_7 -> m19_18  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_11 -> m19_14  [color=darkseagreen4, key=1, label=market, style=dashed];
m19_11 -> m19_17  [color=darkseagreen4, key=1, label=market, style=dashed];
m19_11 -> m19_18  [color=darkseagreen4, key=1, label=market, style=dashed];
m19_15 -> m19_18  [color=darkseagreen4, key=1, label=mapFile, style=dashed];
m19_22 -> m19_27  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_26 -> m19_35  [color=darkseagreen4, key=1, label=factorFile, style=dashed];
m19_26 -> m19_28  [color=darkseagreen4, key=1, label=factorFile, style=dashed];
m19_27 -> m19_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_37 -> m19_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m19_37 -> m19_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m19_37 -> m19_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m19_37 -> m19_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m19_37 -> m19_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m19_38 -> m19_35  [color=darkseagreen4, key=1, label=factorFile, style=dashed];
m20_98 -> m20_100  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m20_99 -> m20_103  [color=darkseagreen4, key=1, label=stack, style=dashed];
m20_99 -> m20_105  [color=darkseagreen4, key=1, label=stack, style=dashed];
m20_196 -> m20_198  [color=darkseagreen4, key=1, label=props, style=dashed];
m20_196 -> m20_199  [color=darkseagreen4, key=1, label=props, style=dashed];
m20_197 -> m20_230  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_85 -> m20_112  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m20_111 -> m20_121  [color=darkseagreen4, key=1, label=str, style=dashed];
m20_115 -> m20_117  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m20_115 -> m20_120  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m20_115 -> m20_122  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m20_116 -> m20_119  [color=darkseagreen4, key=1, label="out ulong", style=dashed];
m20_116 -> m20_123  [color=darkseagreen4, key=1, label="out ulong", style=dashed];
m20_118 -> m20_120  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m20_118 -> m20_122  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m20_119 -> m20_119  [color=darkseagreen4, key=1, label="out ulong", style=dashed];
m20_119 -> m20_123  [color=darkseagreen4, key=1, label="out ulong", style=dashed];
m20_203 -> m20_206  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m20_203 -> m20_208  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m20_210 -> m20_213  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_210 -> m20_215  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_0 -> m20_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_5 -> m20_226  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_6 -> m20_226  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_7 -> m20_226  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_12 -> m20_17  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_15 -> m20_227  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_16 -> m20_227  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_18 -> m20_227  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_22 -> m20_22  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_140 -> m20_143  [color=darkseagreen4, key=1, label="out QuantConnect.SecurityIdentifier", style=dashed];
m20_174 -> m20_177  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_174 -> m20_179  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_179 -> m20_229  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_24 -> m20_62  [color=darkseagreen4, key=1, label="QuantConnect.OptionRight", style=dashed];
m20_24 -> m20_77  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier?", style=dashed];
m20_64 -> m20_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_65 -> m20_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_89 -> m20_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_88 -> m20_95  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_93 -> m20_95  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_94 -> m20_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_128 -> m20_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_136 -> m20_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_144 -> m20_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_145 -> m20_163  [color=darkseagreen4, key=1, label="out System.Exception", style=dashed];
m20_146 -> m20_163  [color=darkseagreen4, key=1, label="out QuantConnect.SecurityIdentifier", style=dashed];
m20_160 -> m20_163  [color=darkseagreen4, key=1, label="out QuantConnect.SecurityIdentifier", style=dashed];
m20_150 -> m20_161  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_161 -> m20_161  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_155 -> m20_163  [color=darkseagreen4, key=1, label="out System.Exception", style=dashed];
m20_28 -> m20_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_28 -> m20_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_32 -> m20_34  [color=darkseagreen4, key=1, label=mapFile, style=dashed];
m20_33 -> m20_36  [color=darkseagreen4, key=1, label=firstDate, style=dashed];
m20_35 -> m20_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_228 -> m20_169  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_228 -> m20_172  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_228 -> m20_177  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_228 -> m20_179  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_228 -> m20_184  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_228 -> m20_197  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_228 -> m20_198  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_228 -> m20_199  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m20_229 -> m20_180  [color=darkseagreen4, key=1, label="ref QuantConnect.SecurityIdentifier", style=dashed];
m20_230 -> m20_200  [color=darkseagreen4, key=1, label="ref QuantConnect.SecurityIdentifier", style=dashed];
m20_231 -> m20_206  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m20_231 -> m20_208  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m20_231 -> m20_213  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m20_231 -> m20_215  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m20_231 -> m20_218  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m24_5 -> m24_9  [color=darkseagreen4, key=1, label=errors, style=dashed];
m24_5 -> m24_10  [color=darkseagreen4, key=1, label=errors, style=dashed];
m24_11 -> m24_13  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m26_4 -> m26_8  [color=green, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m26_5 -> m26_8  [color=green, key=1, label=denominator, style=dashed];
m27_69 -> m27_72  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_69 -> m27_75  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_69 -> m27_77  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_70 -> m27_73  [color=darkseagreen4, key=1, label=right, style=dashed];
m27_70 -> m27_79  [color=darkseagreen4, key=1, label=right, style=dashed];
m27_71 -> m27_74  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_71 -> m27_76  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_71 -> m27_78  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_71 -> m27_80  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_1 -> m27_3  [color=darkseagreen4, key=1, label=first, style=dashed];
m27_1 -> m27_8  [color=darkseagreen4, key=1, label=first, style=dashed];
m27_1 -> m27_9  [color=darkseagreen4, key=1, label=first, style=dashed];
m27_1 -> m27_11  [color=darkseagreen4, key=1, label=first, style=dashed];
m27_1 -> m27_12  [color=darkseagreen4, key=1, label=first, style=dashed];
m27_1 -> m27_15  [color=darkseagreen4, key=1, label=first, style=dashed];
m27_1 -> m27_18  [color=darkseagreen4, key=1, label=first, style=dashed];
m27_4 -> m27_8  [color=darkseagreen4, key=1, label=data1, style=dashed];
m27_5 -> m27_11  [color=darkseagreen4, key=1, label=data2, style=dashed];
m27_6 -> m27_15  [color=darkseagreen4, key=1, label=data3, style=dashed];
m27_7 -> m27_18  [color=darkseagreen4, key=1, label=data4, style=dashed];
m27_114 -> m27_117  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_114 -> m27_120  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_114 -> m27_122  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_115 -> m27_118  [color=darkseagreen4, key=1, label=right, style=dashed];
m27_115 -> m27_124  [color=darkseagreen4, key=1, label=right, style=dashed];
m27_116 -> m27_119  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_116 -> m27_121  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_116 -> m27_123  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_116 -> m27_125  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_46 -> m27_49  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_46 -> m27_50  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_46 -> m27_51  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_46 -> m27_54  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_46 -> m27_55  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_46 -> m27_58  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_46 -> m27_59  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_46 -> m27_62  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_46 -> m27_63  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_47 -> m27_49  [color=darkseagreen4, key=1, label=sma, style=dashed];
m27_47 -> m27_53  [color=darkseagreen4, key=1, label=sma, style=dashed];
m27_47 -> m27_57  [color=darkseagreen4, key=1, label=sma, style=dashed];
m27_47 -> m27_61  [color=darkseagreen4, key=1, label=sma, style=dashed];
m27_47 -> m27_65  [color=darkseagreen4, key=1, label=sma, style=dashed];
m27_47 -> m27_66  [color=darkseagreen4, key=1, label=sma, style=dashed];
m27_48 -> m27_52  [color=darkseagreen4, key=1, label=delay, style=dashed];
m27_48 -> m27_56  [color=darkseagreen4, key=1, label=delay, style=dashed];
m27_48 -> m27_60  [color=darkseagreen4, key=1, label=delay, style=dashed];
m27_48 -> m27_64  [color=darkseagreen4, key=1, label=delay, style=dashed];
m27_99 -> m27_102  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_99 -> m27_105  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_99 -> m27_107  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_100 -> m27_103  [color=darkseagreen4, key=1, label=right, style=dashed];
m27_100 -> m27_109  [color=darkseagreen4, key=1, label=right, style=dashed];
m27_101 -> m27_104  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_101 -> m27_106  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_101 -> m27_108  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_101 -> m27_110  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_84 -> m27_87  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_84 -> m27_90  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_84 -> m27_92  [color=darkseagreen4, key=1, label=left, style=dashed];
m27_85 -> m27_88  [color=darkseagreen4, key=1, label=right, style=dashed];
m27_85 -> m27_94  [color=darkseagreen4, key=1, label=right, style=dashed];
m27_86 -> m27_89  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_86 -> m27_91  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_86 -> m27_93  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_86 -> m27_95  [color=darkseagreen4, key=1, label=composite, style=dashed];
m27_30 -> m27_33  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_30 -> m27_34  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_30 -> m27_36  [color=darkseagreen4, key=1, label=identity, style=dashed];
m27_31 -> m27_43  [color=darkseagreen4, key=1, label=sma, style=dashed];
m27_31 -> m27_35  [color=darkseagreen4, key=1, label=sma, style=dashed];
m27_31 -> m27_37  [color=darkseagreen4, key=1, label=sma, style=dashed];
m27_31 -> m27_38  [color=darkseagreen4, key=1, label=sma, style=dashed];
m27_32 -> m27_43  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m27_128 -> m27_43  [color=darkseagreen4, key=1, label=sma, style=dashed];
m28_1 -> m28_12  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m28_1 -> m28_13  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m28_8 -> m28_10  [color=darkseagreen4, key=1, label=value, style=dashed];
m28_5 -> m28_7  [color=darkseagreen4, key=1, label=count, style=dashed];
m28_6 -> m28_11  [color=darkseagreen4, key=1, label=i, style=dashed];
m28_11 -> m28_11  [color=darkseagreen4, key=1, label=i, style=dashed];
m28_28 -> m28_30  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m30_3 -> m30_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m30_3 -> m30_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_3 -> m30_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_3 -> m30_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_3 -> m30_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_14 -> m30_17  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m30_28 -> m30_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_28 -> m30_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_27 -> m30_33  [color=darkseagreen4, key=1, label=executedOrders, style=dashed];
m30_27 -> m30_35  [color=darkseagreen4, key=1, label=executedOrders, style=dashed];
m30_29 -> m30_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_29 -> m30_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_30 -> m30_32  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_31 -> m30_33  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m30_56 -> m30_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m30_56 -> m30_48  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m30_56 -> m30_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m30_56 -> m30_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m32_15 -> m32_2  [color=darkseagreen4, key=1, label="QuantConnect.AlphaRuntimeStatistics", style=dashed];
m33_11 -> m33_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m33_11 -> m33_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>", style=dashed];
m33_11 -> m33_69  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m33_11 -> m33_75  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_12 -> m33_75  [color=darkseagreen4, key=1, label=count, style=dashed];
m33_16 -> m33_44  [color=darkseagreen4, key=1, label=allDataForAlgorithm, style=dashed];
m33_17 -> m33_71  [color=darkseagreen4, key=1, label=cash, style=dashed];
m33_17 -> m33_75  [color=darkseagreen4, key=1, label=cash, style=dashed];
m33_13 -> m33_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m33_13 -> m33_75  [color=darkseagreen4, key=1, label=security, style=dashed];
m33_36 -> m33_75  [color=darkseagreen4, key=1, label=count, style=dashed];
m33_37 -> m33_75  [color=darkseagreen4, key=1, label=count, style=dashed];
m33_14 -> m33_46  [color=darkseagreen4, key=1, label=custom, style=dashed];
m33_14 -> m33_75  [color=darkseagreen4, key=1, label=custom, style=dashed];
m33_72 -> m33_72  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_15 -> m33_73  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m33_15 -> m33_75  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m33_73 -> m33_73  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_18 -> m33_20  [color=darkseagreen4, key=1, label=cashSecurities, style=dashed];
m33_18 -> m33_68  [color=darkseagreen4, key=1, label=cashSecurities, style=dashed];
m33_71 -> m33_71  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m33_68 -> m33_68  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_68 -> m33_70  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_27 -> m33_51  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m33_66 -> m33_68  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_33 -> m33_35  [color=darkseagreen4, key=1, label=list, style=dashed];
m33_33 -> m33_41  [color=darkseagreen4, key=1, label=list, style=dashed];
m33_34 -> m33_43  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_34 -> m33_51  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m33_34 -> m33_68  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_39 -> m33_57  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m33_39 -> m33_73  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m33_42 -> m33_44  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m33_42 -> m33_47  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m33_42 -> m33_49  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m33_42 -> m33_54  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m33_42 -> m33_55  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m33_42 -> m33_57  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m33_43 -> m33_43  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_43 -> m33_45  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_43 -> m33_48  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_43 -> m33_68  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_38 -> m33_68  [color=darkseagreen4, key=1, label=update, style=dashed];
m33_38 -> m33_71  [color=darkseagreen4, key=1, label=update, style=dashed];
m33_38 -> m33_72  [color=darkseagreen4, key=1, label=update, style=dashed];
m33_40 -> m33_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m33_67 -> m33_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m33_52 -> m33_54  [color=darkseagreen4, key=1, label=ticksList, style=dashed];
m33_58 -> m33_68  [color=darkseagreen4, key=1, label=update, style=dashed];
m33_58 -> m33_71  [color=darkseagreen4, key=1, label=update, style=dashed];
m33_58 -> m33_72  [color=darkseagreen4, key=1, label=update, style=dashed];
m33_45 -> m33_45  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_45 -> m33_48  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_45 -> m33_68  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_48 -> m33_48  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_48 -> m33_68  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_70 -> m33_70  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m33_70 -> m33_72  [color=darkseagreen4, key=1, label=kvp, style=dashed];
}
